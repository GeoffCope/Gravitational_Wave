(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1703188,      35928]
NotebookOptionsPosition[   1637733,      34811]
NotebookOutlinePosition[   1638221,      34829]
CellTagsIndexPosition[   1638178,      34826]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Notebook for: 
Classical Measurements In Curved Space-Time by De Felice & Bini\
\>", "Title",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.8221258099932337`*^9, 3.8221258391015167`*^9}, 
   3.848260538361854*^9, 3.8760110538222513`*^9},
 TextAlignment->Center,ExpressionUUID->"7b6a8998-5f82-498b-8e1f-cf8da41c5661"],

Cell["\<\
Geoff Cope
University of Utah
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\|01040f\|01042d\|01044c\|010432\|010442\|010432\
\|010449\|010445\|01042e\|01043b\|010428 \|010432\|010442 \|01040f\|01042d\
\|01043b\|01042b
December 6, 2020\
\>", "Author",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.821729507652328*^9, 3.821729529657844*^9}, 
   3.8220480097522783`*^9, {3.822048070235491*^9, 3.822048084689715*^9}, {
   3.8225654346519403`*^9, 3.8225654361641483`*^9}, {3.8231764728567343`*^9, 
   3.823176482313031*^9}, {3.8233640113399878`*^9, 3.823364023347041*^9}, {
   3.8234229506702557`*^9, 3.823422956381791*^9}, {3.827953252419902*^9, 
   3.827953254868108*^9}, {3.851065213363542*^9, 3.8510652255731983`*^9}, {
   3.8510652620952*^9, 3.851065307413348*^9}, {3.85109882342251*^9, 
   3.851098834342609*^9}, {3.854568001368327*^9, 3.854568008660359*^9}, {
   3.88347389002417*^9, 3.883473894589753*^9}, {3.8837301880753927`*^9, 
   3.883730195343182*^9}, {3.8839033791456203`*^9, 3.883903383866851*^9}},
 TextAlignment->Center,ExpressionUUID->"22f2cf12-b136-4724-a30c-f5ff0568f659"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Hodge", " ", "dual", " ", "page", " ", "16", " ", "36", " ", "ish"}], 
     "..."}], "."}], " ", "*)"}], " "}]], "Input",
 CellChangeTimes->{{3.822135364208137*^9, 3.822135373614078*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"d75aa15c-8058-4be7-b463-6c09ed9e232d"],

Cell[BoxData[
 RowBox[{"(*", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"IMPORTANT", "!!"}], "!!"}], " ", "Be", " ", "sure", " ", "to", 
   " ", "look", " ", "at", " ", "Invar", " ", "package", " ", "of", " ", 
   "xAct", " ", "to", " ", "get", " ", "electric", " ", "and", " ", 
   "magnetic", " ", 
   RowBox[{"quantities", "!!"}]}], "\[IndentingNewLine]", "*)"}]], "Input",
 CellLabel->"In[2]:=",ExpressionUUID->"f3b891b8-75de-45db-911b-f9cc8f43b2a0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "\[IndentingNewLine]", 
   RowBox[{"See", " ", 
    RowBox[{"also", ":", "\[IndentingNewLine]", 
     RowBox[{
     "SECOND", " ", "ORDER", " ", "SCALAR", " ", "INVARIANTS", "\n", "OF", 
      " ", "THE", " ", "RIEMANN", " ", "TENSOR"}], ":", 
     RowBox[{
     "APPLICATIONS", " ", "TO", " ", "BLACK", " ", "HOLE", " ", "SPACETIMES", 
      " ", "by", " ", "Bini", " ", "et", " ", 
      RowBox[{"al", ".", " ", 
       RowBox[{"(", 
        RowBox[{
        "same", " ", "author", " ", "as", " ", "coauthor", " ", "of", " ", 
         "book"}], " "}]}]}]}]}], "*)"}], " ", "\[IndentingNewLine]", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"gr", "/", "qc"}], " ", "0302095"}], " ", "*)"}], " "}]], "Input",\

 CellLabel->"In[3]:=",ExpressionUUID->"bb54cd0a-37dc-428d-a7ca-1ae1e6b84030"],

Cell[CellGroupData[{

Cell["Hyperlink To Documentation", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.820944675605734*^9, 3.8209446931410646`*^9}, 
   3.821955302929777*^9},ExpressionUUID->"d881d030-84fa-4d0e-8877-\
538ea520e45f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<GeneralRelativityTensors Documentation and Download\>\"", ",", 
   "\[IndentingNewLine]", 
   "\"\<https://github.com/BlackHolePerturbationToolkit\>\""}], 
  "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.820944619768764*^9, 3.820944681268063*^9}, 
   3.821955302929921*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"c8723ee2-1698-4b17-af09-9ca035a466bc"],

Cell[BoxData[
 TemplateBox[{
  "\"GeneralRelativityTensors Documentation and Download\"", 
   "https://github.com/BlackHolePerturbationToolkit"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.820944653562152*^9, 3.820944681268403*^9}, 
   3.821190787690248*^9, 3.821955302930024*^9, 3.822126801469941*^9, 
   3.848260564188333*^9, 3.848260889394535*^9, 3.8839034442245617`*^9, 
   3.8839069809381037`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"0d9390c6-cf20-4967-8ed0-98161d319ee4"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Hyperlink To Book ", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.820944675605734*^9, 3.8209446931410646`*^9}, {
  3.822126022742075*^9, 3.822126033101392*^9}, {3.822126280406204*^9, 
  3.822126307133786*^9}},ExpressionUUID->"d497c31c-9e65-4aa8-89eb-\
2ae80422ae1e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Classical Measurements In Curved Spacetimes\>\"", ",", 
   "\[IndentingNewLine]", 
   "\"\<https://www.cambridge.org/core/books/classical-measurements-in-curved-\
spacetimes/DAA20E1188767CB570A4A0C60BA91485\>\""}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.820863772985091*^9, 3.820863781726883*^9}, {
   3.8220715508597193`*^9, 3.8220715663456287`*^9}, 3.822126303375123*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"90617976-c54a-4fd2-ba2a-c9a826762daf"],

Cell[BoxData[
 TemplateBox[{
  "\"Classical Measurements In Curved Spacetimes\"", 
   "https://www.cambridge.org/core/books/classical-measurements-in-curved-\
spacetimes/DAA20E1188767CB570A4A0C60BA91485"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{3.820863783390429*^9, 3.8220715688310833`*^9, 
  3.822126303375238*^9, 3.822126801507544*^9, 3.8482605642275763`*^9, 
  3.848260889672377*^9, 3.883903444238317*^9, 3.8839069809493637`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"c350938e-1fa7-4f67-9277-64b9db4352c4"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Utilities and Package Load", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.820937646765551*^9, 3.8209376725449123`*^9}, 
   3.821222771441126*^9},ExpressionUUID->"0eab23e0-be13-43e3-af1b-\
5d72d4148fa8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "Utilities`CleanSlate`"}], "\[IndentingNewLine]", 
 RowBox[{"CleanSlate", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearInOut", "[", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pdConv", "[", "f_", "]"}], ":=", 
  RowBox[{"TraditionalForm", "[", 
   RowBox[{"f", "/.", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Derivative", "[", "inds__", "]"}], "[", "g_", "]"}], "[", 
      "vars__", "]"}], "\[RuleDelayed]", 
     RowBox[{"Apply", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Defer", "[", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"g", "[", "vars", "]"}], ",", "##"}], "]"}], "]"}], "&"}], 
       ",", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "vars", "}"}], ",", 
           RowBox[{"{", "inds", "}"}]}], "}"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"var_", ",", "0"}], "}"}], "\[RuleDelayed]", 
           RowBox[{"Sequence", "[", "]"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"var_", ",", "1"}], "}"}], "\[RuleDelayed]", 
           RowBox[{"{", "var", "}"}]}]}], "}"}]}]}], "]"}]}]}], 
   "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.8209376549030037`*^9, {3.821032517164062*^9, 3.821032518258361*^9}, 
   3.821222771441304*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"7f7bd3e0-d20f-4ef6-9b77-2520547b687c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  (CleanSlate) Contexts purged: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"Global`\"\>", "}"}]}],
  SequenceForm["  (CleanSlate) Contexts purged: ", {"Global`"}],
  Editable->False]], "Print",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.820932754769992*^9, 3.820933427630714*^9, 3.820937654903143*^9, 
   3.821222771441399*^9, 3.821223504565357*^9, 3.821230727410537*^9, {
   3.821231125157721*^9, 3.821231129758642*^9}, {3.821231253536118*^9, 
   3.821231264611442*^9}, 3.821231634602747*^9, 3.821231868346754*^9, 
   3.821231993073401*^9, 3.821262378458268*^9, 3.822126801638503*^9, 
   3.822138575831335*^9, 3.8221389603315783`*^9, 3.84826056437844*^9, 
   3.8482608897997007`*^9, 3.8839034446313753`*^9, 3.883906981132771*^9},
 CellLabel->
  "During evaluation of \
In[6]:=",ExpressionUUID->"1a0cd25e-53fc-4801-9800-3ca2c926a288"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  (CleanSlate) Approximate kernel memory recovered: \"\>", 
   "\[InvisibleSpace]", "\<\"10 Kb\"\>"}],
  SequenceForm[
  "  (CleanSlate) Approximate kernel memory recovered: ", "10 Kb"],
  Editable->False]], "Print",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.820932754769992*^9, 3.820933427630714*^9, 3.820937654903143*^9, 
   3.821222771441399*^9, 3.821223504565357*^9, 3.821230727410537*^9, {
   3.821231125157721*^9, 3.821231129758642*^9}, {3.821231253536118*^9, 
   3.821231264611442*^9}, 3.821231634602747*^9, 3.821231868346754*^9, 
   3.821231993073401*^9, 3.821262378458268*^9, 3.822126801638503*^9, 
   3.822138575831335*^9, 3.8221389603315783`*^9, 3.84826056437844*^9, 
   3.8482608897997007`*^9, 3.8839034446313753`*^9, 3.883906981134021*^9},
 CellLabel->
  "During evaluation of \
In[6]:=",ExpressionUUID->"6fe5eca7-bc92-495a-ba35-175f71b6dfdb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Utilities`CleanSlate`\"\>", 
   ",", "\<\"DocumentationSearch`\"\>", ",", "\<\"ResourceLocator`\"\>", 
   ",", "\<\"NaturalLanguageProcessingLoader`\"\>", ",", "\<\"System`\"\>", 
   ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.820932754773623*^9, 3.820933427635436*^9, 3.8209376549033947`*^9, 
   3.821222771441579*^9, 3.821223504572509*^9, 3.8212307274146423`*^9, {
   3.821231125163052*^9, 3.821231129762616*^9}, {3.821231253540489*^9, 
   3.8212312646154222`*^9}, 3.821231634609236*^9, 3.821231868353182*^9, 
   3.821231993077545*^9, 3.821262378467634*^9, 3.822126801644804*^9, 
   3.822138575839295*^9, 3.822138960337842*^9, 3.8482605643822737`*^9, 
   3.84826088980711*^9, 3.883903444637784*^9, 3.8839069811365356`*^9},
 CellLabel->"Out[0]=",ExpressionUUID->"84346b6e-7dbc-4cd4-a3c2-a53118f95926"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"<<", "GeneralRelativityTensors`"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8209376549035053`*^9, 3.82122277144166*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"f1a267e9-984c-49fc-b0fb-1662d4fa5eea"]
}, Closed]],

Cell[CellGroupData[{

Cell["Custom Notation", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8221261444859324`*^9, 3.822126165397541*^9}, 
   3.822138086659045*^9},ExpressionUUID->"62a3bc7f-e214-461b-8595-\
acd316bee2c2"],

Cell[BoxData[
 RowBox[{"<<", "Notation`"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8221270688004093`*^9, 3.822127071205578*^9}, 
   3.8221380866596127`*^9, {3.883913293945627*^9, 3.8839133002975883`*^9}},
 CellLabel->
  "In[479]:=",ExpressionUUID->"3e9a22a7-bc6e-4269-b52f-96d31442f8be"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CreatePalette", "[", 
  RowBox[{"{", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PasteButton", "[", 
     RowBox[{"SubPlus", "[", "r", "]"}], "]"}], " ", ",", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"PasteButton", "[", 
     RowBox[{"SubMinus", "[", "r", "]"}], "]"}], " ", ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PasteButton", "[", 
     RowBox[{"SubPlus", "[", "k", "]"}], "]"}], " ", ",", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"PasteButton", "[", 
     RowBox[{"SubMinus", "[", "k", "]"}], "]"}]}], " ", "\[IndentingNewLine]",
    "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.88391328123964*^9, 3.883913283973493*^9}, {
  3.8839164854663897`*^9, 3.8839164912931337`*^9}},
 CellLabel->
  "In[624]:=",ExpressionUUID->"1d68bc39-013a-4a3c-98e5-fdd6d101c270"],

Cell[BoxData[
 TemplateBox[{
   FrontEndObject[
    LinkObject["dpfmg_shm", 3, 1]], 27, 
   "FrontEndObject[LinkObject[\"dpfmg_shm\", 3, 1]]", "27", "\"Untitled-2\""},
  
  "NotebookObjectUnsaved"]], "Output",
 CellChangeTimes->{3.883913285491341*^9, 3.883916492282176*^9},
 CellLabel->
  "Out[624]=",ExpressionUUID->"956185e7-1d35-4776-8035-82a7227fc74d"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["r", "+"]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["r", "-"]},
   "NotationTemplateTag"], "]"}], "\n", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["r", "*"]},
   "NotationTemplateTag"], "]"}], "\n", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["dr", "*"]},
   "NotationTemplateTag"], "]"}]}], "Input",
 CellChangeTimes->{{3.883913291522295*^9, 
  3.883913328236726*^9}},ExpressionUUID->"376fbe3d-cc03-49c0-9380-\
25a70bcb5ef4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "dtReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dtReplace", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Dt", "[", "x1", "]"}], "\[Rule]", " ", "dx1"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "x2", "]"}], "\[Rule]", " ", "dx2"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "x3", "]"}], "\[Rule]", " ", "dx3"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "x4", "]"}], "\[Rule]", " ", "dx4"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Dt", "[", "l", "]"}], "\[Rule]", " ", "dl"}], " ", ","}], 
      " ", "*)"}], " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Not", " ", "sure", " ", "about", " ", "this", " ", "one"}], 
      " ", "*)"}], " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "p", "]"}], "\[Rule]", " ", "dp"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "q", "]"}], "\[Rule]", " ", "dq"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "r", "]"}], "\[Rule]", " ", "dr"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "t", "]"}], "\[Rule]", " ", "dt"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "u", "]"}], "\[Rule]", " ", "du"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "v", "]"}], "\[Rule]", " ", "dv"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "x", "]"}], " ", "\[Rule]", " ", "dx"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "y", "]"}], " ", "\[Rule]", " ", "dy"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "z", "]"}], "\[Rule]", " ", "dz"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Lambda]", "]"}], "\[Rule]", " ", "d\[Lambda]"}], 
     " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Tau]", "]"}], "\[Rule]", " ", "d\[Tau]"}], " ", 
     ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Alpha]", "]"}], "\[Rule]", " ", "d\[Alpha]"}], 
     " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Beta]", "]"}], "\[Rule]", " ", "d\[Beta]"}], " ", 
     ",", "  ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Theta]", "]"}], "\[Rule]", " ", "d\[Theta]"}], 
     " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Phi]", "]"}], "\[Rule]", " ", "d\[Phi]"}], " ", 
     ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[CurlyPhi]", "]"}], "\[Rule]", " ", 
      "d\[CurlyPhi]"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Eta]", "]"}], "\[Rule]", " ", "d\[Eta]"}], " ", 
     ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Chi]", "]"}], "\[Rule]", " ", "d\[Chi]"}], " ", 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Zeta]", "]"}], "\[Rule]", " ", "d\[Zeta]"}], " ", 
     ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Zeta]bar", "]"}], "\[Rule]", " ", "d\[Zeta]bar"}],
      " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "T", "]"}], "\[Rule]", " ", "dT"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "R", "]"}], "\[Rule]", " ", "dR"}], "  ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "X", "]"}], "\[Rule]", " ", "dX"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "Y", "]"}], "\[Rule]", " ", "dY"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "Z", "]"}], "\[Rule]", " ", "dZ"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[CapitalTheta]", "]"}], "->", " ", 
      "d\[CapitalTheta]"}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[CapitalPhi]", "]"}], "->", " ", 
      "d\[CapitalPhi]"}], " ", ",", "   ", "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptR]", "]"}], "\[Rule]", " ", "d\[ScriptR]"}],
      " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptT]", "]"}], "\[Rule]", "  ", 
      "d\[ScriptT]"}], " ", ",", "   ", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Dt", "[", "\[ScriptU]", "]"}], "\[Rule]", " ", 
        "d\[ScriptU]"}], " ", ","}], "  ", "*)"}], " ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"There", "'"}], "s", " ", "the", " ", "four", " ", "vector", 
        " ", "\[ScriptU]"}], " ", "-", " ", 
       RowBox[{"be", " ", "consistent", " ", "or", " ", 
        RowBox[{"there", "'"}], "s", " ", "gonna", " ", "be", " ", "problems",
         " ", "with", " ", "clashing", " ", "definitions"}]}], " ", "*)"}], 
     " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptV]", "]"}], "\[Rule]", " ", "d\[ScriptV]"}],
      " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptX]", "]"}], "\[Rule]", " ", "d\[ScriptX]"}],
      " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptY]", "]"}], "\[Rule]", " ", "d\[ScriptY]"}],
      " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptZ]", "]"}], "\[Rule]", " ", "d\[ScriptZ]"}],
      " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Rho]", "]"}], "\[Rule]", " ", "d\[Rho]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SuperscriptBox["SubStar", "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}], "\[Rule]", " ", 
      SubscriptBox["dr", "*"]}]}], "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"be", " ", "careful"}], ",", " ", 
      RowBox[{
       RowBox[{"some", " ", "parts", " ", "have", " ", "R"}], " ", "=", " ", 
       "constant"}]}], " ", "*)"}], " ", "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"dtReplace", " ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.822126153339204*^9, {3.822127049120414*^9, 3.822127063543235*^9}, {
   3.822133186328212*^9, 3.8221332099920263`*^9}, {3.8221360714649057`*^9, 
   3.822136077127578*^9}, 3.822138086660699*^9, {3.8221387916808357`*^9, 
   3.822138840520782*^9}, 3.82213897870551*^9, {3.82213988625708*^9, 
   3.822139907167836*^9}, {3.8839161119831467`*^9, 3.8839161439451303`*^9}, {
   3.883916261556868*^9, 3.8839162895007553`*^9}},
 CellLabel->
  "In[607]:=",ExpressionUUID->"d37740c4-c679-42f6-b1e5-74598c190e40"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"Dt", "[", "x1", "]"}], "\[Rule]", "dx1"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "x2", "]"}], "\[Rule]", "dx2"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "x3", "]"}], "\[Rule]", "dx3"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "x4", "]"}], "\[Rule]", "dx4"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "p", "]"}], "\[Rule]", "dp"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "q", "]"}], "\[Rule]", "dq"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "r", "]"}], "\[Rule]", "dr"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "t", "]"}], "\[Rule]", "dt"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "u", "]"}], "\[Rule]", "du"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "v", "]"}], "\[Rule]", "dv"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "x", "]"}], "\[Rule]", "dx"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "y", "]"}], "\[Rule]", "dy"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "z", "]"}], "\[Rule]", "dz"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Lambda]", "]"}], "\[Rule]", "d\[Lambda]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Tau]", "]"}], "\[Rule]", "d\[Tau]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Alpha]", "]"}], "\[Rule]", "d\[Alpha]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Beta]", "]"}], "\[Rule]", "d\[Beta]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Theta]", "]"}], "\[Rule]", "d\[Theta]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Phi]", "]"}], "\[Rule]", "d\[Phi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[CurlyPhi]", "]"}], "\[Rule]", "d\[CurlyPhi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Eta]", "]"}], "\[Rule]", "d\[Eta]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Chi]", "]"}], "\[Rule]", "d\[Chi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Zeta]", "]"}], "\[Rule]", "d\[Zeta]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Zeta]bar", "]"}], "\[Rule]", "d\[Zeta]bar"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "T", "]"}], "\[Rule]", "dT"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "R", "]"}], "\[Rule]", "dR"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "X", "]"}], "\[Rule]", "dX"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "Y", "]"}], "\[Rule]", "dY"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "Z", "]"}], "\[Rule]", "dZ"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[CapitalTheta]", "]"}], "\[Rule]", 
       "d\[CapitalTheta]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[CapitalPhi]", "]"}], "\[Rule]", 
       "d\[CapitalPhi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptR]", "]"}], "\[Rule]", "d\[ScriptR]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptT]", "]"}], "\[Rule]", "d\[ScriptT]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptV]", "]"}], "\[Rule]", "d\[ScriptV]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptX]", "]"}], "\[Rule]", "d\[ScriptX]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptY]", "]"}], "\[Rule]", "d\[ScriptY]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptZ]", "]"}], "\[Rule]", "d\[ScriptZ]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Rho]", "]"}], "\[Rule]", "d\[Rho]"}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["SubStar", "\[Prime]",
         MultilineFunction->None], "[", "r", "]"}], "\[Rule]", 
       SubscriptBox["dr", "*"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.8221261533393*^9, 3.822126801705701*^9, 3.8221271078852158`*^9, 
   3.8221332112394447`*^9, 3.822136077686553*^9, 3.8221380866609592`*^9, 
   3.822138582775508*^9, 3.822138840821929*^9, 3.822138909626281*^9, {
   3.822138968693967*^9, 3.822138979259141*^9}, 3.822139910452313*^9, 
   3.84826056487304*^9, 3.848260890607122*^9, 3.883903445888054*^9, 
   3.8839069817668457`*^9, 3.88391614481277*^9, 3.88391628987304*^9},
 CellLabel->
  "Out[609]//TableForm=",ExpressionUUID->"6064cfdd-d068-4e7f-9585-\
831ed41b2655"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "/:", 
   RowBox[{"Dt", "[", "a", "]"}], "=", "0"}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "/:", 
    RowBox[{"Dt", "[", "A", "]"}], "=", "0"}], "  ", ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Be", " ", "careful", " ", "with"}], " ", "-", " ", 
     RowBox[{
      RowBox[{"there", "'"}], "s", " ", "the", " ", "abbreviation", " ", "A", 
      " ", "for", " ", "Kerr"}]}], "..."}], " ", "*)"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "/:", 
   RowBox[{"Dt", "[", "M", "]"}], "=", "0"}], "  ", ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "We", " ", "use", " ", "M", " ", "for", " ", "mass", " ", "and", " ", "m",
      " ", "for", " ", "null", " ", "vector"}], " ", "-", " ", 
    RowBox[{"otherwise", " ", "recursion", " ", "error"}]}], " ", "*)"}], " ",
   "\[IndentingNewLine]", 
  RowBox[{"\[CapitalOmega]", "/:", 
   RowBox[{"Dt", "[", "\[CapitalOmega]", "]"}], "=", "0"}], "  ", ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Constant", " ", "rotation", " ", "Appendix", " ", "65", " ", "Page", " ", 
    "283"}], " ", "*)"}], " "}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.822133103974597*^9, 3.8221331206858377`*^9}, {
   3.822136085127668*^9, 3.8221361103739634`*^9}, 3.822138086661256*^9, {
   3.8221388491595488`*^9, 3.822138880890086*^9}, {3.8839161650254*^9, 
   3.883916213805806*^9}},
 CellLabel->
  "In[603]:=",ExpressionUUID->"8abbff61-7860-4464-bd8d-1c44033fd559"]
}, Closed]],

Cell[CellGroupData[{

Cell["Line Element and Metric Functions", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.820937548919169*^9, 3.8209375728447866`*^9}, 
   3.8209383129401073`*^9, 3.8220481344968433`*^9, {3.8225115057038183`*^9, 
   3.822511507783984*^9}, 
   3.822763734568725*^9},ExpressionUUID->"aef50d6a-7496-4d91-8234-\
79954f66cc1e"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "lineToMetric", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lineToMetric", "[", 
    RowBox[{"lineelement_", " ", ",", " ", "differentials_"}], "]"}], ":=", 
   " ", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"i", "\[Equal]", "j"}], " ", ",", 
       RowBox[{"Coefficient", "[", 
        RowBox[{"lineelement", ",", " ", 
         RowBox[{
          RowBox[{"differentials", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", 
          RowBox[{"differentials", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}], "*", 
        RowBox[{"Coefficient", "[", 
         RowBox[{"lineelement", ",", " ", 
          RowBox[{
           RowBox[{"differentials", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", 
           RowBox[{"differentials", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}]}], "]"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "differentials", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "differentials", "]"}]}], "}"}]}], "]"}]}], 
  "  ", ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{3.821567412203915*^9, 3.821641945174967*^9, 
  3.821641981470141*^9, 3.8220481344970007`*^9, 3.822763734569355*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"fe292e01-906a-49b6-bdc7-105423360109"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "metricToLine", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metricToLine", "[", 
   RowBox[{"metric_", ",", " ", "differentials_"}], "]"}], ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"metric", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "j"}], "]"}], "]"}], " ", 
     RowBox[{"differentials", "[", 
      RowBox[{"[", "i", "]"}], "]"}], " ", 
     RowBox[{"differentials", "[", 
      RowBox[{"[", "j", "]"}], "]"}]}], " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "differentials", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", 
      RowBox[{"Length", "[", "differentials", "]"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.822762557092309*^9, 3.8227626322008677`*^9}, 
   3.8227637345698223`*^9, 3.822988709740047*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"f70f1445-e4d5-4b4a-b40e-2ed55fafc6b1"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Euler Lagrange Equations (Experimental:  I haven\[CloseCurlyQuote]t checked \
to see if this works yet)\
\>", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.8434096837525587`*^9, 3.84340969900767*^9}, {
   3.84779815072215*^9, 3.847798172222159*^9}, 
   3.847798208161132*^9},ExpressionUUID->"4875075d-77bd-4ce5-a455-\
2786c4ebec84"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eulerLagrangeEquations", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eulerLagrangeEquations", "[", 
    RowBox[{"metric_", ",", " ", "variables_", " ", ",", " ", "parameter_"}], 
    " ", "]"}], ":=", " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "q", ",", "qReplace", ",", "\[ScriptCapitalL]", ",", "eqs", ",", 
       "eulerEquations"}], "}"}], " ", ",", "\[IndentingNewLine]", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", "q", "]"}], " ", ";", "\[IndentingNewLine]", 
      RowBox[{"q", " ", "=", " ", "\[IndentingNewLine]", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{"variables", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"{", "parameter", "}"}]}], "]"}], " ", ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "variables", "]"}]}], "}"}]}], "]"}], 
        "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Clear", "[", "qReplace", "]"}], " ", ";", 
      "\[IndentingNewLine]", 
      RowBox[{"qReplace", " ", "=", " ", "\[IndentingNewLine]", 
       RowBox[{"Thread", "[", 
        RowBox[{"variables", " ", "\[Rule]", " ", "q"}], " ", "]"}]}], " ", 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Clear", "[", "\[ScriptCapitalL]", "]"}], " ", ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[ScriptCapitalL]", " ", "=", " ", "\[IndentingNewLine]", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"metric", " ", "/.", " ", "qReplace"}], ")"}], "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], " ", "*", "   ", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{"q", ",", "parameter"}], "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{"q", ",", "parameter"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], " ", ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", " ", 
           RowBox[{"Length", "[", "q", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", "q", "]"}]}], "}"}]}], "]"}]}], " ", ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Clear", "[", "eqs", "]"}], " ", ";", "\[IndentingNewLine]", 
      RowBox[{"eqs", " ", "=", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"D", "[", " ", 
              RowBox[{
               RowBox[{"D", "[", " ", 
                RowBox[{"\[ScriptCapitalL]", " ", ",", "  ", 
                 RowBox[{
                  SubscriptBox["\[PartialD]", "parameter"], 
                  RowBox[{"q", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], " ", ",", " ", 
               "parameter"}], " ", "]"}], " ", "-", 
             RowBox[{"D", "[", " ", 
              RowBox[{"\[ScriptCapitalL]", " ", ",", "  ", 
               RowBox[{"q", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], " ", ")"}], "==", 
           "0"}], "  ", ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "q", "]"}]}], "}"}]}], "]"}], " ", "//", 
        " ", "Expand"}]}], "   ", ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Clear", "[", "eulerEquations", "]"}], " ", ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eulerEquations", " ", "=", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Solve", "[", " ", 
          RowBox[{"eqs", " ", ",", " ", 
           RowBox[{"D", "[", 
            RowBox[{"q", ",", 
             RowBox[{"{", 
              RowBox[{"parameter", ",", "2"}], "}"}]}], "]"}]}], "]"}], " ", 
         "]"}], " ", "/.", " ", 
        RowBox[{"Rule", "->", " ", "Equal"}]}]}]}]}], " ", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{
  3.843409690313745*^9, {3.8477972356055098`*^9, 3.8477973009543877`*^9}, {
   3.847802455955916*^9, 3.84780245637819*^9}, {3.847802572588552*^9, 
   3.8478025789311523`*^9}, {3.848001245938334*^9, 3.848001253401595*^9}, {
   3.848002025103499*^9, 3.848002030352234*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"812a29fe-5fde-499b-94cc-fa3259a83eca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "To", " ", "get", " ", "rid", " ", "of", " ", "the", " ", "functional", 
     " ", "dependence", " ", "on", " ", "\[Lambda]", " ", "after", " ", 
     "computing", " ", "the", " ", "geodesic", " ", "equations", " ", "try", 
     " ", "useing", " ", 
     RowBox[{"this", ":"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "/.", 
    RowBox[{
     RowBox[{"q_", "[", "\[Lambda]", "]"}], " ", "\[RuleDelayed]", " ", 
     "q"}]}], " ", "\[IndentingNewLine]", "\[IndentingNewLine]", "*)"}], 
  " "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.847896169314475*^9, 3.847896200976667*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"792abdf4-40a6-4b15-b17d-aca462785d64"]
}, Closed]],

Cell[CellGroupData[{

Cell["Line Element and Metric 5.48:  de Sitter", "Section",
 CellChangeTimes->{{3.883903659632716*^9, 
  3.883903684461515*^9}},ExpressionUUID->"2809fe34-d2d3-460f-a81b-\
e92d72cd08be"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "lineElement5pt48", "]"}], "\[IndentingNewLine]", 
 RowBox[{"lineElement5pt48", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["dt", "2"]}], "+", " ", 
   RowBox[{
    RowBox[{"Exp", "[", " ", 
     RowBox[{"2", " ", "H0", " ", "t"}], " ", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["dx", "2"], "+", " ", 
      SuperscriptBox["dy", "2"], "+", " ", 
      SuperscriptBox["dz", "2"]}], ")"}], " "}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.8221379844514523`*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"d95e2b7c-8423-4d02-a8f1-f516f9611717"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["dt", "2"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["dx", "2"], "+", 
     SuperscriptBox["dy", "2"], "+", 
     SuperscriptBox["dz", "2"]}], ")"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", "H0", " ", "t"}]]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.8221268021945553`*^9, 3.822137984451621*^9, 
  3.8482605651884336`*^9, 3.848260891186632*^9, 3.883903445993485*^9, 
  3.8839069818438272`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"c77dc3ef-11aa-4418-bd8e-c9fd1e16b576"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric5pt48", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric5pt48", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"lineToMetric", "[", " ", 
    RowBox[{"lineElement5pt48", " ", ",", " ", 
     RowBox[{"{", 
      RowBox[{"dt", ",", "dx", ",", "dy", ",", "dz"}], "}"}]}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric5pt48", " ", "//", " ", "MatrixForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.822137984451766*^9},
 CellLabel->"In[21]:=",ExpressionUUID->"5d75db5a-c103-40c8-a83c-7205eb7b7334"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"-", "1"}], "0", "0", "0"},
      {"0", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "H0", " ", "t"}]], "0", "0"},
      {"0", "0", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "H0", " ", "t"}]], "0"},
      {"0", "0", "0", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "H0", " ", "t"}]]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.822126802228804*^9, 3.82213798445185*^9, 
  3.848260565208737*^9, 3.848260891226817*^9, 3.883903446035438*^9, 
  3.883906981870469*^9},
 CellLabel->
  "Out[23]//TraditionalForm=",ExpressionUUID->"24d5e5d0-7e42-4332-baf1-\
2b2f0dc26639"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "deSitterGeodesics", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"deSitterGeodesics", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"eulerLagrangeEquations", "[", " ", 
    RowBox[{"metric5pt48", " ", ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "}"}], " ", ",", " ", 
     "\[Lambda]"}], " ", "]"}]}], "   ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"deSitterGeodesics", " ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.8221379844519663`*^9, {3.848261200729896*^9, 3.848261222801014*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"11e79846-a061-4a30-8125-55cd068d9529"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["t", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "\[Lambda]", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "H0", " ", 
           RowBox[{"t", "[", "\[Lambda]", "]"}]}]]}], " ", "H0", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["x", "\[Prime]",
             MultilineFunction->None], "[", "\[Lambda]", "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["y", "\[Prime]",
             MultilineFunction->None], "[", "\[Lambda]", "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["z", "\[Prime]",
             MultilineFunction->None], "[", "\[Lambda]", "]"}], "2"]}], 
         ")"}]}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "\[Lambda]", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "H0", " ", 
        RowBox[{
         SuperscriptBox["t", "\[Prime]",
          MultilineFunction->None], "[", "\[Lambda]", "]"}], " ", 
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "\[Lambda]", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["y", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "\[Lambda]", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "H0", " ", 
        RowBox[{
         SuperscriptBox["t", "\[Prime]",
          MultilineFunction->None], "[", "\[Lambda]", "]"}], " ", 
        RowBox[{
         SuperscriptBox["y", "\[Prime]",
          MultilineFunction->None], "[", "\[Lambda]", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["z", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "\[Lambda]", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "H0", " ", 
        RowBox[{
         SuperscriptBox["t", "\[Prime]",
          MultilineFunction->None], "[", "\[Lambda]", "]"}], " ", 
        RowBox[{
         SuperscriptBox["z", "\[Prime]",
          MultilineFunction->None], "[", "\[Lambda]", "]"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.822126802267045*^9, 3.822137984452065*^9, 
  3.848260565268509*^9, 3.8482608912689037`*^9, 3.84826122361974*^9, 
  3.883903446132234*^9, 3.883906981919297*^9},
 CellLabel->
  "Out[26]//TableForm=",ExpressionUUID->"ab95fb9b-4148-48a8-bfeb-\
2076075ecc02"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"deSitterGeodesics", "/.", 
   RowBox[{
    RowBox[{"q_", "[", "\[Lambda]", "]"}], " ", "\[RuleDelayed]", " ", 
    "q"}]}], "  ", "//", " ", "TableForm"}]], "Input",
 CellChangeTimes->{{3.8482612464071503`*^9, 3.848261251113398*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"638f1a1f-dc45-4f09-8bb3-744ee6fffb99"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       SuperscriptBox["t", "\[Prime]\[Prime]",
        MultilineFunction->None], "\[Equal]", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "H0", " ", "t"}]]}], " ", "H0", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            SuperscriptBox["x", "\[Prime]",
             MultilineFunction->None], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            SuperscriptBox["y", "\[Prime]",
             MultilineFunction->None], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            SuperscriptBox["z", "\[Prime]",
             MultilineFunction->None], ")"}], "2"]}], ")"}]}]}]},
     {
      RowBox[{
       SuperscriptBox["x", "\[Prime]\[Prime]",
        MultilineFunction->None], "\[Equal]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "H0", " ", 
        SuperscriptBox["t", "\[Prime]",
         MultilineFunction->None], " ", 
        SuperscriptBox["x", "\[Prime]",
         MultilineFunction->None]}]}]},
     {
      RowBox[{
       SuperscriptBox["y", "\[Prime]\[Prime]",
        MultilineFunction->None], "\[Equal]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "H0", " ", 
        SuperscriptBox["t", "\[Prime]",
         MultilineFunction->None], " ", 
        SuperscriptBox["y", "\[Prime]",
         MultilineFunction->None]}]}]},
     {
      RowBox[{
       SuperscriptBox["z", "\[Prime]\[Prime]",
        MultilineFunction->None], "\[Equal]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "H0", " ", 
        SuperscriptBox["t", "\[Prime]",
         MultilineFunction->None], " ", 
        SuperscriptBox["z", "\[Prime]",
         MultilineFunction->None]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.848261247098633*^9, 3.848261251366678*^9}, 
   3.883903446147914*^9, 3.883906981928965*^9},
 CellLabel->
  "Out[27]//TableForm=",ExpressionUUID->"9844ab8a-d079-4722-addc-\
223774f00b93"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Line Element and Metric 5.63:  Godel Space Time", "Section",
 CellChangeTimes->{{3.88390381128141*^9, 
  3.8839038477473907`*^9}},ExpressionUUID->"0e4b9904-1614-4f8a-82cd-\
45aaed572347"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "lineElement5pt63", "]"}], "\[IndentingNewLine]", 
 RowBox[{"lineElement5pt63", " ", "=", " ", "\[IndentingNewLine]", " ", 
  RowBox[{
   RowBox[{"(", " ", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["dt", "2"]}], "+", " ", 
     SuperscriptBox["dx", "2"], "-", 
     RowBox[{
      FractionBox["1", "2"], 
      SuperscriptBox["U", "2"], " ", 
      SuperscriptBox["dy", "2"]}], "-", " ", 
     RowBox[{"2", " ", "U", " ", "dt", " ", "dy"}], " ", "+", " ", 
     SuperscriptBox["dz", 
      RowBox[{"2", "\[NonBreakingSpace]"}]]}], " ", ")"}], " ", "/.", " ", 
   RowBox[{"U", "\[Rule]", " ", 
    RowBox[{"Exp", "[", 
     RowBox[{
      SqrtBox["2"], " ", "\[Omega]", " ", "x"}], " ", "]"}], 
    " "}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.8221379844523077`*^9},
 CellLabel->"In[28]:=",ExpressionUUID->"68340ad2-e6e7-43cb-b705-725222ccfa73"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["dt", "2"]}], "+", 
  SuperscriptBox["dx", "2"], "+", 
  SuperscriptBox["dz", "2"], "-", 
  RowBox[{"2", " ", "dt", " ", "dy", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     SqrtBox["2"], " ", "x", " ", "\[Omega]"}]]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["dy", "2"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", 
     SqrtBox["2"], " ", "x", " ", "\[Omega]"}]]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.822126802277192*^9, 3.8221379844524307`*^9, 
  3.848260565280278*^9, 3.848260891291572*^9, 3.8839034461724358`*^9, 
  3.883906981950288*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"e1d3fab3-2c31-47e9-bfac-67a6f82f2b48"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric5pt63", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric5pt63", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"lineToMetric", "[", " ", 
    RowBox[{"lineElement5pt63", " ", ",", " ", 
     RowBox[{"{", 
      RowBox[{"dt", ",", "dx", ",", "dy", ",", "dz"}], "}"}]}], " ", "]"}]}], 
  " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric5pt63", " ", "//", " ", "MatrixForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.8221379844525537`*^9},
 CellLabel->"In[30]:=",ExpressionUUID->"400f73c8-4e4a-48a6-b574-1547d516c434"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"-", "1"}], "0", 
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          SqrtBox["2"], " ", "x", " ", "\[Omega]"}]]}], "0"},
      {"0", "1", "0", "0"},
      {
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          SqrtBox["2"], " ", "x", " ", "\[Omega]"}]]}], "0", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "x", " ", "\[Omega]"}]]}], "0"},
      {"0", "0", "0", "1"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.822126802310829*^9, 3.8221379844526577`*^9, 
  3.84826056529808*^9, 3.848260891330577*^9, 3.883903446197562*^9, 
  3.883906981972163*^9},
 CellLabel->
  "Out[32]//TraditionalForm=",ExpressionUUID->"b2b84acf-8b47-4a6d-bdac-\
d5bd26387534"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "godelGeodesics", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"godelGeodesics", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"eulerLagrangeEquations", "[", " ", 
    RowBox[{"metric5pt63", " ", ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "}"}], " ", ",", " ", 
     "\[Lambda]"}], " ", "]"}]}], "   ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"godelGeodesics", " ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.8221379844528313`*^9, {3.8482612841232347`*^9, 3.848261299314221*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"105fa26d-1296-4d18-bf64-f8ee7808f953"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["t", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "\[Lambda]", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"-", 
         SqrtBox["2"]}], " ", "\[Omega]", " ", 
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "\[Lambda]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{
            SuperscriptBox["t", "\[Prime]",
             MultilineFunction->None], "[", "\[Lambda]", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             SqrtBox["2"], " ", "\[Omega]", " ", 
             RowBox[{"x", "[", "\[Lambda]", "]"}]}]], " ", 
           RowBox[{
            SuperscriptBox["y", "\[Prime]",
             MultilineFunction->None], "[", "\[Lambda]", "]"}]}]}], ")"}]}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "\[Lambda]", "]"}], "\[Equal]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            SqrtBox["2"], " ", "\[Omega]", " ", 
            RowBox[{"x", "[", "\[Lambda]", "]"}]}]], " ", "\[Omega]", " ", 
          RowBox[{
           SuperscriptBox["y", "\[Prime]",
            MultilineFunction->None], "[", "\[Lambda]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{
              SuperscriptBox["t", "\[Prime]",
               MultilineFunction->None], "[", "\[Lambda]", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               SqrtBox["2"], " ", "\[Omega]", " ", 
               RowBox[{"x", "[", "\[Lambda]", "]"}]}]], " ", 
             RowBox[{
              SuperscriptBox["y", "\[Prime]",
               MultilineFunction->None], "[", "\[Lambda]", "]"}]}]}], ")"}]}], 
         SqrtBox["2"]]}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["y", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "\[Lambda]", "]"}], "\[Equal]", 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox["2"]}], " ", "\[Omega]", " ", 
          RowBox[{"x", "[", "\[Lambda]", "]"}]}]], " ", "\[Omega]", " ", 
        RowBox[{
         SuperscriptBox["t", "\[Prime]",
          MultilineFunction->None], "[", "\[Lambda]", "]"}], " ", 
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "\[Lambda]", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["z", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "\[Lambda]", "]"}], "\[Equal]", 
       "0"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.82212680243157*^9, 3.822137984452976*^9, 
  3.848260565340261*^9, 3.8482608913990393`*^9, 3.848261300761303*^9, 
  3.8839034462473793`*^9, 3.8839069820131693`*^9},
 CellLabel->
  "Out[35]//TableForm=",ExpressionUUID->"636db1cf-0a2a-4b8f-b0c8-\
8a91757b9bd8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq5pt65", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq5pt65", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"godelGeodesics", "  ", "/.", 
    RowBox[{
     RowBox[{"q_", "[", "\[Lambda]", "]"}], " ", "\[RuleDelayed]", " ", 
     "q"}]}]}], "   ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq5pt65", " ", "//", " ", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.848261306538116*^9, 3.848261336594323*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"c0829ecd-30d8-411b-bee9-8d4359410864"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       SuperscriptBox["t", "\[Prime]\[Prime]",
        MultilineFunction->None], "\[Equal]", 
       RowBox[{
        RowBox[{"-", 
         SqrtBox["2"]}], " ", "\[Omega]", " ", 
        SuperscriptBox["x", "\[Prime]",
         MultilineFunction->None], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["t", "\[Prime]",
            MultilineFunction->None]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             SqrtBox["2"], " ", "x", " ", "\[Omega]"}]], " ", 
           SuperscriptBox["y", "\[Prime]",
            MultilineFunction->None]}]}], ")"}]}]}]},
     {
      RowBox[{
       SuperscriptBox["x", "\[Prime]\[Prime]",
        MultilineFunction->None], "\[Equal]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            SqrtBox["2"], " ", "x", " ", "\[Omega]"}]], " ", "\[Omega]", " ", 
          
          SuperscriptBox["y", "\[Prime]",
           MultilineFunction->None], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox["t", "\[Prime]",
              MultilineFunction->None]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               SqrtBox["2"], " ", "x", " ", "\[Omega]"}]], " ", 
             SuperscriptBox["y", "\[Prime]",
              MultilineFunction->None]}]}], ")"}]}], 
         SqrtBox["2"]]}]}]},
     {
      RowBox[{
       SuperscriptBox["y", "\[Prime]\[Prime]",
        MultilineFunction->None], "\[Equal]", 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox["2"]}], " ", "x", " ", "\[Omega]"}]], " ", "\[Omega]", " ", 
        SuperscriptBox["t", "\[Prime]",
         MultilineFunction->None], " ", 
        SuperscriptBox["x", "\[Prime]",
         MultilineFunction->None]}]}]},
     {
      RowBox[{
       SuperscriptBox["z", "\[Prime]\[Prime]",
        MultilineFunction->None], "\[Equal]", "0"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.848261320655497*^9, 3.8482613373542852`*^9}, 
   3.883903446262051*^9, 3.883906982023838*^9},
 CellLabel->
  "Out[38]//TableForm=",ExpressionUUID->"2b297c8f-c421-4c43-ab65-\
8c559d7f86f3"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Line Element and Metric 5.87:  Weak Gravitational Wave", "Section",
 CellChangeTimes->{{3.883903852941367*^9, 
  3.88390389514473*^9}},ExpressionUUID->"1d3c6307-0c7c-4e70-bf19-\
aac17265a8f2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "lineElement5pt87", "]"}], "\[IndentingNewLine]", 
 RowBox[{"lineElement5pt87", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["dt", "2"]}], "+", " ", 
   SuperscriptBox["dx", 
    RowBox[{"2", " "}]], "+", " ", 
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{"1", " ", "-", " ", "hplus"}], " ", ")"}], 
    SuperscriptBox["dy", "2"]}], " ", "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "hplus"}], ")"}], " ", 
    SuperscriptBox["dz", "2"]}], "-", " ", 
   RowBox[{"2", " ", "hcross", " ", "dx", " ", "dz", " "}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.8221379844532013`*^9},
 CellLabel->"In[39]:=",ExpressionUUID->"4babbf55-f30c-4864-a379-1d7809279752"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["dt", "2"]}], "+", 
  SuperscriptBox["dx", "2"], "-", 
  RowBox[{"2", " ", "dx", " ", "dz", " ", "hcross"}], "+", 
  RowBox[{
   SuperscriptBox["dy", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "hplus"}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["dz", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "hplus"}], ")"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.822126802442546*^9, 3.82213798445335*^9, 
  3.84826056535078*^9, 3.848260891418281*^9, 3.883903446285152*^9, 
  3.883906982045163*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"d5e69583-034a-4ab4-b69b-9ad136c181b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"lineToMetric", "[", " ", 
   RowBox[{"lineElement5pt87", "  ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"dt", ",", "dz", " ", ",", " ", "dx", ",", "dy"}], "}"}]}], 
   "]"}], " ", "//", " ", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.848261424444332*^9, 3.848261468529752*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"181ebbde-b9f8-4f67-9331-e036d001f2c1"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], "0", "0", "0"},
     {"0", 
      RowBox[{"1", "+", "hplus"}], 
      RowBox[{"-", "hcross"}], "0"},
     {"0", 
      RowBox[{"-", "hcross"}], "1", "0"},
     {"0", "0", "0", 
      RowBox[{"1", "-", "hplus"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.848261442780265*^9, 3.848261468898726*^9}, 
   3.883903446299336*^9, 3.883906982055182*^9},
 CellLabel->
  "Out[41]//MatrixForm=",ExpressionUUID->"b4818934-30f8-45aa-915f-\
494eee0267f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq5pt88", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq5pt88", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"hplus", "\[Rule]", " ", 
      RowBox[{"Aplus", " ", 
       RowBox[{"Sin", "[", " ", 
        RowBox[{"\[Omega]", " ", 
         RowBox[{"(", 
          RowBox[{"t", "-", "x"}], ")"}]}], "]"}]}]}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"hcross", "\[Rule]", " ", 
      RowBox[{"Aplus", " ", 
       RowBox[{"Cos", "[", " ", 
        RowBox[{"\[Omega]", " ", 
         RowBox[{"(", 
          RowBox[{"t", "-", "x"}], ")"}]}], "]"}]}]}]}], " ", 
    "\[IndentingNewLine]", "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq5pt88", " ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.822137984453569*^9},
 CellLabel->"In[42]:=",ExpressionUUID->"0577d081-a074-49e8-827e-a832edc82e78"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"hplus", "\[Rule]", 
       RowBox[{"Aplus", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"t", "-", "x"}], ")"}], " ", "\[Omega]"}], "]"}]}]}]},
     {
      RowBox[{"hcross", "\[Rule]", 
       RowBox[{"Aplus", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"t", "-", "x"}], ")"}], " ", "\[Omega]"}], "]"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.8221268024743423`*^9, 3.822137984453714*^9, 
  3.8482605653702793`*^9, 3.8482608914601717`*^9, 3.883903446323751*^9, 
  3.8839069820752277`*^9},
 CellLabel->
  "Out[44]//TableForm=",ExpressionUUID->"242e24bc-d981-482e-b9a9-\
dd62ef19cdc7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lineElement5pt87", "  ", "/.", " ", "eq5pt88", " "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.822137984453861*^9},
 CellLabel->"In[45]:=",ExpressionUUID->"2ad5b943-a75b-4aa8-83d1-71872abc351b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["dt", "2"]}], "+", 
  SuperscriptBox["dx", "2"], "-", 
  RowBox[{"2", " ", "Aplus", " ", "dx", " ", "dz", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"t", "-", "x"}], ")"}], " ", "\[Omega]"}], "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["dy", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"Aplus", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"t", "-", "x"}], ")"}], " ", "\[Omega]"}], "]"}]}]}], 
    ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["dz", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"Aplus", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"t", "-", "x"}], ")"}], " ", "\[Omega]"}], "]"}]}]}], 
    ")"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.822126802572937*^9, 3.82213798445401*^9, 
  3.848260565381246*^9, 3.848260891522547*^9, 3.8839034463379593`*^9, 
  3.883906982085559*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"461cda95-362a-467a-af88-47402bd2a39e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric5pt87", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric5pt87", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"lineToMetric", "[", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"lineElement5pt87", " ", "/.", " ", "eq5pt88"}], " ", ")"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"dt", ",", "dx", ",", "dy", ",", "dz"}], "}"}]}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"metric5pt87", " ", "//", " ", "MatrixForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.822137984454199*^9},
 CellLabel->"In[46]:=",ExpressionUUID->"53e705ed-1d4f-4366-995d-85d26e897c5d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], "0", "0", "0"},
     {"0", "1", "0", 
      RowBox[{
       RowBox[{"-", "Aplus"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"t", "-", "x"}], ")"}], " ", "\[Omega]"}], "]"}]}]},
     {"0", "0", 
      RowBox[{"1", "-", 
       RowBox[{"Aplus", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"t", "-", "x"}], ")"}], " ", "\[Omega]"}], "]"}]}]}], 
      "0"},
     {"0", 
      RowBox[{
       RowBox[{"-", "Aplus"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"t", "-", "x"}], ")"}], " ", "\[Omega]"}], "]"}]}], "0", 
      RowBox[{"1", "+", 
       RowBox[{"Aplus", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"t", "-", "x"}], ")"}], " ", "\[Omega]"}], "]"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.82212680258354*^9, 3.822137984454381*^9, 
  3.848260565399755*^9, 3.848260891564712*^9, 3.8839034463635807`*^9, 
  3.883906982106431*^9},
 CellLabel->
  "Out[48]//MatrixForm=",ExpressionUUID->"f164950b-6cd2-4076-9919-\
60f4acd6e353"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eulerLagrangeEquations", "[", " ", 
   RowBox[{"metric5pt87", " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "}"}], " ", ",", " ", 
    "\[Lambda]"}], " ", "]"}], "  ", "//", " ", "TableForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.8221379844545393`*^9},
 CellLabel->"In[49]:=",ExpressionUUID->"afb3a2e9-c833-4870-8559-5a748a477fb3"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["t", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "\[Lambda]", "]"}], "\[Equal]", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Aplus", " ", "\[Omega]", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Omega]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"t", "[", "\[Lambda]", "]"}], "-", 
               RowBox[{"x", "[", "\[Lambda]", "]"}]}], ")"}]}], "]"}], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["y", "\[Prime]",
              MultilineFunction->None], "[", "\[Lambda]", "]"}], "2"]}], "-", 
          
          RowBox[{"2", " ", "Aplus", " ", "\[Omega]", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Omega]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"t", "[", "\[Lambda]", "]"}], "-", 
               RowBox[{"x", "[", "\[Lambda]", "]"}]}], ")"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["x", "\[Prime]",
             MultilineFunction->None], "[", "\[Lambda]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["z", "\[Prime]",
             MultilineFunction->None], "[", "\[Lambda]", "]"}]}], "-", 
          RowBox[{"Aplus", " ", "\[Omega]", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Omega]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"t", "[", "\[Lambda]", "]"}], "-", 
               RowBox[{"x", "[", "\[Lambda]", "]"}]}], ")"}]}], "]"}], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["z", "\[Prime]",
              MultilineFunction->None], "[", "\[Lambda]", "]"}], "2"]}]}], 
         ")"}]}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "\[Lambda]", "]"}], "\[Equal]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "Aplus", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Omega]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"t", "[", "\[Lambda]", "]"}], "-", 
               RowBox[{"x", "[", "\[Lambda]", "]"}]}], ")"}]}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "Aplus", " ", "\[Omega]", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Omega]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"t", "[", "\[Lambda]", "]"}], "-", 
                  RowBox[{"x", "[", "\[Lambda]", "]"}]}], ")"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["t", "\[Prime]",
                MultilineFunction->None], "[", "\[Lambda]", "]"}], " ", 
              RowBox[{
               SuperscriptBox["x", "\[Prime]",
                MultilineFunction->None], "[", "\[Lambda]", "]"}]}], "-", 
             RowBox[{"2", " ", "Aplus", " ", "\[Omega]", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Omega]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"t", "[", "\[Lambda]", "]"}], "-", 
                  RowBox[{"x", "[", "\[Lambda]", "]"}]}], ")"}]}], "]"}], " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["x", "\[Prime]",
                 MultilineFunction->None], "[", "\[Lambda]", "]"}], "2"]}], 
             "+", 
             RowBox[{"2", " ", "Aplus", " ", "\[Omega]", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Omega]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"t", "[", "\[Lambda]", "]"}], "-", 
                  RowBox[{"x", "[", "\[Lambda]", "]"}]}], ")"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["t", "\[Prime]",
                MultilineFunction->None], "[", "\[Lambda]", "]"}], " ", 
              RowBox[{
               SuperscriptBox["z", "\[Prime]",
                MultilineFunction->None], "[", "\[Lambda]", "]"}]}], "-", 
             RowBox[{"2", " ", "Aplus", " ", "\[Omega]", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Omega]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"t", "[", "\[Lambda]", "]"}], "-", 
                  RowBox[{"x", "[", "\[Lambda]", "]"}]}], ")"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["x", "\[Prime]",
                MultilineFunction->None], "[", "\[Lambda]", "]"}], " ", 
              RowBox[{
               SuperscriptBox["z", "\[Prime]",
                MultilineFunction->None], "[", "\[Lambda]", "]"}]}]}], 
            ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{"2", " ", "Aplus", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Omega]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"t", "[", "\[Lambda]", "]"}], "-", 
                  RowBox[{"x", "[", "\[Lambda]", "]"}]}], ")"}]}], "]"}]}]}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "Aplus"}], " ", "\[Omega]", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Omega]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"t", "[", "\[Lambda]", "]"}], "-", 
                  RowBox[{"x", "[", "\[Lambda]", "]"}]}], ")"}]}], "]"}], " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["y", "\[Prime]",
                 MultilineFunction->None], "[", "\[Lambda]", "]"}], "2"]}], 
             "+", 
             RowBox[{"2", " ", "Aplus", " ", "\[Omega]", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Omega]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"t", "[", "\[Lambda]", "]"}], "-", 
                  RowBox[{"x", "[", "\[Lambda]", "]"}]}], ")"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["t", "\[Prime]",
                MultilineFunction->None], "[", "\[Lambda]", "]"}], " ", 
              RowBox[{
               SuperscriptBox["z", "\[Prime]",
                MultilineFunction->None], "[", "\[Lambda]", "]"}]}], "+", 
             RowBox[{"Aplus", " ", "\[Omega]", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Omega]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"t", "[", "\[Lambda]", "]"}], "-", 
                  RowBox[{"x", "[", "\[Lambda]", "]"}]}], ")"}]}], "]"}], " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["z", "\[Prime]",
                 MultilineFunction->None], "[", "\[Lambda]", "]"}], "2"]}]}], 
            ")"}]}]}], 
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox["Aplus", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", 
             RowBox[{"\[Omega]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"t", "[", "\[Lambda]", "]"}], "-", 
                RowBox[{"x", "[", "\[Lambda]", "]"}]}], ")"}]}], "]"}], 
            "2"]}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{"2", " ", "Aplus", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Omega]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"t", "[", "\[Lambda]", "]"}], "-", 
                  RowBox[{"x", "[", "\[Lambda]", "]"}]}], ")"}]}], "]"}]}]}], 
            ")"}]}]}]]}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["y", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "\[Lambda]", "]"}], "\[Equal]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"Aplus", " ", "\[Omega]", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Omega]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"t", "[", "\[Lambda]", "]"}], "-", 
               RowBox[{"x", "[", "\[Lambda]", "]"}]}], ")"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["t", "\[Prime]",
             MultilineFunction->None], "[", "\[Lambda]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["y", "\[Prime]",
             MultilineFunction->None], "[", "\[Lambda]", "]"}]}], "-", 
          RowBox[{"Aplus", " ", "\[Omega]", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Omega]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"t", "[", "\[Lambda]", "]"}], "-", 
               RowBox[{"x", "[", "\[Lambda]", "]"}]}], ")"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["x", "\[Prime]",
             MultilineFunction->None], "[", "\[Lambda]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["y", "\[Prime]",
             MultilineFunction->None], "[", "\[Lambda]", "]"}]}]}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"Aplus", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Omega]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"t", "[", "\[Lambda]", "]"}], "-", 
               RowBox[{"x", "[", "\[Lambda]", "]"}]}], ")"}]}], 
            "]"}]}]}]]}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["z", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "\[Lambda]", "]"}], "\[Equal]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "Aplus", " ", "\[Omega]", " ", 
           RowBox[{"Sec", "[", 
            RowBox[{"\[Omega]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"t", "[", "\[Lambda]", "]"}], "-", 
               RowBox[{"x", "[", "\[Lambda]", "]"}]}], ")"}]}], "]"}], " ", 
           RowBox[{"Tan", "[", 
            RowBox[{"\[Omega]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"t", "[", "\[Lambda]", "]"}], "-", 
               RowBox[{"x", "[", "\[Lambda]", "]"}]}], ")"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["t", "\[Prime]",
             MultilineFunction->None], "[", "\[Lambda]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["x", "\[Prime]",
             MultilineFunction->None], "[", "\[Lambda]", "]"}]}], "+", 
          RowBox[{"2", " ", "Aplus", " ", "\[Omega]", " ", 
           RowBox[{"Sec", "[", 
            RowBox[{"\[Omega]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"t", "[", "\[Lambda]", "]"}], "-", 
               RowBox[{"x", "[", "\[Lambda]", "]"}]}], ")"}]}], "]"}], " ", 
           RowBox[{"Tan", "[", 
            RowBox[{"\[Omega]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"t", "[", "\[Lambda]", "]"}], "-", 
               RowBox[{"x", "[", "\[Lambda]", "]"}]}], ")"}]}], "]"}], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["x", "\[Prime]",
              MultilineFunction->None], "[", "\[Lambda]", "]"}], "2"]}], "+", 
          
          RowBox[{
           SuperscriptBox["Aplus", "2"], " ", "\[Omega]", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["y", "\[Prime]",
              MultilineFunction->None], "[", "\[Lambda]", "]"}], "2"]}], "-", 
          
          RowBox[{"2", " ", "Aplus", " ", "\[Omega]", " ", 
           RowBox[{"Sec", "[", 
            RowBox[{"\[Omega]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"t", "[", "\[Lambda]", "]"}], "-", 
               RowBox[{"x", "[", "\[Lambda]", "]"}]}], ")"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["t", "\[Prime]",
             MultilineFunction->None], "[", "\[Lambda]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["z", "\[Prime]",
             MultilineFunction->None], "[", "\[Lambda]", "]"}]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["Aplus", "2"], " ", "\[Omega]", " ", 
           RowBox[{"Tan", "[", 
            RowBox[{"\[Omega]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"t", "[", "\[Lambda]", "]"}], "-", 
               RowBox[{"x", "[", "\[Lambda]", "]"}]}], ")"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["t", "\[Prime]",
             MultilineFunction->None], "[", "\[Lambda]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["z", "\[Prime]",
             MultilineFunction->None], "[", "\[Lambda]", "]"}]}], "+", 
          RowBox[{"2", " ", "Aplus", " ", "\[Omega]", " ", 
           RowBox[{"Sec", "[", 
            RowBox[{"\[Omega]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"t", "[", "\[Lambda]", "]"}], "-", 
               RowBox[{"x", "[", "\[Lambda]", "]"}]}], ")"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["x", "\[Prime]",
             MultilineFunction->None], "[", "\[Lambda]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["z", "\[Prime]",
             MultilineFunction->None], "[", "\[Lambda]", "]"}]}], "-", 
          RowBox[{
           SuperscriptBox["Aplus", "2"], " ", "\[Omega]", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["z", "\[Prime]",
              MultilineFunction->None], "[", "\[Lambda]", "]"}], "2"]}]}], 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["Aplus", "2"], "-", 
            SuperscriptBox[
             RowBox[{"Sec", "[", 
              RowBox[{"\[Omega]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"t", "[", "\[Lambda]", "]"}], "-", 
                 RowBox[{"x", "[", "\[Lambda]", "]"}]}], ")"}]}], "]"}], "2"],
             "-", 
            RowBox[{"Aplus", " ", 
             RowBox[{"Sec", "[", 
              RowBox[{"\[Omega]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"t", "[", "\[Lambda]", "]"}], "-", 
                 RowBox[{"x", "[", "\[Lambda]", "]"}]}], ")"}]}], "]"}], " ", 
             
             RowBox[{"Tan", "[", 
              RowBox[{"\[Omega]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"t", "[", "\[Lambda]", "]"}], "-", 
                 RowBox[{"x", "[", "\[Lambda]", "]"}]}], ")"}]}], "]"}]}]}], 
           ")"}]}]]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.82212680287188*^9, 3.822137984454973*^9, 
  3.848260565475246*^9, 3.848260891703804*^9, 3.883903446472013*^9, 
  3.883906982184834*^9},
 CellLabel->
  "Out[49]//TableForm=",ExpressionUUID->"5ee71a11-52f6-43cf-9ac4-\
ca67570d432b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Line Element and Metric 8.1:  Schwarzschild", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.822137939520461*^9, 3.8221379601649446`*^9}, {
  3.88390391395518*^9, 
  3.883903919591402*^9}},ExpressionUUID->"4e937120-35fa-47fd-8893-\
033fbdda4e13"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq8pt1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq8pt1", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"1", "-", " ", 
       FractionBox[
        RowBox[{"2", " ", "M"}], "r"]}], ")"}]}], " ", 
    SuperscriptBox["dt", "2"]}], "+", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"2", " ", "M"}], "r"]}], ")"}], 
     RowBox[{"-", "1"}]], " ", 
    SuperscriptBox["dr", "2"]}], "+", " ", 
   RowBox[{
    SuperscriptBox["r", "2"], 
    RowBox[{"(", " ", 
     RowBox[{
      SuperscriptBox["d\[Theta]", "2"], "+", " ", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
       SuperscriptBox["d\[Phi]", "2"]}]}], ")"}]}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.822126718648168*^9, 3.822126792150009*^9}, 
   3.822137953207501*^9},
 CellLabel->"In[50]:=",ExpressionUUID->"7eed098d-c923-434b-a94c-a1dd1ee7011c"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["dr", "2"], 
   RowBox[{"1", "-", 
    FractionBox[
     RowBox[{"2", " ", "M"}], "r"]}]], "+", 
  RowBox[{
   SuperscriptBox["dt", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox[
      RowBox[{"2", " ", "M"}], "r"]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["d\[Theta]", "2"], "+", 
     RowBox[{
      SuperscriptBox["d\[Phi]", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.822126793554839*^9, 3.82212680288422*^9}, 
   3.822127562820561*^9, 3.822137953207981*^9, 3.848260565487105*^9, 
   3.8482608917262907`*^9, 3.883903446493618*^9, 3.8839069821967707`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"f0c1e2a7-1dd8-4b7e-9e02-f17c32537735"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric8pt1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric8pt1", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"lineToMetric", "[", " ", 
    RowBox[{"eq8pt1", " ", ",", " ", 
     RowBox[{"{", 
      RowBox[{"dt", ",", "dr", ",", "d\[Theta]", ",", "d\[Phi]"}], "}"}]}], 
    "]"}]}], "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"metric8pt1", "//", " ", "MatrixForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.82212756973562*^9, 3.82212760113433*^9}, 
   3.822137953208145*^9},
 CellLabel->"In[52]:=",ExpressionUUID->"acc4c0e4-00d7-40e3-95ed-12196bc0ed6b"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       FractionBox[
        RowBox[{"2", " ", "M"}], "r"]}], "0", "0", "0"},
     {"0", 
      FractionBox["1", 
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{"2", " ", "M"}], "r"]}]], "0", "0"},
     {"0", "0", 
      SuperscriptBox["r", "2"], "0"},
     {"0", "0", "0", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8221275816232233`*^9, 3.822127602211212*^9}, 
   3.822137953208481*^9, 3.848260565505451*^9, 3.8482608917639017`*^9, 
   3.883903446524066*^9, 3.8839069822174387`*^9},
 CellLabel->
  "Out[54]//MatrixForm=",ExpressionUUID->"7645dc0c-2998-4482-b652-\
d071a4a7ce76"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "g8pt1", " ", "]"}], "\[IndentingNewLine]", 
 RowBox[{"g8pt1", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"ToMetric", "[", 
   RowBox[{"\"\<g8pt1\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], " ", ",",
     " ", "metric8pt1", " ", ",", "  ", "\"\<Greek\>\""}], "]"}]}]}], "Input",\

 CellChangeTimes->{{3.883910063660672*^9, 3.883910103732851*^9}},
 CellLabel->
  "In[396]:=",ExpressionUUID->"d19e0126-25ee-454c-81b6-dd8d08729cdb"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g8pt1", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellChangeTimes->{3.883910105935698*^9},
 CellLabel->
  "Out[397]=",ExpressionUUID->"32909c66-8e94-40cb-ad5d-9afa8c42a3ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "inverse8pt1", " ", "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inverse8pt1", "  ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Inverse", "[", " ", "metric8pt1", " ", "]"}], " ", "//", " ", 
     "Expand"}], " ", "//", " ", "Simplify"}]}], "   ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"inverse8pt1", "  ", "//", " ", "MatrixForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8221275337518377`*^9, 3.8221275555175447`*^9}, {
   3.822127607807706*^9, 3.8221276496377583`*^9}, 3.822127692686563*^9, 
   3.822137953208644*^9, {3.883910125908618*^9, 3.883910136687887*^9}},
 CellLabel->
  "In[398]:=",ExpressionUUID->"21d80725-5012-4166-ad60-b4fcb31d5c0c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["r", 
       RowBox[{
        RowBox[{"2", " ", "M"}], "-", "r"}]], "0", "0", "0"},
     {"0", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"2", " ", "M"}], "r"]}], "0", "0"},
     {"0", "0", 
      FractionBox["1", 
       SuperscriptBox["r", "2"]], "0"},
     {"0", "0", "0", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], 
       SuperscriptBox["r", "2"]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.883910137171501*^9},
 CellLabel->
  "Out[400]//MatrixForm=",ExpressionUUID->"23939dd7-e344-4a0c-97e4-\
dac3134f03aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"metric8pt1", " ", ".", " ", "inverse8pt1"}], " ", "//", " ", 
    "Expand"}], " ", "//", " ", "Simplify"}], " ", "//", " ", 
  "MatrixForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.822127655406212*^9, 3.822127668316951*^9}, 
   3.822137953209407*^9},
 CellLabel->"In[57]:=",ExpressionUUID->"1db5257f-5a29-4bcc-b2e5-3c13f44c9451"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0"},
     {"0", "1", "0", "0"},
     {"0", "0", "1", "0"},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.822127668830573*^9, 3.8221379532099543`*^9, 
  3.848260565539166*^9, 3.848260891853715*^9, 3.883903446586755*^9, 
  3.8839069822584133`*^9},
 CellLabel->
  "Out[57]//MatrixForm=",ExpressionUUID->"fdea3126-81d3-4033-9db6-\
2d162a37dc0d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"inverse8pt1", "  ", ".", " ", "metric8pt1"}], "  ", "//", " ", 
     "Expand"}], " ", "//", " ", "Simplify"}], " ", "//", " ", 
   "MatrixForm"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.822127679698688*^9, 3.82212768422093*^9}, 
   3.82213795321012*^9},
 CellLabel->"In[58]:=",ExpressionUUID->"508ba5bd-d3dd-4ce5-93cd-4143b2471e88"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0"},
     {"0", "1", "0", "0"},
     {"0", "0", "1", "0"},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.8221276847755127`*^9, 3.82213795321043*^9, 
  3.848260565556336*^9, 3.848260891905819*^9, 3.883903446610981*^9, 
  3.8839069822776413`*^9},
 CellLabel->
  "Out[58]//MatrixForm=",ExpressionUUID->"2a3f8dc9-0dc4-4a1a-8f48-\
e0da2ff20994"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Not", " ", "working"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "eq8pt4", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eq8pt4", " ", "=", " ", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"u", " ", "\[Equal]", " ", 
        RowBox[{"t", " ", "-", " ", 
         SubscriptBox["r", "*"]}]}], " ", ",", " ", "\[IndentingNewLine]", 
       RowBox[{"v", " ", "\[Equal]", " ", 
        RowBox[{"t", " ", "+", " ", 
         SubscriptBox["r", "*"]}]}]}], "\[IndentingNewLine]", "}"}]}], " ", 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"eq8pt4", " ", "//", " ", "TableForm"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.822126866735817*^9, 3.822126935709599*^9}, {
   3.8221271759462423`*^9, 3.822127186589033*^9}, {3.8221272423364058`*^9, 
   3.82212724947797*^9}, 3.822137953210599*^9},
 CellLabel->"In[59]:=",ExpressionUUID->"86bf4dae-5df0-4951-91e1-ee623527771e"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"u", "\[Equal]", 
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["r", "*"]}], "+", "t"}]}]},
     {
      RowBox[{"v", "\[Equal]", 
       RowBox[{
        SubscriptBox["r", "*"], "+", "t"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.8221268705087442`*^9, {3.8221269262929153`*^9, 3.822126935964011*^9}, 
   3.822127188061763*^9, 3.822127274855692*^9, 3.822137953210894*^9, 
   3.848260565568218*^9, 3.848260891926281*^9, 3.8839034466295223`*^9, 
   3.883906982288885*^9},
 CellLabel->
  "Out[61]//TableForm=",ExpressionUUID->"a1d6af4b-59cb-4107-bef4-\
5ca2633376e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Not", " ", "working"}], " ", "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{
   SubscriptBox["r", "*"], " ", "\[Equal]", " ", 
   RowBox[{"r", " ", "+", " ", 
    RowBox[{"2", " ", "M", " ", 
     RowBox[{"Log", "[", 
      RowBox[{
       FractionBox["r", 
        RowBox[{"2", " ", "M"}]], "-", "1"}], " ", "]"}], 
     " "}]}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.822126966631476*^9, 3.822127015053709*^9}, {
   3.822127227882065*^9, 3.822127232060998*^9}, {3.82212729064637*^9, 
   3.822127294583893*^9}, 3.822137953211039*^9},
 CellLabel->"In[62]:=",ExpressionUUID->"9e7b3b77-00ff-44a3-88fa-c678dbd1a7bd"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["r", "*"], "\[Equal]", 
  RowBox[{"r", "+", 
   RowBox[{"2", " ", "M", " ", 
    RowBox[{"Log", "[", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      FractionBox["r", 
       RowBox[{"2", " ", "M"}]]}], "]"}]}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.822127018472991*^9, 3.822127233941511*^9, 
  3.822127277151821*^9, 3.822137953211492*^9, 3.848260565584352*^9, 
  3.848260891961144*^9, 3.8839034467176037`*^9, 3.8839069823074007`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"f674f706-fe2f-43ab-bf04-5faaac131605"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Killing Vector Field For Schwarzschild 8.2", "Section",
 CellChangeTimes->{{3.883911663305337*^9, 
  3.8839116968909607`*^9}},ExpressionUUID->"b9d9c1e5-c2a5-46f1-8437-\
65938b4dc7f0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq8pt2", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq8pt2", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Xi]0", " ", "==", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Xi]1", " ", "==", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cot", "[", "\[Theta]", "]"}]}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "}"}]}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Xi]2", " ", "==", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{"-", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cot", "[", "\[Theta]", "]"}]}], "  ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], "}"}]}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Xi]3", " ", "==", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq8pt2", "  ", "//", " ", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.8839096600156384`*^9, 3.883909672961986*^9}, {
  3.8839097181316433`*^9, 3.883909828138942*^9}},
 CellLabel->
  "In[393]:=",ExpressionUUID->"a2713925-244b-4ad3-b4de-f10e16a6289d"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"\[Xi]0", "\[Equal]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}]},
     {
      RowBox[{"\[Xi]1", "\[Equal]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], ",", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cot", "[", "\[Theta]", "]"}]}], " ", 
          RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "}"}]}]},
     {
      RowBox[{"\[Xi]2", "\[Equal]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", 
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", "\[Phi]", "]"}]}], " ", 
          RowBox[{"Cot", "[", "\[Theta]", "]"}]}]}], "}"}]}]},
     {
      RowBox[{"\[Xi]3", "\[Equal]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.883909828855898*^9},
 CellLabel->
  "Out[395]//TableForm=",ExpressionUUID->"e014d6e7-50c5-4dcf-a828-\
4aaa39a4e3d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "xi0", "]"}], "\[IndentingNewLine]", 
 RowBox[{"xi0", " ", "=", " ", 
  RowBox[{"ToTensor", "[", " ", 
   RowBox[{"\"\<\[Xi]0\>\"", " ", ",", " ", "g8pt1", " ", ",", 
    RowBox[{"eq8pt2", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"-", "\[Mu]"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.883909903918622*^9, 3.883909921828907*^9}, {
  3.883910260528344*^9, 3.88391028221836*^9}},
 CellLabel->
  "In[403]:=",ExpressionUUID->"a1d369f9-60cc-42af-9ba6-3c00a90cb0ee"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["\[Xi]0", "\[Mu]", ""],
  DisplayForm]], "Output",
 CellChangeTimes->{3.883910283817487*^9},
 CellLabel->
  "Out[404]=",ExpressionUUID->"deed03d7-0e58-44a5-a3a9-a18683406abc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "xi1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"xi1", " ", "=", " ", 
  RowBox[{"ToTensor", "[", " ", 
   RowBox[{"\"\<\[Xi]1\>\"", " ", ",", " ", "g8pt1", " ", ",", 
    RowBox[{"eq8pt2", "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"-", "\[Mu]"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8839104195168343`*^9, 3.883910425546884*^9}},
 CellLabel->
  "In[416]:=",ExpressionUUID->"9bdfed0d-8d34-4759-995e-a5aa05e3aef9"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["\[Xi]1", "\[Mu]", ""],
  DisplayForm]], "Output",
 CellChangeTimes->{3.883910426181473*^9},
 CellLabel->
  "Out[417]=",ExpressionUUID->"e93ec85e-21ad-465e-af7d-159964095e8d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "xi2", "]"}], "\[IndentingNewLine]", 
 RowBox[{"xi2", " ", "=", " ", 
  RowBox[{"ToTensor", "[", " ", 
   RowBox[{"\"\<\[Xi]2\>\"", " ", ",", " ", "g8pt1", " ", ",", 
    RowBox[{"eq8pt2", "[", 
     RowBox[{"[", 
      RowBox[{"3", ",", "2"}], "]"}], "]"}], " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"-", "\[Mu]"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.883910431397159*^9, 3.883910439609713*^9}},
 CellLabel->
  "In[418]:=",ExpressionUUID->"db7982e5-a703-43ae-8009-5bdabf5019df"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["\[Xi]2", "\[Mu]", ""],
  DisplayForm]], "Output",
 CellChangeTimes->{3.8839104402315617`*^9},
 CellLabel->
  "Out[419]=",ExpressionUUID->"385a9bdb-8b47-44f4-bb5e-15e9c7b02e25"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "xi3", "]"}], "\[IndentingNewLine]", 
 RowBox[{"xi3", " ", "=", " ", 
  RowBox[{"ToTensor", "[", " ", 
   RowBox[{"\"\<\[Xi]3\>\"", " ", ",", " ", "g8pt1", " ", ",", 
    RowBox[{"eq8pt2", "[", 
     RowBox[{"[", 
      RowBox[{"4", ",", "2"}], "]"}], "]"}], " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"-", "\[Mu]"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.883910444897347*^9, 3.883910451917466*^9}},
 CellLabel->
  "In[420]:=",ExpressionUUID->"3bbe80d9-a8a3-4575-b831-cea6cc7f1f9f"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["\[Xi]3", "\[Mu]", ""],
  DisplayForm]], "Output",
 CellChangeTimes->{3.88391045264079*^9},
 CellLabel->
  "Out[421]=",ExpressionUUID->"6e2fd11d-476e-4b49-96b9-bd2286f0a378"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "xi", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xi", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"xi1", " ", ",", "xi2", ",", "xi3"}], "\[IndentingNewLine]", 
    "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"xi", " ", "//", " ", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.88391054451947*^9, 3.883910575615919*^9}},
 CellLabel->
  "In[425]:=",ExpressionUUID->"d15ca5ca-8476-43f7-8723-72b3cbf01ac0"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox[
       SubsuperscriptBox["\[Xi]1", "\[Mu]", ""],
       DisplayForm]},
     {
      TagBox[
       SubsuperscriptBox["\[Xi]2", "\[Mu]", ""],
       DisplayForm]},
     {
      TagBox[
       SubsuperscriptBox["\[Xi]3", "\[Mu]", ""],
       DisplayForm]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.883910576072756*^9},
 CellLabel->
  "Out[427]//TableForm=",ExpressionUUID->"b10d1fcd-cea6-4be0-a569-\
0f105ee5b704"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"TensorValues", "[", 
   RowBox[{"MergeTensors", "[", 
    RowBox[{"CovariantD", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"xi", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"-", "\[Mu]"}], "]"}], ",", 
      RowBox[{"-", "\[Nu]"}]}], "]"}], "]"}], "]"}], "-", 
  RowBox[{"TensorValues", "[", 
   RowBox[{"MergeTensors", "[", 
    RowBox[{"CovariantD", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"xi", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"-", "\[Nu]"}], "]"}], ",", 
      RowBox[{"-", "\[Mu]"}]}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8839114451902313`*^9, 3.883911489414871*^9}, {
  3.883911547071455*^9, 3.8839116151922894`*^9}, {3.88391165270148*^9, 
  3.883911653251848*^9}},
 CellLabel->
  "In[444]:=",ExpressionUUID->"790a6338-06d8-452c-8b33-c04baaadd93f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"]}]}], ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8839114896125793`*^9, {3.883911550841498*^9, 3.883911618819262*^9}, 
   3.8839116538521137`*^9},
 CellLabel->
  "Out[444]=",ExpressionUUID->"96596096-0ccd-4dd5-af15-eba9447a2b1b"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Tensors Calculated For Schwarzschild In Spherical Coordinates\
\>", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822128104734079*^9, 3.8221281647334127`*^9}, 
   3.8248591649177637`*^9},ExpressionUUID->"760b238e-08b1-4b15-9696-\
589d556af052"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "will", " ", "need", " ", "to", " ", "be", " ", "rewritten", 
    " ", "so", " ", "can", " ", "work", " ", "with", " ", "multiple", " ", 
    "metrics"}], " ", "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "input", "]"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"input", "[", 
      RowBox[{
      "equationNumber_", ",", "equation_", ",", "metricName_", ",", 
       "displayName_", ",", "variables_", ",", "indices_"}], "]"}], ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Clear", "[", "tensorList", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"tensorList", " ", "=", " ", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\"\<g\>\"", "<>", "equationNumber"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<christoffel\>\"", "<>", "equationNumber"}], " ", ",", 
           " ", "\[IndentingNewLine]", 
           RowBox[{"\"\<riemann\>\"", "<>", "equationNumber"}], "  ", ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<ricci\>\"", "<>", "equationNumber"}], " ", ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<ricciscalar\>\"", "<>", "equationNumber"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<kretschmannscalar\>\"", "<>", "equationNumber"}], 
           "  ", ",", "\[IndentingNewLine]", 
           RowBox[{"\"\<einstein\>\"", "<>", "equationNumber"}], "  ", ",", 
           " ", "\[IndentingNewLine]", 
           RowBox[{"\"\<weyl\>\"", "<>", "equationNumber"}], "  ", ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<cotton\>\"", "<>", "equationNumber"}]}], "  ", 
          "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"ToMetric", "[", 
          RowBox[{
           RowBox[{"{", " ", 
            RowBox[{"metricName", ",", " ", "displayName"}], " ", "}"}], " ", 
           ",", " ", "variables", ",", " ", "equation", ",", " ", "indices"}],
           " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "  ", "=", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"ChristoffelSymbol", "[", " ", 
          RowBox[{
           RowBox[{"tensorList", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
           RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], "]"}]}], " ", 
        ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "3", "]"}], "]"}], " ", "=", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"RiemannTensor", "[", " ", 
          RowBox[{
           RowBox[{"tensorList", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
           RowBox[{"ActWithNested", "\[Rule]", " ", "Simplify"}]}], " ", 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "4", "]"}], "]"}], " ", "=", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"RicciTensor", "[", " ", 
          RowBox[{
           RowBox[{"tensorList", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
           RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}]}], 
        " ", ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "5", "]"}], "]"}], " ", "=", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"RicciScalar", "[", " ", 
          RowBox[{
           RowBox[{"tensorList", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
           RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}]}], 
        " ", ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "6", "]"}], "]"}], " ", "=", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"KretschmannScalar", "[", " ", 
          RowBox[{
           RowBox[{"tensorList", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
           RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], "]"}]}], " ", 
        ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "7", "]"}], "]"}], " ", "=", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"EinsteinTensor", "[", " ", 
          RowBox[{
           RowBox[{"tensorList", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
           RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], "]"}]}], " ", 
        ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "8", "]"}], "]"}], " ", "=", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"WeylTensor", "[", " ", 
          RowBox[{
           RowBox[{"tensorList", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
           RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}]}], 
        "  ", ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "9", "]"}], "]"}], " ", "=", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"CottonTensor", "[", " ", 
          RowBox[{
           RowBox[{"tensorList", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
           RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}]}], 
        " ", ";"}]}], " ", "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",\

 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822127787656331*^9, 3.822127821505797*^9}, {
   3.822128593218276*^9, 3.822128622394565*^9}, 3.824859164917938*^9},
 CellLabel->"In[63]:=",ExpressionUUID->"033bf7df-86b3-4752-ad3d-975e4e86ea40"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Last", " ", "timing", " ", "took", " ", "2.05", " ", "for", " ", "all", 
    " ", "tensors"}], " ", "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"input", "[", " ", 
    RowBox[{
    "\"\<metric8pt1\>\"", ",", " ", "metric8pt1", ",", " ", 
     "\"\<Schwarzschild\>\"", ",", 
     "\"\<\!\(\*SuperscriptBox[\(g\), \(Schw\)]\)\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
     " ", "\"\<Greek\>\""}], "]"}], " ", "//", " ", "Timing"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822127836119576*^9, 3.822127902854714*^9}, {
   3.8221285932185593`*^9, 3.822128622394732*^9}, 3.824859164918037*^9},
 CellLabel->"In[65]:=",ExpressionUUID->"f6951fce-4af1-4e81-aca6-e845b9ee35fd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.999719`", ",", "Null"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.822127889883855*^9, {3.8221285932190037`*^9, 3.822128622394924*^9}, 
   3.824859164918153*^9, 3.848260567722056*^9, 3.848260895316654*^9, 
   3.8839034489684267`*^9, 3.883906984341929*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"f142231f-cf0b-47ab-a2a5-2ce06e877728"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["tensorList"], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822127905192049*^9, 3.82212790591111*^9}, 
   3.822128135665921*^9, 3.824859164918234*^9},
 CellLabel->"In[66]:=",ExpressionUUID->"aad586f9-9279-4497-b763-db5f8e54e600"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    SubsuperscriptBox[
     SuperscriptBox["g", "Schw"], "\[Alpha]\[Beta]", ""],
    DisplayForm], ",", 
   TagBox[
    SubsuperscriptBox["\[CapitalGamma]", 
     RowBox[{"  ", "\[Beta]\[Gamma]"}], 
     RowBox[{"\[Alpha]", "    "}]],
    DisplayForm], ",", 
   TagBox[
    SubsuperscriptBox["R", "\[Alpha]\[Beta]\[Gamma]\[Delta]", ""],
    DisplayForm], ",", 
   TagBox[
    SubsuperscriptBox["R", "\[Beta]\[Gamma]", ""],
    DisplayForm], ",", 
   TagBox["\<\"R\"\>",
    DisplayForm], ",", 
   TagBox["\<\"K\"\>",
    DisplayForm], ",", 
   TagBox[
    SubsuperscriptBox["G", "\[Alpha]\[Beta]", ""],
    DisplayForm], ",", 
   TagBox[
    SubsuperscriptBox["C", "\[Alpha]\[Beta]\[Gamma]\[Delta]", ""],
    DisplayForm], ",", 
   TagBox[
    SubsuperscriptBox["C", "\[Alpha]\[Beta]\[Gamma]", ""],
    DisplayForm]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.822127906877399*^9, 3.822128135666161*^9, 
  3.824859164918326*^9, 3.8482605677493153`*^9, 3.848260895365203*^9, 
  3.883903449073595*^9, 3.883906984407353*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"a979ff75-ea3e-467e-b998-4aaa5dfa14eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "1", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.82093459847665*^9, 3.820934601699522*^9}, 
   3.8209374922041063`*^9, 3.821110229351385*^9, 3.821730413309883*^9, 
   3.824859164918407*^9},
 CellLabel->"In[67]:=",ExpressionUUID->"1b37d2da-6cfd-43fa-a59a-700e894e1bcb"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox[
   SuperscriptBox["g", "Schw"], "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8221279599004507`*^9, 3.822128135666293*^9, 
  3.824859164918496*^9, 3.8482605677721024`*^9, 3.848260895378417*^9, 
  3.883903449089549*^9, 3.8839069844189587`*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"287518e7-0ed5-4ff9-8df1-a3526593bf93"],

Cell[BoxData["\<\"Schwarzschild\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8221279599004507`*^9, 3.822128135666293*^9, 
  3.824859164918496*^9, 3.8482605677721024`*^9, 3.848260895378417*^9, 
  3.883903449089549*^9, 3.883906984420556*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"a98a720c-f9a6-43cd-bd01-891a71a86065"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        FractionBox[
         RowBox[{"2", " ", "M"}], "r"], "-", "1"}], "0", "0", "0"},
      {"0", 
       FractionBox["1", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"2", " ", "M"}], "r"]}]], "0", "0"},
      {"0", "0", 
       SuperscriptBox["r", "2"], "0"},
      {"0", "0", "0", 
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8221279599004507`*^9, 3.822128135666293*^9, 
  3.824859164918496*^9, 3.8482605677721024`*^9, 3.848260895378417*^9, 
  3.883903449089549*^9, 3.883906984422577*^9},
 CellLabel->
  "Out[69]//TraditionalForm=",ExpressionUUID->"3689c311-e8cf-4a04-a104-\
066431d38c8f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "2", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.82093459847665*^9, 3.820934601699522*^9}, 
   3.8209374922041063`*^9, 3.821110229351385*^9, 3.821730413309883*^9, {
   3.822127963807151*^9, 3.822127967134041*^9}, 3.824859164918722*^9},
 CellLabel->"In[70]:=",ExpressionUUID->"8e735174-3a5c-4b6b-8eba-18096e0db43b"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["\[CapitalGamma]", 
   RowBox[{"  ", "\[Beta]\[Gamma]"}], 
   RowBox[{"\[Alpha]", "    "}]],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.822127968354233*^9, 3.822128135666627*^9, 
  3.824859164918804*^9, 3.848260567796823*^9, 3.848260895415286*^9, 
  3.8839034491428556`*^9, 3.8839069844563007`*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"66da72b2-bc52-4b5f-abb1-cf8aae384436"],

Cell[BoxData["\<\"ChristoffelSymbolSchwarzschild\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.822127968354233*^9, 3.822128135666627*^9, 
  3.824859164918804*^9, 3.848260567796823*^9, 3.848260895415286*^9, 
  3.8839034491428556`*^9, 3.883906984458407*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"206c2a5a-4e7e-42ed-ae50-dc4483670c07"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {
            RowBox[{"-", 
             FractionBox["M", 
              RowBox[{
               RowBox[{"2", " ", "M", " ", "r"}], "-", 
               SuperscriptBox["r", "2"]}]]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{"-", 
             FractionBox["M", 
              RowBox[{
               RowBox[{"2", " ", "M", " ", "r"}], "-", 
               SuperscriptBox["r", "2"]}]]}]},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{"M", " ", 
              RowBox[{"(", 
               RowBox[{"r", "-", 
                RowBox[{"2", " ", "M"}]}], ")"}]}], 
             SuperscriptBox["r", "3"]]},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {
            FractionBox["M", 
             RowBox[{
              RowBox[{"2", " ", "M", " ", "r"}], "-", 
              SuperscriptBox["r", "2"]}]]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{
             RowBox[{"2", " ", "M"}], "-", "r"}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{
             RowBox[{
              SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "M"}], "-", "r"}], ")"}]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            FractionBox["1", "r"]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {
            FractionBox["1", "r"]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{
             RowBox[{"sin", "(", "\[Theta]", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"-", 
               RowBox[{"cos", "(", "\[Theta]", ")"}]}], ")"}]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            FractionBox["1", "r"]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{"cot", "(", "\[Theta]", ")"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {
            FractionBox["1", "r"]},
           {
            RowBox[{"cot", "(", "\[Theta]", ")"}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.822127968354233*^9, 3.822128135666627*^9, 
  3.824859164918804*^9, 3.848260567796823*^9, 3.848260895415286*^9, 
  3.8839034491428556`*^9, 3.883906984463172*^9},
 CellLabel->
  "Out[72]//TraditionalForm=",ExpressionUUID->"26f7ffa3-9793-4fdb-bdcf-\
b16fb9f75c30"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "3", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.82093459847665*^9, 3.820934601699522*^9}, 
   3.8209374922041063`*^9, 3.821110229351385*^9, 3.821730413309883*^9, {
   3.82212797987103*^9, 3.822127982869594*^9}, 3.8248591649191427`*^9},
 CellLabel->"In[73]:=",ExpressionUUID->"25570815-6b18-4a9e-a97f-f58a138e0345"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["R", "\[Alpha]\[Beta]\[Gamma]\[Delta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.822127983575234*^9, 3.822128135666881*^9, 
  3.8248591649192247`*^9, 3.84826056784302*^9, 3.8482608954480953`*^9, 
  3.883903449199193*^9, 3.883906984484277*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"2b39277c-77c4-43a1-9fd6-0a83f97b2691"],

Cell[BoxData["\<\"RiemannTensorSchwarzschild\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.822127983575234*^9, 3.822128135666881*^9, 
  3.8248591649192247`*^9, 3.84826056784302*^9, 3.8482608954480953`*^9, 
  3.883903449199193*^9, 3.883906984485931*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"b2a05954-9537-437b-b60c-423feb33eabf"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"2", " ", "M"}], 
             SuperscriptBox["r", "3"]]}], "0", "0"},
          {
           FractionBox[
            RowBox[{"2", " ", "M"}], 
            SuperscriptBox["r", "3"]], "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           FractionBox[
            RowBox[{"M", " ", 
             RowBox[{"(", 
              RowBox[{"r", "-", 
               RowBox[{"2", " ", "M"}]}], ")"}]}], 
            SuperscriptBox["r", "2"]], "0"},
          {"0", "0", "0", "0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"M", " ", 
              RowBox[{"(", 
               RowBox[{"r", "-", 
                RowBox[{"2", " ", "M"}]}], ")"}]}], 
             SuperscriptBox["r", "2"]]}], "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"M", " ", 
              RowBox[{
               SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "M"}], "-", "r"}], ")"}]}], 
             SuperscriptBox["r", "2"]]}]},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {
           FractionBox[
            RowBox[{"M", " ", 
             RowBox[{
              SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "M"}], "-", "r"}], ")"}]}], 
            SuperscriptBox["r", "2"]], "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           FractionBox[
            RowBox[{"2", " ", "M"}], 
            SuperscriptBox["r", "3"]], "0", "0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"2", " ", "M"}], 
             SuperscriptBox["r", "3"]]}], "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", 
           FractionBox["M", 
            RowBox[{
             RowBox[{"2", " ", "M"}], "-", "r"}]], "0"},
          {"0", 
           RowBox[{"-", 
            FractionBox["M", 
             RowBox[{
              RowBox[{"2", " ", "M"}], "-", "r"}]]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           FractionBox[
            RowBox[{"M", " ", 
             RowBox[{
              SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}], 
            RowBox[{
             RowBox[{"2", " ", "M"}], "-", "r"}]]},
          {"0", "0", "0", "0"},
          {"0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"M", " ", 
              RowBox[{
               SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}], 
             RowBox[{
              RowBox[{"2", " ", "M"}], "-", "r"}]]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"M", " ", 
              RowBox[{"(", 
               RowBox[{"r", "-", 
                RowBox[{"2", " ", "M"}]}], ")"}]}], 
             SuperscriptBox["r", "2"]]}], "0"},
          {"0", "0", "0", "0"},
          {
           FractionBox[
            RowBox[{"M", " ", 
             RowBox[{"(", 
              RowBox[{"r", "-", 
               RowBox[{"2", " ", "M"}]}], ")"}]}], 
            SuperscriptBox["r", "2"]], "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", 
           RowBox[{"-", 
            FractionBox["M", 
             RowBox[{
              RowBox[{"2", " ", "M"}], "-", "r"}]]}], "0"},
          {"0", 
           FractionBox["M", 
            RowBox[{
             RowBox[{"2", " ", "M"}], "-", "r"}]], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{"2", " ", "M", " ", "r", " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}]},
          {"0", "0", 
           RowBox[{
            RowBox[{"-", "2"}], " ", "M", " ", "r", " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           FractionBox[
            RowBox[{"M", " ", 
             RowBox[{
              SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "M"}], "-", "r"}], ")"}]}], 
            SuperscriptBox["r", "2"]]},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"M", " ", 
              RowBox[{
               SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "M"}], "-", "r"}], ")"}]}], 
             SuperscriptBox["r", "2"]]}], "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"M", " ", 
              RowBox[{
               SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}], 
             RowBox[{
              RowBox[{"2", " ", "M"}], "-", "r"}]]}]},
          {"0", "0", "0", "0"},
          {"0", 
           FractionBox[
            RowBox[{"M", " ", 
             RowBox[{
              SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}], 
            RowBox[{
             RowBox[{"2", " ", "M"}], "-", "r"}]], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", "2"}], " ", "M", " ", "r", " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}]},
          {"0", "0", 
           RowBox[{"2", " ", "M", " ", "r", " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.822127983575234*^9, 3.822128135666881*^9, 
  3.8248591649192247`*^9, 3.84826056784302*^9, 3.8482608954480953`*^9, 
  3.883903449199193*^9, 3.883906984560849*^9},
 CellLabel->
  "Out[75]//TraditionalForm=",ExpressionUUID->"35ef075f-8c02-4d86-bb38-\
e8986cf0fa74"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "4", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "4", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.82093459847665*^9, 3.820934601699522*^9}, 
   3.8209374922041063`*^9, 3.821110229351385*^9, 3.821730413309883*^9, {
   3.822127988334804*^9, 3.822127991710122*^9}, 3.824859164919446*^9},
 CellLabel->"In[76]:=",ExpressionUUID->"9e3ae8de-332f-43fa-b13b-8757df5e298e"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["R", "\[Beta]\[Gamma]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8221279923514843`*^9, 3.822128135667118*^9, 
  3.824859164919526*^9, 3.848260567958359*^9, 3.848260895550274*^9, 
  3.883903449288492*^9, 3.8839069845779543`*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"73eb98e9-1904-4ab7-952b-0896dac0af47"],

Cell[BoxData["\<\"RicciTensorSchwarzschild\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8221279923514843`*^9, 3.822128135667118*^9, 
  3.824859164919526*^9, 3.848260567958359*^9, 3.848260895550274*^9, 
  3.883903449288492*^9, 3.8839069845795517`*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"9848747b-920e-4ecc-a16a-9935a6d837c9"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8221279923514843`*^9, 3.822128135667118*^9, 
  3.824859164919526*^9, 3.848260567958359*^9, 3.848260895550274*^9, 
  3.883903449288492*^9, 3.883906984581769*^9},
 CellLabel->
  "Out[78]//TraditionalForm=",ExpressionUUID->"b8ba34d0-a950-4951-a45e-\
a4384566b778"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "5", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "5", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "5", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.82093459847665*^9, 3.820934601699522*^9}, 
   3.8209374922041063`*^9, 3.821110229351385*^9, 3.821730413309883*^9, {
   3.822127998527218*^9, 3.8221280021178637`*^9}, 3.824859164919745*^9},
 CellLabel->"In[79]:=",ExpressionUUID->"6a647bf7-07df-485a-96b3-8fb1fb70d2c3"],

Cell[BoxData[
 TagBox["\<\"R\"\>",
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8221280025971813`*^9, 3.822128135667362*^9, 
  3.824859164919825*^9, 3.848260567986959*^9, 3.848260895567574*^9, 
  3.883903449319193*^9, 3.883906984606357*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"6f407386-4ad3-4958-8c8b-ac31932a5468"],

Cell[BoxData["\<\"RicciScalarSchwarzschild\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8221280025971813`*^9, 3.822128135667362*^9, 
  3.824859164919825*^9, 3.848260567986959*^9, 3.848260895567574*^9, 
  3.883903449319193*^9, 3.8839069846081543`*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"dec4fc70-2379-41b9-bfe2-64670dbc55b4"],

Cell[BoxData[
 FormBox[
  TagBox["0",
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8221280025971813`*^9, 3.822128135667362*^9, 
  3.824859164919825*^9, 3.848260567986959*^9, 3.848260895567574*^9, 
  3.883903449319193*^9, 3.883906984610196*^9},
 CellLabel->
  "Out[81]//TraditionalForm=",ExpressionUUID->"4a3b1467-21e1-4a92-9e6e-\
383285152416"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "6", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "6", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "6", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.82093459847665*^9, 3.820934601699522*^9}, 
   3.8209374922041063`*^9, 3.821110229351385*^9, 3.821730413309883*^9, {
   3.822128007463336*^9, 3.822128011165935*^9}, 3.82485916492004*^9},
 CellLabel->"In[82]:=",ExpressionUUID->"cb79598b-20ca-4f54-b802-6614a0d76620"],

Cell[BoxData[
 TagBox["\<\"K\"\>",
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.822128011833991*^9, 3.822128135667593*^9, 
  3.824859164920121*^9, 3.848260568005382*^9, 3.848260895595536*^9, 
  3.883903449341392*^9, 3.883906984622838*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"a520806d-e31c-4b93-b7ce-1d99784d7cb7"],

Cell[BoxData["\<\"KretschmannScalarSchwarzschild\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.822128011833991*^9, 3.822128135667593*^9, 
  3.824859164920121*^9, 3.848260568005382*^9, 3.848260895595536*^9, 
  3.883903449341392*^9, 3.883906984624569*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"60ef278b-4b58-44e7-aafb-686ebaaf0aa9"],

Cell[BoxData[
 FormBox[
  TagBox[
   FractionBox[
    RowBox[{"48", " ", 
     SuperscriptBox["M", "2"]}], 
    SuperscriptBox["r", "6"]],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.822128011833991*^9, 3.822128135667593*^9, 
  3.824859164920121*^9, 3.848260568005382*^9, 3.848260895595536*^9, 
  3.883903449341392*^9, 3.88390698462645*^9},
 CellLabel->
  "Out[84]//TraditionalForm=",ExpressionUUID->"e9d0a4a8-ca3e-4090-a63b-\
115d39584530"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "7", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "7", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "7", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.82093459847665*^9, 3.820934601699522*^9}, 
   3.8209374922041063`*^9, 3.821110229351385*^9, 3.821730413309883*^9, {
   3.822128016151349*^9, 3.8221280196862164`*^9}, 3.824859164920339*^9},
 CellLabel->"In[85]:=",ExpressionUUID->"41d580ca-748a-48a2-ae12-16faaff57906"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["G", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.822128020447147*^9, 3.8221281356678257`*^9, 
  3.8248591649204206`*^9, 3.848260568037445*^9, 3.848260895613405*^9, 
  3.883903449373847*^9, 3.883906984649932*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"49e56e5d-1159-4b11-811d-88a9e3cc50d8"],

Cell[BoxData["\<\"EinsteinTensorSchwarzschild\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.822128020447147*^9, 3.8221281356678257`*^9, 
  3.8248591649204206`*^9, 3.848260568037445*^9, 3.848260895613405*^9, 
  3.883903449373847*^9, 3.8839069846516657`*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"b16cb119-bce1-42d3-8297-0810e84f8c15"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.822128020447147*^9, 3.8221281356678257`*^9, 
  3.8248591649204206`*^9, 3.848260568037445*^9, 3.848260895613405*^9, 
  3.883903449373847*^9, 3.883906984654747*^9},
 CellLabel->
  "Out[87]//TraditionalForm=",ExpressionUUID->"88c998fa-6965-4713-bd34-\
271c69fa6c6f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "8", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "8", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "8", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.82093459847665*^9, 3.820934601699522*^9}, 
   3.8209374922041063`*^9, 3.821110229351385*^9, 3.821730413309883*^9, {
   3.8221280245032997`*^9, 3.822128028429935*^9}, 3.824859164920644*^9},
 CellLabel->"In[88]:=",ExpressionUUID->"2153addb-5702-4fdb-9da1-05cc2531b970"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["C", "\[Alpha]\[Beta]\[Gamma]\[Delta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.822128029109964*^9, 3.8221281356680603`*^9, 
  3.824859164920727*^9, 3.848260568064773*^9, 3.848260895649749*^9, 
  3.883903449404006*^9, 3.883906984674493*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"d1728398-5ba3-431a-9e48-fdfc3ed0ed77"],

Cell[BoxData["\<\"WeylTensorSchwarzschild\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.822128029109964*^9, 3.8221281356680603`*^9, 
  3.824859164920727*^9, 3.848260568064773*^9, 3.848260895649749*^9, 
  3.883903449404006*^9, 3.883906984676354*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"ab89f2d7-5af3-4d3d-ad83-434c247bb4a9"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"2", " ", "M"}], 
             SuperscriptBox["r", "3"]]}], "0", "0"},
          {
           FractionBox[
            RowBox[{"2", " ", "M"}], 
            SuperscriptBox["r", "3"]], "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           FractionBox[
            RowBox[{"M", " ", 
             RowBox[{"(", 
              RowBox[{"r", "-", 
               RowBox[{"2", " ", "M"}]}], ")"}]}], 
            SuperscriptBox["r", "2"]], "0"},
          {"0", "0", "0", "0"},
          {
           FractionBox[
            RowBox[{"M", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "M"}], "-", "r"}], ")"}]}], 
            SuperscriptBox["r", "2"]], "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"M", " ", 
              RowBox[{
               SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "M"}], "-", "r"}], ")"}]}], 
             SuperscriptBox["r", "2"]]}]},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {
           FractionBox[
            RowBox[{"M", " ", 
             RowBox[{
              SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "M"}], "-", "r"}], ")"}]}], 
            SuperscriptBox["r", "2"]], "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           FractionBox[
            RowBox[{"2", " ", "M"}], 
            SuperscriptBox["r", "3"]], "0", "0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"2", " ", "M"}], 
             SuperscriptBox["r", "3"]]}], "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", 
           FractionBox["M", 
            RowBox[{
             RowBox[{"2", " ", "M"}], "-", "r"}]], "0"},
          {"0", 
           RowBox[{"-", 
            FractionBox["M", 
             RowBox[{
              RowBox[{"2", " ", "M"}], "-", "r"}]]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           FractionBox[
            RowBox[{"M", " ", 
             RowBox[{
              SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}], 
            RowBox[{
             RowBox[{"2", " ", "M"}], "-", "r"}]]},
          {"0", "0", "0", "0"},
          {"0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"M", " ", 
              RowBox[{
               SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}], 
             RowBox[{
              RowBox[{"2", " ", "M"}], "-", "r"}]]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           FractionBox[
            RowBox[{"M", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "M"}], "-", "r"}], ")"}]}], 
            SuperscriptBox["r", "2"]], "0"},
          {"0", "0", "0", "0"},
          {
           FractionBox[
            RowBox[{"M", " ", 
             RowBox[{"(", 
              RowBox[{"r", "-", 
               RowBox[{"2", " ", "M"}]}], ")"}]}], 
            SuperscriptBox["r", "2"]], "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", 
           RowBox[{"-", 
            FractionBox["M", 
             RowBox[{
              RowBox[{"2", " ", "M"}], "-", "r"}]]}], "0"},
          {"0", 
           FractionBox["M", 
            RowBox[{
             RowBox[{"2", " ", "M"}], "-", "r"}]], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{"2", " ", "M", " ", "r", " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}]},
          {"0", "0", 
           RowBox[{
            RowBox[{"-", "2"}], " ", "M", " ", "r", " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           FractionBox[
            RowBox[{"M", " ", 
             RowBox[{
              SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "M"}], "-", "r"}], ")"}]}], 
            SuperscriptBox["r", "2"]]},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"M", " ", 
              RowBox[{
               SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "M"}], "-", "r"}], ")"}]}], 
             SuperscriptBox["r", "2"]]}], "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"M", " ", 
              RowBox[{
               SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}], 
             RowBox[{
              RowBox[{"2", " ", "M"}], "-", "r"}]]}]},
          {"0", "0", "0", "0"},
          {"0", 
           FractionBox[
            RowBox[{"M", " ", 
             RowBox[{
              SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}], 
            RowBox[{
             RowBox[{"2", " ", "M"}], "-", "r"}]], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", "2"}], " ", "M", " ", "r", " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}]},
          {"0", "0", 
           RowBox[{"2", " ", "M", " ", "r", " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.822128029109964*^9, 3.8221281356680603`*^9, 
  3.824859164920727*^9, 3.848260568064773*^9, 3.848260895649749*^9, 
  3.883903449404006*^9, 3.883906984748289*^9},
 CellLabel->
  "Out[90]//TraditionalForm=",ExpressionUUID->"5fd53e4c-6117-459a-8da0-\
1896a1ee00bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "9", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "9", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "9", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.82093459847665*^9, 3.820934601699522*^9}, 
   3.8209374922041063`*^9, 3.821110229351385*^9, 3.821730413309883*^9, {
   3.822128033967799*^9, 3.822128037933436*^9}, 3.82485916492095*^9},
 CellLabel->"In[91]:=",ExpressionUUID->"31f44b13-9cca-4f35-9cc6-7dfa5b28a9c4"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["C", "\[Alpha]\[Beta]\[Gamma]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.822128039063342*^9, 3.822128135668285*^9, 
  3.8248591649210663`*^9, 3.848260568163693*^9, 3.848260895739555*^9, 
  3.88390344950618*^9, 3.8839069847714243`*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"df069045-d3bc-4eef-a2e0-6b52a5c52a20"],

Cell[BoxData["\<\"CottonTensorSchwarzschild\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.822128039063342*^9, 3.822128135668285*^9, 
  3.8248591649210663`*^9, 3.848260568163693*^9, 3.848260895739555*^9, 
  3.88390344950618*^9, 3.883906984773374*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"95706dca-2e7e-42b9-9a72-ccd11d11c313"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.822128039063342*^9, 3.822128135668285*^9, 
  3.8248591649210663`*^9, 3.848260568163693*^9, 3.848260895739555*^9, 
  3.88390344950618*^9, 3.8839069847785473`*^9},
 CellLabel->
  "Out[93]//TraditionalForm=",ExpressionUUID->"ee058e04-66ba-42aa-89ff-\
fe51bffd066a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"tensorList", "[", 
  RowBox[{"[", "6", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "6", "]"}], "]"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "eq8pt14", "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq8pt14", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"TensorValues", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "6", "]"}], "]"}], "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822128202743853*^9, 3.822128248773871*^9}, 
   3.824859164921344*^9},
 CellLabel->"In[94]:=",ExpressionUUID->"8fd192e2-0919-454b-9253-cc08fca696bb"],

Cell[BoxData[
 TagBox["\<\"K\"\>",
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822128206367443*^9, 3.8221282504800453`*^9}, 
   3.824859164921439*^9, 3.848260568194478*^9, 3.8482608957695723`*^9, 
   3.883903449541266*^9, 3.8839069848035927`*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"699d95f7-d283-426c-ac06-025fcbd126ff"],

Cell[BoxData["\<\"KretschmannScalarSchwarzschild\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822128206367443*^9, 3.8221282504800453`*^9}, 
   3.824859164921439*^9, 3.848260568194478*^9, 3.8482608957695723`*^9, 
   3.883903449541266*^9, 3.883906984806332*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"985dc9a2-3c22-47b6-b50e-7f5dcac5c7c7"],

Cell[BoxData[
 FractionBox[
  RowBox[{"48", " ", 
   SuperscriptBox["M", "2"]}], 
  SuperscriptBox["r", "6"]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822128206367443*^9, 3.8221282504800453`*^9}, 
   3.824859164921439*^9, 3.848260568194478*^9, 3.8482608957695723`*^9, 
   3.883903449541266*^9, 3.88390698480838*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"8a1db360-2ac2-4288-a618-e3bb65515914"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Construction of Null Tetrad For Spherical Schwarzschild and Verification of \
Orthogonality and Completeness \
\>", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.8221285251896687`*^9, 
  3.8221285777734537`*^9}},ExpressionUUID->"9e1f8ba0-dc8c-4e9f-9330-\
8ddea8275972"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "eq8pt16", ",", "\[ScriptL]", ",", "\[ScriptN]", ",", "\[ScriptM]", ",", 
   "\[ScriptM]bar"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq8pt16", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[ScriptL]", " ", "\[Equal]", " ", 
      RowBox[{"{", " ", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", " ", 
           FractionBox[
            RowBox[{"2", " ", "M"}], "r"]}], ")"}], 
         RowBox[{"-", "1"}]], ",", "1", ",", "0", ",", "0"}], "}"}]}], " ", 
     ",", "\[IndentingNewLine]", 
     RowBox[{"\[ScriptN]", " ", "\[Equal]", 
      RowBox[{
       RowBox[{"(", 
        FractionBox["1", "2"], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", " ", 
         FractionBox[
          RowBox[{"2", " ", "M"}], "r"]}], ")"}], 
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", " ", 
            FractionBox[
             RowBox[{"2", " ", "M"}], "r"]}], ")"}], 
          RowBox[{"-", "1"}]], ",", 
         RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}]}]}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\[ScriptM]", " ", "\[Equal]", " ", 
      RowBox[{
       RowBox[{"(", 
        FractionBox["1", 
         RowBox[{
          SqrtBox["2"], " ", "r"}]], ")"}], 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1", ",", 
         FractionBox["\[ImaginaryI]", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]]}], "}"}]}]}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"\[ScriptM]bar", " ", "\[Equal]", " ", 
      RowBox[{
       RowBox[{"(", 
        FractionBox["1", 
         RowBox[{
          SqrtBox["2"], " ", "r"}]], ")"}], 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1", ",", 
         FractionBox[
          RowBox[{"-", "\[ImaginaryI]"}], 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]]}], "}"}]}]}]}], 
    "\[IndentingNewLine]", "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq8pt16", "  ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.822127325119965*^9, 3.822127506581916*^9}, 
   3.822127970501616*^9, 3.8221285406068153`*^9},
 CellLabel->"In[98]:=",ExpressionUUID->"e0061922-7cc3-4a71-b2a2-b86ace5ca261"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"\[ScriptL]", "\[Equal]", 
       RowBox[{"{", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"2", " ", "M"}], "r"]}]], ",", "1", ",", "0", ",", "0"}], 
        "}"}]}]},
     {
      RowBox[{"\[ScriptN]", "\[Equal]", 
       RowBox[{"{", 
        RowBox[{
         FractionBox["1", "2"], ",", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            FractionBox[
             RowBox[{"2", " ", "M"}], "r"]}], ")"}]}], ",", "0", ",", "0"}], 
        "}"}]}]},
     {
      RowBox[{"\[ScriptM]", "\[Equal]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", 
         FractionBox["1", 
          RowBox[{
           SqrtBox["2"], " ", "r"}]], ",", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"Csc", "[", "\[Theta]", "]"}]}], 
          RowBox[{
           SqrtBox["2"], " ", "r"}]]}], "}"}]}]},
     {
      RowBox[{"\[ScriptM]bar", "\[Equal]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", 
         FractionBox["1", 
          RowBox[{
           SqrtBox["2"], " ", "r"}]], ",", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"Csc", "[", "\[Theta]", "]"}]}], 
           RowBox[{
            SqrtBox["2"], " ", "r"}]]}]}], "}"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.82212750688235*^9, 3.822128540606947*^9, 
  3.822129794279181*^9, 3.8482605682154016`*^9, 3.848260895792315*^9, 
  3.8839034495692244`*^9, 3.88390698482614*^9},
 CellLabel->
  "Out[100]//TableForm=",ExpressionUUID->"e92d9a65-8ec3-4e5b-a668-\
d93f1e2a1178"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eq8pt16", " ", "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "2"}], "]"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.822128306606571*^9, 3.8221283259336987`*^9}, 
   3.822128540607091*^9},
 CellLabel->
  "In[101]:=",ExpressionUUID->"0ef6b204-7ead-4c92-b653-622434b97257"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "2"], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      FractionBox[
       RowBox[{"2", " ", "M"}], "r"]}], ")"}]}], ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.822128307382996*^9, 3.822128326666101*^9}, 
   3.8221285406073647`*^9, 3.822129794324842*^9, 3.848260568238098*^9, 
   3.8482608958131847`*^9, 3.883903449592608*^9, 3.883906984849769*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"d7f77746-1a02-4a8d-9e3d-cad8cc08a1d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Always", " ", "check", " ", "if", " ", "indices", " ", "needed", " ", 
    "are", " ", "up", " ", "or", " ", "down", "  ", "AND", " ", 
    RowBox[{"THEY", "'"}], "RE", " ", "UP", " ", "FOR", " ", "THIS", " ", 
    RowBox[{"TETRAD", "!!"}]}], " ", "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"l", " ", "=", " ", 
    RowBox[{"ToTensor", "[", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<NewTensor\>\"", " ", ",", " ", "\"\<l\>\""}], "}"}], " ", 
      ",", " ", 
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
      RowBox[{"eq8pt16", " ", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", ",", " ", 
      RowBox[{"{", "\[Mu]", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"n", " ", "=", " ", 
    RowBox[{"ToTensor", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<NewTensor\>\"", " ", ",", " ", "\"\<n\>\""}], " ", "}"}], 
      " ", ",", " ", 
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
      RowBox[{"eq8pt16", " ", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", ",", " ", 
      RowBox[{"{", "\[Mu]", "}"}]}], " ", "]"}]}], " ", "\[IndentingNewLine]", 
   RowBox[{"m", " ", "=", " ", 
    RowBox[{"ToTensor", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<NewTensor\>\"", " ", ",", " ", "\"\<m\>\""}], " ", "}"}], 
      " ", ",", " ", 
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
      RowBox[{"eq8pt16", " ", "[", 
       RowBox[{"[", 
        RowBox[{"3", ",", "2"}], "]"}], "]"}], " ", ",", " ", 
      RowBox[{"{", "\[Mu]", "}"}]}], " ", "]"}]}], " ", "\[IndentingNewLine]", 
   RowBox[{"mbar", " ", "=", " ", 
    RowBox[{"ToTensor", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<NewTensor\>\"", " ", ",", " ", "\"\<mbar\>\""}], " ", 
       "}"}], " ", ",", " ", 
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
      RowBox[{"eq8pt16", " ", "[", 
       RowBox[{"[", 
        RowBox[{"4", ",", "2"}], "]"}], "]"}], " ", ",", " ", 
      RowBox[{"{", "\[Mu]", "}"}]}], " ", "]"}], " "}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.820937410342936*^9, 3.8209444723230133`*^9, {3.8218128322071133`*^9, 
   3.821812840112854*^9}, {3.822052320688985*^9, 3.822052334937271*^9}, {
   3.822128279111066*^9, 3.822128285502482*^9}, {3.822128322031199*^9, 
   3.822128344261715*^9}, 3.8221285406076736`*^9},
 CellLabel->
  "In[102]:=",ExpressionUUID->"0f2fb2c1-7348-4de0-a3f8-d6d2c76ca2dc"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["l", "", "\[Mu]"],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.8221283450230217`*^9, 3.822128540607808*^9, 
  3.822129794337923*^9, 3.848260568253666*^9, 3.8482608958293953`*^9, 
  3.883903449613618*^9, 3.883906984868718*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"6b8fa566-fb86-4df5-a312-056070d0baaa"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["n", "", "\[Mu]"],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.8221283450230217`*^9, 3.822128540607808*^9, 
  3.822129794337923*^9, 3.848260568253666*^9, 3.8482608958293953`*^9, 
  3.883903449613618*^9, 3.8839069848708353`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"18c8cdc2-7d13-4fa0-874f-89329c48c053"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["m", "", "\[Mu]"],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.8221283450230217`*^9, 3.822128540607808*^9, 
  3.822129794337923*^9, 3.848260568253666*^9, 3.8482608958293953`*^9, 
  3.883903449613618*^9, 3.8839069848731813`*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"8bf5b017-f58a-4fec-9220-fc4bf107a846"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["mbar", "", "\[Mu]"],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.8221283450230217`*^9, 3.822128540607808*^9, 
  3.822129794337923*^9, 3.848260568253666*^9, 3.8482608958293953`*^9, 
  3.883903449613618*^9, 3.883906984875128*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"9ac7a586-a880-4afc-b38d-8de4dba827ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"l", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"l", "[", "\[Mu]", "]"}]}], "]"}], "]"}], " ", "\[Equal]", 
     " ", "0"}], "  ", "//", " ", "Expand"}], " ", "//", " ", "Simplify"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"n", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"n", "[", "\[Mu]", "]"}]}], "]"}], " ", "]"}], "\[Equal]", 
     " ", "0"}], "  ", "//", " ", "Expand"}], " ", "//", " ", "Simplify"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"m", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"m", "[", "\[Mu]", "]"}]}], "]"}], "]"}], " ", "\[Equal]", 
     " ", "0"}], "   ", "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"mbar", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"mbar", "[", "\[Mu]", "]"}]}], "]"}], "]"}], " ", "\[Equal]", 
     " ", "0"}], "  ", "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"l", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"n", "[", "\[Mu]", "]"}]}], "]"}], "]"}], " ", "\[Equal]", 
     " ", 
     RowBox[{"-", "1"}]}], "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"l", "[", "\[Mu]", "]"}], 
        RowBox[{"n", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}]}], "]"}], "]"}], " ", "\[Equal]", " ", 
     
     RowBox[{"-", "1"}]}], "  ", "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"m", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"mbar", "[", "\[Mu]", "]"}]}], "]"}], "]"}], " ", "\[Equal]", 
     "  ", "1"}], " ", "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"m", "[", "\[Mu]", "]"}], 
        RowBox[{"mbar", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}]}], "]"}], "]"}], " ", "\[Equal]", "  ",
      "1"}], " ", "//", " ", "Expand"}], " ", "//", " ", "FullSimplify"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "completenessDownIndices", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"completenessDownIndices", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"MergeTensors", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"l", "[", 
        RowBox[{"-", "\[Mu]"}], "]"}]}], 
      RowBox[{"n", "[", 
       RowBox[{"-", "\[Nu]"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"n", "[", 
       RowBox[{"-", "\[Mu]"}], "]"}], 
      RowBox[{"l", "[", 
       RowBox[{"-", "\[Nu]"}], "]"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"m", "[", 
       RowBox[{"-", "\[Mu]"}], "]"}], 
      RowBox[{"mbar", "[", 
       RowBox[{"-", "\[Nu]"}], "]"}]}], "+", " ", 
     RowBox[{
      RowBox[{"m", "[", 
       RowBox[{"-", "\[Nu]"}], "]"}], 
      RowBox[{"mbar", "[", 
       RowBox[{"-", "\[Mu]"}], "]"}]}]}], "]"}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", " ", "completenessDownIndices", " ", "]"}], 
     "   ", "//", " ", "Expand"}], " ", "//", " ", "FullSimplify"}], " ", "//",
    " ", "MatrixForm"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", "metric8pt1", "]"}], " ", "\[Equal]", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"Flatten", "[", " ", 
        RowBox[{
        "TensorValues", "[", " ", "completenessDownIndices", " ", "]"}], 
        "]"}]}], " ", "]"}], " ", "//", " ", "Expand"}], " ", "//", " ", 
    "FullSimplify"}], "  ", "//", " ", "TableForm"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "completenessUpIndices", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"completenessUpIndices", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"MergeTensors", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"l", "[", "\[Mu]", "]"}]}], 
      RowBox[{"n", "[", "\[Nu]", "]"}]}], "-", 
     RowBox[{
      RowBox[{"n", "[", "\[Mu]", "]"}], 
      RowBox[{"l", "[", "\[Nu]", "]"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"m", "[", "\[Mu]", "]"}], 
      RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "+", " ", 
     RowBox[{
      RowBox[{"m", "[", "\[Nu]", "]"}], 
      RowBox[{"mbar", "[", "\[Mu]", "]"}]}]}], "]"}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", " ", "completenessUpIndices", " ", "]"}], 
     "   ", "//", " ", "Expand"}], " ", "//", " ", "FullSimplify"}], " ", "//",
    " ", "MatrixForm"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", "inverse8pt1", "]"}], " ", "\[Equal]", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", " ", 
       RowBox[{"TensorValues", "[", " ", "completenessUpIndices", " ", "]"}], 
       "]"}]}], " ", "]"}], "  ", "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], "  ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.820937410343767*^9, 3.820944472323543*^9, {3.821813154640479*^9, 
   3.8218131599991713`*^9}, {3.821813269905422*^9, 3.821813304368266*^9}, {
   3.822049488025453*^9, 3.8220494954883137`*^9}, {3.822052358041285*^9, 
   3.822052404887875*^9}, {3.822128386720138*^9, 3.8221284143185863`*^9}, {
   3.8221284576639767`*^9, 3.8221284824856358`*^9}, 3.8221285406091003`*^9},
 CellLabel->
  "In[106]:=",ExpressionUUID->"42ec3dbb-37d6-4903-9c4e-0ba76012bfc7"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.822128399713076*^9, 3.822128415050809*^9}, 
   3.822128485500946*^9, 3.822128540609199*^9, 3.822129794402605*^9, 
   3.848260568321509*^9, 3.848260895900099*^9, 3.883903449692759*^9, 
   3.883906984911687*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"11e70b11-e887-45fd-bb5e-bef17077d0f6"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.822128399713076*^9, 3.822128415050809*^9}, 
   3.822128485500946*^9, 3.822128540609199*^9, 3.822129794402605*^9, 
   3.848260568321509*^9, 3.848260895900099*^9, 3.883903449692759*^9, 
   3.883906984913769*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"38dbd2d4-7357-4819-a012-e1808547aacc"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.822128399713076*^9, 3.822128415050809*^9}, 
   3.822128485500946*^9, 3.822128540609199*^9, 3.822129794402605*^9, 
   3.848260568321509*^9, 3.848260895900099*^9, 3.883903449692759*^9, 
   3.8839069849237127`*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"5592d2fc-6a0b-4230-b70b-eaad25dab1d3"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.822128399713076*^9, 3.822128415050809*^9}, 
   3.822128485500946*^9, 3.822128540609199*^9, 3.822129794402605*^9, 
   3.848260568321509*^9, 3.848260895900099*^9, 3.883903449692759*^9, 
   3.883906984942328*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"30e2b17e-c8f5-4e64-b428-9367109bb379"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.822128399713076*^9, 3.822128415050809*^9}, 
   3.822128485500946*^9, 3.822128540609199*^9, 3.822129794402605*^9, 
   3.848260568321509*^9, 3.848260895900099*^9, 3.883903449692759*^9, 
   3.883906984944858*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"34aa3cff-93b7-46a0-b08f-fc2fbcf9ec8f"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.822128399713076*^9, 3.822128415050809*^9}, 
   3.822128485500946*^9, 3.822128540609199*^9, 3.822129794402605*^9, 
   3.848260568321509*^9, 3.848260895900099*^9, 3.883903449692759*^9, 
   3.883906984963835*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"f5e80849-bae0-4860-af6c-122bca3fb925"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.822128399713076*^9, 3.822128415050809*^9}, 
   3.822128485500946*^9, 3.822128540609199*^9, 3.822129794402605*^9, 
   3.848260568321509*^9, 3.848260895900099*^9, 3.883903449692759*^9, 
   3.8839069849707527`*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"bd2679c2-b15a-4e2e-a491-1b01a149fee4"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.822128399713076*^9, 3.822128415050809*^9}, 
   3.822128485500946*^9, 3.822128540609199*^9, 3.822129794402605*^9, 
   3.848260568321509*^9, 3.848260895900099*^9, 3.883903449692759*^9, 
   3.883906984989517*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"a751097b-ac7b-4250-881d-2f47c6cf1eeb"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       FractionBox[
        RowBox[{"2", " ", "M"}], "r"]}], "0", "0", "0"},
     {"0", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"2", " ", "M"}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "M"}], "+", "r"}]]}], "0", "0"},
     {"0", "0", 
      SuperscriptBox["r", "2"], "0"},
     {"0", "0", "0", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.822128399713076*^9, 3.822128415050809*^9}, 
   3.822128485500946*^9, 3.822128540609199*^9, 3.822129794402605*^9, 
   3.848260568321509*^9, 3.848260895900099*^9, 3.883903449692759*^9, 
   3.883906985099635*^9},
 CellLabel->
  "Out[116]//MatrixForm=",ExpressionUUID->"a165c88f-39e0-4b40-8041-\
20f66ac598fb"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.822128399713076*^9, 3.822128415050809*^9}, 
   3.822128485500946*^9, 3.822128540609199*^9, 3.822129794402605*^9, 
   3.848260568321509*^9, 3.848260895900099*^9, 3.883903449692759*^9, 
   3.883906985107642*^9},
 CellLabel->
  "Out[117]//TableForm=",ExpressionUUID->"0cab3e11-8321-485c-8f07-\
48dfe5c5bb52"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["r", 
       RowBox[{
        RowBox[{"2", " ", "M"}], "-", "r"}]], "0", "0", "0"},
     {"0", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"2", " ", "M"}], "r"]}], "0", "0"},
     {"0", "0", 
      FractionBox["1", 
       SuperscriptBox["r", "2"]], "0"},
     {"0", "0", "0", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], 
       SuperscriptBox["r", "2"]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.822128399713076*^9, 3.822128415050809*^9}, 
   3.822128485500946*^9, 3.822128540609199*^9, 3.822129794402605*^9, 
   3.848260568321509*^9, 3.848260895900099*^9, 3.883903449692759*^9, 
   3.883906985160247*^9},
 CellLabel->
  "Out[120]//MatrixForm=",ExpressionUUID->"b188ff20-24e9-4b07-8a78-\
99ae2c33b030"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.822128399713076*^9, 3.822128415050809*^9}, 
   3.822128485500946*^9, 3.822128540609199*^9, 3.822129794402605*^9, 
   3.848260568321509*^9, 3.848260895900099*^9, 3.883903449692759*^9, 
   3.883906985163631*^9},
 CellLabel->
  "Out[121]//TableForm=",ExpressionUUID->"a350059a-b82c-4574-9093-\
e7c4fdfa9a46"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Calculation of Newman Penrose Quantities For Spherical Schwarzschild \
\>", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.822129884702565*^9, 
  3.822129925149539*^9}},ExpressionUUID->"5f20cd6d-58b6-49c4-87ea-\
8e33cdb6f1fe"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "spinCoefficientReplace", "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spinCoefficientReplace", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Alpha]", "\[Rule]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "/", "2"}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MergeTensors", "[", 
               RowBox[{
                RowBox[{"CovariantD", "[", " ", 
                 RowBox[{
                  RowBox[{"l", "[", 
                   RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                  RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                RowBox[{"n", "[", "\[Mu]", "]"}], " ", 
                RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
              "TensorValues"}], " ", ")"}], "-", "\[IndentingNewLine]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MergeTensors", "[", 
               RowBox[{
                RowBox[{"CovariantD", "[", " ", 
                 RowBox[{
                  RowBox[{"m", "[", 
                   RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                  RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
                RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
              "TensorValues"}], ")"}]}], ")"}]}], " ", ")"}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "Simplify"}], "  ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Beta]", " ", "\[Rule]", " ", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "/", "2"}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MergeTensors", "[", " ", 
               RowBox[{
                RowBox[{"CovariantD", "[", " ", 
                 RowBox[{
                  RowBox[{"l", "[", 
                   RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                  RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                RowBox[{"n", "[", "\[Mu]", "]"}], 
                RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
              "TensorValues"}], ")"}], "-", " ", "\[IndentingNewLine]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MergeTensors", "[", 
               RowBox[{
                RowBox[{"CovariantD", "[", " ", 
                 RowBox[{
                  RowBox[{"m", "[", 
                   RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                  RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
                RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
              "TensorValues"}], " ", ")"}]}], ")"}]}], ")"}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "Simplify"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Gamma]", " ", "\[Rule]", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "something", " ", "weird", " ", "here", " ", "correct", " ", 
          "definition", " ", "off", " ", "by", " ", "minus", " ", "sign"}], 
         " ", "*)"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            FractionBox["1", "2"], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"MergeTensors", "[", 
                 RowBox[{
                  RowBox[{"CovariantD", "[", " ", 
                   RowBox[{
                    RowBox[{"l", "[", 
                    RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                    RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                  RowBox[{"n", "[", "\[Mu]", "]"}], 
                  RowBox[{"n", "[", "\[Nu]", "]"}]}], " ", "]"}], " ", "//", 
                " ", "TensorValues"}], "  ", "//", " ", "Expand"}], "  ", 
              ")"}], "-", "\[IndentingNewLine]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"MergeTensors", "[", 
                  RowBox[{
                   RowBox[{"CovariantD", "[", " ", 
                    RowBox[{
                    RowBox[{"m", "[", 
                    RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                    RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                   RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
                   RowBox[{"n", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
                 "TensorValues"}], " ", "//", " ", "Expand"}], "  ", "//", 
               " ", "FullSimplify"}], " ", ")"}]}], ")"}]}], " ", "//", " ", 
          "Expand"}], " ", ")"}]}], "  ", "//", " ", "Expand"}], " ", "//", 
      " ", "Simplify"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"\[CurlyEpsilon]", " ", "\[Rule]", " ", 
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "/", "2"}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", " ", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"MergeTensors", "[", 
                 RowBox[{
                  RowBox[{"CovariantD", "[", 
                   RowBox[{
                    RowBox[{"l", "[", 
                    RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                    RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                  RowBox[{"n", "[", "\[Mu]", "]"}], " ", 
                  RowBox[{"l", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
                "TensorValues"}], "  ", "//", " ", "Expand"}], "  ", "//", 
              " ", "FullSimplify"}], "  ", ")"}], "  ", "-", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"MergeTensors", "[", " ", 
                 RowBox[{
                  RowBox[{"CovariantD", "[", " ", 
                   RowBox[{
                    RowBox[{"m", "[", 
                    RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                    RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                  RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
                  RowBox[{"l", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
                "TensorValues"}], " ", "//", " ", "Expand"}], " ", "//", " ", 
              "FullSimplify"}], ")"}]}], " ", ")"}]}], " ", "//", " ", 
         "Expand"}], "  ", "//", " ", "FullSimplify"}], " ", ")"}]}], " ", 
     ",", " ", "\[IndentingNewLine]", 
     RowBox[{"\[Kappa]", "\[Rule]", 
      RowBox[{"(", "  ", 
       RowBox[{
        RowBox[{"MergeTensors", "[", " ", 
         RowBox[{
          RowBox[{"CovariantD", "[", " ", 
           RowBox[{
            RowBox[{"l", "[", 
             RowBox[{"-", "\[Mu]"}], "]"}], " ", ",", 
            RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
          RowBox[{"m", "[", "\[Mu]", "]"}], " ", 
          RowBox[{"l", "[", "\[Nu]", "]"}]}], "  ", "]"}], "  ", "//", " ", 
        "TensorValues"}], " ", ")"}]}], " ", ",", " ", "\[IndentingNewLine]", 
     
     RowBox[{"\[Lambda]", "\[Rule]", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"note", " ", "minus", " ", "sign"}], " ", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "*", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"MergeTensors", "[", " ", 
            RowBox[{
             RowBox[{"CovariantD", "[", " ", 
              RowBox[{
               RowBox[{"n", "[", 
                RowBox[{"-", "\[Mu]"}], "]"}], ",", 
               RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
             RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
             RowBox[{"mbar", "[", "\[Nu]", "]"}]}], " ", "]"}], "  ", "//", 
           " ", "TensorValues"}], " ", "//", " ", "Expand"}], " ", "//", " ", 
         "FullSimplify"}], ")"}]}]}], "  ", ",", "\[IndentingNewLine]", 
     RowBox[{"\[Mu]", "\[Rule]", " ", 
      RowBox[{"(*", 
       RowBox[{"note", " ", "minus", " ", "sign"}], " ", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "*", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"MergeTensors", " ", "[", " ", 
            RowBox[{
             RowBox[{"CovariantD", "[", " ", 
              RowBox[{
               RowBox[{"n", "[", 
                RowBox[{"-", "\[Mu]"}], "]"}], " ", ",", " ", 
               RowBox[{"-", "\[Nu]"}]}], " ", "]"}], " ", 
             RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
             RowBox[{"m", "[", "\[Nu]", "]"}]}], " ", "]"}], " ", "//", " ", 
           "TensorValues"}], "  ", "//", " ", "Expand"}], "  ", "//", " ", 
         "FullSimplify"}], " ", ")"}]}]}], "  ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Nu]", "\[Rule]", " ", 
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"MergeTensors", "[", " ", 
         RowBox[{
          RowBox[{"CovariantD", "[", " ", 
           RowBox[{
            RowBox[{"n", "[", 
             RowBox[{"-", "\[Mu]"}], "]"}], ",", 
            RowBox[{"-", "\[Nu]"}]}], "]"}], 
          RowBox[{"m", "[", "\[Mu]", "]"}], " ", 
          RowBox[{"n", "[", "\[Nu]", "]"}]}], " ", "]"}], " ", "//", " ", 
        "TensorValues"}], " ", ")"}]}], " ", ",", " ", "\[IndentingNewLine]", 
     
     RowBox[{"\[Pi]", "\[Rule]", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"Note", " ", "minus", " ", "sign"}], " ", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "*", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{"CovariantD", "[", " ", 
             RowBox[{
              RowBox[{"n", "[", 
               RowBox[{"-", "\[Mu]"}], "]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
            RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
            RowBox[{"l", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
          "TensorValues"}], "  ", "//", " ", "Expand"}], " ", ")"}]}]}], " ", 
     ",", " ", "\[IndentingNewLine]", 
     RowBox[{"\[Rho]", " ", "\[Rule]", 
      RowBox[{"(", "  ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"MergeTensors", "[", " ", 
           RowBox[{
            RowBox[{"CovariantD", "[", " ", 
             RowBox[{
              RowBox[{"l", "[", 
               RowBox[{"-", "\[Mu]"}], "]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
            RowBox[{"m", "[", "\[Mu]", "]"}], " ", 
            RowBox[{"mbar", "[", "\[Nu]", "]"}]}], " ", "]"}], " ", "//", " ",
           "TensorValues"}], "  ", "//", " ", "Expand"}], " ", "//", " ", 
        "FullSimplify"}], " ", ")"}]}], "  ", ",", " ", 
     RowBox[{"\[Sigma]", "\[Rule]", 
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"MergeTensors", "[", " ", 
           RowBox[{
            RowBox[{"CovariantD", "[", 
             RowBox[{
              RowBox[{"l", "[", 
               RowBox[{"-", "\[Mu]"}], "]"}], " ", ",", " ", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
            RowBox[{"m", "[", "\[Mu]", "]"}], " ", 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
          "TensorValues"}], "  ", "//", " ", "Expand"}], " ", "//", " ", 
        "FullSimplify"}], ")"}]}], "  ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"\[Tau]", "\[Rule]", 
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"MergeTensors", "[", " ", 
         RowBox[{
          RowBox[{"CovariantD", "[", " ", 
           RowBox[{
            RowBox[{"l", "[", 
             RowBox[{"-", "\[Mu]"}], "]"}], ",", 
            RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
          RowBox[{"m", "[", "\[Mu]", "]"}], " ", 
          RowBox[{"n", "[", "\[Nu]", " ", "]"}]}], "]"}], "//", " ", 
        "TensorValues"}], " ", ")"}]}]}], "   ", "\[IndentingNewLine]", 
    "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spinCoefficientReplace", "   ", "//", " ", "TableForm"}], " ", "//",
   " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.820667112307205*^9, {3.820691856877*^9, 3.8206918635710173`*^9}, {
   3.820692627802567*^9, 3.820692798874284*^9}, {3.820793246159666*^9, 
   3.8207932735596313`*^9}, {3.820933088885683*^9, 3.820933089524383*^9}, 
   3.820934520109788*^9, 3.8209373342691517`*^9, {3.82100327861626*^9, 
   3.8210032838458157`*^9}, {3.821003386912135*^9, 3.821003405643714*^9}, {
   3.8210037363804407`*^9, 3.8210037487041388`*^9}, {3.822129806858186*^9, 
   3.822129826241851*^9}, 3.822129898536474*^9},
 CellLabel->
  "In[122]:=",ExpressionUUID->"f7af1682-0a9d-4694-87ad-b15bb06f6946"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{"\[Alpha]", "\[Rule]", 
        FractionBox[
         RowBox[{"cot", "(", "\[Theta]", ")"}], 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "r"}]]}]},
      {
       RowBox[{"\[Beta]", "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"cot", "(", "\[Theta]", ")"}], 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "r"}]]}]}]},
      {
       RowBox[{"\[Gamma]", "\[Rule]", 
        RowBox[{"-", 
         FractionBox["M", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "2"]}]]}]}]},
      {
       RowBox[{"\[CurlyEpsilon]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Kappa]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Lambda]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Mu]", "\[Rule]", 
        FractionBox[
         RowBox[{"r", "-", 
          RowBox[{"2", " ", "M"}]}], 
         RowBox[{"2", " ", 
          SuperscriptBox["r", "2"]}]]}]},
      {
       RowBox[{"\[Nu]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Pi]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Rho]", "\[Rule]", 
        FractionBox["1", "r"]}]},
      {
       RowBox[{"\[Sigma]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Tau]", "\[Rule]", "0"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.822129796171055*^9, 3.822129831962491*^9, 
  3.822129898536621*^9, 3.8482605702377157`*^9, 3.84826089777221*^9, 
  3.883903451623304*^9, 3.883906986706382*^9},
 CellLabel->
  "Out[124]//TraditionalForm=",ExpressionUUID->"da3b8eca-4f8d-486a-9dd0-\
4f5d26c255f9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Compare", " ", "with", " ", "Chandra", " ", "MTBH", " ", "Page", " ", 
     "135", " ", "Equation", " ", "287"}], "-", "288", " ", "-", " ", 
    RowBox[{"sign", " ", "convention", " ", "wrong"}]}], " ", "*)"}], 
  " "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.822131149889134*^9, 3.82213117268577*^9}, 
   3.822137924758903*^9},
 CellLabel->
  "In[125]:=",ExpressionUUID->"766572fa-6408-4290-b9cd-e8b00dabb48e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "ricciScalarsReplace", "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ricciScalarsReplace", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "oo"], "\[Rule]", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "subscripts", " ", "used", " ", "here", " ", "are", " ", "the", " ", 
          "letter", " ", "\"\<O\>\"", " ", "not", " ", "the", " ", "number", 
          " ", 
          RowBox[{"\"\<0\>\"", ".", "  ", "For"}], " ", "whatever", " ", 
          "reason", " ", "the", " ", "occurence", " ", "of", " ", "two", " ", 
          "zeros", " ", "as", " ", "subscripts", " ", "evaluated", " ", "as", 
          " ", "a", " ", "product", " ", "and", " ", "gives", " ", "zero"}], 
         "  ", "*)"}], " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Mu]", "]"}], 
            RowBox[{"l", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "O1"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Mu]", "]"}], 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "O2"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"m", "[", "\[Mu]", "]"}], 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "10"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Mu]", "]"}], 
            RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "  ", "//",
        " ", "Expand"}], " ", "//", " ", "Simplify"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "11"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "4"], ")"}], "*", 
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{"TensorValues", "[", 
             RowBox[{"MergeTensors", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"tensorList", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], "[", 
                RowBox[{
                 RowBox[{"-", "\[Mu]"}], ",", 
                 RowBox[{"-", "\[Nu]"}]}], "]"}], 
               RowBox[{"l", "[", "\[Mu]", "]"}], 
               RowBox[{"n", "[", "\[Nu]", "]"}]}], "]"}], "]"}], ")"}], "+", 
           " ", 
           RowBox[{"(", 
            RowBox[{"TensorValues", "[", 
             RowBox[{"MergeTensors", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"tensorList", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], "[", 
                RowBox[{
                 RowBox[{"-", "\[Mu]"}], ",", 
                 RowBox[{"-", "\[Nu]"}]}], "]"}], 
               RowBox[{"m", "[", "\[Mu]", "]"}], 
               RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], "]"}], ")"}]}], 
          ")"}]}]}], " ", "//", " ", "Expand"}], " ", "//", " ", 
      "FullSimplify"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "12"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"n", "[", "\[Mu]", "]"}], 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "20"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"mbar", "[", "\[Mu]", "]"}], 
            RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", 
       " ", "Expand"}], " ", "//", " ", "Simplify"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "21"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"n", "[", "\[Mu]", "]"}], 
            RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "  ", "//",
        " ", "Expand"}], " ", "//", " ", "Simplify"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "22"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"n", "[", "\[Mu]", "]"}], 
            RowBox[{"n", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", " ", 
       "Expand"}], " ", "//", " ", "FullSimplify"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalLambda]", "\[Rule]", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox["1", "24"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"tensorList", "[", 
           RowBox[{"[", "5", "]"}], "]"}], "]"}]}]}], "//", " ", "Expand"}], 
      " ", "//", " ", "FullSimplify"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ricciScalarsReplace", "   ", "//", " ", "TableForm"}], " ", "//", 
  " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8207941683808823`*^9, 3.820794170188884*^9}, {
   3.820794210004217*^9, 3.820794295371916*^9}, {3.820794355374641*^9, 
   3.8207944173021507`*^9}, {3.8209358220143003`*^9, 3.820935854138783*^9}, 
   3.820937334270711*^9, {3.821003405651829*^9, 3.821003467622817*^9}, {
   3.821003736380765*^9, 3.821003748704556*^9}, 3.822129898537359*^9},
 CellLabel->
  "In[126]:=",ExpressionUUID->"8313c630-7f03-4e0c-9355-9a378e467d7f"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "oo"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "O1"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "O2"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "10"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "11"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "12"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "20"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "21"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "22"], "\[Rule]", "0"}]},
      {
       RowBox[{"\[CapitalLambda]", "\[Rule]", "0"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.8221298486393147`*^9, 3.822129898537561*^9, 
  3.8482605704633923`*^9, 3.8482608979974957`*^9, 3.8839034518975163`*^9, 
  3.8839069869275913`*^9},
 CellLabel->
  "Out[128]//TraditionalForm=",ExpressionUUID->"33f60f5c-e21c-49c3-8798-\
f0aedd9b8213"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "weylScalarsReplace", "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Definitions", " ", "from", " ", "Griffiths"}], " ", "-", " ", 
    RowBox[{"Be", " ", "sure", " ", "to", " ", "check", " ", "signs"}]}], " ",
    "*)"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"weylScalarsReplace", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", "   ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "0"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], ",", 
              RowBox[{"-", "\[Lambda]"}], ",", 
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Kappa]", "]"}], 
            RowBox[{"m", "[", "\[Lambda]", "]"}], 
            RowBox[{"l", "[", "\[Mu]", "]"}], 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", " ", 
       "Expand"}], " ", "//", " ", "FullSimplify"}], " ", ",", " ", "\n", 
     "\t ", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "1"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], ",", 
              RowBox[{"-", "\[Lambda]"}], ",", 
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Kappa]", "]"}], 
            RowBox[{"n", "[", "\[Lambda]", "]"}], 
            RowBox[{"l", "[", "\[Mu]", "]"}], 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", " ", 
       "Expand"}], " ", "//", " ", "FullSimplify"}], " ", ",", " ", "\n", 
     "\t ", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "2"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], ",", 
              RowBox[{"-", "\[Lambda]"}], ",", 
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Kappa]", "]"}], 
            RowBox[{"m", "[", "\[Lambda]", "]"}], 
            RowBox[{"mbar", "[", "\[Mu]", "]"}], 
            RowBox[{"n", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], ",", " ", "\n", 
     "\t ", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "3"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], ",", 
              RowBox[{"-", "\[Lambda]"}], ",", 
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"n", "[", "\[Kappa]", "]"}], 
            RowBox[{"l", "[", "\[Lambda]", "]"}], 
            RowBox[{"n", "[", "\[Mu]", "]"}], 
            RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], " ", ",", " ", "\n",
      "\t ", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "4"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], ",", 
              RowBox[{"-", "\[Lambda]"}], ",", 
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"n", "[", "\[Kappa]", "]"}], 
            RowBox[{"mbar", "[", "\[Lambda]", "]"}], 
            RowBox[{"n", "[", "\[Mu]", "]"}], 
            RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}]}], 
    "\[IndentingNewLine]", "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"weylScalarsReplace", "  ", "//", " ", "TableForm"}], " ", "//", 
  " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.820667112308317*^9, {3.8206919186046867`*^9, 3.820691920188485*^9}, {
   3.820794507895151*^9, 3.820794582921618*^9}, 3.820937334271385*^9, 
   3.821003405651976*^9, {3.8221298736085033`*^9, 3.8221298985379543`*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"ef046c83-fe09-4411-a41a-a55ab64f2f96"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "0"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "1"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "2"], "\[Rule]", 
        FractionBox["M", 
         SuperscriptBox["r", "3"]]}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "3"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "4"], "\[Rule]", "0"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.8221298658182983`*^9, 3.822129898538095*^9, 
  3.8482605750490294`*^9, 3.848260902619718*^9, 3.883903456434822*^9, 
  3.883906991364765*^9},
 CellLabel->
  "Out[131]//TraditionalForm=",ExpressionUUID->"8fc1c82d-c84c-43cf-93fc-\
999a2fa9cce8"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["More Chapter 8 stuff", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822138157239778*^9, 
  3.822138169408457*^9}},ExpressionUUID->"ab09dbc2-b595-432f-9c9d-\
b7ad10f7d3e4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"eq8pt17", ",", "m"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq8pt17", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"m", "\[Equal]", " ", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"-", 
        RowBox[{"metric8pt1", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}]], ",", "0", ",", "0",
      ",", "0"}], "}"}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822129024982305*^9, 3.8221290348458633`*^9}, {
   3.822129087062071*^9, 3.8221291282300863`*^9}, 3.822138152800898*^9},
 CellLabel->
  "In[132]:=",ExpressionUUID->"f1785cbe-cccd-4de3-ae57-39429eceae8c"],

Cell[BoxData[
 RowBox[{"m", "\[Equal]", 
  RowBox[{"{", 
   RowBox[{
    FractionBox["1", 
     SqrtBox[
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"2", " ", "M"}], "r"]}]]], ",", "0", ",", "0", ",", "0"}], 
   "}"}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.822129104855682*^9, 3.822129163904954*^9, 
  3.822138152801655*^9, 3.848260575099859*^9, 3.8482609026648397`*^9, 
  3.883903456478385*^9, 3.883906991393649*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"2962bf6e-b0cb-4ca6-a326-5ec5b069ff88"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mstatic", " ", "=", "\[IndentingNewLine]", " ", 
  RowBox[{"ToTensor", "[", 
   RowBox[{"\"\<mstatic\>\"", " ", ",", " ", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
    RowBox[{"eq8pt17", " ", "[", 
     RowBox[{"[", "2", "]"}], "]"}], " ", ",", 
    RowBox[{"{", 
     RowBox[{"-", "\[Alpha]"}], "}"}]}], "]"}], " "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822131690137534*^9, 3.822131732742301*^9}, {
   3.822132003350947*^9, 3.822132007174036*^9}, 3.822138152801878*^9, 
   3.848261605724225*^9},
 CellLabel->
  "In[134]:=",ExpressionUUID->"cfb8a943-c51f-4352-a6b2-58d1e9d87406"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["mstatic", "\[Alpha]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8221317329839487`*^9, 3.8221320078967113`*^9, 
  3.8221381528022614`*^9, 3.848260575109982*^9, 3.848260902677079*^9, 
  3.883903456490535*^9, 3.883906991413809*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"f75faee8-3495-4b00-93f5-03e117188c70"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "variables", "]"}], "\[IndentingNewLine]", 
 RowBox[{"variables", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}]}]}], "Input",\

 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822131909936322*^9, 3.822131918709729*^9}, 
   3.822138152802404*^9},
 CellLabel->
  "In[135]:=",ExpressionUUID->"b0e43ddf-dd4c-463f-bbb0-cc368a4087bd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.822131919773844*^9, 3.822138152802944*^9, 
  3.8482605751409388`*^9, 3.8482609026998177`*^9, 3.883903456516897*^9, 
  3.883906991424471*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"39d5df7c-5629-4e9b-9f96-7ae0228082a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"TensorValues", "[", 
     RowBox[{"mstatic", "[", 
      RowBox[{"-", "\[Alpha]"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "  ", ",", "r"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822131973918551*^9, 3.822131984221916*^9}, {
   3.822132032759103*^9, 3.8221320389571733`*^9}, 3.822138152803133*^9},
 CellLabel->
  "In[137]:=",ExpressionUUID->"5df2201f-32cb-4f44-bf53-773da2ab3477"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["M", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"2", " ", "M"}], "r"]}], ")"}], 
     RowBox[{"3", "/", "2"}]], " ", 
    SuperscriptBox["r", "2"]}]]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8221319760330973`*^9, 3.822132039217086*^9}, 
   3.822138152803549*^9, 3.84826057515228*^9, 3.8482609027132196`*^9, 
   3.8839034565306168`*^9, 3.883906991446354*^9},
 CellLabel->
  "Out[137]=",ExpressionUUID->"8da91530-2a91-4ac2-ad2c-b57abc05cb87"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"eq8pt18", ",", "m"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq8pt18", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"e0", " ", "\[Equal]", "  ", "m"}], " ", "/.", " ", 
      RowBox[{"(", " ", 
       RowBox[{"eq8pt17", "  ", "/.", " ", 
        RowBox[{"Equal", "\[Rule]", " ", "Rule"}]}], " ", ")"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"er", " ", "\[Equal]", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        SqrtBox[
         RowBox[{"(", 
          RowBox[{"1", "-", " ", 
           FractionBox[
            RowBox[{"2", " ", "M"}], "r"]}], ")"}]], ",", "0", ",", "0"}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"e\[Theta]", " ", "\[Equal]", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        FractionBox["1", "r"], ",", "0"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"e\[Phi]", " ", "\[Equal]", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", 
        FractionBox["1", 
         RowBox[{"r", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]]}], "}"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq8pt18", "  ", "//", " ", "MatrixForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822128676264131*^9, 3.8221286911576138`*^9}, {
   3.8221288762087593`*^9, 3.822129011366294*^9}, {3.822129133215375*^9, 
   3.822129160933494*^9}, 3.822138152803857*^9},
 CellLabel->
  "In[138]:=",ExpressionUUID->"b405e2ed-3ef5-42a7-b3df-d9429c0146c0"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"e0", "\[Equal]", 
        RowBox[{"{", 
         RowBox[{
          FractionBox["1", 
           SqrtBox[
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{"2", " ", "M"}], "r"]}]]], ",", "0", ",", "0", ",", 
          "0"}], "}"}]}]},
      {
       RowBox[{"er", "\[Equal]", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          SqrtBox[
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"2", " ", "M"}], "r"]}]], ",", "0", ",", "0"}], 
         "}"}]}]},
      {
       RowBox[{"e\[Theta]", "\[Equal]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          FractionBox["1", "r"], ",", "0"}], "}"}]}]},
      {
       RowBox[{"e\[Phi]", "\[Equal]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", 
          FractionBox[
           RowBox[{"Csc", "[", "\[Theta]", "]"}], "r"]}], "}"}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822129003911083*^9, 3.82212901275558*^9}, 
   3.822129168010641*^9, 3.822138152804381*^9, 3.8482605751849613`*^9, 
   3.8482609027423363`*^9, 3.883903456557148*^9, 3.883906991459165*^9},
 CellLabel->
  "Out[140]//MatrixForm=",ExpressionUUID->"b422ea26-7d26-4e11-bf7f-\
da1d7cda6817"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"eq8pt18", "[", 
    RowBox[{"[", 
     RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.82212956568542*^9, 3.822129643709656*^9}, 
   3.8221381528045588`*^9},
 CellLabel->
  "In[141]:=",ExpressionUUID->"c3920357-92b0-4ee6-8694-6943c537b68c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      SqrtBox[
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{"2", " ", "M"}], "r"]}]]], ",", "0", ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     SqrtBox[
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"2", " ", "M"}], "r"]}]], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "r"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     FractionBox[
      RowBox[{"Csc", "[", "\[Theta]", "]"}], "r"]}], "}"}]}], "}"}]], "Output",\

 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822129576118606*^9, 3.8221296506006927`*^9}, 
   3.822138152804915*^9, 3.848260575197844*^9, 3.8482609027551527`*^9, 
   3.883903456571348*^9, 3.883906991481147*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"33338413-6f67-440a-bc9c-8fcc7407d949"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq8pt19", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq8pt19", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Omega]0", " ", "\[Equal]", " ", 
      RowBox[{"{", 
       RowBox[{
        SqrtBox[
         RowBox[{"(", 
          RowBox[{"1", "-", " ", 
           FractionBox[
            RowBox[{"2", " ", "M"}], "r"]}], ")"}]], ",", "0", ",", "0", ",", 
        "0"}], "}"}]}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"\[Omega]r", " ", "\[Equal]", " ", 
      RowBox[{"{", " ", 
       RowBox[{"0", ",", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", " ", 
           FractionBox[
            RowBox[{"2", " ", "M"}], "r"]}], ")"}], 
         FractionBox[
          RowBox[{"-", "1"}], "2"]], ",", "0", ",", "0"}], "}"}]}], " ", ",", 
     " ", "\[IndentingNewLine]", 
     RowBox[{"\[Omega]\[Theta]", " ", "\[Equal]", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "r", ",", "0"}], "}"}]}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Omega]\[Phi]", " ", "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", " ", 
        RowBox[{"r", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq8pt19", "  ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822129415000989*^9, 3.822129555485401*^9}, {
   3.822130498263692*^9, 3.822130504782625*^9}, 3.8221381528052073`*^9},
 CellLabel->
  "In[142]:=",ExpressionUUID->"b50d0820-fca4-4bfb-b38c-c82abe29d31b"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"\[Omega]0", "\[Equal]", 
       RowBox[{"{", 
        RowBox[{
         SqrtBox[
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"2", " ", "M"}], "r"]}]], ",", "0", ",", "0", ",", "0"}], 
        "}"}]}]},
     {
      RowBox[{"\[Omega]r", "\[Equal]", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         FractionBox["1", 
          SqrtBox[
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"2", " ", "M"}], "r"]}]]], ",", "0", ",", "0"}], "}"}]}]},
     {
      RowBox[{"\[Omega]\[Theta]", "\[Equal]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "r", ",", "0"}], "}"}]}]},
     {
      RowBox[{"\[Omega]\[Phi]", "\[Equal]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", 
         RowBox[{"r", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.822129555745186*^9, 3.8221305052213373`*^9, 
  3.8221381528055687`*^9, 3.8482605752306967`*^9, 3.848260902784692*^9, 
  3.883903456597542*^9, 3.883906991496982*^9},
 CellLabel->
  "Out[144]//TableForm=",ExpressionUUID->"cb5a1f21-413f-4b50-9fcd-\
bf6cddb2bbc1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"eq8pt19", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "r"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822129661102354*^9, 3.82212966146183*^9}, {
   3.8221303384959087`*^9, 3.822130358437985*^9}, 3.822138152805747*^9},
 CellLabel->
  "In[145]:=",ExpressionUUID->"b8921911-39bf-41e2-a062-601a2edda00f"],

Cell[BoxData[
 FractionBox["M", 
  RowBox[{
   SqrtBox[
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{"2", " ", "M"}], "r"]}]], " ", 
   SuperscriptBox["r", "2"]}]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.8221296618397713`*^9, {3.8221303398637657`*^9, 3.82213035873487*^9}, 
   3.822138152806098*^9, 3.848260575243579*^9, 3.84826090280227*^9, 
   3.883903456609767*^9, 3.883906991520192*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"cf1b7dc5-e034-4ea8-8bae-7b8378a56f47"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Definition", " ", "taken", " ", "form", " ", "Chandra", " ", "MTBH", " ",
      "page", " ", "81", " ", "equation", " ", "82"}], " ", "-", " ", 
    RowBox[{"has", " ", "example"}]}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Definition", " ", "taken", " ", "form", " ", "Chandra", " ", "MTBH", " ",
      "page", " ", "38", " ", "equation", " ", "266"}], " ", "-", " ", 
    RowBox[{
    "see", " ", "also", " ", "On", " ", "Colliding", " ", "Waves", " ", "in", 
     " ", "EM", " ", "Theory", " ", "Appendix"}]}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "\[Lambda]", "]"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"REMEMBER", "!!"}], "!"}], " ", "Spacetime", " ", "indices", 
      " ", "run", " ", "0"}], "-", 
     RowBox[{
     "3", " ", "and", " ", "list", " ", "indices", " ", "run", " ", "1"}], 
     "-", 
     RowBox[{
     "4", " ", "thus", " ", "offset", " ", "by", " ", "plus", " ", "1"}]}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]", "[", 
     RowBox[{
     "a_", ",", "b_", ",", "c_", ",", " ", "eup_", " ", ",", " ", "edown_", 
      ",", "variables_"}], "]"}], ":=", " ", "\[IndentingNewLine]", 
    RowBox[{"Sum", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eup", "[", 
         RowBox[{"[", 
          RowBox[{"a", "+", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"D", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"edown", "[", 
             RowBox[{"[", 
              RowBox[{"b", "+", "1"}], "]"}], "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", ",", " ", 
           RowBox[{"variables", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], "]"}], " ", "-", " ", 
         RowBox[{"D", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"edown", "[", 
             RowBox[{"[", 
              RowBox[{"b", "+", "1"}], "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}], " ", ",", " ", 
           RowBox[{"variables", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ")"}], "*", 
       RowBox[{
        RowBox[{"eup", "[", 
         RowBox[{"[", 
          RowBox[{"c", "+", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "j", "]"}], "]"}]}], "  ", ",", " ", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}]}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.821961749156143*^9, 3.8219618998679543`*^9}, {
   3.8219619552023487`*^9, 3.8219619738362722`*^9}, {3.8219620085503817`*^9, 
   3.821962038541954*^9}, {3.821962168907605*^9, 3.821962210930365*^9}, {
   3.82213003603996*^9, 3.822130066926577*^9}, {3.8221301556142263`*^9, 
   3.822130232631806*^9}, {3.822130379815648*^9, 3.82213040982257*^9}, {
   3.822131407519782*^9, 3.8221314321582003`*^9}, 3.822138152806521*^9},
 CellLabel->
  "In[146]:=",ExpressionUUID->"e80004b3-3e63-4ee3-89c6-bc7491c854e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Definition", " ", "taken", " ", "form", " ", "Chandra", " ", "MTBH", " ",
      "page", " ", "38", " ", "equation", " ", "268"}], " ", "-", " ", 
    RowBox[{
    "see", " ", "also", " ", "On", " ", "Colliding", " ", "Waves", " ", "in", 
     " ", "EM", " ", "Theory", " ", "Appendix"}]}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "\[Gamma]", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]", "[", 
     RowBox[{
     "a_", ",", "b_", ",", "c_", ",", "eup_", ",", "edown_", ",", 
      "variables_"}], "]"}], " ", ":=", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", 
      FractionBox["1", "2"], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Lambda]", "[", 
        RowBox[{
        "a", ",", "b", ",", "c", ",", "eup", ",", "edown", ",", "variables"}],
         "]"}], " ", "+", 
       RowBox[{"\[Lambda]", "[", 
        RowBox[{
        "c", ",", "a", ",", "b", ",", "eup", ",", "edown", ",", "variables"}],
         "]"}], " ", "-", 
       RowBox[{"\[Lambda]", "[", 
        RowBox[{
        "b", ",", "c", ",", "a", ",", "eup", ",", "edown", ",", "variables"}],
         "]"}]}], " ", ")"}]}]}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.82213063322405*^9, 3.8221308389411983`*^9}, {
   3.822130889704179*^9, 3.822130890029811*^9}, 3.822138152807036*^9},
 CellLabel->
  "In[148]:=",ExpressionUUID->"c0bd30c4-7fbe-4fd7-b7a5-9a3810347ebe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Compare", " ", "this", " ", "with", " ", "page", " ", "135", " ", "of", 
    " ", "Chandra", " ", "and", " ", "figure", " ", "out", " ", 
    RowBox[{"what", "'"}], "s", " ", "wrong"}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Lambda]", "[", 
        RowBox[{"i", ",", "j", ",", "k", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"eq8pt18", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], " ", ",", " ", 
         
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"eq8pt19", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}]}], 
        "]"}], " ", ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "3"}], "}"}]}], "]"}], " ", "//", " ", 
     "Expand"}], " ", "//", " ", "Simplify"}], " ", "//", " ", 
   "MatrixForm"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822130419910578*^9, 3.822130481398396*^9}, {
   3.8221305136864567`*^9, 3.82213051691742*^9}, {3.8221310996789083`*^9, 
   3.822131114750345*^9}, {3.8221312486140757`*^9, 3.8221312519734983`*^9}, {
   3.822131571271923*^9, 3.822131574246426*^9}, 3.822138152807354*^9},
 CellLabel->
  "In[150]:=",ExpressionUUID->"24f9b6f0-14b6-4d0b-b614-01ed11f30fda"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {
           FractionBox["M", 
            RowBox[{
             SqrtBox[
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "r"]}]], " ", 
             SuperscriptBox["r", "2"]}]]},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"-", 
            FractionBox["M", 
             RowBox[{
              SqrtBox[
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"2", " ", "M"}], "r"]}]], " ", 
              SuperscriptBox["r", "2"]}]]}]},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {
           RowBox[{"-", 
            FractionBox[
             SqrtBox[
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "r"]}]], "r"]}]},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {
           RowBox[{"-", 
            FractionBox[
             SqrtBox[
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "r"]}]], "r"]}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {
           FractionBox[
            SqrtBox[
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "r"]}]], "r"]},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"Cot", "[", "\[Theta]", "]"}], "r"]}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {
           FractionBox[
            SqrtBox[
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "r"]}]], "r"]},
          {
           FractionBox[
            RowBox[{"Cot", "[", "\[Theta]", "]"}], "r"]},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822130453843202*^9, 3.822130517208187*^9}, 
   3.822131252306896*^9, 3.822131575800816*^9, 3.8221381528079147`*^9, 
   3.848260575342737*^9, 3.848260902896957*^9, 3.883903456690394*^9, 
   3.883906991610751*^9},
 CellLabel->
  "Out[150]//MatrixForm=",ExpressionUUID->"13eb0323-4741-4e63-ab29-\
bfb426435399"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Compare", " ", "this", " ", "with", " ", "page", " ", "135", " ", "of", 
    " ", "Chandra", " ", "and", " ", "figure", " ", "out", " ", 
    RowBox[{"what", "'"}], "s", " ", "wrong"}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Gamma]", "[", 
        RowBox[{"i", ",", "j", ",", "k", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"eq8pt18", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], " ", ",", " ", 
         
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"eq8pt19", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}]}], 
        "]"}], " ", ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "3"}], "}"}]}], "]"}], "   ", "//", " ", 
     "Expand"}], " ", "//", " ", "Simplify"}], " ", "//", " ", 
   "MatrixForm"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822130858638961*^9, 3.8221308630218163`*^9}, {
   3.822131122671397*^9, 3.822131124434936*^9}, {3.8221312610469513`*^9, 
   3.822131269073119*^9}, {3.8221315860401163`*^9, 3.822131589870406*^9}, 
   3.822138152808182*^9},
 CellLabel->
  "In[151]:=",ExpressionUUID->"462bcb59-5dbc-45ca-b916-cf7819a3eecd"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           FractionBox["M", 
            RowBox[{
             SqrtBox[
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "r"]}]], " ", 
             SuperscriptBox["r", "2"]}]]},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"-", 
            FractionBox["M", 
             RowBox[{
              SqrtBox[
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"2", " ", "M"}], "r"]}]], " ", 
              SuperscriptBox["r", "2"]}]]}]},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {
           RowBox[{"-", 
            FractionBox[
             SqrtBox[
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "r"]}]], "r"]}]},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {
           RowBox[{"-", 
            FractionBox[
             SqrtBox[
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "r"]}]], "r"]}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {
           FractionBox[
            SqrtBox[
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "r"]}]], "r"]},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"Cot", "[", "\[Theta]", "]"}], "r"]}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {
           FractionBox[
            SqrtBox[
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "r"]}]], "r"]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {
           FractionBox[
            RowBox[{"Cot", "[", "\[Theta]", "]"}], "r"]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.822131269816154*^9, 3.822131590351491*^9, 
  3.8221381528085938`*^9, 3.8482605753985786`*^9, 3.848260902953628*^9, 
  3.883903456750688*^9, 3.8839069916658983`*^9},
 CellLabel->
  "Out[151]//MatrixForm=",ExpressionUUID->"13e288c4-29a1-40b5-846a-\
c8dd0dab75bc"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Schwarzschild Null Tetrad:  8.16", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.883909520032948*^9, 3.883909535787621*^9}, {
  3.8839096186681128`*^9, 
  3.8839096205244017`*^9}},ExpressionUUID->"1d6df0e0-a32d-4376-a4f2-\
0378dd2e9fb2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"eq8pt16", ",", "l", ",", "n", ",", "m", ",", "mbar"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq8pt16", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"l", " ", "==", " ", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", " ", 
          FractionBox[
           RowBox[{"2", " ", "M"}], "r"]}], ")"}], 
        RowBox[{"-", "1"}]], 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0", ",", "0"}], " ", "}"}]}]}], " ", ",",
      " ", "\[IndentingNewLine]", 
     RowBox[{"n", " ", "==", 
      RowBox[{
       RowBox[{"(", 
        FractionBox["1", "2"], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", " ", 
         FractionBox[
          RowBox[{"2", " ", "M"}], "r"]}], ")"}], 
       RowBox[{"{", "  ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", " ", 
            FractionBox[
             RowBox[{"2", " ", "M"}], "r"]}], ")"}], 
          RowBox[{"-", "1"}]], ",", 
         RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}]}]}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"m", " ", "==", " ", 
      RowBox[{
       RowBox[{"(", 
        FractionBox["1", 
         RowBox[{
          SqrtBox["2"], " ", "r"}]], ")"}], " ", 
       RowBox[{"{", " ", 
        RowBox[{"0", ",", "0", ",", "1", ",", " ", 
         FractionBox["\[ImaginaryI]", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]]}], "}"}]}]}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"mbar", " ", "==", " ", 
      RowBox[{
       RowBox[{"(", 
        FractionBox["1", 
         RowBox[{
          SqrtBox["2"], " ", "r"}]], ")"}], " ", 
       RowBox[{"{", " ", 
        RowBox[{"0", ",", "0", ",", "1", ",", " ", 
         FractionBox[
          RowBox[{"-", "\[ImaginaryI]"}], 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]]}], "}"}]}]}]}], 
    "\[IndentingNewLine]", "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq8pt16", "  ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.883908746449366*^9, 3.883908941360702*^9}, {
   3.8839089995698433`*^9, 3.883908999952198*^9}, 3.883909050162416*^9, {
   3.883909297149502*^9, 3.8839093022798157`*^9}},
 CellLabel->
  "In[363]:=",ExpressionUUID->"e545fffa-7b0e-45f1-ba8c-50de81ca5167"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"l", "\[Equal]", 
       RowBox[{"{", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"2", " ", "M"}], "r"]}]], ",", 
         FractionBox["1", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"2", " ", "M"}], "r"]}]], ",", "0", ",", "0"}], "}"}]}]},
     {
      RowBox[{"n", "\[Equal]", 
       RowBox[{"{", 
        RowBox[{
         FractionBox["1", "2"], ",", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            FractionBox[
             RowBox[{"2", " ", "M"}], "r"]}], ")"}]}], ",", "0", ",", "0"}], 
        "}"}]}]},
     {
      RowBox[{"m", "\[Equal]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", 
         FractionBox["1", 
          RowBox[{
           SqrtBox["2"], " ", "r"}]], ",", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"Csc", "[", "\[Theta]", "]"}]}], 
          RowBox[{
           SqrtBox["2"], " ", "r"}]]}], "}"}]}]},
     {
      RowBox[{"mbar", "\[Equal]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", 
         FractionBox["1", 
          RowBox[{
           SqrtBox["2"], " ", "r"}]], ",", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"Csc", "[", "\[Theta]", "]"}]}], 
           RowBox[{
            SqrtBox["2"], " ", "r"}]]}]}], "}"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8839089215310383`*^9, 3.883908942002104*^9}, 
   3.8839090036315527`*^9, {3.883909302811687*^9, 3.8839093044895697`*^9}},
 CellLabel->
  "Out[365]//TableForm=",ExpressionUUID->"1e9d43c4-ba7d-4f39-ade1-\
e4590374290a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"(", 
  RowBox[{"l", " ", "/.", " ", 
   RowBox[{"(", " ", 
    RowBox[{
     RowBox[{"eq8pt16", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "  ", "/.", " ", 
     RowBox[{"Equal", "->", " ", "Rule"}]}], " ", ")"}]}], " ", 
  ")"}], "\[IndentingNewLine]", 
 RowBox[{"(", 
  RowBox[{"n", " ", "/.", " ", 
   RowBox[{"(", " ", 
    RowBox[{
     RowBox[{"eq8pt16", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "  ", "/.", " ", 
     RowBox[{"Equal", "->", " ", "Rule"}]}], " ", ")"}]}], " ", 
  ")"}], "\[IndentingNewLine]", 
 RowBox[{"(", 
  RowBox[{"m", "/.", "  ", 
   RowBox[{"(", " ", 
    RowBox[{
     RowBox[{"eq8pt16", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "  ", "/.", " ", 
     RowBox[{"Equal", "->", " ", "Rule"}]}], " ", ")"}]}], " ", 
  ")"}], "\[IndentingNewLine]", 
 RowBox[{"(", 
  RowBox[{"mbar", "/.", "  ", 
   RowBox[{"(", " ", 
    RowBox[{
     RowBox[{"eq8pt16", "[", 
      RowBox[{"[", "4", "]"}], "]"}], "  ", "/.", " ", 
     RowBox[{"Equal", "->", " ", "Rule"}]}], " ", ")"}]}], " ", 
  ")"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.883909127494548*^9, 3.8839091909009943`*^9}},
 CellLabel->
  "In[366]:=",ExpressionUUID->"5ec37006-2fce-4944-b49c-548370ab324e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{"2", " ", "M"}], "r"]}]], ",", 
   FractionBox["1", 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{"2", " ", "M"}], "r"]}]], ",", "0", ",", "0"}], "}"}]], "Output",\

 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.883909128619398*^9, 3.883909191502631*^9}, 
   3.8839093073436327`*^9},
 CellLabel->
  "Out[366]=",ExpressionUUID->"d46b7eaf-7c07-4dc1-9631-82f8708cbdbc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "2"], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      FractionBox[
       RowBox[{"2", " ", "M"}], "r"]}], ")"}]}], ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.883909128619398*^9, 3.883909191502631*^9}, 
   3.883909307348342*^9},
 CellLabel->
  "Out[367]=",ExpressionUUID->"ff616226-b2f5-4b53-aa6a-085f77d8c6ce"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", 
   FractionBox["1", 
    RowBox[{
     SqrtBox["2"], " ", "r"}]], ",", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"Csc", "[", "\[Theta]", "]"}]}], 
    RowBox[{
     SqrtBox["2"], " ", "r"}]]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.883909128619398*^9, 3.883909191502631*^9}, 
   3.883909307352911*^9},
 CellLabel->
  "Out[368]=",ExpressionUUID->"73866f13-73a4-4d0a-a8ab-0dc3561719dd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", 
   FractionBox["1", 
    RowBox[{
     SqrtBox["2"], " ", "r"}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Csc", "[", "\[Theta]", "]"}]}], 
     RowBox[{
      SqrtBox["2"], " ", "r"}]]}]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.883909128619398*^9, 3.883909191502631*^9}, 
   3.883909307359026*^9},
 CellLabel->
  "Out[369]=",ExpressionUUID->"4dea9978-5852-46cd-bdb2-52f4b4877142"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "schwarzschildInverseFromNullTetrad", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "schwarzschildInverseFromNullTetrad", " ", "=", " ", "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"TensorProduct", "[", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"l", " ", "/.", " ", 
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{"eq8pt16", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "  ", "/.", " ", 
            RowBox[{"Equal", "->", " ", "Rule"}]}], " ", ")"}]}], " ", ")"}], 
        ",", 
        RowBox[{"(", 
         RowBox[{"n", " ", "/.", " ", 
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{"eq8pt16", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "  ", "/.", " ", 
            RowBox[{"Equal", "->", " ", "Rule"}]}], " ", ")"}]}], " ", 
         ")"}]}], "]"}], " ", "+", 
      RowBox[{"TensorProduct", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"n", " ", "/.", " ", 
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{"eq8pt16", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "  ", "/.", " ", 
            RowBox[{"Equal", "->", " ", "Rule"}]}], " ", ")"}]}], " ", ")"}], 
        ",", 
        RowBox[{"(", 
         RowBox[{"l", " ", "/.", " ", 
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{"eq8pt16", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "  ", "/.", " ", 
            RowBox[{"Equal", "->", " ", "Rule"}]}], " ", ")"}]}], " ", 
         ")"}]}], "]"}], "-", "\[IndentingNewLine]", 
      RowBox[{"TensorProduct", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"m", " ", "/.", " ", 
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{"eq8pt16", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "  ", "/.", " ", 
            RowBox[{"Equal", "->", " ", "Rule"}]}], " ", ")"}]}], " ", ")"}], 
        ",", 
        RowBox[{"(", 
         RowBox[{"mbar", " ", "/.", " ", 
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{"eq8pt16", "[", 
             RowBox[{"[", "4", "]"}], "]"}], "  ", "/.", " ", 
            RowBox[{"Equal", "->", " ", "Rule"}]}], " ", ")"}]}], " ", 
         ")"}]}], "]"}], "-", "\[IndentingNewLine]", 
      RowBox[{"TensorProduct", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"mbar", " ", "/.", " ", 
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{"eq8pt16", "[", 
             RowBox[{"[", "4", "]"}], "]"}], "  ", "/.", " ", 
            RowBox[{"Equal", "->", " ", "Rule"}]}], " ", ")"}]}], " ", ")"}], 
        ",", 
        RowBox[{"(", 
         RowBox[{"m", " ", "/.", " ", 
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{"eq8pt16", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "  ", "/.", " ", 
            RowBox[{"Equal", "->", " ", "Rule"}]}], " ", ")"}]}], " ", 
         ")"}]}], "]"}]}], " ", "//", " ", "Expand"}], " ", "//", " ", 
    "Simplify"}]}], "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"schwarzschildInverseFromNullTetrad", "//", " ", 
  "MatrixForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.883909215033881*^9, 3.883909254588785*^9}, {
  3.8839093690042067`*^9, 3.8839094718345833`*^9}},
 CellLabel->
  "In[390]:=",ExpressionUUID->"aed4202d-cdd6-45af-b727-fca531372986"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", 
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{"2", " ", "M"}], "r"]}]], 
      RowBox[{"-", 
       FractionBox["M", 
        RowBox[{
         RowBox[{"2", " ", "M"}], "-", "r"}]]}], "0", "0"},
     {
      RowBox[{"-", 
       FractionBox["M", 
        RowBox[{
         RowBox[{"2", " ", "M"}], "-", "r"}]]}], 
      RowBox[{"-", "1"}], "0", "0"},
     {"0", "0", 
      RowBox[{"-", 
       FractionBox["1", 
        SuperscriptBox["r", "2"]]}], "0"},
     {"0", "0", "0", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], 
        SuperscriptBox["r", "2"]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.883909228859219*^9, {3.883909390105277*^9, 3.8839094278104897`*^9}, 
   3.8839094726994457`*^9},
 CellLabel->
  "Out[392]//MatrixForm=",ExpressionUUID->"48b72f89-0865-4391-bd07-\
c9fa66d73738"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Line Element and Metric 8.195:  Gravitational Plane Wave Space Time\
\>", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.883904050215231*^9, 3.883904108708189*^9}, {
  3.883904141558765*^9, 
  3.8839041480500383`*^9}},ExpressionUUID->"cbbe5547-7823-4564-bb8a-\
acb3e84d3cd6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "lineElement8pt195", "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"lineElement8pt195", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["dt", "2"]}], "+", " ", 
    SuperscriptBox["dx", "2"], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "hplus"}], ")"}], " ", 
     SuperscriptBox["dy", "2"]}], "+", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "hplus"}], ")"}], " ", 
     SuperscriptBox["dz", "2"]}], " ", "-", " ", 
    RowBox[{"2", " ", "hcross", " ", "dy", " ", "dz"}]}], "  ", "/.", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"hplus", "\[Rule]", " ", 
      RowBox[{"hplus", "[", 
       RowBox[{"t", "-", "x"}], "]"}]}], " ", ",", " ", 
     RowBox[{"hcross", "\[Rule]", " ", 
      RowBox[{"hcross", "[", 
       RowBox[{"t", "-", "x"}], "]"}]}]}], " ", "}"}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8221262514069767`*^9, 3.822126263877935*^9}, {
   3.8221322423512278`*^9, 3.822132273021961*^9}, 3.822138152808783*^9, 
   3.883904126811655*^9},
 CellLabel->
  "In[152]:=",ExpressionUUID->"26374324-dfd9-4f94-9540-306c887f6a9c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["dt", "2"]}], "+", 
  SuperscriptBox["dx", "2"], "-", 
  RowBox[{"2", " ", "dy", " ", "dz", " ", 
   RowBox[{"hcross", "[", 
    RowBox[{"t", "-", "x"}], "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["dy", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"hplus", "[", 
      RowBox[{"t", "-", "x"}], "]"}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["dz", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"hplus", "[", 
      RowBox[{"t", "-", "x"}], "]"}]}], ")"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.822126802932928*^9, 3.8221322735435867`*^9, 
  3.822138152809045*^9, 3.848260575410246*^9, 3.848260902966298*^9, 
  3.883903456767362*^9, 3.883906991678825*^9},
 CellLabel->
  "Out[153]=",ExpressionUUID->"180c2f09-3ecd-4874-bad9-eeaf60ad9025"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "metric8pt195", "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric8pt195", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"lineToMetric", "[", " ", 
    RowBox[{"lineElement8pt195", " ", ",", " ", 
     RowBox[{"{", 
      RowBox[{"dt", ",", "dx", ",", "dy", ",", "dz"}], "}"}]}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"metric8pt195", " ", "//", " ", "MatrixForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.822138152809181*^9, 3.883904122996669*^9},
 CellLabel->
  "In[154]:=",ExpressionUUID->"39b1ba3e-cc4a-4b2a-9bca-dd7408c20272"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], "0", "0", "0"},
     {"0", "1", "0", "0"},
     {"0", "0", 
      RowBox[{"1", "-", 
       RowBox[{"hplus", "[", 
        RowBox[{"t", "-", "x"}], "]"}]}], 
      RowBox[{"-", 
       RowBox[{"hcross", "[", 
        RowBox[{"t", "-", "x"}], "]"}]}]},
     {"0", "0", 
      RowBox[{"-", 
       RowBox[{"hcross", "[", 
        RowBox[{"t", "-", "x"}], "]"}]}], 
      RowBox[{"1", "+", 
       RowBox[{"hplus", "[", 
        RowBox[{"t", "-", "x"}], "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.822126802970592*^9, 3.8221322775972757`*^9, 
  3.822138152809635*^9, 3.848260575443307*^9, 3.848260902990196*^9, 
  3.883903456793998*^9, 3.883906991698194*^9},
 CellLabel->
  "Out[156]//MatrixForm=",ExpressionUUID->"13a6dfc3-c3a8-4572-aa6f-\
031a789842de"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Kerr Painleve Gullstrand 8.81", "Section",
 CellChangeTimes->{{3.8839158016605*^9, 
  3.8839158488588867`*^9}},ExpressionUUID->"c5b05e1c-fca6-44f4-8068-\
012abbad076f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq8pt79", "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq8pt79", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"2", " ", "M", " ", "r"}], "\[CapitalSigma]"]}], ")"}]}], " ", 
    SuperscriptBox["dT", "2"]}], "+", " ", 
   RowBox[{"2", 
    SqrtBox[
     FractionBox[
      RowBox[{"2", " ", "M", " ", "r"}], 
      RowBox[{
       SuperscriptBox["r", "2"], "+", 
       SuperscriptBox["a", "2"]}]]], " ", "dT", " ", "dr"}], " ", "-", " ", 
   RowBox[{
    RowBox[{"(", 
     FractionBox[
      RowBox[{"4", " ", "a", " ", "M", " ", "r"}], "\[CapitalSigma]"], ")"}], 
    " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], 
     RowBox[{"2", " "}]], " ", "dT", " ", "d\[CapitalPhi]"}], " ", "+", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["r", "2"], "+", 
        SuperscriptBox["a", "2"]}], ")"}], "+", 
      RowBox[{
       RowBox[{"(", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["a", "2"], " ", "M", " ", "r"}], "\[CapitalSigma]"], 
        ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
    SuperscriptBox["d\[CapitalPhi]", "2"]}], "-", " ", 
   RowBox[{"2", " ", "a", " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
    SqrtBox[
     FractionBox[
      RowBox[{"2", " ", "M", " ", "r"}], 
      RowBox[{
       SuperscriptBox["r", "2"], "+", 
       SuperscriptBox["a", "2"]}]]], " ", "dr", " ", "d\[CapitalPhi]"}], " ", 
   "+", " ", 
   RowBox[{
    FractionBox["\[CapitalSigma]", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["r", "2"], "+", 
       SuperscriptBox["a", "2"]}], ")"}]], " ", 
    SuperscriptBox["dr", "2"]}], " ", "+", " ", 
   RowBox[{"\[CapitalSigma]", " ", 
    SuperscriptBox["d\[Theta]", "2"]}]}]}]}], "Input",
 CellChangeTimes->{{3.88391508381144*^9, 3.883915281423397*^9}},
 CellLabel->
  "In[569]:=",ExpressionUUID->"5605e34b-fd98-465e-af02-a38aeda98c45"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   SqrtBox["2"], " ", "dr", " ", "dT", " ", 
   SqrtBox[
    FractionBox[
     RowBox[{"M", " ", "r"}], 
     RowBox[{
      SuperscriptBox["a", "2"], "+", 
      SuperscriptBox["r", "2"]}]]]}], "+", 
  RowBox[{
   SuperscriptBox["dT", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox[
      RowBox[{"2", " ", "M", " ", "r"}], "\[CapitalSigma]"]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["d\[Theta]", "2"], " ", "\[CapitalSigma]"}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["dr", "2"], " ", "\[CapitalSigma]"}], 
   RowBox[{
    SuperscriptBox["a", "2"], "+", 
    SuperscriptBox["r", "2"]}]], "-", 
  RowBox[{"2", " ", 
   SqrtBox["2"], " ", "a", " ", "dr", " ", "d\[CapitalPhi]", " ", 
   SqrtBox[
    FractionBox[
     RowBox[{"M", " ", "r"}], 
     RowBox[{
      SuperscriptBox["a", "2"], "+", 
      SuperscriptBox["r", "2"]}]]], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
  FractionBox[
   RowBox[{
   "4", " ", "a", " ", "dT", " ", "d\[CapitalPhi]", " ", "M", " ", "r", " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "\[CapitalSigma]"], "+", 
  RowBox[{
   SuperscriptBox["d\[CapitalPhi]", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["a", "2"], "+", 
     SuperscriptBox["r", "2"], "+", 
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "\[CapitalSigma]"]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.883915271287384*^9},
 CellLabel->
  "Out[570]=",ExpressionUUID->"66ba5b05-8a20-4799-be8d-d77aabd5b853"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric8pt79a", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric8pt79a", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"lineToMetric", "[", 
    RowBox[{"eq8pt79", ",", 
     RowBox[{"{", 
      RowBox[{"dT", ",", "dr", ",", "d\[Theta]", ",", "d\[CapitalPhi]"}], 
      "}"}]}], "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric8pt79a", "  ", "//", " ", "MatrixForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellChangeTimes->{{3.8839154528412933`*^9, 3.883915475398521*^9}},
 CellLabel->
  "In[585]:=",ExpressionUUID->"1f03295b-1f0d-4d39-ba9d-25e54f716c23"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        FractionBox[
         RowBox[{"2", " ", "M", " ", "r"}], "\[CapitalSigma]"], "-", "1"}], 
       RowBox[{
        SqrtBox["2"], " ", 
        SqrtBox[
         FractionBox[
          RowBox[{"M", " ", "r"}], 
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           SuperscriptBox["r", "2"]}]]]}], "0", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", "a", " ", "M", " ", "r", " ", 
          RowBox[{
           SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}], 
         "\[CapitalSigma]"]}]},
      {
       RowBox[{
        SqrtBox["2"], " ", 
        SqrtBox[
         FractionBox[
          RowBox[{"M", " ", "r"}], 
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           SuperscriptBox["r", "2"]}]]]}], 
       FractionBox["\[CapitalSigma]", 
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         SuperscriptBox["r", "2"]}]], "0", 
       RowBox[{
        RowBox[{"-", 
         SqrtBox["2"]}], " ", "a", " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
        SqrtBox[
         FractionBox[
          RowBox[{"M", " ", "r"}], 
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           SuperscriptBox["r", "2"]}]]]}]},
      {"0", "0", "\[CapitalSigma]", "0"},
      {
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", "a", " ", "M", " ", "r", " ", 
          RowBox[{
           SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}], 
         "\[CapitalSigma]"]}], 
       RowBox[{
        RowBox[{"-", 
         SqrtBox["2"]}], " ", "a", " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
        SqrtBox[
         FractionBox[
          RowBox[{"M", " ", "r"}], 
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           SuperscriptBox["r", "2"]}]]]}], "0", 
       RowBox[{
        RowBox[{
         SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", 
            SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}], 
           "\[CapitalSigma]"], "+", 
          SuperscriptBox["a", "2"], "+", 
          SuperscriptBox["r", "2"]}], ")"}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.883915446732437*^9, 3.8839154760039873`*^9}},
 CellLabel->
  "Out[587]//TraditionalForm=",ExpressionUUID->"08b933aa-7f1c-44b5-af4e-\
bb02bbed7980"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric8pt79", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric8pt79", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lineToMetric", "[", 
     RowBox[{"eq8pt79", ",", 
      RowBox[{"{", 
       RowBox[{"dT", ",", "dr", ",", "d\[Theta]", ",", "d\[CapitalPhi]"}], 
       "}"}]}], "]"}], "  ", "/.", " ", "sigmaDeltaFunction"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric8pt79", "//", " ", "MatrixForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellChangeTimes->{{3.8839152737819357`*^9, 3.883915344771317*^9}, {
  3.883915433512219*^9, 
  3.883915438686946*^9}},ExpressionUUID->"55aeb888-3627-454c-af1f-\
1be00edcb99b"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        FractionBox[
         RowBox[{"2", " ", "M", " ", "r"}], 
         RowBox[{"\[CapitalSigma]", "(", 
          RowBox[{"r", ",", "\[Theta]"}], ")"}]], "-", "1"}], 
       RowBox[{
        SqrtBox["2"], " ", 
        SqrtBox[
         FractionBox[
          RowBox[{"M", " ", "r"}], 
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           SuperscriptBox["r", "2"]}]]]}], "0", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", "a", " ", "M", " ", "r", " ", 
          RowBox[{
           SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}], 
         RowBox[{"\[CapitalSigma]", "(", 
          RowBox[{"r", ",", "\[Theta]"}], ")"}]]}]},
      {
       RowBox[{
        SqrtBox["2"], " ", 
        SqrtBox[
         FractionBox[
          RowBox[{"M", " ", "r"}], 
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           SuperscriptBox["r", "2"]}]]]}], 
       FractionBox[
        RowBox[{"\[CapitalSigma]", "(", 
         RowBox[{"r", ",", "\[Theta]"}], ")"}], 
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         SuperscriptBox["r", "2"]}]], "0", 
       RowBox[{
        RowBox[{"-", 
         SqrtBox["2"]}], " ", "a", " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
        SqrtBox[
         FractionBox[
          RowBox[{"M", " ", "r"}], 
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           SuperscriptBox["r", "2"]}]]]}]},
      {"0", "0", 
       RowBox[{"\[CapitalSigma]", "(", 
        RowBox[{"r", ",", "\[Theta]"}], ")"}], "0"},
      {
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", "a", " ", "M", " ", "r", " ", 
          RowBox[{
           SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}], 
         RowBox[{"\[CapitalSigma]", "(", 
          RowBox[{"r", ",", "\[Theta]"}], ")"}]]}], 
       RowBox[{
        RowBox[{"-", 
         SqrtBox["2"]}], " ", "a", " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
        SqrtBox[
         FractionBox[
          RowBox[{"M", " ", "r"}], 
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           SuperscriptBox["r", "2"]}]]]}], "0", 
       RowBox[{
        RowBox[{
         SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", 
            SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}], 
           RowBox[{"\[CapitalSigma]", "(", 
            RowBox[{"r", ",", "\[Theta]"}], ")"}]], "+", 
          SuperscriptBox["a", "2"], "+", 
          SuperscriptBox["r", "2"]}], ")"}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.8839152990392647`*^9, 3.8839153455016613`*^9}},
 CellLabel->
  "Out[579]//TraditionalForm=",ExpressionUUID->"4d4a3220-87f3-4045-b20e-\
9e4010592670"]
}, Closed]],

Cell[CellGroupData[{

Cell["Transformation for Painleve Gullstrand - Add in Above ", "Section",
 CellChangeTimes->{{3.883916354486236*^9, 
  3.883916406904367*^9}},ExpressionUUID->"53e156e2-b65e-45d7-a1ca-\
b27dead077a3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq8pt79", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq8pt79", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"T", " ", "==", " ", 
      RowBox[{"t", " ", "-", " ", 
       RowBox[{"Inactivate", "[", 
        RowBox[{
         RowBox[{"Integrate", "[", 
          RowBox[{
           RowBox[{"f", "[", "r", "]"}], ",", "r"}], "]"}], ",", 
         "Integrate"}], "]"}]}]}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalPhi]", " ", "==", " ", 
      RowBox[{"\[Phi]", "  ", "-", " ", 
       RowBox[{"Inactivate", "[", 
        RowBox[{
         RowBox[{"Integrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             FractionBox["a", 
              RowBox[{
               SuperscriptBox["r", "2"], "+", 
               SuperscriptBox["a", "2"]}]], ")"}], 
            RowBox[{"f", "[", "r", "]"}]}], ",", "r"}], "]"}], ",", 
         "Integrate"}], "]"}]}]}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"R", " ", "==", " ", "r"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalTheta]", " ", "==", " ", "\[Theta]"}]}], 
    "\[IndentingNewLine]", "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq8pt79", " ", "//", " ", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.883915890655822*^9, 3.883916021057749*^9}},
 CellLabel->
  "In[615]:=",ExpressionUUID->"21cf6dd3-22dd-4ec1-85e1-7b1435a362a0"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"T", "\[Equal]", 
       RowBox[{"t", "-", 
        TemplateBox[{
          RowBox[{"f", "[", "r", "]"}], "r"},
         "InactiveIntegrate",
         DisplayFunction->(RowBox[{
            StyleBox["\[Integral]", "Inactive"], 
            RowBox[{#, 
              RowBox[{
                StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
         InterpretationFunction->(RowBox[{
            RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
            RowBox[{#, ",", #2}], "]"}]& )]}]}]},
     {
      RowBox[{"\[CapitalPhi]", "\[Equal]", 
       RowBox[{"\[Phi]", "-", 
        TemplateBox[{
          FractionBox[
           RowBox[{"a", " ", 
             RowBox[{"f", "[", "r", "]"}]}], 
           RowBox[{
             SuperscriptBox["a", "2"], "+", 
             SuperscriptBox["r", "2"]}]], "r"},
         "InactiveIntegrate",
         DisplayFunction->(RowBox[{
            StyleBox["\[Integral]", "Inactive"], 
            RowBox[{#, 
              RowBox[{
                StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
         InterpretationFunction->(RowBox[{
            RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
            RowBox[{#, ",", #2}], "]"}]& )]}]}]},
     {
      RowBox[{"R", "\[Equal]", "r"}]},
     {
      RowBox[{"\[CapitalTheta]", "\[Equal]", "\[Theta]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8839160220139303`*^9, 3.88391631088988*^9},
 CellLabel->
  "Out[617]//TableForm=",ExpressionUUID->"930b13c6-1acd-44ff-b470-\
43490da5dac4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "trThetaPhiReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trThetaPhiReplace", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{"eq8pt79", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}]}], 
     "]"}], "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"trThetaPhiReplace", "//", " ", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.883916034431527*^9, 3.8839160718610086`*^9}},
 CellLabel->
  "In[618]:=",ExpressionUUID->"1ac133d0-6e05-4269-95c0-13578552ac6a"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"t", "\[Rule]", 
       RowBox[{"T", "+", 
        TemplateBox[{
          RowBox[{"f", "[", "R", "]"}], "R"},
         "InactiveIntegrate",
         DisplayFunction->(RowBox[{
            StyleBox["\[Integral]", "Inactive"], 
            RowBox[{#, 
              RowBox[{
                StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
         InterpretationFunction->(RowBox[{
            RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
            RowBox[{#, ",", #2}], "]"}]& )]}]}]},
     {
      RowBox[{"r", "\[Rule]", "R"}]},
     {
      RowBox[{"\[Theta]", "\[Rule]", "\[CapitalTheta]"}]},
     {
      RowBox[{"\[Phi]", "\[Rule]", 
       RowBox[{"\[CapitalPhi]", "+", 
        TemplateBox[{
          FractionBox[
           RowBox[{"a", " ", 
             RowBox[{"f", "[", "R", "]"}]}], 
           RowBox[{
             SuperscriptBox["a", "2"], "+", 
             SuperscriptBox["R", "2"]}]], "R"},
         "InactiveIntegrate",
         DisplayFunction->(RowBox[{
            StyleBox["\[Integral]", "Inactive"], 
            RowBox[{#, 
              RowBox[{
                StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
         InterpretationFunction->(RowBox[{
            RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
            RowBox[{#, ",", #2}], "]"}]& )]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.88391604191919*^9, 3.88391607284682*^9}, {
  3.883916308273869*^9, 3.8839163152397423`*^9}},
 CellLabel->
  "Out[620]//TableForm=",ExpressionUUID->"0cd8c67a-c000-4172-86dd-\
0b8d8d722764"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Dt", "[", "trThetaPhiReplace", "]"}], " ", "/.", " ", 
    "dtReplace"}], " ", "//", " ", "Activate"}], " ", "//", " ", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.8839160819087973`*^9, 3.8839160872537117`*^9}, {
  3.883916328782794*^9, 3.883916337346705*^9}},
 CellLabel->
  "In[623]:=",ExpressionUUID->"98404d9e-966f-4078-955a-1755bbc5b334"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"dt", "\[Rule]", 
       RowBox[{"dT", "+", 
        RowBox[{"dR", " ", 
         RowBox[{"f", "[", "R", "]"}]}]}]}]},
     {
      RowBox[{"dr", "\[Rule]", "dR"}]},
     {
      RowBox[{"d\[Theta]", "\[Rule]", "d\[CapitalTheta]"}]},
     {
      RowBox[{"d\[Phi]", "\[Rule]", 
       RowBox[{"d\[CapitalPhi]", "+", 
        FractionBox[
         RowBox[{"a", " ", "dR", " ", 
          RowBox[{"f", "[", "R", "]"}]}], 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          SuperscriptBox["R", "2"]}]]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8839160802526217`*^9, 3.883916087723695*^9}, 
   3.883916152031934*^9, 3.8839162257096643`*^9, {3.8839163052571917`*^9, 
   3.883916337796295*^9}},
 CellLabel->
  "Out[623]//TableForm=",ExpressionUUID->"6428cced-8c95-4efe-a2fa-\
16b038c8e8b4"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Principal Null Directions 8.87", "Section",
 CellChangeTimes->{{3.883996168145121*^9, 3.8839961852100677`*^9}, {
  3.883997581409975*^9, 
  3.883997582544572*^9}},ExpressionUUID->"d60783c8-b196-4c04-8439-\
a39c2c59bdb2"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\n", 
  RowBox[{
   RowBox[{"Clear", "[", "eq8pt87", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eq8pt87", " ", "=", " ", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"lup", " ", "=", 
        RowBox[{
         RowBox[{"(", 
          FractionBox["1", "\[CapitalDelta]"], ")"}], " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["r", "2"], "+", 
             SuperscriptBox["a", "2"]}], ")"}], ",", "\[CapitalDelta]", ",", 
           "0", ",", "a"}], "}"}]}]}], " ", ",", " ", "\[IndentingNewLine]", 
       RowBox[{"nup", " ", "=", 
        RowBox[{
         RowBox[{"(", 
          FractionBox["1", 
           RowBox[{"2", "\[CapitalSigma]"}]], ")"}], " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["r", "2"], "+", 
             SuperscriptBox["a", "2"]}], ")"}], ",", 
           RowBox[{"-", "\[CapitalDelta]"}], ",", "0", ",", "a"}], " ", 
          "}"}]}]}], " ", ",", "\[IndentingNewLine]", 
       RowBox[{"mup", " ", "=", 
        RowBox[{
         RowBox[{"(", 
          FractionBox["1", 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{"r", "+", 
              RowBox[{"\[ImaginaryI]", " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]], ")"}], 
         " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "a", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], " ", ",", "0", ",", "1", 
           ",", " ", 
           FractionBox["\[ImaginaryI]", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]]}], "}"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"mbarup", " ", "=", 
        RowBox[{
         RowBox[{"(", 
          FractionBox["1", 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{"r", "-", 
              RowBox[{"\[ImaginaryI]", " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]], ")"}], 
         " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], " ", ",", "0", ",", "1", 
           ",", " ", 
           FractionBox[
            RowBox[{"-", "\[ImaginaryI]"}], 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]]}], "}"}]}]}]}], 
      "\[IndentingNewLine]", "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{"eq8pt87", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"eq8pt87", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"eq8pt87", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"eq8pt87", "[", 
    RowBox[{"[", "4", "]"}], "]"}], "\n", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["a", "2"], "+", 
       SuperscriptBox["r", "2"]}], "\[CapitalDelta]"], ",", "1", ",", "0", 
     ",", 
     FractionBox["a", "\[CapitalDelta]"]}], "}"}], "\n", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["a", "2"], "+", 
       SuperscriptBox["r", "2"]}], 
      RowBox[{"2", " ", "\[CapitalSigma]"}]], ",", 
     RowBox[{"-", 
      FractionBox["\[CapitalDelta]", 
       RowBox[{"2", " ", "\[CapitalSigma]"}]]}], ",", "0", ",", 
     FractionBox["a", 
      RowBox[{"2", " ", "\[CapitalSigma]"}]]}], "}"}], "\n", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "a", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"(", 
        RowBox[{"r", "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]], ",", "0", ",", 
     
     FractionBox["1", 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"(", 
        RowBox[{"r", "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]], ",", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Csc", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"(", 
        RowBox[{"r", "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]]}], "}"}], "\n", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "a", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{"r", "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]]}], ",", "0", 
     ",", 
     FractionBox["1", 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"(", 
        RowBox[{"r", "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Csc", "[", "\[Theta]", "]"}]}], 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{"r", "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]]}]}], "}"}], 
   "\n", 
   RowBox[{"Clear", "[", "kerrMetricComplexNullFrame", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "kerrMetricComplexNullFrame", " ", "=", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"TensorProduct", "[", 
          RowBox[{"lup", ",", "nup"}], "]"}]}], "-", 
        RowBox[{"TensorProduct", "[", 
         RowBox[{"nup", ",", "lup"}], "]"}], "+", 
        RowBox[{
         RowBox[{"TensorProduct", "[", 
          RowBox[{"mup", ",", "mbarup"}], "]"}], 
         RowBox[{"TensorProduct", "[", 
          RowBox[{"mbarup", ",", "mup"}], "]"}]}]}], " ", "//", " ", 
       "Expand"}], " ", "//", " ", "Simplify"}]}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kerrMetricComplexNullFrame", "//", " ", "MatrixForm"}], " ", "//",
     " ", "pdConv"}], "\n", 
   FormBox[
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{
          FractionBox[
           RowBox[{
            SuperscriptBox["a", "4"], " ", 
            RowBox[{
             SuperscriptBox["sin", "4"], "(", "\[Theta]", ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"cos", "(", 
               RowBox[{"2", " ", "\[Theta]"}], ")"}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["r", "2"]}], "-", "1"}], ")"}], "2"]], "-", 
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], "2"], 
           RowBox[{"\[CapitalDelta]", " ", "\[CapitalSigma]"}]]}], "0", 
         FractionBox[
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           RowBox[{
            SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"cos", "(", 
              RowBox[{"2", " ", "\[Theta]"}], ")"}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["r", "2"]}], "-", "1"}], ")"}], "2"]], 
         RowBox[{
          FractionBox["1", "4"], " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"4", " ", 
               SuperscriptBox["a", "2"]}], 
              RowBox[{"\[CapitalDelta]", " ", "\[CapitalSigma]"}]]}], "+", 
            FractionBox["a", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], "+", 
                SuperscriptBox["r", "2"]}], ")"}], "2"]], "-", 
            FractionBox[
             RowBox[{"4", " ", 
              SuperscriptBox["r", "2"]}], 
             RowBox[{"\[CapitalDelta]", " ", "\[CapitalSigma]"}]]}], 
           ")"}]}]},
        {"0", 
         FractionBox["\[CapitalDelta]", "\[CapitalSigma]"], "0", "0"},
        {
         FractionBox[
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           RowBox[{
            SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"cos", "(", 
              RowBox[{"2", " ", "\[Theta]"}], ")"}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["r", "2"]}], "-", "1"}], ")"}], "2"]], "0", 
         FractionBox["1", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"cos", "(", 
              RowBox[{"2", " ", "\[Theta]"}], ")"}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["r", "2"]}], "-", "1"}], ")"}], "2"]], 
         FractionBox[
          RowBox[{
           SuperscriptBox["csc", "2"], "(", "\[Theta]", ")"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"cos", "(", 
              RowBox[{"2", " ", "\[Theta]"}], ")"}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["r", "2"]}], "-", "1"}], ")"}], "2"]]},
        {
         RowBox[{
          FractionBox["1", "4"], " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"4", " ", 
               SuperscriptBox["a", "2"]}], 
              RowBox[{"\[CapitalDelta]", " ", "\[CapitalSigma]"}]]}], "+", 
            FractionBox["a", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], "+", 
                SuperscriptBox["r", "2"]}], ")"}], "2"]], "-", 
            FractionBox[
             RowBox[{"4", " ", 
              SuperscriptBox["r", "2"]}], 
             RowBox[{"\[CapitalDelta]", " ", "\[CapitalSigma]"}]]}], ")"}]}], 
         "0", 
         FractionBox[
          RowBox[{
           SuperscriptBox["csc", "2"], "(", "\[Theta]", ")"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"cos", "(", 
              RowBox[{"2", " ", "\[Theta]"}], ")"}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["r", "2"]}], "-", "1"}], ")"}], "2"]], 
         RowBox[{
          FractionBox[
           RowBox[{
            SuperscriptBox["csc", "4"], "(", "\[Theta]", ")"}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"cos", "(", 
               RowBox[{"2", " ", "\[Theta]"}], ")"}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["r", "2"]}], "-", "1"}], ")"}], "2"]], "-", 
          FractionBox[
           SuperscriptBox["a", "2"], 
           RowBox[{"\[CapitalDelta]", " ", "\[CapitalSigma]"}]]}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]],
    TraditionalForm], "\n", 
   RowBox[{"Clear", "[", "l", "]"}], "\[IndentingNewLine]", 
   RowBox[{"l", " ", "=", " ", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"l1", ",", "l2", ",", "l3", ",", "l4"}], "}"}]}], "\n", 
   RowBox[{"{", 
    RowBox[{"l1", ",", "l2", ",", "l3", ",", "l4"}], "}"}], "\n", 
   RowBox[{"Clear", "[", "ldown", "]"}], "\[IndentingNewLine]", 
   RowBox[{"ldown", " ", "=", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"l", " ", "/.", " ", 
      RowBox[{"Solve", "[", "\[IndentingNewLine]", "  ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Sum", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"lup", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", 
             RowBox[{"l", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "\[Equal]", 
          " ", "0"}], "  ", "&&", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Sum", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"nup", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", 
             RowBox[{"l", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "\[Equal]", 
          " ", "1"}], "  ", "&&", "\n", "     ", 
         RowBox[{
          RowBox[{"Sum", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"mup", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", 
             RowBox[{"l", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "\[Equal]", 
          " ", "0"}], "  ", "&&", "\n", "     ", 
         RowBox[{
          RowBox[{"Sum", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"mbarup", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", 
             RowBox[{"l", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "\[Equal]", 
          " ", "0"}]}], " ", ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"l1", ",", "l2", ",", "l3", ",", "l4"}], "}"}]}], "]"}]}], 
     " ", "//", " ", "Flatten"}]}], "\n", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"\[CapitalSigma]", " ", 
       SuperscriptBox[
        RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"]}], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["a", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
     RowBox[{"-", 
      FractionBox["\[CapitalSigma]", "\[CapitalDelta]"]}], ",", "0", ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"a", " ", "\[CapitalSigma]"}], 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["a", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"]}], "+", 
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"]}]}]]}]}], "}"}], "\n", 
   RowBox[{"Clear", "[", "n", "]"}], "\[IndentingNewLine]", 
   RowBox[{"n", "=", " ", 
    RowBox[{"{", " ", 
     RowBox[{"n1", ",", " ", "n2", ",", " ", "n3", ",", " ", "n4"}], "}"}]}], 
   "\n", 
   RowBox[{"{", 
    RowBox[{"n1", ",", "n2", ",", "n3", ",", "n4"}], "}"}], "\n", 
   RowBox[{"Clear", "[", "ndown", "]"}], "\[IndentingNewLine]", 
   RowBox[{"ndown", " ", "=", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", " ", "/.", " ", 
      RowBox[{"Solve", "[", "\[IndentingNewLine]", "  ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Sum", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"lup", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", 
             RowBox[{"n", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "\[Equal]", 
          " ", "1"}], "  ", "&&", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Sum", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"nup", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", 
             RowBox[{"n", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "\[Equal]", 
          " ", "0"}], "  ", "&&", "\n", "     ", 
         RowBox[{
          RowBox[{"Sum", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"mup", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", 
             RowBox[{"n", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "\[Equal]", 
          " ", "0"}], "  ", "&&", "\n", "     ", 
         RowBox[{
          RowBox[{"Sum", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"mbarup", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", 
             RowBox[{"n", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "\[Equal]", 
          " ", "0"}]}], " ", ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"n1", ",", "n2", ",", "n3", ",", "n4"}], "}"}]}], "]"}]}], 
     " ", "//", " ", "Flatten"}]}], " ", "\n", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"\[CapitalDelta]", " ", 
       SuperscriptBox[
        RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["a", "2"]}], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"a", " ", "\[CapitalDelta]"}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["a", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]]}]}], 
    "}"}], "\n", 
   RowBox[{"Clear", "[", "m", "]"}], "\[IndentingNewLine]", 
   RowBox[{"m", "=", " ", 
    RowBox[{"{", " ", 
     RowBox[{"m1", ",", " ", "m2", ",", " ", "m3", ",", " ", "m4"}], "}"}]}], 
   "\n", 
   RowBox[{"{", 
    RowBox[{"m1", ",", "m2", ",", "m3", ",", "m4"}], "}"}], "\n", 
   RowBox[{"Clear", "[", "mdown", "]"}], "\[IndentingNewLine]", 
   RowBox[{"mdown", " ", "=", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"m", "/.", " ", 
      RowBox[{"Solve", "[", "\[IndentingNewLine]", "  ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Sum", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"lup", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", 
             RowBox[{"m", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "\[Equal]", 
          " ", "0"}], "  ", "&&", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Sum", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"nup", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", 
             RowBox[{"m", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "\[Equal]", 
          " ", "0"}], "  ", "&&", "\n", "     ", 
         RowBox[{
          RowBox[{"Sum", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"mup", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", 
             RowBox[{"m", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "\[Equal]", 
          " ", "0"}], "  ", "&&", "\n", "     ", 
         RowBox[{
          RowBox[{"Sum", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"mbarup", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", 
             RowBox[{"m", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "\[Equal]", 
          " ", 
          RowBox[{"-", "1"}]}]}], " ", ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"m1", ",", "m2", ",", "m3", ",", "m4"}], "}"}]}], "]"}]}], 
     " ", "//", " ", "Flatten"}]}], " ", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"a", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "r"}], "+", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["a", "2"]}], "-", 
          SuperscriptBox["r", "2"], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]]}], ",", 
     "0", ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SqrtBox["2"]}], " ", "r"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         SqrtBox["2"], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         SuperscriptBox["r", "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"r", "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["a", "2"]}], "-", 
         SuperscriptBox["r", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]]}], "}"}],
    "\n", 
   RowBox[{"Clear", "[", "mbar", "]"}], "\[IndentingNewLine]", 
   RowBox[{"mbar", " ", "=", " ", 
    RowBox[{"{", " ", 
     RowBox[{
     "mbar1", ",", " ", "mbar2", ",", " ", "mbar3", ",", " ", "mbar4"}], " ", 
     "}"}]}], "\n", 
   RowBox[{"{", 
    RowBox[{"mbar1", ",", "mbar2", ",", "mbar3", ",", "mbar4"}], "}"}], "\n", 
   
   RowBox[{"Clear", "[", "mbardown", "]"}], "\[IndentingNewLine]", 
   RowBox[{"mbardown", " ", "=", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"mbar", " ", "/.", " ", 
      RowBox[{"Solve", "[", "\[IndentingNewLine]", "  ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Sum", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"lup", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", 
             RowBox[{"mbar", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "\[Equal]", 
          " ", "0"}], "  ", "&&", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Sum", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"nup", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", 
             RowBox[{"mbar", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "\[Equal]", 
          " ", "0"}], "  ", "&&", "\n", "     ", 
         RowBox[{
          RowBox[{"Sum", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"mup", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", 
             RowBox[{"mbar", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "\[Equal]", 
          " ", 
          RowBox[{"0", "-", "1"}]}], " ", "&&", "\n", "     ", 
         RowBox[{
          RowBox[{"Sum", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"mbarup", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", 
             RowBox[{"mbar", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "\[Equal]", 
          " ", "0"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", " ", 
         RowBox[{
         "mbar1", ",", " ", "mbar2", ",", " ", "mbar3", ",", " ", "mbar4"}], 
         " ", "}"}]}], "]"}]}], " ", "//", " ", "Flatten"}]}], " ", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"a", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "r"}], "+", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["a", "2"]}], "-", 
          SuperscriptBox["r", "2"], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]]}], ",", 
     "0", ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SqrtBox["2"]}], " ", "r"}], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         SqrtBox["2"], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          SuperscriptBox["r", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"r", "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["a", "2"]}], "-", 
          SuperscriptBox["r", "2"], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]]}]}], 
    "}"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Here", "'"}], "s", " ", "the", " ", "problem"}], "..."}],
           " ", "a", " ", "is", " ", "a", " ", "parameter", " ", "in", " ", 
          "the", " ", "metric"}], "..."}], " ", "a", " ", "is", " ", "also", 
        " ", "an", " ", "index", " ", "on", " ", "the", " ", "null", " ", 
        "vectors"}], "..."}], " ", "if", " ", "one", " ", "sums", " ", "over",
       " ", "a", " ", "you", " ", "get", " ", "the", " ", "wrong", " ", 
      "answer"}], "..."}], "  ", "*)"}], " ", "\[IndentingNewLine]", "\n", 
   RowBox[{"Clear", "[", "eq2pt7pt7", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eq2pt7pt7", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", " ", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ldown", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", 
             RowBox[{"lup", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], " ", ",", " ",
           "\n", "\t", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"mdown", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", 
             RowBox[{"mup", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "  ", ",", 
          " ", "\n", "\t", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"mbardown", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", 
             RowBox[{"mbarup", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "   ", ",", 
          " ", "\n", "\t", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ndown", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", 
             RowBox[{"nup", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "   ", ",", 
          " ", "\n", "\t", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ldown", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", 
             RowBox[{"nup", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], " ", ",", " ",
           "\n", "\t", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"mdown", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", 
             RowBox[{"mbarup", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "   ", ",", 
          " ", "\n", "\t", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ldown", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", 
             RowBox[{"mup", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "   ", ",", 
          " ", "\[IndentingNewLine]", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ldown", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", 
             RowBox[{"mbarup", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "   ", ",", 
          " ", "\n", "\t", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ndown", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", 
             RowBox[{"mup", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "   ", ",", 
          " ", "\n", "\t", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ndown", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", 
             RowBox[{"mbarup", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], " ", 
         "\[IndentingNewLine]", "}"}], " ", "/.", " ", "sigmaDeltaAreplace"}],
        "//", " ", "Expand"}], " ", "//", " ", "Simplify"}]}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"eq2pt7pt7", "  ", "//", " ", "TableForm"}], "\n", 
   TagBox[
    TagBox[GridBox[{
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"1"},
       {
        RowBox[{"-", "1"}]},
       {"0"},
       {"0"},
       {"0"},
       {"0"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"TensorProduct", "[", 
         RowBox[{"ldown", ",", "ndown"}], "]"}]}], "-", 
       RowBox[{"TensorProduct", "[", 
        RowBox[{"ndown", ",", "ldown"}], "]"}], "+", 
       RowBox[{"TensorProduct", "[", 
        RowBox[{"mdown", ",", "mbardown"}], "]"}], "+", 
       RowBox[{"TensorProduct", "[", 
        RowBox[{"mbardown", ",", "mdown"}], "]"}]}], "  ", "/.", " ", 
      "sigmaDeltaAreplace"}], "//", " ", "Expand"}], "  ", "//", " ", 
    "FullSimplify"}], "  ", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          SuperscriptBox["a", "4"]}], "+", 
         RowBox[{"8", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "M"}], "-", "r"}], ")"}], " ", 
          SuperscriptBox["r", "3"]}], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"3", "+", 
            RowBox[{"8", " ", 
             RowBox[{"(", 
              RowBox[{"M", "-", "r"}], ")"}], " ", "r"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["a", "2"], "+", 
               RowBox[{"2", " ", "r", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "M"}], "+", "r"}], ")"}]}]}], ")"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"4", " ", "\[Theta]"}], "]"}]}], ")"}]}]}], 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["r", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["a", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"]}]], ",", 
       "0", ",", "0", ",", 
       FractionBox[
        RowBox[{"a", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["a", "2"]}], "-", 
           SuperscriptBox["r", "2"], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              RowBox[{"r", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], 
             ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Cot", "[", "\[Theta]", "]"}], "2"]}], "-", 
           RowBox[{"2", " ", "M", " ", 
            SuperscriptBox["r", "3"], " ", 
            SuperscriptBox[
             RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["a", "2"], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"]]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       FractionBox[
        RowBox[{
         SuperscriptBox["r", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], 
        RowBox[{
         SuperscriptBox["a", "2"], "-", 
         RowBox[{"2", " ", "M", " ", "r"}], "+", 
         SuperscriptBox["r", "2"]}]], ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{
        SuperscriptBox["r", "2"], "+", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"a", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["a", "2"]}], "-", 
           SuperscriptBox["r", "2"], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              RowBox[{"r", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], 
             ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Cot", "[", "\[Theta]", "]"}], "2"]}], "-", 
           RowBox[{"2", " ", "M", " ", 
            SuperscriptBox["r", "3"], " ", 
            SuperscriptBox[
             RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["a", "2"], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"]], 
       ",", "0", ",", "0", ",", 
       FractionBox[
        RowBox[{
         SuperscriptBox["r", "4"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["r", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            RowBox[{"2", " ", "M", " ", "r"}], "-", 
            SuperscriptBox["r", "2"]}], ")"}]}], "-", 
         RowBox[{
          SuperscriptBox["a", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["r", "2"]}], ")"}]}], "-", 
         RowBox[{
          SuperscriptBox["a", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            RowBox[{"r", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]}], ")"}], 
          " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["a", "2"], "+", 
             SuperscriptBox["r", "2"]}], ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"]}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["a", "2"], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"]]}], 
      "}"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.883996146961177*^9, 
  3.8839961619642057`*^9}},ExpressionUUID->"82f0f0f2-6f1a-403a-a51d-\
243b3d07aa58"]
}, Closed]],

Cell[CellGroupData[{

Cell["Line Element and Metric 9.32:  Kerr in Boyer Lindquist", "Section",
 CellChangeTimes->{{3.883996907401328*^9, 
  3.883996931408533*^9}},ExpressionUUID->"a320ca3f-da76-4a9a-8db7-\
454f77c6b8ab"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq9pt32", "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq9pt32", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"2", " ", "M", " ", "r"}], "\[CapitalSigma]"]}], ")"}]}], "  ", 
    SuperscriptBox["dt", "2"]}], " ", "-", 
   RowBox[{
    FractionBox[
     RowBox[{"4", " ", "a", " ", "M", " ", "r", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "\[CapitalSigma]"], " ",
     "dt", " ", "d\[Phi]"}], "+", " ", 
   RowBox[{
    RowBox[{"(", 
     FractionBox["\[CapitalSigma]", "\[CapitalDelta]"], ")"}], " ", 
    SuperscriptBox["dr", "2"]}], " ", "+", 
   RowBox[{"\[CapitalSigma]", " ", 
    SuperscriptBox["d\[Theta]", "2"]}], "+", " ", 
   RowBox[{
    RowBox[{"(", 
     FractionBox["A", "\[CapitalSigma]"], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
    SuperscriptBox["d\[Phi]", "2"]}]}]}]}], "Input",
 CellChangeTimes->{{3.8839967541694517`*^9, 3.88399683902063*^9}},
 CellLabel->
  "In[723]:=",ExpressionUUID->"726c9ab9-b799-44f2-8640-320e0abf1fed"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["dt", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox[
      RowBox[{"2", " ", "M", " ", "r"}], "\[CapitalSigma]"]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["d\[Theta]", "2"], " ", "\[CapitalSigma]"}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["dr", "2"], " ", "\[CapitalSigma]"}], "\[CapitalDelta]"], 
  "+", 
  FractionBox[
   RowBox[{"A", " ", 
    SuperscriptBox["d\[Phi]", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "\[CapitalSigma]"], "-", 
  FractionBox[
   RowBox[{
   "4", " ", "a", " ", "dt", " ", "d\[Phi]", " ", "M", " ", "r", " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
   "\[CapitalSigma]"]}]], "Output",
 CellChangeTimes->{3.883996842361174*^9},
 CellLabel->
  "Out[724]=",ExpressionUUID->"c486057d-9a25-49e6-89a0-9a9f05d95597"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric9pt32", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric9pt32", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"lineToMetric", "[", 
    RowBox[{"eq9pt32", ",", 
     RowBox[{"{", 
      RowBox[{"dt", ",", "dr", ",", "d\[Theta]", ",", "d\[Phi]"}], "}"}]}], 
    "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric9pt32", " ", "//", " ", "MatrixForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellChangeTimes->{{3.883996843955039*^9, 3.883996882507236*^9}},
 CellLabel->
  "In[727]:=",ExpressionUUID->"c6a92cc8-16a0-4e09-93e8-666d70cc6b7b"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        FractionBox[
         RowBox[{"2", " ", "M", " ", "r"}], "\[CapitalSigma]"], "-", "1"}], 
       "0", "0", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", "a", " ", "M", " ", "r", " ", 
          RowBox[{
           SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}], 
         "\[CapitalSigma]"]}]},
      {"0", 
       FractionBox["\[CapitalSigma]", "\[CapitalDelta]"], "0", "0"},
      {"0", "0", "\[CapitalSigma]", "0"},
      {
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", "a", " ", "M", " ", "r", " ", 
          RowBox[{
           SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}], 
         "\[CapitalSigma]"]}], "0", "0", 
       FractionBox[
        RowBox[{"A", " ", 
         RowBox[{
          SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}], 
        "\[CapitalSigma]"]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.883996859032609*^9, 3.883996882929544*^9}},
 CellLabel->
  "Out[729]//TraditionalForm=",ExpressionUUID->"feace1f1-c74d-46bc-b4ef-\
2ed0b8a1c890"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq9pt33", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq9pt33", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[CapitalSigma]", "==", "  ", 
      RowBox[{
       SuperscriptBox["r", "2"], "+", " ", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]}], "  ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"A", " ", "==", " ", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["r", "2"], "+", 
          SuperscriptBox["a", "2"]}], ")"}], "2"], " ", "-", " ", 
       RowBox[{
        SuperscriptBox["a", "2"], "\[CapitalDelta]", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]}], " ", ",", " ", 
     "\[IndentingNewLine]", " ", 
     RowBox[{"\[CapitalDelta]", "==", "   ", 
      RowBox[{
       SuperscriptBox["r", "2"], "+", " ", 
       SuperscriptBox["a", "2"], "-", 
       RowBox[{"2", " ", "M", " ", "r"}]}]}]}], " ", "\[IndentingNewLine]", 
    "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq9pt33", " ", "//", " ", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.8559196265005093`*^9, 3.855919669926269*^9}, {
  3.855920195377442*^9, 3.855920195682721*^9}, {3.8839125670755177`*^9, 
  3.8839125939959383`*^9}, {3.8839969739466257`*^9, 3.883997027690549*^9}, {
  3.8839970901484623`*^9, 3.883997104212348*^9}},
 CellLabel->
  "In[745]:=",ExpressionUUID->"ca8087e0-6670-435c-9436-ba68f5e4ee3f"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"\[CapitalSigma]", "\[Equal]", 
       RowBox[{
        SuperscriptBox["r", "2"], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]}]},
     {
      RowBox[{"A", "\[Equal]", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           SuperscriptBox["r", "2"]}], ")"}], "2"], "-", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", "\[CapitalDelta]", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]}]},
     {
      RowBox[{"\[CapitalDelta]", "\[Equal]", 
       RowBox[{
        SuperscriptBox["a", "2"], "-", 
        RowBox[{"2", " ", "M", " ", "r"}], "+", 
        SuperscriptBox["r", "2"]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.855919670518941*^9, 3.855920216085907*^9, 3.855921019868086*^9, 
   3.8559597377555847`*^9, 3.8559972444551907`*^9, 3.865939598775593*^9, 
   3.877611430858059*^9, 3.877613030494409*^9, 3.883912595025716*^9, 
   3.8839970283954897`*^9, {3.883997096542395*^9, 3.8839971051005*^9}},
 CellLabel->
  "Out[747]//TableForm=",ExpressionUUID->"1a975e81-4c27-4ba1-aad8-\
7a1ca110cc1a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "sigmaDeltaAreplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigmaDeltaAreplace", " ", "=", "  ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"eq9pt33", "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"eq9pt33", "[", 
        RowBox[{"[", "2", "]"}], "]"}], " ", "/.", " ", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{"eq9pt33", "[", 
          RowBox[{"[", "3", "]"}], "]"}], " ", "/.", " ", 
         RowBox[{"Equal", "->", " ", "Rule"}]}], " ", ")"}]}], "  ", ")"}], 
     "  ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"eq9pt33", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"sigmaDeltaAreplace", "  ", "//", " ", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.8839971527056*^9, 3.8839971876684313`*^9}},
 CellLabel->
  "In[749]:=",ExpressionUUID->"b9775994-f100-4b67-af11-374d32c1d913"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"\[CapitalSigma]", "\[Equal]", 
       RowBox[{
        SuperscriptBox["r", "2"], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]}]},
     {
      RowBox[{"A", "\[Equal]", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           SuperscriptBox["r", "2"]}], ")"}], "2"], "-", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["a", "2"], "-", 
           RowBox[{"2", " ", "M", " ", "r"}], "+", 
           SuperscriptBox["r", "2"]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]}]},
     {
      RowBox[{"\[CapitalDelta]", "\[Equal]", 
       RowBox[{
        SuperscriptBox["a", "2"], "-", 
        RowBox[{"2", " ", "M", " ", "r"}], "+", 
        SuperscriptBox["r", "2"]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8839971879928637`*^9},
 CellLabel->
  "Out[751]//TableForm=",ExpressionUUID->"c54482de-ee82-4438-af10-\
a18606eaea28"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Fermi Frame:  9.141", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.822138177998547*^9, 3.82213819022183*^9}, {
  3.883904205786257*^9, 
  3.883904215922638*^9}},ExpressionUUID->"1379d40a-f23d-4166-8fa1-\
2560adeb820e"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq9pt141", "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq9pt141", " ", "=", "  ", 
  RowBox[{"{", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]0", " ", "\[Equal]"}], " ", ",", "\[IndentingNewLine]", 
    
    RowBox[{"\[Lambda]1", " ", "\[Equal]"}], " ", ",", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"\[Lambda]2", " ", "\[Equal]"}], " ", ",", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"\[Lambda]3", " ", "\[Equal]"}]}], " ", "\[IndentingNewLine]", 
   "}"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.822135668617506*^9, 3.822135678413576*^9}, {
   3.822135712885997*^9, 3.822135747861826*^9}, 3.8221381840214777`*^9},
 EmphasizeSyntaxErrors->True,
 CellLabel->
  "In[157]:=",ExpressionUUID->"4cc4bfe9-6ef8-4901-9cb0-a18c9d7e54d8"]
}, Closed]],

Cell[CellGroupData[{

Cell["Orthonormal Frame of Static Observer", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.822138208855687*^9, 3.8221382211498413`*^9}, {
  3.88390425436473*^9, 
  3.88390427598738*^9}},ExpressionUUID->"a4d05c9d-b887-4ba7-b6bf-\
6851a05abca6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq10pt84", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq10pt84", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"e0", " ", "\[Equal]", "  ", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", " ", 
           FractionBox[
            RowBox[{"2", " ", "M"}], "r"]}], ")"}], 
         FractionBox[
          RowBox[{"-", "1"}], "2"]], ",", "0", ",", "0", ",", "0"}], "}"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"er", " ", "\[Equal]", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        SqrtBox[
         RowBox[{"(", 
          RowBox[{"1", "-", " ", 
           FractionBox[
            RowBox[{"2", " ", "M"}], "r"]}], ")"}]], ",", "0", ",", "0"}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"e\[Theta]", " ", "\[Equal]", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        FractionBox["1", "r"], ",", "0"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"e\[Phi]", " ", "\[Equal]", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", 
        FractionBox["1", 
         RowBox[{"r", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]]}], "}"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq10pt84", " ", "//", " ", "MatrixForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.8221325065100183`*^9, 3.822132553293906*^9}, 
   3.8221382054264727`*^9},
 CellLabel->
  "In[158]:=",ExpressionUUID->"548ca5a9-22c5-4950-8185-d97b77061ad4"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"e0", "\[Equal]", 
        RowBox[{"{", 
         RowBox[{
          FractionBox["1", 
           SqrtBox[
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{"2", " ", "M"}], "r"]}]]], ",", "0", ",", "0", ",", 
          "0"}], "}"}]}]},
      {
       RowBox[{"er", "\[Equal]", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          SqrtBox[
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"2", " ", "M"}], "r"]}]], ",", "0", ",", "0"}], 
         "}"}]}]},
      {
       RowBox[{"e\[Theta]", "\[Equal]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          FractionBox["1", "r"], ",", "0"}], "}"}]}]},
      {
       RowBox[{"e\[Phi]", "\[Equal]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", 
          FractionBox[
           RowBox[{"Csc", "[", "\[Theta]", "]"}], "r"]}], "}"}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{3.822132555326254*^9, 3.822138205427355*^9, 
  3.848260575534163*^9, 3.848260903100954*^9, 3.883903456886801*^9, 
  3.8839069917882853`*^9},
 CellLabel->
  "Out[160]//MatrixForm=",ExpressionUUID->"f30115c6-7057-47d1-8bbc-\
be3c3b321235"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq10pt85", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq10pt85", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Omega]0", " ", "\[Equal]", " ", 
      RowBox[{"{", 
       RowBox[{
        SqrtBox[
         RowBox[{"(", 
          RowBox[{"1", "-", " ", 
           FractionBox[
            RowBox[{"2", " ", "M"}], "r"]}], ")"}]], ",", "0", ",", "0", ",", 
        "0"}], "}"}]}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"\[Omega]r", " ", "\[Equal]", " ", 
      RowBox[{"{", " ", 
       RowBox[{"0", ",", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", " ", 
           FractionBox[
            RowBox[{"2", " ", "M"}], "r"]}], ")"}], 
         FractionBox[
          RowBox[{"-", "1"}], "2"]], ",", "0", ",", "0"}], "}"}]}], " ", ",", 
     " ", "\[IndentingNewLine]", 
     RowBox[{"\[Omega]\[Theta]", " ", "\[Equal]", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "r", ",", "0"}], "}"}]}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Omega]\[Phi]", " ", "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", " ", 
        RowBox[{"r", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq10pt85", "  ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.8221325922949343`*^9, 3.8221326073900642`*^9}, 
   3.822138205427799*^9},
 CellLabel->
  "In[161]:=",ExpressionUUID->"bb6e99b2-ef6d-458c-b5fe-5e2fa876c342"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"\[Omega]0", "\[Equal]", 
       RowBox[{"{", 
        RowBox[{
         SqrtBox[
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"2", " ", "M"}], "r"]}]], ",", "0", ",", "0", ",", "0"}], 
        "}"}]}]},
     {
      RowBox[{"\[Omega]r", "\[Equal]", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         FractionBox["1", 
          SqrtBox[
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"2", " ", "M"}], "r"]}]]], ",", "0", ",", "0"}], "}"}]}]},
     {
      RowBox[{"\[Omega]\[Theta]", "\[Equal]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "r", ",", "0"}], "}"}]}]},
     {
      RowBox[{"\[Omega]\[Phi]", "\[Equal]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", 
         RowBox[{"r", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{3.822132609502611*^9, 3.822138205428926*^9, 
  3.848260575566408*^9, 3.848260903126219*^9, 3.8839034569022017`*^9, 
  3.883906991810495*^9},
 CellLabel->
  "Out[163]//TableForm=",ExpressionUUID->"b66b0d43-0aef-4fd1-a628-\
5513d3dff556"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Appendix 38:  Isotropic Form of Schwarzschild Metric ", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.822137755350791*^9, 3.822137766108973*^9}, {
  3.883904343207979*^9, 
  3.8839043527582207`*^9}},ExpressionUUID->"6d2e70c0-e860-4c60-a401-\
002a164f1c6d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"we", " ", 
    RowBox[{"use", " ", "[", "esc", "]"}], 
    RowBox[{"scr", "[", "esc", "]"}], " ", "for", " ", "\[ScriptR]", "  ", 
    "instead", " ", "of", " ", 
    OverscriptBox["r", "bar"]}], "*)"}], " ", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "appendixEq38", "]"}], " ", "\[IndentingNewLine]", 
   RowBox[{"appendixEq38", " ", "=", " ", "\[IndentingNewLine]", 
    RowBox[{"r", " ", "\[Equal]", " ", 
     RowBox[{"\[ScriptR]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", " ", "+", " ", 
         FractionBox["M", 
          RowBox[{"2", " ", "\[ScriptR]", " "}]]}], ")"}], 
       "2"]}]}]}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8221359567182217`*^9, 3.82213603741393*^9}, 
   3.822137752321291*^9, {3.883904286530455*^9, 3.883904291086069*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"8642c990-8d4f-4b9c-94aa-25147526d6a8"],

Cell[BoxData[
 RowBox[{"r", "\[Equal]", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      FractionBox["M", 
       RowBox[{"2", " ", "\[ScriptR]"}]]}], ")"}], "2"], " ", 
   "\[ScriptR]"}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.822136003122142*^9, 3.822137752322454*^9, 
  3.848260575580497*^9, 3.8482609031403913`*^9, 3.883903456927473*^9, 
  3.8839069918239613`*^9},
 CellLabel->
  "Out[165]=",ExpressionUUID->"5ee2a20c-933b-42aa-bf22-007fe1901fce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(", 
  RowBox[{"appendixEq38", "  ", "/.", " ", 
   RowBox[{"Equal", " ", "\[Rule]", " ", "Rule"}]}], " ", ")"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8221362391504087`*^9, 3.822136247990447*^9}, 
   3.822137752322825*^9},
 CellLabel->
  "In[166]:=",ExpressionUUID->"a9568c24-9e2d-4e39-85eb-d8c68b5e8cfa"],

Cell[BoxData[
 RowBox[{"r", "\[Rule]", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      FractionBox["M", 
       RowBox[{"2", " ", "\[ScriptR]"}]]}], ")"}], "2"], " ", 
   "\[ScriptR]"}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.822136243719181*^9, 3.822136248341222*^9}, 
   3.822137752323436*^9, 3.848260575611557*^9, 3.848260903163756*^9, 
   3.883903456940979*^9, 3.8839069918441687`*^9},
 CellLabel->
  "Out[166]=",ExpressionUUID->"4f8d797d-a6aa-44a5-93f3-0a7aaf1a573c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Dt", "[", " ", "appendixEq38", "  ", "]"}], " ", "/.", " ", 
       "dtReplace"}], "  ", "/.", " ", 
      RowBox[{"Equal", "\[Rule]", " ", "Rule"}]}], ")"}], "  ", "//", " ", 
    "Simplify"}], "  ", ",", " ", "d\[ScriptR]"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8221360441753263`*^9, 3.822136057877429*^9}, {
   3.822136128350552*^9, 3.822136132749941*^9}, {3.822136251615409*^9, 
   3.822136253878654*^9}, {3.822136612630391*^9, 3.822136641326599*^9}, 
   3.82213775232371*^9},
 CellLabel->
  "In[167]:=",ExpressionUUID->"81fca5ad-6cc2-4542-ad93-94e55de7fd9a"],

Cell[BoxData[
 RowBox[{"dr", "\[Rule]", 
  RowBox[{"d\[ScriptR]", " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     FractionBox[
      SuperscriptBox["M", "2"], 
      RowBox[{"4", " ", 
       SuperscriptBox["\[ScriptR]", "2"]}]]}], ")"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8221360530766*^9, 3.8221360581564827`*^9}, {
   3.822136121759737*^9, 3.822136132959544*^9}, 3.822136254277322*^9, {
   3.822136615287695*^9, 3.822136641603607*^9}, 3.822137752324197*^9, 
   3.8482605756447906`*^9, 3.848260903189554*^9, 3.883903456964999*^9, 
   3.883906991867628*^9},
 CellLabel->
  "Out[167]=",ExpressionUUID->"d06eca0f-2f5d-49cc-a5f6-f3d7091b1c1f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "rAnddrReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rAnddrReplace", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"appendixEq38", "  ", "/.", " ", 
       RowBox[{"Equal", " ", "\[Rule]", " ", "Rule"}]}], " ", ")"}], " ", ",",
      " ", "\[IndentingNewLine]", 
     RowBox[{"Collect", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Dt", "[", " ", "appendixEq38", "  ", "]"}], " ", "/.", 
           " ", "dtReplace"}], "  ", "/.", " ", 
          RowBox[{"Equal", "\[Rule]", " ", "Rule"}]}], ")"}], "  ", "//", " ",
         "Simplify"}], "  ", ",", " ", "d\[ScriptR]"}], "]"}]}], 
    "\[IndentingNewLine]", "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"rAnddrReplace", "  ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.822136673640099*^9, 3.822136712165895*^9}, 
   3.822137752324395*^9},
 CellLabel->
  "In[168]:=",ExpressionUUID->"07d2d053-6873-401a-9f7c-4fe3e13efc7b"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"r", "\[Rule]", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox["M", 
            RowBox[{"2", " ", "\[ScriptR]"}]]}], ")"}], "2"], " ", 
        "\[ScriptR]"}]}]},
     {
      RowBox[{"dr", "\[Rule]", 
       RowBox[{"d\[ScriptR]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           SuperscriptBox["M", "2"], 
           RowBox[{"4", " ", 
            SuperscriptBox["\[ScriptR]", "2"]}]]}], ")"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.82213671244967*^9, 3.82213775232481*^9, 
  3.848260575656042*^9, 3.848260903203971*^9, 3.883903456978722*^9, 
  3.883906991881465*^9},
 CellLabel->
  "Out[170]//TableForm=",ExpressionUUID->"6bb45359-218a-494f-86b6-\
aa29de420472"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"eq2pt135", " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "intermediateEq38", "]"}], "\[IndentingNewLine]", 
 RowBox[{"intermediateEq38", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"eq2pt135", "  ", "/.", " ", "rAnddrReplace", "  "}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.822136754663732*^9, 3.822136763053103*^9}, {
   3.822136802759207*^9, 3.822136818942066*^9}, 3.8221377523249617`*^9},
 CellLabel->
  "In[171]:=",ExpressionUUID->"d181572e-f360-466b-8a31-72af39dd0bc2"],

Cell[BoxData["eq2pt135"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.822136750461687*^9, 3.822136763373373*^9}, 
   3.822136819495008*^9, 3.822137752325074*^9, 3.848260575688889*^9, 
   3.8482609032285*^9, 3.84826170702941*^9, 3.883903457001315*^9, 
   3.883906991901476*^9},
 CellLabel->
  "Out[171]=",ExpressionUUID->"edab7c3d-2f03-4785-b320-c61eae807adc"],

Cell[BoxData["eq2pt135"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.822136750461687*^9, 3.822136763373373*^9}, 
   3.822136819495008*^9, 3.822137752325074*^9, 3.848260575688889*^9, 
   3.8482609032285*^9, 3.84826170702941*^9, 3.883903457001315*^9, 
   3.88390699190421*^9},
 CellLabel->
  "Out[173]=",ExpressionUUID->"0cd156d6-027c-4253-84f1-4e6bca29fa88"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "algebra", " ", "by", " ", "hand", " ", "will", " ", "convert", " ", "the",
     " ", "second", " ", "term", " ", "so", " ", "it", " ", "can", " ", "be", 
    " ", "lumped", " ", "in", " ", "with", " ", "third"}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"Expand", "[", 
     RowBox[{"intermediateEq38", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "+", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Expand", "[", 
     RowBox[{"intermediateEq38", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], " ", "+", 
   RowBox[{"intermediateEq38", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.822136837014065*^9, 3.8221368736719522`*^9}, {
   3.822136985599545*^9, 3.8221370056635303`*^9}, {3.822137060616048*^9, 
   3.822137155253889*^9}, 3.8221377523259487`*^9},
 CellLabel->
  "In[174]:=",ExpressionUUID->"73dfffe5-7e30-4d14-ba54-1deb6262fc06"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"eq2pt135\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 174, 2, 23903636698069640272, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.848260575704051*^9, 3.84826090324885*^9, 
  3.8839034570923223`*^9, 3.883906991988763*^9},
 CellLabel->
  "During evaluation of \
In[174]:=",ExpressionUUID->"9d63b393-5f83-4269-bc18-15712b72551a"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"eq2pt135\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 174, 3, 23903636698069640272, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.848260575704051*^9, 3.84826090324885*^9, 
  3.8839034570923223`*^9, 3.88390699199018*^9},
 CellLabel->
  "During evaluation of \
In[174]:=",ExpressionUUID->"3eb18845-578d-4589-ba38-d2c60098f370"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"eq2pt135\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"3\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 174, 4, 23903636698069640272, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.848260575704051*^9, 3.84826090324885*^9, 
  3.8839034570923223`*^9, 3.883906992021669*^9},
 CellLabel->
  "During evaluation of \
In[174]:=",ExpressionUUID->"702e3ef5-c91a-4543-b721-08f46d875b7d"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partd\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 174, 5, 23903636698069640272, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.848260575704051*^9, 3.84826090324885*^9, 
  3.8839034570923223`*^9, 3.8839069920337753`*^9},
 CellLabel->
  "During evaluation of \
In[174]:=",ExpressionUUID->"8c92429a-bb38-415c-b82f-616c9ec33007"],

Cell[BoxData[
 RowBox[{
  RowBox[{"eq2pt135", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
  "+", 
  RowBox[{"eq2pt135", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
  "+", 
  RowBox[{
  "eq2pt135", "\[LeftDoubleBracket]", "3", 
   "\[RightDoubleBracket]"}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.822136837742732*^9, 3.822136873945031*^9}, {
   3.822136990581159*^9, 3.822136994103999*^9}, 3.822137024212461*^9, {
   3.82213706202675*^9, 3.8221371561932364`*^9}, 3.822137752326433*^9, 
   3.848260575737526*^9, 3.848260903286655*^9, 3.883903457151394*^9, 
   3.8839069920456133`*^9},
 CellLabel->
  "Out[174]=",ExpressionUUID->"6dc2469d-ba5f-4db3-a252-f2b39b297ca3"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Appendix 46:  FRLW", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.822137718558958*^9, 3.8221377350449867`*^9}, {
  3.883904396217688*^9, 
  3.883904400796509*^9}},ExpressionUUID->"39f98918-9ee4-4948-8349-\
8d841d0b7670"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "appendixEq46", "]"}], "\[IndentingNewLine]", 
 RowBox[{"appendixEq46", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["dt", "2"]}], "+", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"R", "[", "t", "]"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["d\[Theta]", "2"], " ", 
       SuperscriptBox["r", "2"]}], "+", 
      FractionBox[
       SuperscriptBox["dr", "2"], 
       RowBox[{"1", "-", 
        RowBox[{"\[Kappa]", " ", 
         SuperscriptBox["r", "2"]}]}]], "+", " ", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
       SuperscriptBox["d\[Phi]", "2"]}]}], ")"}]}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.8221372649577713`*^9, 3.8221373016060266`*^9}, 
   3.822137715751837*^9},
 CellLabel->
  "In[175]:=",ExpressionUUID->"7b324177-2d16-4222-b76d-5399294e258c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["dt", "2"]}], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"R", "[", "t", "]"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["d\[Theta]", "2"], " ", 
      SuperscriptBox["r", "2"]}], "+", 
     FractionBox[
      SuperscriptBox["dr", "2"], 
      RowBox[{"1", "-", 
       RowBox[{
        SuperscriptBox["r", "2"], " ", "\[Kappa]"}]}]], "+", 
     RowBox[{
      SuperscriptBox["d\[Phi]", "2"], " ", 
      SuperscriptBox["r", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.822137304968643*^9, 3.8221377157525253`*^9, 
  3.848260575772258*^9, 3.8482609033109703`*^9, 3.883903457163765*^9, 
  3.883906992059244*^9},
 CellLabel->
  "Out[176]=",ExpressionUUID->"68aca1a1-fde6-47bf-8b66-f4164c399940"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "appendixEq46Metric", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"appendixEq46Metric", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"lineToMetric", "[", " ", 
    RowBox[{"appendixEq46", " ", ",", " ", 
     RowBox[{"{", 
      RowBox[{"dt", ",", "dr", ",", "d\[Theta]", ",", "d\[Phi]"}], "}"}]}], 
    "]"}]}], "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"appendixEq46Metric", " ", "//", " ", "MatrixForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.8221373074557667`*^9, 3.822137351406726*^9}, {
   3.8221374022225447`*^9, 3.8221374218058558`*^9}, 3.8221377157528267`*^9},
 CellLabel->
  "In[177]:=",ExpressionUUID->"a47d3d77-f2c4-4944-80b4-d9c0862ea340"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], "0", "0", "0"},
     {"0", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"R", "[", "t", "]"}], "2"], 
       RowBox[{"1", "-", 
        RowBox[{
         SuperscriptBox["r", "2"], " ", "\[Kappa]"}]}]], "0", "0"},
     {"0", "0", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox[
        RowBox[{"R", "[", "t", "]"}], "2"]}], "0"},
     {"0", "0", "0", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox[
        RowBox[{"R", "[", "t", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.822137322072444*^9, 3.822137326286376*^9}, 
   3.8221374248755417`*^9, 3.822137715753229*^9, 3.848260575784924*^9, 
   3.8482609033240433`*^9, 3.883903457187326*^9, 3.8839069920806026`*^9},
 CellLabel->
  "Out[179]//MatrixForm=",ExpressionUUID->"e70696d2-eef2-468f-8987-\
5f24d0595b8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"frlw", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"ToMetric", "[", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
     "\"\<frlw\>\"", ",", " ", 
      "\"\<\!\(\*SuperscriptBox[\(g\), \(frlw\)]\)\>\""}], " ", "}"}], " ", 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], ",", " ",
     "appendixEq46Metric", ",", "\"\<Greek\>\""}], "]"}], " "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.822137359383662*^9, 3.8221373879102488`*^9}, {
   3.822137429430667*^9, 3.822137430862802*^9}, 3.822137715753393*^9},
 CellLabel->
  "In[180]:=",ExpressionUUID->"d0ea40d2-8131-4791-9ff0-1493c60d4e33"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox[
   SuperscriptBox["g", "frlw"], "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.822137431667695*^9, 3.822137715753697*^9, 
  3.848260575817172*^9, 3.8482609033475227`*^9, 3.883903457202965*^9, 
  3.883906992093186*^9},
 CellLabel->
  "Out[180]=",ExpressionUUID->"854f0c4a-c283-4247-876e-0894f80a0d80"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"frlwRiemann", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"RiemannTensor", "[", " ", 
   RowBox[{"frlw", " ", ",", " ", 
    RowBox[{"ActWithNested", "\[Rule]", " ", "Simplify"}]}], " ", 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.8221374651584663`*^9, 3.822137483048561*^9}, 
   3.82213771575382*^9},
 CellLabel->
  "In[181]:=",ExpressionUUID->"f4cb34e7-21ff-411e-b377-6625fc160ba7"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["R", "\[Alpha]\[Beta]\[Gamma]\[Delta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.822137483462833*^9, 3.822137715754199*^9, 
  3.848260575884543*^9, 3.848260903415666*^9, 3.883903457271802*^9, 
  3.8839069921607*^9},
 CellLabel->
  "Out[181]=",ExpressionUUID->"16fca207-5111-42cf-b6e1-63ba19d9532a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"frlwRiemann", " ", "[", 
  RowBox[{"r", ",", 
   RowBox[{"-", "t"}], ",", 
   RowBox[{"-", "r"}], ",", 
   RowBox[{"-", "t"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.822137496990307*^9, 3.8221375102700987`*^9}, 
   3.822137715754344*^9},
 CellLabel->
  "In[182]:=",ExpressionUUID->"c8677661-bb52-4421-9325-6101106f00dc"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{
      SuperscriptBox["r", "2"], " ", "\[Kappa]"}]}], ")"}], " ", 
   RowBox[{
    SuperscriptBox["R", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{
      SuperscriptBox["r", "2"], " ", "\[Kappa]"}]}], ")"}], " ", 
   RowBox[{"R", "[", "t", "]"}]}]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.8221375106578207`*^9, 3.822137715754657*^9, 
  3.8482605759165173`*^9, 3.848260903439727*^9, 3.88390345730133*^9, 
  3.88390699218447*^9},
 CellLabel->
  "Out[182]=",ExpressionUUID->"a62c26ae-a476-4ede-b9b3-7a09b1c2b109"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Appendix 62:  Fermi Walker Transport Minkowski", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.822137803528096*^9, 3.822137815213538*^9}, {
  3.883904405251648*^9, 
  3.883904444211401*^9}},ExpressionUUID->"4c66a183-e59c-4a87-a303-\
fa6f6cf4ee8a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"FW", " ", "Transport", " ", "page", " ", "21"}], " ", "-", " ", 
    RowBox[{
    "See", " ", "also", " ", "GRT", " ", "documentation", " ", "about", " ", 
     "differentiation", " ", "along", " ", "a", " ", "curve"}]}], " ", "*)"}],
   " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "appendixEq62", "]"}], "\[IndentingNewLine]", 
   RowBox[{"appendixEq62", " ", "=", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"-", " ", 
      SuperscriptBox["dt", "2"]}], "+", " ", 
     SuperscriptBox["dx", "2"], "+", 
     SuperscriptBox["dy", "2"], "+", " ", 
     SuperscriptBox["dz", "2"]}]}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.822132656391674*^9, 3.822132680341599*^9}, {
   3.822132945661847*^9, 3.822132980790452*^9}, {3.8221334108225517`*^9, 
   3.8221334333981047`*^9}, {3.822133525678872*^9, 3.822133537934013*^9}, 
   3.822137800226776*^9, 3.883904407412833*^9},
 CellLabel->
  "In[183]:=",ExpressionUUID->"721c01a8-6282-4f57-a092-2cbe9307ee77"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["dt", "2"]}], "+", 
  SuperscriptBox["dx", "2"], "+", 
  SuperscriptBox["dy", "2"], "+", 
  SuperscriptBox["dz", "2"]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.82213298190173*^9, 3.822133220678549*^9, 
  3.822137800227468*^9, 3.822139583057362*^9, 3.8482605759304037`*^9, 
  3.8482609034537287`*^9, 3.88390345731408*^9, 3.883906992197542*^9},
 CellLabel->
  "Out[184]=",ExpressionUUID->"092d1611-4167-43ec-9efe-fb94b042f9b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"appendixEq62a", ",", "t", ",", "x", ",", "y", ",", "z"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"appendixEq62a", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"t", " ", "\[Equal]", " ", 
      RowBox[{
       RowBox[{"(", 
        FractionBox["1", "A"], ")"}], " ", 
       RowBox[{"Sinh", "[", 
        RowBox[{"A", " ", "\[Tau]"}], "]"}]}]}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"x", " ", "\[Equal]", " ", "0"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"y", " ", "\[Equal]", " ", "0"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"z", " ", "\[Equal]", "  ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         FractionBox["1", "A"], ")"}]}], " ", 
       RowBox[{"Cosh", "[", 
        RowBox[{"A", " ", "\[Tau]"}], "]"}]}]}]}], "\[IndentingNewLine]", 
    "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq62a", " ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.822132993990044*^9, 3.822133049365834*^9}, {
   3.8221331663271523`*^9, 3.822133171006419*^9}, {3.822133540735941*^9, 
   3.822133548982624*^9}, 3.822137800227737*^9},
 CellLabel->
  "In[185]:=",ExpressionUUID->"7be028df-18fb-4faa-aefa-9bc5c614f5a5"],

Cell[BoxData[
 TagBox["eq62a",
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.82213304963792*^9, 3.822133171573697*^9, 
  3.8221332231102877`*^9, 3.822137800228155*^9, 3.848260575962925*^9, 
  3.848260903476923*^9, 3.883903457338379*^9, 3.88390699221984*^9},
 CellLabel->
  "Out[187]//TableForm=",ExpressionUUID->"99ae54b7-c2d4-4021-bbe6-\
30662295ad47"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Dt", "[", " ", "appendixEq62a", " ", "]"}], "  ", "/.", " ", 
   "dtReplace"}], "   ", "//", " ", "TableForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.822133051601697*^9, 3.822133061469768*^9}, {
   3.822133238288188*^9, 3.822133243558167*^9}, {3.822133553231153*^9, 
   3.822133555830064*^9}, 3.8221378002284107`*^9},
 CellLabel->
  "In[188]:=",ExpressionUUID->"f5b008ef-c96e-44d3-b468-4d9c4ecbb2c3"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"dt", "\[Equal]", 
       RowBox[{"d\[Tau]", " ", 
        RowBox[{"Cosh", "[", 
         RowBox[{"A", " ", "\[Tau]"}], "]"}]}]}]},
     {
      RowBox[{"dx", "\[Equal]", "0"}]},
     {
      RowBox[{"dy", "\[Equal]", "0"}]},
     {
      RowBox[{"dz", "\[Equal]", 
       RowBox[{
        RowBox[{"-", "d\[Tau]"}], " ", 
        RowBox[{"Sinh", "[", 
         RowBox[{"A", " ", "\[Tau]"}], "]"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.822133055370986*^9, 3.822133061716217*^9}, 
   3.822133127303975*^9, {3.822133225009673*^9, 3.822133243804668*^9}, 
   3.822137800229116*^9, 3.848260575974028*^9, 3.848260903489259*^9, 
   3.8839034573532057`*^9, 3.88390699223468*^9},
 CellLabel->
  "Out[188]//TableForm=",ExpressionUUID->"783c5c1a-6c97-450a-af6f-\
f73d812360b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Dt", "[", " ", "appendixEq62a", " ", "]"}], "  ", "/.", " ", 
     "dtReplace"}], "   ", "/.", " ", 
    RowBox[{"Equal", "\[Rule]", " ", "Rule"}]}], " ", ")"}], " ", "//", " ", 
  "TableForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8221332523826942`*^9, 3.8221332714377947`*^9}, {
   3.82213355808788*^9, 3.8221335613492823`*^9}, 3.822137800229335*^9},
 CellLabel->
  "In[189]:=",ExpressionUUID->"489eee96-8a21-4c30-93cd-a1ff8ed1ef5c"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"dt", "\[Rule]", 
       RowBox[{"d\[Tau]", " ", 
        RowBox[{"Cosh", "[", 
         RowBox[{"A", " ", "\[Tau]"}], "]"}]}]}]},
     {
      RowBox[{"dx", "\[Rule]", "0"}]},
     {
      RowBox[{"dy", "\[Rule]", "0"}]},
     {
      RowBox[{"dz", "\[Rule]", 
       RowBox[{
        RowBox[{"-", "d\[Tau]"}], " ", 
        RowBox[{"Sinh", "[", 
         RowBox[{"A", " ", "\[Tau]"}], "]"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.822133261276795*^9, 3.822133271710635*^9}, 
   3.82213780023004*^9, 3.848260576010365*^9, 3.8482609035128183`*^9, 
   3.883903457376173*^9, 3.883906992255404*^9},
 CellLabel->
  "Out[189]//TableForm=",ExpressionUUID->"0c38ae7b-0d04-46a3-94b5-\
0c8d1a64dcec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eq62", "  ", "/.", " ", 
   RowBox[{"(", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Dt", "[", " ", "appendixEq62a", " ", "]"}], "  ", "/.", " ", 
      "dtReplace"}], "   ", "/.", " ", 
     RowBox[{"Equal", "\[Rule]", " ", "Rule"}]}], " ", ")"}]}], "  ", "//", 
  " ", "Simplify", " "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.822133279421706*^9, 3.822133293053463*^9}, {
   3.822133565287677*^9, 3.822133567469627*^9}, 3.822137800230365*^9},
 CellLabel->
  "In[190]:=",ExpressionUUID->"486f9861-22ec-457c-a32c-734ab6cff801"],

Cell[BoxData["eq62"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.822133287028974*^9, 3.822133293309901*^9}, 
   3.822137800231009*^9, 3.848260576021387*^9, 3.848260903527453*^9, 
   3.883903457390937*^9, 3.883906992268332*^9},
 CellLabel->
  "Out[190]=",ExpressionUUID->"ad226aed-c216-406d-8415-63603a1a0e33"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "appendixEq62b", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"appendixEq62b", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"t", " ", "\[Equal]", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "A"], "-", "Z"}], ")"}], " ", 
       RowBox[{"Sinh", "[", 
        RowBox[{"A", " ", "T"}], "]"}]}]}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"x", " ", "\[Equal]", " ", "X"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"y", " ", "\[Equal]", " ", "Y"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"z", " ", "\[Equal]", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "A"], "-", "Z"}], ")"}]}], " ", 
       RowBox[{"Cosh", "[", 
        RowBox[{"A", " ", "T"}], "]"}]}]}]}], "\[IndentingNewLine]", "}"}]}], 
  " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"appendixEq62b", " ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.8221395894308147`*^9, {3.82213975187035*^9, 3.822139834734044*^9}, 
   3.822140036164268*^9},
 CellLabel->
  "In[191]:=",ExpressionUUID->"9a03ac33-b861-4bc3-8ed7-d3583b0aac1d"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"t", "\[Equal]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "A"], "-", "Z"}], ")"}], " ", 
        RowBox[{"Sinh", "[", 
         RowBox[{"A", " ", "T"}], "]"}]}]}]},
     {
      RowBox[{"x", "\[Equal]", "X"}]},
     {
      RowBox[{"y", "\[Equal]", "Y"}]},
     {
      RowBox[{"z", "\[Equal]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "A"]}], "+", "Z"}], ")"}], " ", 
        RowBox[{"Cosh", "[", 
         RowBox[{"A", " ", "T"}], "]"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.822139835041065*^9, 3.8221399289253902`*^9, 
  3.8221400361649723`*^9, 3.8482605760543613`*^9, 3.8482609035525723`*^9, 
  3.88390345741503*^9, 3.883906992291113*^9},
 CellLabel->
  "Out[193]//TableForm=",ExpressionUUID->"dbd0aeff-171c-4496-ad31-\
1d86313c7d65"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Dt", "[", " ", "appendixEq62b", "  ", "]"}], " ", "/.", " ", 
    "dtReplace"}], "   ", "/.", " ", 
   RowBox[{"Equal", "\[Rule]", " ", "Rule"}]}], "  ", "//", " ", 
  "TableForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8221398380180397`*^9, 3.822139851694131*^9}, {
   3.822139960912119*^9, 3.8221399727498293`*^9}, 3.82214003616523*^9},
 CellLabel->
  "In[194]:=",ExpressionUUID->"190f967f-0d2a-4537-aeb4-a8d72e0fad79"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"dt", "\[Rule]", 
       RowBox[{
        RowBox[{"A", " ", "dT", " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "A"], "-", "Z"}], ")"}], " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"A", " ", "T"}], "]"}]}], "-", 
        RowBox[{"dZ", " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"A", " ", "T"}], "]"}]}]}]}]},
     {
      RowBox[{"dx", "\[Rule]", "dX"}]},
     {
      RowBox[{"dy", "\[Rule]", "dY"}]},
     {
      RowBox[{"dz", "\[Rule]", 
       RowBox[{
        RowBox[{"dZ", " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"A", " ", "T"}], "]"}]}], "+", 
        RowBox[{"A", " ", "dT", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "A"]}], "+", "Z"}], ")"}], " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"A", " ", "T"}], "]"}]}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.822139847380931*^9, 3.822139851998884*^9}, 
   3.82213993095511*^9, {3.822139968639167*^9, 3.822139973198251*^9}, 
   3.8221400361655893`*^9, 3.8482605761126738`*^9, 3.8482609035666227`*^9, 
   3.883903457429389*^9, 3.883906992304763*^9},
 CellLabel->
  "Out[194]//TableForm=",ExpressionUUID->"568b3093-46e0-4dd9-ac61-\
c72903cb45b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"appendixEq62", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"appendixEq62", " ", "/.", " ", 
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Dt", "[", " ", "appendixEq62b", "  ", "]"}], " ", "/.", " ", 
       "dtReplace"}], "   ", "/.", " ", 
      RowBox[{"Equal", "\[Rule]", " ", "Rule"}]}], "  ", ")"}]}], "  ", "//", 
   " ", "Expand"}], " ", "//", " ", "Simplify"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8221399802952337`*^9, 3.822140001265223*^9}, 
   3.822140036165751*^9},
 CellLabel->
  "In[195]:=",ExpressionUUID->"d66306da-8ea2-41d5-8bd4-09cb63669ce0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["dt", "2"]}], "+", 
  SuperscriptBox["dx", "2"], "+", 
  SuperscriptBox["dy", "2"], "+", 
  SuperscriptBox["dz", "2"]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.822139976579821*^9, 3.822140001641286*^9}, 
   3.822140036165928*^9, 3.8482605761239033`*^9, 3.8482609035896177`*^9, 
   3.883903457454338*^9, 3.8839069923266478`*^9},
 CellLabel->
  "Out[195]=",ExpressionUUID->"40a177c5-49b5-454e-a710-af5b8f8cc10f"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["dX", "2"], "+", 
  SuperscriptBox["dY", "2"], "+", 
  SuperscriptBox["dZ", "2"], "-", 
  RowBox[{
   SuperscriptBox["dT", "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"A", " ", "Z"}]}], ")"}], "2"]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.822139976579821*^9, 3.822140001641286*^9}, 
   3.822140036165928*^9, 3.8482605761239033`*^9, 3.8482609035896177`*^9, 
   3.883903457454338*^9, 3.8839069923293667`*^9},
 CellLabel->
  "Out[196]=",ExpressionUUID->"a3eb2ae8-4b41-4eb1-a8a8-2cd47abf41ee"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Appendix 63:  Kasner Metric (ELECTRIC AND MAGNETIC PARTS HERE - FINISH THIS)\
\>", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822137841062859*^9, 3.822137853933679*^9}, {
  3.8839044775120897`*^9, 
  3.8839044922836647`*^9}},ExpressionUUID->"2cb2b52d-f1ab-4ab2-ab1f-\
00da7bdba663"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "appendixEq63", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"appendixEq63", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["dt", "2"]}], "+", " ", 
      RowBox[{
       SuperscriptBox["t", 
        RowBox[{"2", " ", "p1"}]], 
       SuperscriptBox["dx", "2"]}], "+", " ", 
      RowBox[{
       SuperscriptBox["t", 
        RowBox[{"2", " ", "p2"}]], " ", 
       SuperscriptBox["dy", "2"]}], "+", " ", 
      RowBox[{
       SuperscriptBox["t", 
        RowBox[{"2", " ", "p3"}]], 
       SuperscriptBox["dz", "2"]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"p1", "+", "p2", "+", "p3"}], "\[Equal]", "1"}], " ", ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["p1", "2"], "+", 
       SuperscriptBox["p2", "2"], "+", 
       SuperscriptBox["p3", "2"]}], "\[Equal]", "1"}]}], " ", 
    "\[IndentingNewLine]", "}"}]}], " ", 
  ";"}], "\[IndentingNewLine]", "appendixEq63"}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822133570221774*^9, 3.8221335864855833`*^9}, {
   3.822133778958529*^9, 3.82213381224373*^9}, 3.822137836308009*^9},
 CellLabel->
  "In[197]:=",ExpressionUUID->"aef02228-e897-4858-a167-00b1ebc424d3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["dt", "2"]}], "+", 
    RowBox[{
     SuperscriptBox["dx", "2"], " ", 
     SuperscriptBox["t", 
      RowBox[{"2", " ", "p1"}]]}], "+", 
    RowBox[{
     SuperscriptBox["dy", "2"], " ", 
     SuperscriptBox["t", 
      RowBox[{"2", " ", "p2"}]]}], "+", 
    RowBox[{
     SuperscriptBox["dz", "2"], " ", 
     SuperscriptBox["t", 
      RowBox[{"2", " ", "p3"}]]}]}], ",", 
   RowBox[{
    RowBox[{"p1", "+", "p2", "+", "p3"}], "\[Equal]", "1"}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["p1", "2"], "+", 
     SuperscriptBox["p2", "2"], "+", 
     SuperscriptBox["p3", "2"]}], "\[Equal]", "1"}]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.822133814336541*^9, 3.8221378363085127`*^9, 
  3.8482605761718407`*^9, 3.8482609036075163`*^9, 3.88390345752957*^9, 
  3.883906992346354*^9},
 CellLabel->
  "Out[199]=",ExpressionUUID->"c0bb33dc-170c-4069-b093-305978414600"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SubtractSides", "[", 
   RowBox[{
    RowBox[{"appendixEq63", "[", 
     RowBox[{"[", "2", "]"}], "]"}], " ", ",", "1"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SubtractSides", "[", 
   RowBox[{
    RowBox[{"appendixEq63", "[", 
     RowBox[{"[", "3", "]"}], "]"}], " ", ",", "1"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822133969575634*^9, 3.8221339977970543`*^9}, 
   3.8221378363088627`*^9},
 CellLabel->
  "In[200]:=",ExpressionUUID->"c1154549-4eb3-4851-9c1a-eaa127016af4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", "p1", "+", "p2", "+", "p3"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822133966247405*^9, 3.822133998375766*^9}, 
   3.822137836309074*^9, 3.848260576204871*^9, 3.848260903631015*^9, 
   3.883903457543641*^9, 3.883906992366962*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"a79736ee-74cb-4632-b200-202da74d6e34"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", 
  SuperscriptBox["p1", "2"], "+", 
  SuperscriptBox["p2", "2"], "+", 
  SuperscriptBox["p3", "2"]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822133966247405*^9, 3.822133998375766*^9}, 
   3.822137836309074*^9, 3.848260576204871*^9, 3.848260903631015*^9, 
   3.883903457543641*^9, 3.8839069923695602`*^9},
 CellLabel->
  "Out[201]=",ExpressionUUID->"9e9f81c3-8c59-4d3d-a710-50e9161f730b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Code For Visualization of Intersection of Two Surfaces \>\"", ",", 
   "\[IndentingNewLine]", 
   "\"\<https://community.wolfram.com/groups/-/m/t/177994\>\""}], 
  "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.821551395436048*^9, 3.821551415296648*^9}, {
   3.8215514578936787`*^9, 3.821551472632844*^9}, 3.821567335669029*^9, 
   3.821567378509461*^9, 3.8221378363097477`*^9},
 CellLabel->
  "In[202]:=",ExpressionUUID->"108ab7e0-fa47-4c1c-bb99-bfc3a2dea243"],

Cell[BoxData[
 TemplateBox[{
  "\"Code For Visualization of Intersection of Two Surfaces \"", 
   "https://community.wolfram.com/groups/-/m/t/177994"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.821551415625939*^9, 3.821551474635777*^9, 
  3.821552077264781*^9, 3.8215560951377068`*^9, 3.821567335669157*^9, 
  3.821567378509544*^9, 3.821567749451149*^9, 3.821572048945416*^9, 
  3.8215739150756207`*^9, 3.821629764270837*^9, 3.821634784064427*^9, 
  3.821697232543806*^9, 3.821717476842464*^9, 3.822137836309854*^9, 
  3.848260576220728*^9, 3.848260903674123*^9, 3.883903457572781*^9, 
  3.8839069923849277`*^9},
 CellLabel->
  "Out[202]=",ExpressionUUID->"8c400333-83f2-4fa0-a90d-29f6654bb036"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"h", ",", "g"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{
    RowBox[{"SubtractSides", "[", 
     RowBox[{
      RowBox[{"appendixEq63", "[", 
       RowBox[{"[", "2", "]"}], "]"}], " ", ",", "1"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], " ", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"g", "=", 
    RowBox[{
     RowBox[{"SubtractSides", "[", 
      RowBox[{
       RowBox[{"appendixEq63", "[", 
        RowBox[{"[", "3", "]"}], "]"}], " ", ",", "1"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], " ", ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ContourPlot3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"h", "\[Equal]", "0"}], ",", 
      RowBox[{"g", "\[Equal]", "0"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"p1", ",", 
      RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"p2", ",", 
      RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"p3", ",", 
      RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}], ",", 
    RowBox[{"MeshFunctions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"p1", ",", "p2", ",", "p3", ",", "f"}], "}"}], ",", 
        RowBox[{"h", "-", "g"}]}], "]"}], "}"}]}], ",", 
    RowBox[{"MeshStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Blue"}], "}"}], "}"}]}], ",", 
    RowBox[{"Mesh", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", "0", "}"}], "}"}]}], ",", 
    RowBox[{"ContourStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Orange", ",", 
       RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
       RowBox[{"Specularity", "[", 
        RowBox[{"White", ",", "30"}], "]"}]}], "]"}]}], ",", 
    RowBox[{"PlotPoints", "\[Rule]", "60"}], ",", 
    RowBox[{"SphericalRegion", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"h", ",", "g"}], "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.821567335669228*^9, 3.8215673785096273`*^9, {3.822134011295446*^9, 
   3.822134034150125*^9}, 3.822137836310093*^9, {3.848261106170137*^9, 
   3.848261112584008*^9}},
 CellLabel->
  "In[203]:=",ExpressionUUID->"3248dc85-89bb-4f1d-b7dc-bb8eea5a4abe"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJxk3Xf45lV1NfwBjB1i0AcRDaAxBoNErIgaxiA2VFTsNahUI4piQYU4YFes
GJQBIwrWYKFoFNQBg0AoA4gi8hC6MPRiRATLi9e7Put+rj1/zTXrWr919tln
n33qfb4PfM0bt99pzSVLlhz/siVL1rrj3+3/65HHbr7yuqW/3/ElZ6+7/IKl
3/uH4+75rkeftwL+wX961ldeeMaFSx98wIqXnrHL+Su+eNz1+3/zzOvLf+8j
H/i0Hbc4f8UtH/zH59/+nQUfjn/jS4/7+DtPvaA6+HDlfvUT+y7b55hrl+7x
wR1vP3Pn85deuNNRbz73jHOKK/dZp353xSZrnFsd/K/vtv43Vpz18xXbvWj/
+z39kAUfjr/jPid/f4vPnF8dfLhy8emst/IBt/3VnRZ2qi/76cDx4eqrXH5m
P5zf4HTg7Jx+u/tfHrrVs5ZdXD8rFz7ba+/HfmunH/7hwtX48Fmv937o7L9e
9tnV9dm51V/cZ4fdP3fOiiWvOuuppy6/puXSgW/3h4O+dt1Bl1Tn8L/5vxd9
er8Fzk64cqcOP/MbvnL5Da5e+C/adKO177vv1eVPnD3K/f2ND/3yJbsucPpw
dk572CkO6cPFGx324MPZP/l0+P/5nz71wNOW3Lh0m/X+7bATDzp76ZvX+Obf
vnf52cXPuvmD77jLGedU5x2f2GTZh/dd8Olse/3nT3r1VTeUD8d/3D1uffXD
Tj27Ovhw5cJPvPKaLd74h0W57HnJmXs/Z9sl59Zv9JXLD3Tw4fj06dz2m8t+
fdmV15evXDh9dupf+OoLpz/9efl/7PG3H33UeY0T9tARJ+zHh+M/68SL1j5q
83Orgw9XL/h5h55z2f++dlEue/RH/Yu+cvUvOvhwfPp0+A1fuXD6M4/Rgd9+
0rvO+tcNbqrOH19+yq/ftPLCFads9pmPH3TQAv/Vw+/7mW/senFxOvhf2eyw
R33po4v6fuq3//XljQ6+YMWZD13jr3dcZ6Hzqtsfesld//3C4nTw6bBfffHh
Nx74t5/+7usW+toFX720O5z9cDpwcTXbi/349NnDfjpw9YWzc9b3Jce+7IZ9
dj516T0f//wjX7ty5cKfe2598FpnrGycqy/+WYf+5b3v/7qzF3aGD8d/0uEb
v/7ZJ59aHXy4cttfXnnX9c/Z7MzV+Mo9Za/19v/k7gs7N3n6Rz7z5oNOWPqS
r/7TPhuscVL58PtceaeXPP3QnxS/1yOfd5+tb1vw+RN/8zdte98Vu5xa++E3
fmvtm6+98wKng8+eJ62x55Nv/dNPire+wenUzmsed/zJO5xUvv6r3GUXPe6y
ty4/of0U/sQNf//Dw7Zc4OzBN68Qb/xp3BRXcOO4fgHXr5X79M12+NQXdzm2
uHopV3+HsxPOTjrtL2nfmYf5Z+qz5/ivX/G0P37p+4u8lDjkz86jgvN/83zi
bbY7+8Vbx6nYid/xKDh9uDif7cse8d88HFy51Y+d+B3XUq54br2Ci/+2S+yZ
8a++9OUNuH4N1y4zP8CnjvZSL7h4wBe35j/yFdy8S/5XL3x5z/wWH45vnkYH
H65cOH152HybPr5+BMdXrnnaxM3r6Oin1h3mLeaTcPMTuHWBdoFbd9Ax/6SD
bz6JD1df4wucf+DsgcsnytWO+HB+ME7N9Rd85gc65oFw/jd/4E988aa94OIc
rlx8/pQ/8eHqi69ceVgeoA/XL+iwZ+LsoaMd8SfOTvZoXzh9OPvpwDv/SX4T
D+bP+NoLTh9uXYCvXp0XRZ/9cPmKPXD5Dc4/+PKkOJ/rVvOumc/1ozmv039f
/6lVT/3I8kua9+D3f81BP3zRfgtcv8YXD9ZZxjU4v7Gfnfjqy2/4cHx+poMP
Vy6cH2a59Ge7wOnwP52J45sPwLWLfgTn/9nv+IGOuBIPdNiJb75BH27+AOef
Oc/BZ488AxfncDpzfMdnJz7/wOVJfPEJx6fPD/wP10/5Z+L0tTsduHbveiE6
1n1dFwS3fsRn51z30YfTgcvncP7EN48SP8ZN82q4cR8urvDp6L/mA9oLPnWM
j5MPpw9nj3GfDn3jlHiDz/Ws9p3+52f7CfwMx9cu/GycNR/D145w/qcDpzPL
Vd/H7rDzxpcuu7h2wue6XrtMPpyf4fyMT4e+PAzHl4f5gZ/pwOnMfQbzQDra
Ea5cuPxPH26eSUe701Eu3HyGjrjC5084fXxxjj912DnjWbnqRQfO/iNu3f2c
1+5yVf0mz8D52fxt+x/t9fp/eM4Cb94Lrr2mjnlL82H4ypWH4eIH/04n/eCg
bz97VfkTZ0/z5EdOfuS7HrPA6cPZSQfe/p78SZ//O68OHz79oF0mH951U/jd
LxrlwuV5OnDzBzi/4X97h5c9ZNsNrmi7d3770vV+d/L9ryzOfrg4xH/ZAffY
4Q+PurL1hdOH8ycdOP+/6CE7rbjPmgt7Jq5cOsrVLuoF176z3K7X4k+4dqcD
1y5TR7n8rL706bAfjg+nP/ldn8ZO9eKfGT/8A+9+bPYfjAvdRw1ufddxP/sS
c3235Ii3v3vlZ49cumTJqidf/d7TtzLPgR+/zgdW/GK9Qxf7EvffdesTNzis
fPNh+wZw89Lu/0QHvuTmn561198dV373k2O/eUX3N7IfMsdB9TLfKJ59FX5Q
3803fNovfrnTsUuPv/c7X7Dx8i+0XvB73e/n9/7Oed9ezPfevdY7dn/ZUeXT
Ua9PHLzdq166/MjOx+BTR30nH04fXjvjt67XYg+/mR/iT7z+j754lk/Mn+Hi
v+ud9At883nxjA/Hl5fo4MOVC9dPJ1+55v/6Cxwfbl6kvvoRXLvAzZfw6Zgn
ay/1gk8d873Jh09987G2V3S63km702m9Bs5+OtoRf+LsZw8/F48+nP102G+f
QTuyHy4e4Nb7k28fY8YbfPJrZ+IBX7kTV6524Qd8uPoqF24+o1x2Gq/pdD8/
4zvcuABnD/6rbv/tUZddcVnHheqfsOazvrlygfMn3LiAf9d/+Nq1By75Vccj
+BG/Pvp9r151eXE6cONU+akv+41f7OcfOD/wj/bCh9f+8BvniUPlwvmfDly/
g4t/fPrif7avek2d9q/ED772mnbiz/rqL3DzcPkZbn0B5x+4cWGeK8HnvkfH
69gJp88P1QmfH3p/IOPL5Hc8in/Uiw5+7WdP+L0nEH32W68duudzn/P+z3yh
OuYtcDrwJW844GG/vPuu5dNRLv2eE2XeMv0Pn+XSmed3+NPP7JQn8Wt/8mr9
H/vxzeuUq93h/K/fmefgyzPsx4d33yD+p9N9ieDKrR8Sb7Nc+uaxtSf8eY5W
P8Rv/A8Xh42f+Ae/8bbk/Xuu+Z7//RG/lR+cn/Gdi7G/57M5/5o4Pr/xPztn
3Lbc2Fm/BVcv/qEjruq31Jd+572JtxkP9MVtddiT/sJO7TX3sdWX/fZvi495
u3PAyYdrFzg/4/ecJfNz9tNXLr/13CF8eNcX0W+edx4Rfuc5wemzs+cU+Kkv
nP5c71inaK+eE9GJ/3sOFT689c26hk79H1y96oesd2a59MVV7Qm/82rnTeHT
rx/Cn+sUePcl3P+MDv3e8wyuH8HVa7X7D/HbxOnMcvH5oXYG7/wzfO0+6yVu
V1vHpd2nfvvFOI9gp/iEq+9cP9KZ84TH7vvGA1/87KuWrrrp7S/YdLurmg/h
K3/99Zs+/5yri79+7a/c/epnriqfzt5v3G2N3+189dKNHnzbO3+2y9WL/cPg
U+fbtx/61o/sdNVqfPjUv/lTb930u49atfSoFb/ZbL9Hr6oO/LMnbHLaLY+5
qjrsnzj76RhP8SfOfvb0XD44fTj76cDpv+bjXz782Q9Y1Tx5xOHvOv4+G1xZ
vnwOpw+/ePOjH/2V9a8oX734gT774Xt/dM+7/HKDK2sPfNNXPvhfD19zgfMP
Pjs3PuUDV599xeVLn/rymy5++BpX1P/w3/z9F198+6pfFV++9ff/+y/+tDr/
IRt94/NPf+SivsaX83/50XdvfsZl5asvnD78BS9Y8aodf7Xg07Gv9ctbrj3g
f864rHz4B0/63N2/9p0FfsrbT/vgA49a8NVXuX/50Dce+/4rL6/98B/dutEj
tj9zgbMHX9zu/N19X7jnkitqJ1z78jMdfO2iffHh+OKBDj5cuXD+n+XSn/ED
pyNO6EwcX3sZvz61yfO+8a9nXN/+bryA/8VDNlv/GbtdU/ykYz74wL86/brV
8gP/0Nfu4hlf+8LlH7g4x1df+tpRveDaHc7P+L3/8/gXb/0/Ry/sh6vvi160
9xf22feaxX2k8PkBzg/48vldn/XKXzxh+bXV7z2o6OCzE58+fL+TPvbdNx51
7Wr2wOn3/kz0n/CSb211837Xtlz12v+Dfzz5IQdfWz78zR9+xE4HH3JdcfWa
/Cee9+lnrvzsNS2XPXSUq921y8wn4lDeNl/Fl1fh2hFfnIjzqUNfXMHx2S+f
iEM6cOPC5LNTP2UPXD+Fy8PyA1wepsNOOL/B5Tc68HV2/smvf3zapavlMXz5
Uz7Bh+tf+F888XW7P/qYS9uv4fIznA4+nU9fc8B9Pn70pT1nxIdv/+n7X/6n
gxf68jy+OOG36R/5fOL4/C/+xYM8ANfu/Cae4fIYXPzMfKLd+QGuXH6mg8+f
8io+HF/808GHKxefjnzIHvViPx04Plx9lctv7J/2yNv02QPnZ/boX3A6cP6H
m79NPnvElX4q3uZ8A66+cPE8xxfxTx8uDmd/gc/+JT7hdODaHS4PzPmP+ZJy
9Wv1ogPXvyafjnrpd3T4Qf/C5zc4/cmnox3lJfj0Gz/McVy7yA908JVLh9/m
fM84a1zrvYiMmz8+dtn1Zx5zXf2Db3zs/Yrw4fjGZTr4cOXCjbP47DGe3nrt
mv/nHSuvX7RXyv3qD47+yDbfvb46+HB8+nTEIb5ye18l+tNOfjC+i0M4Hf0I
zh64+QM+nR+/8rWvX77smpaLD+dn+C1XLb/4Ye++unz2K9d8qeuO1OvhG73v
CQ9adcNi3RH8wusfc9R1Zy5wfsOnz54574Wbv8HZia9d+IH97V+x58P3esXr
T3vLjcXFD3vUSzse/dW1jvzVshtrP3zqqBc+HX4TJ/jw6R/24ItbfuB/9YWL
H/7hh8m3fudPOH/id96y3jPX3/jKG1aL84/v98UTdlh2Y/3W+Uz46iXP4MPx
t//k3r99/p9uqA4+fPqBPj77tQv9zscO22//o351/Wp2wmceoK99lct+7YsP
/9JDP/enz69xU3H24ysXnz5/Hv2Ojd7+iLVvKh8uXlaesM02x659U3Xwlctv
+HD8Gx77vZ2feb+FDj5cuepLH1+9zlj6hCPfuf+Nq9kDn/6hc8LWF37qLR9b
8NkJ11/EszyGB5f34OJcO8p74lw89/558Lmegs+8AZcn4frLzLfyDHvsA4gr
9phfwdkDF5/4dMQPO+1Xw6eOOJx8OH04e+QHOHvkW/vb+BNnD337tHD6cPbQ
UV/xw8/qBRcPcHGIT0e7aRf1gk8d/WLy4dMe9RIn+OycODu1C7/hT7z9IOXy
G5w+nJ10rC/YqV7WC8qFW1/A5VU4+/Hps0ce4B84HXz6M//D5Unl0pm4+tJR
L/ypz/7J5x9+pg8XJ3D9gp/p6Bdw+cE4pVz2weVt7cgP+rVy6c92V6+5b4av
Xl1/BZ/10h8nX33h7tXQsZ5yfwZu3QSnj0+Hn60v4PxgfepeDb51EH18OD7/
0MGHK9c9H+3CTjpw9YLzDz4dfqCPD7cug/PP9INyre/YD7fehLMH370y/O4b
5N4X3D4Y3Py2/s/9HHz7aeIQbr8RTgefjvkwfXw4e+DG/dmO4oE/+R8++fIG
/J4H/tvSfY6+pHx+g4sr7fuyjz1v3duPubR88XDUyw8972kHL/hwfPFGBx+u
XDg7J1+52v2YU576js3PWNiDD2ePuGIPnN/gysWnI2/xGz5cv3O/S5xPXHzS
h4t/+nBxxU73DOF03EuE91wmuDisH9wPz/yt+5CJfzgduPUafn8XED7/93cB
wdmvXuxpXMUe897Zf/ULfPbgizfl4sPx9aNpJ1y5cPWdfOWKQ35QLh31hePD
6U8+v0376TR/Jp/g28fuO0XB7WPDlYvvnqH46b53cO01+fTlKzj95p/cn8Sf
uHLp8yc/26/jH+0FFyfWL/D+XiY4/8Ota2a7w+fvm+QN8w24PND5Z/wA7zla
cHlm6shjPe8LX7nWEXD5E58/8SfOHuXyA5w+nJ10jMvasf7JOA7nZ7h4mHxx
Ncd3OL48LE7gxjv9Aq6+9v/h/AZnJ9z5wtQRP+zEd47Q85r4DT7LpdN5VNod
Ls/0va/g+jucfudp0XH+olx8uPrCncvMfiQetDt9flNfOvw2cfw5HzDe4Wtf
4+ach8BrZ3Tg6mWeQH/GiX4hz4hDuDwGF//4yjWO02cnvxkf2QOf8zT9ZeZ/
eYA9+gUdOD775W24/MB+5dLpvDT1hU8dfsCH45v3yg/dT0q51onOWfjN+guu
HeHOX/jH+hre/mXdl/O1idOf55vO1yZfv1Nf9sPVq+8oBuc3uH46+fqFdrRv
Q2eeS8LneT39ed4Bn/uBypXnjXfiWbn05Q18+4d05n6d81P+pINvHITLG1MH
Xz/q+43xg3kpXH07H44O++VJfPr6I5w9+Paj8CfOnmmncuU9fHjHkcQbfXHC
fufv+PTh+gvcOT7/w+X55pnYQwffvEteFQ/iBC4O8eWr2h++PDxxfP3FuANv
v8t4Cpdn4PTxjbPmA+KEnfIkPnvg9OHyJz4d8eueD748OfGea+QekfryZ/Nk
6qU/Thyf34zL5sni0PgL5we4+W3vscRv5tUTp6O/wOl0HyzzJfyJa5epr778
jK++c/8Ezs/qBedn+uJn4uKHDpyOeGAPHXztIk4m3nOl0e7waT8/wL+3+5dv
+/V/n7rYV8/vteHdZ87vl2/d7sCnXHPmyvL9Tvm57z37VRvutuDD8cUtHXy4
cnd43L9ccvzmZy72/wfe/fPonL7/Zuu94uCzy1cunN+m/XD6+PT9jlu5fecy
v9fGh3ufBK5e+MrFp/+J+397/w02Pa5x6/cad73haZ9878EnFPf7Drh+hP/c
9z9kxbJXHtX5Hvz4p9/5hW/c7djidODWTfjssQ7y+wLlwv2OAG491d8RX7rl
ZWdsdFj59Pc4eu8P/PzgIxc6sQdOB5//jYP0+RnOHrjxGl88l5/fNWgXuN9B
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
D+69L3z2eLfK+KtcuHUo3Ptjc73pPYS5zoKLT7j3GboezPxNuXDzRrh6wdmD
b93tfQm4fgdnD9y7DdM//Kk/8gN/dj4TP7Nn8un0PYHw1au/A0r7wumol3er
ev8881J4f/8S3LtYk++djekfOL5y2SNv04HL83TYM3H20BE/+BPXXuwRP30/
JPpw9tNRLjvNT/C1O33ltl7Je/jsnDrqNfnV8c6J/eT0997nt28MDx8u3vC7
3glffbveCc5OOJ3+fir2iM/ZvnA6cHHecTz24POnfgoXn+zhn4nTpwOno931
U9/Dwte/4PP3lb63Nfnw+btdeRifDv3+zsj5Rfzf37843wne38sEp6PcnvuI
h9jf84vYM9uRjnGH3+qHxFXPI6Iz4xA+f99anfE7WX6Dd189OB18Ov09XewX
DzN+xO3sp+KBvv7eOEl94XQmX7zN/gvHt6/ITrg8qb36u93403g394HlMeMa
ndo//EzHfFIcwuf+A/3Jh5u/weVPfDrG8bk/AJ868urkw+nD2Y9Ph/7cV4TT
MR+mI060Fz7cvBo+1yN9Jyr9jk7HtbQLnD+nDlycw/m5+Tw4/0ydlpt4Zn/H
weiIH/abP4g3uPkGXLn4+gV/TpyOuGUPO5s3Yr/xEY7f74Wl3fHh2h1u3w+f
//s9suD6L5wO3HpzlosvnvnTeaJ9RX7o+1HZV4Q7Z8Rnp3rpp+yB2w+Eqy8+
v1mv2Mdjf9e79vmDswefPeyHKxdOB+48F589+N0HTrnwWS/nNfyMT58O//c7
g2kvfobTgdv3xqfDz/ZF+YHf4OzsO2BpXzh/4tNXL/azBy4O8enbn8eH28+H
849yjYP8PPF+dyhxCBfn7ITzj/ZVLlw8wPWj2V70pw5cPMDFOT57+r0/72pm
niD/GE/NN+DWrXD5bfLlt55rZ54jj8l7+PC5DpXfJh9unQWX//GVK5+zk75y
5W06+HB8+v3dffyGP8vlN36gg8+fcP6cfDp9NyDlsn/uY9CnYz4A7+/lw6fT
d/zCh7MTzg/0zWfw4eYb2mvaA5/7JHRmfZcsef+ea77nf3/k3q9xFu6eefE3
HPCwX95916X42gXfPVvtDncPuXh08Nlz6J7Pfc77P/OF4sqF04E/6f67bn3i
BoeVL88/aY09n3zrn36y0M/vvuF04Jtc87jjT97hpPLl202e/pHPvPmgE4rL
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
SUee5/+J0+94Glz8zP4F1x877iQ+536+eO67o8HF1Yx/+Owv4q2485Hg+kvL
Tb+e/ZH9+HD9gj3aBX/mMfyJ4/e8I/0CPuvb3805p479/Nl3XJ0jhK/c5o3U
d47j2tf7WvxpvPM+Fdy45l0y+vjeuWInPrz8jLN08OHKbdymv7OzeSDleheu
/ODenSsefXzxTN+7Xs0/wb1v1vOI9K++bxb/6Efw5ufg9bM4T7tPXPxUX7tH
hz31W+rr3TDxAJ9+Ng+B84P2mv6EK7f9PTrTb/C+Dy+u4k/v7NX+4N7N6/lg
/Fy+eoVPv3EVXLvD6Ux7xH/xlAunUzuTP1eLn/iZnfzAb3QaV4nDyafDD+Kc
Tt9FNM8JX7sUj/7k02m8xZ/OlZxr8JtzpZ4jm8/kXMy8CJ+O+STcOVe/qxL/
4xePn5U79ZXbeYX5UvC+Bxsd+uUHZ8/k05nzan7mt+4/BG8/jX+M713XiMPg
9OHG/X7vJuUaH/udGvP/jINzfo6vvawv4M4Nuy+RcQSfjrw09zHg2hcuX/Xc
M/5RrnrBjVNt36yn6PccOesI+j1Htu8RPv/QUW7vtWbdgT/9zA9zH4ad/R5N
+PC5btIuk2/8nfWio126Lgt/3hPQf+WNzouSbycuj8kPcDrNt9HHn+OXvAdv
PKS+7BQ/6gX3XoT8/Oh1vrDNU9Y4t++Ows3P4eqF730J/EPf/KVPfubR5/Xd
TvjP3rD0xd98xLnF6eD3XdP44Z6/+NqFV+1y/uJ91OBPOufJhy/Z6f/RT17F
996pcdn+sHdo4faf4eIZ33v4+L2XlXdT4fbz4XTw2SPO4cqF06mdiX/8vh8b
P/Bb340Pzs/8KX60F7/BtW/fLc+4jO/+vHbkf7h25P/GVfIwvHEVnE7xtKN6
ebeBf5y/9N2G4M5r4PyG710I7dVz/Lwv0f3VnIPAtSM+HeU6H2m59j3cB4hO
11/B8enT8T3c1jfnVnD86Ye+axE+v7Fn6sN7nh47+25GdOqf+JMOP7Rc5+ne
6wg+9fvORvj97kzi1nq/350JLj7h4g3fezviSvz0OwvREc908PWX4olD/H7n
KDr2B+D47FEv/cW+QfWDTx316v1/OrFz2gPnH/XVr+noX3Dltt9lHMFvPo/+
Xk/45qZPPPiCRb71e5Ytnn7T9p89f/HutN+nDJx/6PR7Fskzym07xj/82e9K
hA+XZ9QLXjtTr8kX/8rFh/MPP8DpqFfHkfi/9U25M3+yX3zC2S8O9S9+MB7p
73DjRfNh4ge/301Lu8D7Pe7gdODaC7/fNQvfuWq/v6afOs9Nf+/8YeDspGN8
5Ae4OIc7b238x8/THvbDjePs6T32jNcd15xrB9de+G2XxH/PhdU3eM+R4bEH
X7vgr2a/8TH29PuV5j/BqxP7zRM6jsTPE2/eSLv0u5nR7+8dfD8ueH+/EJz+
5GuX3s8P3vnGKJc9/Z0Cnfit/TR8OvTFDz+wp3ESnP39TlDad7Yjff0Cjt/7
Bto39eVndhoHjZvwjrMZB9UXbtysnzNu9j5G8L6LNXTshxvH+ad4+HDl0ucf
fPbAlYtPR33Nl8p3Xpn5Vce71Kv389XLOWbmS/jddx3zKO0y5+fdB065+q/2
ne2FP+0x/yme79o0X8Wf271o//s9/ZBrF3j8D28+Cd93c4wj+PDmN+2bcsUz
/9NvnKe96LBn4uxpu2+60dr33ffq8ideO2NP80nsnPPM3iswH/7Evsv2Oeba
5hP8Wz74j8+//TvXLfJM7ITLA/j1j3sX4iR2wrVX7XROmniA88OMW/tCsx3l
vfbrzB/6vmj4/Q5dzqFWa8fkvcZtcH5gT9vX7/ViPz/0vDt4+fEbnfotuHLh
6jXL7bn58DN86rBT/mw7Gn/5R3uFL6/e9pvLfn3Zldcvxsf47YvHXb//N89c
4OKkuHE//G2v//xJr77qhoVOysXvfCb49v/1yGM3X3ld+V3fBS8/+urV+Yx1
UOK89Z149Pm5/vH7x/jZfFUenvsA4rPr08yT+3ufxEPX9eE3H/q+TOKTTr+X
FLx50veYsi+Kzx77tF0nmrenXPWigw/vd3OiT8c8HF+5/Y5Y9NlpXo2vvv1+
U/SnP/uerX2D2ENHvLEfH47fd2ujgw+feaPv4o5ya0/iU32bZ8KH49NXX3x2
wpU7/WwcNO/qPk9w6yP225eYfPhq66aMp5Mv/h9wyLO2+tJpFyzmgcGV2/le
cPr9TnH66VxX9p3h+M06tHj83O88Jq74x3pc/4LT6e/dEs9w/Wi2S9+7Trnw
viM92pe+PInfexSZV/d7bSm3+5lpL3z5uevT1Bfe7zGlv0y/4c+46vvP8QNc
/Ou//X6ocTb6/M/O/l4m53r9jobfmwT3Xjod56H4va+ecz18OL732Ong93sc
Kdc5IP3ua+Vcz/vw055+H0RchV+dxIP9/34vxj3/7P/D+Rne786M39XWP9FX
L/b0d0bB2UPfuV6/gzPsgXf9Er53gTr/ybkeHJ+O96AmHz7Lrf7wW797Mn4X
D+/vd4Lzg3EBrt07/0+9+v0IeOzkh/otuHaZfDrsYT+dGYd0Jl5+/ND31nIv
nd/63pp3ReL/vreWe+/4fa87fPb3HTbvXqa+fSc8Ovh03D/nZ3w4P/SdtNxj
x1cv/Knf91jiHzrF4x9432MJn4779vyA3/dq4je4+/zTz32HM/7pe2WpF/v7
Hajc51fffo8peOMk8SNu53sI4rzri/DhPbcK7r2v9qPg4n/qeE+s/TTligf7
nHB+sy+qf+Hb/6SPD8fnZzr48JYbXPtOfn/HkXMo/Q5efnD2mG/od/29W/aB
2dnfuQTHZycdfHZOfTrmP/jiGW48Em89j8j4AseHi0N844V64cP1a3zlik9+
o9/fOcYPdPo7x4Gzh47xHX/i7Jx+Y+eMN3jjJO1LH04HLg7h7Jxxju/cU7n9
naB4049iz+TTh9Pve++pL52+NxV/dhyJ/+l0vPB7xtjjHgicvvsScPGgXL9H
m7jftc24osOf2hE+/Ql3ftRxNnjXC8H5Db/zk/CdT+FrF3jXs843sz/f78hk
H7LnI9aJ4Xd/275Q+PDeo8j+55yf95zU+YX1cvZdZ7n05fPaE7683fWj/efo
d71sPzm4eXjPo4P3HDa4esF7Tj10+KfnU+FbD8569Rx/lEtHfbs/ENx+fuvl
PDr7/13Pxs/49XP4zlm6jo7f+n6O79EEN473Ozvu/Wa8rv3x89xv6X0G77z5
Pk7s0Y71f+yf+xh01KvxFpz9PfeMnye/9wRiD1z74vfcKvvA9UPOp+wDw/H7
exPvIKW+7BQP4oc9PUcTP8Fnu3S/esShduG3fhfGd6xiJ1x+MK/re7bhm9f1
PdjkH/y+i+v7WQPv7+gzj+p3+vw+PfNM+v29avB+78w7ANHpu69+dz/0W27m
e3331e9tg/f7p7FHu/Q7pMH1x75bSyflmsf2d8HRh/d3u+GbD5c/7o2InxkP
4nDiPQdJPPc7kt5tiH6/IwmPnco1f/a9Ofv8cN+fhZuf47PHug8fbr7d7yyn
XO9UeH+YPtx37uiwZ+LsoaNf4E+cneyRB+D04eynA6fvneR+Dy7rVn6AW+dO
v6kvHXbCvZ/c7215ByzvQsP5Ad84Yj9BufIknJ1w+xL4/R5Z6gXvd76C80+/
8xWcP+nwGzvh/D914PwD1y504Pw8dbp/Er+xnz4d5zjyiXetnQd1nR4duHyF
T0feoO+crvsPQ0d+m3z4tIcO/zh3g/OD8y+4doHTx7dfLd6aB1IveQyfPXD6
cPmw/T065vniSn3hU8e6cvLh0x467Ocf7cjP/KAdJ47Pz+KHf7wfDhdv2qvf
oQvfe+Zw/Rff/j/+7I9wfOVqX+9s43ffLO9IK7dxmHe84d3/CZ9+95GC04d7
vxrO/76XIV/he79aufhwfO1LBx+uXHj3N7zLnXGn69nw5eHuM4RvPOq6dfA7
LxrfD+361zveKZef2U9fuepLBx+OT5+O8QJfufDO92Inf3afIfWFd790tDsd
76jzM9y79HA6Mw7x53dU+RNOB65c/ObhxC07xQ8/4ItnuP5Fhz/lPeXOeLMP
AFeufYPZLuIQrn3ZA7dv4LuB9jfsM8Dtb/Q90nw3cPJ9x3Du/8Dx7WvB7S/Z
B/PdycmHswfuPUl8Ouxnj30M54bvPOrvr33wQRd3n4f+qs8ftdfHVl5Y++H2
SeDKxWePcu3P9J3V+G36x/kye/r7dO+gDn04e+DOoyff+Sx9vydSr77DHJz9
5v/ez8E3//d7GfyuC8JX3/kOGFy5cPEwy20cZn0Kx5/vPjk//fv9/u9rbvzz
d1kTn3B+4B/nqpPPn3B8Oh9c8ryP/PaPFy7eYUi7wPseS3A64pA/8fv+c/yj
Heng25dTLtz+G1x84tMR//Tx4eIK7jwd376ictULrr3Kzz5hv0+a+vYd6dS3
OsG179RR7uwv7Fdf/Yv99OH47NG+fR84/oTT6T5q8gb+bF/+b73C54e5vwqf
eYZ/Jp9/Zn3psN/9KOOL+ar7VMYjuPtacPNA977g5rf0je8TNy7TgdMx3zav
hpuvwtlv3st+5dI3fzbeTdz4OOfn8DnPpzPXR/jm5/zDTjryqn0z8SCP2Z8U
z/IhPrzv/2ffkk5/D5t90cZhyu37yelHdOiLfzr48NoZfTp+F4mvXL/3hLMf
X3z2uyThi+e+N5Jy9SM4/5v/aEe4+RL/02GP/qW9rINW3fT2F2y63VVtR+up
lb/++k2ff87VXd/Zx4CbX4kH3+cyHzM/7PedMz+E97vV0bG+wIfj+66WeT7c
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
fqADdw986ihXu4hzuHW6dlFf9tNxH372I+07+wX92R/FZ9s9uHjTLvTxtaP+
iA/HF8908Ps7r5GX2D/Lpa998cU5XL6C04H3HvvIn/IeHbg8M3X4QbuzBy5O
9NPez0+5cO1CXx7A77o1/Rcfji/f0sHvPf+UKx7oz3L7u7Dw4crlH/p0us8Q
nA7/vHX/i37w2N0u7u8kZjzD5X/xD+8+avTh+gtcv5h8/aj7b8H1U/YoV/zM
PKm+6iXPwPVrOD/QgWsXOvTlsc43wodP++W3yecHOD4d8xB8/oTLh/A5/+FP
59pw+vb39F98+4T6Cz4cX73o4MOVC1dffPaw3zkO/foz5z50GofB8enTkQfw
lQunz075BF994fTx+V9ciR/9RfzA9S/9FL7hik/cctV+l9T/4u0dv3vfKzc6
eIGLWzg/z/6LLz+cddLP/ub1+y5weQBOB589/ANXLpwOnH/w2YMvjymXn+Ur
OJ3JpyOv6o/G/a4L0l/gMz+bD0y+PDPzMx128g9cO7ITrr3g9Gf7wmec0MGn
w/4ZP/zJfvpwftjhaStv+OWhP1nhdz29h7D5YR/51honFe+9heB+f9R89fx1
tj/0z+8h5XcK7LnPSQ976TPOXFmcH+B+B4F/xAUv/uGeb1i5wu8muk9y+y5v
3nvXU4v3Pltwv4PAf/DOFx5+6fITar88Cff7o75vEz+YDxiP1Bc+dfih51PR
YadxCh8+/ckefH7w+5TpH/7suxzxAz4/w/kZn//5berQ16/x2d/5Q9odTkce
hs/5s3LVi9/8LoMOv8GVC/e7kr7bEB1+6LsN8TN86vjdx+TDp77flbCfDrz7
wNFh/8TZT+dO6x5w7pfvcmr5E2f/bC92Tr7473eQg4vnnldGB953uYOL8xmf
+DPO4eZ7cO3e86n4U7zJV/jw3sOJ38TVxOnTUV86s331i4njyzN0lDvt1C74
cPo9/4o/9feJay/14mc4vv7Iz/hw7TX5dNgJZ0/P49Kv8Seu3LnuUy4+nI5+
B1eueLbOMj8Rn3DjvnxrvYMvP8PNZ/Ctp/An3t/R5zzdfA9fPNPHh+P39/XR
we/v4oMr17g855/0nePTwYebP5sn0OdnOD7c/KHfscq8Wn0n3/xkzuf7O/qh
o1z+gSuX/83D8SfedwZGuyh3xgN87sfSn/uicPEDZ+eMQ3x5TLlw+RNOB59O
30NIvS5e+ae3XXHet9tf+Pni9Z/04xsO+kJx6xG4flR+dPTTrsu+8LVvfnL5
kcWnjv47+fBpT8eLrL823/FD2yz78veL9z72ntduf9B6hxbv7+OCy6v48qff
exrX8PmBnerr/sadnnn57z995eW1E77hM478542vuKy4c398+s7HqxN9+OP3
2flvtlrjiurAX/CuR73/v+8Yh/lNuRNXLh3lOt+f+s7xJ5/+6eu/5txr/vxe
bPxP58uXvG6PTzx6Vcvtdw8v2uKc+z/qyuLuIeD/YO+73W3tx59Q/gX3vu7A
Lbe7aumSLR6196a7Hlv8lr869ncnPmtVcTr4dNx/WPepb/zhpbtcXT78H7Z5
4sZv2Hmh734FvnlC71t+a9UzrrxjfDZe995g6gV3LwvfOM5v7DT+wtkDd+8L
n45y+U25dPiHDj4cnz4d8Y//4W9854g33++K4vjqxT/u0YkT+vCpwz/4dNg/
7env1OJnfnDfjI76wpULd28NX9zSn/a7/zb12c9O9vT3LPEPfu/Zxv7Oe6OP
r7+LT/r6Y78rGh24uC0/Ov0eKP3w9ZeJ48/2gotPuPww+yl89mv5arYvXHzC
5atZL/eilct+OB15ht8mzm904HTUV96Dswfe78zGn+IKPv3T70WmHdVXu8g/
dJQ78f7ON+WyH64dlSvOJ87PdLRXf3869LXvzAPKVV/9iD4cX1ypFz4d/ocr
F1+/w4frX8qd+vKD8ZGO718Yf+nA8enIJ/hwfOO+9RR85j248VQ8wFet9/At
3376pcWVO/nyDDubB3L/Ydu9brrsI/tesxiXgy//6pN2P/6gBe5eBH7nCeHz
Z/NG8B3f9qOn3nfZAqdTvvlS7lHAO28JTqd25r7K1HHfY9nX97z7Yw6+dmF/
8LPO//EBux29wN0bwVcv93Xh7IfTgbvfgq999Rd26kd0HvRPt+2z+aob2l7w
73/v8Pc8csmNxenj01Gv69fZ68UfWHl9+y+drZaefPFxV1xfHXw4Pn068gkd
eO2M3+DqK97kQ3h/H5r8YL3f328m73U/IeMgHbg4nzr6hTxmf6Dfiwwfrlz6
vYfje0axB65cfDrqK4/hw+WrnoOnXvjsxzce4bMTLj/A5Rn2mKeJN/pw9sDN
3/C1L335qvtpsV+52pf+rJd50fQPfM6rjY/yjPwJl5fgxkd8edv4+N0LfrP5
hcdc17wNv/PaTzl23TMWuHEfn45y9Wvl0pEH6ODD8enT4U98+Q2OP/1gfMTn
N/ZMfTi/qRcd+uyH48ONs5NvnGUPXLvMfEh/4nToix84e+DsoQM3vk8deZid
+gscH65c+uIWnz1w5eLTUV9xhQ8Xh3D1wmc/vrjCZ2fHtexr2SfpfYPsy9mv
gNvXgtvfoAN3XmA/in7vJ0Tf/snUsS8EZ3/vY/h+YuJB3Bpf+AFu/ILrL/j0
5TftC5evZjzQN87C9dOpD2cPnD104PrF1FGucd+4DGencR+uXsZrefvAKy76
1tZ/foc385y+J3/5EeuuPOqSxf5b8jk+HeOg9mJPvx86dIyPkw+f+sY781U6
/X5H5rd0+j2CgbOfDv/gT5z97KGj3O7LZT4Jxzff6/ca4ge4ca386Ig39uD3
Ow6pF1zcTvuVa/zlN+XO/Tf6+OoLn/uByp18uHUKXLnTHvr8yX44Hf1XP5IP
5QH4zIf6Edy8nT7/w/lNfHbfOPFTPO0lfuY9LvmN/e5jwPkT7hwQ3/0ceRXu
vgecDlz+xGePfWztrtzez0xcweVtfDrOec3T4M4TO++NDr55KTvx4fjOheng
w5Xrngn71df9JTj/wNVr+pOd5r3qxc+dP8dOfobToT/5dMQ5Pjvh2h1OR79w
v3SeO8Cdf8Hdd8XnN/43r+YfOD/A+X/uh7Oz37MO7v6tcvVT98fg+imcDtw5
VN9fih+U6xxKfZUL50/ty364+s54di8Cv/epgvMP3L0IOtoXPnWUa/3Y+105
P8J3P0reoO9+FJw9cPE5+wu+/uVeFlx/hNPBZ494hisXTgeuX+CzB9+6W7zB
rdPZo90nTp8OnA4/a1/3JfC1F3y2i3sRkw+f+Uo+735CdOizH5//4eITTgdO
R7n8hs9+OHtmO9IRb/wGF1dwOjMO4XS0Lx189vAbnD585iU64or94oF/2AOf
fhDP+PKS/OncXP6Bz/tF8szkw52bw+VhfOW6B953MKKvXOf7dPD7jk349Hsv
PesR/Hnvkf68H+U+cN/Niz4d9yK6nxY+HN+9dDr4cHbC3Tee5dI3LsDxjQvq
ZRzpuxP296KjXPM39zS8rwJ3j2XJklVPvvq9p29lHlh+3okyjy0/OL57NXTw
i6dceO+BD37vt+d9GHaqr3dm8OHe+YEbT/uOa+a9+N69YT/c+zZwOuXHHvdJ
4MqF04G794JvPaJc73eZV8C9vwRnT99BzTwBv+/BBmcPfu9DBqffex3R73uz
8VvjIe2Fr15Tv7/Dyj6GfTb9S9zar4P3O1nZ34P3na7g+hd+z6cS/xOXB+b9
YXls5hP+mfbIP31PLDh9+UG94PjuFxm/zHvdg4Jbj7inBDd/hsvz+PTNB+D0
4daD9q96vzHrd/q9xzhw8xA68N5LzDrLPphxDd8+T++RRh9ufOy+TfbNer/U
fktw4zK+cs0/+YF+7yHHTjq9jzpw9tCxT4g/cXZOP/f+fPTh7J/tSN86jp/h
1n1wOjOu1JcOnA4+e/Dpw/kBX7lw+vj0xa16iavpH/EMN//x3QH7hP19R9Yp
9j3Mr/Dtn5gv4cP7e42sR+jgw5VrvmffbOLKpWM+hq/c/l4v3w2Z9sPp4/c7
19nf7u9QUi/77f29bXD78/29beqF39/F+F529PnZuhIfLk7su9LBVy5/4sPx
rbvp4MOVq7708dXLOnTaA5/+oWM/GZ+dPWdPHoCLZ/0drl+Ic7h5uP4C7/oo
+Yo9dOQruHLh/NN949gJn3lA+1of9Z5tcOuI3rNNnPS+YvTZIz/wA3zmAfZ0
P8q96JQL773o4PTh2rH7q7EHPvObfmedBdePrMv6++XwrQe1Fz68v0NMP6XT
e+DBldv7xvHnLJe+dV/vLccP8N5zDk4HTke5vU+ecqf/8cUnPlx89t54yp04
fTp9ByP+ZCec/owr/N5D83vS+HPy6Yjb3lePnd3H8A5J9Oc9B/r42kVcTVyc
84O4gs/+Lv4njs9+uHLZqX3x5/0642zvq2f9Yr5h/gw3T5j32+Ul62g4/a4r
o4Pfd1qy3sGH45sn9J2W8OEtN3w65tXsUa/+riE68P6uIbj69j3t+I390x7z
WH6Dm5/McunYP7G+o4NvHWf+DMdnP3vw6agXnD39XkPWffhTh36/4xA+fP7u
0rpvru/g1t3WWfYH+h2ZrI/gfY83uP0BfOU6B7deVm5/9539Abj9BPzeG8x6
0O8R4Nanfu/Q+4Te88nvJtjZ93mC49uf6Xdewocr174T+/ted/Z54PwDV6/p
T3b6nYh68bN9D3bC7UvQUe7ElUuH/d0H8I507OzvsLLeh9sfwBcnyp12ioe+
P5z4lAf6rl30tQs/6Ef6I774h/tdHlz+6ft4KRd//m5RudqX/fYr2AO3X4HP
TuOX+ydw41ffdUmewfd7Pfbjw7sPlnGZTveRgitXfY0vkw/3+0S4cWry2dl3
BaMPd47cfarY33dgYr/xmg7ceI2vXDh9/mR/38+JDrzv4QQ3Xs/4gU8d9vc9
n+D8g2/8Ui594x3cOAKnM/ns6XcZMq6xp99lCE5/jrP4facx/N6vTvviw8Ub
nP/Lt18afX7QLvo1e/gZzg9w4/icn4iraSdcu3RfN/E/20W9+u5i/ECn768G
t79nv5R+9wOTD+H2D/HFiX3I+bs5OvInfs9rMh7RpzN/xycvGUfw4faB64eM
L/jtj8Hx4cY7fO1rXJj77fLh1Ocf9rOHndNvPa+Jn+H08dmDT7/3u1Iv/N7v
cu4TfTh9OnB+mPvwdPrdtODs0e50+o6f7+KFbxyf/rRfbV5Eh/+N73Dj7DyP
6PlOzmvw+77Q0O85ju+GxE7lzvMXdvYcKvZ3nhC842D4dJSLP3F88yg6fb8o
5xcdL+C+hxL7i8ce5wL1z5jPtF5jHtjfWSd+4M5Z8J0P9n2ttDu852jhm4+x
R7zh9/fvKReuvfDVS7lznsz+fjcw9uPLA3Dt0u90ZJ7W31+nXnB+UC5/0qej
vnTw1Uu5E2+/yHxMufzDfjg/T3+KB3x+g8/zMv1dfHbcDC4+4fLGjGd5fs5v
4TNvyJ/wDV58+GFrnXV5xzX2wo1rJ2//7p1OuMMfp79q1VnvW3lZ+Tdd/ZCv
/9874uWtnzzo7luuWvDh+MZ9Ovhw5cKNv/jsMU/4xpZb/fTaO9qfvnJ/fvav
1rvLR2+sDj4cnz6dEz/0wv/57lW/Kl+5cPrs3PDEbbe5do0ryldfOP3pT/Mr
95zZA3cvGm5eh0/HuqPnC6kvfOqYB04+fNqjXu5X47Nz4uyc/sSfODuVy29w
+nB20jnlpn/a/HOHXFq+ffs3PfjXuz33u5cVd27yoIdt8ZmfHrPgO7+A08en
w35+w4c7r4HzA/7uP7jzfV+31pXdP4Gfcsvt+3z+/gtce8Ht25Sf+moXuPZS
L/bgs3OeW8H5Ac7+6Qflai/1hbMfX37Qj9gD14504PopXH7Ap68/zriyLuAf
OD+rl7jF5zfxhg/Ht76ggw9Xrn5KH1972U+Y9sBn+9LRXvTZ2d9bhQ/v77+C
s7PnZSkXv+d6qZc4me3C/7Ofip/Z7vjiR7z1e/GJH/ry5+SLE+X2fbzECb5+
Z5+Tn/Uv+Gx3/W7y7cfC6Tun7rlndOjzJx386Wf6dNa74T+f+9d/vap85cLp
i5M3PfQb/7n9YxZ89YLTxz/+gbt9+KzHXtW40l74cO0OF5/4dMSP/rjBK151
0188Z4FPHXE4+fCpL78ZT+nAjb902D9x9tPZ7QUbnPie5169OB8Z+uwXb/jw
zhM+9pebfn/XBa5ceM9Toq8d2d/+kjiB8xvcOIUvDvVTOH143yuKDpyd6ksf
n748P3X098lnv/YV5+JTXtK+8Dluahf9WrnwmX+07+TDO38Irl3mPIS+vMSf
2hcfjt9xKv7UTzs+Bpdn6IgrfDpw/uk8MPGMzw/iDR+OLw/QwYcrV7vQn+Wy
f/Zf5aovfTriGU5H3Kqv9Z1zYXy4c3a4dRk++/Gdh7IT7hwZTgefPdaDcOXC
6cCto/HZ03OunPPC9R/n7+IE3zkyO/Hh+Mqlgw9XLrznPjlfbn+3TxJ+1zvB
ldv1Ttbp+HT4mT36HXzqWKdPPnzqO2fpff7o9L5u6kWn928Hzn46+jX+xHu+
GXv4v/tp0Yezf8YVffcxtAtcnMPpzH4BpyOu+GHi9OmwE1+5cP7BZw+cPj59
/UJ9e44Zv7G/54zDb/ojvvmk/c/GifVF9k/c/zE/xHdfqOuO8OH49m/p4MOV
C7c/g88e/nT/qvPYlOu+Fh18OD59OtZB+Mrt+iv6fY8r83/8vsMTnH7zRtYX
9pH6HlH48L6HFtz5QuMkOvzf3z1l3QGfOvapJh8+9Y07facoOnDxTIf9E2c/
HetH/KnPfnGLD2envARXLly96Msz8vPMh/rFxLUvf9KBz98rKZcOvN+pyT1k
fobPfmf+M+9nwt2ThJuP4dMxv+IH/QJOB27+RgeuXPNMuHLnfhH+xJXbd0XS
7uYtcHzznBkn8Gk/nRlv4pa++ITTgZu/4Wsv5cLpw+c+AJzf4Oyc+wzKnflf
PpdnjNdweUz8w8Ub3Lxl8o2zU1//Yg9cPhT/+gt89kd5fvLh9OHy5+zv9Pt7
veD48hs79feOI9GHqy8deWDy+Q2OT8f4gt997eDyBpwOXL1mu6sX/HvP+8Tl
a519Q/nm+XD5pOudl/7sr95/5vXlWy+su//7nrnlVQs+HF+5dPDhyn3fy3+3
6WPWvKn1st581T8fvPXb9r2xuP0TOH/i02endfTmP9744y9/642L3w+6pxac
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
I0Jnx+xtmU7MNnbWPhRyJPhGuEOHeGh/pPVPDwub/PJdjN9qB2zP3GdakPL1
u3v5/RFLmwdpfu39NvDnjVod3vuj2Q8z94/87QvdNfxpvjHfeDW+q3xw7Cfe
dB/IlRZeabbeVz/Y+6l03rXi3Nh3neM8xkdmneb/JFjjR7/Tub9L8Lvpc28d
eMHg+09lOzrgO8PHfvzMuAu8lfep8jnnRTj2h2AP9ZH5H+LWtufWspu5P3Yx
8z/o4Of+81oWCEof43FrpFvdhMMP1B7SxZ/UI53nl/IFZ10A/EDMwEs9Chs+
fqa9svtHdFyHLFjZdZzRj52y789q+Uz7rPvi3Gv2W7EqRnHsx/92fnX/6l9l
l4+eZ3D6Bfjowz8Vv2F7nppmv1aunlnL90hv0gVv9EfkuLS3Yx35+lB0wsqa
s4091Gv0dT1d8gs+MFfumceuG7z2+CY1f00V58gXfvvwzY/+s+4a//zwYOWK
18ujHfvH3pfN2+b5B1PvtF7Tzm/b0XvI39FaH9G351Ht9zftfS/js3s3StfC
4N16Bh299q3hjylRd8Hnp+aeNFsHnHGpfa8a65j2vqBp7SOzhaTEe6xddKrn
DHezv8i+/wp8/YujG3O6G7xIv1+euScHKv+8+5uaXeub+zztdV7wwbPy7++S
zuDDHvxw5N7Jh8rv2WPNz90Phjju6bL3U9XOljNh23WTL+ZV4AeNqbVxXZS5
L9Revwbv7Xk/emYfg0/54Lri2R+Plc98I/wTXq8yNFkSo/ihiw2Kj7sX7NgP
AL/IicPzzxcz6/isy+h41a/rg+/7hus8mL2vT9eJgsr/mWufSffsuhivbq0M
n/Uyytc+t4j/g4cd+JT9k9nXlGXu514BvoaPPnzW0fCnfb+ZvZ+K7x10wOkX
wHU/nvSnOm8s80u2vt5ft9Zz0Yhl8R6VD5ddt7C6SRd+t5lZbt79+4njPjf7
3jnWi8+eXnH0h5RA9bN9HpNyZP4TPORLzZnn6xn+gm4XtvhMCXfcd0d+wVlH
tvfXtdr+KvbvlXEeC+KLD8+QO9zMZ0qcoANOvwbeLH7gcb/N9009ahx2fsus
xzrPY8cnOHEF/vjDmcrufZzruTEnGmfaGBnmWG9Fh3pt37tL/Vrw718dOnYx
95c69p8ITn1Bf2iHc1UH1Qtz7ocR/qkuW+4cG2HylfLbthn+V5447NR1SWkn
W3k3vl2+m7n/06534MUaTX69Kcqsa7DOCB//X8725ETabWHaX4CTLusj4Pqe
jowHQk4/HrTtmrmvFftD+r65cmqhaU9sv4HzPav7WEovy/T4H9NfHGuy9WDf
i+Y+VXsfS+iPLRPezg917BuPq1b5XtsUw7fvZbX7F+op9cU+f808sH2/Iusa
rMf9/853gzPfC56udclfs7W649hPq++0tut4aNKwBC13+3y3vR+JfS/gQ7/K
+FX2cf6OdrLnV0/29Kto6jvjN/v+T/v+zN5Jb0JqnjL4sPq1m3w3KNBxXyj1
nXXwqNEffz+e2uxntv0Dznq0ff/niSa5Xd7FJTruEWU9xb4XtNRvVZKO/pvg
2BfHPK19rnnGvOvDh2VOduwbZB3BPmfNegrjPXu/HzpNS5bP9b67wTv1KhoT
UDLQsa/P8b5MGp/cu6/8z3sEos88uX3fJvs3pq2usDQs3z3HvfH2OXTm8+39
jazL2PfGs/5iv5fBeo19DwDrPrt7rf3V9U6Y4xx3RPZO991rhzvO0Wv7w/tK
su9L+3fhsy+rRMxS9wlzwh33EsAHZ38XOH5m/lbnB2bWqFg+1S31G/xnJQ/U
Pdj/rGOfla4L9L8/Y8yEZI8dyzK7nf98z7G/Wv0s4xPi3L43m7i17y1nvRId
l3bpvnJ3DXbow5/Ret+W7smJHhW3D2lXuLVJ116H0vf1pB657J1/6LvBgc7z
Atb9qHHV2ne73sOsc9GPw7fvO6XdQOf8z/N/POh319HO8B1h33uADvuLwPV9
PWknwdkHRXkdSz9hW/XD5n51+94GcNorcMbJ8Ad+O+Zz+XwmXVtHzzXM7ldj
VgbTXmE/5fjp7a+by1YJcuyr1/3Mf0SFz/l0z+EHfZfZ8r+uZ0k7YN+j++pz
+dJpLiZ57KhTanHQ2buOcyX2vWeBOXxefbz51PGuzdg3IemunH/qeJfkTL09
FT5HP3W8h9K7xJP6V4Oeeri4Ddn4Yau3470b5vnB27YKH3MtxeC3Qps32jDW
1/Feie6rvxZ889Lup453YaruzxKxbIPRYV/6roH7en/56Hz3JKJH7jMr3xq+
i8vs0a5/vDpjv4cCjs6zCT5JqQcccLyrYr/Lg3/QyeF5dM2S/gccfNq90jE1
8nWpa97N0XNPJ6qFdypl+LSHXTplGLNk9FPH/YGbSg5dVbbzU8c7Pr9PHJGu
wqynHp4xY0bHLvVz3L+h9w0KPrZmpXodIgxOO6nnU6z3TV6M7nOqZCrzzktY
hXEzvrrpb84Li5+xp+OdMWMqHTD+13ev8jde3fvuU8c7LN0frxn9sobzvaqa
NbzDX/d66ngvibi13/sjTux7/Ih/+90o4g0+8WDbCU6+nh178K7aOF/F7XL3
3tI2sM42b0c8wKde2O+vMR6w37XpuKrTzsJ/pTjeWWMd3H5nx34/Djxm54IX
CWuM/qn6q2Z9PHLNUe66/1zWr+33ns6f86zQc4fxDzhxyLoA7SHjMfueScZv
PS9e8Sl8OcBx/gs+/Qi4W/ZO21K73nLcSw8/5NyExMASgY79JE22P8vc+Ood
B1/vOZdxGjj2sN9V938y/vm6duuubUw7oPcLZVy/61VzE//EOf7R/bqMf0bd
73VhmsF1HDtrZdrnGU38gJcfcjXv6U9mvwHjf/sdq3Sdzn1z9fwtRz0t29r9
0erWtx04+q0WVdn1c7anOv7kO9E+bwvOfAv91IZNzxenjzN8cPjMn+j4XL43
md/T8TnzTjLPpvO0sh8YfeLBfid0RKfqjcJP3HK822W/x0d7aL/3h5/t9zpp
z+337yh3+55YytF+/5T2X9+7LJjx8aIlfua+OFkHtN+P6zQx+Pe5bW5re2Ln
C5xyJF1w4pZxC37Gn/Z7FszT6nec7KODX7vM4t0tTj/U8rXPa4Mzv6TnuHkf
XOafwYP37biSIZdZ37Hf5ypQqEer4vec77TSHtrvwdF+2u9L0r7Z753Z5QVO
uuBzS/Z8lr23ea/TfreRfs1+L5X+1H7ntPumqTsi86Z4LOmS+XKnY873QNnP
Y7/Har+HyzjBfreXcYX9biztDzhxQntlv4/Jvin7Hmb8CY4O+5rse5Uz+b+a
OWtPiodnw+Cvima+pPfecG8b9oDv39Gi8OtAgx8t2vBk0T8Mn/4Ifo4M3e99
mfFE8YQV/mWO5EjU++V0/+2JM5GxjxLM/bHC556roAU7tlyfbdbxwY+l3Plq
eS2zLr/ixxndFvRJ0ve+Kd+0Af+kKlXY4LqPt+6BiiUeJer7y/Aj7jdp0W6J
weGTr6gnrnsLpjxWPrin36FbHo8NP3S+W0zhBsY/4P1K784Ws9rkF5x8ja20
MuncfeMH7vPZsmPhi3I/PTLxI/g71925EycHK9/z0e91v/kxSe2H3yIm76TT
+QwO3yfXtglzfJ3luCuh+eDFt43f0DnyOs6nzEaDex6Z9MP5McYem79qXc2J
k8ok6Hpfz6HhmarP89f84gf8CT6l1pnEOV0Nzv0wep9h1aunU084q3zdTy72
N/m9sV+zbgmOfUTs62gycUzXL5MNvmXHnVO53sarPjj61StcGrB6+RPd70q5
40/44GtLfnhxadEjxb/ZMrPn0XrOeFte9lLa1m8S1P/wm65JlWfu1UT1J/iD
16kL+G5KcNTT/hl6tfr2ULKfd73Tbmn/GzcQV+BLDtZc2znwjvLTP53aqde8
ZL/q2TY2apzqvvI3lr+4qOJPBoff76Vvk2oNU/y6NV61y9vrthnf5tnq2i+b
weHvOPu8y8qnyX5Xdq59+8L/jvK//1Rzae8jBtdx7Pf5M15q8Z/9o7YuXVk9
SHVetTzSrHshg6Nzb2Prj+dDkxR/9lXK5QpVzmt+sR998P3NH1zIWczgHyMj
8lw9YfiMtynHgDmHs/+ROszsp5V2A/+DDz0VFNymtmnfGAeiMyyuXYmkagb/
p3zYp6NtnXzKl7hF/8qGNqOi/3DGeaT/jr9WFUxx+LNzXJ60a0Y7y4t6Gvdy
6fSQ3x6a8ZLgAyd61PxSO0jxT1nrlz631vh5blCfJ8eCDB9c+yPB67WLylZw
y33VybEvXfULmYyf4Wfp+8x/0ckkxeEfmDa+5ofhJk50n16N3rcuFHPitHvY
E5d1w7vEkSb+4aMPvruDx+psJQMVL70mZvuny8nqtwurvvG8nemW8sFJt2Sb
Ww0ujzf4guASoU/GPlQ/uLwvUvzdgGvmfhvBl+Q66X529CXzDpH0X/AZH8IP
Olfm5NqAAF1fACddxuf4GT44ftZ8cR+R6DTd/3LkzYsBilO/sAe8Yeml3l1W
GXuwn34WHD7lQrrwad/APx1rsPLdf/USP7cZkDV5r9c5tR88aFiBWkeKnFec
+gtf7wGQ9sTWod0r65ZnTrtUl5RPOwOedGRsx3J37mi6+IHvJm1XM7UbfHHE
NdWn/bT5xDP+0X1oEs+2f+hnsQecfpl8LVjwvKjvs0dajs/qZdyWa+AJjyxh
k1u7tzU4fNbFzrvMTvYbYfjglJfNzzd8YfYy85P83HzejrzudUDX7/7YcazV
n68THTjtpK1P/LhUuzExzZqNyh/4w8B+JdMbnPVi7Ef/WJ7xtX5pF6btKnz2
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
c1tn999po0dGBeo4n+93re+S37ubCx3Kd8mMB+xxF/0U+9sv3Z3VIU1+E4fE
Ce251gvah6glnXKsM+UFDh8cHeITHeKE+ASnHHe/9J3VKy5Kv3PZZ9ixdD+/
XK4xirMvET7f3ewrgw9+9kmtOwWrxXq0PX6mSMVbRp99Yk2XehatHGN0wNWe
PpVnptq2QfE051xb7A2IVD77NsF1vu7omvupi8Wrjs5vyH6zkALZjn9MMTj6
2K/3i8o+N/Sxn32tB5OPPtu2P1rbAfanVS3z5/zx0dH6/QWOPvwjuXtljPSP
URw++2yxX+d75Z0IcJ2Pkn28UzofLVRqvOGTry/L5h59vdvwbX/qPXvyngI4
fPbrqn82JuUZ0s5X85WjxIHzxZfGaP1lv2Xp6NZvzwaY/Oq5g8553l8uGKt8
3psDV/8EN3K/sy/ao4DbmEr9W8VqnLM/c1GDy1fqrDY64DvmX646sUac8nmP
Dxw+78eRLnze3QN/9cZrQ5ai/qq/Nkf3Mq2axJj7hyVfwR5T3UYFGvvhn286
OLDHd/HabjA/s6hMlurThsYpzn7OdznCb3bwj9N6Ct72zPihlVvHK847euD0
v3pOTfKLPezvpbxIFztz/N3u3YUPMaqv+2DFD/B5Pw4cPu8PEifwebcOXOeL
WuT1yhgf7eH28uveaRcYffa7eoXEfg5OMvq6D1nyBZ93LcHhH+ubZYfvaMN3
65Tu7eds11UHe7iHmXK8MrJ8/jyhkVq+dn0B571RcPThf0oc3unJf/nDHvS7
tX/Szr9ktOpQj6jX+i6DvI+GnfB5ZxY+8WnrwB+b6+7eP1rGeqwtn/9U+tHR
Gv92u6T1Ud5FQgecdw/vZmne6mgVg5PfQ1eaTHDzj1Ccfe/lg1fnSpPPtDPg
XRb99PXHQ4a/tmqGB96/GBw+7xF0H+YVN7tNlJY79r8YnOnY2/PGb7Yf4JMv
9OutWOPyY43Lag/lqPNj8s4sOPq8q/tpvH+JetOiVZ/yhQ/Oe7vFOlcfU+h5
uPYj3JMf9nptg1mZI7RfA8dOXdeQ8w7g8LlXduzUwY/a5oow99NaOorLOYVd
OYfsu9fCtPP44dqXOZGjxpj+zi4v+KEvG30adSbeY96aZ/sfLTL9Mvwi35xp
tnOl6ZfBa+50G53vYrjqYGe2u1PTvP6/8yKSLvW0dmyB2ksKxau+3Q7A57we
OHzO99X077H5/lOjo+/kdqxUf8u7eLUTnPEbfM5jgsPn/CbtMHzO/YHD51xb
cOe6Fyv8a/p94md2S78XezOYcRfxTHsLzj55cM8+C+NruvmqjuvuVGnfFjPp
4regg8X7564XZ9YZrX5z2m/V8/dcsN7Rn+p6q5yvXHW+4qDiZ03/gv6MUW6D
v0mK03zZ5QXO+YsZnX67N8QvXnH8n+XEheHfhZp4sMsFPucTweFz3hD/w9+R
e1No3hamXODTX+g+N8F5z0jP/0r5Bjx58znmkME1fuKWbGp53OCkyzsak75p
8HJ/ETNOtssXnHMlbtNGVOxdwpQ75dvlr8w9P1czfPBnhR6+v1YvVu2xx13g
nGdpklDmbN6SZtyr720N966zonu8tof2OETXR+ScETjtKvwj6aq47yhl1hcY
n9T0dH04obNZzwLv/WunjQEr4xVHp9WFManiZ5vxG3FFuvDHbL45I/zrSI9N
DZdlzBgbr/0g+vDBead4y7gM1SZ5mnGj3f6AYw920i+g36hc+xs/VDPtD/Uo
X57jq3YXN+2VPb4iTjjHdOHpjCpjvxgc/qi8U+YO7RWt82nYqf214IzTwOdG
RU5rHvNI+XwXMA8PTj+Ljr6nLP0afOovOPo2H52ejTO1ce0Xre0/OPH2av20
8MGFDF/jnHGC4K2qnPppbFeDs06h57wml2g4v2WE2gmOH9R+aZ8Dg+6WahQU
resXlGNM2dslPXdHK59y1/GV8KtGLPsl+8EIHUfBL53v1F/3Wxicdx7RR4d7
4NHnuxh9cB2XCm6PY/FPusOpb+wtaHD8g46OY0WH76MXbVqXdF8RrfMnlCM6
4HxHgM/89/SuiY3uKj/wxeLjn9NE63yI7X+dh5d3V9GBzzt68NFHp96g80Xd
PkXpvArpwgfn3WS+i0kXnfue58aVnx+hfOKQuAJnHA6+u7Zv1ss+DxzjzJ4+
KYVdphp7qsd1m9r0XqTq2OPDgwFPHlZpZnD8AG6XLzq8e3vXt88e/1cR+i4A
fPTB3/Rb7ZrzlSn3uqmHjFr+2sQP43PeWbbjBJz+FHxxC/e4OlfDlI9/4HOu
Exw+6XoX7fOw2SnzfiJ+e1Uh1Ofyf/WJ+ARHB37fxdNndshocH3/QsZ7jLex
h3RZz6K/Y97vUPHKBQpkilJ9u76Df/8mrOuak+E67qW+23aCJ93etXqoT7RH
aPWrLQ8XjFJ77HaAdyfBqUekC44+7Qbper3ZtGx5/litR+SX8YbOf1r9Du+5
wN/mM6Xb09WmvoP3zTXSJbpLnOL2PAN4//w/ptTwNzjr4PDP37u89tTtOLXH
1tF3u6Rfxk70eZ8aHD7vRzN+pr7ou9XSn8LXc9OSbtTP247WPxeouNegxldq
/WHSBR9cv8oPaz5H6Pcd3798NzEeAKe84I9p/WzCX0MMrvMV8u6nxrOMN5jn
bDH05vajrobP91SeLZ12nRth+ODruy+O/v1GpObXbt903VnmD6nXxIPN71jm
y/lM1wLNe8dVv2SJ8TfvAoNjD/o6P/Bd/N47/5UbfFsfPGxylv7tZph5V13f
91nz1jefwSlfvoPA9f243WXb5vwvjpfEPSnTppvpHylH5rvQ0XtIJK7AeT8d
nPYfPuNtHedIPOs8p+B6j4rg7FeBz/wh6TrGCeIHvguYx6Odgc/3Aue19Z5h
GX9y/hp80aFBX0JcDa73vImd6OzPX/JMZFtfxbn/QdfF5HsWvu5nlnlgcL3v
TnQ6Vmru/o9vtOL4AXv0nkmpp9xTgT5401QvtiaPNXy+c/Wdd+5ZFb7ilR/G
nMzrrTqcZ7f53COB3/A/+WI9hflhcNZr6McnDw/tfHWx4YNXzTJmwodGTj46
nS40GNH1pr/6jXPx2AN/bcHGO/v6Gz/zPaL55f5YyRf3AIATz2q/+IHvTcWF
z7wN5/2xh3kAcMpLvx9Xt3vQYrThgxcZ07TUweaGzzwDOrruyXfcvoVdJn9t
cOZzuJcD+5n/UVzsZ97g6rdrvmqY0/DBf+7ZMN3YTIbPvAQ62K/zQi++i8r2
LNz4QeY34JMv+BejZvpkvRCuON+V8LW+pI3fGvZLgo4fwNEB93w8u1PqDmd1
/ge/kS++ZxWXfOFP7i2BD869KPCZT+beBj2vLfPb4MQz7VjombJ7b62Mdaw/
Lu96xj9VS8NnnplztfD5DtJ7b4Q/6eD601kPm3TxD/rcQwLOvDF81k/pR9C/
1eTT4urZr6sO/Hd93Y79VNRf+WueJ6wemmh0+I6Gr/cAC983/TeF180z+PJ/
hu1/ON6kq+cfZbwBDp9+k3PQ+AH9TqX2zMrgYfwDn3ux0AdfVqXvmYxDjD7f
TaSL39Dnfhgb554Zyovxp8YD+wFknKb3yHGfqrRv3Jei968Kzv0qxCftnnvy
ER+vqkYfnHvP0Ge+S+2xdMCf9XgZkW+sr+pwn4zWX1nfoT3En8RJUNlP4f3e
O3Haf90PKesI6ICTbppMXWYsjYtWHfBdbep9eDUl2sHnfiq9l17GaZQj+wn5
/iW/7CckHsA5nwL+oeiElTVnx5pzHzLOhM/+B+IB/JO3a7sFVw0eO2Xfn9Xy
GT7jQ/jow3/mXrPfilUxijOPBJ/9jdiJ/+183Vp2M/fHLjEOPv6ZtLlQhubX
AnUcC46d8LkvSO9rlXknypHvSq2ngrOvm/kBcOwkv+AL1m+/sqqZwen3/x9Z
Zx2W9fL8fTsQm+Oxu+soFiqC3SJ2d3d3d7fHDuxO7LqRY6KgIgIi0l1218Pv
evY1+732/vN+82Z2dnY+2zsDn+8UPvbB38A/bnnV6V5TP8FbBGzd8mlztPBZ
b8KnXvgV8Sflvb/ar4OPPdGzU0TNwDWDowWnXL5r5HC+L/MT4hur7x2c/hZ8
lkvJ9KtLRguf+Tx8vhf4mwb3XnrjtsaZv8HnO4J/71XM+47tNc55NOMmcphH
gTNeyH0DNc+Bz3k3fMm3pfiFKtjfmv0zwgr/3nFCv/jgSKkv9x/Qn/5W5u3b
HUbcnhAtOHIuL6nRZkk1zWffW+YDSj7zBJkvKZz7CeDUi/sMEp+NPDjqHAGc
cjkXYN4Czr49uLwTV/MQ5OTaWnPF4Fr3Bf9a/WKWk+O0nsyjkIOe8KPXJ34/
mjbCCofPu3Lub4BLXBR1HoHd5L6lklOu5pM/do91fYnfwvqdPObEt5G8twon
LgT8LFttS39Yr3H4fSu3yHPnlcZ5V4Ic4m8gZ+OgX/sTPicIjpyEr3U2XG+U
KHE8OGcx5YCTt51yJe/2Efc8AwokSTwicPIOE7+Ics87pqSxH6xx8oHCn971
7MXxrV7p91MKp1zwn5k7lvFqlSRxUThnabzC6a+cq5JFPnjrTUPsXuRM1vmz
OC8+YJu+yTbNByePPHz2D6tebNg21z7NB69tGdbGv0yys2PcQLfCpwJEDnmT
fy5+NGbJ/QD9rk3hEo+Lc715f+drlSlFcPjkuaZc2rf02XaX7xdJkrgc2Dn/
iZ4l5+1IEJx2Cak64P7CYI1jz7nr/rxMtE103hV7IO3oWaGCm/5QbWTj4ZO+
3rXC5f3y6+CW5S9oP+E8q7FLydZ/RicJH9z0Z9rLY1V3L+9Vmg9uNyAyudLn
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
n8t5scL5jrjnDM73Ap97WeZ39K38367vvmv9uWeCHPTkPj84duPeOPann2Hf
D38w7xvDp78Cn7C1blhkvkjhsw8DHxz7cH8Pu3EPHD3RB/m1+pfflpAlymo/
hPGCPGXcG6R/kzwvig9OHGbwoDNHH2Sx03z2GZCP3Vi/gBMnH5z5FXz2DeBz
bsi6Hhz/R07NEfdcD83R54zgrAfhc4+aeoFzTxscfdiHpFxzHwOc+Tz7ObKf
oOwj9+5YB6l4VrK/odYj8NnPgY+e7EeBy70OtX/F+I4c9sfE/gpn3xW/Nd8j
gPNeHpzzXzOPEnYLurngeuCFBAt5iMAv7ShQwelAggU++jgW2TQpYnCi8MHz
f68Y3qJTokXyorJuHTU+oqhtksgBbzLQv8GVzEnCZ1+la9fZ++YsSBS+TXDh
JyM6ahw+5WYsWyV/qxGpfJXXCXuuXv77ftmdWj741X+jb3ns07jXsvtLLp+1
5rMeabz7fZYHZZJFH/CZm7sPHlBC48zbkYN9qG9x57EninzWduM7ol5mHqJq
E1r/bRnmZTHzEP0887jwleXeFjMfgW29TucG+fhYzPwCJk5eA+SbeSgmpj1d
ZvGOZxYzf4FfmQN55lbWOHko4Jv5UyjXzH8B38zXMz/UIXLKjtsWM1/P5ukF
wwcP9bCYeRbgS55x5bf77xXq73w1wWLmZ+l+tNGcgmnvWcy8D+DkHcOvBt1d
mzHMIdFCvjbwzlNLOzbNnSh81pW0I/ze32PLDVkYKjjtjv90nfD22b2cySIH
fJ9j5899P2n/YT8Qv4LP+gL8gf3Dm+lneMj3W6z095l+qfWGD+7QJ/LouMUJ
oifrI5OP346y8X1y8ZWuF3iv68MyFbyg68X35T0icpllldZT9otqtTjZbUKS
yAHPEhMccb2VxrFDz8+LnlXw1fj7Ijk9Trnq+kreWCWn3OJzUz5sS7KYeTPb
el2ylE/rbzHzZr4tU2K4XbVAi5n380rV67azagZazLyfJs45nSmffDrgZh7S
0pssPbxT62fmIV3t2LJ5xRsvLWZeVJOP/pe++p6I+/uFxcxfEzLk/ER/7+cW
M38NuJnPiO/RzF8TfCjd0UHJvhYzzyl2MPOcdsz5fcXvA/4WM58pdjDzxlIv
M58O8s18tfDNvDPwzbw2lGvmr/HKnOz8pZi/xcx3gxwzT9n0KlXPF7qgcfLq
oo+ZZwc7m/m7a/cfWjwitf8w82iv/KvVsRm9NM57E/ie57aN/p26DmbeOHpj
XPNVqd+xmXc7/Piira0PazncYzT54Mh/sK/b5iKuOp84fDPP+O7SgxosH6Rx
8oPDN/OM/+714MMEnxApF9ypTxeXZy4aR47JL/gn4PTigrq+Zl4k7GzmPzL9
n/ywtJeZ39bEuT+PP5x91mTujptPpJ+hPydvu7zHbLS8f/DnBMvj1VXy9d75
THDmUeDIqexT/njzBlpOhn/n3roSrOWT1x4+/TB8cLspW8Oj1ms+/efNgjNu
lRqcJHzZ110bOPlqkSQLeU7BmRfR37Kv2zGpt++gdsnCBz+36pble+Fky4Pf
HTevL+Yp+8ye1+anPLmQLHIk/uf9YdEjrmuceHTwsY/EF40d0aCQV6LgvO/G
PvkPhOctN0jrz7iAnthn2BKnpx0LaNzpxPMzk+dofv/R4TY1V3rL+M44iD3B
y6yIDh2/Q+Ps+8FHPusCsx0D3YsXXZP8WnD4+Mm7Dv+0bz1P88E/+Xu6nGqk
2515MuViH+IPg1/5nv6ua38vORfAzsgH73upxq5d5zXOu0j4/e8+OFHkvo+0
O3aDD34xV0dLn1CNEw/WbBf8wWXYQ980q3S54IU+fZ7q1UH7G+fF6CN2Vvpv
KJ/pq2+ixjmPbhyYwy+gSYrIB8851HH6PpsUsSf6M38A5z4A+oOj59rhXav0
z6b9Vs73vRbsKH8jSXDeBSMH/0d/+xUHbRwLpwiOnpEOp2IaTk6ReQ785UVD
v9oOS5F5F3jVDLmzveyh+RKvySfWL7dF88FD3QvEvj6XIvNn5BSslrdx0DiN
w08XsGDG9P+0fOrbvM/+5/UyafngiY39ojN9SxYcO9PuzA/Bt9tX+bJtvOYX
vPnxfN8hAdLukhdYna+ZOOXWzuFgszckWfQHp92lXlPz1P/ho+VTr6JZshXY
fEHj8CW+waZHWdPt03zwowu2etTcpv2QfiPBNmnx5OAES/5qziGLvt2V79rs
BzhfMOfhtMuMJ5P/meCcIrjc05g3J9vUrSkWMy8n6yMzD+mdLdlrtvt6V/AT
dodnLHO35pNPk3Wcma/TXJ+SD9fEyQPIOsvMo2qWS/5Q+Ga+V8HD5rR36vhK
cOSY+VXhgzd8NbNemVaab+ZdRX8zr6sph3ys8M28pdhN7lcrPW+sjqm5bNI9
wbe0Wth79aAkkWPmJ2V+LvfNlByPvDM7F9+xT/QRO3gf+ydxqsablN3g1nOb
NT//uDU5y6Wu09bvdOnbY8c5KZc8ziY+vMXwIaUyW8vxTLM09aNNsrSs0n/j
/mHXhI99wLmfjJ7IN/PPwmcdBw7fzNsLH3s+3HL+asXUdTV88FO1Bj69UzxZ
9F+9+l0x97faf0w5xxPajFz3TPsJ+MTyJ7b+91HzuWcbmz/1sx6ZIvK599u8
RbsvWzNqnHHhYJsF0SNuaRw56WbmjKyR2o+jP3IKrm81dPBXXS/yrg7NMsDl
n9R+Cj2frkr0ORChcfSUe8uNC2S911bzwc/Nn177+zjNX7/z87MzQwNEDuXC
z/xmXvcBK5Ot9PwRGZHv4TUtH/xOicZNf73W8rk3jv3xf+zTIy5fxp2TUkQO
9on0PrppWyGNwy9Zdqr9ky0pVu1yMluW24+dUqzsQD/A90X7ttyZNt/yh4mC
w+c7Mr/rjD7/pS1dROPyzkLVa3r5YsO33PURPadvntO59jndvmZeYMo18x0P
t3s2wubGE4uZX9jU59KnuBPl9ln3e+RBRv7TCdXqJVzU7YsfSn7eNf+M+7Hz
f74X9f2y3me9RrngtoF5KpxwDBOc9RfrTfSxjygwMt2gWCuc+97IDx78+cGN
NSEif+OX/w4X2xksfNaDe9oMDHK4EyT9D3yfSTfTFu6h+bwLRg77ANxbZr0J
H/xw1ZWOLnG6Xqwf4fdvFuZ5cMlr4VMv9AFvObBlZAHfUMF7by/yo9b4WKkv
5dbutjL0n83W6/E1dzek3Xpa7ydcaX7o/OC7QWIH6oWe4DP32IfcTNE4+yrw
zbztrIvhsx9l6omd6wXedhm7OkT0pB2RT79Nu4OPb3Ei/eTnoWIf5MMHL/vw
yLV+i18Ljh3gsz8AH/ms67GnicP3HOs1+vmLIIuZXxj5fL+yvxT7KmL25lDd
n6v9bdrFzDts4uzXmfJpr449/uR/OyfcYuazxg/hsw+Pn8BnPwQcux15uC5v
x8GJ8l2beeTBzfza6E9/zv4e8s185SYfObPuhYS+rqFx9kvN/Z8He10nRi9K
kH7bzGtP/2nmtQe/km96nT6d9PzB7N+kXp2qts/mFWIx85LjJ2Ye887zf190
CwmymHnP4Zt52KmXmVcd3Myrjt3MvPBzl6497moXLjj7VNI/PGi7I8Mhf+GD
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
wF38RhVYcz21/wz0eV7TS+uJfPaXwK82OPi099twC3F6wbED+2ASh+R8e9si
JzVOvBGxszr3wW/lu1N88G9nanXreyJacOKHmPt41Av95Z6e0md0qX+zfxwc
LXzko4/E2VbxZEwc/vHSJYd3io7S+1HqPiT3SWQ/SuE90/Rts3RvsPC5x8i9
Gvg/szcoe3uXxuEPLZKja6UyyXJvDT73fs13XsRzEDuo9kV//A0+eKuVH6Pq
/q1x4s/ARx/uHfG+D33Av6X/q//JjmHaPv/YJa7IliT3guBz7xpc3i/M7nfJ
/UqCvn+o+NzjAoff/1z97VeGJ8r9H/jcBxP8zPJjBTPtl3aRe3rs2yice5Xg
3Ls236tit/FjbBu3yBolOHGH8B9w4ghhTwefI9kGzQ8Uv4WP34LTv4EzX4VP
P0lcEVMOeRzMeRryt7qW3tv5h/4e6d/M+Rj5JpAv81XiliyuUbzPv9HSP4BT
Lt+vxF2ZVqNR9rUaJ94L5YKjz4/fYZ+qdtA4cUiQ3zA0e/+RO9xlXKB/YF8F
nPMCcPLCwKfdyTtj4tz/xA7IYXwEh8/4eOtrseodn2g+OP0k+2boufL2CLdK
F6IF75r+XdVHz7SeafKdtW00Y5/Yk/kS3wV42OPg0oXra5z8aHIequRz7078
VuHoybhMvbgHuLpNdRvb6ZFSL/DZP+81HO8aKfwsJacXtwuPl/aVd08qHjU4
fO7pMe7AB2f+D5/42/iDvJ9S8bdlXFb14t4vOHEGkC/3SxWfuBMyLiucuA0m
HzvQr9IvMR4xT0N/mQ+PKN3nY2o94DNuMn8T/1TzZHAZF1S/1Ll+lgk1P2g+
+PCcmerVeK355EfjPoPse6v+Hxz/QQ73E8DJvwaf75Hvl/kq8sGP7ej5e2IJ
jUscIXVuKN+XwlmPgPOuHPngyB/YeeXLBr91P4CdG1dOCS6TGCflkh+Q7wI+
/Yz5vSCHe3HgrMfN7xF9uCeA/cG33Otda3Idjcs87frRVy72cYIzPzTlo8/k
PR4OvUvrdiEfHH4CLnnfdk92r14yRuSDs98Cn7xd2Bk+82Rw+LwjoL8Sf/Yb
WD1tHet+lXJZR4Ozz2D6D/ei+e5oL+5Xm/MEvus/iyZ/2pDqp+gDPnZiw5N3
bHS/xPoaf4bPPWr6AXC+d8Y1aV91b9ycR8G3WTFsZdAWjRP3Hr7EA1F5Cuif
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
n305JZXHd+r1b49WflmSxD/p9zb3bJivfvYk8Stw9p3gV/sx83ozlzC9T6X4
nCfOL/3nxNchmk//zP4hfHD2wbCnWS445/VxH/K72+3Q+jNOsd+LfM6pZR94
7uVB6/7stuIj50FKhXRXtwRbboXNmTdjeZKUa/LBHQeuuOLiGiz7bLQ7/N9N
/jqfa2yS+I8pB375TuNKN2z5SnD4Q9flb30m5pXs24Ob9pH9BHXPkH14iUPI
PCH34Ol9Omt7Yv+5/t7Jj0KTRY7Z74Hfmm7fyCfQ39I38ezVqleSRT78jdtH
lxxVRPs//ViMZf+KfQ31dyT9256mibcnaPlmf44c7g+0vjiufVIu3d/Sf3KO
QLtjZ84FkAN/Zf7MCxd91nYG3+he7nLp1rpc9Ck7u0SfkoPeCE5/NXN/tzvd
l2qcfglc4jcqvs+DNZXWHdM4/KGhV9ZdbflGf1/qOz39evyXdws0Tr/xffjS
Css6vJH6wqdccPg71kz++umUloM+Qzv2utv7vOaD33PLWXmDRetJfw6O/dF/
aYPp37691Dj8es4eG267afuAow8440KK+/F+lZ/pcsGRg3z0LJt1Xrl533Q/
TD/ZsXDBXgWz6fqa/Sd4U7txD8+mjkuZNmSosKS+lo89m3/c2atwCa0P+Mb3
nf7r3FPj2Hmp14v/uo7XcsALhqcpvyCntrOpD/jKns4p0c2fWWJWVe5fNVbL
wQ6tU/beGxD/P/jSZdkuhO0S/G3LejGWl2eFjxyJT6vsDx88V4EXeS8GnhW8
4fqbX5Ojdwn/tGveKv8mav1NOeI/c172z2zrbmkeFHZv4EctH32CBp3uX+2X
5pvtDh+/ujZ9Q+VNLzQf3L76r7JzIvV8Bhx/kHjISs9MRQd+CH+mx0faET8B
p72ubWx7u2067Z/w6z0u0rtoHY3DB5f9c+WfyEcf6ot8xnH4+Bs49cI/wc16
gaMP9sE/ZT6v/FPikNO+qp8BR0/8HNzsryhX8jOq/pxzMcrdWNYr6b67xuVe
gernR74vEZaxoK/VuskvYFua6R6aP/ft8oVLbJPlvAx+3+k5Fq9y0Th85ufg
2Af56DPb8XT9bu20Pvf27zsTm+OFFV/uG7hNydLyR+o433DJggVh+nyNckOc
GsRfLZAsuHmuHdxrRa8xU17q/kSNO/DN82vOMakvOPzOGS+/+OHuI+MyeiIH
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
HTSfcrHb04ULDmVMF6Hn/2rcwT7Mb+Wep8Lhc88TuzHe1WyTyaHoOGscOyyf
5t0mLHUezfoF/U09PXq+f5H3W4wVDr97mvtLKntGifxddQvlbrNS2xOc/hM5
4MjBz7nvwT6tuf/j0n1/us3b9X6R3E/ueePbz0/W+1Gcx8m+usLZZ2A/M83p
VRfqj/SV/Rn2DeiXwJNWX+icxsNP8HubHns97/s/+wx1S68LTP07fPZh6K/A
HSJCI6aP8BUcOfAlbpLaL2W/xTZsTnunjvpeDfUiXhY49SLOGPuf2I24W+DY
jfs57HPCB2df2uQjx2HXoUlNbjxxJp4SOHouPzdwawW/EMHRk/pyjgkfnH1a
k4+cK41aPy1uo++hDR3i5J31jrbn9F8P7JbZBgkfnH4VPMuJCh07umic82j4
3O+CT7vDT6lgl9Hrt77PSf//1aZbnZFJiVb+wH0Jk099TT9EDvtdlY+M6lSk
/XPRh31y+OCbi2buOzebxqmXeT8WPvuicl9I6UO5ck9P1Rc5V/JNr9OnU5j2
N3UuxnsQOR/hXEx9j9wPgQ/O/RD47D+LfOM+EvUCZ3+Y+wMmzj0TypU4P+q7
M++/8V2Y99nYN8ZvwTm/oFxw9i3Ne3fsi8q9ygOFF79e90rqSz8An3MKcOL8
wEdPuSes7i2AU1/uJ4AzH5Z9pFXb96az0fsk4LVdBhWrmRin15tq34Z9GPge
axJ232uvcbeBhV+dsuyTeQ7zQ+bJ4DYxlz3/q63xn9f7VMkYr/mUy7y0bL2/
ShwN1+XKfPVniNtLz3iZn186kNV9VLK1HMoteu3iKs/iGj/crmu2PT7WemIH
9htlfVq3Q/KANbq+4OjTss8c98YftD5yHzulw7CK9eMER/5wj1qzRpbWfOYD
v48HP47bEik450rmfg7ymeeDc5/c3AcIyfnl9YgTUVbzdsZN8z4e/vYzX/34
Exn9pX/I0ybx4cYxmu9Y+OXDdZl0P0N/gpz+30bl2prZGsc/rd7FKNy8n0+5
5v0i7J9n6N/dj33R9nTNeuxr1S26vZBDfWW8qOYcsujbXefljdoe6eId4tx6
+rvIVQsSZd/g5+Duz/LsCHb+mbljGa9WSTJvBO95xD3PgAJJwv9/bJ1ldBZG
04Zxt0KA4O7SQIEigQRpcLcQHIIUKJpSoBR3h1K8ENw1uD0hDQECEZIAIYS4
K07w7/2x1yxnn+/vfe4zOzs767szyOn1PLxT7fOpwg8c5F4l8661fO+Fnw7n
7/XMYcGxGQWa7tTyCxX13Bo4N8wKR37cjAMbneenyroUfYbV71jc+5nGj5Qu
nCc57blVuVNXuH4KGBvm0MP2Q4nmQVo++KlLLtkD9qY52O6PLlFrtMbRB/ng
5+wzsjV21Th6pmT9vPFa21SHEbfvHq9wx98h7vjUGmt/ChU5cu+j8PKHal7O
vl3jyK9+pvulOxW0/BOW39vfc3sqclh/Iof2Qk59b+89NX8MteKX795/b7n9
j630CXy1Ynbe//nHun77Whyemi588MkX/Q5NqZIufOeAuT27ZHvssGjV/SmT
C2o++Ki0d+HNrmv90fNY4zvZJ0Vqfaivff7I+XV8dTsip0jpSVdCe6fLuwXa
nfZFH/B8WwtVf/2/9R3yoxqMen9g7TPhg8Ov/OLftH6ttRzacdPoL/tS3qUI
H5zzFvghWRMO2YRrfXjXUaCoe5tuC6LkfIN6gdsed6k6f4fGU7qvSTz/UPOR
7/p8gn+ci8bRp9iXxTUH/x0pOH5ef1hI0VsLI638n3I7bds+r88Pup+CRzQc
eWdRuJazboJNr8rLrM+RVlX6mpzSTOPynkfJcU7M2SmjeargGV6fh8TkiBJ9
mI+wp83I2PR67zQfnH4NP+bS8HJdfrKWQ7mFyrtXG9BX17dDqX/2e29/6PDY
pWqdnm4Zoj94s4+LSyW0zxA+fl7zeJnuXcprPviyLn+2jE5Nd7j7tc/mDZW8
xD8vhr+1izifLnzwdivblCy6WuP5HsfvK1b6kfDl/Fn5oedqZ1+/1WliB/BC
A69njJmmcedOgeMPx+vxk3kZO9g55Lv4wlXbp/rDXz4Xcw4XPnLod1uG3Wv+
29s04YN3+XuMzaOiWn/676GTP+XIXyFd/Bb79Ak9EnHsnMZtCj5/7X43WOor
++4aY4MbVg0SHPsj36lIkM307ukOdkWdD+XMESjtBR//B6849vEit9laPnib
XMdLnrir9QHPseLs1dMFMhwuf8x5u9cIrb+pD+0Ykxxea9Y1jWf1D03tUkq3
O/+bnK+6ZP411lfszPwOznwBXju1ueedET7CZ30CH3uyDgFnPIQ/dUa7nTn9
/GXchg/O+AwfOzCewwdn3AZ3zD6jfda32+LPrGfA8Qdw9GScl/8snVZvnb79
lsO83M2nFuycru2gcOZlcOQzLxPXFz72R8+swGz1wgt6WeHwaUfeBSEfvsQ9
TskRd2aorxUOn3EAHPmMG84jKyX4VwsS+5t+myupis2ybIFWOHz8lnNv7Gny
wfFnia8+o1fPZVv3yrpC4rorvPmSrgt88qYJf0HH9xfPuLiLH8r/qRN/zPff
dlbGJYn7qnDGbeJ+Ix85/KuCD048aruKHZ88HXPVqlzwdj2qdvk2SfsD8vFb
iROu5DNefX7/2/7ajULFnsjnHzF+Di7n24qP3cDhs76iXPis0yT+84GU9c28
/a3GAeSwzsF/qNc8x36tyo3LEL8Fbzm/dKnOeTKk3cEbvhhSurJF49gh6NG6
OmlnM0Q+eNWay7onDtJ87Fxx76vuS7ZqPvjkl8nT5jtoPn7OfCrxt5X8CNfO
tUt+0P0OOXXtTnY7GZEu7zPpR6wfeEeHP4Ozr4fPOxZw+Lxj4VyFdpF1kTo3
APcqWbnJqZ4az/c0Osrndz/h8x6V+pr6gPPeBnxD6soCE8Z4Cp+4DbQ7+zL4
4LzfALf7/f4/t+pZ89Gfdybojxz2g8TBEFzpQ1xx2oXxRPxWtaM5zsNnfpF/
iApn/UB8cuSY4xXtyLqLuOj4s6kP+O79hXK235busKHQ8bAKFyxih4wiswYu
98/Q6xmFz2zWwL5/jMYZb+HLOkfx6068V/rGZ42HXDtZuIZXoJV8/K3l1Z+i
natn6nWCwl/NGH29WnaNL3jds889Pz+Rk+9K96fugX7iP+CsW8Dp1+DFjl+d
+3WtRevv3KRD9NVAsTM46yXaBZz7F+wJzrpR1glLt+Z+mT9TcPzQtBt6Nj5T
KGbTnkyxD/icP6fmqbc0U/i0u4tzPrcNMzQffF+1SdtqD8qUcwz06bGu0bGB
RTSeda7uf297PLTSH/t3yb/72JuuulzwmglNbV1a6nah3GHPd8543VTj6N+s
qXv025GZsm7EbsinXcCxG3zahXLhg+NvrKtpL+yAHHD8DT56oj98cPyQcpFD
v6C+6L/KNyzA54SWD35u+uOR3gu0fdCfdocPTvvK+0xVLv5Ae8G/aX+y3pd4
3V7go6pGtr4X+p0fKjlBxY6/+RSg+VKvd+F57nplOrjPfTJlXJq7nu/afvzL
Lkn7D3ifHtFuvhkaLzb5S2wRNw8rPvJ3lPll+6gQjWPnAcFubg3Oaj3BsSd6
urdxm7Qw0V3kC67sjB3oF+DUFxz9qS/6wD82/vSor5+0PuAxw0ve3Ppe470C
xrfK5qrt82L28bSc47Q+4HJupvoj4xL6yP5LrR/Qh/5ltrvM48qvsANyWLcg
R9YDxZv3HNxL24F28brlWG/EEW0H5LzLendt2X96fABHf8pl38e6CPly3qXW
PzKeqP0g6xyZFxTOOkf+26r97NgThw4f3aX3++DMszIOq30361vkw2f+lXc+
laN3XHV9IvMm/Lt1XOOTn+j9KfKpF+tMGT+V/qwzsSflNrzg2K3Y3nRt57Cv
VQf6P7GSnzbxfbYXHhqHT7lF+qxYkjTlu/ZV5bJ/kfFf2aGZZVzXxzW0/A5/
neh64h99jgGfc4+sjvtcBv6aKjjnZnIux7vKwiX+K93nO/xe+zYhjffKeYsp
H5x9qLyXS/X4rcSZcKtzGM6v2GfBB8+2Nr56g0Kaj3z2HXL+qfw/4eiaVyk7
9XoAHL+Vc2nVT8HlPFnhw/bNPxJbWuP0xwHbnI9W+FvPR+DMa3JOruSY/BG5
p/X3uOAr8zLn57I+V7jMU+rcA3yDS8E7zpd9pVxzXUT7sm6XuAGcr6p1r5xv
77zeoe9f0Vbv6pFftvzwHlUeaf3REzxqkGPCt8dh0u9YP8t5jvLb6r83Srv0
LUX2reCOfQecnztZ85HDuzj4nCMhnzhC9Bd5F6f4jGOcV0s8MYVzLi15wZQc
znXhv7jbOXRHWpB+Z6jilqC/Wd/w1OTOdT20HTiHwW/B5dyJ+wtlH9lfKxw7
wEcOdoP/JmupjfvzMCv59Dtw9q3Iob7gJ0ZVm1TRPkKfV6v/bvRHkaPuqbEn
4wN2CD1XtP+E7sFWOHZm/CF+F/VFflTj6Lb9Qi3yD1fe+ah5lv/O4PIfVvGJ
B8W4If+U/7wVNa6p/g8LnrSlfJ1P/9vHuHca6fRm0z6HsFJdbSsn6v+8cj+u
8GyV5v01a+M+wYMmTutw5YnmU+6Oo4HT0j9mynsA+JNfPYi6kq5x+DG3qqct
e6f/F8O/WKDK4L7JGmec7LNx7vu+37QccCnX4FOuqSfywRlP+N9nxmfAbptv
bcz9r/NDhyObCtp5fXkk/Zd2l3Na1V+Sfuo35P5wfV4KzvkYfOQs6nn6wLD0
VOFzT4d83sPIObxRruOyLrnGFdA4cpDPPSnvwdCHeQo+fov+9DtwU0/HvdUb
bh0fZHVejZ74Pzhy3nypWzPXbc3ffO2PRkUsIfqeV703g2+ey6E/9ZJ4U6q+
F5eNabo0X6qc+8HHPnEzPs25klP3U3A5Z0gMvBf76ZHgzAt9pnq6l9qk+6Pc
06n/5ibu5WB7InaHjquAv9GvzfgAyOedDDjykcM4QHwAyk3LdcRmwKDv/vXz
jkiNJ6VanHausETHGZD/dPWyKpV3tsYb7/jWdvF03V/AXXrnDL443zo+wCm3
N+uSumicciccvjhnyW7rfrfu7lqH7oV1v5Z3vEPcbXr21Dj84ravs0eVsh4n
twy7WvDycV0uelJf0w49nMZurHjmu3JLLFn5/PV3456Sg53LLrl9s0+w5oMP
21WmRZq/Nb9xfMkjl2/p+r6oN6fhkygPLd8YJ+Fjf3mvMrPIst6HM63eL2FP
M34C9QVnHEN/iUumxkP0B5d/Cso+yJH4QsrOpnzq5dnYtfflSA/9jkjhUS7Z
egS+0vMLfoWfy/sr5Yfg8q9KxZ0w/Z+4GeCUS/wK/ETiMqk4GODoj90oFzn4
ubyn5Z8L/mmUK/5vxDPBz804jaw3dr+6tLdEG33+zPqT9wByv6DG1bDJZz8X
/Zys46GFJC6+kBgl61tw1sN5djmum7opWcZt2Y8UKZFy6H6yvGvlvIJxj/Uh
OO95JO9to3LN672/bcVnXc34TL3AzfUn9eWdDO942V8gn3UsOO86wLddeHQx
/9EA/c5BlSv3jOu/PU0tpPVEDu86uA/ivwbvxJgXwLOVj85a9VD/y/CK3n39
YgnNb15r/YluN56K/cFpR/AJS8ucccmj8X7LL9UsbR9lVS7tNauoe4c83ZKF
L+8i1P9oma/VOyv8QfL2bi1741R6uODwZZ/bL7ZIeIbmgzfsYF958thkmU8p
FzkSN1K9xzBx6st7QsoF73H4TeI/W/W/GOzcp/6KxKxB2j6Cq/9l3NsiR/5B
k8dZnV/x/kHyISqc/1aSN1Odp/FuRPJOKpz9FPk65RxY+RvvgeX+UeG8X+Wc
yvRPcN7JSFx0hfPuRd7lKn/m/pE8zuDm/Sn9Czm8q6c/wuddvZyfG/1Ozu3V
ez+5n1J6so8j/jB85HD/i//g58gH550qOO07yvFx/JLRiRLfm/HQfN8Ijt/K
Pfiqea+a/6f54a7v7l5fGyF+buoDzr9viWd+skVQ39Vaf+JyoyfvTmlH8Oah
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
SwEn7q7JZx8X0n9umalHNC7/Iuc9cezbOkL0YR5x+tNt8Ne/9D/BuR9ePvCL
DdL1Vfsv+GZ7gTep5zNu++ZIGQcez/b94Vsh3Y/A8Vv+bYHj//y7B+f9rfzf
V/4g+S8MfVj/nKr+pePgII2TJ8XkS56jhtU7VhmocfLHse4CJ38c6y75D8L5
zJojB+4v0/Zk/Xk5I/iHzT9HO3xtX/Jcsclpcs7A+uFYhcguYV00TrlR8f07
BYanynmFxF382Nzmpwsal/uCAWvKdNqVJv/14IP3Ord/l33HZzof9EHXblFr
dLmsc3YvulmyxXstX/ZfyfGzhk9Ilf7FumtB9W/Hs8Z8h3P/+IPrrKH9NI6c
A9WeRW5elOpw7O3NTvMGaDngzWuOa322u5YDzjmD7Gscly5cGJWm48Cofk19
wWuvXR3Z5Ly/4OSjhJ/02tbDZoe2A+XClzx3xTJLfFyxW3Diusu+r/XbXq/6
pOs4CUr+vBcrFi0tpHHGK+RwngPepmzPsl1vpAmfdR18/k2D+/4zqHNIvjRp
L1P/M9kzXrTvqdt3s4tjqVaFv+Mr+8PnfxP4+cvf5v+5+zv7KLzLhSk904ql
y/me3P/a5l20+F2a4Phhm7Uve2bU1HzkTL9bYPHyqt/hSn/HW+Nmj1yg/ZB+
V/fr3Q5e7TQu94bKTzgnhA/epNOFj+Xinuv3JHGFz+QrpesFHzuQ1xV8QoOU
7gn+ul70I+RL3LBPs4+nJtx22OL26dibFtr/sQN88kvKOOD9/uiLwppvyr+8
bm6uN7MiBcdv8XP8h/EEHD+ZcLWjbfsxWn+zv4Czf9xU0zftjke6zCPw2XeA
d/Je9MuG7hrnfz386a1OXq67Rvs/9oQPvqF2l+ILP90SfHOedVvbF3kk/Ju/
Pev8uKLWk/qeD7pq0/R+quDUl3KxA/55bneH1FvTNI79KXdW75Xr0wc/ET44
+Sngb/Kodal6Fy2HdoHPfC3ne5xvMD4o/999K6XKr3m/w5X/i50LHC696vYT
4YMT5wF+mxnNrjX5qO2J/vMe+6Xfj9Q4+g9LPXOl4WWNm/rbDyhyd2SZILFz
RJvWyVfK6PrSLtgTf4BPvwanXRhPaC/kRFRf1C9buuaDb9o+qerEChmCoyfy
WYdwDhyyv/x5W5804YNHfSv2fGX+VNGfc2zeSYLLPw41D2IfzrfpjzKeq3sK
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
vcu7JAO/kXlttm4+CidOJnz08Vu1XlMqtewYIHGKJB+QMX4RpwI+OryDE39q
9sCPHF/P8c5qdS4j5z4vhr5c1ShM3k3Tv1EucZCwR3/nhf7uSybrovND5F0/
8yvpb4krYuD6O7vdV95czXnypfDpt+HTbolLAK7Xu+x3jduZua+vev8led/y
nM9auF+oxIWgn5f4NkY74feiT7wLcH28AOceIPElwOUelxGHgXL5XcSvwP/w
iTeCDuPds/NFgjc1UHZS7/hBzhNHt/ScmSVU3sOiT7m8D4Wvv3uVc9ulpg1v
BvsJDv/u3LqtvPzfSjwryQNltJ/p57one35WOhLfxtCBz70C4lyBS1wj434R
/bB+Twk8S9tK7lnTFD53cf3AmCeKzzkd/S37Y6zjwHX9HGP7DUxNU3zWX/Dt
3MuWtroULjj22PtOKLnpVpjsz4NTj3If1cgbAs65FfvS7KNyD5NydR3GC+zn
fiz9OfZzb5NxAb6cExn8Qjs2rztUWv1e+NwTkHMKI94L+ugQNwl91rno6Hzw
ul/a93jSVdlDHhb9Ph5+YP+Ze1zs86PPeR/nDnq54Nmz+q6f46twzjvgc5+K
euF3cf+KciVuvDGvkPhdHw+2OvU8Qp0jGPwnj2uMztHwP/vz5Jky9qtlv514
gF9fn67qGSbnC9hPudzDoR51e+DXnubWY/R6hcPnngM453fye417cdiJf+Bz
zqWfI3COJvH8F1Vos6FbuNQ750esH8G/n2/Qb+jpKLWuN9oVfNaV8Ple5HzQ
aJ86Lu3ZuM/DfUvaldxv4VzP+L50HD73arg3i5/18yyZVxvnONxTpX/Ab+jT
j4FzXxS+bg/41El5WnfIGSn3Emk/fEdynkLeN2McYX2K/eDUI/ji1ZtPORQJ
E5z4k+izrqedMJ6y7qZccNbL6OvzZ/KPYI+c7xg6rCvBieOHDvcqsUc/fwEP
qpy6KyZC6RC3Vu6XGusp6lG3R+LpDfi3ROqiMNnHQB8++xjwwbkvJ+enhp2s
K2m38OW9koFjPzhx29Bh/Qgf/3AuCQ4fHfJGUS7rC+pLX69J+zHm+dyvA0ef
fTbaLfrsq0ieVgN3Tit0f8G3OPPMS663nPa8MtdYHuCYmvF343qXerjCId7s
fXrc8y7/j1dl4DVy21U5vitO8OGXh6xz2RNmKjV46Ids3ZVO+wUzB/1epPDk
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
/gVdn/ca4Po9Ctqh/j6LdoJ/4N9ocdR7cKrCS/3rd25lKcWveanvqtsDY2Xc
B8+0KtOdsWXiBOe73jDjbHnnV7Eyb4HPdw0eVDl1V0yE6geIS4aO87KpG/03
Kz64XaslW2Pt1DyfdcGptvnvzXmh7AFHH5z9ut/j21U7lxIn8wHWEfDBOb8G
Z56A/sydvfo3Gxsn8xZdB3z+gbrBd5IDzUNvfN8cnq5w5ufDhxdK/maOFRz9
K9/j1/t0VfaAu8y+ebK0f5SM1/i53MPObRMz2gX4/kojW6wdqXD3/dF7Btsr
Pv027Y35D/084ybzc/pzicdu8Pm96PhW/qfQ4pqvBCefMjrHfc75bCwdKXzs
mbXNJVeTWIWHnVqxq3NGOwZ/nC/kZraM/8PHD/DxD78X3G5IH/tX9gonjwl8
xgv42HkkaNSVTj4xKp+7Ue606mev9WwQK/ji1ZtPORRROOsj+Ndv3l18pHmM
1C94+eINHUpbq3qnnaNDXhUdl30b/0LVTzcPNe/ZOsvuTUa/S72g//3h5AIO
UQpHBz8QT0/H4a8v2unkvEFKH//A19+5TP/6+nRVz4x5kfaeYl7z4rN/TQk3
6+906K/0dxbg+jsU+nP9Hcrv72c2XOweadbfszBe6O9HwPV3KOjr74yePK4x
OkfDCLP+nmXmx4OtTj2PMOvvULBff9ej2w/fuU//nD7p4Wb9HY3O592K7jfi
DlHvetwhcP1dFTr6u6Ta09x6jF6vcO6367+L+FQyH9beYzIf0N9j2vSvEzdo
SZRZf19Jvejv9fJ1Kt6n25xIs/7uknFQfwc3zPl9vudlFc48Cr7+PrHferf8
2VwUH7zEuipXjmW0C/2dJjr6+zXmCXr+4kvmz7WW/z8fl/Zu7vKoOk9OZ3wH
el7j3D8mXF34SpXLezp09PeYlKu/99zTJbW+X0a96e8W4evvBJmf6O8W4ev5
mofmKnwsPqP+8Rv4xq89rO56K5x3f9ivv7fFn/o7ysWTnk8stCHGrL+Hha+/
h53h5O/31FrhvEvV6533lfwu/b4u7Vy/f6vj8OfOqdcq7+YIs36PlO9Xv4+q
49hP+9ffn9K/6fdg517qnqfsGcWnvnQd3tNRLvM98k7yu8BpP53Wp0U2Ka7W
rXL/tuLfedMy9PS4dvQD+rtLytXfS+o4/OxZfdfPyag3PT4e+vo9YX6v/v7x
+/kG/YaejjLr94Thn61eKCpbTIqKd23sDxTauKpLkziFZzr05MDaSfsFv7Da
pXBa+gXh553r0aVpWoqcV4IfsXKOsv6VIueM4N0Chiz+H1lnHVX18vVh49qt
2KjY7Q+xFTkY1xYxr2Jjd8c1sbu7W1ExsQvlIiYIiIKIdKct9su71jx7XN/z
53nWZ+3ZsyfO1HfG/5W2z/oG/mAHTrpwx8HHmiZ9P++xYeq4kNel9PkExmOc
24EzX4azvoEe+/Yrmp+9M3WfpLvO7tP50R7aT9ZbrnXfGJPdX/sDd67tNN/n
jOasG9R9a9+p4UUdB/jiErMujH2hOXZmpWVcGJ+suTEOYmf+qyG58rt7ZHtz
rMSug9pP7Dssnvkmfq/OL3HgPJLcs630aQ08Z7pv0OciiA961ovg6LHD+gPn
SdgHJ13Ogcg74ErPuRS42FfnYeQdcMU5d4Ge9Wc4+omtfjkVueEn51Xg+NPa
vmVH6+XaH+LAuRT0+Mk5E8rX6A+8rcWkR+cr+3vMnttn3qNF+lwK9Z905R12
Ve6UI9x4nid32MlzThM8JF3qG3rs7xw57fzIkzpf2Kc+w7FPfYZjh3M4cu5C
xS16QZxb30K6HuLPfznHnx3UXXP0xAE7xvM56Fc7mdJi2/lLfODomRfL/cxq
n4X5L/M+9o+YL8PRMy/DzpWMgNMJmfNvOOvV2IHzvid2mO/zvw9nfQD72GE9
AT080n1/uaUVE2RdV857q/kOvHnwPYeJazXnvS3jfJ/8sr/f5OOG0tOnxAtH
T7pyD7mav2Of90CNHL3vtNtZLfuFetjP+HS9/84EyS/7a8zr0TPfZ14PR499
7Ky17dCu1q1Xwsf3vmczJnO+J+fMFQ855/owd+b802iHOHNenfkm9rHD/BQ9
nPkvHPvkV9ZJ1HyQ9RDKCzust8j7nsoO5ZXQoN6LHmlaL+tFal9ezn+e9e5V
10fXB+N6C3x/Z+eQpl7aDu+Hon/4+fv8A2V1fbjiaLG7y6Nw4Wkzji/2eRgu
9cS5Ylzkw3N6XgwPOvb6oml4vKRLHLDDu65Gjp51MDj7uYxz4KRb7dGJG4OX
vhF/8B/7wR7b23/dGCf2sYOf2DHGgXZt5JQ7+/XYh6OnnjM+5H+kU+ES6T+S
Nacfpn4yn5LzFYozfkb/ZWNGXGjmPEDuV1HrM0Pn+Cy+mKI5/TB2uLcEvayf
7OoZ1GWauR47WTyqL/9e8InHiykjVj3Nmyic/wv6Nzj/F9jh/Xf0cPYLjHrG
+XcLrvAIKnHQI8qn38WWDvHC+R/5J9yta5FdmvO/QHlx/wB6qYfq/Wv0tGvs
EH/0vLcOp9zRE89gm2bz937TnHhih/kIejj3VBj12Knxpv/ZUhV8PIafbeNW
tV2czAvIF/7AyVfa4kbzdvpqbqxX7HdgB87749iR9VtVTyhHOPMIyjHwn1Mf
i4YlyrwDPf0eHD37uexToIfzHjH6Pj26LbmUTdcT2gX/X3DsEE/ubUOfUa7P
hWaV4iU+Rj3c0bHTs+Mz3GV9GP+lXX92cmrjoblxn5p9EzhxY76JHXj56R2q
XOys+4fxxdOu9rTX7ZHyckg+Omt57jhZp8L/tv9Vm72yvObEjXwx3zTml3VC
9PjDfSDG9W3WMeS8orPT8rvLtZ/Svr5U6JT9t66H5Iv11b1l/z453EfXT/jG
wq6jnv4015MvygXezyHXtiwVdRzgdqlXTu+20XGoVP9dTGADXb5w+jHKkXyR
X3jbQkMW1m70QHj1hs9+WzyNkvySLus5tHf4X3mdFm9KiJV4wvFnpe2EkZWe
+Xj0uf/u2j/jEyRd+U5B/e/DsRORf/mdCYO0n/hT+H/VjuaIi5F1A/LLPgI8
ovrDHm5HDno8HZTgt8w3Wu4nkfrwz9Ej2f20njij3/1g4+rpeRJ1PXRc2jr2
UqyUF+XLOjyc8sUf1k/Qw1kPN+q5t5B0K9VpsiPgUpTcW0IcWM/hnhM4eu6H
IV307eb87dFpQJLwN63s/rdrcpTco0I9wQ58tM3DIt7tHggnnujnj6zzK5eP
1uPP+1kLd70uGS2cdIkz9wKhh3PvpdF/7reR811f9h76PkuXI/r71hNtfdw0
J87YXz3lTdTxJM1tXpd4OvVnlN7vUPVzwNBejS7Mjtb3KKr6iR3W89HDuSfH
qMdOlagNpbZbPfH41a5ERnpmf8r9BvhDfuGX9iye9nvWXYl/xhOv2e08E0Wf
+Ln01w9vtd5YfxyaP919JlTXZ9uZTbJadNflgh3yC0ffo9nLRu7rNZf+R9nn
Xkdje6wz4eTHwPq6nXqVcD9RzCVW+gc5H7iq95sriZoTN+ywv4Mezv4F+j2n
rJ+vr6/LnXpV5b1X8NHKup1Sf7AD75LFy97d2kf41v53fLJ21fpNhQrvT32j
yxF+I/db22ee2g7+VMvvMmGQo+bG/pP7wbCT/0Gz7hUa/DFuVHGj/nAvE/pi
eS/X2ZBNtzvSpf7QDxg5evZzKcfN9YffyTNO13/07DfB0XOfFfaHP/xlHz5V
x5n4E0/uDTP+v8yfFNbv0QY93mNcRP/P+gP/7/wvcw8A4z30WwfbLKn3OED0
3K+IHca3cp+Ymoeih/MdIpx9GfTOuWp3LbRE61n3QM9+BHxix+GR3rvixH+4
89aVJceX1vmS87rMI9Q+EXo44xZjfBinMe9mHEW9Qk/84QV7vvM92TZQOPM4
0mWchp/Eoe/y+27VB+h4ki520B91ut1mXqdg4bUWxo7oVDZa9NRz6g/lS/1h
XIf/6NnnhW/xi95020ff64v/1Gc46ydw9j3lHgn1/0K/BMcf2cdUccMf9oXR
8z9LuvhJO5L9YlVv8Yf9X/TzXvk2ON1Yxwf72IFn/K/DqJBLQcLZl0ffMyJt
66PuUfpeaDXfJ1045yvg9MPo+f8iXcoRPbyXy6/LB8NC9PhB2ef7ZTjnJ7Gz
ImvXBietokVvtM/5RjjnGdATtx/LWv9l9ULbod7K+FBx6iec+QV6+lvqOftr
/P+yfsL+F/mCs+8GZz6CHTj2Q4fkH/Ylq96/4348/q8ZX6FnXQg7zMvg5At/
OCcGZ96KnnzJ/qDipIsd/Kddsz9L3ODs11MurlsWew/IFyXjFrnPQeWXewKN
nHsFjfMj4kC9gv/vY+/Xs7pESb29/eg/6wMXo/Q+rFr3I25wzonBWedBjz+c
2zTaYX+ZdIkzftZ41/PWwkcRoifO8H3dO9oc+6g564HY4XypkaMveNrmdoHP
YR5jbncYVOlWpM6X0uM/nHNZ+MP5WKOecoQzPsSOMb+szxAfOOuBRj12uIcE
zn437Z1+mPu36d/+mtMp5NSIWIkD+htpDV2Lb48V++hz5HI9mutHjHDqrczX
+H/0+vSt80LNWQcz+sO909hhHIgd9FLf1HyQdjHyx/SxPZ7qfh7O+JN8EU/m
O3DiiT9yr7iK576w4z+yrtH/F/hJ+TJvheMn4234We8rriXdYqU+ky7zdDh+
4g+c9gVn/c3oP+eHjXY4b0w9nOdR7MC7PH/YV5x1bPYT6Z9Zx5bvwRVnPQT9
okVO9s+Lao7+0oc6e/N0iZZ1Mzj9IeuH7LfCsQP3ar1jxLFp0bLOhh2+C4Cj
p98+5JgrOaVFguwncv6B8SHctnGfC1Zpmt8dVm9p1uMH5LwE60XsYxKHxx3j
V/laJYodOHbQc26cdXX8NOrhdzIq1O/xLEbGpdjh3E7BlQX+Tq8UJ+nC6c/R
P73tubFAA83Rc96b8TB6zo/B0dfYN929fmZ6jG/x05gu/ORup19TK2r7cM4p
sb5K/aHciQOc829wyp3zP6x7o+e8E+uQ6OH4g97z2rPvXudihaOvUym3+9YY
zbMcSikxrqe72GH+hZ56wjqz3Cui9KxXw9GzPkn80TPPhaNnv5JyQc96O3ri
yXlm9Mb2hZ5zXHD0eVeNWh2yXbc79BOn2rt55Y3S6/lK/3vJ9E+bikXJPgtx
xn/2s/g+hfrPfhbnSeDEX+6VUufB4OiHh3VvU95Tt1POvRjzC+dcLtx2+54s
HRs9ED3r25zfMPZ78A8fr38e/TRK9mXwk/wyj8ZPOO0FPedC4eg/1Tr8z/eE
WNkXw3/syH6u4scPrB/9tpKutx8/7z6Qv4KPh7HfQ893LnDrvjm//Cz4xKxf
kntdbs3MF20dI+vPcOLGejX+G+MPZ9zOfgf+kC5xoP7c+5DsHegTJ5x259xr
9auWv+Jkvww7tAvKBT+N/QDcu+Ww79Wn6vjT3unfiAPlxblluNyLpf6nsBNR
e9biIs98JF32MUmXcmG9nf6B86KME2h3cMZ7cn5vTJWBH/MkCkcfvXZt+vqy
iTL+IW7YYZwAd3PK+yg2q+bYr7XTvuMlqwSPY9c+tHye+T9JezfagUc8Da1i
2UJzlzMvLMeUPmiWLn463HR97WCj84Wd6fvvNh1QRecLP1vXSQutmjkumbNm
34wF52OlnlBe7Dugh5Mues4bs75KOVJerG+gN8YfPiYwcWLlzPET43zylfBu
Vq/aDokecZ5Hnrns0PmCM38kzhWqfJsTmDnPY96HHTjjTPSjC+Vs3uBNonD0
a20mPvVJS/TYvHfC6E7TdT0hXfT4U77t4eJ7viR62JVzHFLLQnPSZT5LfrEz
9YJjwzNddLkY7cOT/J9dH35Hc+yELB7x9uH2RFknQU+6jLfR1yz4b/jzAZq/
rXyh+cWRd0XPOjb9AOXOuivtzlgf0C9+P2j8jK6aow9escup3U49zkE/Mbpt
8Mi/db8k9+bNXujdJLPfYT6CnvrDOjx6Y71C7/pi5qPFJs3lHj/nksVSl+l2
RD9vzBf1mfPw2KGfJ132HejfqP/YgZMv1vOxT7rYl/vK6uXeHJMcL/M77Bj1
cM69s19Gfo31Cu5aeMvWzQM153/cqCee9IfUH+zcOWpf468aSbIOiR476OHf
rJovyRKXKOtd5Neoh1PP4UOKhJ8ZUcffzE/isKju3CbLxiWIHj70seekgc21
Xv530q4O+OdpguzToad86QfQG/thzkfxXfDKsrkfOneNkvNUMs5U7ZTvsChH
/ERPPZHyUnq+D0XPuS/soOceG9KVdqTOfTFOkPaiOOMZePPs46Zu/aT1zH/J
L+MT9Bu62CU0e6Q5/7/YN+qxw/fF0p8oPd9TM1/g+03jfAfOuBTep/ovz7yP
A0TP/gjfdZIv9kewYxw/o+d7Lrjcl6W+52K/Br3RT7nPRH3vhh3uFTF+Z8F3
l5SjtDtVH5iH3rIdObK1ZbRwY//DeUj8YTxDfSNd2VdVnHkNnHsY0LM+g964
Tgu3+dyu+8MumlM/0bN+SH0wfq8N57swON91ynxQ1X/0fC8Pp37iP+uf6I3r
6tRD1h+otxIfNY+mfyb++CP/O3y/qb5/gRNP9KwrojeWi3znq+Zx8r+peNEt
61cdLBst+2Vw4izjdsVZ/+H8DP0eetZPqOfG+ReccoEv/X371Ny2gaJn3YNz
v+SL+R3c6Cf3DBs5er43JF3aF+secPR8HwS/6Bv+qn6nYLM4DzmdVi7LwmDx
n/Vb7MBZ7yVdOPtB6I3tEb7DscqBXt91PcEf9Ow3EWejHbl3aGkDq4HbYoUT
f+M4HD2cdWC5L8gwroDzPSOc/go9+6HY5/+R8QB24LQvuV+r/47Kfy/W/1/o
mU+xL4ne6Cec7zGxQ/9PuvQbjJObDox2nbRUj4cZ/4fcXnQz+JLmsv7jXXaI
6brmzAuu7C5d0+5Ikuz70G8Y+zE491rgJ/0J351JHFS/jR3mR+iN/Qz1inVC
6f9VPFmfZH0evXEcAmd+B+f7dGM50k6N4xDsMH7GDv7wvSeccuT7UN63hTPe
494P+N8p+07sfKI59y2g5x1e/MF/7hWBOy1beGzFDs2xz7iXd2/pP7FDunDm
s3DsL02tlS2jc6LY5zt9oz/YmTns6IQuORM8eIea+kP7Rc//F+uucL7TR8/7
zujh+Mn9BnC+l8R/mbduy/f27MsQ4cwf+V4S/5tXevBm8MhE+Q4UHtfF9kbW
H4mixw7zbvT5V/4c6uuu7fOetdzzpvzh3XbKy+gP94zBef+deggnDvDTfq0H
57DTvPyIgW/tUgNE/9DZ6cr3W68knsbvrOHUK3nPXX13g/5A0XLVZsRESLpS
b7+drLlkgZ6/wClf9EXnPOnsvFlz9KxLyP1F6r4U7KR4BAUv2RYuevLFe+XU
N/k+XcUB/rDp/zadmhwv9umXJpYfemTmMK2Hsw4m71+r71ywTxzQw3nPnXSJ
G/UETruD890Tet71plywTz2B4z/8wOF3G3IlaD3+k26bK5fb5Tyn2xHflxn7
B+wb9UP+/rVut3+42N+c2OdO0pgAqc9rV/56UG1PinwXD/9YJLz07cGae/6z
puNFj0DRd1g8+Vax+yEST8qdfMGZ/xI3vqsy6vmuzRh/+c5OtXf0fD+FnYkH
7wWMW6frA3bQE0/qCfaJG/1h2oeu2b6kvZH1hD595h2avyhZ+ivWJeBSb5X+
00tPhzOtNEf/rvv/unVamOyxt9FfaccXhAgnnjk3z/Wo0PG1rKfBpX9T+uvb
Yu/cPaQ5eqfPS/xrBqTo/Cp/xuUNeHb5dbLuP5WdUcvs/HqU1nbQ3y7z753K
wzVfWXnI20LO2k/skG7uuNComx1TJL/w/jdH5SxzScfBemzr0dMy7kvcQjqN
dS4SFirrHnApX8UtZuyIjNmo7cD3t1o5JPSz7od5b8JYLvLehBpHoYfX8a1x
ql3LZH0PHt+nrw+efr1cityvhR776OV9kPgxLcs+Tva4nD4z3cchQsZ76Pl/
ZLxn9BN9G+eXLa/l0vGU73nHTY4qnz9F+gf0tuW2TIsaniwcfY5qdUt1HJMs
4xzGk8Z04VamiafLfdZ24KW+1Yps31PrGd8a6xW8W50zud6N1/UEOz5jold4
rEmR+yXQG+s5/JBtr8+DPqVI/4wdo17yNeWtv3ehVA9PN9tjCUvCpR6SX/uw
yr2+ZY8Q+3Dyi77XzCq2bYtojn7Y/fU5IpomeyQumfWf4wq97s3/2uoGzc4E
WQdLP0O/lDHWlCuk5Evpl9Bz7wd6xpn8j6Nn3IL+8YoHy66e13bQM56X/3fF
sc/4sFObtuejLwXLOMdoh3U/eMEXn3dvKPVC+kns878AZ5wA538NPf6jZ9wr
9y+p77vR015oj/gj/4+qv6q6KjZ88m7NeUcG/Yzfi96/CtB6+MkzLfuXaKrX
mY324Un5U5ZOD02Se2Dwn/EPnPvE8B/OOUPWh4kP5cI40PHr0HufM8d/cPxB
z33OcOxzzzacd/TSzibfb5onXX+XpLh361+7m3dOl3P48h7fl/iGOX6kiR6+
Z823PLnstB47pz87XffzSfMY2SSof+dG/sKnVSgQntslXc7Dw8/W8SqZ1y1d
vnPBfofReRxeTNV6eV91xt3lL/drvbzTuiqi6P5I7Se8bbkP8Qcqaz95T3Ze
+JYb47KY85q3Dv9q1kini533X7PWmdhXc6uKBccUDvKQ/JKuvIeruNvgFxm3
InzEjuijUg7nyusn+YJn6WlzNMzTT/R1cl0fPmmpzi/2y13IcfvQCM1dgh28
f3c87PEupleVqfHpco6UOMOz5FhRvOYzzX2Da406lqj1+NPFvcKlvJ7pci4X
/ayxlf+2e6a59es5HYdl2sM+51qxA7eatiZ/rU6HJV/YN6ab2GyuY75gzdGT
rnwPqPintqU2Hzmh/SE+xM3IqT/GdIkD9tFTP+W7FfVuLPUZzjuwtCOjnvpM
ur0C33Z0ySx/3r2V77NU+4VTT+CVHf1aPZit9byDWW1P3IkfDzTHn2sljmUb
UTDNTF8r7kcBm5K63qLnXWw46WLfyLFPO8I+doyc/scYN9qjfE+n4kZ7hKOn
Xct3cEpPO4XXKNPyqm9mP0T7Il38oX+jXLBP/2YsL+xgHzvwpjmW3O390kPi
0y+hRI4909LEf/RHOy+KHXNHc/SVqs20ebZd299azid+4H86XfxBP3vr/F6N
L2hOHNBPt1lhu+nhY+Gj7R67jd5s3l/hD5z3prFDORIf+K21cQ1XTPMW/rpA
pWuN9mg9fmKf+Pdqs9Bqd6SP2DHGYcQH93YN2qRJf0vc8B8eHGNbsMcj7Y98
d6nyix3qP/mlXOBTz3kvHZ09RNY3GAfKOErx9XWbOzumas67LegZ7zFfNtqR
dyWGv30/M3eyjHPgzAfRYweOnvVGGber+8eYdzAeRg+f+HjR7hq3NJ/Ysmm7
FpnzfuP4mfwyX4Dn7FZ5QkEHHR/s4CfzBTh2WDfAjrxT0PPWyZO/9TgTP5k/
3ohqPPBpZnqMS0mXeiL38Kt5Fpz9PvSMlxg/G8dvcOZ96LFPHMiXvMdRP3LK
xIl63C7v0ah8ST/J/S1qvkl+0bMvQHyoD/DmM9J3rrgbqNexDesz8Cyhl6M/
eWlOPOds7Tt8aMVU4VMrDbLMly/ELD6kSz3HfzjlAmd9Hn/glC/1DY6f+APH
z9pth9qP/DfVo6nvy2ZTfr6QdPFz88ZJ5bLW9ZfvPY33iMK5p51+g+9Gjfqj
rs9vWWSO1zlXb3xXWt7nUnq+6+H9U+M779xDy7iC/pl+hnEU/SHc+C486Rrf
l1+cr9Ip95cR0r/BefcTPd+Vy3dSSs/39XD8+bqhXkbwZ/PxFf9H+Mn8nXKk
HcHl/S/VLuhv8fPMNJ+cVdZECuf7ffxJODnYf+jsu6KX+1r9D4VcufpY5l8Z
KdmK/+ub5lHHOibl1zMfmXfDiQP6at8S8xV7obm819w97d/iWdMlXeZlcj5N
+QnnPBuc94bQY5/1MfxpWGZ29WWZv5lvwikXOH7C5b3FYZX+i8ocN8Hxf/TN
avVjG2l+q+XOZd+vaPv4Ke9lq/zCOe+KnvZFfpm3Us+Z5/p+OPXuQGb7gLPv
Y5xvUk9Wlg/PyD8qTTjtvblvfGARjzSxQ7qcvyKecM5xkV8458HQ814b/qDn
XSo47Y58wfGH+A+dGT2y0BbtJ/HHf9KV8+QjbWcfyqvLEd46uGBgUButZx2j
3l9F8r3qp/Vw0pX/O+UPduD4E930TJz9dO0n5Y59mRco/mFFyfOhe3Q9IV3y
Bcd/7N/pVPn8xax+wj1vuKQ9y5yvkC68U1Sj5/se6n4e+3D08DEueUe+KKnz
1Xhpozq1MtPBPv4QB+o/nDi0Klb7QPzQdP3/yzl8VS4Rx/at7WJ9SK+nqf8v
6qfss6h1Vzj66ksvzPiwM0X6efSMf+DoWeeEs19jTJd3cODkS94BfDAqdszN
VOmf5V2Dgk3zHgjT8WH/kbih5x0iYzz5n+2RMiBgWFeth++yqftl5+Q/4q/G
LewvoIezTku+pF2rcw5w2h3r1fC8oZbPxvSI0OMTFTfWA40cO6xLY0feNWD8
o/QynlTrw+jJr+uiHXcb7tRczrEMPPy8eU7dj5XPna/01ktBEk/so09uHRib
86vmZW5/vDhohLmedB1GPQrIskZz+k/aL5z2Fe5eOv7NBd1O0dusOprX1jJN
ykXOKz6b/r8pJs2xU2vh/Hwzd2hOO1rZ7/t/lst0+2LdG44e7nvgSUJ313Tx
M2ffe1UfefrJ/wtx4zwtHD12lgaO8rruqe2zng9HD5+cZez3G8HaT3jL9TsO
LD2gOfsjO1xHrLvmpu3LO+BpjS6mPtP2iQN2pP6o/md44y31F09L1/VNcQ/H
oRWuuGiOHdKVfkb1S73ja4yO66y5vCut/veln1H6+l53X3Runu7h9y0oa4i7
h+iJJ/mi/4Rbjw4udnfEBcnv/yosa1EpQadL3B6XaZqYFqvTRQ9HX9j+6p6N
Iy+Y2UGf1vLg3FVftB32oQbUGW9zK03r4VfbNbd6+/2PdK2K1D2cclDsW/Wr
fyc88aD4aUxX3hNX5Wh94i+rtzPcxT564gM/8eVZn16Bup7Ah1z4Xb/CBT2+
wv65rF96l+mnOf5QH/ifRf/3zjv7O1XRHD3liB3iRv2B4w/tDjvoqT9w+U7k
rWf+ro7p8j8r9ydbXPvaLkqPE/zK5nmzfqOH1BO4vDfdsdeLsz/0/z520LNO
hd5oR+4JV/UZjp/9xt8a1bFguow/0WMn4cqxpU0c/UVvrOe0O8oFTnsh/nC5
T1vFgfom73+p/DJ+IF/0t3D8ZLwEJz70q3D8zxa06N/Z/6XJOgD26f9ZB8A+
/1/o4fxPPW2ZaLfs1UtJl/8Xq6B7rweNDBL7cNYr5P1xNX6Ao+f/i3TRMx54
XLneqSduQeIP9lff3T6r4YMg/W61IV35flb9n8Llu281TiMO8Nb73ud+WFX7
A2++5UmebIdS5f0Iyl3+Z9lfU3zQlQZ7917UvEPlWhZfB5nrqVebauTMCEjW
nP6c/1n2Q9Eb8wunfOG2rkFT7pT3FD37wvK9s8EOnHEgcYAzfmO/kvrMfA3/
iT/zMjjxLGNdrHXIJM0pd8YPcOoJ4xPWP0nXuA4JXz+6T90h+VI9rH/93HJ0
R6j+Ds5wngTOeFvOqxztEdDs+EHRly+RFr9+5ispX7jsdyt+uXAPj4Hhmg8I
LXJ3wX1fMz1+kq7syys7ZT99nvm4e6qcAyRuRv/hnM9J2JuUPr9ygNg31jc4
7UvWCVX9ubDmjsc3y1RZT5D3vlW6su6hOOd24Lxzij5mRuKJtMz6x3gVf/jf
YVxKunD01OfQKbuDzw5+LONMox047Qh/ONeNHo6edoodzhMa9fhDufD/Aqe+
wbFPnOGh9/5NDqgUYGafOFB/ZH1GxZny5f+F7yyM8zjmiZyDkv8pxTk/I/uY
av7IuqvsCyteqlF7t3+maM48iHMpcN57Zd6E/fflCt0946j95H+Q+Rrr1diB
sy6NHdLlnAx8wLf46iMWh0u6xBn/OcdFnOHEQdZhWFdX56/Qky7nPSgXOOuT
2Plr24I710JDxR/sBLtblV+X+sbMT8qFc2WyfqI45/oannjxLjLjvnDsyPqe
4uzjBHYI2ZRx65nkF72L7WCPud6++nyyKhf8Yd/HyNHTX5Eu9jnXJ+1RnQsy
+ml3+vm56fN1f8I5t5DaE2anuCTLOjD/y/Dyo0w+jRyeC++wJ2uJlY+0nn5S
1s/VPUWci4ZzLxD9Z63Sn17ETNB6uN2NO9Hxr7Wec2jYCT2WzXVYaoBw7tcy
rmNXPbp0yFVb7SfnoLDDvUb0w3Duf4Nzjxn6tR/zHzph9VL03P/D/wh8QWXv
N1YXNCe/6GXfLaNcEcvfOg7wIRda7Lo2OlniwDyI+5E4TwXnPiLWdeHcL9Sr
Re4pDT9ozv3ecu5I9Q/o+Z5d5nfqvjX0vGdKfrlnCf/hs+vWu1j2kubEEz3l
hf5xrlTTlwov5Tw5XO6t/efoc7ucL6V+Yoc4wxc36X0hsqnmVyu0uVlhidYz
nkFP/NEvcb3msOqT5tSH2Q9mWCbm0nZkH7nJjkbXF2h97mZbyzfOr9sR5Sjn
9vHznmVZzx8vhBd5NaTNrRRzvf3rOc2rZv5PEAf8pP5QPxlvELcyzVNvNm4Z
Jpz2RT2EU9+ww/k07HCfFfMd2h2c/VzyhR30cO67g9NO8Yf9bqsyo6LX7TbP
L7zH/k8DB4wJEJ5/+Fuf9TdTzM7b0F/hD/9f3G/Gd0n8D8L5Xgw97xFwrh49
99vD5f9XtVO+I5DzZopzbwZ67i/lHDt67p2D0x7l3Qd13wicdx/Qu/g0X1Ft
l7vcGynvCCs9nHui4MSB8/P4g577XvAfvvrHsnEtAuKkn6H+cE8RnHuY+R4T
zj4v3wvDuceb7yvxE/3azvXz5p+tOfeio3d5n6f/9ZmH5P5SvneT/jPQuX7W
JvHyvZLsC6h7oY167PA9L+lyH768C8m5R3Vfurz7qTh2uGdM8qviud17QKPp
mX7B5d1wdU8LnPsepdxVftEb60+/Rb8HuM/S/xeUI/dwwin34P4fT5ZyNNfz
f8G+Hnq4e8iYQU88Nee+X/5H+D6Cds05n71lO/ZL7f5aOOeI+L/oEldy3u1S
Wg+nn5T33dR3HPQ/6Bk/wL22F2jYNXOcJ99tqf4cvazbKH84HyXfvzS/UKdS
5riW81Hot3dcPGDtsBThnFcnXfzkvDqcc2L4c9ri+L8r3LVevodS6aLn/D92
OD+Gnv81OOfbaafYZ50habtP9SuFk834+FvBIY5Ndbrw/2pF/LjaQ9snPvgz
2sJ/TN7M8TE86mW7Lj0z5wmcTyNuOXz/y1olcz4A5/sR7MBlfFjDO0e3zHG8
vFunvutBT/zRh62xjivXSnNZl6C++Zz8X3Jm++F7BDj5kvUNxTlfgf+Ptl+8
XqtQqujlffZGzn5eVqn6fYeHt2o6v9X1nHiiP5XUeewGf12f4VNrnN7x30et
x3/PLMszJ7fmvNSkdYWqr9H+U14nHm0o1mN4svjjcmngrYY9df2BE7fR7UeP
qJxL55fxA3q3EMtXQ/PpcQjjGcZLfI9GfhkvyfqV4jk7Pn4W7REo/+P8vxv1
Cxp0eNXfK0XGS+iJMxw93DhOoN/AT1kHZryh7t/GzpuhL19WHZxiNm6Eky7n
u7ADJ/4jqrkVjNuVJPUQzjiN/ofvF2inxn7pyqeE09UP6f6Q7ynQ0y6wD/9x
7qnltZU+8t0E3Hi+l/tXud8Pzj2r/K/BeVeC/184/2t3Gtj+GJoa6+G2ZLLl
6vo+Yh87nP9Bz/8p83T03LMH550Co75rm7E9R3fX9s+3bVvYqeIT+f/FT/Rw
7rHBf8Yb3JsHR884BM67A3JfjZqPky/eO4Zzbzn+y/gz+7t6T/zN88U7C0b/
GS+RLhz/ud+GdOHco0i6cO4DR897KKSLnvdQ5F4gpae8uN8PzjsLcv+A4rwj
g//Y57yfkWN/9b0xB2tfitX75mM3/Bz3wty+vMOi7lFED+fejyHF+nqPbP9A
4kC6j/NMK17UJVjGV9hnvgbnXg449y0b3xnnXmgjl3fN1L0c0o+p8RXzFDnn
qd6PYJzPu/Doje9fw7nnCs67dcZxI/0D9/rCmQ8azx9yLzpc6qeq/9zbxvgQ
+9wnA2fdwGifdxaM8xrqA/dXoIfL++xKz/35xvkd9YH7eeR8jnqXh3oOp57M
++FtP9lRc97Bof7AeW+Lds18DT/hct71XY7cGSn6vXLsoOfeBpnPqvu6jfOO
3JVmW1lEan+wzz3/xvOB1BO+76bfpn4SN/Rw7uuA8+6eUc98hPpGPSFd1rvg
vCdi9FPmxeq+O/p5uNE+nPv94NwDb9TzviH+w8lvp+8ZhUMz/2foN/AfP+V7
Fu7JV/cHwnnXzKjHzuTSdZt9Hao56XIvIpz3BOU+Q/531DuM+O/W7dv7EsG+
Mj5h/CP7+4qzngb/UaBltXt7tV7SVetsrAvJd3Nq/iL36is98zjWf9AzHpP7
9jlHofwp6nFvo+98vZ4DvzH8yIQCmfNGyuXFoW7fPcPM81X4XM6GXnlTZfyG
/lCt++vrdNccPd9teRXpbfG+UoA+p6HS/XXuxA+PGa/ET8bDD4c77wwO0HGA
1/Ka5hi1OFyvz6vxHufD0TP/Mp4bZ9wo98bfmFx1fl6dLnFGz3wHzndA+M/6
mOzXqHkl8YcznzXqSffHnlI1f6e+kXx97Hql0yDLVLN6kit9Yd+hq3WcC69a
+nqVtafEGU4c4KwPw79HR5V4dMO8vJg/yns9Kl3GyUb/se86sUvJlgHPRQ/n
fWr0rX803uR8Rc8v0Lvefee0I11z/GQeZ1yHTGhdOo93Fx2fv5Y1yt9pivYH
O+Trgsvsxt8mac69LvzvMK9hnM93EEbOdxDy/a8aPzSusrnk/JZ6XZf5xaCN
C1vP/Z4o/nMugnSph9iBH6+32tYhIULGM4xL0cPRz/UOC3/TQNv5K2jojbBN
5vqxeyyXFnuSKH4SH+phn7mPO1d+EyqcdQbqM/t06OHy3YdaT8A+/5uUS/Cm
aYGHRwTJuALOe0boqeeUr6x/rvvfpO97NJdzpBs7jhyeoesz+nbtu37ZkSNN
z3+VnnUGykX2fdQ8V/YFlJ7vN437SvGlPL76jNWc8QPrDNiBUw/xH04cHFaP
XL0n8qUen1Rs3fbnG50vuFu+3Pee2qWZtZdoH9ctO8ummbUvvjM1fj/Id+Ks
e9BOWwWELhobaP79IJx5Lv5QH16NsPeZnl1/7wOnfsp+veonjfWEdTa4fM+u
1s2kvfA9vlo3g8v5VdU/ZxzssmVe+mvhrPPIPo6ywzqPkWOH9+Ipd/L1NXvx
IW49IoSzLoQ/EWuivmzOfljsYF/OhSrulGVQ5+UHNGe9iDjAGT9gh/Ns1B/W
qYac+d5m12XN5TtTNZ+ifcn3vIrTvtDTb9C+0MNpX0Y99ZZ6Rb9EvTVy2pd8
h6449Zl1POzz/wVnf5n8wp0fXAnuEaU56cr5PfU/gh5OO0U/Nij7h9eZ/THz
BeLP/wKcd97hNlGlx2YbZq5/P/j9zec5EqR/YN2J+R31h/VD+L4qw1quHBYp
fN39TVl3nNV67g3DH+oPennH1rlDdOmAcH0PGPtQ6ns9OPaNdgbsKve90WRz
++zXkF/u65N3UVV+0cNpX9yzhz/SP6j6QH9rXF9l/cR4PoFxFP0YnHbE/zj1
ivEtHD3jYfo99Ix74Zy7o10b9dTDOnnPepTMHLfBaY9yn8btnO2PNQsWO0Z/
4Hs7r/hmHeQr69Vtqm066LRTrzPPed9qSHDmuIx08YdxCFzuFVFxZpwm958o
zjgNPef35H4Gw7iIdmTkMi9YvGDI2sl6/ZZ9YWP9Z9zC/yCccRf/d9xPyLiI
+sB+Ftx4juLRo1OL3ozQejj7rehJFztvq1YcbWEdLPdbUp/Rky9Z57Tt0K7W
rVdiZ2r/I4Nndk40O1+Bfeo/5S7jRvWulvTbyk/jORnyZeTYmbPfJux2mua0
I2O6+AkflFLd8dH9V5Ivygs78p5ycNGap201p99Dj330C5avP+WYGUf48moP
5k3Zo/XcH0g/Bqe86G+NnH4J/+GyHq7G29zXR3yIG3r4/s7OIU29dD1hvRo9
+1/ki3Sz1dowvtl23e8Z7cOfJn7a0WJbmPzvkK5xHwTOPEv6czVfoL3AmRdg
h31P7Bj1xJ/6mbAueVDvZUkeDj93nUzdFWl6a5vnuMXoGybeUYIPyZKetG/k
XeFnS8w9cPM/rd+f7WWdu5e1PkuDp3P/2nPINC29+dcqRzW3Pv1lypPdF8SO
3eZm3yrnjRK9vKdW2Sb4VrrW827U1uQtFhvcM/VZEtokLX1qxztTwpUd3vdx
zHMyo972aNHDw5p1Tx26Llr0vPuGHdJF39r9k+PQWdFm/p8fuinHu6LaH+5d
z1vooF0XlwjTX51jfmyNjzFxHy/ccqlPLeu/YoWftX9x1v2Y1nP//OSVw78/
Gxliaj5/ZGW7rHEm7gGGO9S/1X1mf80j6jp/Obrutei5P3llqy4nevuEmfkD
9655LtekoFgT779QXk9LOb9M9okW+/g/fMOipb3zaDvoV15MLPG2TIzoZy9o
GBr/MELs8I7Dj+F9/YvuDhU/sQNffGT9Gbetmm/M+nzxta5hoh/94NbXajf+
qG/UB/UeBPGZfC6hY3yZeLGztGa9PM8DzTn6Hu/GWSa2iDfxTp/VwxVJ/nEx
Yl/e0VPcqn2ZORuPHjTBrxzJ4z4uVet5Xy/k1bqF1j66/vCOIZx2hJ3jXfvk
2+8bI3p4WKEvb8acjhH9toK+fRpV1fZJl3fHhKt6jp22gRdO7I+JES7vu5Ff
xXknDo4/vPs28sqi3tOyxEm6vB8nXNnhPUf8cRxVIPXs7nvij3WDhF17ZsYI
t7jZqvqp/3R7JL+PDvvWujZQlzt63u9DD6f95jxuV2pIZx1nuNOj/wVuKqH9
2TXzxsmywbHSLoZcGrhq1+5IE/fGU//h8o6D0ttEbR5Y6GKUcPStP0f033Mz
0sS7BtQ32iP3jcOH/J3XMduIWOF9O/iNPhH7WvS8N0F7oX3xLgn+wLGDfnyg
l0NtN50u+rVN5pfo+SbaxDsj8O1x4edaX4oy8V4J+YJjB/55xK5sxT5qnnvU
P05vP2p/jgecDVhbNkb/v6h4ooe7DS5dbNxbHWf6SaOefgZ/eEeD/MKxI3HY
5bqk7Ppo4X79DlZMfxhmpif++M+7EpQXnHcQ4DkvZ396tqzm9M/Yh+NPtVK3
trzsojn9nrG+Yf992Uq+Ht1iTLyHRdywz3sclIuxP0dv5zameoeSmuNPiv+p
XeNPxwonPtRDOPVkf7sdp4bGxpi4Vx876Hn/wu3o3LsWmf0v/QPvWcDpZ3if
YmepwTcKlNP9CfzHpuzlC+SKEz3vXdL/wHmfVNJV/RV2emTJZz+9YpwZx87b
wR+iSs10N/GOp3DVn1Be2Lc//l8uh13uwme33t9/zk9z/c60v04Xb6H9gVer
cOZABxsdH3hrl58rz1rp+PAOo/TbX8tXzBj1WOIDL7VyZ6cUax/hzi6lvjSr
FCt63g1BH3yv+s29vr6in7O9x5yx9zTnfUz6czj9Odyv3Y8NDQs9ER61dFTP
HaHRki7vb6If8PfOUwd3+0u6Zwu8icuSWb/hR5bOtxiyTfsJJz5HK//4fiwl
VvyBb15sk3Z4QazoeZ9R/qeUP+jhfb1aTe7/zEf6w/ebZ9S+0iBBjzPVO4lw
yoV2anHgQMLi+loPt87y1j+hgtbzPiD1h3oi70Er+/ZD+hcYUf+Qqa3j0tax
l7Se/y95x/CUba2yWRPM7NS5/Gqcu5/WyzvUyr6xfto1iq/0r3+c6K+1t+z4
O0DHB065wGtYl1jRM6u32Cm/yuX5my3mvIzd2AmubXX81zvYniqXFit2KEfe
g4NTjrz/KOWi2hHvgTIeIF3+9+GFdzRcNbzRA+EFR97/4PlE6zuO+bkhroYe
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
YT9jzPBKz6ye6H2rPkf+vWKXIHr2y2Sf12BnaeXIdWWS4yVdxmnoiTP7O3Di
hp2m2y3397yj9fAA/6GB5ZdpPfNH8oue9QHmj/zvsy4BZ7zE/P1X7FXbn4+j
RQ8fXSF67uBG0aJnHYn5u1EPZ5zPugf70ejlHGNcwKmVTyPFPhw/mRewzsM+
KeMi1nngjMfwp3HAxfL3VkWJXs51qPPDRj3pdnH+dbimW5Csg5Evo5+kaxyX
Ui7s58o4U7VH6gn7RNghPuwTwY3zuLUhj857fk7U5x4VD3xfrvaA94kyjo3z
PPLMZYeuJ+jZfxGu9LQ7OONe7L/tOdHCM0Jz25lNslp013rWDai3U488f9kr
KcFsPSHi543xH++Z6xd/Xb6gUp5Es3Msyyd++dCtuT5fIfPQUesPrqqcaMal
PzGce2E+SPzZF5ZzWapdo4dzfgneeMaQ9iW6m+u935Y/vGBHvLRT9mGxQ7rs
g8DRs59FfWN+xPyRcw7UW9KVc63Psz17Evda4innKxSXc4zqXJNx/sv5XtLl
vCXtotbi185v//8cn9LDLYs9+rXukeYb1/gdH/hB6zmviJ+kS78KTzhwcfZ6
3zCxA89Is2xd67PmnOMy6m0taj9tMTxW7LPPhZ/oiYP4v6NUYPXHmnM+nzhw
Lpf2iB3m13Dyi51rX277979gnq5t+8pb026Y67ET+DTjVd/jEXJ+kjigl/1W
dY4a+/CX/z4u8jt/jJkeO5SXrB9uSKx29FSs5Jdz+9Qfo304caN/y73v4OBj
L2NFz/cI6PEHfa9aI7qNzx5rxtETB/orOH6yXk2+6OfZd4CzniP7hpcLdXj8
PNrsf0HO/V689C79RYjsj5Au/TN24Ky3yD6IypdRzzlz+nPW1amH1Fv0cNZV
4E93rggfVEG3I9bz8Z/4oC9Vrcuzql2izDj6KodMz1MdwmS/g3SJj5zrU/nN
yBWxcPRCzSOcCrQ98C3GTG+dZ/3qI1tjJb+ci8Y+/rBPgX307A/CsT/V+U29
hwWSZd5B/bmT+n7IwDdJ+tyR4nwvgz54revRJ8sjhaO/lva8yNYmkaYVO8vv
yntZ26c+T7h3d/j4xZq7fK65tv6ccOEJm8dV3BR7X/S5B3f91dQlWezD6/et
u6/MiBQZt1OOJ5a08DkRmiyc+KzId8/3TPkUmRegt5maUD9wU7Jw9PiDHUdf
3+EOsW+Eo3c747JiamCo6f2es492tdZ6/AwbMWHwP3uShBvjCT9b5Wf7/gER
pik3vZ5d6JQi8cGf94s+NIwoniJxgJf4OGV/hb1aX3hHv5MDOrwWjn70u1lP
y80IEf/h9D/WT54F3PbVdojPvD6xf/Xcr+3Asd+hy6qTdbt5C99VYG2h+ePT
ZB+NcYVvh2OtS4z+g6txxf+qXJ12Il+a3gdX+uGD/Y7b5/qDK/2kb29fRzpp
O4xz/ipiaZ//W6ro4RMnbCmyzCtN5n3YP+rq1rb83T8465bbihRZclZz7Jwb
uLLgv/Y6XcZdbae7Tz0SrtOFOzXpcaJ1Oa1nflF11Xa7nNe0Hr709obCi3bq
dLFTL7M8O83QHP2C1f3reX9J0uc3VH2rEfTgh41dsuiN9RlOfwjfefnFlTwn
n+lxy+SDu/I/0XrKl3rLPh312bVWrzp3DiSJHn/Q4+eVelXaV/xH13/0DWt7
j9q1Ndzk5HVuygH3VGkX9P93q1UODrisOfMjeJYuPX1KdNH6o56jXgWlpEq9
NdqR+lx7VXyTQi9MzV9tbpltreb0n+gL23S3aP3tnnCn7gVsf3RMlfZCv3o8
tNLETaW1HTh20Fs1PzK3XcnM+hIS8uJRD50v7FNP0MPLnev4s2GvZFn/McYf
zj7j5q7fnEc0Stbrt0rPd6Nw9NQHuO+Ky4WWZI+QfhVu7M9Jd2JCz0opDSKk
/uM/8Z9TadLr8LZpEh/W26UfUHGAU09cu4R8eNbzrvg5PGBqaPRkbR99u/UT
cw3Mnyr1jbjlvNbwQKXbKbq+KU4/hj54TL5Ua+tg4bI+rOancOnnP2xaFDrj
lal/2Nic/SI0p9zRl8rR4t+9F32FX9j0q0nKLp0unP6fdOHd9tafeuiRzpec
l1b1StZR2+ZzbFUmQNe3+luLTE1/Jvo5trUm75qi9ZRLYe8veUbNSZV00bcY
+TbX4Eqai75n78D/CqfKeQb6SccrKTn7f04RTj9GHKr4//2jcN9Q0Us81fdZ
6EkXO/TPUi7z3Tq7bQsVzv8U5zHo59HD79a0PuFb/ID+37Qc4NzuhNZTLmJH
2e/eppP/1bWa4/+AjKp7ihZIke+nsLO5gcn3dO4/uLLD/yz5oj/HH8eLR/ba
tn8tnHGOxIHvDqi3infwTSq9xtFbuJvHjDaPpr8SPfniXArzaPTwGuvWhDe8
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
oB/Tq4zXEkd9Do04Ewf2DY3xh7ebO73/r8x40C5IF//5X4DjP+VFOVJ/ti6a
vDZ4vS5f0sVPyoV2xHeI20f19ZpqlSrp8m7U7osTa7lO0hz9x21x92xvpog/
6D9H/Kg+NW+qGc/dZWBQi90pptFzTY1/NQ028f4UfHYO78cnF7wSfcrv65/8
LVPkf0feRZ0727H5MM17Bb7t6JLXz8Oh+T+t37inSr3CDtx+1LSo17UDxH/P
MVNvvp6n9bwrh578ki5848XGe/sFaL56wM3FIY7m+S3oE7rn1ANtH/3+Dns+
Fy2YZsZr1au7rPAVnS7vUi2+/fbnpZbp0n/yPtTZ6R/XJ3TSHP2pmmE13L+n
SfmifxkReT0ud7pw9JtrdD+zwCfNlLDdsuZ3Tz/Rwx3n3osY1chf+PZBN/Jd
O50u/yNwp+7Zn19ZmC79Le9mUr60F+IPfzq8VN8Et5f6+98CU+o972Cut/b5
kqfxo2T9XYx6p8yh6qnmka11PHkfrXWZAl87TNMc/eb38Q5/p+s4o3/8e/+K
dmXT9Dk09d4i5S73b5Cu4tYO7/4NsHohdqKKv8o764a5Ps1qZpdCqzVHj53z
nYO8illpfchCN7v8lqkSB/S+0wv9nNZFc/T7q4cfeHFQtwv0my1bD2rpb96O
Zt58Nz0oSseZ9y4pF/TU5xhTgzKT9mp9xJTqw169POwRUqJzKav4dNmnk/fg
FHc5Xf5BVNBh4QHjprS9HqT1vNdmE1vc9do9cx42s+Dy7ifSZf8LO+jh6Es0
O9e33FJdP9GPPXFlztL95vV290m/Kanf0vX9wIpH3auSsvxzuuwDwq/krdi/
Z6J5fie+fxpxPVXbgaOXc3plTvTeEu4u8UG/MeuF87ve67ihJ19llt6/0+O5
1sMH7S3dLMVX66VetRu5qfx5rYfTfo164kO+4MSTOMNzRn8/322EjqdVxYJj
Cgd5SL8h3/FRDxV3iT+Z7XOEj3DnIqvPls6i+zHyVa9b4uuulc15n5svc3aJ
1Pbh2P9YNah6lbx+Jv1eYUYFy766X5L6s/t3qyVTNZf3/lT8I5yyOPi9vyCc
OBvjUDRt5/v4huZ2aNfchwMP8Kg67OQe3X7xh/7ByC8+dD0TXDBV2qP0w+r/
Go6edO++GNjPY0SQ8GyeJqeiGbr/wU69f9sk/50jzaxfoh846rrufc3uryWe
8IiYxqV2pb8WPf0241L0p2zmRU6YrLnUh3Z7JzRyT5ZxC3qL8Ses/ELMOflq
6utY6FrkS22/Z9Omp9/ofJFfZ+9pHWLO6/6f/K6eP+tVyTuao086nSMosq/u
/9H7drqcOnes5qTLuIjygjs5HVoz5aPuP12CHbx/dzysxzkqDvLOuOLsX8Cz
HFqS/cVqrccf9G3bdvA7fEDrx4ecbd3kk44besd/B/Xzz5kiXMYJA16+HdEj
WcaH6Dd+X5Yry3DN0XPfjqynKT3388DRew4cNn63S7LMg9DDU6quPnyjR4TU
B3jh3INe/FocLvGEb9/Y7VJiLq0PePhf2eGFtZ/oe6X5+v5qonnCycH+Q2ff
lft/8BM78MPbWne0WRMpdrhvDb1L9Kzym1f5iB77/J/CZ9bdkXLvpeY57R1W
ftun9Yxn0PN9Cv+zcPZ/0RN/yhF9w9ajFw77pjnpet+uFvLEXtcH3r8mnkY9
PCY829myaW+E0x6ph4w3GpYqOHlcqRQzvr97s3M+i7V9OPU2I5tb8eT5ISbe
FyZd7JAvuL3HJT/Tm1CJQ8GXc3qNsNV6Gc8rvXWjerZbd7wWO49zt7TPujHZ
rF/a3PLXpTl25u06b9/x1eZvNx83Ui58hwivlnIpaNtrXb5w/Dnv2qXcp4DM
OPxz9LldzpfC6Te4lwb+o0SLxNM5Xgof8nVc4R25tL5Tm7bnoy8Fiz/0M9zP
I/V8SqkmTS8FC6c+G9OFY4f3KPGHfhU95Qvnnhz0zO/g6Ek3al1sy0VnXkp9
IM7o4U2jwqNmjwkQznzTqE+raZHj8S/tP5z+ED9zN9tavnH+EPHTeO9Wh+j6
60aONufYl3vMFMdO7tM1e/Rw0HrmKfgp91ap/0cjz8j7T5OxKTrdnBVerZoX
rsuRuJEv7y1PHz8flCJ631+3bHo/CpS4yfxR3UcEd9mfsM/nYaDwkSPsfPJ4
mesZV+DnjajGA586PJf8ynhD6eFby+catCCf5uTLWN/IF/fO8Z4vnHZKfot2
Tn60eYLmmxP73EkaEyD5kv99lS7xMXLKF/+PDvJqOLDiCxlXMH4jXXjGpsWP
HK09dX1T4zT05Iv5FONV9KwPwNEzn5Lz5ErP+gkcPfmd/Lz/X2ODfE2894qf
sg6g8ss8V8a9irPOYNQz/2U8T7/KPNrImXcb48b8F/2lAzcXDVj4SvwnXdoL
fKPFTbu707yFM581xpl5MZz6QxxIFz3zZTj2mRfL/EX1e/hD/Os9XjG2vl2Y
1E/ay9vdI4cWuBiq/8dVfeO+Kf4X0MOpz+jbjb5c3Wnna2lHtDv0/N/BuaeU
dOHcNwX3Skyp45IaIJzxg9E+etYfqA+Mb2W9SHFZB8vbc+z9yY+lPrCuRfnO
q3ZtVec6AaI3rjeyPmbk6JnHMQ4ZOeCgRbduej7L/yzzUzh6WR9T81z0rFPB
GSewbsb8Fzusv8HRMw9lPoieeSu8V5uFVrsjffR6Gu8YKjtwP4s6gQ9eeogd
5sVy35Tyn3kr/sh6kZrnku4C+2nlc/TzF/vEp0aZlld9G/3BDXFY/3CdqWsB
HU8464fot5bziR/4n5/YMfoDt7/Rv93jh4+F95h892CJzebrA8zLpN9T67rY
kfuIlJ1afz2fUSpQ1zc4ftI/rLQ/u/7mMu2PUc/8Xb5zibEt2OPRY9HLd0ys
06p0jRz9+SaV/Z2WeUs8s31qUum+gx4fwrlvivkFdrgPTd4HUe2Ce6WwQzly
v5NRDy+8tGCWEYv1fIf75Yz6diMqD17gqesJnHIxtiPuncMO/T/9yfBR551b
XgiVfgPO/jWcfpL/d8evQ+99Tg0QPfMI/OE+VdIlnkVLfcgaUULXHzjzespd
5jumUm7Ru805emO/xLyAeoh94mP8f2T9wdhvUP+pP0OK9fUe2f6BlBfnT/AH
zrkm6Q/VPVryzqYqF+6v49wa5Q7nHBp67sXi/Az6uL3L3pV+oTl67sXifBp6
+ILosKhml2JFj/+cn4FznyH+Ywc998aj5549zv+g514+OPHhnkA48cc+59DO
t21b2KniE4mP0Q6c837Y4Z5D/Iejd5lwvEuZ2doO8eE8npSvuq/MGGfuYeZ8
FPnl3T04dngvD858lvt8XH+EHXzlmSjrM/BqzYtXdI1MFD3373H/OXrut4fL
+qq6x4n3emT9X3He90F/d13SPu9u0XJfOnrefZN3wVR+scP7ZXDuvTfqyRfv
ScG5v3pB+e9nOgbo+MB530firN6z4xyX7FOo9+/g6OUeqipz9717ofVyP5J6
/wU9903xPojsd6h73uDo+b8wtnf8511s1ru4P4rykn0BxXnfjfEJdoz1Cs67
ZqRLnIe3ODw3l3OicN5JlHej2C9T6fJ+nIxbuD9NvUNHusTNrtzEnkmZ7QM9
nHeIZLyk3i2Vd9OIj3of0Mh5f5A4Y4f76+BuSyZbrq7vI+lih34D/4124LzT
R/8g7UK94wbnHVXsw0mXd3Bk/KDeM6W8+B+hXIg//sB5twvO/Z9GPeXFO2LE
gX6M/gp/qCcXe1+wm5waK5x7HY167HAOFs59rfTD/J+i590ZOO8RGPX0w7wH
B2/YOWfT8pN0vw2nv8VPOPnivaqINVFfNmc/LPbRs74NH92tfreHiZr7Lu88
MbGRuZ7/I75PgXNfKH7ST8q7DJX/V+rB8xh9TkDdz0kcsMM4AU4/w7vD1J+I
D5PTBtxyl/xSD+HEHz3pwjnfC+fdB7Gj/AnL2a/qucbmdogD/5tw3sMlbvJ/
od47Fv+VfcaNfCeFHs73MnDuTTXGmfrPfc6yr6c47yTC7TY3+1Y5Mz3j/yN6
3kOE48/ewuc6Pnuo91OIJ+eo4bw3If2P8pPy4r05KXfFVyf4z1rcRHP6gQ4D
57u3/pCoy0Xdq0k/YGWaWbPa7UPS/9C/kS6c9+zgx7v2ybff9//IOuvwrI6m
jQeH4BDctXiDW8LBigR3CBAgOMXtpWhwLVCgeLFSNLjrAQopJCSEkEBIQtwV
98L3fNd1frO9Nv/ez/3MzpndndXZUXw5V7X8Hv4HHDn28Zfu/N1E8b9eG1o3
R1Lm8ZF2MrW809KFPVV75t1a6hGcd2719k8/4v48OPbn/ryM41Z+Ftph6fvX
a7q/DFXjkSWf/SVw/BU476DC57137IN89mfA0ROceYJeLu/HIgdc8j39ZN8z
6+g42WemfdKu4IP3fvVz2aSWCmd+KO3QyrNAu6I/wgfvXv96r9mDFc47mfDT
x7xsunNguJQLzveCM88B98//se+6nqpc3nXH/rQH5NMvWD+yPwa/QfSmoQXP
Rot8yedesX8z517Rwuc9VeTA571WygVHPn5e3o233omFD848hPrFzugDH3uC
+9/4Y2qxikq+vLNqrV/YF0WfvvMarnjwPVbW75Iv3sobKPkUrHdZsbPk77Dm
seDw0Yf8gPDBWYfC39n2yoMc31W7FfnWO6Xg3nlmFCviofQHd/HfP7d1F1Uu
djs4Z9GD4t0DBYcPjhwZjzgfsfjkxQPn/Vi9nZOHiHqhf+FPaCfwwYkPBSd/
jd6umJ+A873UL/pMLDoqd8EPqt6xA/kawN+P3pG16NtowXkXGn7ErPMD83kr
Pt8FTr/W5YPX216m5vX8sdIOwYnbhc97y9QLfN5nBl/TY+GroEOR4gfAkSPr
Gqu+GEc4Z2F/Cf+APnq5yPGqeSrXlGdxYn/4qY+P7Zh4XOGMm7qetCs9Lxt4
2/eRg3ddUzjvQmNncNobcjj3of2If7DaJ3iDcqdqVPBX+KrtvbJ1Kqv4kvfE
yhemy2G+ofdHxk3yHcMHZ58KPnmg5H6IxSf/kfjh7CUPnjuo5Ov7inwXeRjx
G8wz0f9rQG3XW94BIkfmdVa5jOPgcm5l5VnT93NkvmftJ4CT14/5EjjthLzM
4OxvMJ9hfSF5EgeuKf95isLJd6/zaT+Mg+CbljRIP7BQ+SVw5gOM1+D0a/KG
b9o4pVyWuo/le/kuOZexcPJEy3mcJYf5P/YEJ68uuOxHrThkf3VFgtSLvGtt
7ZPIeGTloZD5p8Vn3QpO+0FPcDnPZT5j5WmlnVAu/NhxM73svZ+I/jLPscqV
d/KtPMLg5OmAT7nk6QDHbuhD/llw8mLofPRkH2D4iS/tdlx4JrjOZ91Newan
H5FfFZz9Xr2fyjzBWo9QLnL0/sV3kd+W/QTiIqvHNy7p2iJD9mHAXQfmnrlx
RobwJT70asOogVUVH/xAlYnbawxSOPGYZ6c/HXHXI0P2u8DXeIc88vJUOOU2
OJ0vetNehSN/7rypOWsvV/KJP3V7sWvGm8aKD96k8b6odyMypL+D6/meiCdt
8nlp8fh26cIH77994NFym9PFDsh5PWPk9SpZMoxvm79323jVX/RPLzBnwEq/
dOOmS5XTZ7P4i/7gyJd3fX9+UOLGV4XDn92krlO/aIUXOn51/rdfzUxysOeS
5dtyvMqj6kvyhObZc+xtlwyjjmNs6rdHvqI/cuATL0OeLOwMrtuBeJmsq85c
PWWv+ODYk3pBDvaHPzzHtH7nLniLPvA93vTo/cDXV/BGpef8sNzdS+LBdf3B
44+ue5286z/1ZeVHg3/68f6Qi5e8pX51OeClyw7rXilI6QmOndGT7yU/GvWC
PnreMXDsBo59Wtmmm57300QOuNuBRUdiSij5lAuf9gZO3jTkg5cf83TJzF8U
nj2xksMKO3/hN/N72nzav0ESv0a+LfwJ+JIepw66pSm89QqX7GPtQ4Qv+eCs
+DvyycKXeL2GfYf4DFN534jL0+VQLvnLwIk/rTqrfuql78kiH/xjxwOuA8an
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
ihfq3dPL1PMA4j/nT923I5+PyhcJvjLvbb8T5ZUcytXzQoLreSHbvxr3bMqx
R6ae11LK7R+Xvc8eJZ/v1fM5wmffAz7rAj0/Nf5fz5cNrufXflHt5baEGIWz
/kK+nj+dcVDP876ni3tIs7tqHY2d/WbcyFJ2UJip509Hjp6Pm/Gx6dsNpWZO
SxA54OgJfrGnw86uDyJMPZ8438u+FvL5Lj3fd77gIjWPO0Waen52ytXz0et2
AJ+7p0H4jXSFc+8Uvp7/lPmeni+ecvX88i2Cb3efvC7c1PObI1/Ph67vs4FX
f3D46rBlLwRnnQjfvVJ81P1Tah2t2//6800Tat6PEBw++mB/PV+h4Fo+QXA9
/yDysRtyuiaERs/fEiE4eWn19S9yaOd6/krKZf8Z+bQTPa9i70HfS75coHDi
AeGz70q54Ozr4s/B9fyh6KPn/ZznFR7xomGkqecJ5XvZxyYOEfl63mpw7AY/
dkJD9xsrFA7/3kO3R8ubRpl6HnNdDviVrKtydAuIFPxI15A3j/rcEr6ez10/
dwDHDrJfZOF38p3KXnSAwnM/j4r0muUrfD2fqd7vwNmv1vOl6u0HnHWBnndV
b5+My5TLvrTk19b8D/jCFeuP9XRQOPFQfBc48dfI0fPM6najHZZukXatibPS
k/aTWnjTlj5Hwswjm5d4DckbLfdzmCewriQfE/i3DsU/ZtxV93yYb7D/DM68
AjnkhYEPTh4B+BcyZmf4do+UeL3+/efvX7A4xeQ8F7yd+1Pny7lSTc5nwZ3K
bZ4RPSpF5IOH3Fh8Lfh8suDEG17cWapmqz+TRQ54yc+1ojr2SZH1PufC2EH2
B6xzcPAhI/o2PjNH8fku1vW8D6njnEcjB5x3CLEb5fI+p25n7H9+15IZ3/93
y3T89u/mg9vCxA7rVn37p/quVJP7bHwvOPcM4c/dMnDUiEppgsPvP+3lY6+C
aabEWVj8H5admfVme6rgFf++ULjU/n0iX+7LWXJ8x8esNNemmrxbSNyorg/4
fqe+793epUp7QE5FY/Lxcu9VvcNvNjTmyJRlqn7BR95bnyOyWYqZtPR/f/dc
GSX+sELVz3MDxyo+eN/ZVZ3aF1byN6astp8w+pbwuT8g9rHaLff9KBec+37I
19s5/J/tAx5dCFU4/MHXxuYsfT5F2gnvnzOfRE/e1QeHz/vPzPPh854/+Is2
rX7cMTVa2jPzbeTIfYwG9wt7dfhH7V9Z/QI+8slHAN6+57K2cefj5F405bLP
D077Z9+jzoXnP5/zV3zZn7Te44LP/gly9m0t/TZ0+znBefeVfiT7k9b9eXD4
vJdOueC8f0u5nNfLfXJrvYAdwDnXFn9r1Qt87Dl3pOvZSxMSZV0An/wF4PC5
346cBWPqfMvlq/ShPXBfQt7Ltb4LP8O799QXOO/nIwecuADksD/G/SX8G3aW
eKI2eeI9HPebTrObZnHopfTR/R7vr4KXHnDwz2z+So5eX9UrnNjbqUFCpnId
9u5NXFJf6cP+sLy3b+nP/j845XL/Gb+3qnzEx3xj003eGQBv4ZcQWNhMN7mn
Dd5h6IEnLXIqHL+R0jYwLuenNJEPXi974bzPByk+/qFJgWb2e8MVH/yXRzN/
nGYoPn7j5T9j48ZfU3x5f2P1QXunskp/yo04VyrhxRmFI7/WogV5Z29LN7mf
D7/72AcBdmvTBIe/o0HdD9unqnGEcl3fL31cMyBV+OC9U4cEjOyWZnpXqXfM
x/OZ2O3OVY/0R+fTTOIOKBdc4igt/pHF22412p5mPnROarX8ubIb/I8TjFwh
JZR9wMsXT09YP/u5zG/18Qj8RulfblYZpXDmq47rg2deKae+C5zxUex2MHlD
k7t+meSz7uiUMN65jHeKqccL544Pi77WOdXU446RI/Gqlp4XCvU2h0akSnsA
L/Pu/WzvXmmmHge9flz/usPzppl6/DLy9fd8Jnsv3lnjeqqpx2VjTz2O+7ca
OT8GpKhyg6ecbjO73B3hyzs/Fp92hX3Ar/wed/PWfvW94GfW3jQ/l/1Pe7Pe
0UJ/yQ9u1XtMsxPxrWemm7O+L3793LaOwT76fAC82uq4iKk7Fc56BD736rEn
uLwnYMl59/RO9xNt1PgOf0+bVcPD3iv5fFdyvtRlM8OUHPBXvX7s4bJIyfGv
X6ZZ7Q/3ZF5BvAl87MC7E/JenMWXuAzLPrQ3cPhjl7fy710q1SSPGO1B/155
18uab+fcNM+s0DlU5OvzQ/ppjzoncr2amGoSX0C5yOcdY+Tr+mNPh1nbomI3
KnxO3+W+f159lImPnDp+NY51cE4xiSeSd+Q0PvXIPI34IHD4kflW3JzkliTn
RIybrIvBGXdYb5L/Aj449/d0PnLaFxy+qHbjf8zi7q4rbq1IlPMy5LDvBI6c
icXSL/VprXDGfdah4HbmDyu+FPARnHN/+OxvoA84enIPTce5b8m8hX1I5IAz
L2Vc5ryM+Q8497KYL/FOrH4vjvdUkc95Iud04KNOtvOs1iFezlvRn/0xOe+2
u9v6nKOvzEPgr3KaNKbyI4WTdwP5yCH/CPKjfQedde6u5IMPiPDsVniHwqlf
vou8JODIJz8I5bJfgRzaA3zynuhyyGsDn/NNvlfXh/N6+CPm+i45m6rOkdGH
ezjIob6Yv4FzXg/OO8PwmTfyri/nwuC8V8x5NPc3WC8wr4YPzrk5uN/pvxZE
lUjIpCfvbOtyyDMi91eLnztc1EN9Lzj7LZTLvjHtWfI7eHy7sC9c4ZSr30/g
XXFdDu+Eg4/5OnNC74fqe/muBqHFH07/V/Uvfd3B+gv+Zv+Y3274qvgF7Ayf
d5LB5z/3a3i8iSoXHD15/1nHkc/9WOQj5+OPncaGnH9m/hF+6GuWtQqnPcDn
nVtw5LPeBF/f3elYuXRVX7Rb7i0gn/VF1dd3gw9WUetZ+i/tRL7X8hvg5POC
fzX3S6dHdxSfcuGjPzh+hnxeyOEeBXJYN30s1/9M88oJ8l2yT1X/VWxgQ4Xz
XXKuZPUv+OD0R/iXO5bt/D1A+Qf8wIEPFVyyfVc46yzxPxbes6fLo0Ozzsl9
Leqd79p1zPHJ+vpqvYb/wT7kp9PXrfCrRm8oubWij+zjSVy8ZU/45BWSceH+
t9YR01X9Ih/70x/B2a9mXMM+jIPcPwEPmjZ69UP7JPGT2JlxFlyXw7gGP3DA
sbdFwlW54C6Fimd8TVHjO/bHb3PPTcfJzyL3NCyc+37o43CtzQ/H/lblyvrd
0jPnoVYlh3dR5XLOxXiE/Hz/NO9VoaHCkS/34S088of7vT3/3Cf3l8D1dkW8
kr5fxLlbg/cdet3vGi334TmnI55C7qfxDufm9av3lYkRnPNf+JQLPzJur7ur
zb8z7jD/nP/rjFzPSydIewNfOMlnYpG1Cuf9Q/i0c/j35izyaroxXnDOBYZt
CSngUy5e5ICXXF39wl8lE2Q8Qk6Hwa8if7R9D+MyfHDk9x15bNOzdoGC872c
U9Sbdq7X6DXRck+M8wjiX/BL8MGZj4Hr9kTO/X9qjc5tGz/AuQcCn/v/8MFp
P+DTPzw5/oOvupe7rMHD2792Vvow/8QOZ813dZc0SpRxBNzT1f5BXBaF11ib
fGzMgwDhMz5Sri5HzmsGb6vy05IEGZeRT70zbsLX2w/4gDXnCubYoeode84Y
F/zsQa54KRd8Z5eXjZ59Ujj2RP51pzFj2paNkfZMvcMHH1ywY8Fxg1W52BM+
4yx6utkX/St5UKKat1vnX9iHe54SD2vJYX5Cu9XtCb647rymy39OlH0/ytX1
gT/C+86UoS2SBMf+6z70ynLTP1HGC9aJlMv3gt+ql3tTbIqqF/8KEV4X8vsI
n31j+Imv/te3dndVLnjIktEv729VOOfR8MX+Fv9u+qUhAx4mmndX93txMSlO
cL5X/JiFv6t1YMCXxDjBsUPFgfWTBi+Kk7gYcL0fgW/pNzBPwFeF0/51/8l7
6ehD/2IdrX8X+wBHCm3esmmosgP4zYOta2Svoc77kPO5YouldvFKTuTQmf52
jf7JJB9+zLp1GevLJMn+OfLhyz457/C7lyiatlzVO3KOBM1+sMT4jx+w9j30
egSvWeCXiCdDkmX8or3pfg985uu9bY75xIidwX9xKjH73ynRcl+XesGPIYdx
BJx6kXd6O5fo183WT8DpdzmzB675X2CM3DemXF0+5X775Ln2TI9YmSfDL1hz
ytUVCUo+eA33gYmVsqt2yPgCn3s+yAfn3JZxHBz7g3861XiA2/E45bete2jw
pf9y/6rK7/nfjlJ8xnfardS7dQ9Wl0O5c872yFfOM9ZcVSb3ffduSh/kEL/A
vRrk0E7AA3K1uDf8WZw6l7TiR3Q/LO+WV608rk+c0gd8e7Hcge1t82nGcfBW
t8qVyWLTA5x7Qd0Dfy7167UoOd+BT/uU+YZlT3Dm7fBpJ+iTe+wA15dvFc69
a8rV43DBs7Wveiv7W4XPWdgoLOG+4nM/0OPs523ll+yRdTH3pTkvYP0LH/x+
es2sV7aqdTTy0ZP70uxbIod7ufRrXT584j7A4dfoM6Vq606hcv8Wfbh/wj1D
cMcvc6/91D1S7mlzPqKXC+7kvvpy955hEneDPfX2Bk5/xA7yzuSkfG072uqJ
eCJwPQ6aOCnkE2+CPwGn/YBv61l1b98vCncsGJpjyELFJ94Ef6XLAc+3rGHF
ob/HyXybfq3z5T6e5a+IuwHnu9hPQE/mRezbwAfHDvDzfv754vzHCpd3kh+9
fx7SMkHiF/APev8Sf/K/hm3yr1f9F/+Dnpxjwtfrhfufup7w1y8u9fOeLfEy
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
+Z4dDU8aG2JUDa3tvqufev98WMf5ntVWhBuvh82+6Wlr17TzOS1P1nbaFWYk
z/B9kWBr1xJvcr7mkFp1Qw3X32u+P2Pzr5J3u6p5aOWMDIN1dN8pdi37LLhr
9M3Z3Xuszd+3bdphQJqtHzN/KHBx14UXbqkG+jOPajsq4UMb23ckLnDIExH5
SNaVvccu+/XhB9v848PNoOQd/mbus3+GxLo/MzyOzbBvvCvVkHs+RqRzveAk
o7dPyEyXApFG1q4zS92ztV/ac60loe4vbf3MO3eXxYtt7V3a/waf6scfRBq1
OgVkXbYy0KQ94z9HNbl1/Jat39CPEveenbPeL9xIqVxhifMfvrLv0dsj1+JN
HmkG80bmM08HeUxt0CrNmBxkbx6q7yP3WMZk++Qx+Huacfjo1fEZNj/EPOpi
2DvH8PNpym6WP9w3/a/ftjUKNoILzysyaZe/xAeVHlv92s+jn0m5+NUahaqv
PZcSKHrih+8f3f3htU1fysUf1tv3adPltwFG/Qv7Tpxt7mMy3g35afuxfTsf
S73gVxsV2N/+pyxPpd7Pnz034HqHDKNrx4JnK9nqn3bCuNxzbP60kztvGw7D
XhbxqB9k0u8YvwKzDXngWjJI9ocZHzvcC65fNDHQpF8zPk4I37gsxNaf6Ncy
PraNGH6gU5CcFzDelQ/v6HuqV5Csd9r0H3dxhM2vgHsu6Hd0+604I3uX2K9b
EmJFDv2dcZB2gh9mHEQf+jvjIPrTr73v/rgjwfYdfC/9euqpxM4Jtu/GPvgH
xmX2E/7OWfnDnAfphltyvY1Rwd7Gns01grfY1gfMi0pWPp/l9HXb+oB4TGt+
Yu/n8vsfCf6Gw4uDHxb/ft9kfhJ8+4dru/38jDu9PnUcYJv3MQ90PP5hms/O
M4bLhtGvGtjmfcwDG31+/2Oz657G5aseA0/Z5pXMM+0aPpyXfdd+41aeVzff
FHp/k/kh817WWczHXhY4s2fgv2cN1mXMS1stf+80s/0BY0yv/llf2uZlzNNe
OuU55DDuqsG+GfO01zGhcXV/vWH09vc4Xda8ZzKftPtUvtLHsd7Gx3JefefY
5qHMS2s4Fl/ZJ4uX+EnJdxY4+Mlbm7/E77GecpnzKmbt4hTxk3J/afDFfDH5
UsSvsp4q0mHKjeixyVJfzNvj22Zbvtg7XezPvL3V1U+Ts0xPl/qa7H5hdyfb
vHJy9Ky6T2z1Rv2yHkwvMGfASr90sdv7h8fGv2p9wOjxsElev3cZxhCPta9+
sa0/WI+At9rkO8GwrZNYN+X+34hyZUMyDLlXbK2bvrY/O6JoYIaxfETevMkJ
l+Teb/OzcReGnc4Q+7Nu2lS2R8TtXRnGkd4N49b+c8yMb5n2wqejp1G5zecF
jokZYn/WOzd9VoWUr51h5Kx5IFvx6/fkHuOyvsXL97fV27jgp6nGZBXHccj7
eW072/wJP888J+cXpwIOz5PEzzOPcg+eFLV1SZKx/mmrkEI2P79wwYxzD23z
qLCiaVubd7eND9b8ak7DK0/62uZVOYunR861+X/mY73HOa76kiPQZLxgfvVt
/e7fjtvmPYwvrKPnNE/K9qLvE5Px9Kzdi+bfbPquT3zwfZFtnsd4wbp+5Pws
y6rb6pN+yrp+8aeUXsdt63naLevELfOa1jFs9qPdsm+wzuPsP1dtfnfyi7Jx
LTfcNS5/GTmwvG2dezLQsfXD2Esm/YV18a2yXhFuu86Y9DvWv4nrf2864f/f
37X6EevfQS65tlUbf8w8vsp5ap6U4wbr34r90goe3r3fHFtuz+L1PQ8YrH+9
v2x61/LNPhM/wDq949YinyqMP23iT9gPWba68ryjtvGBcWFcjylVWtrmXbkr
3ltx3Dbfwh8yr2N9hP9kfrjdd/jNAJv/vpNxcWq0zZ8zHwPHn7Of8PxQ+o/+
tvUA4xf7D/7Hx/t0sa1DGDfZxwiIKdStj23dwrjJvofHwtvTi9rGT8ZN9k/m
DBxV8+N2f3P24UV2q0c+M9j3cPz14vkYRx+T8ZR9pJlnj1wbZ1vPXB025EH8
+ecG+y3N/jH/7Gcb/xn32V/KWfTTmke2dQXzOvZ/Rv8+p5CTzW8xT2P/p/Sr
tes+ngswmddNXudR5G71dOPy68UVvGzr1ZO/vurhkeRvsJ9wfc+kGy/W3TcZ
F9h/2Nd854zWNn/GuMP63b9GgO8Z27o9l9/wOyVs7Xitf+2Oz294SzvHX7XI
U7FV0UV3pd2e94z6uNI2P2T9TntgPsn6nXaLX2K/gnaFH2Odjp2ZX5Xf+kuJ
vrbv43t//PGPNUVt3886fXC0T80k2/ocP+xcN+BZ3hBv+V78NvsntH/8asDO
Zbd2TPI0jGUpQ8KSjpn4PfZh6Bfw2Weg3+E/2ZdoX2Sn0Svxkom/ZV8FP4D/
ZL1Je2D8Yr1Mu2q/bdnEdrZ2xvoO/4afnDmzxLZkmz/Dv+FXWT/ef7jhop3N
H48pkWV1a5tfY72M32O8e9kz7Gsv27ry4B7fIRdsfhV/y3qZ9sl4yvqa9sl4
yj4A7Z/1wreb6WddbfPc8MOtxj+3rQOY/7Pep1+zXmCfgX7NPJx9Cfo183b2
B+jXzMOxg2dqobzzf35iVvoh2NnNZoc/miVv91wbbph2b0Kn9Vd2YF08ZLP/
ogW29bDnjCVJfrb54YoKm0v+bRuH4k+2qrawlrIP9bKwSFE75yyB5q31uz78
szLJKOCdd/zLfKpeonL0dFhiqxfstnXLnPHOFwPMm71Dcq212Y32kBwycu/c
8Mfm1uTFEf42fzHmr8K1G9UKNdKalNi51VHZPzg45KeSp1U7eXK3RhN7WzsZ
fcd3SNt4ZbfeXh75p/7HbofK3+pc6E9fc33BOfUdl6RJv6vWbfyF0YaP6d2p
TO7839KM6hXty897GWDUmFwt35+eyp7U16aBN/c0THxknm78x7Zdtvrat/PZ
o5qpbWQf4MiywRdr2r2UfjQx+sz3SQ/2mV22P7TVr/IDZ15O7Lja7bRZsnzP
tQdtfuBq5LCfN2U7buwOezJ+z5ij0h8/LzvczHuC6r/TSjskhNvGrfFXY3b2
3qz6o0dijiJX/tMfs39a+nyNzyVzbKUZdk1t/XFnhe+DXZOVXwp7dL7g8iDl
xx4sDytU9fVN0ygxa282mx9b367XnIXRyv/Edol4f6Kq8j8HHL9eXW7ztz3T
2zrZ2/wPfnXN/CaLy9vmA70Xl7wQ/ixd/MCa/gMv37l8xyz0t2eQl20+O3FN
yuS6s5VfbT2qc/eJP2UY7ityFL50X/kxh9/M0zts6wP7UX0Trtz1Nq7vTB5y
KEP5Z8Y16mtbWI4m8fEBhndxz6VdlqZJvTMORgS3u7feWY2bG9N6jx3/MtDo
6F4m4M2nVKPBl3MV+jxV4yzjo4+Lfdo/W/3NIwNcqpxwfWb81Nl//zD3VONz
16qxjm/UeHdxehG7kv8ZH6Mmf1v8i82vrSmTu5ubza+7DqvxuKSTGk/XbU8a
EGSbb9AeZP1izWcO73b9KUvCEXP3UpfQW2OP/V9ZZx5P5bbG8VKmolGRkCmu
sV2nG7XVUuFUhqh0NJiiIpHhEBlKnRLpdnAynNyS6G4cESUVvR1T2rSTtjGb
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
sR85JfXbWUvx6etCfwd9KFwX+kroZ/8G2h9Eyg==
    "], {{
      {RGBColor[1, 0.5, 0], Opacity[0.5], EdgeForm[None], Specularity[
        GrayLevel[1], 30], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
eCgCRWEklIBCih+m6T1gBs94H+bqeaRvCXrBGdwWXGsPXeBxf1Znf24QOkBb
aOdp+IT7L8DFGMuHM56He2AXfBxjz50J03OZrew4HIWTcApOwAyuDctBliEP
x2Uhdy7Lt7KeDz8T7if4HsLx3yPsn/CNt9V3IIPzaZAIcZANmfAf7xdC2Ps5
1rZ/6/3C7zkWj8rlH12DvCojz7diuWzMonFivlyWtniIhi+5/zf18xCFPx0C
8BdxROaytIXpmTz7vxwbh2rsrHI5zz0fwE64CV/Br5DicpKUy+avNVeoOV/N
ac6FBzlfHqrksuPzlFkF3Pdxq+PWgGq5bL5Yc831fM5R89qad/6RZ1yH3TGm
H2qe9GHCZ0GO59XUaMu3idGWzxFeFiEQCmFQx9NQEWpBbajpaavg8vy6y8YO
1Q/SN4dnvR20+iXZuwLb4Q0oTF0Yyz3j4GkoiD8/FIUnqfeDYDCcSSK8xii4
nQg3SvUX9hPHNigSazKvejEil+mZuV3XVV2e7PI/3uu16s7UGKuPC3Cf8TSM
hoHQX3kpP+X3JO5zklHJKgxVWXn8ObGm33b0PlF65iRvP6WLSueU7qW5Iem3
WrcgXVc6rXS/3uT1c9H2viszTR+TbvY9/jmZtoZHepfa5HVB0xulf0rv7ex9
sfpB6cnSsaWXrvS+Un3cCt6tlLc5eWLtWHm+Pmht/6qg9e/SJV7ONJ1thR9r
ndj6eKuzet9TpPN9KKxyUv7B31z7B+7BCPJoCAzOZXk1j+P58B/X7sO/8ATn
h+SyMJNz7Hgi7iWuveZtr9qEWd5ufIj/I29nXsq2ctRYZkW2tS2LcENJWxiE
xFo56t4puleyR9wXcQ9y/2VvY6/BVZdD2YJkI9K7qA1vBm0gn8vhA9BIddLj
TJZsuayOdTmUvH1DvtyONnlQ+zzNZUl5nldly7OmkJZpMED1h3RnZJuM9XN5
65jL7B6yk6gf+Sho8nYJt1Uu61+aex0pBAUk38RRXusaXG4lq4r/A+6ZxbMu
BG3eSnM0KyPM/ik9UHbOi64PaJ47KdP0WOnA9zNNH4iGtyn/M/GmEzaBptBO
diqeGQPZeg/CZ0I6vMc9n8G5LBsDRkEg03T1GAiHj329R2PZq13f6wDxXEuA
OFiGLtWWc0txUzJND5eOfQU9/RwshR2p6ESQS2sscF+FHI6PSf/BPR40HaO9
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
HETzPjEQBYFksyP937qFyGRbI/El4b6Gu3Cf/IgN2DzpGX/Hz6GS2k+ooPqK
v5nrS+9JV5Iuq7kw0tESmksu8X8AH3qYDzw9jbnWAOppX3jNzXge1sZfR21G
hs3ja72N5tFqaR4TqkFFrbWAfFr3ASWheLLt6TojYPu7FsNfFAppDBywOVPZ
hPPjrwIPJFuYAlBQ84RcGxmwedXK+GtCJSji8dTW/L+nuWGGzce9HLD9MPX/
Tf2Lsx3c5h3uQHayzcWXh9Jejp/CFemW8BOkEea4l+9hqEa4BwM2p3MJ/2U4
BtPxT1F7Bhnckwnpssdw7TfISra9bScGbJ/bstIJ/LkPk6a60Ej6IrJbnrB9
tZ5c/0aUfTxo71vF8/YHT/8teIR7OngZFQ7YPLjq2gyf11uaaP9MkU1Pe05q
vnuKz/dpPPul63u30+1/WLfSbX7/qYCtbdDchOb912tO0fN/GGxNsDUDm/Ut
F+4qeCXR5pI0h7XO5xa1fkDzkppvSoHcsFzzym7PHxCw9QP9AmYz0Ry95uvf
8vnfNz2M1gkMDVjbe9rPa+3BHJgZsLVtWiem9WzTXca0JuFln8vWvLzWkh2E
/bAy0eYU1ibaP501d78rwdZCaE5TayTakqdtoFWGze9rzYDWSAz3slZ6JEtf
aZwERQK2/7bWIXTRf4zUvwStzn7jYep7Wavu/Ij/F/g+ycpObY7W/9x3+/Of
kJpsNqL4ZLNL/+fzL4k+v5CQbGucZEPWuqZ7STZHk5xsfWU+l/ld/qzfoVvQ
ntk9aGsSHoeGMAjaJ9raA83R6JvH3l5eKt+NiTZHqbkqHWst4kpvJzvh3wAd
E03fUN/aFrrqH1cavwVtjZzW42n9W2vS9KjX0/oBmw+Vbb+c10e1q1pHMdC/
u5Ts6TtN7cVRWPZ9bzeecN1GY8MjlF8X1dMEW9d3x8ta+xsk+lr3LjzvMegE
nTWeg2CS6eEaY3aHFbAS3kiysX+/JNPPNWacBlOUfuiVZGsJxsEMmASZibae
ZBoMTDJ5+y7R9CjtGa59vDuQF48pj4I2b95SZYA/PtHWt2gtSkf9D4v3aBI0
2/LcRFv3stbTtjTJ7EvaA1z7kNfw/JQO0C3J7O3JiabntEmyfnGsz9EHPf8l
2/oXUtug5UM7zZHhboB1SbY/sPbN1p7Ym/z85iT75lT7V2gfg9eSzM6selTE
7Qmye2ifc+0jlxCw/9HfcR1SczqHYH+SyaRsj68n2fqciUlmryvj/az6Sq1f
2sv5PSqjDLM5PJ5h/7/u68ea61e5bPI6+1gk761/qSXZfNAyeBV2wPYk05F6
cX1MpP0zQvskp8TZGFZ2dc3pBAkzl+vzYDX3rEmyf7Zqjumg57/08zC/V/n2
EiyErbAtyWzvL8CL8HySzRdojKz1bC/jXwKLYSOs9zwfmWH/ih2YYetVtOZB
azJ7w0NJtv7hBQ+v/lH/tOpBGrtF2v42WlemPRzycC0n2fo49eOdvR37Nsnq
o/qOFj4f1DpgOmR/1xv1Te427VGUZHtWZMXZPiFax6W2Tmvb9I4ql7zEf1fP
D7f/UOzz73nV9mlPCfVx+kZ7gvd9kzxvO3sdzO/9u/SEjZ4n6uuXeNuuvd+b
Eq4ZNMmw9XV6L61nUz+bO9n6aK1dkV6kNWazvL7Ipr2U+2d7H3E5wda/qQ28
yfG1BNOjPsX9PMHWvcjWNDfJbD15PP68rgNIb1RfP9Xru9qB5f6Niexvr/n3
HbKhaQ2P1k6PSbI11eW9fRgFI2AQ/BSw/3doD/+bibYW+ht4JMnWJD+ZZLZr
rdvU2umPfU5B69O0nnOHzy/IHiVb1kjJYND+M7xYdRmiKZsHgmbjGuLPVXs1
2sPLxiVbn2xZ+m5CdgntO3oE/9Ek03nU5rwJ+ySjsfbf+ZWxZidUnR3v7zXa
3zeP2xJl2xzm7zs2yfbZ+B5+DFgeynanMdTLpG+Exmq4E1LMDqZ1uS/6GgPN
9T/vc/dLku3/pOH+z9O3gvavUv0jtTPhusBjsAi5Ds3hnhj7h2AV/ZMU/0Ox
9g9fbXqv/04m5ti/FONxEyAOYmLt34W3NA+i//DJH2v/XkxSHMTVnmcEtS4D
snLsH7L6R+pt7snGHx5req/a9qqJtidnOc5dj7Z/I+p/lJmEKxNr/9XVf58v
az4LrmoOCX8kVIi1f2gW9n+qnvP1Ko/Dh/ire98t26b2q9F3tQ9yXBZKw5AY
+8fu4BhbX3cz29brlnWd/Cv919X/Iav/z2aQphxIz7H5O80D9uZZdaAuNIKO
0EnzYLCNe7ZDCuFzw7/6d5b+bcrx97g/+PGDUDbHvsPVsb697ahvxqADPEFc
PaCr5lti7X/i+i95ecKW83u/w/9XjP1/uRvh+ng+6B/l3/u/PvvhfxhqaU0E
6dqnf91yfUKM/Rt0PO4HuJuz7X+j+l9tdI79D1f/xo3hOFbll2Py82+27bmh
H1ws5t5bPqfZN9VkRvKjdw/z/+qm5Vj6K3rZSTYkDypr/as3Ncf+7at/pufH
vRFjea7zuvew/yNV/yN+jnHvQpirMTIshkVplm/doEusnS8C+WGP7J1wQDYU
OAUntU6Ya1XgBdkwgvYtxHTcPlpfC7vhc9JxFypzvNSftczH+7IBrpFdgutV
Yu3/9bLbTIGJ8Abn9sF+laOfHwLNg7bWcx7uOPxjPPwRT+euWLPTar3lWzCX
cDtkhwrau+zztA3i3EB4Ks30PeljOh7tcWqOphpUhxfT7DuO4Z6Gni5jT8Cq
GKsX+hf2LJ6xmeszg/aPbH3DqO8fB6SZfUy2MtmCZkJ/mO32MdnN3iPcu3Aa
ogM2Bpee87LsXjAvzfYbSc9le5to/8CEXLbfyHK3Rylv1RYpP5Xnpfw/p7mQ
gcgck0kdR8Xa/5d/jbF81rfz7byOa28ufXcpG9fzLicPQ22XE81hDU6zeau1
qWa3WaP1YLzzJn/3DfhXc7wp1eRtgefh/KCtu23hZSeb2JMwDX892euC9l2G
1vZfUVo4VwEqpZn8LHR5K8611TH2j+/Znp/TYbu+i8ux7/Gn0/eW5nhGgrVp
57KtXWriNvzGan/xf6A6C7NI6wyYo/aIa4/G2jpk2Q/1vcMjsVZ/7/m/gA+p
n4AjUDfW1uE/DImpNt96mPO1ZeODWrE2D6u1UmXgFte+ga/hC/jSj/XtQEf4
luNNMfYfds1x65/sr2rMBJ9x7Tp8Ahfgov5bC4N47mAYBVNgOkxOtf/Lq93Q
P+iV5lPkx/EEs3/ezrbvg857Gt6DGoStCdXhEv6P4aNss4ccS7BxkPqpVtA6
1XRO5YPsJG/iVpCOpDEF/tWwMtn0/OPZppce1H954aT6HtKUrvoPb/O8d1z+
tdZX31B8R5hHNQcOA+A3/D/DL9m29qAyPBRj3zr9kG11pCb+GlAVfsq2ccHo
ZPtnhNaa6j8axzwNKruzLhvKQ6VNP3/5l3c8SLg3tV4sxtaGDYS35CdMDmGy
NT4gTSNhiNLHMwYmWx7mIVycr4vQs/TuJ+CM1/EPYDj3jIGhqTYWOJNt46AK
vgZDa2Lf4dxpv7er+mJve8+73KpcPodrcAW6c62H932n0ImKI6+jOV8ItwhU
gJI5Vi9KwCNa7wj1tH7P++KaqdaG63vM/32DH2trgc7LZk1cFblvDO5l/O+7
DlObe5r5vbdcZi5LTmNtb099C1mZ+6qoH4NqUB2qwlOEK4o7HLcYbmEokGNz
4pp3LuFpLiW9Blq67LWANtDW5VDzQZpz1Lqd2oSr48/SXLPmgDRfUFB6FuSH
mlALauTYdwfKW33fVCbV5p6qe540h4apphtIl5Deom+aPs22bxjVrkZBRI6t
S3klxtaXqlwec9vFJa+nKqNh3s5IZlR/ZSfprDE0/qkwFrojRz2S//92aTbM
hDja+3gI5LJ2Q3rXDY9zhN97NdvSpvxvzvu0h2YwFpl+IMf2nj3i/bj6R32P
qfZEurT2MJmHbrU61NoZ2V4uJts3WWqv9A2XdO/LyfZthdbea93CpAR77jVv
l+p6u6fnSvaKepmO474xyZbmllxrBS1i7VuSqcn2jYbWGzyH7OZT20197gdD
oTDMghJptmZS34no+7gyQdsfszTu7Vjbo0b7S9zi+Ev4DL6Gm9JHYq19mwQT
Y23OokearbnqCt2hT5rJ9lfeB3X1MI9DuaD9z+y3Tpb+KTDZ9ROlU/M7+o6j
fpp9E1qS8H/wLoVlcw3aP0vK4z4StH881AvaN8IfxdgYrTr+XziupuvSKaFM
munz0vOle/fE383TUzdo/1R4GLdW0P4/UTNo/WZFeBDqBO0fErVxzxPf9Rj7
1rJU0PavfAi3bJp9g6lv6zRmLJ1m395O83fU96oKo/NKj/qX8TBBdS9o8wHB
oH23q2/0ZJvSv1aHxtq/qufH2reW38Raez7Pdf6B+J+UfhRr/8uWrA5yfWmg
60gNg/Y/mPq4z/r4SGOEfrGmZ0oH0/zgI64/SI9Q/rdJszV1HaF9mn2fG0yz
+SnNM2o9XmPpMy4PKscvXGaUzs5c6yLdNs3SqXcZrPSn2XdDmo9snmZzo82g
HbT152qs3TDNvuXR/GlraJlm9bGmxyN5lo6tudFKQfuXQ1XcYtJv0uzbHs3P
am3MfupLVi7T97rB49D1/2vp3OOumvIwLnqdc16Xdvv0vr37uN99huTzKaRh
kEsopFzeU4ZxGYZi3IfBTG7xIakwGtFMkkJNJaUSFUo3UiiUItH17Z63dJvn
6/n98Xz22efsvc/aa6+91m+t9TzPEq4SntB70lO4suT2BQ8rvKHy2s+ELsLD
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
            "]], 
           Polygon3DBox[CompressedData["
1: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
c01D1CBrkf9HZtXEf55r0f8Dt4dHTw==
            "]], Polygon3DBox[CompressedData["
1:eJwlz7FOwlAUxvEPSwdJSltLCiZqYoy8iokOJk52hbBC6KSQ0MlFTXSHEVZn
38AJXV0I71CCJE78b87wS+65ufc755x3Bnf9A0kRfDxkUiOW/kPuuHykjvBS
lZ4xRj2z+zrnXk1KYvv3jqtEOuHvMd6oP7FqSu2WdIEv6im6qZRjiBn1IXae
9OdZbkA9wRnZp7hEkZmQuY7wEdkbH31mz1GgvLf/ATkb8rae5bs+N/S7xm1q
c7hdRrx7wmvVdnUzlsy8xLppO7jMCdnzirSoWE+33y/7fuMnsf33E2IzAQ==

            "]], Polygon3DBox[CompressedData["
1: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
uUnwPErVnEWYlalUzzuNcfqG2VzccOVxvM0daU5psNchf3vdrjr2H7gIgyJt
7kJ9DM1pa855AHYdkNGzUbYXtGiU7VnS3tQAdXIcZILMkAapCbbnTXtTMzTP
BW2gBaTwLAliEsxvMiQm2F6CxT5HNMDHwtor+xoyHR5rcxT9YU6MzUV/EW1r
09oDoz6e9oRo76L2QmhvRrzXdcq7uBjbK6s5Je3x01xNa49bsLc16fxmgUOY
98fbHJ3abu2VTfS0t4PquKkMpaAMVIOqUAVqQg2oBaXdjeb2NyK/7yJNN1QW
NLd/IN7elRU3T0MxeCrB9npprXkjbr6Jsb2g2lNaWDLVc/wchF3wAzzpfotC
ccgO2aBnhI0pNCbS3hXtFekWYWvZWgvTXgit9X8bY+/S2ofWen4gnr/DK7E2
RzRSbYz3IbW3+WXXJa2ta2/PFzE2RlafXGOfdbA6xubKtMdAe0c1B661Ce31
GhZreao1Bc0BNvG1ttfi7V3SVc0ha++Q1ka/irG5Yo3B9S6tmWrPj+bENIev
OWS52RBjcyNaK0/2OHwdY3OzHT3vpMPaU609ltp7pjG+1nq6u44pblr7y4S/
UfHWl1baFTfNxWkua7O/a22MrR3c41kR5F0gwfJor/d52kbYnpw4r0NUFzXX
/owEK2vqw+yMtzyV38OY98HjmPPBE3Aj3tYm1npaJFutKbztuqG8094MlQXt
3dWe4Vz4y+k6kAPyQG6oC3WgNpSHcvBMgpVNlQXNVarsD4S2mCvxrL67qQcN
oEKC7Qkv4GW5FTSDllE256a5NY1J79Pu3guxMWNzd9NUfSjC7h9pe+/rZaBn
pO+k6mY4CvWxa6i+S5Tt5VuM248ibe9if+9rDYAe3pfrF2Vrmn+q/xdvfSr1
kbQ2+lOozdVr7Ux9Ie39+xG7U/6+M/G2RrnS/aquXsq7lqitxNw5xubG53uf
fKbH4eUoG+NoTVNrK9/Bdu+7qs/8obvp533OIY/05YZ4n1N7KbUnQXuklf7z
8Fe8rd2s97jdCrU9imqDukEXuBFqfc7XpL9Rtreqq8tEfey9Xifsdl3a4zq2
w+s01Tk/x1sdojV67QHQHhvt2dOeGe3B05rmJLoUU4Ns7kJzOFoz/VxjFJit
to73NVY/O9J0Nb/rWF7Vd1ACBhLXsbG2xqq1La15vRRqbUdh1xnphr7FyOa6
pDZCureOcNdGms6oD6m+jfreGstoz2Ef7/vp2436UaYz2uO6KtJ0VbpdFp6F
RtAwwXRGstLeM+0l07cGGgt0CLE5N63hao1YcX4l1OpYyUp18pNeph5LMNmq
7pU5l6ddZbZBhunwKddHrbfXzbA5n+zIMg9MjLU9b5rD3B5me6q1Z1hrwVpj
+jHM9uhK5z+MNJl/CssibcylMZTyVHXFTfVrEuwbFpWplyNtT2wDl0k8z2Ih
GhK8jVab+3Wk7QFWmB9Hms6rr6JvLrSnTnuktVdQe5y0J7YJflpBS2gNGfCc
xn9xthdFezm0dqA5ZK1NHEkkHbAPmuOuN2zDPAdZ9MnE//AK9IN52M3MwvgK
psMsuIwMLsFgzINgKgSl0zfJjJ5jPklYx+EY/AbvwLREG/Nqz8ApzCfczR9w
FH6HH2C/x+1XmOl+t8BWOA9/ud8/4Zz7Pezvep13j4aRMBbGwCiYAu8Tv6Xw
M3E8BNOweyyNPIfZmN/yNM6FXNhlTzOz0n6NtN6CYZhHwO1U+iTIZjjmIfAa
DHXzq/AZ4a+ERZgXwofwNsyHD/xdi2ElfAmrXLYfE+44+ALzCvgUPnLzMlgK
n8ByuZUdbpekmpslHuZsN3/qbj5XfPxd2muhOQfJXHk0Hea5bL9LNB3ogy50
hU2eF7vhQKLpWOME05lvYTF8BB/DUlgDFzyP5Lez97U+xHwWzsAlOAS74GKi
7VVQX/G0u/kbLsM/bpabPa4bymvV+StV7gj3Jv9fhSuJtjaqtkDma3AbbsE6
j9sSWA1fwsZE27uiPRL//y7pknRSYb5P2O/Cdcw34F9ISKKsQnKSpf1riMX8
BzpwAt7NYnn9PrwDETyLgWjYgduVEIX5gcctCHMI3MV8x8vIYdf5I54XW1xW
B+GlAONPfn+CnYkW5veQCmnwFXwCe93Nz8ofrxMOuAx3ud+9nqcqa3Nhhpcp
5d0HsBDuJVrcwohjpNKCOTrRzOFJlpbP+T8Z4lzmV11WDyE46b80yhyaZDKR
X4XZX2mCQcoP0rYOBmI+jiyPwQJk+J6XHcm2DbSDttAB2kM1GIfbMbAD804I
pswGpZl5E3wL2+E33DzMZGVNZeFrWAdr4Suv01a5eY2ehVN/wlbM38EW2AYX
KWsX4ANYCddVN8AF+AvOwRk4rToQVnuZvei6obJ/FH6GKyrLhLEi1XRGbq5m
sTDXeNzWQ1WFQVzWwljSMB42YrfZ07jD07IBvoEqUNn9HvR37YdDcAB+gj2w
G/ZCV5ftD57G76EEMtzEe/4ibufgFHa/wi/QGLq43z/hDw/zsLs57ma963do
BA3dr9KuOnAeHFO+PBI3mY/AHGjmfiXDEx7mKY/zLrgDN+BfuAu34RbchHsw
MIu1TffdTVhWdDCruQnnNwhCsppfuVGb9Q/1dQi/DzzOikNTaAHNoQE0cXNL
yIDa0Ar6wUvQB/pCf3jZZdXwEb/PwbNQB8pBWSgJeaA+lIHS0Bqel36Q5+/D
C+5X73oG6kLHLFYWOrm5ElSEzp6nXfxdL7gblZ1eUM/f9Tjkh95ZrM1SW/aA
vA4i3z9BFiugRhYrawqzG3T3uHXzd1XwMHvCizAG/zNSrSyczWJl4XwWKyPS
ben8QdeZvyHY8+Ih5qAsNsc+TfNVhDEq1fyqTKntU5t4GS5lMV1VnVA9i+m8
2ji1if+4G5UFlfEeHjelsQBsR5bfhVvcLngcpMPSMZVZta0qs9KxPf6ufzwv
unsaFeZmwlgBP2LepzykvJROs7KjumI29dnPcABOwU6YCV2o415RG5todeAA
6KR6jzrxGByFE2pjYCN8B1vcvAm2wVaYrPoX1sIaWA9LYR1Mh/nwDWyAVfCn
2io4Caf9XafgZ9gHe+EA/AT73fwLHIbf4Qj8Bk8qTOK7HnJhzgO54Uc4BAfh
V/erMHfBTvgedsMPag/dvMfTsh3OwVm1h2ovkjWoobxCCNzG7h+4COfhEvwN
F+A6XHXzZbgGV2AGTIUp8JbL5E1PyxlP+3GX7Wb4y9O42WW+x+N82d91A27B
TfgXHiZZ3MIgCiIhAmKSTYa/eZhKezR2D/i9k2Rpkd/7cC/J+iTFXIZ5objy
C7si/BaFrJgn+xjhceUp/xfgt3CSucmZZHlRUHHn9wt07MuA+ZUb9c3y8VvI
807vUl9IfZuFhPkBfI77UtiXTrI8VZh6V7zPAWbD3ApaQwY0gA7QApqrT8Zv
R3fTUnbQCWrwrD2/z7tfuekLvaEnvAR9oBe87GHWg/7upp/77QKdoS7U8Tgk
qU8GT2DOn2RpVF/0dX5Hw6QkKyNvwER3kwOyuwylw5JJEiQmWV9uBXbLIWuS
9WHU95NMyiRZXy7UzZLVMmS2ImB9sGjPO5UFyUpzp+159lSSzYFrz576our7
lcDu6SSbu9bcuMwlIYxnoXKDv7sQ8LhlgXSIUt8LMmFOS7K+6P1EM2fW/4km
E/XJ1Ue9TxgPA+YmwdOoMB+Dz7Db7jpTwGXyI24XwNdwFI7DQZjGs1kwE+bA
7CQrUxNgHIxKMpmPh7GwiLTPJ+wF8C58FjAde115hXkMvyNhFLwKFaEdtIV9
PP9Juoi5I3SQ/ki/4Hko6mG+pz56os3xdoLV+FnkfVeNNar43K/cvA1zvE+7
yP0qbt1hHIyHCR6HsnqGvyn8zna/Ssvb2L2YQXuDuQJUgqegC3Yt+W0IDaAV
NIEW0MzNzyVaGWkKjWEwDPG0D4Oh8CL0JawRidY+dIbR6h9j1xuGY+7n7Ybc
9Mmw//tCb3jZ+9JqU3pCDw+zF3R1GUq3NWbRGE1jorWwTG4Jq5vLo3yipbEn
do34rQ/PQE141tPYnWdPS8bwOLRG9i2wG+vxVls2CSa6bPtlWFrGurz1rl4Z
JnO5eUN5ShjfBEwHtDdV3wJoTPoWzILJyj90633pF3zgOrkA2kFbWAlfJFmb
qLK/At51N9JhtQWfwQgYAj2gOjTyumUkvAbd4EV3MwzGeB3Vxt812nW+FnEa
7m5GeB2luu45lW3VfTAUXoXGHmZ36AoVoarHQXGel2Rtk9ru1UnWpr/lZW0u
vANvJ1mbvsbdqE3/Gr6CL5OsLv0UPoZPXCaK88JI2+srGU5NNN3+KMHMku2b
iTYGnOM6L5lrTkBzNZp7meFulKfqq2iMtp68eidgedfN1+BUd4VDnOq/JOsD
xNLuxSVb30NtrvoSzVwm7yVZniqPFsNyaOpm5d0yT4tkWAs+hI9cB97zNC7z
PJ3hMpQOVPK+cS3vY9fzPqr6zOqr14Ty3veWG409r6TTxsNluABrsatMn7QK
5gpQHXM1qAgNIDfkgmbQFJpAYfXP+W0Iz0JjKKp34b8rdIERMBLKwmNZzE0H
6AjtIm2v8nye1eb/+lAaysJc7DL4bQWtFS48CS2gApSHWtAId9OhKuZ6UMnj
XANKeZhZIQlyZLWxksZQj2GOg+yQLauNlSIgBuIhM6RBelZbU9aarOJQGAIe
ZhEolNXGVhqLaQz1kLg8SLe+fTF3o3dp7Bbq74r2tMhvMY9DJJSR/LNaWj4n
jM+gOOZUj5vGbho7TPI9FYpbrMdZbkb52ncWzFEeZpy7UVraQVt4Pqu5URrb
u6yU1+VctopDiaymAxUlW6jpMpcbmUdhNxraQIN0y4sUyJTV5h7HZbExqWRe
k7ovR5x9H5oM0yOoT7HLgBboXV2oA5WgldoXGEx5fVVzurKDptg9B40xPwsN
ob7MqrchC+bMkBXS9Ry76nBA+/Z4ZzmoBLWweybDzGXi7HtVxa02dlXhW+1T
5P8n4WPtYcSuLNyPsH2Ve2EDVFHbCGd515/wN/wWTzoyTIdLuQyVp09BScky
w8JcBitiLW41sCsIdxlXvc47xkIIFMCuDn6egTez2ByvZJsA3+B2A9R1nVfZ
eZs82ILd11At3cqyyoLclCashoRZM8L2hSotpbArA/cw34YHcE17qbHLDIvD
0Ck9I7ybUAi7pzIs796Axxmu5Ifi2BWDwlo/hLyQB4piVyTDzLm1fxIqQGHs
KmeYDLfB97Em82rY5YdQ3DzkfQ8gDHM+7Jp7nTMFJrsOt4HRMJu0zoIJKhcw
EnpBT+gqfVRZzGxz9dJJzY33cDeaw9ecyQDMg/U/DIFXoT8MdPNQSPay39rd
DIMxWS2PEt3NUOI8BPJhfgIeV90BedycFwpCgaxWl2qufjy0xPyix1lx60MY
A8P/86u6N6f7feWRuKluzA+rSeMq+ArWwKewHGYzNn8eWkMzaApzYBa0g7bQ
xt3MhGXwMSyF5Wl2tpXOrHgP89vwAXTNhF/N/abZmlHeINMHlWt9A64zEzrz
bDq8CQNhEHSAN2ACTIVpafaNvL5NfgfzfK07wAJ/1zxYDB/Bh7AEFj3iRub3
YQBx6ZLJ4jYWmfUKN1mpzeoMnaCLm9VmSZcaZbU2aypux4T/50ZtWc4slhfd
obfKLnIskW669Kz7beN16QtZrS3bjY4ucD2cA/NgF3Z7oTzhlwu38ql27ocM
a0MLeN6pjXvjEd2WWW2c2ogor6snwvisNrf2SharE6R7bxDuJJiZbmVhlNIE
r7lZZWGs6/bwrNbmKs6q89XGaa9Ra9hEnFLV1qRbelPgW+xGEfbI8P/CHJHV
dHuf+sNer6l9moz7HRmm8yP8XQNcV6XzfaGbyidxn+w6r7WqCfAWfmek21rV
y7h5KaulUXOJfdyv1rZUB6qMS87vpNvco2QyztM4yc0TvWyqLB/MsHxU+dJ7
34AD2B3SWCKrvU/rYb9QP2zE7ieYyP9TFZ90i9/P2O3PsPj/Lz4Kh2c7sdsD
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
THA3ahN1JoPaCLVBFTwOryT8V0Ze8Thof+6xeCtTkxKsbtedDtP8XQrze5et
8k5tyjcJVqb0jby+tVfbpLZPbZPOJsqlOhryB2x9X3N9j0MIFIcirnvaSxPk
MqwVsP3DDQK2H7hewHTjGTdrn3CjgOVFGc8jlYU67ld5UcLzqCiUDNi+AsVh
o8dZbd9PcCDBynJunuX0uGlOUt/4aC+Q3KitfNrDVFpyBKzsy6/MudzvYwEr
O6oTZFaY2lOkvVVP8RsasDpnv5c1pV3fvGeClETbd3A9YOve+vZN/RW1rZM8
T/UNXVvajIsBu2dD92+oHX4BuyYB68e0pX/WOtXmBDTvUB1zNcjQHH+yrW3V
TbU+ufqK9TE3SrW9KM+6uQE0gTqp1lY29jCfT7W+6Bvex9acQw3Yl2JzU8fh
KFRT/zHV1kS0dqNvIfXNYE7sPkyxuaaz8EeKzdFpLu40nEmxdWqtL2vOSnNK
zfHTFKqmWlqegfLQzOdgW0ArT6PcqD/XLGBjFvWlFWfJRH1+zcm0x9wB2kA9
N9eCmqn2rorQERq6G5krSZ4uE50JpjPMO2PukmpnQejMh/2E/aPGTNj1hhdT
/5uLlrk7dE21MZrGUIV97KO1sNoeB8VNZ6TrLKyppGEadEv9710yv6l2L2Bn
KegMCt0tpTuPNIezzGX4Z4qtWeibQX1Lq779ebgIF9ysvn2Kj63+SvE5QPJq
CZzCfNLzSHMUWhO5CTdSbI1J395qDl9zDvpWTmslKZCcat+QZnJzaqqtrWgu
V2srV+Ay3IO7HqbM1zwOGutpLuhOivlVmFpzuep+tUajvXDq82itTTqW/sjY
RGbpmL5RDef5Y6n2ja3GLDLnhlyp9g2swrz0iEyuedyUF518br+Z655044bH
WXHTnJXWXq+7DktWJ6BNis0Zas5ZewY0h9YcGmucCYehkZufhSOuMw1gdYrN
RWuOWnN3mUhjasDmfg894rch1IW0gLnRnJ72Kmiu+Feo5WXwdzgGHXHTIWB3
KukOsj+9rGnOVnO8cvMb/JxiayiaK+iies/fpbhJtw+4G5Xxeh6Hn9yv3qWx
p8bU9bzsqA5R3VLZy6zqHK2taw29tK8FxEs3oBAUhSKp1raqbtf3IJ2gs9fh
LwQsLYqb5jQ0R9E1YG2ozlzSWKAdPB+w70vU99bY4UNYHLA9ftqzpzGF+pDq
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
6ZbhH3WYsswVc3JhexZf5CUXhS3xGvlYa/DOZ61RNx99mDF4TNTKx1xA+IRl
fmz2/t7PXOO1EmuibZRDcRvnwxYuNrqZaxqIJqKhw8xB2JjFxu8SpVksFoql
4gmxSMx3+HG3EWWcl4s1EXnG5jk2txlr5Bmbt+Vdh9i2bVKqzglj2xafLDnJ
br8pClluvPsGbTpY340qCpul2ErF9ik2bLH9iw1SfLizRntVvJ4LG+zUIeHN
4kXxZi5sfWObfYvCJeIlsVO84TjIMC+7LajDrWK92OQwdcgac7vTskZb5rLP
cpuyRsOWLzbDWYtV9LuLuWO3vn+yVB2S9m3X7Vtil3gqF32eumXtyZp0Qy7y
vNllRDbApjoyAH0AW83YPP9M//tHLtaSn+TCNjs253c6z6yFv3Scv4t94oDY
L06IdReFbfaD5F/8VRwRRx2HvK0Tz4vVuRizjE3W5h+JD8XH4l3ymIs19cZS
dVjisrAG/4vj7PVvHXIbveG8URZs5mObnTXyp45z0Hk+7DIec5iyYFseW/R7
nYeT4ivxN5eltWSRvLhZc8cVSchgLbzWaMv3Wdim5h3VhvWDPkfkwgYvtnCx
qdtBjFTaR8TDYowYLYaLeUnsgbNXv0ThRWK2WOy7b49hK1xM5F6b6JeEzW1s
NXcQt4q+3AVQ+hPiXoXv4Kyi6JOEjhudXVeFeycR57hYrHfRIvFoGmscfAJu
Ex8rzvn6rCAqinLisL7rIjqLgWJQEmdNuYPAnTv8AD4jnsIOuFiKfKp054pz
xAL/1sI0zoSvdJxlYlUSugzqZBx3efAvksQZp1H6rCkuE1XFpaKGqC4qiP2K
s098IN4vCD8hlyQhazHX1xV1RO0kzopzViqvcCWRIV8mcRaUO0SdXMYePrNa
7DOfPcXdLjtx0CEmrkPq/B5918ttNMdtN1eMFw8mcYeRs/ToOOY5Dm06yW1K
nAlisngoCT8nlOUQ++bsO/N71K/qbr1YJzaKDWKteN7hkjT2FliTLklDV/uV
PveLg8iBafQB/IxxFvQbZMEk/Lp86zgHxK40zlQfEbvFKfG1z3zucxyeyR0N
/FF+n4b/R+5g/pjGWVPOlHJnkz78UhK/RZ98B3k+jbPcJ8XtHMAsG3cKOKvP
nZrCsmf8OhIu8llW/KSV0+etrJVZB4inxArLusjGm9zH6NtbLMPT9+a7Tliz
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
            "]], 
           Polygon3DBox[CompressedData["
1:eJwV0D0vg1EYgOGnJeorqZaogYi/4CdYmF9Lu7KTMBgkLNKXpmHvoNpYDCW6
YMTiI+lfMNlVSGxchis55z7Jk3POwtpmspGNiHFyHFYiLiYj2pzTpcOxvsPQ
RMQwv/mIH6YKEbt6hoNMRMoJTU7J6v1yxL7ZL/bPPPFKztkdb6WIHu8szpjJ
vX5DTatzO23POg29TdX6iJQ9arT0R0bMKDHHLPM8/N+RJe9JWGWFZVJ9lO+B
iC8++GRs0N/oBerWVZq0OKOob3PpT665okOXLf0PfcY4lw==
            "]]},
          Annotation[#, "Charting`Private`Tag$18568#1"]& ]],
        Lighting->Automatic]}, 
      {RGBColor[1, 0.5, 0], Opacity[0.5], EdgeForm[None], Specularity[
        GrayLevel[1], 30], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
aP3lb4dbEW+BprZczkVr3GDdbatzIOnmqIyLpK/hqh3LGYvfkWc+7HXTbW/i
lps+L8szQkABbf9t2IX7eGDPnr/wE9/xAi/l72vlvOED3ss5tfhH6TuUVYJ2
/k6YnrZIhzR4xLp3eIiv+GbbpmZdKsvznPQr29dry/Nb6ktZV1EApUiXgSvK
WtxHnvnZPhsyuWud/0jflOcEq38SqQv1So+0BfV8yX6lPyd31/yyrz12b5J2
kL+jryJ9hvCN1d+DvNlZNpa6jJY6kXaVZ3EURC5Zj0PkPYKz5ClE2tNdt82K
fFbPp6x/Ym2S2eov5WSg/Iz4C47u2ua5Cf/GPygCJ+SBrxwH+VKgFPJa+TK+
yd/+t5fzQliJdVOIz5B2k9+ttvwSL4eK8GMbf5SQZ1zypSmofaY6x1DV+rPE
a9g1XgFlbXxoQd5W6FBQx4TqBfX3B+IIE9GgoNahKhqjHsojGG3QDu1teVPU
QQyisB8HcNDiezDY8m/AVizCN9zCVwTJ/BCh+IwvMuZgh8wXcQQXcBvn0RCN
rJ4v8Qov8AgPcBfP8Bz38A7v8RY90Od/yrwIbw99n1AV/6AmAlEDSZEaDiiJ
UvLe1EPr/xOZiZew7zmURjqkRwYP/f6D5C9refzgiwIoJO9OPfRZ6Sbl3EBW
eTeG7MgDZ+THfTsuVw/Nkw1ZPPS4Pso1QvwxYRLCp9KvCN3gaNtKOXcIC9t+
vTy03WTbDwhHFrvWdmIfTmEmfWU9ZmAY6UEYWVCvzWwWH4rh1pdyoZNdC3vZ
Zj/24JyMpwX0+rqIS7iA3dhleRpgckEdq5vZOCljaXqksbE0vY296VDaxvNS
OCrvTqzMQLuv5UAxtEFJtMVvrpV36IjGpHsSpiZcafegQ3L/wEEZK6jLqoL6
u/HSbzdiPRJQ1/q8PNdcwSXpczIuFNT7hfTnMYTD3LRtIxGBM3Kdyf3H+nAT
u75k+Wlr82lsMxUhxPMTeso45qbLa7BsnJtep/FW5m2u2y0F9P3kHMLZdr6W
yD3b7llyL6tVUO/7cwjn2TW4jnXd7L45HBttnJRruTai7XhjLd7K3j22xXW5
t+EaPOFl8Sc1aQvUYq5ennQZO0eXAjn3GMzyiqRTu+nvn/xLehqmy3Ma2z2o
qZ/7yPktZ/e7KjamyX2zBPztnCawTRQikYJ0cjhI/yHdHE2QiXRWuddjC8+9
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
vvEyVvXRhFgrH6YikGR1SnSS5bfS6ID/Azbri4U=
            "]], 
           Polygon3DBox[CompressedData["
1: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
g7dga1qkUdwtnL+ZEXPWmqs+CCfmxvtPvQfdx/k1Hucr3oaMCNO1m+H+3JCz
F8yFc4tjTDfAY6l60I6wtrbJDo7Xy+dDrJfT4TSYUhzrtP4qiHlpvTv5kTK/
hM/17AnfZsQcseaGq2bGugStTzie+F9wPMrvX/Qe5li4ABnO53lwBpyfH/FO
gC8LIr7k1NhP7z3zfC4f2N9h0ut8t43aUjYiW5Gd3mq7kf1IVtnsetua+tRe
eBEdjyddZ/iW8zXpsTZuqW3zcPi5Waz9WuJrWj+3zHGusP2ebtsdb9vs6jyv
pNwr4Gl4qiBsVtcVT+vR9C7mIumxIN7JHKKs0eQzAn5sFumUfh28VxDho2Ak
nGwZJMtKmJsefVfvf34tiL6oNXqq04Ww0HJOdx+b6bAL7ePk60Yg0ygYC2OK
Yx5T/Vv9XPOZi9JjLdxCx+8DneTX5JvSo94jnLZLccTVWpJLnWa4++8I6+gi
57fI+l0Fl6fHHKrqtNY6X+M8ujjvce5XYyxrX4ep332pNi+M/ie5eqfHvJ7k
O1QQPvNv23Gi33009vsr5dPf/Vz9fq9tRX74Wvi8INYrfmU/J1/Q231Gfa2m
/Xl9vz/TeV3nrbALrO/1tj/5UL1Lk0++0X73N7fdbiObli3vcty6zldpXrP/
eA9ezoj71AXOW/L2snzt3KeHqg7Y1bcwlvNvsPlOxeFz5Huep4z34QN4sSBs
VLaqfqL1nOMqwz/qvjG2MvqM7Fx5KC/ZZWV6lDPW7aj21HsJ2ZLy/RBecv6d
bCfdLUNn20UX57nSeZxh+77QtnCJdTjPepdvO8820NdtJ78g39jQPlQ+chc+
Yzc8DvvzYwygsUDN4piDSCiOMUIj+Up4gjg74db8SNvA1+7Hd+2BRwl7TGMH
eBgezI80u5z/nR7vvwy3QSJpGkMGNIMX82NMrrH4C3BicczH1LNMrzoPyfAs
vKE1RHAQXoe7yaOhZZU8J2uNCBRDpe7rXh+ldVKZmpvWO2L08Jv8CxzdhPLg
JMKTMiPPbnm0A+zND73qnjAHZhfH2p4nXM/nXW/V/23P7+eQRwuNYSEbciyP
5BoN+1wHlaP8873eRzJmOV0Ln2d6TVSew5T3s9aFZJAsr/reKdt/yVSTXWPf
wzhexe9NsFH3VihN5VkSruZ8C2zLiHfAem97reMo7jpYmxHvFLb6XO87ZCOa
09Oct+arlLfyusb334rUKEN56x2M5mY1t6s53Atd5tWWSbKtyIg5Vs2tLve8
l+a/NM+tuS6NSzU+nQKrbLf3qN3hyfx473GVZZSsNW07qbbnjS5Lsq3PiHn2
y1xWUXqMhRPhJPeD5ZalXXpcX8P5Sst5iWSlzLYt0CEsbRE6kW4Ur1t6zBNr
vljvvvU+fJ31qbKvyIgyVNaJtu8rrRPVQXXRvK3mb1WO8m/k/qh+qrlC3dc+
t++Vj5Td1oFk2+8c26vGLhrfvWX7kJ28nhFjGfmJBR7T6L2S1ka+mxHvl971
75Yem2le9nGPzZT+AziSeh2hsYPqTJnvpeCDoZPefyD3Ws1/0n+uzAu/Ns6+
SGMVxekMPaB7ZshyrvuWZGpHWNfMWBco29/p/n+bfdDnHm994fHjy/b9kkvy
FKbGHPAr/7HJNz12VBvsIY8Onse9Kz/CDrofqH0Oem3iouJYFzqBONvgOs1V
5Iftqv+onGuc9t91FMpDct4Bt1te9XH5EpWpsjVH/Uuz0KFk/s7jRY0bv8qI
NLfbR8uHdrWuelsn0vPjKaFD6VJyvcDY8emckG9AZrRJX+gPxVACfaCfw/o6
rMht0MM6Vxz1rX2We4/72T0+l776Ov9OTjvd7aqx57TiqPub9nGqx/spYR9K
I9nS7H/lh5vYr+V57ax83u1Ou8862O3ze9z3Syx/d8urOW2t79Q6z+vVNzPD
hnLtL9tDSyiDVpkxj6759GtgQX7cJzXW0X10hpnnPqK+soJ7+iyNA+UbOG9N
Hm0yY12v2q7Mv1s7/8GZsd5K664GwY350SfUFzbnxTh9hvPWs0UP94eebuM+
bot2bi+tA9O8uNaWjdA8BDLsJ3yG2jYt1r41g6ZeA9eNZ/z2cAH3tPNhKSyH
ZXARrICVDtO1tbAaVsEap1HaJbAYpsNpsBnW+Zryb635Bs6fKCdNKXnDY5wf
T11PgCLqWp4XZc2DRS5zuc8XWqbVLmuF5dG8pOogOS60XKt9TfLrPYzWBpbC
d+TfTv05P9bBtoXnkOE2uBWehUrSDINX6a/vQhPOO8HJMACucL0uh8vgUutE
urgEHiWPp2A33AVtka0lzOfaVthgPa112gutw8X/ubbEdVCce8ljL9xuOZXH
fOtopeNKx1usk5GlEV/pxmjdcwXnsA+eh3OIMxtGw2SY6OMkmOC20/lUmGLG
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
L82xaszxEjJcWxY6lW7LnZdkaaVnDqdLlm7SQrbGrrNkVF/sCV3cJ39Kimd0
PYtrvuAPy/+T+8e76Pk9zVfBIzCJOkxW+6OXW5uHT9U9XuMOjW+yPcbQfX6d
xwyXwHCundw0+o3GK3/6nn0BeS2ErtA8L+KugdWwyuku8fnopuFT5FtUlsbQ
J/m+0gDqtQyfOMl5rHUapb2T48im0QcX2aZXul9OdZiuyYe1Rq5WUNM2Jds6
2vewVZZtV9PIc5j12cP9bpp97cW+32jcs9J+W7Jd5/vl3e5DO90f73L/66Px
sHVV2TR0uN5jpctdr0m+d612Wae7jBWu8xrrXLrvnxs6lm775oYNyZY0b9+w
ZfhN+c9x9o9L7Q+W2VcdoM1fhBf8XP6w/YP8xENNIq8/bCt6B7DGvku+4pK8
uHd/6LGZxs753BtX0GeeIu2TTcIOp1eEz5c9zvLz+kuec/jBvvoX57/L/lB+
8ZUmUY7q2C83yrvYbbnAPusll3PA+SnvImTIS4xr84nzO2l/gRGyh6Zhc7Kb
UU1DD+tsG7KX+shYu2XYnextrvM+z3MXKvMCyyTZJuRFn1lomRb4/ALLJ9me
so6VTy/LI7nmui5TnY/SSm7p8EnrSHOqU/3srvnMo5rE/J3m8Y7j/Bvy+g6+
ha/h0kzaOTPmSTWXehrni+ESmAtr4XLHudTXLtJ7bsd5Te/sSuPd4Qucn14a
78z0ruxgecRZo3UYzi8fmWtCLcmuew5hU2AynKX1UaR5ozzyfbU8ylnoPJTX
q76msl7U3HZayCjZRnBeSJ7H2WfLd7+iOWy/y3sZPoMv8ZWvad+XsnjvOK40
ytT7x+WOJ78qf7qyPN756l3v4vJYZ6ExnMapWuMhOZ6H1ZanKWHpUJwX76hP
8RoJvWsfkRnxnneeyntJecj4ssu+IjO+UXjZc9XP+voSl3+r6/OKZRrr9Qda
hzAGToXxmRE+xu/xpeOStHifP53zM2Gi9T7F5xPcBku9XlbrZlcbnWtfE+0R
oW/ytT+d9qlbrnXK6PAn9NeIY+OyWDes+6vus/pO7GHyXAKnw8VwIDX0Ib28
zHkldRgN7bjnti0JO5MOVHfZ5BPEeRLGETYcJnHvXUzep3Ds1iL0qrUMba3f
OfiEtbBCcxsw2te0VkPr5TIIq6bxnXxPRewz2dJ7XWg/jGO0JsLrLLS+Qj7y
7hbxTqVPbsgxyjqWPGcUxv6W2udyuvYsoS4lUASF5eFn72kReSivw5y/ytGa
dtmd7E99SHattTxdbGOyNfW9ddaJdPMReXwCSVxrnBfPbQ3sszX2fYc4v8Nv
cFRWxPuZ4w9ZEV/PgbWdRmnfpsy3ymPPE+19or3CGkC9rNh74ySoDbXgxKyw
cdnwKnjGaV93Xz1QHmkbQn3noXzf8jXt66PvPuQj5Bu0R8sv2MyvnNfUGKMs
vi3Q2ulmpE2FKwnfAlfBZmgKqZACtctjnPBIi9CxdN3M1xUvveJ/e6wdAx9l
hl+QfzgaeubGdwwqU2WlSEdZoQPtm6a935pIhz7X/m/Xkuc2uAKuqYh0SY6X
4vNk56M0d3rtzndef1XPOq1r/V5OHusqop6qXy37xxPgKPn6zPDJ8p2zYAEs
sk+c736rOHPcf5XuSDjC6efa957t9G+6vdQmanvZ1gb7HNnYR4R9DO/AB26j
g44r+5jsss61v14ln2afsjIzfOgbLkNl6T5wn32rfq90XPmhaZlhF6/adz7j
d3wPEX6v+qztqLZ1Jt0ddJ5vWqZvfT87pL5FfR8l3T64Bx7JDD1IH4dDdfUP
4n0M1Th/Pzf80hLf107zvW2Z9Tzf15Y6fLHPlzuOwm6A3XALXA9Vy8Inyhcm
loVfPBaOcdjtXoO+2+vNr6ZO12XFvnLaT25fETYDu+H+otjXSd8J7SyIPVju
h3vgbngA7oWb4TbYp+8/yuL7aH0n/Utp7OOi/Vy0t4b2C9E+hw+Xxp5p2jtN
17THmvbhUBzt3Xej95K7qShkPxp+K406HJkS+7EpzeaskHMP3G5573T9brfM
2rfuCXjE+9fJj6h91E7yJ9qnUN/a/wkJZXHUfmzal02/XyTOS/Ca3v3CK/6t
8JezoozbrRPppob3c9S+jsdB7bII03mtstCT9LUdbiiIZ2Q9K0tn0p3C9Z3A
Dl+/qyj24NvjNrnP5Uj32u9pjfe32ey9c/RdkL4P0t6JnbymTmvrNDevdwGa
E9Az+9G2C60F1X6V98G9PsoG7vFv7S2n/ehOKYg95rRXYAto7j0DlY/yUz0k
f2lSlKmy9L6hqfeWO8x7we3xfoE3us1yvJef8tVehHdbl/fanmSLu4pCD6q/
9ow72fVSWbWwhdopoQPt9aN9zuZz356XFvudbbZ9rbd+9tgupEPpUumUXnal
uLIz1Ul1kf2O1jck0BQWSKeVsWed9qrrwPndsm24A/Zmxb6Ou9yH7igKnUl3
ymek6ib7y4p0il+Ezy2F1ZprqYhxpnzrlbAtM/ZV1J5kD7lPaN8t7b/1ib55
LYs9/7Q/p76p1LeVn9h/yo9+Xh5+aC/cBfdlRj2OgIWuz2K4EM6F2QWxL+r5
cB7MLYi0+gZhj/NYbb/2sMdT++wr99rnKd799lF32S/JP90Bu2AY7bKJ42iO
Q9NCpqX2cw87r4dcpvKUD9N+hPqm/j71U+r0F/wM1StCzgtcj9muh+ozzO9l
de1w+Cs/4sj3VLVvVH4LrY/DnY/k3Am3WV59o6pvVbVnjb4HrurxWxXNY5WH
j2joPq9+fqvT6rs5fS+nfXrfoP2eKIz9el/ws5XWKRf5Pqb72TwYkxZtrLZ+
3P5vq8dfGoddC9dkxvOGnjs2cqytd8ywg/PtmdF3brdvVx/Ss5yeb7VOWeuT
N9uulM9G35vXOEzXXvTzn+L2tx1elRlyqHyVcxPc6PJ+81qtG3z/+cPto3b6
vTzu++c570227UXOU3lrj0v5GO1jqf2GD5Hm7/LIR+mvdd3XWuZtTvevLpSP
9hC62jL+Uh7jOY3rZCOpHJtCOZTAY5TxODwhWyiIfRO1P4D2CdCejcpng3W+
1bKe7zJUlp7x9Kz3jN9rV8NnpXgfTe2fqXVQWg81HoZ7XKyx7hjPaZycFnlM
8Hv7hYwBjoZEzYvomBZ2cIrWRsBKws6FC+EqWAyLHPf83Nhb+kLqubQ89inv
RJpxabHOQ+s7dnt9i9YIaa1QM8KGpEU8rWM6nrDacBLUgU0uQ3mvV3z1uZK4
j+n+dRxhS2A5HAntyKN7WsyTan70ItUJFsCStJD1vNyop2Se498KXwCppVGG
8tbe0Sv8XKpnzQvKI84iy3ShdXGO0+r3MsuyFC7KDZ1Jd4OhdlroZbmfpTXf
O9t5SK8rciOe9NHM8YfYL42zjupWhD3KLjXmX5YWa+a1Vn5pWsipZ+MLLe+F
/r3cbfIAcR6CB2E/3Cv7gfthn6/dBw87zj5fu8/XLoG70yKfi80DzuuKtFhn
e6fmtpvEOtz7rPd1zvPu/5SjdDs91611y1qvfBo6+DSH+wacrvVWmttPi3W8
Wr9b5Px36/ld7/WJ0yg31gXe4XVdu21bEzlP4Hij13Apzj2u8z7Lcr9tZInr
KJtd6rbRXvHSzWWOc7/L1ZpBrYNR+U0tn+TUulOtNdY6vDutizVpUebd1t11
mp+xziXHBe5rjWzjsuVZuWEXsgfZ7vmyW9twutfD/SIb4fxHjj+kRZjWymlN
WbfcWBP3uNeCac3Z8/6932u5XvB6siSvtTvG6+sedhrF1dqyBdjYuTAf5kE5
eukOrSBN9xvS/JwW69603u055608tBatgjjpTqO0NYlzItSD+nAzOjqK4+Hw
Fuc1ONbWvDXUahrrbpL9rb3eLxxRFmsmNa83oTzm9Mo8x6C5hnyHj/d8g/Qk
+STn/+sLmf6CPzTX6+Mejduz4rfWdT5r2bV+TnJJvqOhetN4t6z1z1OhnZ7R
ifNzbswjav5Qcv9KPX5pEvJrnlzz5cUVMbbSexK9L9G+1pl6ZiPNK/AmvOU2
ly9YZR8yCNkHpsV7I70vOtL+RX7mCD23EXYOnA1V08IHLbbflH/WvPE0mOJ3
hqs8XyGfJt+mdOfCn00ifevkyFu+q0NylLXEci21jcpWr7Q/Vrx10mVSxK/n
9tU6JK0/Wuq6rHNcvZd6nPBH0+L91FmEZeXGusObrQfp40U4mBtrJrW2VmMw
PQvPksxwv75DwA4aUNYJcIi8/k6LtZLX58a6Rdn6b2lxrabtTXPpZ1gn0s0R
1qXq3So5ZNN7occs40zbv/rBDOtQupxYEWuWjiLtbfYx8jVnWT7JORM+QfYU
rTkvj2t3eSy61ONfrTHSO0e9a5zue/RpntPWu5dp8Ay28pT21ub8PM3l5sU8
uOa/NbeUBS08N6BjtucI6vtca4alO80fvI8MP2l+C9m/55jp+a1GnqOp7TQ5
nuPSug+t/5hh+bSnaEOnUdpRmtO1nJLvAHV6A17T2C0z5hn+dB/RfENtyr1P
3w7D8Zw/lxn74GseRPMf/z8P5TpqPkrzGLf6GUXzGY94XH+fx+eaJ/seO/is
LObLnuD3Y/B0RXy7o3HPaOtUuv2ANO/Ch/A+fJIZe41oXkzzYW/CW3AQXrVs
2qt/lWV8xPmrHH0/0588B8EQGOqxleYTx3qMVaJnKviJtP9kxnuUPtaZ3qfo
fw30/waKp+vNPF+W5Pk+yab9UPQ/CZJxqusy0e88NLd5PNcOKe/MmGfXfHt/
y6P7mN4ta49q3c+UTu8nJzn9h9aH5kk1P5pHnTaSZj0kVoTsxVAIBVnxrv5k
61L2KVkzbAuyH81Var+H9Kyoyy3lkZ/yza2IfWmzPCcqW1Ja7eOic+WR7vyS
nT7f9ptt21ba5g7X79V+Xm1TEWszP21Wpcq31OV7SEkPuWVjD2SG/LJrPdPp
OVH2Pcb1qfR4WN+id/ecs+aeD9oePrC9rLJ/lm/d4n6v/n8dbMuNNZpaq3mT
xw23wS1p8W2FvofTd1T6nuoEuK0s4m3yPX6hz6+EbQ67zHkt9BhE926tx96b
G2vIJcMG2ArX5kbZm52P0v07BtS4XP/9kuP9M7SPRnZ6yKa17/oORDJqDazW
nF7ucYrW0Got7RbLpXVVHXzva1sRZV3laypzj2XTvjDaD0bfQelbpos9Plzi
ccyFHhPqmr5VucRjyevTQoa1HivtcJjOtf5YcUd4XKU08vWNoa59/lrLfpnH
WPpuT9/v3QN3V4SutN7+auvsa9r0C/gcvsuMPYLU5+QXvsqM74T0vZDmzgsr
Ys7+gOdmtSd/DcLqVIRfO97l3C8f5/LUL/+Cv90/B2JTWZABfWEWeS/T+yLi
JlSEHTX2PUz21MLxla6f/Yz8jd4VDtYcWmY887TV/dZ2L/v/2vXRe0h9y6h3
bHo3t8734y22F9miviesYZu8ymOHDY6Tlh7+XH49Mz3G0TdaNn0Toe8wakKN
3Pge43Pr8zP70m2uy3bHr0af+5XwqhyrZIVckk/fZuod4MzKuHdO8v7titeX
uvVJi/h/W5+qt+qrvR+195j2SdMekNo3eFpi7Fmsfdy0N5n2L9QeldpH7QXG
KTXgBHgD2iNTPpRCW49F0qGVxyRvOO7x8Do85nQ6fwDegrfhTTgIjydFGW84
7utOexy8Bs2lU8iBvNz4dkNjde0bqL07c6EICiE7N8p43Wn3w3jacyoMg6Hw
JGGvwPMu+1GXq3T3Q6Fka4xskK+9dskzGZIgVTKQR2+/o9Z7KMVR3DocJzrf
A66T8j+aNjmJY03lxfknxP0Mnub3M/AQPGU5VL70WgbtrN8SyjgNToay0tj7
LM9l612YdKHnl67/6gRb6AZdoFN5zOFq7bjqVGidvOY9ih/x+XHeU1hh22A7
3KD/9oBNcCVshnVwFVzneNdCNetHenqXZ9AHXSfV5T7YCXfCHXAbVNc8ORwB
h2k/O8LOcbzbXKbKvhF2KB/Gg3WIV0/vHEqiHWQPzd0eu7RHNdxquW5zWbdb
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
a5JmZsecl+a+NNeXUBRzsJp71jqOmbkxztN/Fuq/bzTn/FZOzNnO59rc3Fgr
d0ZurLvTmjmNETU/p3m6CzSeo4zZ2THvqPnGszKoa2nMUWquUnJInrNzY41U
O5fT0nOaZ7uMc31demwKadZnz+R456J3LV1939T9cyEkc94sNWxItpOZGvMu
av9s26bCmlinmtsaa7vUvqFjPI/a3nOsmuOUnjWXvcP6VjsoT+WV63yUn+Z5
dK2py29mmXNsg7I95SW71rz6zUkhY7LtvbHrqbF2V7eB2iLffUx9q9A2WWJb
rbAMLWyzst174S7YB/eor9AWHXRv9FhiqcdqGivLHyjuHo8NlOZm7O56uAqu
LIlwjR3u9vV9Pt/r/NfIR8JkuExj59TYx1J7YT4Eo+QTCb8YirPj+eBG8t0O
XTnf7fIlxy641HHXOD89P2wl7tXQnfO6+s95OFH/WQmfkuaD1ChX5S0j3mLo
pr6tsSFhr7iMf8vS79dcZ42lpCPpRmOqFX7fcJHHaNX0jS7xvoZD8CM8lxr7
Smo/SY1Tv4DvUmO8qn0OH3cc7XfY0+8W5Ns0x16KTMtLQk7Jp3F1V44dSmJ8
fVpOzLlMtQ42Er4J1sHgkvDr+r3R/l3foizS/pUaSxfFsUchPqYwfr+XyJgo
Mca1Gs9qT0Z9p6hvELUfbQ5lNimP+4D8/2OU+XxOzMtrPr7MPiff9pdnmy63
Heoe0BbapIZf/tn3sqN8j2/j65rH1tx0a8fVeUunaeNw+cm/Gb/9zrPqH/DP
8NhH8oBlfsk2cpft/EV4Hd5PjTHuaz7XHpkfOuwDn79lG3nYYZ/ajtUvLvUY
Wzag57JzYIOfz95z+g+cVntgai/Mg87zLZ+/4fzVTutL4jloKBRis7/SFj/r
e8rKuM/qfquxUY2isMVXXQ/JP9zjR43ZJqTEXOafeueQHXOar/rZXfMqmqss
RuYS9WviXARHwCGtSXL4kchwuO4lcERJfNOpbzurcX4YZCbHXF01zyfNhi4w
DOZAOmRBBjSBDuRfE2pAe+2jnRx5VPV8XUvC2kFrqNC+a4XxTWoVyqpaEu9N
tO92WvOIm+lvf1bBJc1DLsmndIpfw3VSXVTXoZQxEs6EIdAJRjlsqMN1Phym
a56KNHWhDpyUE/OAmg+sASeobpTRHLKhhcojzvF6jqXM9c1jru1c60JzNQVc
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
ymkki+bD9G5Ta3krLdvJTi85NMf4huUZ4TRd3K8Hex5klOeYTmiBzcI4zr9F
nyua095wmebfc2Jtahqke41qhterat1qo9JYt9zO97IS23KGz3WvPtnyqWz5
ltGcnwLlyTE3dqPHvxoHa2w+yvNmoz0np/9o6m0dSBf3um6vF8d8kvIakxzf
UijPsclRhvLWfNvHyTFm09hqXXLUc3xOrPFWfbWWVHtAa+/ncckxR6a5Ms2d
vVUc94ButpMeHueN8Fxhf885DbNOB3tuVHNSQzyXqHXsa103PW+U+n6mecs8
y635zpaWX3OzWh+t9wR6P6BxpOYeNafbxnEUt8J13GZ7lF1eXRZzrbVse5pz
fd36esH1Geq5sOG2Adnux0Uxb33QcWU/B5xG+Wj+d6rz0xyw5oKnwenJ8R5S
6+m0rm6y89X8XSO3ofSqPVvGW7/jfN4P+soWiHNqToxDNP7o5+uaQ9Rcosb6
17puGvOPd34THUfrgNWG45yf5gXX6B1TTswP6qjfbTSXmxPvvn6DDjnxDqwu
Y77fSPcXNEqJvdnqwFEpsUdbP7e52rovpBDWBFKhMdSD35Mjj7oeR+p6iseT
mrsfBANzYg6/u+fN9dxQCz4l3WdwCKq47MPgWMvwt9ofqnJ+EiRAA6950tqn
alDdaao6jdbsHW35P3P6v12G7p2dPLbTPVS+sBW0tU/sZbvtbRmblsZ+Sdo3
Kcl+oKnP5Q+UrsLpVLfjU2J963Gug8r+LjnkrPqfNWbVLfthPj/e8Y912mNc
l+qOX8NxlJfWrB3u9InWhXTfyDqq43bUXn0dXbfu7sdqc7W93rsV5YRdXec5
MtmXbOViuNQ2o/HpG5T3anKMXxWma618H2lcGePV15Nj/Kp1k9W8dq0JfEn4
N/AtfA63l4QPle/8uiTCv7eOdP1rx1e6r2xXsq9f4RfH+c5tqrY9ymMxraPT
N6rN/d51td+ZNrH/TrDvvsnzA/K58r3qE21cF90b/3KZv1iW+ra3etZxVbdZ
HetaemhpG5Ce3yHNu/ABvJ0ca/q0n1cz2410t8L3llZuizebxzvQQuele4/8
aIX7zSA/W6v/feD8P4L3k+MduN6Ff28dV6TEN2j69mxESqyr1HrMGl5fOboo
7vvy66O0vkn/V8J9KoXj0dCDe0I5lELv7Pi2Qd+X9PBvfVfSHSZmx7rWUzUm
0rgJxkClxiDQE3rDyKIoU2WNgDMIOxOm67kY2mTH+hutMWmnvPWNJQyHYdrz
UXGgG3R3unNgFkxrHHE7QBenqYSTYQD0L4r/kNF/yRxC979DlbLYr1V7Ev5T
GnJK3kPU/a/EqNcU10l1G8y1/q5LL8sgWX4i7p+Qxflcnu8WQFfOfyiN/bFV
hsoaapkkS1/4ozT2EpdckkdrkLUWWWsQ+2bHmuUBPh+UHWWXNw69SoadpDkI
r8O90MO6lux/Q0fOW0E76AS/EdaHYz84DBbomQvOh0XZEf4Pcar5uuql+vWF
XzifS5x5TqO03dwebR1nP2Pu++B+zYE0inhagz3MZajsjpZFZWmt6ViXrbWb
2gv2D7eN9oI9BT2eDqfBzIQoR+n7uLwBUGGdSDeF0ELfRcJAaO36d7SMstXO
blO1bR/yzNc3ldJnQsglXb2i9cyNQg7Zyl+Wp7f128Ptv8j10ppTyd+FsPaN
w05lG0WWaSiUSg7K6AbZeu6xnBWuh+SV3Si98unqOvZxu0n/Z3F9FpwDZ8NI
yj4lO9aNjciOurRPiHKU/17vPb7L/wmr4264E3ZqHbfe1bWIPbq055jkknyz
IbNxpL3HaZRWYRmWWbL/m+dO/2esdChdFks/CdGn1Le076f2Hi62rnOsG8mR
QLkNmkceV7SI/5zXN8OJcF0hz2lwFWwrDN1MJt8zE0LHkutheMh12gibWsSe
kNobUuH7XIauf14a/z+rPdU+07wdYSthA6yHLbAV9sO9rpdk055sdzlM19ZZ
VtmadJZpfagvnJEQdid7k2yrtI7dMl7pMvb593bqdANcD5sKQy8tbDPSzxj7
UvWTO6HEui2yPUkvG2GD9TPM/W2w/UUFtIKT5Yt9HGlb0W/pQLrQPnPfc76U
PBbDWphdGGv8htoHKc9x9uuSRd8sqB1U3za2+fNIswCWw7zCuDYGxlon4+1H
xzivM4lzBayDs+BTdPIZfAVf6vuJ5qFz6Vr2UJU8PqIffAhVGocet7hdFFdr
jGXzamO1dXXi/JoY6RR/SkLYT3v3tZ8T47ri/Z4YNiv9Ss/9EqJM2aK+Y2/U
PPyi/ONv1P3XRiGLwnT+sPNSX5XvVJnqV+pfpc1jDzzZ4T7L2rB5xKvmOlV1
38i3b5AttEOGOXAulOqe4v5/lvuo9k6dA+fBXPiJvI9Er0freY7zb6A6579y
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
oUZ+2FS2bQLP4R6m9LgLwrOtYk887UOn/e0Ot4x/RmnvSO0h+RHuS4iztxj2
hItwn8SvRQL9Ab5sGXuYam/Ywgmxt6n2kNRekgUSIr3CtdfptQmxl6z2lNTe
kv9g3zKtYs8B7T1wOZTDXbpV7Puv/f+TcV+nNlScPgZX4b4aRuN+Ga5ReWWj
ivE/ptRW8c2tvr1dAjfjrqU2S9hsyMI91WtarWWn5Mc/1fRvMv2jrJLl1cRd
G6q0ChvJVpfDkFaRRmn7wVatZVmbTYIhuE9pHUqcjbTtFTAB93j1Edw7YaLP
V+NeCa/gfhnm4p4KY1pFn1DfmObz0TAZ90wY1yrkb8C9yunrwnzaxgL3j9qt
oqxToGar2BNgUULskam9ArSn/P7E2PNee81rj95fE2PPe+3dqz3wtyXGHvQK
PxsZZ1H3f3L+b8uo/5bIaganFJcyf601O2vZZ1rEHpza9+AN56c99Hcmxp7A
kq+1yRw4Bp/Cw/nRJzvAQ/AAPJgf/jovBGvyIx/JnwWbcb8lW+Nez3Gd47yd
H9dJul7StdQmH3Uds9Hnn2sdrfU0fGk5krfe6Tc77gb7zYJJsMX5bPH5FNd/
Yn6MIRo7qkEKlFE448t0GIp7MNxKm0uEd3Dvgla474L9Ppf/zvzQS21KbUn6
7YWDcACOwDlwgf11XgsyIB1qug0OcZ5fWcYpu7/wXPWybaQ5S9dNE+03xmXT
teVUl1HXZJrHdM2oa8fZ+TG3ad7TfDfd57MdR9d0c21z2V7XOLpu0byoa71R
znOMZShM1y8jHOcL66prXF3TnoTP8uO6T9eMuu5b5HgLHVdlHeo0i1zHXzrO
Zz5fZBkbXKfrXL+H4BP4GN7Pj3lA42dV12lndL4P6uLOgwbQGCrBHdAQ2kFr
aKL0xO0F7XE3sn8rp1F4Ser8KuiOuxv0yY/rXV33tnXdaTxZDaWJN4DzgdAb
+ueH3HbOV/Kb58c1tq6ti7sul9puspfW0rpeL9s81tQ6lmsefUznOur8tubR
53SdrvmwmGWeiaN++ZhtLR2lm9q0+q36r+bSe/NDjuZX+Ume7FYH6tt+aqdq
r+2I8yrc47L1cfmTnHeiy3MMW17F8UrVKe6Kykt2hPLwF35/w7W4i9q/lMrp
8CquS82FqZAA37WIdEVdx1Udr5rrVfIrun7LWl45uDU/6k31d7XK3yLKXQJ6
5kf5i2tNAUnQKz/8FV7c55qXn4As69Q3P+aSAa7f5PwYPzSOlHa8J9xWeuTH
u51vNChQ4N0GcZ9zS25cE+pa70OPq5/7ulDjq3Q5F86Ca5vHuudS6yzdz4G/
8PtT3xTYX+GXW2f5Kexc+xWA8+ACOB8Kwr+6v8rxCrsLOOxC26GY877RMs61
n+T3If4nsA16+6jz47A9L/SWzIKW8bfl/+sw5XEJXOP8dS+qENzge1I6FvE9
K53/kxf6F7AslfUyl/OMbirv35b/CfZ+HwbDBGiEf23Iyov7yvvxOwgvwBB4
Rdd/sAl2wW7YA2tgOWyBbXBdVnxX+rLTKK6+szkMH8JeOAZz7Cf3bPgAjthP
Yd9qHcvcXxZ+wH0qL8pzqev6RzjAWHIj4d/lxVHxlU7nTaEqXIM+V2eF3Q/C
u7b/Xpf/E+sgvaW/0in+RxyPwsfwYV70/S+sh/L/kLz3wq+4f4MU9Er2GKSx
qFTziK90t7meVF8pDpf7d8L+cFqNOTe7jhN91HkZ13U5yy/lMU15Km/JKON4
chdxfI2zh+CW5h5vCesOg6AfPAxd4El43Mc+bqs6Hww9nEZpdW9Y97IHQH+4
GJkNoRk0ta63WK8ydit/2Ul+aivvwlq3mSZql9RXQWjcPI7ZrG0bNY9z1aHq
8ks4Cd+4zr/z+ZcOV9v4Pi/qYhv8bLu8c0e0D6X5JS/8FS7/XzwuaHz4x32i
tHW+2XWhejmdFzZX/YzCPRrq4R6ZF+2yNDRvHjqk4L4Ncjlv0Tz8FS7/Fh5X
ZK+LPYYoXhOPOWf6bhOX/QIfGzmNziVb9mritCM1Xtqmsu1LzcJvj/um/Kcz
lk5sEDbfDjt0f4K8KsH6ZvGNmb4rK5sX35Tp27Lb1V7zIl4ZqOL4ilPO8ao7
rKzdiqNv1fSOvp5TpVqGZP2aib0zQ7aeW1W0v75B07dov8J3sASWNgs50muZ
x5WlDpvhceJVmAe1c6P8KvMIlRVeg0XwZrPQSbpV8zhQCDtsaBBplHY8TMiN
dG96XNP4tgHWNYu05V0OySidF9/66dtAfVuXnBfPQPTMQ9956Vs7jYEa+/TN
nZ6B6Fs8fTevvQLuxD2V8CnQwDaqYZvINvXyYszUWKnvDOtCQxjL+ehmIUs6
6Bt1yUy0Dspb35rpmzk9j5FO8td3hvreUN8tXma9r7KeN7ssF/0nTHJLO0zf
C17iOPJT3rKJ2kxZ172+4ytqHRIte6vnAeUxBJ7Ni36j/jIM/+ddr5thNbzd
LOZ9tZvPPP5rHvjUbVv1pTastvwRfA5HPY+84/asdq18fyyFTnAavi8Vc5bm
rudgkONs9xwlHWtR9zUgW/eUOW/OsRzk5EY+8s/IjbYywuOW+tKEBqG35kal
e9H5NCFebm6UQ/p/43b9LXwNk3383u30OdtjmPWrmRs6nfiP7GznrTw2uh+s
cD2oXYyDMW4fmsM1lw+0/2bbeonTrnEZ3rbtNYb3VXuFp9zX1jhsqfvBRue1
zn6rXVcrLUe20JpNdaj7yrrfrPvOur+s54gPOR/J1z1M3cvUfeM+1lm6a43w
snUfYlsMtF7ST8849KxD90R1b7Rfs5iD+vn8Xssb53RDLVdzVXunG/CfNH2t
U0va5GHsWx2dh+fFvPii26zmxxHQKi/iKXwtcWfBazAN3obrm8a3qW/h3gAb
YT2sg4d03xryIFfPW6AmXE9YC92D1711P5N5zPEedjyFr3ceqy1vOqzMDT2m
WZfVfmaj++Db4B09a4D9sBm25sY6epNlrHa6tX6moWcby+FNWALLnIfy+gg+
hifRpVfT8N9gOWudZpnTveE8tnitfiQ3ntno2U0X0j4KpesxVtSLMstP7x7o
fYSB8IyfBT0NT/mZ0FDHUZiePdW33xA/f/qpLuu3upFmoNMsaMJ1epN4nrSX
sEOwpEnIrAr3QDs9H2gaZTsKX7iMXVwfT1hfvcvwfm6896B3GlSW2+pFORS3
DdwHnSAfOjSNtlTV8ts5v7t0D96yVf7f60ady78ZNHG45HTWcxXLk167oHfT
0O8g7h2uZ9XvTusnPd91W7y6aXw3rTaputWzraSmUcc6FoUbfa66k3uD6/wy
3OfDeVCwaTwru7JpPBPTs7ELcZ8DBeBcuAAuahr+51qm5C1z21Del3NepGnk
LVvr2d2XtrmO77mMX/iabq/9FFbA+Z0N/3JeiGNxKAbXNo1nd9JTeSivGzhe
Zxtc73KqvBvdbndZ9k7b67j1Oeo2Oyo7+raeK+nZ6USO6fULFEiDV3E/APfD
SI3JMAWmwmSYZH+F3wfDcyPN67nxTHOy8zjqPqX+8UxurD+0DukBs3Pj/qHu
I851GqWdb/nSY379kCnZI7Kjn2osGI57IWEr6oeM2dZtouNK1mvu+zNdxnnW
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
Z1rcz9jp/JTvdoftd1l2/SeOwna4LB+7nEcdT2Xf6/iquztSo12qPV4EF6aG
jf+q/r9vhjXGaM7V2PEQdE6NMaRVaszZy6BlaoQ9AvelRpybXZ/N3Mbkp/8f
d3J6+bWFhm5/iqe5qq3D2qXGP5lLu61LbhfLkCz9Q7mj47Rzv0p1v1J/Wo4u
makxT2h+0Nyn+bGO575cz4dya/47UC3aelW333ugNdSDuqnxn9VOzlf5XW2/
dtbvtMcH2VH2a+jy3eP0kqU5QnODbHcBnGebK43Samy9wOfp1aK/qd9VqhZx
j3ocU5pDHtu3eQ4Y7LrSvPCC/RSm75A1P6jPajzRuNIBLncZrvL40bVa/Ff2
YsjA3SY11mALobrt0Nr13tJlU31p7aYyqlyaG5e4fFXg7tSQo/SKp/K3tk0u
cf6XO88Gjq90Wt/omq+Nrw2Kw/VpMaZqLC2UFvfYdK+tdFr8U2/oTQUKDIOF
OegN02ERjNf3qHbPhVftNxmWwFK9a2L/efafAM1K0D7gOdzPwzhkD7wp5Ej2
YzAWlkETuyfCcvut0PsCsA7W2G+5/RS2ClbD2/CWZZxJV9dxVzlspZF7o2Wu
u7FAgeboNwz3UOch/w2w3nEle5PTTHJZV1vuk073LPRSeaEpNIJc6Ad9oDf0
hf4wwP46H6g80GEVDMLdE7pbruR187n8e8DeGyO+0j0DT1ue5D4FOdAO2kJ2
TjxL0vfVWTnxTKkW1MyJ5zp6ntM6J77Nvhvuslvfazewn94NbK774bID7nrY
qj605Dwf6tjOOc6vseugrsP03Ota56m89V6lnkHp2ZPer+zA8V7oCO1d95Ns
2+W23SgYaRsersP6BI7BIZiXyTjMcRO8nhl+CnsX9tWJNjjZMiVbbVZtVP7j
YFpOtEO17an2m+C4aovbkPEB7IHtliv5R+Ad+AgOwgH4ED73fgPad+CzOvEu
ylt6zq3v5DMjneRtc/p1eoeiTrx3ovdNjuL+2HEUV3aWvcfSZ15xHaouP3J+
x2yPo46vdjjcbeJpl2u8yzXGjHPZ1PfU7tX+1U+fdzqlf9FtVH7quy/YT3Ux
Grq6ToZaxnD3gRcdt4/TvwQjnGaUZeXb/wWnG+Z8lFZjhdpYvuOOdvqXYTZs
vCnGkOmuu7W418NruGfkxHGa63Km08qGr1iG4krGNMfNd/iI/+j0knVVGVRv
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
9THRlDWQ5yjMVSi7q8SVLsPXFe8qngsqiecusS2+lgubH7a/c1Xm54lScU42
7CrUJXYc7DfsVTyfChs5tnLKAnvire2iTNhHqWkbIbbC/tk4R8vZ2GvEmlTY
0dkb4NtexMV6fJbjLKN0DhH/5MU8/m65PZyKMxuce+CdOLwbh3fl8Jw352A4
DzPAaT2aij0obK7YXpHpxVzkk/qqobrNF5fpelAudAxdG2IbDPnmGbBuycg/
ejLBafEcIOd8Oe97nbjRunq1r4kH3TlWXJcLHRqschkq5lmO3cxJxOHOJ3ZW
bL/vivdy0danWxdo81OVh2mpsJlgO9lgPcROeKv14qVc2GmxfY91eVFuD4ml
udAhdAc781bGU4/JjM1Xqq1eXDt0Ft3lmjbc1npM3JzxxgZMGujyy9g8+oZO
05bRkfZuh9sV52d5kQ7xN3K9UPeNxVOK45lc2MmeFg9KxivFOOZ+qXgmnGfD
t4jPxA7F8bn4SnyZF2sL3i1GONYYW9y+tto/9Y5diD0Y7E7sG6HTF2Zj/2iw
62qQ6/wdl8U6t0Ha0nbLTpvCDniDeDYX9sAPlcZH4l2xpiTmBsx1Ps0LWbcw
7vA9i0Yh97v2z3OSPB9Jm6XtchZ6ra6np+I5deqYusad8qbcuT/Ocw/yzhzy
GuvcSS7PudYB6p69ofliteucuqfNYnsdL/7Mi7ZM/4zd9v/stZyFUTwXZeP5
qA3Wj/Uuk/auX+Ih/JRUtDHaFnb+L1xelBt7EYNzsWc10/XcwePAye4Tv3Rd
TnR+eGcF76mooN/dxZo32I6HLRN7O3qB3WGs9Zm6xfb3nOv4SaVxvbgxF7p1
qfs69nUuyUVd01avd51zD9v7NfbTUOluEh+LlZzRU1tNtot+dpX4PS/aLG2V
vol6muK80yYnOj/MU5mfnmJbZCvnATv6i+LhXNjTuzOnon9WfRxsEHX7tHWH
slnqvo13MPAuhtcVpme7kAt56EvObhf1PM99GH3ZYJfBbLf1Oe5X0FvK6Plc
7JP2cPrI0S0/9oZ/zIt6pP6I+5x2oUPzPfb9e676bfdh8zxm0KdSN9iGxruO
CpG3bey7XGAZkGWT+7jVftaYd17w7gv2UtlrPeB33b6v6w9S8Y1WvtVKuP96
HGaugF9ssuv9XtxvJPPXebFHPcZ5+UBsdp4GuB+mDdOWqQfqY6Z4zmU22LqK
/nRWmZwuCkQnkSuJ50Rfcb/3mMuUsmR/4w33A6s9rmZyUQbknf0H1lbYl3nn
A89ofiuZPrbMyP6M28r97hNX+d0KPOPMs87Pu/6ecn/JHhVzOPao2KvaSR+T
F7bWn/Jin7KT53Ls834vt+/yYg3H2pp5DnZ4xuHV4iOHJx72iFjbrPO7HVi7
jLSsP+TFGQDKjTkS5Ur5UQ/UB7Zxzle+53pmD4y9MN5z8ZTHZPoNdAt9ft39
1Dzr2VLrFLK96zkCMm72eLLd9XmY2yFzA+Y4zLmYn97sMfFS2rj4j7giG/3y
Fo8htDHGTvR4hP0zD9vnMZl2zjoJ2yNrZNbKzGsYw9F75hI/WMdudnkwzjPe
M6+gLfJOjyedV/oJ9hGpK/YV2E9AF69zn4VOsofGXtr3rp9rPZ+4ymPmRs8P
p3t+R199WTbySf5o+5e7z0WPKWvO5ixymW9QHa5V231XzCiMvRP2Exe4H6Wu
1/vdBNQ5Y9Hjlp2+7gbL+qT1nnemzPCYxdj1odvbj9aRN/yuA9o2Osx7fujT
KxfF+35ec13TTzHnfMj6+Y3b77vuKzZah3hmBfnJx8ai0EXaz4dOj3k9cyj0
jvk9czv2uC93v3i9y3uQ2zr7FGU9R2au/P8AGLMZZQ==
            "]], 
           Polygon3DBox[CompressedData["
1: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
Sdr3SR/4EFG27IndK7gk17vMxyTpfZiX1n/WYL4t++6GruiCNmjA8tnsIwSh
cl+Z+bqYwvR0uWct98CZT8IEuTddStfVYb4eJks5kHvgtq0sk3iqltLwtW3b
SUz3LaXha9s+pjI9rZSuk/hWcH7WYC3WoavUMSzFOEzGQjQi3Y0t/a3RSs6V
1E3k4Jo0L/JgViG2QSO0xXgswEKsw1osxlhbJ2FmYDQyUg/zIZfcx0Q6pnex
7304jmP2jKNLoj6fl+f0+Qlzn8+5bD8PGzBffl8YOfGBdHbkPHbCeubTIT1m
W/g5Fna+pXMplsn/9iXqc195pixpyo6mLF8BB2RFS8SwPBo1EIbQWvqugryz
4IJCKCBxEfYZnhfS32Z8ZdMv8AWf7fcan+KJLX9u2xQnzqoIgSfcUR5VUNnW
BaKz1CH5DyEkogPzA8mvjcgLD/TLr/8v+AGn8B7v8K8zY28kZzqZHedLWydh
3lq6muEfZw0vYSRPKrDvYARZmiRtEahueSJ5Uw1bk/T9dfnfOWkDtjPfle27
WZ5LPZH64kh+OSE7MiJDovaXfxXUtkLa8UEFtYxKWX1DO/dSnudLf1BLn8P2
RgOm6+OJ9SXX8RzPErR9ljZS2krpK3piSj4t8xLvcin7zAfY+U1CAgphOdtf
wkWMxpgEfV9N3lvrxvqu6IKOxNmpoJ6H9miH2iyvZ3FJnIm1tC5JnZLwPdC9
oMbTHUU5jsa0cz2YPkN6fsnzE9JWCYHoz/K/aumxyjEP5DOZ3CPC/nh9R8CB
6adst55+e1Y+PTbJK3lXTPIiJetTJOr7bu5Wxjxk3yhSS9uuJZyfRYW0fEk5
W8V2KxO0zuez8yV1KhvyYZXVxQ02vdraAKlnfSzNQzAUg2tpmyBtw0Dq6aAC
ui85Zjl2eS5aycrXbZm3cYGcV3nn7Rqft2UaN3EjQX/jRn7r5h88xi48JN37
Kbd78YbpB0amX+EZXhTUsbCMrZ/bOP+kjQOPs+4ojmGPXLfzeRL+8MMOeFCm
jzE2PY4TcGc+C3mdGSFIj7TIhvzwsnqZB+UsjIStimBZzvny59MPvigh08SZ
gTFKFmSHL/Ol5XkvwlAGJfPru0Lu+DO/jkFc4IPi8v6QxVfM4g6w/Ze1ZT7E
mZG4c+BzCR0PFcVmpp1Y5gh/5u8xvshh4yQZL91l/jDnqR/64gWO1tIx0hnp
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
mWF6M9/H6Va47vwfHpWQ9w==
            "]], Polygon3DBox[CompressedData["
1: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
lb2wTbimecjwM7+wnKese5uJjGVCysPwzPF9JjOFacXiM/cpxjcHxOcD4Rlp
m/CMMlyLYuQIc9c0Bght77nyaId8283E1JaGNmGQ3z2cJ3wJi4Vfo5YyXZMs
6lCS0uVj+/CsMlyH8zmXWR3jtQ5xHsMk3klpH5bq7FCeTWV4SOibXftcnEVH
2oV3b7hUH9OPvjxKG6pTXH1Ya7/V5BbOQykaUo+rqE4NGnDQsY5zIpxDvM/m
lPC6NDbY1CweswR/C//s91sWhL/DudjDJH3GW7zJZN5hIq3E6QZOc9yj4X0T
jjFMHX8utDf8Z/8jPC/8Ii/xChuc72jzuE2Ic01qUZssqrFZW76X/fyb2vZ/
OM+coRIVqUJlKvCQY/VlKJ3pxAC+cKzBXGOsdS3t6cg213gn29nVKpaNranv
/ofV7E1lo3+rOPc83X55OIO8LWNfUMyxN0pPUb9ncR5Fmsd3MzawPtzXTMcM
Y4Mc9rvU+r0h3cJXUYAOKW71aUgLmvGoNPRPaWlPBwaG8TDnciGFuZQzyZvu
6YV3NlbwF/8wxLqn6M09PMNgcqVnUuEeYNh3g23PKB+v0SpWsr5ZTOM/od0U
70pcSQXKcjkZ1yAHp7H5CttznFHOMfqGWAYONo9t+xvpGnXndl7nf3S8IT4r
CffA76Ibt9ODJjSmIQ2oTyP2i+9KSpURD/aFd2zKxXdXwjt74R7Ft/wpvKhc
nIOHuc+FwhfzMz9RURtXkssoSjGupExo66lEZcpRtmGcs4e5fNj3l3LxWe2v
KRyOWYgy5eI7P+EZ7jr+Zj1b2MzGcvGYVajdMLa9V5HFAfPdgww1txrOS7xw
VXxGEJ4pZHMn3VNejW0gn3meEbzNRE65BifTtdjHXk7QJ5WldvTivlQ2nnas
mhXiNq38DmBIhVhmwjZ3cjf3chf9rHsmbTOQvjxSIV7TnjfEudtIXuY1CnIB
F3EJhVIZ3iEvtrOL3Xzmmk0pE8t8p1Q2buHWFOdudOW2G+KcsWcqS/O09z9w
/EpljW+FZ1eMc6LtbGNNs9iWhjbw7HTvN7xrusp86G8KCL9pn7FMpj+PMjKM
KYw5VrJBX7mRP4R/5yN19QOmM5QXmdkyPmsOz/o71Fde6EhvntWWPUpfnuLJ
NLfa4JpvZRvb+Zs1fMuXfMxP/MBcOtjnwXDPmS7cSnt2q2fr2ckIXmUXA9Pc
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
jjpKW+H/Az3CQck=
            "]]},
          Annotation[#, "Charting`Private`Tag$18568#2"]& ]],
        Lighting->Automatic]}, {}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl1HtMVmUcB/Bfpmg5kAzvK01nWVoEgqBbZcrosplZAXlJqalZKjZz5WYT
g16s/mi6xFcQb+mbBrh1YbYugmULoqat1R+NrGZtVhOdLS/N2vq864/PeX/7
nuc5v/Oc857nhidWPVR1RUS86HCv33s4x1+cpzYjIkk9G5jfJ2IBjzGJiUyh
iFsYzRjGMo6aKyPqSLCeVtlB9nOABBuoppYeTg2M+J0/OMlPnOAXfiVlTBM7
OcY3fMtxOjhCJ11M1XMa07mbClLspYrlrGAVy8gki8UsobJvxOMsppwyTveL
mOFZzCSvf0Q+hdzKJEZzPd3mf8FXtHOEXt52jXcYRdCHIQxjJBn0o4NNgyM2
s4V6hl8TMYKRtGRHNPMB7bTxHrc7l8eiQRHZWRGDyWEoCTbSyN+ZEZforx7A
RfUFxqsnU0Cnnl18yVE+JTfHepmgvolipnJjeqy+3ZziN5bKnmQhlXRwjO+Y
zzxm8wAzmcFKnuN51rKaNSR4jZd5lae5j1JmcT9PkXWtdfOR+jBtHOJDmtzT
NpJsYS97SLGPUkq4g2IazdnKtvRcdjLX2h+lnNU8wxqeJaHvS9RQzVLZMlay
nB7ZbOZQRgVLqGQeC/iZk+zXK8Uu9tBMKzkj/Ae4igH0JYOrKRrue6SQAgbJ
BpJJNu/LDtHGbuqo5RU2so4SSlnLZHPyGc8YCihmGiXMpYJyHiZJDz/SwHb2
sZsd9A7x/dDD93wu6+AT2tNjZW9wgBZa6aSLJA000kQ3Z/mTc5znAncOjbiL
6Rx3za85ymec9Q5O8ANnyDMml9vI51/ZJS5ymfXmvMA6qnl3WMSbpGikgSRb
2c7rbGYTNzOBcYxlYvq8HotYSD0fc5gVVNHOP1xO3wuj9Mwlj+s4aJ9u5i1a
SNJAEztI2FLqqEnv3RTLplBIEWdkvZxmDg9SxiPx//7/H5lZ1fU=
        
        "]]}, {}, {}, {}, {}, {}, 
      {RGBColor[0, 0, 1], Thickness[Large], Line3DBox[CompressedData["
1:eJwl02N31wEABeDfspetZdu2ufRfbllbdi3btm3btutLdLLdc04vnnPv/QA3
Ijo2MiYsCIJXvA4FwRs+8onPlIwKgrKUojRlqEcDGlKfOtSlGtWpRW1qUJNK
lKcCFSlHUYpRnBIUpACFKEx+8lGETGQmC2lJQ2pSEU46MpKB9CQnBclISkrG
MobxjGYU45jARHrRkzgmMZxhjGQEPehON7oSTRc604jGNKMpTehAG9rSjvb0
oy996E1/BjKAQQxlCLHEMJjlLGMpS5jGVKYwmVa0JJLWRBGiEx2ZyQymM4vF
LKIFzVnAfOYxl4XMZg6VqcJ1rnKNC5znJjc4x1lucZozXOEyl7jIS17wnGc8
5Ql3uM0jHvOA+9zjLg/JQ152sZPcRLCbPeQiB1nJRnZysoKVrGINqznOMY5y
mCMcZC/72M8BDnGCk5xiLetYzwZ2sJmNbGI7W9jKNqqSgPjEI4zfvvSHvwT2
W/mOhPoH+Z7EehIS8cP+xnd+8osvfA39/+k/e5rBSg==
        "]], 
       Line3DBox[CompressedData["
1:eJwl09NyngEUBdAvtVNbqW3bZso/dWoltdvUtm3b1lvUdlPb7ZrpxZrZF3v2
1TkR0bGRMWFBEMRzLRQE17nDPe5ynzxRQZCXJ/IDHvKYR7zlHZ/4zHs+8JE3
xPOK1zznBS95xlMK2j3DKU5zluMc5Rh72cdJTrCVbWxmC9s5wkEOsJ/DHGIH
O9nFbvZwgXOc5yKbWM86NrKBFSxnGUtZyRrWsorVXOIKl7nKIhawkNlMZALj
Gc0oxjCWcSxhMXOZwzzmM4uZTCWOKUxmEjOYxnQqU4kaVKUK1alGLWpSn3o0
oCF1qU0dylKO0pShPLHEUIqSVKQCRShMCYpTjKIMYjBDGEofehNNL/oykAH0
oz8jGcEwhtOaNrSiJS1oSyMa04ymNKE57elAOyLpTg960o0QUXShK53pSCcK
kYiEJOCv+/tDEjkgjMQkJRUpSU4K0pKO3/pf+Mo3vvODn/wimU4aUhNOPvJT
gAiykoXsZCMz6clARjKRm1zkJAc37N7kFrdD///0HxU+w+0=
        "]]}}},
    VertexNormals->CompressedData["
1:eJzsfXc4l//3vxUlTUpRIqOBEEqFu0hpmJWMREWoaFgNQqSlFJGZVRqSrRDP
RLIzSkL25vUyKlTkd1zX7/PP+7r6ZrzG/ZK/zuVcx7nP85zHOc/zHPf94jt8
UtOYgY6O7rUuHR0j0KWSt5UenatHS/5Duf8/Xfof+l85vFAenNhBKjpWf49V
nlTxJRUuyI0vao33v/J/ev7f+GO1/096qI1rUuXpf/1C6Xwcq/9JjUNy07/Z
Odo44nV8pMLnf+X/NF5awQO5n0+q+kaqevK35/xJ/3/5f7L/b3V+rPVrtPaQ
K26Uqrekyl9q5xO5xoW3uoGXeoXXvohU/QOtxPl/+OTBid147YdJ5We81wFa
Wc/+j/5tHhltPzzZ9iXwRindr060nowWV2Plk9o/Y8UzpXH+t7iMtk8l9Xpk
rP6kdN2m9nxBKpzgpc+nlf6T3HlHbr9Rqr7h3Z+kxgu56zml/fyn+kapej7W
uoQXHJI7vv9a3SPVvEDq/pPWKa3nC14ouftAauPxT/ul/92PwmvfSO31FKXO
X6g1LrzVT1LbM9pzKGrHB2/2UwvPeM8jUttJ6nNbatdzvPmNUvs8tIJbStOJ
3tea7PZQCz+0Ng9O1nGRqo7hvf7Q+jk+rVFKn1vhdX1BrnFNVB9e74+NN454
qT/Usp/UcZ2oPdQ+38RbffsbTvBi/2jxNdb4kuu9D7zU+dHGd7LnBd7ybqL3
E0h1f5Ja96MmKx1rvv/tPHq08R2r/Hjn5T/hllrzO6nuvY91HOTeryNX30iq
+ZHc92omGsfJUnfGiktqzeOkqnvkzrvx7nOS6j0sctlJqXpFLfvHqn+i+4Gk
up9DqbpK7jj+qa8Y7T2KsebT3+TIlV+j3Y+lVl0lt3684W+s4xjvudVYz4vx
Ms9Syp6/6fvX3z8lVR5NdN6htv3Uiju5v99C7n6A3Pn4N0oqeXL3mXh574xa
6xe81CVKPZfU4yV3XpDLfmp/3wkv73X+bbzkOj+mdD2ndr9EredPtM6M18+0
3v/gLY6kwjm5zrnGO19PFpxM9LtVeMMtpfafx2rPROcjvPZRpML5f/001vdz
x/reFt7m2fH6c6znvH/yN6nXy5Te559sdKz7e+Tul6h1jjPW/VhS24WXdQ2p
8EOq/J3s+Tdef+P13vJkoaOte7QyX5DKfrz1M9R6r5Dc46bUd2Pw4me8raco
RWll3qcVO/FCqVUfqD3uf51Oljjg7T4hpZ9L7T5nsn2XcoriM4+o1T+Pd98V
L/MdtZ//N7v+dg8BL+etpL4nQO5xkXs/kNQ4x8t5H7nPBahd38hFKfXeJd7f
16CVOP4pXuR+v4ZW/DNFKZMvpMLVFJ7+bz+M1T/kfs/0X48Tqf1AK+uRfw0P
5PY7rawjyIXD8dYnauMBL/GlNTv+RPFy7oN3P02NC1/++d//kQu/5NJLrX0k
ar3PS6rn0ko/Rut0yq+Tg07FEZ+UWnHBW/382z4Lpe2jtj8mm52kGhfexkuu
e7aUwgO5v2tB6zgZq/6x7h+Su08md9xJ/dyJfr9xrPcNyP37Dnj5XvR/6d9+
D/q/75uM9fyR0udWtJ4X1M67f83/5D5Px8s+6t/8PNrvLk60/oy2PuNtPqKV
5+Idb5SyE+/7tLRC/9QH0FpeUMtv//17rH3pWOX/FX/ildL6PDLR7xXjlZIq
j/5HJ/p9b7z5baJ1idYoqfCAt/0uvPpztPtgpLZrrOs7vPTPpOofxkpJ9V0I
cvc55PYDreTjeJ+Lt9+XJ/c+0kTfo5mik4OS+1433u9f4aX/xMs8O1q/4dU/
1NofGOtzyD1fj3WfaqLns5RaX1Mb5+Q6H8GbHlqhlDrvxhsd7fv+tDauKUod
/OPN/rHKk/v7jaP93jWl5nFS7UvjdZ4drx5awz+1/PY/Sq77DJTyA7l+H5Za
+37Uwg+1f8eQ0ril1n47qeSpjSNK45PclFTrfVqrh5MtjniJO6XrDLnrErnw
hrf9n/HiGS+/bzjRfUhK5zXe973xRkk1v/xJD7nX0aTCD7XrKqnXTVP036K0
vu4mtZ5/NR9IVYdJRaldV/EyLnJ/n5BW4jLW5+ANP+R+Pl72z6ntZ0pRSt+X
G+2+LqnxQ63+nFT2421dT618Ge99S0qvi8frH3L9Tje1Kbn2Uyk9H5Fqf4Da
48JbvGl9vOSmePudRHLbOd7/o9b+J7Xn49H6f6zzy3/1jLcPIdXv6Yw1vqO1
E2/z7FjPxcZqP7XqCal+J32y5jW5zyNIXU8mqodU9w/xtk9CqnwnlR5q/f4X
qdZBpKZ4+Z0javdLY40XXs5ZaP285l+zk9r7RdSaFya6v0rtcwq83H8jFa7w
1ueTKn/xNi5KrbMonUfjzQty7+uSqx/DG67wRqm1r0vuvvpv6/Q/4Z9U75Xj
5T4nue2h1LhoZT6ntt9Gu/+AdzxM9H3Gse7LkXpeoNR3a8e7D0mpvmWsuKU2
7vBC8eYfUvddo+0naf28Y7TjmSw4+dfsxOt6hNL9J7X3qf4VOtrvTlAq7hPV
x/0finf80Pp5H638XhKp/Umrv6dA7bzAy3us1PLbeNfX5MIzrd0/odW4jxXn
/5qf8TpevNQfWqF4jePf7CSX3aPtH8h9Hkcr62W8UXLP+5TG+9/OO6iFi6l+
gzR+oxT+qdXHkttvf8oTan0HlVT6qVV/SPUccv+OAN78Rum4kNqf1M4LatcT
vOBkss2jpKrDo8ULXs5fSO2fKUrefKM0Hkj1XHLj5299F17yaKzPH+85JqX3
/ajtV0pTcn1ne7z+JPd7f3ij483rqe8fkhfn1NJP7t+9IhWuaO09xH+d0oo/
qB1Hcn/fDC/vEZMbPxOtB5TaF6U23mg1j6j9+x20cu480fs8tFIfyO03au3b
4K1vHO++LrneJyX3umy8/0fp+kDq3/UeLf7xul4gVd2m1vzyX//+LS6kivuf
nktp/FN7n/9fme+oNX+Ntz5Tup/5V/ufKfpvUnLtM5Cbkuu8GO+UVtah/xol
1++zU7vfJnWe4hX/k91v/wqd8tv/TWmlH8bb757gzT+0Tqm1HvwTTmgljni1
a8r+/xtP5LYHL99No/XzTUrZi9d9V3JRUvXtlM4valFamY9IVQdo5dyN2nk0
Uf/Qen3GG24nC8VLHo2V4q1OUure2mSjE807Uu8P4C2Of7N/6h4XZfJ3on37
vzq/UDpfqE3xch5KbT9MjYs28ENtSq57CNS+V4Z3//xrFC/xpFX80Aqu8GbP
FMUXpfX1EanmKWrdz5n6Lgo+Kbm/Y0wtnNOKP0mdd3g7H6Z0nSF1vCZrnSL3
vUpq+Yva+zB/4lO7HpK6rv5r6wtS42Sy1ZOJ5gu5446396zHihNaxw9evjNM
7vOeye7P8eb1WCmp749NNv/Q6nOpXcfIdZ+cWuPCa3+It7jjBVd/Gje1vnNC
a7gl97kYrf4+GrntnOz5+69QvPye2mTBD6nGMVn98yc84FU/qb5PSyvzwr+G
w8lGp+Lzb1Ny93V4+z7qeL/vR+33LkmlB2/7fuMdF630A+PNI0rrx1uekmu8
Y+VP0bH5Ga/nwlN96fj8jzc/0cp+I7X3w2m1buONkur3Cql9r49a+Jms9ZxW
8muieKAUbkmlf7J9z5nc90moPb7R2jPWe7WUqg+0Ugfwhjtq42q8/Ru16wOl
7p9Qm+LNHrzhE2/6qe03vI1nsu1P0jrF2/qd1v0w5c//e5z/ynj/R2nlfv4U
pU2Kl/s5eMMbtdcjlB7XePcBJss6ltqUVP0A3iit2I+XeRbvfiLXeKmtf6K/
uzrW51I7vnhZ54437yaap+O9t0OrdYZUzyX376D9Le9G+3u7tJKP1K4D5Mbb
aONF6t9TnmxxJPd7iOSue1N0iv7LlFbWd9Tax56iU5SS+KT2OKjlL3LTyfa+
A14prfnzX8u7yUKpVT/Hey4xWj1T9N+geKuTeLNnalxTlBL0X+/DJwudiiM+
KbnOY6boFKUEJdfvhf3pPInc+5a0su4Y7XjJ9d4Ete7ZjLdf/RtOaPX8klQ4
maz2jFb//+I/2nuRf7pHNNbxjPW5eFmv4QVX463/Y92HolRc/jSfjnYeJHe8
xqqHXPfuqF3HaIX+yU+kvrcz0fcIqP1dgv/aQeq8xgudyqPJQSnV/492Ppqi
+MhTUt2v/tP/0/p3/qn1fdfR6pks+TX1vj9pcTZRPRM9lye1PZT2A7nyndrx
JfW4pu6FUpZSuo6R+z0mWsHJn+yc6HtSU3lE2rhMdjpZv1cwWesGtSle+t6p
+EzRKUq5/Bpvvo33fV5qzUd/q294t3+s48LLvtnfcIKXeWeieYR3Sqt+JvW4
Jtt38sn9XFJ93wOv9ZNc/pxad0zRKZz8O5Ra96ZoDW+TtQ+ZitfkkKcVOuWH
KToe+q+eH+F9n4TUcSW33yY7Jfe9KVKtK/9G8bbupvbzpyhp4kGt776S286J
1glqxxPv9F/xE17e+8RL/R/vPShSjwsvcSF3PP72ftxE3wOYKH+K4puSCp94
iz/e7BltHaP2/jCp7rVO1A+kxudkpaS+50Ot+OI1b6kVT2rHEW90so6LUnWB
0vrIHR9a3x8b67jG+30DvKyD8Er/1X1vSlFqfSdktH3HeO8L/61vmeh3xqhd
r0b7u3jktm+s/h/rvget1UVyrdOpjbc/2fmv7EtQ6ne+RkvHul8xUVyNNz8p
7Re84em/dLzz7N/wRu5zQErHhdz72//tL0hVx0a7b0freKfWeGmd4g0HpNr3
nuh3IEntF7zPy1MUn5Ta9ZRadtF6n/avnVOQu75S+3uteKd4G+dY+zBq7ReN
l452v4tS9Yba8R0vHqjln4neE6NUXuLtu9l4yy9q20nt/CMXbsn9+7yT5f2a
0caJUnVtvHS0dYbW+mRK+X+iv0tFa/ik1veWaeU73uT+7ve/Qv/VcdMqHe/6
jlLxHq9+aucjpb5PRWqKt++8TdWT8eF8out3ap+n/KvrxCn8T9H/K+7j3cej
Fo4m+z7AVH6Oz68T/T3TP+nBO96m5jV8U7zjh9p5O4VXfFJqvQc02X6faLLS
0fYveMEPrdVhvOIQb3ZR+vfFqK3nv/rwFg9q4wSv/qA0zsmdF3izB6/3hcZq
/3/Xn6SaT/F2/2q8dKLzO7X7k/HaQ+n7TqS6J4b3fozav086UT/grc5PVkqt
ukHr/v+bvdS+J0Nr/qQWTvDmJ1LdJ8FbPzBW/0+ts0hrz9R7mpMjjpOV0go+
pvBMXb/h5b4lXv1DqvpD7v0ZWovPZKNjzSNS5xde9knGaiet1BlasXOidYPW
xkVr+CdXnaG2XVOUNvAwWfIdL5Tav0eDF/3kprRm758oqb4zPEWn8mKKjp+S
K87Uxg+t72/jrQ5M9UtTFM95NFnxOdZzTFLvr04WP1I6XrTqN1q3f7R5ghd9
tO4PStOJziN43ZegVhzxNi5aoXjzF17sGC/eyO1PWsM5ub4bifdxkzsv/rXx
46VuUOp7XNTer6A1fJH7vPh//hjt90ZGS/F2r2my0P+Ne6K4GO/vPo7WLlqN
D631IZPNfrzRv81T/8p3v8daJ/CGw7H2IXizn9b9P1b7aZ2e1d1YPONcAfoe
de/mF8dazFdzQ/9203bU9dyH+ZJpLhK8nej0ybcOu9+rZm3d1IZCfILed78v
RB0caTUKfnWY1rBLfqV3GzIqYPi6tKgQbVrwyyIJ9Pgpnjr/Wa0dfQgjeBSb
5aKBOVILzpXUYlvTRdu8QD/rvFMyzP7paC9Li3E66Gdi9f0ucKAdHQrXdXSl
z0JYON2hQOBz9rtI8q1oR82bgw4xBqQjWea4u92uddjMM4SOYNCjxbTsgytD
Fmp15Yk7ur4OW59q+GY58Pc0befTEy1GwZHRg8pgZyaDJmGbahtyeaAWONu/
GOUGN0TuAzstEp8uWN/fhp7U+7jnA385wyG2BRfrMK92U/lKkN8tazHNDMa7
4TZHYo9uLXbzN1pqadKOmPQDb28A+SaDvXvTPWuwjlW6/c+Bn+asM/AW+E5e
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
H62bIVCCeMSj8m4Bf8D9cOYw1LFv2Y1auqDnveIepkiI47zOqjvWR3PRzLUr
31wF/3AKbKi/AfKS9y1L9gFf6sbXgRE/eK+Xze+DeVZ1n759EMxTNo3XTzqC
vExWxM1o6BtlmlqjCcNvkd3gzh0j5zK2AztTIyFedHNmSVTPKEJqN89pBkN8
xRqY0mZDXbU9f37uCvCDPG92zMg5L/82e5cs6Fevyn9LPTuyv+BXry9QjpCf
yqqjoQVEbNvujKMWYP/pPp2gxdBfnXYjvjkB/DOO7VzdoF/v5ozmXOijBDd/
j22EuNS+UcvhHHn/B8vNlgb5H1zSbm7gz4vbt6mdh/HvEDze2wJ5mYxZ93SD
npPyG2PYMorQNTGemMXAr5TRIhAhjiJ2i+oaoU8W/6By3Aj0c50RvuAD8mhb
lxWqLUB2LyouG0C/bd5gubT3chemrDBfUtk1P81//acMCZiH7QO7eF6qdWEX
mvZKD0N+WTqaPJkG8gvpGd6yOnVh6d1xQXcBP4dT1IYR9BHLHW2zc3d2YTmd
1R4jdVVHbJCpD+K5RUcoVPNMFzZ8s3LXJcCV9Ro+OVOYryLudr2mk+3CWC3T
jR/5xiAh74N3To6cC8ye5s4Z24Wxix1sPgr2PHtqTC8MfGszq/PSkV2Y9Fqx
lqfw3Nag9icj99WVdifNu3m/C9M6puwWCvpD7+k6vgT6YtHwnlmgnylYMW43
4OEBTP6M4M/+FiUhPv4u7EDU0zA3sKPIzzDBeMSfwaJnNv8iYlt0sxd9LihE
AUHl+RUj5ykNu5O564lYnR62gGtk35nOec9L6NtDlvj96ge/fZOMkL4Odlht
kVpzCHCtPbNP0O9IF2a6I+feDegHGu4b1ZwA+UAOh/n+Ol2Y6+41mUKAk3yx
I7JWMK5pu4ty6td1YYTVRrMdgH9KbfHVI6Bvcf9Xdwm6LmzP7AKvLLDTdNYb
SWW5xrQdMk7JJhDHZ6yJTYe0i5FhvLjUGpjfLMKd/NSBnzkvToVXuhhFuVr/
P46uOx7r74tbKZSVkZkRyiqrjPJJZmWGsltmViEjiShKNtkq2eOrzDKvLXuP
kGzPY2ugjH7n8/urV2/nOffcs8/zfO79eKopztbc3jUhWYQ8QM/X2I2fk1RQ
sMyvA/rP5+Pdl/A8IH59bBH8ql7wnGop+NHPkBs+48An4tZ1EbwOcmidDo+B
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
x4UF7sA+x8Zv2ylCnnY3z9B94TeHSQcp5cyBXXm261I+T9WgVx9P85/yn8N0
mJ3jpT3/IKmT9WltkL8fJEv7JZXOY52lR5XToa7ozwa994K8OvSD5di5xHls
cmb7Hf59h/mMbJGXaScy0nmGvibMY4/9bEVUQf92xqHDvFBXnzw4OPEW+MQt
itUaw+crdj5dGQJ+BX2D2elA78L75T4F0I2EP231hs9hTgeuCwJ/UwnTDkPg
q7T5Tose4tfGIz/ursk8NqjO/bUGPu8R22HWBPk/QtP9ewHQ94l+HREv/B9H
1x1P9ffGQ8sI2TsjoyiKpOUgO7JK2ZEK3+xZUbJHFMmOFKUhWcnqICM7I2SP
yzUuKmSW3/P5/XVf932f+5znPOeZn3FOF+K95vFMiNiPJ0UtwRTo/8qY26cB
3WeZjnd/4X9TvuYBBcS5ussHZpYhXsg+dz5nC/8z4W5M2FZHwZVhD9aI64bh
rnf7aonzcTIlixWE5rCEp5l7Gshfm0Ya/g38treaGJ4CXP7eiboG+E7KPutc
Br9nq3Z9bro9h3svXsx/APOqfxnLlw2fTFI1Q2f6Z3Gor0QDN9Gfb+stUYa4
7iHOu/McJwW7Gskf3QK730Xp2ckJcX3hDtt5PViXKyZU2RETg2jzfdNuN7Cf
lV5dcR9YR8tfJ9ndwZ8VWBSCaGDdVzhHnnEUzuJHlkb3K5qH0I+eCMkqqAPT
LSO4ArUomJpkPG8G495P1DR9BjjNrA33eDoFO/sK9mLIg8Jm59cOw7i8S3vl
rEE/ofrXFCPBnqt4T2Ve069Di1f96YhzhHvDreOMPPtQ3heRe6+J/dXT3iw5
faNg66Svy/3AxyAmvp3oi30OXDt4AfiM2VPJUzT60ZO2Yj0/sCt/vKHyzJaC
RT1evh4A/xJ/0vhWHOzcjY+fbQvmNRVZ8te0awBRWkTT+8AvVhecmP0AD0yJ
EE+DOHi2+ZjzhTdt6NLZnmF5wOnEPcgzUf3obfSJLQ1if+bvY960sbP4GI+Q
dA3QUys/3nQFPnvT2Cm6jeBfmsm3EmFciReGFb9gvUx218xG8IM8rjQLpwEX
cZHPWW1uRdaoVU4Z6Pn5vdVbgY6pUzeb2A+SdPM7lwSMe215QlAExpNbUvY+
E92PmKMkDpUD/pb++bS5WifizmFiXQT92Saw5+iA/3aqVBbVgJ38W5Y51AHr
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
+3Mq6BMzl5YA5JtLLhk7gY8JZN3ge4h8W876fEpRfJS2ibNv5mTccxf3sCoE
rjV4/IvGvFHKcIgRigT+2OF15O/SUsrq+nPwI/QoBfxMSK8opWJbgfq7yCub
h9LsDHvEGrQnPoEXyUk5P9IF3p3U830MdZ1o3dElBD6jyv7r0OaHRJfcfX+k
Qn5tkO8WqU8V9GgoSUAAftb7EjDBVj5CKgsFp//NryCbIOnP1YjXFll1pTuQ
v3emY3Lvhkq6/YWjyhZ+nnvsvv0KcMf89tEYxr2Fn/Mv6qFP7jyx3IHxHuii
oEEWF+CmKafrSpGHarGx2mGQf9q2/e8x+Oej3j2RIeT/txK3fZHPRknuTFAy
g5d6v4kRHoH914V2KS9yG6U6KUHxbYzna3fXhW9Evd+OTttkdW2UJpLGLnUg
Lva1XSJ6yIdlfys3J+qP0h6tg4qrlbqytLQ1L/fAnuttmoYKS0YpUXF/8BvF
rqwkgefPlmpU0mByvwTDD5sqNTh7QyKJe6mj7Qv4342tgeOH6ih9ZK0KygCP
vfnb/0w95uPUocq2yd2jFMKW3MaPc43I6YO+iVh38iGL3oz8KJ0rXXDBGHju
OtnjmuAnex417L1rMkpBQhLXpBnPqbz64dSFuWnenlNSA/3N89Mj+BCXeTfN
o8Lhz3H+ve9Xwm8j8vtKz4Fntre4zL1AXN5lr3Wtx7rpLwb3Me4XB4Z8cJhC
f36z4dSwEvLt2bUXn2IY54XPnsf2oI7O+7bYRsMPJ+rk/YWwbteBxA11puk0
zanwaS3ybYKNLYwF55HxkPfPmWBnr9vN/gnYL91asvMU5J/F/N4+jrgsWXO1
Shl52LIt82oK4zkU+R1P3iAfEiqzD4qiLmJjbVTykJ/cnypGv8L+vSe6ZHbH
j1K/pvucO+xJuH2qKxH4UImLxbK7o1Qt/Cb+J9bzf+iduAf9oWmEs94fcc89
0frIkXG/Pe7cm9XAnb0/6J1GfOVLd0TMQn+/lXatN/bVuPLbxHzkg5Kt5U+r
sEgql5Msz4d/0i8/F8zpHaUsHWsJxue0LT6LlrMAH9D2XSDTMEpH96+M2oA8
1O4Y2nwZ9m+6Kx1qWz5K/64EsuY+TSTua85VyvDPuOvZD43ZqLsW/1NGQxF0
0mK1RD7s+arNu1a8b5TKbVcqbFLoyjoaZ6L8DP731y7RiRoapQKltj2Mexoy
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
SxTYizrl8WY5bBT08b1qthYNPSRy4+6Ys9XdxF2dyUWI+g7JfOdc+8VeoqOz
6+0C9ENT1SlooBsmLGefr6fyghnHrfW+oG9c1D7rCr3piCckKQJ/oyUdEaQH
PT971fsV9Kv3qhzfNdRL0t4oaTNg3y+06Q2TuUbIZreDl7yN+8iWXY0V1Lne
A20HOUPph4nu5dVF3NF95Nj9rAxL6r0G/fR+nYBhYng/vLkY/jy89eQ+P41u
Uifx/Fsr6Fl5f+hQ57S0bnuRy+WO+Aho4CiC/Ou6MpMDgadbPryxCfrk6qHn
fwD/3CWor3MV9WX7xbyI40bIY/4KlzPAx+Z4UM5n0B+3f3h3G/TD3LnMG4f8
75t2JGdat5skleyvvQg7LsUpVXphXzEzwsIZkIfFkeO2TXM7uXAwo+MG9kXX
VsLCC3zRaqEjEPrPWKt7Jgf5MEaljS4ZdhH+5uNLnXdGn/Kf5z/5MSL2yiyj
EH551f60HBNw60nTgyLoB0bPFfx9Qp3jzq/moY756JYUwwl52L28aDamjTrP
ct7gTzzwusTCeAbk7ZTeQQlv4BYt70vo2JrJzcxnvkLUuRM/NV3bEe9t9TcD
vmMu5n8o5RcL3GNN0B4a9DAtu3zVAXPZ9+GVf2fVUHdiW+2+Io62vlg9Wg5c
RZpVdzfqzu/tD9K4YcfSjZeMozGXjbv/GJkFHx8rB79k7PcEnZfzTeA21cFX
detHCX9JTJAKcK/iTU5qkDN/+2G1hQuj5FM5n1Qm1lUcYmz5Bfx8u2KaFfoc
2ZGCE0zAD3hF/LqE+foTh/sde/A/lCzfVYw8/6bYj96KOjf95LtNlS1DRKHM
/wdl95/GWkH7oL++xyeCXAeHyIIqn0Lpf33kxq5m313Yb7V5acMe+DnNqq1S
Ff3GiV6L3Ajsa06UsS4BdU3ssfWxFvBRWrf+d9iHb6RGPevNd9DPnui9Sw97
xTony7nC7jTTMLphrNuo/Xy8NKGXML/P68sEzhtdXa02Mkj6pT9HHcZ+S1wc
rAaBH6fZ+gxxDpKVTBM/6YCfdVqZYPOqlzBsuFanAHpydaOLHvCt7ZbvLlHv
nT51ua7MMESarpf9zYQ8jTfXDK/DvvcybDl+Fvgx5rOG7aBfk3g7kDrPfqF0
3wEt9DmR5s7nTwLPYnp3nPtlC5lq2sMXAPlZLyRs5uUZICV3HUcq4M/6I0pR
G1YMk5w0AR7tN/1k98anHTkSbaR4Z8xutr/DxO36hzgL6h5G5ngnGeht7G95
mx/jMLGWznrVSt1zyhK1+Az+bP/Ie0H14jCR4BujSwA9k55bqLtKG+G8XDwh
hTiqSefryz8wQPw1/Et2wb5GN60VKxCPp1IMzRNBbz77MkkReMFbyVvrIoZJ
y1TKgO7bfuJWyXwtPKWVsOfmTV5AHLHdWVneADzKXZLuJH0L6ajY4GzoPkLu
LjsPhZ8eJC5xytJNEfWkTlSXLIA/+8ung/fBP7Bzq2o08A0BF9+N+YyQITZx
W+q70vuPe3kCKhrJcpVWVRPoj+12ZA+5NUiGf2mHZS43k01MocbxiGsX7t96
4nUD5GFatYsX/PmUq9EpFY4RIn9CVT+KOm8j422NKuLUMb0ym5FnmGjuto3X
HR0kTioiyzVKTURb7HqBJPTwPdNlHw91b3vpI/vH2C89A7dZB+zyKN3vgjht
kAi8MtpiG1lPdGOesmxHfrv3+9mqZpt+smHvVUVurLtwpa4ticrnTesOxy31
k6MXfrBVYV813E2nI4AfMn8+RN3jGdi84fI58MloX3FS33KUeDjJC1P3sX6a
Pf9I6ksDsc5U/aZJnTORlETXWj1ABKT3hRmBf3xgUtkZ6NlfQVNfAvSL+o2r
JbEvrWK5mz/pRsn4HYumNp9+YiQUGSEAf9iQ9DzADXr7t8/31+XPfeTwi7fv
D8GvVtBv+KMIPsqTVuOljwfIoeKDHj9Qp7LcGBLuQl+sJu89B8C/YcVC3RRw
F6HTZ7RShkiaD8cdRch/7O++V8boh4/4HvsyCHqpyisJx3/0kaSosK2s8P84
nQuaHLBfT1Rq2i3wkbuznskO8eWppL25mHWAxNTKHpMFn9eJDxz5v/QS8asG
1XtAn9R8Lp36TsbupiKt6Fo7WeIddhQ2HiK2j5s1vuPf/wk7XWUY7iCiXp2J
7Vg36ug4y1bwuSDHp1Ph30GKl8sMqXMpnD6zVYuDvu6N3Fs9yO+8QUA+IWWQ
nPfbJ3SHuu8y2NpHBP2CzS2lD9+HBkmacPs6A9DrdUXNdiBfdWQ7RzN0DRDl
b5+Td//pJxpN5jUvEO9CZhK8p0H35YD61TtsA4T/dcMra+zrZG9J2cecfvJD
wO7RevihixxPETWPhND92GP1u59sPxR8Zwx/d9kqupMT+/33+pQndZ+lFEcd
5z783bBr37mVkCck069zLfzy8PuXaa8+9hER8cDCGPBhb1qxng74+K7VqRmQ
X4+p3G8cuPazdb9Z1w6SodkjPy5T94UVu591+N1N3hkk34uGHllu1jfVAv97
qzxwLeySvlHXx/t7H2GbCQlWax4gGUY9fIHwk9/MW1MUobe1JTnaV+7DzmzH
7frgt9Y77IUNgW9+Mvi9HfnsxWvut8Pwt9EQ1XwO4GbC4e5iGv0k8cDawxtQ
991+3675B5yTVrGktq6f2KiKOmpiXghT6DF9ajpGVN7m7P0PfnJhPM64DP38
2YTfQS3ATxuLyLsoDxML1+IC6v4DLTqpREvwOdT3Jvk48p+g+sKzPOAjDDVR
CceHySPNnBct+Pdt2/fvc6ypIXttmVfT4f/9Btv/GVD3gN8ILVJB/Pr42bda
hAwR2qzLEyX4/5aXPP0cJu+JpMf+GgGzMVLcNrvjJvpQ3k1ZbZNVtYTe/uXK
SNiD6fxPoy1Wo+Tumo3HdiNOp64/78mCvc57m25SPDBKjpCZZ3SYc/MLdWy1
HZCnIvVStNC3Zr/dZ5cAvbntPZJPFvvJb8+z/WSIRpyv33YQR/9/8eielnz4
y4EAeqV9YTSi7Lv7oDLm8TVrKk7thn0YE3lK/6B+hu3/0Ez9LnkrZ79dv3U/
KbKs0fkEXGDNe8k7oE9cChl6S99P3j6y0glEH+Gc+mDnfdDLZ9UrHaPOIVlf
r5CjMEq02XK68oEzDntVUecoWHFeVL8GORNqvmg821BFUiVqJr7BT9hq//tn
LIu50412uALy95EuQepej6Fvbu3BmjQSoP9vUHp7PTHM4q3oBW5fadpnXTdM
NrXqPf2L+Ugi33RomPKH64lnh5AX14uYjudiTjlBDFsWgd9RW6othR0l5U8a
LoP+d8XVWxG1w+T5PP+jNuD3w03nP4C+0SapZCP+/nTAq8Yy5L+frTpy+dDb
woMXLKQTeWpVwa2cxUGy81Tpc0HUUy394UY22NtbVnTFEP77nc/1/A7g9y+H
NA8vDBLlMNf+zcAFmkUfL7m0kV1fSvWPUXmjRLDlYOgQuXHj0oAS/ERn5m3/
Y+An6b3vjCPfaCi+pmUh/zSVnFRggX6ePTMqXg05VTKflrggXrp9kiScmgZI
sr/Bfjfw/7jK/98s6mzhTZfQbs1Bsmn6bC11Ptb+Pb/Hb6DOvnoenNUAPp/N
N6aPUOeafFGd7Kb6SYWr/KsQV7sk/n6i7mfkj6wW/ox6pPzmwJIb5NmzhXmh
CviDvsNV1Hvcgwfe9KtzD5A7Z3xOSgFfse93RxfsxTv85K+36xCpfHQ60wr8
ldnpNKj3KGij+XKFNweJnkvsqWTU38s8AbNLlJxrVpnkg/+tocj6r+gjhNTv
r/RDX+F59t+fO/B/zx/73pxeM0xufwqJpc7ja2bYxh9G6SFJrGy1/jBZI/9B
xwl8Ngls0FgFfzv3TbGoFn2BURctQBT6fC/Dd6wO9O8EmQs8UWeWP61SWAe8
J18mrGc/7BhppbqVe4S8VpXhskH/kL2RLdEVfJwKdZ5Jg/709z0b5yDPAduF
i/SoZ7d8ry78Bn5NIs10JfTA78uj4FvaRzZrpecso58Kr7hF44bdv5zU415B
vd+p1vXeSG6EXE6zTNODnKP5omdU4bfnOZQqOD3Ap2z83TbqPOiNOUqzWPd4
6bOf1PeavY3zubqQc0GookyhBv1ZrT3rYeCOi+/u9se1kEMeOhxW1L010Uk1
0/BTlofPdK4hP5wxvtmuDT/YNuJSvA71dja/4aUVdT/DduVVZxB3+nPBr5rQ
d8Rx2R9ThN1/P373pXR4kBg3dPgUU+f2iebeL4QdOTJ2rfkA/7nyXlY2DDin
tLr0LfQ/X+6+3lwMfXImxPAl0Y+SlMIHYdTcwfWhtusM7PXLvzPwEuSc+Ox+
mPq+ZpknROQP8sZDrVIhFuhZo2N/lArkSThpFDtfNUDKOISEU31HkGfEflDv
r34nApUx4L+a4Ud0dvYY8T44KKwZHks89m/wNIQ+589yRhyIHSM8GQe8UyOy
iHLZx9e3qL55/leWlBl1nqwS51bk+a8Hgsv01/YTpVuBv52A65xgMHuEPP/e
M/GlIOrO4IY1f8Y8xsiaWu/YE9R7y+Ev1xyCPkWGw1NKQa+tx9T7EbhT8AGh
c7Dvz7CIeF7I/1vHsOkQ5jXXa6lnOqnnhT1F4RqTQ+RlfeGC8/IQufx5ZlGh
ppYcXz7y5jXqV3TnlRv96At1rV8//gv7NO9KW8uFuEg3tZVJGx8iMTLr9h0B
/d47173vII5815/TYkT8XOxg6v8J+l+Te3Y6/NdPWrNXxe9EfUr9Xl+9zbP6
E0Pti6Q81DWmmaOHqHNrJwc1X1LfoW8J6j1XCz+aaHsR4TFDIysnDDYneFR/
WsfYVroJ+Lt7e2tYftBIktvvNcKRscToSWNgOfb7Um4SzWchUX/yRdgb+5qw
FrUSgjxZ2bP01PludvFmhvZ1NZjD+6tWwb5Wl54+WYf+cEx93cII7L7715AP
fcMokbjw+tZh2Fct46YVda/TmtLTcYl6o6SigfQww5/lX6wVp/x2u6jsCxbw
P7by+aYE9EvhZlw3lCAfy3TX0prAYVIa9bb/IOr4syP/janDvu1nty/ngn7E
6WLaEObxmEYbl0vq/cR349kJH+DbF8dkLmKu194ruHkO/P+VBjStTx0iZUmv
OOvQd+1d1WPKCv7GX1PPuLQOEb2jeRry6K/unbtx+i/q4NMPW2+WIW5C2XT0
x2q6iRPztxfm2f1EXDvdNgb43N0T5aroM1/tFJh3Bh8TH8bow8D54oM3DoC/
4Pv9nfP+A8SbM9OLusfTSbKubm6og4wLiMbsQNyFzfGMmKcir1/yMNUC/c+s
A2PX4Ofvk9LFytHfeSkfUaH6vb9Xtu18Bjzn5ahxKuLS5I5q8Sb0Y61CVtk5
WFf/n9dcPfqsksHJVwPou5p58tSngAufX9gRwTVIzp63YGimzokylR+4Dz3w
hMs3vYE8bvxn/vmDvnp+fGX/hz5yJfJfxm/k3f/KYldfwlz5NFlvWB70Gxsr
VOZRB2rezPiqgN7b3e91KPAe+XN+VZgvrlVfZ/FDHaffUyl0An2AE8+5O9Er
EPfHXgk0ox8wTWgw2wr87MAr3t3oD99+OBFYCvqzfS+v9HLRiBctQOw+5M0f
5lWQBv3OK7o5xVWj5M0+dvpDjgPkRkBamiz6mczNwRme8LM6pRtH6dDHzubX
bHBHnJQEcn89NzFCnMnTWgK9Nt9Sy6pB/3Bi4ljLK+q+ONZjzMvAj19/EE7D
ugtvTKZ+HRkln/iibdZDHn9104usUuWkRSKERQtyCn7+pN8N/Ijqkacr6csI
zZiJqfkyjWzTv/oraWyIfDIxuMoHea6XWIQywc/YNzIZ9uC/TqPDErzAt4zs
0GmkDRHvgT1/3mBfhvnssXvRV0yFKp66RZ3H9niLCK26nwhaO32NX/5MjtbP
RnxTpxGGzXymBVQ+1o5Zy4R+42iPCdPGh6Nka9JRvVPo57ecczEpDy8ierLX
bZRAHzYbftAW9AXpAmfkwD9lOPTq0KdRovqsXvgV/OfM5fftI+hP/FplW1ZD
DzIZpRn3igfJZ8bg9aehZ/GDcuEGqAfGVefM+aj7nUX7526YVhLWFRY25zVG
COOWBx1O8JMjT/m0h3lqiOxre3HqXnD33KXrHvCTa3b1/QXoS9VGGO/9nBsm
X1orrjTvg1+FHlzFAfkHqlqd32DdsLj+oBXbEV/mFh+o79dEfD9kMmHd1U1S
99nBfz29k1UK9FD5oENqRfgIeWB772FA1hA5Fe4wvTeyiGwP9d/dR82VKgPF
QXZDJH9I4rQb6MNse/UtwCeXzYDNDXN3z2pLq2Hox0N3NqlOcpQIndfL6QL/
Xc4z2zqgHzpGDRt21OMV/2b3/IB9n7TxC+6nvjMaz0v/TGjEcV1r+nPMm1mB
J62puWDInT+ROt8o+Q7/qV3ww7ftavtuor48lFxBRNF3Hs7j8swHH9HJBVNp
1KPkdWHMg9M0cj5tYX0AcGHexqCLoPc3XvNtczeNSHErTluqY3508Mp9jT7/
LGfz8DL87YX7Hl1l6jnJd39VTdQXHvufOlljo4SvUMaJmptKloRCvFCn7ljo
vHvGRCMaoZZbq+LGiKWk9/fQqm6i5XJUPxZ18lqH4qKEOfJ2rJPHG+pccteC
rZODDaSvyHjmAPI5Q4v/1ieBPSQ9m39QnLrXjf61zH+eY+RHv1SLCfqQI2qe
YgfRp7Sr8Gcqg8+2W7ZLUuhn1iqEaX5JaSMPrul7bQP+RHj/wGbUu7r2tZfr
QD9Ei4sTvDFG8hp3Ob8I7yTrss8HCVPP4fgEkqj7fJMjHt+j3qtMPX9gjzpb
C8nK+JoZCT4mNr47Nr3uJDcnQux60O/ct9wjW0/Ng2H7dF5B/963zJy/ID+Y
XdJVnB0cIgfExv/KU9+hVGd0XYbda5JLOal5lCatO+EB/dxn+ZV0iW+UOPFu
UrZBPT1QH7B0CniN/U2jJr4REnJr8O8l6nnAD37BQOP35K2aAUMl3SjJjHR9
swT65H5dl7LTOUQ8YIm9Dvxn+CT/HEZcCweb3F4Pez2782j/7X/DxEq8PeMY
8rbJi4avs+Cz+L11TxH8ja2W0fHyV8zBFlYb/2LdxaaJ+Ur4/xUNC9ZWyMl9
sEuGhn0ZGevuHpIYJcbOd6Neg/8JWofrIvW+t2905jvJERKcbEX0Qd9SyFOV
F/WCFGleolHnighfeFDogvx/9Xu8zhfQy4sGJE8AP09TPVWDuNkQ5bGN+k7z
nvPaPinsU4y7SFBQc4TQrRradg5xfWpy2OAI+H6LVbO4hTzqZqPb+Bv0r4vE
hKb2DhL2vQ8YBhAfe1cm/vyMeJkpfrQ8Cz6Gbd6sIVjHm8FUowrxFa1uvzEC
fXtFqeT5N+h/OIOzooUQpwNxT5mzMjGHXw46Jot4FVddo2kH/s+tg17n2A6R
32E+kqyTI6Rx82CTJvL2ahvVb9yw9zbhgbRP1PPCktXr4pFPympuX03APnlW
xaiJgU+UUVC5BFUXzEQqXhQNkmc7daVqgZ/ysVGpRl46m04XEwk5Od01PlO/
w6wVW3K/jjzjEawwIyAwRIRKtq2XwLwgyh5PLGCXpcttp41Bd/9Cj7XG8jBh
7L4RRw/72t1Q1LwCP3gwlxYvA/4VWo69hqD/4Xn/EnU+aKBNw8V+4EEsotYf
d+cQTSkvJV3quUSre7a/1Agp5GT68At2qekcoy8HvmH9mF0h1nEyEc8uCI0l
z+bHObu4h8mTf0o2yfwjZLd5c4Ei+HsmRl+hzhk9voUrRQhz93NFUbZl6DmB
3X66HH2Uh7V6kucVGhGqLRsqR17V6FM/+At1JemBvsC60zTy88aNLeuh/0uf
edq8tg6QacOLV3yRV+4N6HtbQP8Tgy94/lX1kwvzxr7jO8aIe3ao9hrUNZ2j
PnL26KM2z95ZvQL5rMRPk7tNspyYRAr38oN/tXzU+WrUny+Cvo+7wSe4Xzq7
CX0IKZgq+qk3Rs7seaJzA+tyBHSeDwEfdobGyjgyStJ+hD1mh/8oWOR4PgS9
1xOVg4nLI+R5zE7Lnci3z1viP1L9EIfqjRFJ6DM2miF7L+I69otbGiviPNBG
W9OTm0Y0a5uT70GfucWtstRzN9Y9M7Ivsa9LZ+if7qD0LGowl4H+Skv/kaEw
/yip1R26aAV92lVMhPLDHyJ04h9Q50mr3AjeX484FT4ixKyfMkgMkr6aB3yH
fiy/LVHfVybfajagnm+q/BCO/oQ8XVaW9V4YeVsk2ME7FngQm1rHhbU08kfO
/vZV8NdaWiFgC3mO/pW9Rt2r/qo3KUYV9G7Hd83LOwyQKCHJd+nIB7uTI3jr
qe8ythcMTEKep6e3u9xA3K0cOr7cvfEF2ZSku9IHOEevInsucNeQFC7quxu3
LRX3g4cGyfeoS5FBwAXzs+R6se6GIMYbjnWDpP322Mob46PkN4dfCBv0tq6h
hkMP8vj6nBdzKKSR2PrKb6PwZ3eP7rcrUIfUfHQEcyGnnJ7zNVPgib9OX3BV
GyBmavfqCzD3pXmH/SyFf25+9kObxjFCCKPFm270k7KJko+VsX/bTKJG/e4l
UKhyeh7y/tWILAtFP/nvkmHS6oReonDjjscfxPGqMCbtBuo5Y7DexcovveT4
XPHWj7Cz3cGVV2TRXy7llHUdBB+7VMsS6pzCdrn9Gzun+8hBXlkx6hwr9jiT
cSH05yX/Lmk5gc/DtoI+TvT70mPWgzng43+MtbgNeOG+S/yxld3kw5qLKpeA
P2o9NnsJftDAuNGAOs8ng9mykiB/bB+TvbEF8ss4RUlcq+sm+15crftG0Qfs
vVSe1U8+WormHqHu/W1yveWD/j+i8s+G89S5rH4nnnujfnZ9WPqC3Ek6D9yS
+Q587c3iSuqeC6HWXNNe9FemNqUL89UDZPhP7QFZ9OMrfvO9uYV93blcMf4X
uP/bkfGmP92Ea447lhP96ntfC7XPv/qJ5YBOAnV/3Oqv5V2PUEfe0Dbu/wL6
4tTLvxJQJ783WcUXQs6FkKEQHyre1h4lp0Y6SIz1DSmFP/2kqHuS/zXwS4F+
7GfBx+9fZGgE7JxdL56tCb8x2vnNIwj7ihfLC3GCPJJ72W8bdg6Qrw8y78pR
v0N/C9YvAb11su9aaybEwwcW1ljwkd1fz64GnOFUnhIVt2uffH7TAjvuHjsU
EoE65awvMawLOykvsRfHa3aTrR3zDbXAP3085V6o1k+MJAbXiEd3ktq2MU7m
a0Mkx2Bvhgv2pTLvZbGA/uLBPfN+CdCv0jXPfA07NrRdz5h43EGu+TRPTAH/
rXe78C3XAPlUz/Rq2qydxK+z89oGOc4kbs1oRB4ddH75KrS2kRgLGx1ZOID9
v9E8cwz4pm+ywXboH/TzLHbchb2tbmxTu426LrdBP9wSc+chhy+K+6g+nP9I
+bDHCGEvHuqlnqP41SXnbvXtJz813U3n4Pe7DjF0O1H3MvLdfRID+lNr6Ofj
gT/sPnfI400raseHGH/gBwr4rP3R7/6On/rNBPr18Wc7HGFfThc2kUr2EcIh
8cT1PeRsvWu5e4TqZ7wqZD3Dh4lN/QtHD+oeook/x34u9RPOS9fX7EB+0iCq
Gj/Qj0krnl45DPrqFXs+nsO+9Db3LpR8aSRK6XRbWGGXtbLc7N+QV2Im/HaY
VDaQir2yNnXUvNN6xMHOZ4Tw163jpe7XjI+xYQn63Efmu8vF34AP1w9pzhjo
00jrwI9Y0D/tyDZYXj1MGnMCbntD/s9fC12YwN/h6cix93rDJEzrrPQ/9H2V
o5Gbrtb2kSO/Cq9egpyKA/Tq1Pv3R1LalFtOD5Il5Zmg7cgHM86XmLTA/+E6
3wI26veF+st7jgJ3FtPTNYDfbt/IXb8F6/5ovFgTaDREvC4mKHKAv+P5fsNk
+Pl7Jc+0E5qDRM2Tf+g4+NwJqqLTBv0ztysRa5GvpR0Pn8lDXPy5YLeL17af
2GyvHNxLnZceYWqsS51Leed5RgP6//K5r3VcqKNnpNI+TMK+45y8le7NA0RD
fYbrLfCWiJipHuy3sNuoNxrrXjqhWNsbPES49fM/ulPnAxqdGGXDHBTmWnhc
ZwFzg59/nsX+NnLlT0S2TegQufrsd/cK7Ks6OLyWOi/D3OxV1Dbkh5r5v4Uh
1Pm6PBy/qHNQ1AJfG1J9Y5Rnv+Nf5KF9jnGpE8eaiEhU2cZIrLvl2nBjOugf
HvEWWAKuJvjrP2EqjmJrvrqsHCK1J/ffWkmdy6kW8VQR9CFfP85mg0/973/S
x1zbSGn74orhxUGSb+7/nxfkWdC+dNkccsonhWfuAJ+kxMGCI9TzTenGOymn
2sjJB6sZqeexpjGSN4cbB4h1QclcPvQwKSP0pxN6zjdbJZoIebQPz9E3gP6C
eIpdPPqXlo2CeyTR53FVMC02QZ8sWhvJV2Xsc/iV9m/Qhybk/Qg0qyTGOzpl
I8H/tUumy57jw6T0sP2pcODSitv2CPKhHjr1fE5ZHiLH4tP055EHaj8/eFJV
h/0zKT1wwDodCyPZd6n7NswHxOyDh8lcEY39Gug7Aj8eOY5+xyrB1GP7ymFy
VDF9u1jtMJk0dXP3Aj1PHe+2zfj7Uu8y+4bAYcK8rmhKg3pO7zK0ZwxzXLyM
pRl1Xu2MgPMVLeo9KhrjNgX4ebSvsU8p5Hfi8kva9aSDZJgUraKeA+w9PlDx
LnmIyI07s1Hf89jb16+4CtxVLeErdT75A/Vd0XWoO9P5v4I1kb+q9xi2mgM3
Wl1ofAP5tiIrw7jgYx85tiFs9DzwHYGOf6n30hxUSuO1fvSRjC5nyeuwy52P
jvk1yKN/lAsj3DDX14UcOLmJup9AbU6OH/iWxyeWqOfNqes2y//HOkB+Vh3J
3UGdO8CyhUdVC3lAKaw5GfrJrGy8cxBx0XHb7ys39r8kcscpC3T89AXmzsjD
Fe5Ximr1RkmIW01IF+rXVW12sX3UOS8yX24Yoa/46rDHkDp/u+zxRBNDPPBX
l2SygWuKX+DLqu4j0SI5KrdAv4E+0EVYf5jcSenaYgU5A2bovuUjflWt3SoP
of83OLUQpoR1LaTN/ti1tBPhk3X6m4EnTiYf/1XSR86yvg2VQ1yHsPP0u0AP
41UBBtR3O9fOCq8To84/SugSvic3QuSf+jvlQJ4U3oNBgeDP4fpo77gv5pp3
z25zQm/FPnYs/shvV8PZ076ib+Sbevf7IHXPS2xNWRDy5I4Ct30MWJcp5Erj
fuQTmf+++FDnXKTtWCG2InKYVH94/VeBOgeSmTtYF/tS69/a4oK5gKMrR58B
+OW4oWdXERfbLY30paDPDe+JwlfY0f+ffe/NqHryrPWo59Ztw2RrurCIPPzK
7LM0gwnqi+NWmRfiDaPkkdG8O3XPq81813d1xO9TJmfnJ9DnMxbeG+bWqDMm
JY+puD4mYGx9ygr1KWXDFHXPi6z0lJUE+HOx97bKUvfznL25/TL07LPjfgcH
8vzdwbhTfsCta8o4Di32k3tcYexp2JfwG8eMMFkaUTmVF/sf1v3SrxhfDrxX
Mrl2Dfw2S72vLhp87FXtu5lXIG8e/kxjoJ6/GTaaGtBT5yz/fKiG9VcHXhH5
gn8P9llSiKXub9g410mduzhUb/3PBX396eNO16yoc8sdPx2O+95H1CyUfdqp
90jec2tzwT+dh/gCavF3rBayDm3AHfymi9nx/8fvfLtch38X3s38g5ozmh7v
LKWh30uo+G3NQ/2eHnbzVG7+GGEtYaqm7q8JXrBuVvao/mTwjHdiOXuMiJqn
hVHnRLvduOlEFx1LomOMXCzMxkihOqPTC2b0ta2PQs1B31T1954H8Eyz+fOD
TP3EfdTNsCwylkz8WRrriBsjMYnDnn/D+4ggq4JiK/r0XJWv3/9/nhn9wzfJ
kMepXyI+PzKLpElnhiejbr6Pq9jRAP/8T8azcZI6d/LIgKSk5xjheDu57SPk
DM1LP1OJOSavUr53g/kYudSjdeUb/Hzll8/dCqBnlB55QOGxxdJD1O/a+VUe
t7edKyRr87879sCf5ButRT0wB4q/ryi9Bf8Jya7ZN4x6ynkmhpt6HyL771r5
X9R5Llw38+xA78uU+KsD/shnoBLRGlFPLm3/ojIEO0beljSlXR8lsSFjzC7w
nx7tMvo5zNFr5iKVqfNCT/AupxDJNuLgYB3G14i+3iLJ8waVd2x4yk+iXtjr
jcidRD/UyyP2xRT23n6B6eixFS1kZu4Ooxzi6PDpL3STsGNWn9vDmNRW8rvR
Z+AK4i6Vn++F1aN+Mpik4iuKeGHlH1x8C1yM65P36f0DZGZUQ1CKqo+czqLH
sR+XKrnecvjPemXOyz7wfyHeigca4L/G5NNtm6oBcjul+5gJcK82e69O+lHi
k2Bxthzy12yUseal+rdJj9wB1PfKE6OrLdD/xNaZ+9zC3Ln4UlpESmKQrOaN
r1ZFP3ArVz2oA3PtZZ7n9kdQx400XA9k1o8Q1g2CleaoF5qlTI2OqKe8N5J9
QsJGyLUImSHq/Medo8HG2rcHyBdXR4VN4N83KKdYUVNLmnQ3dHnCT6PDpks8
gO/Je1sUxldFDG2PlXhD//LK3987c9FI3qNmgULqe59l20cX0P98rL/6n/eR
UaJ0c9yiE/jwFlGvFuj3vZsR0akaJfvm2v0MamtJ87mC2Gm7ITJ06GPlPPrM
6M7GahnIw9Af9Z/e9iHydMtcbShwN4Ntu8xMK8l2W84JrTdDRJq1rUsN+JR9
dhQr9BB0iMF7GfPI6aCxtEjImcKfKNAO+vgflhYG8J+LTOf9ZjVHSKCmg1mO
SSX5p1V6Mx11p8adWWBYjUYKfLiXroCPltUeQ5Ua5J0gIW4ndRr5+yg43Ya6
9+vJWzEO7HexsOwydyiN+InIKlSBXrST3VwK++rclWzBZkAje4OlW81Rf9uO
lAxQzyf+lGb1qIPPFvoesRnlclItbVPeBH3+bAzKdP80SraVfOCrp87TrpH/
zA29RUWZhyZ6jhLjCQvFWqxr3X1RQxj9XkyY/XrqPi2eDVOpj6hzP403HfyF
fOVw0UExhTofJ+1B1Iq6WlKhzvx6A/ygT5qllnpPiEPUxzI4Kpa0n2j84ULl
1VovlSbk7dw/tetELseQF/S/lv47MEoypQ4bbsfclKvWqu0A+qbdczs9qHNz
e3YPpYOe5eeXn2nID9ZWfQ4/pEaIcYJMOfUeT83G7PQC0FsKeWxeLzBCRH4W
2vCjr/itsmn8EeitBlddTVseJvXNb89NAw+zdHNKQn6QZdR8V4F4aeZ+vtYB
OPcpIXeOmzmopy+vBAIXNc4VTRhAX/pIyaQVeYZ7Vd6Pacg/+yvMcAXm/y0s
Gbp8qJsT19j3xKBu+m9Wrz8FPl/c95G3yIcHlHdtp96j2PLnd8z5yUHC/O+T
8lfgMqt9z9QXD5JGpcXVY/Cfi9Ovi6jvwEcEb8S3QF+2wdVydzDXhFw6wP4V
/j8/ov9RCPFyf19tFXXvi7v+6IHIvTXk4aYP3Odgr2SzpaWB8RHyxEF3Twz0
b68n0xNzeoDcPSZX4gu/KvfYN3kE8uulPk2hniPofohhXCykEeNtg/9YgFcx
1hulwR/E6gqztcdGiaf6HZut0M86YW5lfcQj0VF/8QZ8enmzN+pBnweDT4gv
wA+35J+PKuiikRkSd/Mj9MAopveaZ3qQnJEUNu2C/+/4LuHK7ln9SfqfxhVz
yC+RnXOUAJdb1cpDPx5D6DgYxenRr24u1FtJLztCkkfujVL6qU/VTTmKvJHy
s/HEQ4lRUvLBRYb63m23jEbsZvSflwJ2c52RHCErmu7N1wBnrCx2sQN/tuir
Jou8o+RQwccP3yDngf/0l5rhH8NBmSGWfCOkq9b5cARwNjOTC6PwpxcXphr9
4adnkt/rx4LP6IGLK8u/DhLrMb2TFsBP/mtypM7ZyTH0/7D2yQA58WvANhh+
ruQq3iQO+tywV4Ly0L8ag1WsLfIP15iFvTtwERlZjQrq/ocbRy4rMdHIYf3i
J/1Yd3Ufp4N72AA58qo/Twh8Dm4r35OD/W5hOFf8B3k58hX99RcCNGKTMPmk
1736k0r16cDk1EHSFS2x/zL0lnMzOPUN7HX/rdwP6r6OOHuHj7+kR4nA6aZc
F/Dhm689qDc0RDwenin6DT/RfCO49TvoB9dpiYlAz1Virtt3og4YprlvEoWf
fy+XfxoL3DttyWHDv2HiJmMVRZ2vHTT72bKEet7stZBwDfP7K02/OTXweUoX
O2obRiO5lpHaqqhHs1dTdlgjb3yv9WGtuYJ8tPeJnAP8q+97tOjVFWWEOXJ4
73ENGjnQQjfZxzJAEpTisqnno2bFFhqNwFe4Z5x0reonLW/lNRiQZ/xTXWdi
9ceI44pVE+yo79Pu54XaI4rI3Zmeb3HCY2SW93DMHPqHgpsvxfmR397ZyoUv
DtFItii9wkHQT+0MuDWMvLrnE7/aSU0aaR4ZlIij6mYei9Ld/eUk5tsr7YPA
F95U3jZAH1jRtuU6PfLYT6ZqszfV8IOQnwYsoN8bt0GhCXFXS+iqvkHOpjDz
2mzwv948ufPqrnoiz2z9fA747taJxL3o306YMstT90eyNXSaN3PTyNRQSHQx
+JirbRpUAH+9tXQXFhVGieTSdf4I6jlSs0iSO/D+o/vfpiE/iC3Q6i4AlxKh
MVhtqiJsibVH78H/JrYdmQy5OUB+ZaZ/04M8q1IOu+hNjhCbmwqrIkH/XWtw
mLrfbu30WLkd6orWFafaYtjtyHFbRxHzSsKysZ7Ggfrulz/LyA38TM3vhTze
GrJS1lB6M9a9JR7/5EjnABGpl7JzR52auVZh4oC8p/jR0YK3aJDoCl/V2o19
Kfh+dlozP0wWK41vCSFuuHmzGGMgj5HgSSdh0NOfjRBP5B8ivfTr3iuATyHj
XabfZJQIZjtLrIecTYl7Ex/D7hbnK0o5vEbJxcjKLl3gmmEjyq6w+we16Ce2
kFPzuVMSq8Aw0RwPefIBeSP3e8cLQfBX2llobos+zdajfI03+sn7+60MooEX
fbd6MrAafvv3rmwy9R0945Xeyu3DRCL+cAb1u5FZpsOaevB5GBvsuQPzQk3z
IQF3xIWpTOaDEPA5M8WeEYa5g0dPTH8ReJKGZ0ce+Fzku7nbHH5+4vyngUTq
+47by1EC0AP/7+15NNglI9Y2lg/zeP3kb4Hj2JfxD9FvZdAnZ5HYObu9g+RV
z+NT4dhXwyGlv4PfaaSS2ZnuDOLis1fSwgfkB1/Oud+bemjkP/VfeSLA2xhz
t+pT3//TOxkvwK8sWn/cl/EfIC8rTiz2Qk7j91atB0/TiNuR9KIy+wHSZx+4
2QP0lzwaBbPW0shTrbtN1PPP1092foiC/Cv/9PkXj4+S6CGHX33Am8Zjh1MQ
v/ap+v8YwSf+mMqfVWoDJGBzUsIs4p1l28rM5lkaiQkh5+fR75k+FbJnRD5J
36iq8Bjy9Lb1rMwJGSCZY8rl+4HHTa8qKkb9eOblLOwN+SvN+nUdqPsLeV05
p9A3bnbxm6Gn/MRdcHID1r0YPVQrjb73es32zdT7aq/lhW2p881PZnnY9kGf
70xVw4aTB4moWPS0JegbjSV3UfdeFqQWsT7PHiJ7W0ZTVkLPWw4tV3QjvoSr
TO2pewRCn1Q9lYU+f25o3b9ekEa+fY6JF8J+xYNrL11H/lQVjT7MFzFC+o4+
Uf0AeYrnL+fKwi5r57blPYX/5J6NY5OzHSJSV+/StgGXv+ff7Cw7Sjp9x6PU
QJ/2cOyKFPZravn340X0IbvLYm2nqrvJIeabWp2Y94MNv2tdZMScXh5son+/
l9ho7c9fiflaq7xr30HjEbJxR0bmTuC7/K4co4vqJN8y6bb8wX5rdlUvJYPP
Y4+TjlHnO4k8Y4PFM/iPQtNJDnG5XhLnnbVvE/hIaHXdvYa4yJuU4Soe6CWj
quw7l8Fn+Bpbx56MYZKXLnKfuPaSGc3Qt1413UQvNkGXit8Q0Q8PN2PdglWX
LLd4dJHiUSVPbeT5H17D+TxGfSRK66DuMHWu9lqGQzvBR9Gjdvw45DHL/FFJ
fe91cfUmtStYd8jo3UVe0IXrcitLV/aQ7IJNPC7UvX8vgvzbsW5A38pDbBd7
iaMtr5Ih6N04nJ8tVfSQfyc27tSv6yZ1WoVyd0H/dNTwtr1eL9k4Ib7qHviL
dCx6mdmOEOsFs2NbILd5C/vWU1hnP71OzznwsUlcbV8M/R64MRNwabCXZHvJ
x56A/IYHFrqiQb9VoDrnE/YhN7Wu2hz7/V4gf7DpQRdhmInjo777FBQl10/A
LqkKD2cbTdpJ64hPL/V7AW/29NZzsOOwOB9rSkQnYbl55NM2rLsYHDW4E/a6
o9z8ugy4fCm7bSnon9xf2OYLu5w5VnW+D3z+ibhwlMI+dqPzMZOw475f6+Wu
63aSnkvOWu2QazvvQmgZ8l7vpDinNei/r1G24gH/LXXKrY3AnZ/8t+0P9EzY
IrjDTNuJZirL6mITGhlwONAoDHqfRyFzntg3Z41rZwfiLveTdAf1/qT14E+6
u1OdxOCOhO//f0+MGc/1K24naR03mD1Ar29fGl0BPoXxrzcbQ36RP+neJ8G/
oeXkpgDQF6bpLxgA/zG++CO9pJ0k/1dpPQC8+7A+44XJTlLuciguCvRuf57Q
FWVMkbnauBdWmM9p/TIdRzDPHrE7+LkwdIqEHB0SkDJ+T45/N7P1wvxb7Paa
5UDdFJEofJpNvb+30cnaaSL/K5mU2BGaD/xeaq3qAPV7ouDHqG0/6ghn6oNW
TjJFFM6z/CoLLyLB9FtP2KCOOG9t3l0G+oDsNNb7qPejTOmprQU1ZJyHj3cc
eIbs0IvGE4TktB1W/f993AeVcpnBx39onrUlNJY899+t/R3yCF5hUv4I+oEl
wR2Pw9CHib383rS9ntzgOyYeivqervirkTrfWyZGc8cV6K3+1ZedlbDv1WtP
uG3w/9tlq29P+XWTKM+ltV+BV1rd6/7k203WGqtbxSDuWtYvv+ReohGmiR+d
lD+UCc4ULlDfhWuEcsehn1OcLWbmh72ZDO5bHsRc/56L8zkP+o3ys5KSR+Ef
F94d7uLb20Z2GMZ6qAK/YLLLk/lLN4kR/22cg/nd+m+5VPrhMXJv1uN1H/zk
G/N/Rq8xd9vnfkhMNRsjOUYlhX2y3WTXx4MyVcCNn+5+w1lDI/S767pHwD9G
NT4/DfP+1z9tPqWoO6NzgaIckLu/4XaYI+T5GXzA4vH/71sVFODEeunC974f
RZw+/3HSQSVilKgtz8poAs94PfPRwa2XuHaaSoVAD7fPOSuqf/hGdl+7y7MC
OFc+U0Yb/J9YJqaPSbSRiiWF4xNb+8hXo6v346n+R/fFf/p0LYTB/9S7JcSR
/um8V1QfFaJ57xkd8Klzxp1vJXsJk09jDxP0kMzFnLNyTxuJ3J6wcBX6Ey11
vz0D/lx3VLkvgO9i8tFOZsgl9sCHNYWyS9fmAUvwdRdZ/cbp4zcS9juxgg56
2OO6/1U0+N+8+aT4/9931WRv/Qx5LrBbzt8AfZ6dRCh1D5fdCaFaI+z3nYTe
0X7q+4gHZ5/bQz+cebOmVF8ncbPBSxjymdH7q7NS9xTeP1d1A3L+rhQtdHWh
vrfwt6mJrCfJU+P3ioHfFSisykJ+nlK+0Ew9P0n4L0dzFHw4U656b6O+j066
U1TJ1kw68gTpS1Fn9wUqlBUgf1Y0RqSuAR+yf1Hx7FMa2XzkkSJ1juy+8ejG
v+BTnqjjczJtmgQZZtEJwZ97/Lf7a6AOjq69ZSvkNk0iH1el/ge8bsMzw8/o
h894+ut8LZwma2vpDg2YvCcW9bWWd9EnpDYYzlx/PU3ual3ZMIL4lXz8opwf
dbbPWT81+fk06ddv+nkS8fif3+3cWOr38/6rASwPp8kvz2db1RGPOZ+Y9TtB
P/M6jpMZeHKJd8pzxDWtSeOWF+SxGU1rCTKaJkMsOw9lg/5zu0DgFPAndkwO
5NQ0Cddr804Kx5zGOXUsDX1pfVtLsardNLnuIDU2jPVCrOz2ZWNe2PhS5u4f
WezX7UXFBuCHxcrZddEnf6haVau4dppwhPaJrMd+r0awN5Qhb6wbyFaIh/yK
wlzasWH/4+i647n8vjgNZKZEVlYJ2VvhSTJSX1RGVmRkhIyQzBRCStkrkZCS
HUmuvffe82PvzKL8zvP7q5d3x7nnnn08z3NvLoq4/vY9fp6rwAfigqrZVRRw
d3OYHfi0nUqZ0oE+IY9m+YLIwCrSGgh/bQz56qpiiIsh9Ev1sk8OnrStImbv
WBUn0E9MqulXOui71E+7kN/pXkU3xxkCugFPtO391QZ9BXXF0KJo3iqyNV3X
N4D1XvtYJVRDn2D25LTlTbDXq6JGPgbAX85MkXwCPrapAo/uzK8iw/UHx1KH
EhCLscN/tbCu9tlQVQPAX5/dWmjEv383LHd3nUxAXPIe0hqAB0xEX7Mkz0eJ
x358HQD+gbfYTfDzTYiub1Z4wb4swwzSmKHvilhJcnm3tIreSTOVmQB+X8FL
tQ/63pxLefsqkysovr8sCX/vgk+p454V6K3m18AxJrBjNMe4Z/NBDRpYs3ue
C/wJnQQ5MfArelV3BmfAfZ55zceC/AQWeeszeyto5MlrqxLgT03z56dMO8wd
nQM25FyrKDjarNUT/INPYlAmHuzbI59SbUIEdq/QMTQAv1I70nhBG5/LTlNy
6oDdX61JM92FfmtUQrJpHvwzLQ+lt4OfMK1seSuAvWmF7yeKJCSj7M8UCkdk
V9GX/DAj/H3RSHKzUyeB/oFEQ3LF/8/NISd5g8u/kl0SA+sPeB98X9FYRev7
Jh/OWTQiUeZtbVewV+1+n3QJ0I+ckf+uC36r57BCM4t/d3JQREkptYpqmiuu
WoG9FMK/vcPP10vIoQwye7OCNOJXz52An/9w3Hc9D/ttTH5scUZpBc0cTrpO
Br+fSsjzxv/+f/bdz+KfeivIq3813RDWNXb25LsOeub/OGIeRLmCrv91ILDj
54qYbdymgno6tKrpN+S0gqi1Pxl543FilOn3BXBuXl3XlvgVVNu25GkJfBLF
WZImYN9njW/6dENdW5H8boDfVye1s/Kr8GMjmhYS8osD/JJQKDebBszDsksb
M7DOpgMNOQ/Ux4kj9faEplZUJZrVSA7r+FL9arKFfd1WehQdDXX02zUKbvw+
DK2X+1vLIM/fD3mMQ7AfneSPjvi5tKW+h2b5Yb9CbrozA1BfiTQmme1BH0ur
dm8qYb8ZhfskRcB/i7GeaAjkHD4o9g6H/X4xtBCVwp+jr80ffAB73nZyuNAJ
ci4bfYy/WdqCiBZ+K1eBPIS+et4BwJ+osTLIpzYiCTeWbUfgf5j4V9I7wCVX
j6o5AF8bXak3Ppq1iHddc0UA9kXZSjTPBfIYM7UVmoF/mth/6x6AvmU8KJbc
CdZVusE49Rj8pNP/x91e4OM3fySHHPoAjk+BssyQB1D0VO0NwD9Iaa5xQr8i
w+IfER6Hv7doTeEC+KBj0Rn8XOvL9DfKlm0R0vFaEL5QvYJ009/TPoF1D8k/
e+gI8XJtVLl8HeiLiEvM1ZU7kBOjhxsPxJ0RjVxaL/RL3POc1MUxHWgsijbn
KeRjTLEqtAnoeayucYSttqHDY/ZPBWD+4hQk0uPbW0VWU1fsrKGf0fFbsGUB
vzVg/PVRY3sVsY+xpkVC/jzn6E5GB3Hhn2zucx/yg6d3x2HRvhyklv2ZnhT2
Je58Q9Uc8NEQytxAyJPdaspPeAZyUNelFgX8/LUiYd//+gBneCvhwwL6uacv
F+MCeU9650tBOKx7/uauB/4+7FRl04YowwrqFtHXPw/21XscdK8c9PGD5pW2
WcMyun+rJCAWfh5xczlmDvpeI+ONsgKcgWqCLQT049X6jUYa/Oul5fzi8JNl
xFmsMvgL8O6kl1P4c8C/HRl2/N+WUf2cUgn+/eCHY5xbKtAffpXc9+IBvF+T
7F0K6Kdy7KPdD6D/73ff4w9zQ2jhE6ZaBHPfvaFKFa45ArIRtn9wKAHmsLep
ir9g7lv3pNZZ+ExAadusDyMAv0fZcOUFzNFFXSy/f+LfZfsF+M8f6kWFhZGE
IOgv9hIDP3W0TKAPfwe+q4cNoR+2t6aH8icR9qTKPwZ//9BI6eVT4EMTmXs/
HfDGL7t1Lz5PIzMJK/s70FfZEDVuTmtMIt0uLTlXohlkG+kQTg1928fXREF7
QO+hjUnj9183j0aoZrXDHGBIoFvInUSneNVPiQO+EEOX1Ql4/0gsE/73e4Zz
EtRMMHeeNjBIToD+JSZd+TcD7HdJ8qLnxZEp6Of7dj4W9qFowUr5Tvw9mWTJ
Pkr4vb0mHccg2BdP6acDd5ibJ/+WDdhITqFXdN0/baB/oWfNEGf0n0VGxctE
+HNF87UJh3fQ7zRlG9FyAT13hzutT/AkOhaWwtCGn29j64g6AQ+oNa/+Uz2B
XtivjArh71+MTJ37vjuDfnu0DuwCH71zl95IAH2+YsfqqP4MoriwU/8Q5NHj
2qV8D/I8m78cWRYzg5yLNn7rtE6h4C3xlSLgc4ikbEuEdAals4ltUwLOOiji
kwX2zau1zbMEO5GGGVbg70u5Xff3JAf9r1x88UMQ7Koa8l4gH/Rx59qYdCJ+
PsajYmaf4Sl0gSMqpwtw54MSgReN4+hm2nLzW/h5zD0hOAnkofSVt/MDnPFb
/rNpkLtON/Aufp+sS6x3zlE/6AunZ7iKgf7sSE5fxOYkenkyQY0Y8Pn79jaD
G/h3OVPS9kC/4+QbJ7kzivrs+kjpgb7paq5RB/7+V7eUnS34zwPmMzbT4Adb
seqfP8C6R/eow5+An3hclCquOZhGX2hGsr5oTqLpAhfKRNhXUtOH8z2Z08hG
2uyvLdCLRbbsvgd8vOc09RHQg+LwbVu1V1Mo6IuQ8Fnwq18/25r1AI/KI6iW
Aj2RjfvfSvAfMobabz6Ac7R1dGTmTSKLbjKpOcB5tUOTLKYJyLBRq20T/06b
xNaeCvR/7UJ8Gh/oocMhnc7m9wxirqDtO4XfEz0VUPARvy85fcXojcEMWju/
9ckd6HfDzznlBE0iY8Gap7hf/KV6M/se6KnudqYLgn8YckvOesIcXu2NsT8D
/3RM+FEpB3xs5og7/YC+82794kfgo9jPPnUF9JXV3/l6Cewf0sCx5IWfQ6i9
6ReEv0/dplHwknUG7X3U4AoA3KqC60YjywwqytaS14b9eWUyV6LOLqSjb1Qc
C/5fZ7hq5IfbTXVGehnmIUfyzi1m/HkcqUHDtbYpxH/umk4Dfv9tWuCVc/h3
cg4ZWXie+CeiS6zV1oWKP8/NWUIeCHjxhT3cYRLdTzZM1W/qRM4Up+PoACeK
Hs0MAb05UTvu2ODy/LxLnks0hzKk8/+twv4OTn5kvzA9jfwNqGdpoc/3dj16
7Bv8mzQlEa1gvYD+PPMd+JbZj1LSRJqvWQ2iU5Qsp401F5DNpO8Ifh/Z3F64
1RXIk6EPRTN2LBdQSJDIzG39cVSxcaYuBPqHytYh7yaY+zQ0WSzl8e/EI18P
y7m1oEI709sMwP+c/Xf6vo5xxNbn2SwAdbbUUGQc//t2xmtZoSixfiS6U3Nb
rHEUSeaS6b2CudI0/81YanMXWhRzOr4F8yLi6CkRgLljavfmwzXQk9NaW2ge
zB8X5e/J1cD84hlSsF9M34P0JRWbP8P6YrTbH2OBv1hPh6EB0DfpnrOWI4yj
/RPZfkUwb0rYNuzehTktMppUWBz82HO3sY0e5IzooBn5CfKEcY9sn+sdhHo+
9bEX9rXBFFCsQN+LzM3PKwjj5y4rb6sEAv2jygvX8fecAs7sdHN9GkbfPtx/
/gro87z1zjWA/CmFQ8c3ZUfR512LSlmQJ/72j/hW/Hvk22OKZN4TaOrBzYrj
wGf7kaX36lQnouD7+qAG5spPfTYT0TB/rd1ZqqHGv2fU+zOohJ8vcl6Imwb4
Txcy60sD/uwGaW5i+BgaUypRn4b/77IZZOajJKCi/fuknmD3/ZHdPDxvrB6I
M98DvywrEO+jK51ATt8Jd9UA5xD1JjICvzmx/41LlBzyvEKK3hbodQBxeuj8
mEBLzPzeNJD/jyueLBUAfyi8dS/wIdRTg9NMFMmw3rG0i/JjIM8B74dAD+h/
1g59Rnqd46iH7UZSDODV4cU2Li4tqOnIlfJKoLd9mCOaguttOOMCAfzmn2e2
dYzuOJoKljZiBfxBetaqSsAEEtzi+NELfVfDmUDfZOATvLDOWCE5gQK2hOnw
v3/es/ow3Q/4fy9cKm2hH3YSreipgd/bezFebIrbS6Yp8BX0239zsm8pSE0g
P06RDpmHS1AfTUvl8PeDNbOTeGAecblFW518bQmJJjiO9cYMo5y0Ltcl/D6N
FaRlNrSI4s32RCubRtG3/xKqS6DfuEvVyixVsIho67RC8O/+vj0+6MHv185L
GluXTlhCgZ7jyTHTQ0jgmPQnEuiXZkkNvzoCfvtKo4K5yhByypzwq8f726dx
qhdClpBbS8hhI1j38rzQ758wr/Tptdzp2F5Eb+6OmE8B/+7vnGeD8fkrzpS4
2GYRvd0TfPEU1/tWsyF+7qU9678FC4tFZHX2z9AGzOlGxe2CadBnprGavJXX
WkSEhawoGaAfkEwJLgI+JR4sHH7PFtEl01ohCtA7vdhJmXHgw7wyxSIO+G+Z
Kwk06jDvf6Uxt4E+bTigm0bebxEZKCzu0YuNo9oBMgLef3p2ZWkujC8hPg75
fQLEi2mMxy4+//Yquscnwn47KTbdewA3eSvwIaygFdlxMqhUxy8hj8bnv28/
GkDrvMWu3tD/J1e7f8bPl03v+9LQGjeMsNBCocewbm7a0Uwt4FPgOmDCBrjH
+1pP0qB3yD2ytpET8IWu50cDI4dR82R+wDLsV9xy1Z775jKqEbqjtP6vBzkr
tBDrgz/+cH9tOUexjGQe3rnVddCDXhJtsm6D3w3mli+tgTwio+Grw4L9aH13
a1ge8tubL5P/FfxYQtIFB1MngN4+OcQzHeLs0Tu27Cqgv9x2dTgvpRc90pwT
1oB+j1qKwiSddAltuVw4RgH2mvaTeqYC8qz7hytxJS4h4Te7rSya0Jchb/Vb
+HnIbNpci5RLKCU6deQv0KuQT+zFQH+e97cp4BfuPxMMtOvpwyiPc+NcBNjl
uHGYL+n7JVThOhvxDvy2zeHL5KOA5jLhvyrrHLTL6Hjnuzwiy0E0v9++vAh2
ed98oO2xvYQktI1f1N8fRJH2GaL4vYCtXxI/v+ReRvoiDqFugOvIS5QFw7p+
OgtPzTiWkTG3oHGdxSDasxQn0wL5LR67TjI/XUQm3okPuSEfNUcOfZ2DuAtJ
lz5CoriIRr/9EEuBvJyb2lUuA3anqk/+HQ1+ItdBiP1VP4qYBUkO6QD9m0dM
P+zAr8K1f8aRTo+gCRStWg/0ETYRJ6wZlpDD2vMv7rCvL3WS7yxhvmP9FxTr
BXq2uaN+5pTnIFKPuVtXBHMkJc3VryHtoH8qRR78Hq1Tamy2OTD3vXCIupAB
6zKvnr3yAOTJmZMm25upQd8j7dbNpBfRFoW+iR7Exd8297+vIX4lHWf0jIG+
XfGyZNWhcXS0r1BpAuZxgT1BGjWaRdQnMTR3Bj+Hic7qy2vgf4u4iucKyK9b
NHalxH0MRQ05tbMCfmc80LYC/JaUe+g6G9QRKSpUo9MG9fGjCUc45JPCvAA1
F9F+FPGjhLEH/Gdsk/3rD/Ml5M/ud/IW6N9cpVjsCfh/V0iHvBfYvTdciYQY
7ChWohZaAPPj50sctx8WLKNsafET+PtepuItGy9Bb7IvfSSIYO4InK4pIQec
K98wJuK/RsR3b5xwt3AZkb4+3Chd34WiqFkY7YB/yITX+GrwMhJSdxs3Bn+O
Siehwt+3+Wo1U8oJfFRptr0toX6NDJMtx+xBHnX2io8G/LbfzJ086h50hWhH
uQ7s2GpflvKRdQkNxTls4OdIKAo17qpDHLG8K5y1bFxEE9Xqp6hgXwYlmt/O
QFw03PY5tAPrKmaIsLwBPdyYTGWmA//ERuOlvzoso0evbv//XsgJz2MWrKD/
E7YeE0dg3QdirSe2DPqQs7wTcwd+3vfZFelPsK+XxzRrMvt60aKKalYT0E9n
r366dX0ZOR4u+RAA+jelLbAyB7v07b0f+An0Voze0qxQry82XfQNhnxLb1z9
7D3M+3c9OCjwe5GNJSWxHIivfwpvM16RriAL3bUWC/x9ZSlyTyY873nruG0A
n0q9lZZnNX2oh/hr8STEi/JrF7UDwA8fNjnD/bkPPa026SEBeuYXY1G6u8so
Z6eBbQnyD8brJZsP+fxEb2qw+SjModHzKQqg/5syZ/70gh8iIRr9sO/LqCX0
JKMmzD3+py5b+IL8321OcQiAHl6FbJ7xZexElfU2xu2Ql6KEp7kdmJeRV1dV
/G/Yr9yzkIV3EC/HznSsvwd9ZnK3nlWCfkM3f/OePdjl3KnIQXWIa6YPFXui
gNcL8JdPgR8aCpGJHiQtoTUP3Q8SEEd2M/rvvYBPYupadOIy0BOGAh+CX/mw
DPHhdv95bvTdfywrSIjjCMLPm6JIJyUhw78b06GSvQb8OyL1jY4AX66LZ94x
we+1rkQ6n6xdQqPKasOH4edRYjH9VfiXclQ4p/PYIkpRZ9NuhbpAlMtR3Q/7
EG41a6TyX0AibfemuAH/GEN84wnEwRfxEMsCqIODpZ+WJ0BvorrnR4fBPipu
CWRqEL9myYuPqOHnKGtltlWhfmRoECSuCfjL1jKFBcjnrjI8utSg136za6dq
Ib4urnln4vezaITHK74q6kbEly771QOe5BDH/O5bN0q55Dp4HfrmE2IXyjIg
/5+3YbKrjulApqsM60dgnVkHVr1vkJeOZqX8tsHPw3F7XpT+oRcpLDw9wOv+
3/3Nh+XGnUjE/UK6DKwbPtjz/grgy3P6TMrw+7TGa6cyTDqR43+mOU7GS2iR
T2gHvye01qYrYRv0ypf2KoNzcREJeSWe8ge9WO1LDePnnpvw3ovHYF/rytqc
V0A/UXF67nH7PUjsYo3+OOCka8UPToO+0l8LzX9X6kJ1PJKXGwCvUtL1bCIe
RCwE5S+ngQ/96yAqEsjnLbfbf7MC/67XrJv1IGdiweix99BXhHed4KUGPlLZ
A/Ec+L0Ipg2Pxv8uICUbzA7Pt1LrPw0CYU7WZIrpPvBdRERhFf/qYV+JxNK/
OPF70AXfNnYB/TfHuSN+wJc3+eS+McxdEVt6bJ/kFlHb+ZAI3dhhdPRDpi1+
/tAz7FqHy/ACSr12ILwO/U9yV7QtH9hni35j5CbIvzMZOHgvdAi9z0tscAF6
a8sNM1r7BRRD8ymNBfT2VY73Vz7wk+o6fCsY+B/Z/P1cDuzCXuD12gT6hRGd
CK3ryQvoIymNXQ78PkYxxn8B/7uGGU+yIax7pkDVkh/07tfzKusAf85W2WEf
CnqQ++n5mQd/P/ujGhc97HtZhlNKEuQxYkcnXwD/DH81dqtXQ4i3Vt2gGfC9
waZz1Ve7UAk5GTsb0DeWJeRoQD5szTtsIgb0dzNnVmhAr4dfsvn6w7qTNrX1
X6Eeve4tD3kKeTjmXvol+oQFNJTt+PQT9GmDTcTGoZDnI9UqpAyg//w79WUw
HPSjaFwSFgX9DEnyXybut4vomzlfsxzsczbjP5ImyA/6rjazzFCnOLKUGHq6
htGj6IB1MahHYQpHXsWCnPVG1NkMQO+0ZH/1a2YbIne+2he+C3OK8inNE1Df
BRiqH+gBfWLvut5TqF/fVaWoVsD/udl+PnIAv1v1yyuzBb/1YS0+Qgp6U1qb
VuQB+2vukHvRg9++YSzJw+dXA8aZf8/BH3J0y9qLYN3yuvokdsBvF7Kf6Tw0
iPiF3+nIAM5zuPZD3B7E9fQtUhXwx9a91D9RUE8T24MdevF7Klk8H5dBX/Be
NeUZVfASxF/IJ/z+rxYjV5kOmNdu7Z/lm4d4HNEvXb0O9D4a5Z9co4bRKcWE
6iWIu4yxP7ViQF9oPilGfXMYVcWTpWkDrm4owhRilYj8kz4XXcPPPyXN58Lv
28m6elkgOSoZfdedlcT7MlqKcWY26KunpA8S8ftPWfWLtO3APv5E3kf/3Ab/
/HXM7VVMLtI51qNVAPgOd7jLCuzLxbMiBuHfa4sYMwRBH9394JvGHsQdZ9sd
JVugX/hgkPMG+uiqaAHzcMhv2TmH5O4Dzl5ftd4H/Yt46NfQZqibEmu7m3+j
c5GpamPhY9B/XdBaegDk+ZOP3USReQmiCVa+H4HbZbCoeRjqkc3muQf4ecIv
Hl+iGTTsQ+l/aL39Aaf4W3vO0aIEKXba8ob196J4ndrT68eXUVLkDYsOoFcR
GpJaAf/0Xou5+x/0jUYM//lkAL1xa7dfMeA7d9gEKC+vIKLeDD/8eUQiu6Pw
G/z983DtCAmoC89on2T/jKlAp+y2zc8DHnbvIo8i1LtHMqq13iDnUX66LS78
vJYVamMnqHfBP49eFoX6UazONSsO+SSUX7Y2Y2cZbd8YMJ8Ge5XSSJKmAF72
bDk1CeR38K1Wxc+piK+r0DzE0ItiGoq8BKHuVzZKq50APl72wxL489A1lo+n
70F/KG7wmkgfcFPq0yeVIP80c+2GLUguIooavbP80Ddc+OQyVQX9XUb6h3QK
6Pc6DqGvfEDf/GfpcCLgQboKF3kg7s4xbp5UBflzhoniv4M/3MuLfsUO9k37
OitjA3rwG1PQxw6PI9O50rtkEHdrP2qelIKc2mKEvMInY+g+k7CuMNRH3idx
jEX438lZ4/ryoD/qbEg1OshfRHcy3nNlg94+HTXRlQa7h32svX4U5tMTS/Jb
pdAflGsfXBMFPzfBckNIwG+D/BQNEmHdIY/98ZCZIXS54EaGA8Tp1J2PKW+A
zz/eDP9WyGNXtqKfXQV60e0xUweQp9D0QE5PdQiF0k2k3JlcQXav9hfHmlrR
xYm5cCbQR/UtRzl6rlV0h9R5hw/yznmyjboKmIvj+B3ZrIlWkQZmIThp3oic
udwNE4DfJdmNw6J7K6g7RYK0APIO0ymuuEqYa4KmYw9opFZR9sjNsyswdz9M
/9CVBnol3763pk6+ima7SJitAKd+WqtdBXkvRfThLF3XCtLolBh7Dn3qiX9l
OYLQh+zalngdB3wjWFimHehmGWp090CuaI7iyP9oVtGYg7Fbe3MrEpdrmy+B
fkzORqr9DvAXWXgcrgj4mL1NcRTML1Kmhmpn45ZRuGOI9x7Eo3HGaKs0+Mn5
O36/u8CvdPLfH3oI+KvGd6rkX/rQodDYvmy9FWT8ryvlKMSFUQz93HHwZxpd
3T+W0B9eYeNJ8Qd6mTgy26tQ3x6xXH9YY7WCXr0xk+3Gzw/vK89Vg7q5fCnB
Ihb6fLOTPLzjFo3oiuwuzQ38u6cRvrui4FcUbZs/t0CfIW454uFgr7ci64Iv
oK/eLSpJjwS7PODP5cwBP7nU40pzCPK8zSHZpGPQzxnRrFUoQL66qv/K1xX8
cIYiuHImow2lnwiMYgFcc4ycwxryORcL1ZPXQJ9s7X2XqW0UBau4CO4A/dmH
1744At5wxi10oHsYGV8M8u69sohCqr76v4G6whK1e/sj1IGQdRLq8fgFNNwm
ajaCn7/3zImaH+IiSff59mXwc5nCGTousNetxl7LYzMjSPI148Es9AM/3u6M
mYG9PH894D0H66bEHP6nBvUuQfv1g+1/Neip8ectQfy9hjcvRR6BPGFVF8+4
TdegVqn6MWtY1z6SpOsSzIMDJzj754DP/acqB4/A/32q/fV3wJ+LM8+R+AB+
ikp5BLkMIorV1FEdwEcaJwRkNGpRboeV7w7+/alj2zlz4M8Qt3S9A/zti+au
2nrDKGKYOizXCvaVmldXlYH6RabjxIbPI1HVvBnnIb9d1PbOLwJ8OZRZMRPi
os52/Lt90jLKW/mqMgf1KU97T+sZzN2HKx6x3wS/8ufKPHIb8BwWVzv8ewEO
iuFn/dBXZ9BZvsLfD6Z5xzx9AfJPksuPr8t2K+hlgsaxEfAnd6k3Q6zA5z/y
R7Iz4D/+tytCHgEuzC3ragF8RBhV3IOgD9e5HH3KCPbL9R9HCf5dGAfVAZcv
zAXpzAPx+oAzq3yjiKLpQQKPXp06is9xXIf2Vf5UoAumv71vgH8+YdSLN4b5
0Y1BruII2Ev+RTDTHeCTZeCu/xanV37LiePxZTFOXBVdyLAp1nQN4mLB1u0M
1Y1GpKtV92UR5FJ9fb63B+rRurzhoz9gxwdPXtxXgXzereeWZqC5jHRbOcnZ
IT7rnghXJUPePq7mNaUBc8r9WXPBC6AH0qU3CvMQdzvim7WpUK/7K8Mu4ucL
VfI/4LvuMoAeFZKZZ0LdPz17tzUV/PNxu8RleqAvV9P7NQD0/l5CR0Mhri+c
etrcBX1+rYKkSwDY/bi/972xvFZ096rz7WawQ20ap3Pr+BIKNU9Uwc+JotnJ
P47PF5h5bnQfxTJiXLoqdh34XGlZ968A+f3sRFK4QQ+Wnr98hWFdRlqZfAOm
TkTloXQyygGfmw5tNEA8VppcV+PF7yPaDJJTCW5B8Q+p+MgtFxB27ezgku84
RunK85817P9Rnes/xfsLiOP3LenLveNYp+Os/W/AXa3LTI9MzyMSRsEMp7gJ
TPvJtM7j9lZUeztX1ypqHinqYmNDgLc/D20pAPx117CYo8YCKhJuoVV/Oo6Z
tRaIHoa5cDviyREp4B+T8or9Q/AE9uNaVPAa5Mus617dRSAPoyAndkh6Aovl
U+fSA/pn9vTZRQYLKDFHe8gY+DcwR1xbAnuoMRSI5XEvoAWGM3oXASfXFshr
k+hAiv8kDk3emEeLFfuPZQAfv2drUYOfA6hjeMwHcBemv5PlTyewIZJlbdN4
mCMrBmabtudRMkbYmwU9TG4qdBOD/O9sorUpQZ50p+kUf4NxjPOa3fu3QH/v
371GNcBTujsKRyPGsAAhhsXjCR3osoOQRujFebSQ5HjycvwEdv6jAstg2jhi
G9nSTp0hoIsbj6bMQZ7UbVR7zG8claisXr0/S0AVjPlb5KUTmPHsubhayE/j
7zzXPh+eRq6TUxHlQF9h6BjvHDaEpuj8zi3i58ULEavGFUxiebwdEfh3pS6z
M5v9B9PoRX3Jvi/bFOb6576TLMRr/GX/SoL+DAquzLC4D/SHs5+GvmwcR3fX
X2/h50U2/FE/HwX4/NkzlOQgzwWPy3d/4ufSOoxEhmxOYkuqzXHzkOc+UfNo
CVESkOnuyVSn/EmszfSVuV/8BIpP2dN1Avp6gpdbzNoEZubtY64JeC1tu7ks
EwGl8dt2hoP8BBHOQo47o0j6u/LVCZDz53FnK3rAEwXSR59Cvs93v6/VBPi5
088YPmhOYhWfOvb1AH9rM7RBGz6DLJ7L31yKncB02xivPwkuR3yT7H5l4D9P
NrmUcX0ePD3ccmsM5uz498qfGWfRmVm7Wdwf/raSJveAHiSDLrr1M82iqJ1L
s2vVE1gms9tDIcCdpe9dU700i7I/WKfkAr1H0KdnfHKEMq35fiq190so+lKk
cETcMPYves8A/07FSfrZtZMQx79niGeqYoexu/pTTwzkCWWv99lvHeJeRixf
xx4PWg1iCmq8iQUJyegBeeBiH/sykiWEU/EC/hXJW4bdSEHXMl62XoM8wfra
9J1A/DA2cce//QLQDyCeg/LYJSQh42BIkTSMScb1cPAl5CLa9TrFGqAveXtF
IlVvGGMlGLikQZ8yWC9b9ALmiUvGa4JdICc1O3V9PchPsP5MGQb088keOi65
w9gfHSdmM+CjU2zw0g36dwHJxHMm4uMYK1v8izdWJejPVKxbvs8iouVf79Qi
Hcd8E7nd/YB+QUVZ1Qnmg5tOx6WeQ/yS8AvcJYV+SrhtIjNcahHd3WXmS4Z4
8ZVaNDUH+snrgnRMMAdMBttMPGgbxajcxDiuAf3N3Fe96YOLiGy3xFypdRQb
yJCpmwB6o3sUd8Khf/cSyIyH+RojvTfajN9btKcrl/AH5l0jv8tvVMAuUnW6
0rw2JcjsQTix+vMF5Moiwk8K8fXwCdk2fi/epy79shao2w0jl4RiIE5nZoVr
7oM+BVdPGvsCnvWgdj7h1jg2G+E5rQT2WgsWaJCiXEJ58aUnQ0DOOgvWgJdA
X15QO/GLBOYn2fdtUSBnWp/wM3bAWY16b7rlLyDL8RxjcVyew26zQ4D/2+29
kmC+iMRKnK9cBv0c8FOJzII8Fqs3n/QXLyBrTavQAaC3vbaslQ3rNpzasV+1
XkS7KXl5rUD/Re+waOHcEOK7EeFqB3ngzVfuLYfWKUyoN6gqA/qFUBt9dAzw
8zunvRReTWElPqImJwDvqHhvL/6ZgER0te9ltkxhs9YUl5LAn7uFSNd0gb7v
Cne9mCYBI/p6X8IU8kO7z7BANX7uhO5ujz3QH+lNTMef71dNFm3vNE8hpY+H
SSc/E7DPf3jOf4R+586iozMrxDVFwqNikZEpjPUtbTGON9IQIp8PTyGCtTqh
Efgc32aV5Mfvq6BbkDeGdfXKo6fzIJ/ceWwhv9Y+iuavKtM+mCag2WUy20XA
j/DVHW4CfI1Mn8cf6K2Pmtgl501idbsmvqkgD+U1j+bBzGmkXEkXZwb0F203
/u3qwjzvbCt6L3YCtS/WKPkSzWBTO6vBDLBurR31HlHBJFKm+UlBMkfAWKmU
hshBzgvHq6KeA73C4/emo73TmIV2tGAw8Gd85EaRlT+J0lqe0jz9PI35/xwU
uQd5Zs1zKmxRYxIF6ncW2wN/X+ZQhW8gp2jjg4DV3ElUw9E1dwH42+Vd+jgE
+C1T5ZcysO7dVddx2hkC9uc/I35dyM/y91LeTwD/se+vid8Qz2ARN8/Efgb7
fnE3ocTz6lDCVWZm4KPf9uGXFtiFMf9kdxHo3zJaPMvRfBo76yEcfxZwTdYs
nbozU8ifWvfpU5DH6czjqgRcP0GHNkNDp9CIWEhz4SwBm7rxTSUO7B6+ZaTp
o0FA6Sy3B8iAvwTFGHUg5HkzEc0vCyAPNeWNt/LgV/b0ZzlH4ibQgxztH6yA
c3cnC9XST2EyM+r9+HPVv9ZVqWMbk2jc+IutBdCP/bfINgb05e3Pr7PTT6HH
9m0CNZD/hfQTzmI7oyigtcKLGfaV85/1m3rwB9MGrPkx5H+v8JRvK6sTaHKv
4AMd8HGs/fJMFOyyHczHivVOI6Hzrf3SEBdxzkGthVDvugUGKGlhnWuNIrw3
jkxj7pFUPH8AvyrdnGrwYwKdosu8SQr7Ij9J/wt/b/ilm29tTd4kOhY0Tt5L
ScAymSyrG6DOvu6XJP4Gdm/WO/f+KuhnNi0jSBHkUTvY1p8H3GNkd26YiYC9
LlFAG49q0Vmv6wNPIE+2khY9J4X83NaMGTVDH0JunxI6BPjTv4Zept6DWF/V
r7QR6DdqVbt/y0Nd+K5Of/+K5SDGeJjkTxXgEz1KHd+g33+yU4gsIQ8/9LAN
WIF+qZUyIDMR8p4hK9a9CPgZEweOGetGxOnOSkoLc9WYjvWJSFjXmU2A3QX6
nAJOVMEJ6zbEfnu8pTmEJV1kdpAF3KNa6GZd+xKq3CIRvAfr5p3Uc9KCedVQ
Nvf6AcxJR0mIxYeaR7Hl7zRG5NCfdD/nsZ+G/Hkn2HN7smUUa1B8wHEP1uVN
dV0fg3woZ73QrrYygvHznv+60taKDonLuCUCfthW0It7ZBhL8jmj6WnTiGSv
im6Jw1zVK/aTi7x9FPty6mFDPvTZZk3SrKEJCyiPV/bVgc841j6aq8FIUYua
JPnkwoHPG/vYWZiDMIb+O6NdoB/mn/ruf6G+PNqWyuXpHMWM3c2Z8e8U7RSJ
lzOGIJ/H3hhchjpiOn/BXQHof9c25rpDnYqY0pLdgn31FF5sDAA9zBrRTuNy
LnZ/VpvxG8PyNIafZuHPzaISe1zyF9Ht5x0R32HdlsssdrGAz2GqOZuqkOcX
GYNh3sRom6Y1fMEu98eMMsOgzmo3leZteg1gAka1bw6BPLdpTxE+QL+/si6g
cla8H8tyvKv2GvZ7/cjbXc4JmOeeqt2gEuvHHL+Kv4vH+9VumQ4nmCeG6Xcm
nIh7MeeVcfZ54H8rxN06CeYJw6ufzPaJerHR4pc60iKVKO/tYuV6/jK6Onho
TQron0XYf8LvFTzlv8o0BnhX80bSLlsvtniX22kjrgJddKPw87u+jJoXmULz
Yd0onhqNE0D/+wgP57fvy4jq9PBWLPBfYf2zPwW48sve7HnmFZQh1FCj0NqF
zZf8WxYBfa76PZApgzmMTV2vqKu5C8u83/TdEOhT3p8+ccR5BSXkumgaxnVg
Vgmtx78fBj1YZ6W3XV1BoivlVR/iOzC/5hMpRLBfDspAPgeQM+/sFwMr9h7s
+tL670XYLzW/XWQq4CKneZQYOruwsmMXLi/8bEO/NhYCcX/bNpF4YQn6j/97
sioV/NNBXq68R3YRXWmXLIkEXI+N9+kc9OcmTh8mpsFPgr0fRFVGDWFGJTl6
jh2t6Fm2lfDdN4uo/dX75qCEYSzo9E9vSujPK27mK62xLKHAmaed8xAXr4eF
74C8iOeGqndawyLi9KyUkob4kv0o/C4Z6nKl7ealPZCT7w+Nmn5bH1Z6X/p3
GNRxu0ql/8hgvlzRb6rYL+jDuI9dnrwE9NxRbTMxMDeLiDe2M4I/yMqz1Vbh
37uftNTwgLk5ym/19HOwy7mMfkP8ffC9ROW5cfCrWAXqKq7VIYy3ffGgGvqW
sle0LHNbS6icLGCVE/qcUD4Z2i383JfLEi4nYF2uSN7SZos+7DCj2Fl66Ium
w9hyPMCv2i0+jHTBuilhHWlvE5NRA5nwZx7SFcQ0eC8m+FAvZrpw9nE58CHj
8fFb2VlGRQJe9tTgV8bhP959kiWUdR8eJ6+gXEFs0cW6IuAntG7BUm+h31P5
fLLJ5+ES2rNZ5hOGvKT18kMz7lfN8UfkCmkWkYvMlpcbxGOPNNNyLuxrQKfO
f3sE5vi+vxdNgP8tJpPECyDnr8/PxFz1VpC2MfNVKfA3aWqNpAjY76tHyqGN
2ApSuZZhmAd41k0SThX8veBJkdNL2SsodXmscSu2A1vLkCt3B/6uSF8qKGoF
CbObMYSAHxIE8s9pAU6itZJdBvZKYzX4+2yiF4sp6/WbBdw9hYlZEObany7T
QvOgnxtXpDLiwC6pQ1Ux/6xWkGPsb55R8PNrtt4yq2DfopYzy3NlK0jr8aHR
PeCvsRyX/Af0U7xYforEfgVZlbBQqrR0YfxuGcNPoE+78IszbLZqBY3Slg7e
Av/nIKsovi7agjS5BbsEYI6I+xZukwj1ZURr9tofPM871wpvwdwhH3TpRRfn
NHY3i+rfFfycBs03sVqas8iyUY9+APoE9USq7bGJFuQs8P6FEMxx1K2NtEtQ
3zVbFCJPQB4+XjUfh89xsZ9L6+qWprFfakV/xCAPO8wGer9VmkGq3wb5GQ7N
gD4HuyKA3jDC2bRrdwap3YmnuwHyFLwi/OSGuKAWZtdVADkHMvZvK1cSsGeG
VSSLEBc5vyz/awf8ftOcgw70hz7+V227IO6+ezyKEIQ561LJ2ccEkLP7IXen
LsTdGRbtYImlWdQ3cWGqDur46jKFcx7wqVR6+KIseBbVXlkswvuK+7f8Es9y
NqH5c31Wg2JzSC7xyaU96Acmf+acMIa6U8bE47oOeInzNW8X6CcnSWuKfgOf
a9K9GtLEM2iLs9GYxXcaY5GbWHMGP8xW2sjF8POdpw5GzjNMYZIJ5qgI8o81
u/WFFvw+yOSwW+XNk1jQlFvFMNA3Gg/qOUfNIxotR+a30DeamzHT5kDe268K
7LAxmUc32y0UP0PfwtXdJyQI+S3UWXgiQ3wOWbBmBWaJELCrJknRrIBPqaXI
HQqYQwRm98uRsC+Lh7U9JqB/6d+ePqPYHEolvnKvDfA3f+265mHdXwcH8xNl
c6iC5vhjDcAzA61drqvWIYMy77PvQU4ljRYaG5CnioGtnAj4cPNouwmrzyM6
TeQT7zCJYQ1yFTKAr3uXbuDn/D4eijzzF5/TNcO3COC3cv8Qf6LlApItrx8S
p5jEnrnMkD6EuKN53sY7Bjil06LIb5i79T9ctI2GuHYLLOPngLmYubvqo1D9
BBYdIfIXv3+514BnYQ3kKe0o9zM/NInFOdjb7EB+cwkRf/MMP+fnsF3X2slJ
7NP4o0y5pk6EZASkfkB/6Hf0838/xOcwjh3V2YfgJ+8vHJWKgL4raiiQKtV+
DrM4kfmvAuxoXf41ImZ/EjF8EFWhlpjDPHf5Z5+1dSHStUtesdDXIYthhZyO
OYzmry6x16FeZN34e1AY8KuO5PEq+nPYRPvPETGgN6RSca3Cz4m6eOIzJfB5
Jkv2uQLoKz9SnjvSMoHErDBGPsC1Zy8dEGDd4xSBga7A5/CtyniOS/OYqPly
rwfERd96Zip+bkNqt2lyjdsUpr5p5UuB33sul3MmuWkOxdxZ+KsCeqapSVAe
Bz4HGj/GHoA/rL3yiTb5O4lF/COwvIH9RoZYBx+xn0NDfAGthuA/k3e7AgUg
LvqJ5GIP8L5XP6NydGkWi++y+JoAfF4m75x1Bzxlz7LZKmQWs7l7R+U6yPNR
4J3svusUUhO28T4C+nQnPJdpAXx6aaoPf68x255IEGuew4KFQ2L2OZrQxNp/
68LAJ7Kc+Lsf0Ef+qhCWhPyTutIpBHkEJTuuH59gmsUqyoh8fICPlJJq6wvA
uQOV+gJ+z2DHn7ZGUMN+T1krKfpVEFCUV+LTDaDPEFQOxN9XHWfN0TgJ9N5G
JNakN2cx1+fr9XOAdzOepqfhnEauR+O5M4Feg1PNCffPWIknpUdap1DnTens
gMtzmOyYQJw0/r3R00iqzzAPfuN4IR0HcuYoBV7Kgrhjl1jibsPPu5sfWNgK
n8EGuQ3jRYDP2a+FSXcg3p0nydfVlWcw+41A4pd4XMvcsshwnEajPFQe9Myz
2NRCZkMOyHMzPiM5Ffr2gHAm6sjpeUzldzaGfw/07SB4iQafSwyL0Z+oecz1
LJ1yNcjj1SrQ2AL+40yspdaoPo/1yn3LMQD6CA/69zHEMNd8ZMkIBHywRS8h
C9ZdNN58wAtz6AvdR5yfYmaxmoFRreOQB5TftN6cFCag4wmn6bXA33QyKazd
BTqQWlLBzin8/gDRZmUL4HNc/b0KMexrYk+/QgjmwfjA4LT7LPPY4pmNELxv
/2jervAN6sKq8/eBzvxprD5R+F4MrNvevi9oDHl4r5mKzs5pGrsceiS+FPq9
y+m+1yi6Z1HONO3tWMjDd2zfZlQAvTIJEWE7ehaNHzheW4c8/5HmVFEEfh/1
e0+jZvDzLB5iJhM3ArZsd5SwBXx+v9WXLW+fQYl9/G+9oL7IVtkF5oJdlA0E
K2Qgz9MOBO++BlxiyzW1Afzcn9OU9iz4g+YSW/wk2EuGsqB0EPw5KPfl/luY
K4MKTS76gF0KxM410IK/EVnaXKJYmkYjNJavI4APEtev2Ab60GqHcmP8no6t
w4LrMP++INH6twbyEI9xrJSAP+T9njnn2TGDjcrYyNR0dqHl2t/070E/U0vv
3kDcYM5Ci1qvId4bS84K+uLfQfwh+nFPcgozw/jY0gBPuT7UXh0zg44xlgio
Q741UcgJMoZ89fMw5xwTxG/OtzAVP4jrTJ6FptaWLmSXLZ6Mn5+dn6A6Md88
hQl3LbA54O+hFCSqFRHNIXEz0/gZiGuD6AIGPcg/D9TE2fH7jC9W0MUFQX7W
I5jL5QHORJ2/y9gxh7pXxtVN4iewlSuljx2Ie9GyyzMtNv9ZyG/xidHAxyy1
8s8KyNn8lW76NfChqilpr2uZwBwrfx49D3wuOfNt4PeexK/v+b+EOfcy6aXZ
EJCn0GHsRzvLDHIhz6b9D+8rVC5n/8LfPwr/ocUJ+nH6LPHvctsUJm1b5h3o
24/cTNMPreP306D4ro9Af3kuf4XsBv48oTRkDPjTBQvs4XX57q10LXrJfjQx
Q7e8DPjDsKdkM91TGI15k5Enfs6fAbMMwz8CiudrFMf9LY/yrRWxejcqzB10
OgL0dUYxxqzAXya3bJ8O9iXUNKRjDHi6QsmPi+Bv/Ey71wM+9qJLYjH1l2G/
TRKvGNdgrs/Izc/5gp+jxvFFI1tvDn3k7ny3CfjRleDEs2ODKHH3HBV+/2Od
wu9uFcgzR9TDeomsB5GBS8zWJuCX3Es8CJcgHjeDLD8BrnzCw1i8egJZf6Wk
cwU/lM8/npsq0Y8eHTEgw8/VIXHwiHEJnsRaxcf4JQGvmbDmQNAXmXZ4ua6C
XXQjfCoNYb9j0u+OLXXNok2fFOUvsRPYVOATEsH4YRTWOZglBuu+jTXpzAb/
n+diPn4G1r2OnQ38jJ+3rH2fNthgBov0CYgvA/7LNkePSZPOIOJX67yQFzFC
5buzXwr7UGfRxpV+sNcD3Rnnw+CHdAF2DH/+60adN4Qp7oG9jmnXUH6HeKnz
iD76HOyu6pH+6zXgN6KeKvizzmD1rq+i2cFP7FMpGNoPQx/YHmYUA3EUkKLk
pAN6fkB7SQW/h6xRoPnTAOTb4y1M/TlA71wh9uMM5OdQ2ycRPxhnsdzjTcJv
Qf9RI/Xcr6GOFNJ8oXOMncH6uLGDY4DbuIk1eLsS0I9fCYTjwD+Ypr88GOQv
+dReqwj7ZTJ9+s8D7OL/lFFKHfxc57OaYA/U/Q9JZksV/rNY7CmdOGf8+dhH
vvj3ElNI5pmz4XmwS7/XMP8p0I8GOpoiDHyMqtcvmEE9UqIV1ssC/Hiu3rYq
yHPkcQzNNOkMlstE65MO/nlw+oLKd9jX/n9eWFjnLKZLteL8FOg7so9afwua
REJmJl+bQB4qijsnSxq7UO3rH1OvgM/bh7V8KrBuxZfi1peghwwFY4O6Jqib
bKK71YC35RKG8eeNTkG0S+wgD9tPK+M7xHPY77L6Q5kgP0u7ujN+z+iix8WM
oUjIz6Z/kj3AT7ZVKhqnpgnogRwvWfM/ApbFs+l2FOSktoj9xdc9hYwUj/DG
g96Ir+iPfAU+LcyonTtyGv0KjZo6OkfAkPZwx871fuT/c2ntGX7e6fU/cS+B
Xv+XOZ3/2jC6ItXK0Ar9WPUNKpJrMJ8+bAqTNmgeRVT2FDd4oT88uuaTqSjR
j0UWFhKHJgyjY7mpGd8s5tGTYaqrf2DOHd23KzkDfsv82pZDdn0eKT5suWMP
c+gPjpw2ofZRFJnUxvcZvwclZLaOD/jHB+TNWXeMompy5s/48697hUGOdcDf
6Nr5M8FA76jWpLQH8nBu0kzmCPdj3i9DdOWxUcTEn86A959/b/IE3oQ5TrNb
xW+gbRRZWK08xp+LEQrjExyXO7GiswVdV4APTYEVXYzcAkpXulDGA/R+6unJ
bXLjKCXoYaYZ5AcyLt/UYJBnw1qrDf/enkfd4z091C+2aJPs/6oHMMJFloZ/
+HsrfvbCLCRzSF45UsgN6LXfVHXp5w2jyIjnNVvQ3/4jKabihjmUzlZ+nwj0
I2k3mJ8KOOUfFJfD1ovx9twNlIP9Pjoe/fRf0zyyezx5UQrm5aYw4mtBc+Mo
ItL7uS3EaZtBqbYGzL+YLynHBPhf86Hw36GAEzoIG4dHB7GOKZ8f+D0/fbcr
C/68nUFz0RFTB7HD2IGr3KF0kDNast5TEPIP1eLjBN/nI5i+q0UL/j4Ob4+v
5IbpLIqyVXvgGD+MiVN1nesHvQkQ7a7Xwn43//5KF9IbxsyZtX4wgt7oRFwJ
/OxziNPa5K4D0Jt95f3z1XwCcWbc5dzHz3O+dcNHpG0UE/KMU6wBeayK3c63
Qz01U0oL/akzihGH+qZqwrrrpYqhs1kzaPrKO7qNllFsieqrizPk21WmsZD3
oB/sRcMGL8zLw6P1m7NWg4gqLfDkIuA9Z75/oi7ox1Q4W3bWIe9x1gSKcuzP
o3m+OtMG0P/3PYpGnXjosyXsTXkvzSKtpeXKKfDDBSWUGAX6FOv9rZwPfhX5
y6NPG+boMZpDJJ34PcLXj3wrBL+KZTXhkjrdg5UGaHax4d/3UR/5LwzmHX56
wq1JsGOEUbJBGPCvp304+RTqRcuVaONngJ/b/Dq/A3hk2sPu6fY5JHnEwCsB
/KrkyfNNeZ8JxHco7gM/xMsXxRnj0zCnc+kpLnbhf+/9qLB46+I8OqCVFT0O
+K7q3pk+8XHE/SfFoBHkWbhS8Pol8D/MpkxNDXKyUuvJlobNI+ZU9QNxkF8+
9bQYUdQY8hDKVGYFP2c7E6mVENeBsd7a03gC9MTEPeqx2/PoL/kWvRXgM2ce
BtMZjqOcqyTUPaDPG5QNZTKtrdiNKUxuBOgPjD6MSWssoIdPrsgsAj5cWMjn
Afga/2O1dqAX3/V6E/yiBVu7vvaixRf8f5D903bsHHJjP8OsC3FNxb5vcOTU
BLIUCbTIAf952Juo7AJ2/BQWv8KYMIHeKQpFt3XMotcxn0bjIa6J5jqZQkEP
X7ktjU9B3NW+eB2rm9qLqWW02fX4j6DXj3Z7LoLfEoVLaP/1HccUt403IsEP
46X4zpBDf67HPWt1YDaBOZxMrUmBPONHR7bgDXHh5agfPj47jp2v/emuDv7s
czNIZxX8jZ/uYtcH4PO4UuLyd/Afit7b98Qgfs2LZ8UNn45jH5SozldAnJ7b
Sao+ZDaLXj5mUmEB/OIIN9cj/WFkOkydgN9XxLQSpf22dRRbYdV2bcSfZxFs
dh+D/BSZEwMCcuPY9vlO5W/AZ3YyLF0c4oXsjWljJ9BPmz9ZoQd5uH0Fp8NB
zmmbm/etOsaw6ZdT/fh7sm1Cgf1iDrOo1DP/7yDQi7mZnUyAfXHZKr04Cesu
CvidtI8YxZJMYn7+MRhHlj9DskQh7kIiut7nwr6uFRjrmuH3g9cVfBQBXPOq
V5eqwThGVG1tGAv4tv+SzNjUNJoqzhqZAfrzpy2HmEH/PRlVuYlQ3zMcTf+x
p41j8/7/VuYgfrNN+z4K9U4j5uz5iSaI06TpBz9ccT8nyrmaCnVfR1bgJPgl
lhGwGvKzcwyxat/+Lwz2JcPiqVUB9Hu7WSQFkaPowoZgGCXIT5+RIqgLeawr
rfFTIOjHgf3VjBf4+fUn503vVQ9idsS/PTUBP6OWPu8J8+9cMnfLScgzo/MP
Ks1AzwM2G6ElUC98w3JYfoF++r89+xteM4j+S/ur+hz4kA08FLoF9EzHZUuf
AL2F2M3hXsDdy+ksNVaHMWnPrlI+wM0Gk1XKoE7JTTYT7gB9taQek0lWL1qn
MVr7HLuEWsvHIy5AvKxlo6RbUDflInI3HOOWkCxJnaiPdScmbuIVRAR4+bez
G6Q/llCJY2ujGdB/9MrqfSLTj6zHTutQ+y6iq7cfZhYT9WI5F0s/alAOIsbC
oGljwB1LK//7AvGrHeEsgb+H2yPplXPn6SJy9T5i/e+gB3u9fQL7AvjLfsRn
vriI9FVjY1iAPvCs3k0xkH/uySPzQeBD5xVWYKoOeWBQdT8E+hCaOxHn2lSX
UM/wQMpTkEe49UWjMtDnpfecD2lYRHb/PT5RAvhI1MGdCfCrd17rAhx2C0he
vP58I8g5/HZTyhq/z8Hr6qWL/xZQKYEpJB/w+8GbPJjNINr8cEGx1HoRtXAn
GbRAfqN/JFMrB/b6LqjM7T60gGw+WqlVgJzzJ//t+sG6dFU/jnE8X0CpFUH6
+5AHQnYed+HvrR/sqx5jA/nvPhyM5j/ai5HonCBrhL6FiaVSfZtsEX3nd4wq
hPzQ/sAjUpSkF02w0lNwA33IqHMSnTjebxjLH4F+L0QyBRmD3m7NP6aXgfzT
UKxwvhzsopHEpraztYhOC3NPIcif3uct9/gLYe4QK25bgzym69B8vgbqApNO
1VMGWFebbvoBD8hJW6FYdQ/qSM2Ag9Zp4DNsGHqz7O4Scp+67VIH+/pgiWh3
YR684KrlGJ6/jBbyaB97WTZiJzysNAqhf+OhSLZtAPwRXXTxE4dGjMeLjIwc
+r3LL0utTzgso+82byY7Ia/OyX63rwP+3kReFxUpltHzYQ93hbZWrFl3pX4B
9kUs9yw9UHMZBZ/75/II+L+JDMj/DnOWwAG70rOCZXQ8uJ/87v1GTNAee6vO
34l0os/NGMG6i6SFsWMtrVj692cE5oQOtLD8iWS1fhl98BJUywf+ToxDWgEw
R3vt8Z9Ko1xBbt+J/b2BT1H2K9ZfIH/c+bqSYvZlpPDZwP4r+AmbOuG2OkcP
6uUoD9EB/shpOOcbUS3Wz1FFchfkVxHW9dQJXkYsbwOeaxDXYmcPyN6zA76p
uLPbAfQcxLa9x4UrsQO1hConkOc2t6to+dUVlP8sr9r1UC22S1Zllwv7Is/x
eJOxvIx+q/czLB7UYO/bV0h4YU7nWyRkrjmtoO7CyN4rcRXYpfPtJKygz69O
AbTtzCvovxuB6rWA85Pb5meBH5ZsLNTlyS6ixuOT4t9Afl6b7FuHIN/2RYh8
LUleQAGXJIXoAX8pr3Dzc9gQirz6ts4S/EfrmGg0KdRfTOwm9yX8uY/eVO5H
kH+8sSt5/lg7dkE5I1QR9PYzVmrmqMcyuqEVm/kgtgOT1TMM0gV53na6JCCo
v40UuWJM8qMYTQzbujTogbt+6yzefy5fk8mUyB3GWA6cwytBzw5iZ6YjIV5e
FFMWskH+iTKLrhgGu5f3J2FSEI9L3y+/KYU8eRU7UVkP/BvZ6k07IO5u/TVf
gPyFHUtzDQK/RuwCVV9UIU65a0a71cGfRQvlTulrdKEXmfTba/jzrN9TD9nB
n7Pc9kKVIe6q3o8//wT+T3L4YocG9I1/GI8UpoE8dt689c54XnqhpCBHMYg5
LeizVrP3olgrUYsSoJfR/94+BPJkTrQeedc1jkie6/Evw75MbUyv5Vs1Yjuc
R7Vt8b4r21qGJ2oeGflIvvgAfj6ITbISAc7xqJEJEebRY2z72W3w5xHO2JmX
0hPIR8oqzwH4mDBckfcG/wkV5xbB+8Y73fMGVtwL6MR7DTE38LcPEdXn8XPp
MxKjuyLx867lr9zM4O/APrEI5DiudCIH5uhgMeATwJtx+RvUhWiiayYMLyZQ
1oqd4Czgfiekc+jiK7ByzjOP8bpW7/luztpgAY0e5QmkB//5GfNCUxb4N7m+
/DYL++26JJq56VaOHWs/xRUM/tAb++JXGcRF3265PDnkvQIpo+elYJeasmO9
j2qW0D2u4Xvt+HNMfbPc6xXdKJWBx38Q6oW+V7PmVcCPUxcYiwK9mW689gjg
9aH3du6Ud2OmtuxWFjadaC90LMET8KPzchH6kK8w50+llLCucvjKagnUo57L
zikWX3qx8z73khQBT1Nh6KWDulPV8YmfHOhp9OIiysAfOupOPzoFdrxx9neE
rXQ/1lPRY3YC7Escjk07Qh1RHqBv/gB5sspJ458F8MmTiT09BfUiuVTp8wvI
q3K+sWLF+HdIbw/2qyHvCbleu8oK/ElOHT1HFJ6CHDIfe4jPrqKBqJPvzONy
sSdOP2rNEpJRF7et8/7MKnKcExVQ+5WLSUvMUCHA1VTTQuzaVlHchYUlKqsS
LCrId14rPhftNEjn4+eQ7VYOFkzcL8HY+KiuJCXkogdnaY9zD6wiiYkhUq74
XMxLgt8wTY5QRvyptUoFX7c/bOPuWD5WJtZ3dECWUPYtZDQzcWkVdVZqZJXG
5mKx37NN8OdrbT4t1ZVAf3L1i4Un4ONEbLc1EpNRkaOOgmzWKooIGvz0H/jD
6Wqz0yMgj5LE9+Nv362i4v4Xzl7gDw2hbvfx97VuPT8iy7O3it5LCuVcjkvG
dD6LeN6BfW2Vbhapb6+ivkNTJsSAz3Nv/BwDPvZX6GJFYd0XLJFMSWEp2Kh7
F99MXC6Kdj97i1J2FTFUvTx/B/Jt/TF9TlXrEmT/JfMjG9cqms1mm42GuEiK
zOksAz6xNVsF+k6ryJvVgfUf+P+sJaaYa1OCdoqr+eP0VtEJqft53JA/uXoE
svcBDxPg9NrxX0V5n3yKvWFfUiufTVz7EXKrlvia1LKCqiUF8p9DPDYqFZYb
wbpFoX38NoCzmh3a3of8VkZ1iIgN+DyOrbJmnFxBdSHeUcJQLzrLuwrexFcg
B4egT5FAzy9uerVrvAVz3faeDAOc20T8rhDRKnJfIQ/rAPmP5d1M65YnlMUH
+15kywN5ngZ9fQvyUAraoguA333dQXWjexUZujbbOII/9Ea7pCYnVKCFLH2x
CclVtHZatdwb9vX3vps/fh6wyN+juzFmq+h3q+CMT2wF1hmaJ/HFqgSx3b5O
2Qr+0zbRc6sP7Oty4XbbC5Anre8Q40uwo2QFbYIR+OfxOYuxXtgv/ar0ohX4
YRNvgLYF2Is07+0fXVhX2FhBUxz8wfoFTdYG4FW752/Wb+Siro1M0z/gzwzB
wv/j6LrjsXy7uFFUkpWtstIPUbIq446SjIwUGWVkh0SUkVGIkJWt7MySlbIu
ZGTvLXs/nkdEKOU99/vv93M+5zrX2Yfnvk4ADeAFT80ttsCOE4eftdaAfemO
EZUV41MxN7EPKgtWLYgg4LbxEeqpT3BnWwnUhSc2iGGOvBEtm3rQ+USQkCEn
3VYr1OXxvYnUKPzd5QKf19b6JESpEvhkBeyiRnlrni2gEYUht1lu0HOHxV6h
A+jTu2eNC/+/A217ZE0X4HHCgglD31qwnyPzhzKBjzqDX4V3IglJhphUKkEe
LonzFN4GPchVVnycqiYhg7bonyJgx3Mt3ZevgX1/1Bk9u5UN/ix/z8kD9B+Q
vZsYDHpgLR8R3gD/OZiyeFDEphyjT831WnrYggKPqLmPQB2MN1yL7YP+h9Ev
u9ChswN1y08LWQD+x2hmzkW4B9sMcd2x7OpA47SMt49Dn+P1qWLjJOS9mrMn
+8KGOhC3RMA3Zshv8kFtgwaQZ8h0iyXwvQp3uk4rkiWuoIiLB4uvQF7y/uDb
PwZ8Ugtq+25BXyQxU6LYD/lntzDLtfRQFxIVCe3MgXMlmseyLKCOd6ntPWjD
9b/yx+A19EW8YeaHh9t6sbsJNUOXujtQaHN81Qb0P2I/4tWUob6b5jiUPwb5
uyKfRndBXt0ddB4LgDy5bzJTfQTivdExzrBRcxX1N7IW8IE+K8w5JB0g3iUo
vHiGVFfRx/jMi4VgF2p2KoFa8OdFBcexXdBb76b3NRvwW5FSDmoZyDMUY03J
R30hX1l+GT4C+N02/kZD4NP++OAVDbBjt6es1lnJbqxmwuMxM+Q9U/N0fxLg
pzLMfTi/dmGsh/VdhYDPWhuTKO8h8HP1xp4ksGN2+pHrUZAflFtXUuT/kND6
u7beVfArzh/f4jxB/oU1GjsL4NOGlpSdbndjSeQxTp9BzsGQ2wZsdKuI/M2G
oHBXB/Yk6nuXFns/Ejn2QnIc39dAOLl6Aea40VrvSfx9yq/spj7479Ij3orv
7cEc7e5JSKGkHEAdPhu/SzmXULor3dEAoO+2srp/Gejt8sNiF8OXUL0RknoC
cyVzKrX9Wah3/lVLSZVyMEeYHxnj6hzHznEzV+RBX/Tlv1dzRDhXKDySW15i
EnPJDfinBfz7j60ZcbUtobGcIRX6rnFsV7F6uhLsLivDEKUH95oK16f1tSrH
/ow2Ck587UIC8aa2g4CXS/ocDYF4P2ryRyYL/CffVN7qAOSxS09/ZF4GPx+9
kDh0D+yue9r1jxDozTyAjOww0GfwN3Plgf+UcJD3/5VZRXVS8wRTyCettAFv
KCC+aiex/Caw+xLXVh8t5IGPzzXJ6cCvVhuPRxwGu1AF7e02Ar6GKLiJ1i1I
UCumjQnyuXP0Ld2HIGfqW1G5v3Buf4x3ejjIKW7CrW09gLDfMWFbm5LdyC7E
hVoC8Pcf5fM3IZ/4br5sx99XPZP1KE9WYwllMb6Uwn8vp9j3viAc8KOPRnnU
1vB3wcdS1+PHsPkwj7vBDcOI6s/732dgvqY8zZIcAPpvX9zHYwlzKFGK52gt
2NE42bW4HObx07FGQb3AZzlwSTwK/75gtdNgqXsc+6/LPTAI8D+a/PLMCYtI
3aAz+gzwadDVu5kPfaPjvcu0vcDfLe/OYYujU5i0ZJvg1el2tJvRzR4E8qeU
yw55QN1MVCcN4PpfqCn72wv5R+qS/tspwEtfJG/egn6jM8HO1ymGhBaUDpjF
g354ZM73OwD9vRVz23uQD0Vip/rPQNw9/rtZpAJ6S75qcMMV8udz2/scWVAH
Bcr/nq0HPlF6F5LbgT+H0p5VIOif/1XQgzTIt4vFRSp8vSTkPfaUjQh19oTy
dyEEffuHI301PQUkVMZD5on3CS3U4TaDwP+OoNibNhYSyrylMqAJeXiJSazL
HuyeqdV+cxTudT/QqqrFuRGrbqSmlG5pQeuFEzWtgJ8trA7Rhn7VuYSQfJuy
ER1LHZ+LhLr800pHZRz8zTa0kh//ru7zSuw3LajjMRoOx+TA35QuikfKAb2Y
7LPyA5Af6DPXT30H+Xf8XlIWA25DuiL3Hepg1HH8T2a12O2g2UhBkGe1/VC/
ANTZJJFxA7w/oVWYlxAE+q286FUW8MPF2XOi6yDPlqenzTXww0v05z4dBz08
5L140Rr0pjxVQ9OPvx9QY1GT5T2J7j2TsZGiJ2BSY/mfmUHOC0/JnU/4TKLR
hZfxwmPL2PoN6VheqAumH6hjqgKmUInMnGut9TJ2m5pZBf9/dK9UQvk56Sl0
6JZJuiLg3AXfjuTvNCC+zb7d0PZxFPqodLXAl4DpZRy+Ygn1aDZxL4MbcF+h
C/rLxQTMUj/IH3/fnYzAMaXqO4EWor89YgH6xneL0n5wLyM9vw18brPNLA9p
9iFgXLeYtS1BD/E0JgusViPIs3KV+aH5ChaenvbXHex4y2ezAX9P23/7396N
YytYVvIApwfoYa20nMIMf+86eCv+4CgBy56MvkUCf1uq7FOjTBxD7/p83rVF
ELBboX+SN/F3PqpoRstXvqOyLvZzOiDPhMRLW3vgv9+fsuHt6BhC378q0wK+
s/NNnsW2BYUcfVbt2jGOouTPn3ivSMDaxsK5TQG3TImdZ/adRIoTFrulicsY
tjg++w/kb5z3mrncM4mKDzP9KgG9WQrWXFcBPTiw+4YUgZzyRg75RiormJud
W6Ip+HNr81HO0bgxJG3PF83NtoK9eMvIwg30werKLfaao6gZ+xT4PGEFO0/e
cMQE7KLxzF5g2nME8Z8WrL6QuIKVaVyLWAM8c/I8Q2fzOCpJaPmk9IyAKejK
0c6CP9wfaVWbsBhBJo6lTHzdK1jRe4cNfI9QRnxPdh3gI7eE85NSVrBap53D
/o8aUWLi5L8XoOfC77XfhuBcs9IjwfjvKJgyd8Jt46dQrE6ynsIp8J+1GruF
oHZkmXzIiQf8SlJ/+2+Y1TL2+dHqH228T9DXuPQc8PDNoXdbmsuY0ufez1Df
UPPKZ64Kg0lUx88gFAH0904/fbTzpAZp1M7mTQN/DYe+v18BN1kkf3YS9MDT
sJj2Cj93tSFYyWgZk/wQrHAa8sMP9w1b3J8pXw68vLm1hFn3cjrjvyuzYj/2
furpFGJqSzTZ0VjCUgxjNHUB98kdbdGKmkDHSZ7drcB/TcuK17yqE5V1JvRP
gV1SyZQCNMDulr+NlI2AHrXJ8zAljKG1/ku/rsoRsMk/POxZgD+KtjXgeDWK
Um9Xda0D/VfnRgVnqBetzonPvoOf1BYfthHfXsaeEL9F3wB6X2XyylrQZ02Z
qvzhFvCf8PSvLZCvthnH7uu1jaOu+jl1s7RlLPrI0ywHkxbkN9y9eKy9F6n+
+x6zVkLE4j8dC/CGeIl46XuBFerw9yGTJHsiEfM3pm/C3xf51qbOJsPajyzs
/CppSonYrqdSoRDQv4zSMsDfQU06LhlEoUTCXO2LLmSD325u/eZqBVzOueiJ
6WESllSxIGoHfnvjXarc6LdetLSo++gU8Bl9as4QAvR1ZNbv2OFcxccJPdIg
j7l+aGHoiTqUfjCjA39/I6QqXLwVcOZTxWFcII+BPKUdM+BLHAwdX14SMVch
Otso8EPZzK4PCueGUCtpzqtHjYidbP2qGQJ+peyYrF8C+IrExM9NTiLGTSf9
6zjY/URjnWbc8QHk9UL8GT/w1zomp6wD8Zty2Yg7da8fbbNTki9pEbFAjzNY
HvCP+TZRdxFwkf4HxN9fiNi/0/yxYzBHvGjg9cf3LFzi/nKAE/IDw7lwi38w
LwgZ67JeoJxEAXZ7bxkhXv42qjHg+6DKMHWTLsifLwiZ+UznCVhYQV+PIvRv
xt84c4vA3xpUczzWdAgYiWW+lRtwi+kcgzDxSeTh2if+E/yhZicaw/d4JD7u
dXgEfvsySqkwAOyr8HD9+AicW9hI3SeB7+0N+jMx4reM+aiPPHWF+3YonM/c
wt+BkXLf5uMiYXcEl+yW4F7GTKmvBOO70Zfx1nAJZxKWub44ZdDUgfYULivj
7+m9dLXON4Y88ETuFa0a2GvHQf59CtT53JG7Lu8mV7B0/9MpeL1bIcZnMbsM
I3an9WRPoNfzuJEoBnGq0XY90BN/byKE1j2NhohtXjogOIvvu3tF96gE9Knl
KDNlXrGCucwa0TsD/VZqhUTEmSFEqmsezgA+NfnSX/C/n8hK3o7VSx9AeZRP
Qp0Ap7/Q4f0R4n3MMK1kCv/+N86/08SRiDm588jz4/sVCw7kfwOcrvLD3j4e
IvY38tf2S4ijPnO9bLx/sf8xouwC+YelaS8Sfy/5Tq3qRR647+bpmGo5yJ/n
Fo6I+oA8EqaLRewg74FC8a8izUTsvsAg9yyce3+/QLIQbw+6YGRO0wz+I/LD
MISBogtFHU4m9II+D/Wd/7IE+K7I2QHGpG70XwqjjgfwqahPE4lzJ2LTdJEK
P12HEeNDmYORli1oYrstTBbudYWHpchZaghJzowOu0Jf6dE3vW0Peiaj62qN
/f938LOiCvUdyDSeJvss0NvGF2fcFxtCjOc9l2+3Q38avZ/SFfCUj6uUxuQD
iOymSnYw/k611KxFFfiz+NARKwXon8/fUm88CfT8na8tfMAuW8zd1MKZA6jL
bsR3GuRPDTLQ0QM+Z8UrqX2Bz5n+Mm15wDnnejWvg71C26V6d61HUKKjxLgf
yH83RFBcGOqpx/lWjQ8gf33yrWhHmM/cT43pXAU9mw8c2zIC+sWynwrabR3o
Wp5UFgvUWbJVLs19cK+m3sNPjYH/Q4sOLXbQv1X0muJnoA/U14lIBPzii0jz
kWYClrba5h3MNoBuFfk8RvHQX1yI/6gN+YRq7Z0mvgeYz33qlGtcLdI+6fYA
QZxm2M3/3cH3MGdsRWoeq0OJ/cbe4WAXvt8Mpkelh9Anh5N6oRAHCTKjub2q
ROz2Cu3ldlxvYQWRSXsNqKBuudAf8kyft3WED+73Oo1cFIAPxCtQlEI++dbY
04tgTnEVcX3RCfZiNnS/ywb819Se7X8FeS00rX2tEO67K+m2pAr++Q1VbHkA
3vsrn+QP9/LC4hJ3uIlY2XqfdAr0JXcaXmaO/mtA9esONzWgbio2c9MftBlB
1+2V9wZNGlFne2iIDNhlXa476hPQG3exdryB+0rUKxu2d61gt5XuxmkvjqLK
GFfGS5bliNbHLjwa6INlUCGr6iganaBVGwe9ycmXDvQDLhc45/n3zRgSfaH1
xcCqHF2lYHcPc1jBfl/8YxgL/Q3HS2m7HeBPduQt9861FSyhkjmKE/89Bqu7
1ME4yEOmJ7y8X65gD07IXSiGfis0zzGxAfC+sP6XdL8ImMC1e+xRULfC5g9n
9ZuXI8PP7y+mjxAwaTFX64dwr04Wj+u3QE7BKGPL+c0VLMpLsmhFH/qqevXV
EODDpMEnXgn+0/PXuchDcxJ9fWd8lCUuFX1TZbK7C3nVxJ652AT6JOdN4R2N
2FTEs8ZwLcScgJknjqg9l5hEv4v01L4CnyiD68ftIH+uxpH8h0Ge7kes3ORA
f/TaHvUs1Qo2Vth9jw7k1zN2O34Y9KO47PH5CfSZjvIeV0ySxlCdedZmkUEK
el8rWSoEevM4uat6BfoqTsd9Xz8BH69vkREugJOMuxVDQJ+TUw6iCiDnMU4x
OT6Q/w+dL7sD+LO+0saoMNBvvLJ90wp2L43UT8kGPRSub8UoxRciNetMn2B6
Isb+98rHnPeDSMFQ4MQq0E8aFhF8wM9dbbfOuNwdRJYXKUXkgL6+j9DwEnCX
OkvdLojr9PRXTIfhXIbyBu4T1CQsfZb7Cb7/9q3hvt8CoIdIR76wpS2Id7oK
tnGI04ZQNi83oPf40DrSHk/E7klGshzDf780rmXqAfSmP5yUXcD/Ja/E0/KP
DKCjHAwN4mAvi6IkHkk4l1JsqBPfB2JZw8t+1QLqnk7/963vREyjZ0O1HOIi
zqhQ3wz4U1xuxIKsSdiJmg+13uD/zjnvhaOAv1GTZpmTPgkj43HqvgR5+GGI
P/19uG9bcLbUdDUJC3xAZSIHeXN/xsx6QWwh2t9Ox7BcQMJQ6eLaP+ATd+Xr
bSGQ58+dUod2jIRF7p0KjQJ8gPvE0DWwo3jYyJsNThLGlTmsOQB8pLQprzKA
nKe9mN6ExpAwnZITp/IBL02Nq6gDP7epnImlhzo4UXk8b4mtHyXXsdaSkzWi
Ik5ZNAZxbRywslIG9/rId6/zAPQXStO875SgX9L5mb31FX+H7N+N1qI7Lai5
KJSpB+gnLwam1/H1oEdZh1tIkAfUFvNGKgA3/Rr0Kxfuey6DNjYU8vCbWy6X
+KC+pDVttlgCfleIvTOMrAt13UL/pvA6Yuj/n29LLzpW1DdSAPm27PoVjgOg
f4NEgTldqC83hv3Jf0H+yTPKtL4OfVdRtrw1vh9m/2zXsBvcV+T99pII5B9G
FRU5/HuE+OcOKZVwr5SV17/mrpAwNye1Vz9KELLLdUsYBDmbXvMzXu8gYYNl
P7K88e8UxFso/wD+W1tH4SAiYYwcl3hboZ952EiS1oM8ViIQOFYG+jRZyhCL
hD7kVYqCeCLIvyuVUJ0KfC7/oP2BvwvYdStRqDauGw1TNJuzfyRhIhnuYm+h
nyHy1N/7UduFFMsClNiA3tvGLycbzn0wzXSfqqMdedrsyHwGfONF6LsI6AP1
cxSSvoCflH288pfBdxW71f3ypxT0bxqzY4IrMamIbJtdpE91FYt78ficH9ip
6Im3iRD4225lzKiR0ypWwnhUzR76mQMBce/eQxydDrMYGpRZxaQpyPa3w7mG
7AlFHcD/2ROvmYvvVzFBihX7PagTvcuJjirAZ5umzjf67So2fUBNsR76tKYH
JqMz+LuQ6gISP4FPeat1/0vQj5+AeFA81N+SW5HicnyrWOeP+Hk2uK/UCfWc
L60d6K1x+azZHxL2hUk3whr/3ny3owzXc5N3Dz02TcLcqY3VJWzL0XuZ6YFN
8Ofw9Bu91AGr2Lb0fnZbmK+lB9T23Qa5pIM+fPa5t4ql8Qv9JAIfn/Rf5aZg
3/lAtrcf9VexWI/AQG6gf7RNwVcBuBzboawdKdCbalgzE9xXTDCpvw/krPWh
mtEgW8V+Gd6w+Ck3W+170eH5MTxuCjK7mOrBLieO+7slpSLLaY+SRrD7tuKA
IzP4Q9ANjWulQL9GnkXDptmN4lzn2D+BvcRFuF4HA73KG3HJfuFulMMfppIE
uJro8xyzr11IfenMMy/Qp9v4CA2xnYTJq3H3UUEfJT+AMU+A3zaVcoh74364
vzLUE/qJXSovevx9rYkHpQfkQW9OlZMFX6Ef804yJZYBvWSVnfoJ0Jv3zYPH
BKF/UxfJ65Z7hZD85qslXB7i+R3qU/j+3kMHk6ehHjGnsu4IgF16RT3dm7ra
0d0f5BZBoGf9Fea9FKC/FryWbAX0E3qvurYhP1TcZ16XB/2MWpjzNcO5IqMO
bMZAz3HdpGEV8tXg4KUbqiLdSNNz544X+E/Ca6XT94HPAnehXiE+X7vy9atD
vjphxj6bBnapk6wXpYN5auS/t2r4/gzuevfz62CXX3Z6hvvAXl80fO3j8Xcn
xRcDyMHujOQG6/xwr0BqDrks4O/+w3KM6xD41aJ565M3qYhTzCO1E/w5+w3d
/tqFVSydf+InE/hne+LxqcOAd9EenhIeXsU++ew5SIJd+Ow5pl1Bb8dZaB66
dq5ih21WOlrx92jTVJ6qgX5KzXWejtSsYjq0AVNWKylIVjd/swPstTU1zMC3
uIoxUP24Fwp2P7ARwT4CfH68r353s28V+/FibskZcO7E3nih2GLkt8/U7DfI
s5ew7HxBfraa+FvSBH+PUkkoefl0EcTLUbFH30AeabufQV9Bn5QWVbKqEHdj
l+Zy+kD+k0bXxP2hjmi9EWCpAj5PLfPb94Gf64+sGWD4u20KtWb2IP/ECY6a
XoivixIqZd4LKYhS9y7FCZBTlr7NF98vFOOXeKwO/Oeg6rk7/XAvYmd6lS7Q
Y7pT4z/BvuTDSsQUiOt3u5Miz0Gep94tnTTmhcjP/bq7NPAh3p6zo7UqRLeF
qZbD4Fy1F6R34oATfpYJtSamIqsqd6kRyD8uSKhO69cqtktL20oHergj9UOb
HeiFu+W2Bf+sYimL9y+el52tvlqxR/8O5FlTDldKW1nF7KwXY5SB3sbGWoAP
8vxLt6d3pzRXMffTrp9JwD9KZfzXR4jTyxVqdj8hv4lyzf0TAn16ELyqf0Id
Kbk0/kKGbhWbPdsbUgDyN2+/LrMA/JSGQaoS+EkeJWdQGeB3f3RoXYM8ELAx
U/Mf5M9ZzvghGfw9sBA3hfPQ3wZT5xY9gDyZ+y4DeYCeiwWlLs2DfX/XlbWY
ZK9iZxcr+wXh3Ka9Zf804HOurqmYHvxTuy2u5RbQPzGSqXaBeeoK9ylvT6g7
h6mKauQhj5H9fHwjGfrWfbWjpoq/VjCj9zNZzECvFM+ftAfzoPexxOQL40Ts
bJwhywGgN9pVo3QYGkCy6a+rPKDeWR0q7tMH+U9l8USlW44gxwB2i7Mw380n
pHq8AD/Jol5qHQH+pktX/Vagj1pgeGdLAvrnPzPN7GPGUGn7DuUi9GknJcLZ
B+G+f8+7P2e6PYaMa0VvCQIePlUodt4tFc3EJNzYlzCGwiZKrrEBXtChxuoG
8bWgkClXCv2vS2hkdzT0dYe5dzbXwV5anhXlN+Fc+cDuGAMBIvbBhvVpK9gX
c1djI48fQ3r+BpUfoJ8vGe3jtwX61eKBmqmCMSTebIRtAh/+sXkpfL8xDZUg
BQHm1tFegvV76ItK76eWkEA/Cyfvblm296KJ+MkjlJdImLAshbce0I83tQ3k
g96qfL/cPbsNfZf0JX1T8BOStNfOkXND6P6iWXNTAhFT4904VwL0pwQNdY3B
LgfSDBe+QV+3cL3pSTjgJ50ejN01H0SfyU86GEK/oSzgJCwO+qf5/ljRdX4U
HZ+znvkNesgie2KH//89QSiGSwHuRbonKEuC/p/sUaQhG9S7237vrJKhL1bU
8tGZf7CCCbDJfE0E/ccbMF7B96NdnbhH4rAgYNFcG0+W8e+LA3fqTOKnUK9F
4BpFyTIWzW0oywl2HBFwielsH0f0LG2GITBHKB50n1IEPlzUjiU7beNIK0s5
wpx6BetOE2ZeA31iGRx5RKC/qPD9es5hmFs9osOtAH8Z/Muy0WASeSTd8FaF
/r+eW3n/SeBjattzt1V7EsX5pkzv+hCwhzm3HlqAP9/+4xy8C3KmpkVs2tsS
MO8f5IRs4ONxkLxxf8IU8n8R8Ofel2Xs+qWYC1rQV8gGPUxIhDo+/OohTW4E
5HnNqdEoyPNxugoLlJ9aENdZB4oByP9kj+YfpH5uQZdozVgkIF6Il6NH2gCX
euUaEgx9QzKfcFk2zH0cx/K/yfaSMF7zvqs38f8frfDbb8Lcd0pga7MM6HXS
2lwM7jWiQw9FX5RDfrALqWxGgAvyVZ7A32HIqGIovQ74jb8FDRmJ0P8fbvqB
z+F2S3G8y8DfIEHvbyzImSUsQPUG6tewCOfsRaAXzXyyFQz+Zpb2MHEG+OjG
yDIh6EPuGqo8jwbcSi8sKQjuFUC5bXoW5O/WEPshBvnEbyd2lBr0EJPCGrZu
3oI67vxSUwL5mWJ2dx9DvNh3H188BX0xR+ir/ibo/3nXhEQEAb/0dPDWfzA3
nK4w6LaBOUW2ON2mHX9f6BjLvXeAn5j0r/GEPpYz9HGHKOif62nficX2QeTD
WWSlBP55aMl47jTYseeQU3Zw8SCisskUvgH4kOaHcTeIuzvixTy/W3tRBxqQ
lXUgYewf1V+3AM5jtOuUAXHhx5p7ai6ZiJl7cWTTgh5+2+QxCsB9P6lFb+yy
kLDHS3J/Jgwn0bbbja9k4A/NcyvnW8nmsXuTn3a8YN6UMWdJlAK85IbL38ez
c9iC9c8m265xVGu5QlS9N4W+kDGNZJHPY2EX6wpDzadQZ3DwBXx/p5kjZcwr
wHt/5Up/A3/6WEZv7Ar+TM/+5WHdwBymZn1W5hv+OyIhaY9ojXHkneZxqwvo
OdPPfFaGc9/nLSbGgT8nfpIxagZ5MtkaGamAvjfznpdL5iQS9alIO78wiz0a
uWpUDXpzvuNK5GKaRjWf+VOOWi9j5P7p/MWgN7XeguOmh6ZRI8HwtwjgOjIX
M4yBD3ahMdgM7jUZmagpv28OcyQplorNTSLK04cCaSHv9RUtvErnXMCkPKhV
eZOmkPLbN+9dAF/+61GmGTGPHfQkvyyC/9+COqzxNdzL3ZFK9smHeQwLtnmH
6y35lZ7kyeff0e0yq6vlHAtYiUX5+0c9E2i7Rj3wLtBzZlvnnAC8z+Zp6hTM
45YHJz0egd7EvxpR1zkuYNfu2yv2wfzebF0sQNY1gfT6f/wnAPQN5rXdJSC/
f/kXDrf+EXRh1OeANcjpU7B+KA7O1UtXR2yQz8lYszw97i1gI57cO0eBf8jf
/f+tek+iUVonzQCQM3SAxu056E3J6exU0/wsonRUekYvs4hJvFRKjYd8pc69
l9kyN4v+fGbz85NcxIwsXRfx/FP/8Hl/L3EWCSaVJ/+WWMS8hD+mfwH6ZtPw
DnyPVLXvYfWn4ovY675/PQUoFfEMr8j0Af+vbXzf/YD+wnrEpWMQF1nSxwjL
7TNo87uZpgfXEmbRLkKP92/+NEuFLoB73+wZUzu0hLV8TZwKB7wvicXeo3MW
KT88VvYc5KGLKFCuB/ue/Ttyvix0BlmFLH6Ox78PdUv5jO9zpg1s/EP9eAZ9
yQsTL7u+hHXsb7L+C3GxZ2zTn942g6Tq4t/m8C1hZ68zdhwD/umMZ0pPLcyi
yb4mbVaeReyFY8flDrhXkpvnVvLeHNK0iBaOllrAYo72fF8D/m9Ds6pi8N+T
a72WjuNZwByadyQGQD8PtNeK6wDnSTuTKyq7gOkUlF7ShPrCY3VD5kb9FPLW
OaKP/z+L7u97tUdAX/O3nulJ8TQiVK/we2wtYTtzJkc+4HVNyFH6S9E0Kjty
uYBmfQl7K01bKgtyXlU2Xzv5YwpN8TNIPAA+H07fvDQHfews0+PZMKAXCikt
PT+5hFlq6Ra8Av5hES9tz8bMoO+TeudEQD96OvWnLzaMINrqfffmoK49aovl
pQR88b/bot3WI+hPyRF6AuC/hnrDZC2XMHXab1x8NiPozc1TVyeJUN8r1HN0
gb5er3YnGPD87Av7LaEfYLVht4jeXcJ6p1XJTyaNIc4xc0IS9C28eqhKFPhQ
Sjt38ADuotwjRvF1BLnRUoZtgV2YpCJ/b0JczS7teebDuc86jmX8a13EVinl
CVw/xtDB/WkJK8BH29/161U4l7ZyX+KrV+NofwuD7CD4ueH9Y1b/gT8sTDSa
N4Gf5+ofIuJ7iu+EKPGcQotYkprDc0/A124c0u3SG0M5io+2VcEPSXVX3M+8
GUPbDowXJUPG0YLVn3YJ4EP863joP4MxZORuZ8QH8ThuFZRtAPSmL5piWOG+
718wbXoCrvc2meIy8Dcts+xPlJtEJh8uHLwAeqBI0POaBvpjpnY0G5AnJboe
L+HfZdak3khZV1/CjIWynbSfTSJWTXHyNMC38/9up8QtYil5FP2jEL+RAa0p
KRXDiC3lcOIy8DlSPkHecnQKvS37ViwB/cyidsdnQcCr8/Isx4G+348yKx/f
F8DSKbjHuYT1sTCFaEJ+uO9FvqoDePWFKrVNfdCDL1LWAFyyhHGBL30A5bab
UQUDn9SqnIJoiUkUHXxU6RbQ/3K3XZUGPXd99L9aAfL3X16r+gN49phWgXXb
EragkcR3FHAW+iA3yzNDCOPbx+8A9LsKMxcmgb8Ps3QCvrfovJf7iGrPAnaG
zfVCK8hpNnngxinQz5HcqwuJVHDf8qUmfvy9wVR/y0SwV+zcudf5MgsYQfkk
WYL/d2RQP33xKuTnivvPE7sg74mcEJOxAz95LJSbcWphEsnqBXGzAk5P9rfQ
D/xq8wrR7x7Qb1TGpcRC3mOxz/uOwO7OXTIc9OAnvpsT/wq5F7H3ZytVbIGe
JtM6zxzsGH3b6nAN4D4lnxmCwL5zDewpD2UnkSXnbcaD4A9CqkdtPAC/+8I8
Lxn4/5MvmGkA+S91WYt4Q786K+78sV58EQX8kHAWzJ/FVDZkJtkBJ/6O9W4n
W0QEIUfWy1CnRIJTKpsArzYZZTLjWEAGgS6/v0M9rSjsiY2B/FCqRnbX4988
Wrj2Y/wkxTx2Zv1RURbkmSTKUxXM15fQ8Za8O8OPZ7CSkMz4Xeg/vZb53y+p
L6GHFwwMuLRmsMfj5E/PQX5w/08t593BJfSX3Yv7ascMxuRYSN8P56YNjnaU
LC8i5yjKMUHAs69PHaUH/vtjUxeTJ5ZQv/xekVnxNJYv6V3dBvxbDc9+v1W7
hOKMB1VqAddaTiRjxPeLWjk45JxbRNpztpHdPbMYh1Vr9zz+rsXHphiIZ5QU
l7EU+GoGowv7clIO8vzWbKz5AOcSMhKumqmAcze/M9wdhvzm8S5W0XltCXGc
Dw4MAf401+oEP0G+siLQdbwEPnr2b8UoYmcw7bu6MvjvWnO6czqnfy2hvSSq
CLWSaWzgnJJIVlUxEsw2leMCfQattVJIQ//gZKCWuw1yXjfe+DDGvYB4nmHN
hoA3dpRcFAP9FHkuOltyLyKyhxqxP8EuVblF66zXmtCD2wE3EyEPk0W3LciA
P9vcfhn8G/rA+K7sN9+gHiVeHnHNCVjERp4fzXoBuOGDrxfWWqfR+pFfKTZA
v8fw7WZbYi1y+U9FwhfoiUduqQVCfgic4jfwAty3tMjktessok18k+YGcfc0
drraC/rJ8+feUo1B3tbsOihOZbqEBQg9osP/D/vtukZZJ9TfbP6mpcq+BSz/
vuxJCeBz6WEv05HiOaT42dH7Afg/C4PvHw3AG8wHKvVYZlCB0D3tccir0h6B
08WAn3ploQv2Q/y6SSW0sUvYqaNTFcmgt8g8L2EnqFM7rt4dg8DHQ9YhJxT8
UJ49c8SUfB4Jcew7Lr03j13nu9FSCf5z9TITH/vsHLLdt9nMBf1GtLXI4l/w
k07Hl6eeQH1P40ws8CJfxEIFZvSNgf7IuqrRnbxZZO2UEegM90W36oipUH/J
XifpDvPPo8zwj0/a2Bew7n9nXfE5tzJmjGGRax6lbVR9KAR5tBl2wrKB/po5
sY2OfQF5SA7yvj05j5FKihyNgX7XuPYS/j5Pe+Sxhfxj8xi5aAV3Fh5fwvo3
DUD/g19ofA0Ii9hs9VtCI8gplBHlrqY5g4LFlXaCQD/773WVhQJe9MLv5iro
v3g6T2u1dgkrm9Ge5KBKQ22qVC6fIK6dxnZ2AsBPpvR20w9A3/7sa2eTisQi
EtAV1k8hzWJx4zY+7eDPBqfr37RBXHyP0JP9sTiL2e5VvUoAvz1Pn/3T+OIi
8trTCHwNfDq/n4h7D/T1IuKkXuBDrxF2InZ+FkunCKkdB/pvWcbXnGUW0Be6
O6GB4Le+l3Nj+4F+1SW8dVhyAQXfzk+3gH44vETwOi/Qf9G+Mr6Pbwk972j9
+6h9BrOWm/VgAz/PDlqLtYO42G6+nXTswDyWRrn3jwHww7xUdbep5xFDi//d
/8COKYp8YRS2PajyOvdBKsjzolweFB0wp1dQly+pd/aioc7Edvw9fa1N5onq
hhWMbiClrQHmnAhRziQG1IdmHf4+FYZ5uZ+PtnXNawotmvpL0SR0I6NeqbZw
vN+I9v8WAHm+5QzjK0rA95yY3pZdhDrIv7iG5/9SKoGQZOFudFplWmgH7NJq
rjeoCfzb9pcvtcC8zxYu1c5mvIJdF++UH6rpQ+cLZ05Tgzzv/13WF4Bzz+yS
2FNgjiq59lQ7pK0XlbhfTz4M9O9XRor6Ad9hyHuubd2D/DaoA8rhXtt3SNRf
Xkyhg56aafh+7U0PwQgJ6KNYHqSfOnd+Ci0JudIt7jWgsknNA7VWy5iP8CeG
lzC/7Ge6N1sSV4viS53LygyXsS4Z3zO2gOdqTarOwLx5vq9otFxgGWu0+OOp
3DuJDjCFXF+GeTMwPGf8EvBvb904lgP04w4YMcwC5lY5H2rWOfA3uZsDbNAP
vHLPtdKG+dhLX2dbKXEZ+3pXZuw91M12ufWVny7tiC3AeHQX5CnaSS04DXo7
lBKCtCxq0IylMMoD/IThgTvBQH9Q//fNdZjv9t3edzZCcxm70RK7wQ706Sya
OsWAH4k6Ih8Qs4Q9X1nVxeeXtx62z3Tju5HLubKE7V9L2DXp9bY6mAe5WO43
YkAvHkwTdxr4Z6caPrKKnkC0gzXFL4BeaOgUnRsuj5V99Gmo9yXaT2TnYA5l
N8s5UEYgYOkaSYtPxIaQs+cHzSjwK3OvJ3NDvgSs4JzetibFAPLojlB+CDhx
mP2c5i8CppNYtL9bcgjJjxH1Tuz2I4EnzCe/AT3fJ9KJA//60evSfK4R6H/6
//3j6Ae8zFigR4oS7E798nspnC9ImHqQ6EPA9MP2fjqC3zLnE13w/RDnoj66
XrQlYDzxzMgU/27oIuv2pMUIunKrQL703zJ27ZGvA/6egOvjCLr2gyPo38QZ
ylHgMxtQROm0bwR9i8shRYG/ifUoVF96RsAq+ltN8O9h73f0HkoAPDI69h8T
8K9v4XDLg/5ZyM55Tfx6L+LmsOU+C3Ky6moS86WGkJy4d911ON9HRz3yFfDn
+RWzgX/P9XT2E/slmNPjt/QZukBvVleeN1Fq9qICPQXa99AXMa4byOkDHzI+
mgueoLenR0xYnkHfFWV3IHsOcH5aUZMarxFk9vyQcAv4LdGOZ2gZ/Dz5HIN3
E/QrNXdftkSYl6O6PfPyUGnQc1hnDe4/vJrK5wstytEtit6Rq37LWOaFScE0
oGenC2VyBD8P3djI+ERHwDZE+Y41tMI8v2hx5zJZI6Kp43sxCueuDLh8bIS+
qmJmQ68G/P9Jm8f9etYVTDrfbZ8f/t6sTt/jf78a0OVvSbFKQP+50p1tB/pG
SiWl3n7gU1suJmsMesihfe53C/o6bdVlW/z3G+N31+dLRwhYrehwrg7+fZNr
yq3ImFR0+ciovmXxMnZF5A8v/p2+pV+l7HRcIVqP4w601CFgsSfWfG2A/pMr
1bUfsYXotEZUIzF1GTub5i51Zt8kmvhZco0E9319O5IUCfK0jF4kk30+geis
JHdm4b407afVU0AeUnpy2zHgX7DOMqcP+lRj3DtVPLqM/fcw39QF5H9QTbvJ
AnHak72gqqZIwN6tdQ8nfR9D17PfzJ6FeMkR9nepBT75nxpG54Ce+Ul8pEBH
B5JLqGcf3VrGvg8H1bFD/1nMeOYD/nuPlzuJV6nlCJhW+tNAW5j392ck7e7F
daNSsdygo2nLGFmxguUk6MfqZrgBR3knqjxD5U4F8v93s3tyD/hc/ZCZU9ze
gRRdPZyeRRCw6uuq9ezho4hO6+IxAv7/ymq5ui9A71EV51FK+o7Yb3FU74Ke
y/cZUm+BnJzP7yvi31e2559fwvdfnszP8boM8zjjc98SNYirEUZC9APvSUTI
1pPMTID+WXe7ygXiVHpLNSmDaQrdOFXmaQ31PVF8gT0c4v1keI3ZMPTVGr9H
QmMh/3u4dZYdgDjlimprfAX3i3G0m3oLcwT7Z7d9dnBuk8cjJw/xSST294Xl
E6D338jreQfxQsqXOfEF6FlUH61xQl34pkLXtFI1jMJDHkzjvx8jNctWsUF/
nvqbdbiAbQDtmVp2VIM/Mi0LXHaGfKuQeeHZBZCf1SZ7yCtuDKUtZK80rC1h
Qd5aOvOA17cuW8+OjaDjpRepuCCPTQyHkeYgPr/buO+vLBhDxyRGqfwA5zas
HuQFeYqiCiJzm8dRZbCjdQPIecL6tQkzez/SWeoPcQF5vn57mW8LOLl1RMpB
yCfe5XHiRaA37xf2Uc4RS9g7Gp5zYoDTnip7cgHml3HVrcyHcC+7l3f8m0uG
kOGEzLM7EO80ZNZ/TeFc3qaLl0shjhosZpv+QV1TrI4f3pFbxsbILoc1wnnM
grev0QP++awbHR/wf+QyT/kK/HZaBzt3gLUf8VRvi/OAPM99x/TnIH79fvKw
70D+jNVok0gCnOx6VJUy8D+mknNFc6UHPXJOproP51Ia/U3lnZtEi0GKxumQ
n16sF4ev4+9rJdmnfYS8MaaRf+Mp4DzeH4q0uxexO5c17Qrlx1F8rttVAcCx
4d+hf4HP43qqipFCmKN3hazn8D1iDQ4mhoCfS/joWDM4gurf3a+7CHbQVyIs
RIC9CrRdmkdgHi9oqHnXhf/+yL3N6b8fS5i4banzd/DzIcb12A8sA+g8gTpD
DehZY0s3n0C+jeIacSotGkIH3mpH6gF/gdcFTI9AzwYyNf6p+P4tJ7fjh8aW
sRYbqhtBYN8k12mty4AbSj3/+MF+GYtT47Chh3pBMyuqGi07jvbV0qjJAv+w
0XfUZ0g9yKX7rKcI+HPQubc0RcCfbE1zowT83+MT19w22Av5Pq+Jg/yZTp5D
MgI/ifItizQA+b9lOdkYHSRgNWbT7ESoQ7Q8TV/sQQ8PL21sJ0DdyYo6/4gB
6ogIU4/VO7CLzWFG3WDg4+a/b50A8itkptPE4POpk46MrPwyZm3QrFUMeYBr
i907EuxefflTXz/kpWnOQ3fx967TRaS1g4D/D9bNmAC4lztxv2LMYRLqV/3S
dR76rq6uC2b21i1Y3kDu+TNKJFRKeoGNQn5w+qNbK0XeiG1q/5pOJhLR1lul
ww/Bjj+tn3aGAc7Wsk2k+EREy8k/Xh4GfLafbuvO9RasS28x2bSUiKTZPBIv
futF12pLn0pZtWCanzSOOJUQUW63xuwToGd4dk1XF86toQ/iFtQmIhnDStWf
UM8nbthb81m2YLtU+XzrL4G/x5cwU5D/zr7ZEjGyRoxyQW06Hs61jyZuFh/p
R+qH4gm4PCovmOL5ARfsipywhv7h5lN2StM/tdhhV97HmlwkZPcwaFMd9HNp
+S5jV3wtNvHl9enIL0R03MfRSRvs/5iZ3f5aYi12noWlt6xiBY0yLUQzw7nc
rVI8ofHdmPc2wY9AQ0Q65Zc+9AN+ZmDFrKa9A+M/kn+2KXEFuRy0TytNG0D9
D2r7JBK6MWc6oX8/ATfMcn8xITqEEv29eQ52dGBMf4i9q04k5PrxgOgY6P9M
Ut6TUDj3YvE4e4YjEQ0/kbyiDHLmi1ZlnQf+/3imtM7CvRZ4CXTP2HvQfBVz
egLwSXivY3eDh4h0zb5aSwJ91ViweTPISRN0UbXafAUNvy/0uQl+uHXtQtxl
0H/K3OBj76QVNOZ5h4kS/I6xY0D+qVYjdsr30mIjyNlB9lhL99EwquUTG1UG
+sIs8qBJd7hv7FuKTfAH3t6GgBK4lzqXT8UZkCd153YBvpcx64PiE8a1Tiz1
wlzT/WYiepVJQwn6Qt11qjcpQM7y7wyHBS+RELPow6TPICeLwLTVBatyjDya
SrhTn4R6BsNm8L02TGpOCWnxhdhE/faSxTgRURW8y1QEPbc73ea1tCzHpLpG
fW9vE9HqqUtt+J7KsAOLXxSAfoPsWcNIAQndmyx/jf8eu1r+3C3qxEKsfHvS
UhSR0CEuClF+kGffmfRR7/hUTNQCFeP7a+5cdRzG99fsddOF+SakYmMPyI8M
xZBQ4z/W75+hzr549nGYHs790Gd4PIyahOK/yfJbgl+xsbyLkwL6+BvvXW6q
EZHXh/gTgRDXXPHTjqfBjihoJbIA7PgqdeddHvRvj6WOheQDH63csjwEcTFe
9CfyOOSrWhXK4BsJtdjgVc+YXMC12Bh78gYH0FWe590GoJ9G8rvbK5MrKJV/
SnIB8oBXuYEhD8QLYt81deIkoqnpUtc/cK6LyNlQK4pGbH/rk9wUsK8ThQr9
ENBvr61PGpR0YAXP0+6Rp6yg/VIOOdKQF4XFNS5fBfpq1pdOoV0ryGuwplEH
cMvnFs5PQP5eZotnAgQCCva4aYff69p6FENGRy9W1WPRffkZASluFQ4oAf+S
edMbvrv9GG+CNU074O0ZToyd5CNoyFR9+l97LxbZffbj518ElCNvq47neflf
7z5/JRvAjuwPj3c1hvgyNdmTAFw2naJvrK0X879vf/8m8BF3Fv9FhHhpdfUS
2wR6ddvcuBiVFTSV81zhCeiz7+vp6nLw86rH+1Svwn2rUg4SroFdbq/vI4Sa
9GBHDd/xv4f49T25e7wJ7DhzRr2NsNePvQkgv3Qd4uVauX4LFfjDoOd//WQg
p8NH9fusjSsoo0gxlgr8wW/RLLwfcKEhgmQL8O/aa/Q3BXxqF6t4VNaH2b7O
MpXD9zjPvb301bgHyXje8eUmH8B+7gRo3m+B+2480qaHuOsMtzTYB/Fyz2Oc
ZhbuxWFT9YsT4u7Ww32/k5V6MaKcy2g5xN2uaj2yB3k+FGTWv0ofwOjEHuQy
+i8jr3hMVxj0fIdNIM3MagRr6RyWHzxIQAVDNjY9gJdjd3RqJIawi3GlRWxA
r8PIqnIfrzshIhXHAfdLSL6gZrOMTjS/DsD//lw8KUZdmDeEHbF+6HQV8K/q
KWYVuVCXni7ynLMewXz8nl055EtAXTOaBTxg977Pg+0F+HfxTGuxs3+XUWCk
u5su+MnsxJCEA8UAFj38onYI8J+RnAwBkD/FvaW1r9mMYAllzo/3AR/PB3Il
bWAX93wF30OSQ5ja7aBcDdAD3VsjQUbAl1/efT9wZgiTSUbd6bYEZCD5XzsD
yMlFPtBNDf7mYEEvdwvoh66RyViEjqIMj6v2hvj3qj39uh1py2i03eJTAvQv
2jobZDB3YvyRX12k4F7uv5YjPkN9vHe861DvbA8mX9937qL1MvrDf2g9MnIC
zSjxBR4FPhat0x/+c1hGxNO3R9OhDzyy88DhCPjboblz/m5jy2jOUpR3E/CU
sYh0evydGXOyqrfAP9rvaxBT9hhKUJJTbwT9FHguq30E/vLqvwhzMuOo41OI
I8xv2MfYNZd8OQIyEahmNoS+wvHwB3omODf84QGv+oQV9MfTdxbX84X7SQd4
Ojswmzz7d9nHVlBT+kZTCcyhVz/XybND/j/aQvjNC+c2S/6yZu4fQT0V6sRP
YF9jSdtHbeCHfp9nfqV86kOS55Tpz4HexHQOfyGCPL8dW2bx/eOFSRz0EqwD
WN3tQs5uONfCfPZCJ+A/7WOVX0MeIyatt+N7wM3ur/jie8Blyh7n3oM8ya2n
S4PvnbTM4K3D+cQ/PhuNvXiL3XPcvcgHeNTXFBd8j/lLrdeZB4GPXpb1f6eD
oQ5a1c7ge+HrxHRd1SE/c4vwS/RAHvAXc9adBf6FTWeT2BIKsYCbM2VqdGDf
zlnCCehP5e8xluhB/nEbjRKzOE9AuYVmvAbQJ3cvjwmcgPw5u7d8XwL8PHCC
glQZP4Ueyqy66uPfsSbfpKQD/fwxfzBHA3PePaNDRvM3a7Ck2oQ/xwEXfZtO
oRIwhR64kze8hXx7hKPGGrsJeSzpGNtF6Je5Lr0ivwryOJUMV4yBXxmOT9P9
jptC3kP11RYgv0nB06HLzwnohn3z2Uq3CdTC6zY8B3xsT0a9McH3y5unreP7
uFONY2wcQZ6C5fgFfO/824k/7qwwv4wmDxnyAv+cZw9bvCHe05RiT7J6jqDX
v30dfKCfSWJSfOAM+qzUaCZaKI+i3xkrIeHA/0PlZ+90yHvkqj+Th0Cfd/m9
n5dA37JLP3VC5sEKUopjo8Wgv7vaK1VdZl2OLV73U7wIfJRVuZfj50aRk4Rn
WzTIk1F4s+N8CeQlKjMHDPRPXFKYHgA+85TRV3JBzuIdi0R7iBf25Oqcr/MN
mJWjVZL5KAHpqUq8+QrxVeWjTlQB/Zv2swjwv1lBDs9PvD+mBfPUyVe1k3Av
ZkbNfl4GImJ8V+2L7wGPNna45w64wCG+DXw/e0ZWQSO+n91krUfUEfwqQaQ1
1/PXCvpgSI2aIV9du9x9KwnkfFkoFa+6NoWUi81IHGBHKzb25/QdM5h60O3h
dopplPSSivtd8TQ6zZfjhv+dX57V5p1nyTQquRP2yRX8IegHx9RnlhmM/aVA
88HSaVQlYctmQT6NrHzT+S4D/aewZG9awAdNPXxSgc+ruH3cBymmMbM+e11L
CwKSaPrAtQH+pm6nql0Hco6vdAdKgN2TGs+P0WlMIr+SdM8A8PMfXTM3yYqX
EYtW3dgS/r7XvScvuRKhf5D4V43v1+Z6IemB79eOtvi9zgv0Kdxxr/G9eyez
k+/he/c6rxOefwRc4FJoC77/rl79cAu+N/zRVnmEMehtet9yRcz2MvroS/mW
GebcQ9ZvPvBBfnj4qd//wGUCOs9QdCAT7JX7icBHCf3AC5q5keP4nveUcdGh
3jF0TzZe4h/0XZeTqhUdAZffcjA4NPcdZSqm50YAfQMdOb1gJAFpU/h+vwRx
7dhGphoN9Jr7rGOSwB+u/VQY4ABc4bXs5ye5nVjCb+FlfB+6kcHPYXwfevlq
Rgzep9ke/POeLWkZJTVM7M+DOArW9KzF+3mL03clOiD/cM7YsV0C/Oyj3CHq
x+3YNCXZ099Wy8ibjTbrlsEkWnEtP6wL+Y3y3EYNO8SpJ21U2lD3JAp9kHdm
C/pPltKiC/dZV9Cr03XfPcDPjzLcVTgLfYsnPT9zAsg5opayufFtHP3XXJx1
HPr/l5K1r15A3o4ZlDv8Eez475a5uCr+ztJji4B0kEdT0/d+ndQUavtgVj4P
eOuXrb/HoE7tdx1v/Q/0/OaTqE4h8BGTP9J0B/x/gPaORwzEHbvO4i9jmEfk
EzVWBKGf7PnRoT3f2oGEyXYHeiCOHjYPlrt2ktBCC1lHa1sHCnZ6eu+pHcIi
rHS22wCfLmeKj1jtRDox9BmV4OfnInL4HkSQEKF39Gd8Rweq2TnaLAv3Wg0b
O9IH9Ld3RR10KtuR78xR7WDIA1qfYgYHAP+RKPvzEF83et7Dri8N/hM0zsB7
Ff9uueULzZHYVBTYrM8aAfqcnzL8iYDe7Fq8fDjgE2+uPy7n68YMbod+vg44
o7ynM9+XLiQ8rnsYz0vhXHU7Nfheh4O2nsYWLWiuw92RGfjEmT+42pVIQte+
Li/ZAP7gS+W+PNBDSX+4iBQrCS1+tskSAj2oCRhlv2zrwDLonA0bgI9Yifso
/rtuf1YXywygv3WSY9cS5oIeFprrb0A/Qx4S71WgDk6f0OY9Df7/llU48B3o
Z/PhFn0qvq9Bl8AUCvPpwxJ6Hn6rFqRoMf5rHfAr7xgCRkF+BeEknksZLWj9
YGDiRbDX3bj8famAO4wd0HOybEH6vvKXr8FcUxFmoq42TUL13mce9ZmXoyBS
WtY5uJfx7C9lWr5VRNbJKOttVY6sr9xOMLdpwfjVRt7cI1tF/4VJ/TaKq0Xp
55wjj4P8DaVBd5uB/8hd0SXf+FqkErL3KbWqHTOLOmlPwuU50vR7QBkh7L+x
V/h7TQMLhobbMquoObfDki6+EI2uZ3lwQ1zMlQwKazitImJ66OVFwDdeLfW6
g92ZIiKTK/VX0YvJ7mp9i3Kkzp32qQD8U7VRrJLnDwl9Zv+nVgn0mfKee5Rd
HdjIiiJlFZz7jU5FBv89anUf24mlH50YE53IwaMBq0g4KlMlBfD5eO5nmuA/
njcmHI9IryLqL7NvbED+xReBV+hAb5OfxL5G31tF4XE31IsBP+X3JfET0D/P
lfFQfb+K3G4kHz0F/uN0JT0Of9+ptN/syONOkFMm+PnrmFQU+WcjQxrqgusx
/7Pv3q6ijZAty7TYQkSj6fdBBeJiUb/7Zp3qKlq98N+pvLhUpC6kmukKej6H
nRn9z3cVMVIX7mcB/rlqKQdfwX2fyfDlX8DjyI4bBccVIs/I1wvdX7qwH9vT
8aFEyJOdBsdNyBqRld6PVXHoc/xue3r7gf+oufT14/tG337eSPKk68dI4mYe
G5CHqapQNb16C8LI/0x3Qz/mlqxJdIV5vw9lr0sk1KJfZ5/XcEIfe7J7rvwC
FwmdjnfiqgG7Y5E/E2mBvi5gMe0g/veNef4q1d+1KCqNU18c+j1fQxH5Cfw9
tXTlAB/gc4Cmgz8ysRvr+Xidk1eJhLjLNv4eAnl6lph5o8BvkbOIdi/McYfd
W8q/gX8+/reajKB/K7/azG+iRUQJP41Z+K1b0LVbkkmBIM+Aec2hMRoiOsRB
RdCEeBlQCzTJhr6UNzrz6zj0DzfJFyQiAadLyTOogP55TbBcORjfM4sxvpot
6kAMYmXTxcA/wrrZMQbktyxWr6eGODLzLM84WNuL9YaQD+cAnw86txcJENcy
o5cExV2GsUjdlKbvySvolrBzAv5djyqZ4cWj0M9zXeptvQnzpg2H6Kwo4I9l
WLq6oJ8fwlR4jPB+Q/eHspxmI0o+qTYwAXPKf9ZPjEagXmj5tfb8/deAinj8
FURBfuZCEwtLmDebDtvI3QG9PeZTtRYB/hzNq/biMEf7k48pMAO+dvxjvQHw
P873TioD7Bibnv1XHvyz59Ss2BLLALbOxlpyr4SIUqUsLA7Avc6vaGjJgz9E
itnzHYf8/MyeceAb2LErZijkIsS7omlGlyXkWyM2rWdHQf5nyvs+r0E9rU8r
/VpfQEK+B/d/ewDxtfB2/ulJsKPoYLhffQwJWS7E35WGvOEuK8sC8xmmr0Fv
OAj+KRwuYckM9vUoe2fqndmCLfAp6r0BfPZfiDgP6EFSJ0XvI9QvF3pR3gRH
sCNqEuuAfFgdddWXDvzKjI5oIgR2qTw5YibR3oEe3VB2VeDowWxoy91ZQH4s
9ov8EMTXoufTrX44N2eHeQvfW+0m+Wcb31t9lN/ikHZiIaa/9kNFH/I/1678
4SvgD+EdeaNF0LcUULNJ7ZddRes2xafx/zNWaVC9TIU8/8M2hLcb4tGFPXZe
AfytO5qYdx36lpNVbjTaqcsoMo5HoiShGyk58lxm7hrHnjhnV4fB/FIpwkml
APPpY06/KpWEMezzpMZvU6izcfTWt8+29aKinxWji/FjmDjTR6bXUGcPpDzR
agdcUmNz6bvsOOZumHafBep7RXld8M+ZHvTe49azgo5x7DO9ilskzH0iZ19o
nob5uvkbl9s/8J+oXWkvGajvfeT/PQqGcwdSBee0Xo1iXnXytt2AX22p/9h0
pRcpOfS74HvcThYobByFcxU4vM/LAn3mKYrjgVETmAT3CJse5NvgYmLjXbA7
cenpxSegt/pExy/ikH/YmavsnfcaEG9+9OFPoLcyvqsZeZDHMmaaPFXw72eN
dCTOQp/TwHFjRhvyIe3P9ges4IfJk+cFG4CefFPkiAHUl3FWBd0psG+52YGK
HMiHQ7ux++9DHWnVUGubMW9B+53Ybc0hH4qZk+ezQt3Z56kjehr0f5L694yW
TTk2nEQ6FgB9vjSb8L61uG6Ue4Sw77b4EPYjjyTGSSCgmDu2B9tBP/v73ofa
QVwshXOyPjReQZ2y84cPgZ6j0neP00F8aZ7H2ipBP0f3j0jyA73lApVmOcUI
dsPKYEcO8J7d47ff/ulHyP1HjCjkB915lbabLQQkWMyVJAV6qzG7rLRtOYKt
HTuQxQJz8X8mTdQ8e/2IJ+UR9xuwb1DIvdAQsCNrjm7BEMzvVCfTqGlzxrBz
d90WR0H/X/aXHr/KMoBu9Iw4sCeOYes5QogT6I8EtprViQ+hwrZHLkcGRjDO
03f5tH6toi1ZIUI01IXOfi+2s+CHga8uFBgugX5oovhaIf9PuZgFfphMwg5x
hO1aAk5kn1A6N/gRXdyvKMGHvyNXOd6Pv1/Wr8gZ4QXx+/YWe0MuzEFNfi22
9tmryCB69PIixO/GjxTSR7ALdcSEtAXw6X1yXDIQ6s5YJu3cp6GPmIRpmWY3
8CFRiFDPWpYjTaHu8UPgJ/3cqvtYoZ7WfvwwfR3/PUAPtc996N/OqHw6eW4Y
6qxvFLsJyKnJW0VaBj+JOCEkVr+winSZ/vLwgDyDq2J/nUDOsmQxTw+omwzf
GQucQJ4DmPjQWfCfFrLjsvj7ejUOLwYHQR6bkqSfuRCnZVq+Dvog515CKyFj
NAmZH/v39Sbg7SsnrrD2klCR59m5AMh712rsbm5BHbc8aaDDBPjw+CmsB/LS
bwvHL/XQb3wM2dPShvzw0FWvxQb/3UJMx24w1FmfdJ0lBugHkr49froKuNxr
5nEHqO+7z1IYv0IfQp8/fOB/FF13QI5dFG8gkkpUaKMlMkpJcYt22qRFtOMj
DUJGpaSSUdqFoq3SQIOutPce2r29s6lE2t95/v35Offcc849o/e5zxNG4L14
SBL2e+9uwjzZi4z5Ip/5XZWj4xuq/0Ug4J9VeB6Q+YGMB3MmjW0Av/noYOtp
4N/fpLTa2TSK/fKa5QNK6Vja+cO+GOAXHiSdyQa8/eNE99kxOqayBYcnAT9j
sUrMg07GRYeS9qyI0HGMVdNhZ9gvuXgxvYuZinll+PWuidKwv63UZ0nA7+vY
ragxyLhVtyLl8RE6LnD8aEC8/8eQ5cM8NysVy4sdvWUiR8Obezk4xwCPjRbM
dgH5uqPj8Rj0/FM0fVRo7C1Kfu+USaeS8T0jypFn8nSs2fHE/Rvwb4dZu59o
HsWXHk+wugswcOLZkuA3gDvKZqdUt5BxZ5TGBuL7QTp/l+n9oI/ezdeMGtiX
XEXKbvVNDJwTEbfeDXB7syeqpgUU7C8prm2wk4bF9g6kDkIeYG68oWRFoeAu
9z2txHNKW85VK0AfijjMSQN7Qf/WO3FB+5uouC1FPcQwrgz59GqFJ7FQMakk
8hHnKhVf0CsoOQNx/rdm/5gU4NeEu8eJ72LM5Su+L7yZj9RPNpSogn2ECo0+
5LbS8JE9p9oOg5y53QW2FTQyzj5pVubIRMfe3D+F++FcZD4Ppnq+ouInvRI1
jmsUPOM3RdsCcXK8MfBPQzMVn05J7LsJfpjWaihWJ95DOK52P0yAhsvZhL6e
cKPguN0fntOAPxMaGUkHPX4w81x9k0fBVx31C+thvxncOROehjSYE94UE+tn
vqzumoH4PMptu2V3DA1XirlTvoIfovJ1rddBPN+fXnbnOUrHbBv+2qr1j+II
p/ddZ6Ceit1kKqgBXHVq74jHITI+SXszfQn4vI+z1AQFadgtO1hCGORf+KJN
8RNpRK8+TUVLg57HlOpE0sUoONfonzA7yAk851DfpknFJqEvLP4S32XLkDpr
Dfowv61RV26nYeuuQ+Z+IOfYq2932GG/mmfVq2OVGfjT4611fDDve0sHaGVB
X6dnvOW6/jU6jvfnU9pfQMIvKjO4iffSt2aGbv3SQMdnz6jZ8ueT8F/N4wGv
oQ/JeJjS2m/AwJee7mEUxIxgmhVbvub+VnTeTPXcEuDr1JQijzCTcFTIDV9x
mCOWNH/KjUOc3bF2IondIuOrV17KboFzVCk4KqoYRsXbpedb2kDPqo5eP2tY
V+aF5y/2RSqeOsHxSQrs2ZNyQP8KrKsslLuBDezz8mSu0TFDMv74mUWW+B2H
HLhn5BbYx1VF6b1YGRmzh6yPnAd+0ZzltqkQGpznMYpg4yieklgtdAe+/5oO
54VJGrZJ5RCPB9x676j0ZuijzkfqnHoOfpkZ9712fJmEQ98uloQB/+sr6V4f
0L/jnwdr9K1RTN0SISIO8hnz21ZygP8s/F6WFfE8/zWFQAWuetR9do/yA4jn
c6HTvzc9pODLS7wBPSAnJjLeUQjiL/XD9lc54xTcQhPw2gRy9DeNfCLi//Ci
n24g+NG+6OKNE82NKPd4iBXzIMRNqBstHs47k43H43fg95/fLhYcPULGbtNO
qfqgV2kjVnwP8WMqLGtmC3Zc0fjxcQHiNJNxtekezH3awrzXvCBvfHxkYREV
RcORkSXBh4F/STps1miSghOoj87fh/Mynbfu9GbQpy50cb31HogzSZ+paDjX
hlZlLw7DupNTiv1SIGdB7eveLsA5zzGL2x9qRPaTuqQeWNcy1zz//j847xdc
LsSCnA/OU2rxsK89CyNBhzWo+NTBnx8uQ3yOPL+gOeNOwVtfVDxfJr57/q3M
nRX0SeV72LgV7HNSz1C2A+JifFd/JD+cx8akyTbdRhJmarPl8NZn4Fu7Wc8q
Af/AA/WkHP5RvMFzLpt2hoHt/jpulIK4cpuu6T4KcdwoKm698xID62/jfXgE
5CydVDLe9YmEaaeO/RKKhHxYfkI3HPikbxdz6EZkPLblw8wjOPdVqXzDhL++
Tvg/bf9Bxgn9R30nQM+xzYvrZSGeQw9Ka9+E/Sp8LfwyCHpaaRWe+Ab9rZ5j
rY4w5FvFFUev9AA63nt7mRoJegr3dTj9AX3uNIRPGIL+P8jL67BmNcTtaEkg
5NtnXKxbAsG/gwxR7cui9ShuolzlPMgJvfHrGXWchj8/rnC7AvFpnMF1PtOH
go/F0UQpECf5ch8OD4GegTz1A60gZ1zut9nNYBpmZrH88Q7wjjjy9QczI/hF
RMnBIKcxvD/48MMiyOcj611+FW4mYdvP7W/UifdUK/iUmkBduHZAuGwJ7GMR
YOZYOsDAL9dz0HShfwgt2c/JDfqHO1OP8M0w8JldPYdPQ91PF3D/kWg0ik1V
fk48Bftbtxdsa4Y8bOMQGagF/BMF4Qor3xk4uZZPIhlwU5mWQevbo7i6sMjh
E/DjzH4H0qHfEEjS2Lj5OdTZq3s7X4F9jqWVT+sS79EdK7eyAjtY8R0wDEZ0
rLyptSEZ4me9Ub9LZuUIXvV/ad0O+uclsfy+B3VEXdZXZkiQgZ3lecuuw3l8
ib5mngc5Jcq7dB/AOX1+HUcQ93QyFjhF1S+8Rae3TlnzKtBxQ79CwR4KGZcy
j199AfwdNz+6Zq9R8S6nDPNfYOeiHMHYYyBfiHnaKnojFdctXd66AvFAnXY2
0QJ7LhbmP6yF/GPQ7FLrCfxnSUo70qB+mbnk8CYAfiXwqAp5AxWnsJXmHQM+
zmS3ofxi4IaFfh0TsNPSlAh3D6ybrBdC9Yf+03Sy8A15EwmHVFs9IoGd3aLm
MfcQA5ebfNKTBv7OdYGPx0BO5zjX62NGDHz8gYlltQf4Yc3Ojwf89TakpJrI
w4WmbxuPE/eGJOsEVkDOB5cFXE30t8LH1DKnR3C971YBbZBD+cKbXz5Ox7ca
XPpJxHe90y9vVoY67khCjFx2Bs583OC6BPhe1eoj+4Bf66/3jAR5p5bkGkzL
IGPBE3a8y+Df798zcn6BnYsLfq5nbSbjgJSV+mzgi68vD/2D6XjFSthlC/il
7OZErhmcOzXVW30NUIdCS/qZUmFuU7mQ4jQI8eAb+SesEHD58Qs/xfLH8H0O
+R0vQX+H8wvTxPdBHv5x/r38aAybi2p93Ax++amznp/43aRg6MKh3vIRzO7P
x9wC+gu8N+oXF6ZinbCme4/AX1FKzCm5ICc50GtxL/iF+s/zu5sgFUsEVe1/
D3i8yt9Kjt00LMNhLLQb/OheIWxH/L5zNW+qeUaehr/veClkBfnpmD9P+U/w
l9Sq+cZmGwZWLAjIvAl+SfRqb5RmqULW3snndQ0Z2GGl6NM7qJsZbDw7NY5W
o8pr2Sc7wS8pbipFPvUkLGn8Ya4B8tIYG/9djygGdmn5c/sM8FvuVB9SBPs0
X2r+pgl8WqHFjlHeUVx4Yry0A/qQC2kBC6sUBj61sGHwGNRf3VCpgRzI87ol
Eb3vJcdwY4j8wkL0CL4Su6+bsVaJckY1UpVAn7KD7/bZupIw29ZXTXWQz+dz
psPfWY/hXjVWpl3Evd1FZbkkkI9jOpIFAun4YZyUrQX4q/ST3IQW5DF52wDX
cLDbRr1T+1NHKXjCSj/YEewc/3QwfFUV8pfrk9+xwDdO/rRZH86pnwa1sBvO
4/4/+GwF7Ovq+E4tdsAjOFkmrsJ+7zswqtJhXceTBcMTUC+m7XSkNkE837Jz
7tlwZhTH2a5UPgb/ur/b/6sc8ggXzmANAjvfVDtwkxXmTbUfG9g4IQ7Pq+8Q
vQ/5mNNpzY/4PaIrlio/zUzHv69cnmCB8140eXt7AvFecT41mr8YHYdtEgvK
Afzk6d8uKuDfdaqJm/gcKHjQrdHEF+JcNmT6+yjMjy9m3AsqoN4Jt45eJ77b
1VZelCxH60MecgLK2YAPzwa56EEfIvFf73FZmN/Vs8uXQmGOUIv3lmgEOcZz
2mIvYvuRUoM0ay/UFyH/savE/bu0B9w2SsDf5dgfKQD57cxnEaQBuLlz7Qkd
kB9zL2TWDPL5UY7tXzgzyXh/g5hPIsg5lLT5Ji/gDzM6SiLtKPir+Go0s1Mv
Evt5T0wT9KHKWz/5DPt62dVPknnYgyJUp8UCO0cxQ8eytRDi+atZ9/1qmJe1
hfoNhkHOV6cyUgbgQSmp0UW6Pehuc951Aei3W06iZoslMhafddQygTmdrrcl
X1J0FG8UZWrNgT6hqZw3nwT28QgNcpGG+t64Xpf/NNjHzCieJxzkGFlIL8wS
dV9dUL1IYBRrbnRZ7Ib9ut17IfG8m4IN9uzssAK/8xtqf3JvHETc8/+pyHyg
4PRTo+z3IU4Wmu9wrYO5ezrywfHXIKdl+7kEK8gH1+9qJz0zHETOgdsvFcJ+
Dc69qegH/sh9ToWQukF0OvuH3iDg6ecZNvW5JGykktMg3TyIjlOijrYTeka9
lao4Q8KiWkcU+OP70eUrAQKKgG924dX6QPS3PJyenc/6kO9re80KsKPzwXtu
vBBvtp94dQxBDqd2UAZ5YBQflp4/vgb+VdNN0BdvGkQlKVc8LsO63VcU+y9D
vh1hxaHEdxyWhAQWvMHOqSo3Dq0Cf6GpdBv+M4ha9E903gcccccUO8JcsN/7
QbgEyAm2afphYEzCKvsXFQg7U+PG0kXB7zbZ2y0jod6hTbeuF0J/MnGg3PUJ
2HNnB8+n01Cvrar0y2vAj+Zz3Nd5n/ch6f7TUxyA22fzXi61pOKtO+SeUyFO
vNVyfcXWQ9/Fnl8bDfwmX3Hpf43tqGXXkNA+sINiRdxnH1YKzgk2ymIArv8+
u4svhIRNomTPEH2aSdzDa5chfpa565PfgV0etS7VpgFOW72bcLWgG53NfVP9
AvCg2xsMXkIfmGD4yX9GrgdxRJc+ZSyT8ZPBgthgiPPKJMVJI4ir7cq2zJ6R
0Gcm9vFsADykMiLNhrkLUR3ffCX8cvJtfiOjfRTfYNn+JBHWLdDJbk2F/Hv0
fLixAswR6mvPu0qYutCO22fbOmGuP/HojawI7IvxRTiyA3A78tPtb8Eve1+0
CJJfUXC8c1bkFZCvMdt+Xw3kj97e5rJM9AMWLazt6h2IsVeRJYGIq/8Gp3JB
ztRs8p1RwH8+ZHmh/oeEOzRVcz5AnIsfWH6r4zuMCk2xrAic34bHSam1v0mY
a2+NrCrgfBqJWo+hL/VSuzOwDeKqzl5Hjz92BN0I55BYBL8rP3TO6wJ8XdS9
9d9rh9Gq/rPXxN8ZTPvGPYahLifP+ihlA3/r0LPbRuBHJdtFcjCsu+sb5WID
8IUnqGH+xHdbB2PGdvCN4uxnLyoEgD8Z7Ha77OsInvbM+nwB7PltYdTXCPTx
a+SINoX1Csi+ptcBd85Q9DaHeK44PcJuBv2habER5w2Q7ztXVF0Ock6IFqVX
w7p5MVXJHpvIeJDu9ToS5KDbyrEJgPsNUQ6chX7J5Kxm3H2QsxjAZukD+91m
yq1MvMfSfZu7XX4+Cf2YSahuh32NvLv3jxPO71Aaf/mDXyPofH/LttcCZPyo
fersT+DrWQbO3IJ1u5RnDEfZybgp61+vLuxvym1vZyCsm/eSj/Qd/CKxaumO
SkZwhLKy4wHAXc1keaeejeJP7MfCKOBHNzPR0ONw7iTOpGAu0FPNPG/n1wwK
VlIR0UCAp59dklqD/cuf4OuLhXWZm46eXk4eRr9U016vh3OhybtBk/iOZ93m
06Z0n2G0t7h4vQPIyXq86Yw2/L9ut5aPRZBnrnF0v+SDvuI/c7xJFdatT/p7
/AycF4fYgMT1sVSc8dKSRZ24n7Xl6PWTEG/rpw9basO55Vy7G1cH+MHtmeE3
mtrRqs2e/naop49VRXKOA54SWbJ0p7YdCV+JuddmSccBQ3u0h0EfWVfj9TtA
zn5UhJygv9pVeUdqCPA+/4qR8XddyPDN2vQnwB87B/fmN4zg2Ne5ey4Cvy0p
aPORNjquk74xowr2D2n4ICEP69b/5WsNA75lDu3fVegH0l4MVhDnnccqoVvP
n4bXME/qFbD/mr31LhmWLrRw913XENRTmSU1ei1xX9sGpawHvr9KFAsCOYYv
vkVcgviSshBqWKttQ+YvlAOLYF+qw8J3TY+OYp4nAau7QB+DE1/zjGF+X1x4
I+dRP4q/Bby6ewb0GVh++9QX+uqAR7N5bGAHh3NuB3TgvD/UWoieWyFhH9aV
NUmo8zM9FjNdMNccsNjofQ7miE6/kp6tMDd1j3gHhkH/EF4vEEEDf/39Uecw
cZWO9dJ1PtnGtSKSYsmTHtjPuQF+Z4t6OrZdPtS6D+a42Y4072Dgq+z8tem+
AAN7O/7yD4L+JFEoUfwPCwnLW6OFLJhHvOqGBxuAb5bmyiTtRsIvrTguUQB3
DHTlMgV+WoJknV3TCPbnM+a/DHqusWVKVMB+zXqefhED/pNFE2V5wAcL98ee
gP1+ZeY7vKowipmi/Pq1IC500cnrFsD/qhl/Sgz2H8o/OtgFODVbsu8e8J/c
kxKVJ+YEmf8uj4F/PN92lJyE/CZjHVb0APDDWCHOm4mOp6R5mk3ALxOiTKV0
OHdh/Lzj5iBH3iv+UAbEVaRZxKMdsF+xrNJT/WA3ca0O3jN1baj/cqVWMvDF
rm3mZ2Wj4jPqrBtvgP017a8qjAHuViqS9ySairVOhxteBT2FrvVF3oa8N/84
43zjDhpWjpsqeAt6Jtm1Di8tUHFn0d5r4xAnp8vnlVMh/wfWVHQh8PubDTx8
vyBOOjl20QM/dKPv+yxq7CBOvCxrSm8EkXCy8+IuHlh3YXEyRsaail9uZ/W7
AfxvQ6wHk6B+BWtfveanQsMvRAc/fYb4d60zYNwFvKRpl+AJkJ8zz0/ShDgX
UPjpYdXVi8rcE+K3A25JYQT9hblgG919Yi/UzZPvwuP2ttNwW5XxfTfgP8nY
YnYI6pGmUvV5EpzzvzfaFQJhLqi+6LF0Aewp5tJkKAZz/hHDK0sFwL8YNRFp
B/3DtsDr8tlrNCwyGSp42KkYZxw/+SKSTkZSfAfnGG00fP7gQ576mDJ8QYW1
fZpGRmNrjDvE95WzpvmbeuyLMS2Ppdw0k4xqg7csxwEeY0o1bokuw7yj2xJf
3CIj00+uzrLQr3oI/7rrHp2LI9VPXNkJcj5FOL+OhXMnaHDEjAK4lput3LVm
MlI08pg9DvaU1c/5dsyhGP83G87PRaagazjKtATscPDx/KRMbBlekZ61Tv9I
QVzXDqo8hf68+Xqz/6OoRHzl80vX3sZR9LG488clmPtMfDxMHEF+aMHHc86A
L+7u3vMN1v3MonWceE/mFvtfJk8pZFTuPSKSAXPKc0Vuy32Any3m35QaOoq2
/VMIugn8u8tVm+icb/DAzq9dvqA/Rw1b+SeIvw08fSe7gJ+cJf+FAvi2OPnm
VzBnHaJcE1kAXLS4/D5mpqL13LaPc8XAnp+KxLRBH59V0b5A4n0pFRwlarBf
RSleTWfAD1UJDOiwUdGV2QnND4Ar1Yi+KDfKx/Khd3x5QU7s2JL3OZjrAwet
izY5FuMFybW684DPyh0cutVMxdwL1/6sgr8enNS5PAT4JTNHi8pBBk7qPGO0
PyYXdwpLikcXkJBp5L/huzCP2FjUFk+DnMCJMJMFwAWPyoX6wHwtpyHVGEq8
DzPzv/5dUO+S7U7J1wNOps06lYNfLn/n19GrGEHVFP5zB2AOYuEz+sAK6773
FXtaCnXTqbR/5ivMa18+0+5fB/kH4i9r3jozimrElvq2wnx0+HJMKTf40S89
IeXBtlHEcneA5Anze+v5t/3CIP/+1jv6xuAvb8/WhHSYu6X2dzoLgXy7/+yK
7gPe/L1flQHyd9oZOBjBvtY7vF2W9xxFG0beoImXVPywdSj9G1MV9lXSNfkD
dvAPyuD216TiCZ+Zjm+OdTjBfG63A+DF7iKeQ9BHzcqUkH8A3zz5UjTbSypy
v6j04AzgmXlqTd+BXyX9Wu2NBhVlHmZcGID+LeT6sMmDxkbsYPLJ9x/48amL
+GM7mEOfJLgd8YT4xx/+tD6NGUEOAiIcxPNXi/KPO8tNv+OMeR6FB9AnLC/X
N9SD/Ajm0IV1YAdhBVaPsCYqGvdqkYn+xcBSGirhm6IT8cfKJysY/EIX5zur
DHIcGVcC+CGu+EMjOEzZSShFQDY91p2C7XPb7Z6sVeJW5/NBdsQ9cZLVpU17
YB55vHosyKEOh41wD7AAPiPy4qII9CH/prJS84CfNjSdtxRFQ1UPxo5Iwtw0
mfgr2MupDg/e5Sw1NqAhS6Np3+hc6G+31ccogJ6sHIGWvQI0tCFA7B0Z5KQe
/f5nGPxioOKznaeNhp5wffuZCfOFAVXx+y9Y18ZT/iuTPB29q7a/EPCDjBE/
ec6ioQk71uRUWBDfuZ4k926APNxlOWdEvHdUMqYhwHCChuLKm7yrIG8HSnc3
d22px9ve+Xx9A3I2CxZG+MC6hyj3c6eFGrHGTRGrJZBTRMoUCIG8Zzh27Wt1
fRNO/SgdMf6PiiTE6n+sB/nj6tyPZsGPZaMH+ycRHX3HiS9O3hzFi9RP3JpN
TThIXzby4VE6sjhc9T4N6nXHbNGG1phW/CSYXTEc1j200m5L/J1zfECCOwlw
Y92W/eRgGnp0/XSGHNQjjzfRjY0gf7b/LblXgIFKcnvePoa6Nll9nHQa9uul
18f0rZ6OegJqTsUBP9B0yNIqthWLqzWamv1HRyoaG1YCof+PK/K3moD4Ccrq
eV4rR0c3dW/K9h8m48Xnn11FIT635e68nA36WAuWs98Gff6rDbY9BfZfzy6Z
MlRKR9unWvZVAK7XwfSMG/h7Do9IbHxMR6sFQVMVQlQsqjYQWxeZiE/mKfuQ
iO+VPwncrQR9y0hplvMNOO+Jyvr3L4A9/1OeeF4NdbdPy0uwHPi8FROpnYJU
5Gd/rDAH4nZnq8pBFohP++Gtkx/laMj2vaK1F5yLgoZdaUYgpzhQ8FWjKA1p
N5gzawJ/V5/jxHbIA9dJA4Zuq1QUNLCvdh3gDrOnCxogvylFRmnUwLpMr0Qy
P45RsM+pV23S4Jfu/HM8LCxUNM/TfP2NERm/b+Ac/Qn2v1vMNDEH/PCnXBPy
ELejExUxt8CechIGYwJwfgd07ow5+FAwqYyrmwr8wPeH3lnCeR+4WbWTCuvq
lX6OkQL5OTFq5fUMCnocpzd0nPj9jk4XJe7RaFS9l/B9SEGF/ZuO7IG+yE1W
ezCCqQsfNr9u0An2fyHpUz8YTMLCZXG2++R68Kl8odK7xPtPjiTSesC/G26w
HzVk7sI2ZsfGrB7RUMrBQfoFwAXdNrK+zezGYtyPdpnCOeKg1dgMwFz9ruD+
X5fGdszt6vZbD3DZ4FSu79BfzdS+7paDdaV3sbmWgfwPdMNieYjnQLe3/aHE
fWeX5punwI8fTDcmZ4HfdX+zRuoAX1NSznhdDBWl7r2TaQ9z90DCNyU1p158
3qpZTIX4bjvj+w4LiE8hhY0xJUd6sKltkzr3AhU9/hh0ewDwzcUf5FMce/G7
jPFsdSsqeu9++mYz4Op1qoPHa9uwmqAd1gE7cI2PqfTdIOGk1W3Tu0EfgRoO
/A7wM4rP448BvyQg9T1xn+ivzebjE0x0lGkf2/Ie9FS9ZOkdVdOOExom5xth
X4eW0i/EQfwryqSf/bLWiZ/wiA7HQ161/RGm5QTn/eVT14tGsK+U8IKtdhEU
lLY5gOMi8R6rPa3yHac7sPQ2QaX94N+mgeTLI+soEGdaVROwrpXrH3kewAO/
VAtPQXzGv84oJAPepOK+foWVgoKfXkkz6YQ+PNkmJAb8+B9bjYQy8P/I7fp8
A/TcqbiFqgZ46C0P8wCoyx0uWTwfAD+UkcsWotODFaM9nA8AX5zFa2Kv0Cgu
P+y61gJ23j19kH8DxO3qB9NXDOiH5w78qax16MXdN5bDROwpiGXhnvA46H9R
TPUqcS/fS+hdweASGSmLp8p/hDjP26mauh7kzDxxV8qFvkI96Ow/PuBbHJbN
WfegB+8cEzikArizSbfwyUgK7u2f0tUF+8SfE/hMvAej7dg6STaivszNbKkH
+7jEx7TcATzf/M4fD7CDtF5KWDrYOTjnUvMX6NOsTNc3JEL+lJ6VpxqDfTgs
uhGTEBXV9qlO7TOk4U46V7M11AUnruvyitAf4iefXw5CfrgQYKztAXnet1Jt
YtduCvI4fneqA/qW22fPlHdAfpY+4+wRBuuWvX54oRL66olHR5izID+3/MiV
f00lo7/vhS/9hXr9Z0/rrStwfsvcmLP1QP4Rvv2Lh0EOu+/hbGXIn8eflgVE
lZERz48d24nfKU4I7PGuhHOq433NP8+QjETjBhsEJ2k4LSzPlPjuwPbwzVu2
N42i59a1r7UV6Ljrv8S/G+G8e0Y2eOhCn2Dn5rF4Ffq6ntufKt5DfUmXeCza
Cn2FYLFucl4IDbPZhNU/Bvks4Z0rUYDvaRnbag58kQfeOzMBf165+d7nZRJi
/nI1oBH6Xs8AFPQd7NCzo8H4c/8oCtB7LtURTcP5rpkBMVBneVIuFuwHO0Rc
aN53CvQP+hc4fBvwQzkJjZluFPSzuvMY8fvOmVdDLEuA2+ZzvKQcIqO+6cMz
Rap0TBqqEi+D+pIco7XGBftihHYOR0PfyzX6c1Mg4BmefsPHoU+YT+WIu9dA
xxFK0QN/wM7fV43evoB+bDe+d3oZ+lsx3uZ4HeB/9no93uNKQu5tKjkVgOe4
v53wAzvrLOyT/MBMQiFqiRpPbRj4a7dpYiPUEZYV5g4GyPdc/29uRnwMH7u6
VriFuQq7Sv7QdYkbQd8iJo5XURg48JHuhDzYwZ3vCTkH+h/qj6mEjdCnKeee
kxyUq8Y5n7vv7QA5x4cznyhC3zgoH16uD+t+UdphsQf6ons+QlxxwI/NTthx
ck8rbrxv29UF+POoqe/81+i4XfnPz8MQJ6maxvfSQI4qI/TAVWUGrii4/bwB
/GIaJS4XDvyPE7sF2x/TcWlHxhsy2HNGc5ZSD35krvm3+hL2O/b1lO4NwCO8
Z6rm6knoUMmhUaXBfhz2aN8I8d1Yfs8y/2MwL3PqDaVaTw/grpU717IAv2Vg
YEZ8F5Jb+YhhfEI/HvHY//Doy3H8smFY4WtzE7Ji4ry+ENePjzIXdbj2juPS
q/ub7IB/y8i5/nHrIEb+N+4/mQf7sYm9lmxpQsad2fbCgHdtUDNcUxvHVaSS
JTrM4zuabIW94/txOOdVlkJY16v8Yuj+r83IrDon4k7zIP4ec3m7BeB3YzJc
8jdVoVdUMX43WFfl3N///PknsAan/3MHpirEx1DtW9c0iDsHNwQg33G86hm5
vn+tEqFr4TN2D3vxXcaQ98fYCSyqYa/kyVyFZjvXFja69OL9FbqPjAAPfFt2
PcqjCu2/a7sjFnD/OVLLmN0Err3kom4HeoqWGJb+Ne7DQWc3jP+KmcBcUgVV
WsT3i6vMNbSI78XHyFuWak/go3ZxE86AW34LOFx+tAc7f/jobhA8iesyWJke
xuaigfAWO/MrvXiHzWrhRe5J/PL0zxSNuFz07LM/2Q3y4/zDYOkzsZPYVWbd
FyPiucrPKvtFQZ/6kguOiaKTOOXItJ9KbCIqW7SULnTsxtz133to+ZOY7V3s
e+IexyaDWWX6p25cLChZTnz/8dTmjz+Fga/yadPrWajTD/RrjGrmga8aM3IA
+NN3Xt+6xtqF9ZV/+zOxTeHlYb3uPXGJyKqcxeS3cy8eFn+j1Cw4gWXi9uRd
gjhpKltjd/Ubxte372Kaix3DUywWvoIudajv4/cyL99hbDLsP+zYN4ZlhCtZ
5sAvadGcZ9Z8hvHARJOGK9c4PhZi+Y64B5QsdubisfZBLCt29Xj5w3HssPc/
o+vA//bO7tHvR0M4yqpJ7QL4vTn9w1cDsKd1w1nTSoiHR/SpAsX8cazpOnHO
C/Djk86DRyAebDieHwYMx5if2PTCsRjp3fk+qg/8d1Jdbo4Qn+OBnXYnnYqR
/JU+33bg93rs8jsTPIG179vLrgc7pNbXt7q1DOJV9S3bu/6MYw8RsQvfAE98
jg33/urDu18lvE8Hv1MmtOMEQI6bnf6Pd5b92HM1bDYI4od0bOONIOC/HiHd
Ok18b0LGV2H72wn8z/xwRwDsy+u2FvUi4Bx9NxOiWyZwZ/4utBX0X7WsGN2o
2INfF0ptkhuewJUTpGpLsCe5u1hJAOIn6Cm3n4/AJD527FT/R5CjtPImPkCp
B9c7ZQ5+JuJQnHqno7EJfY63CLEAfsf8u33LgMsu6ZhMdDWhmXqzs6chrmYK
r8RRQU+jOS/ebw1N6GHUk2OhXj9xzEjls1XAOYO9froTz0fdvXkllXg/oKjM
ISu9SXzOe2F/I/grjJnxbkS0C2/evNOzFOLqQoZzoh1xH62xVdsP4kqvYvdA
RNEkXrlAfvoL+K3s975cJ3Vh+p19ltHAT4wuMnIAu8kElJ7WZOnCzl+aZ9sG
JnF1j2leJeBfZPcF94L+5ltPebPemMQX9/d5zwHeN+owLkR8v16yfufnPxP4
nr9cSJ1zMVrIlXwa0tyOrflvv81CU/i/5p7AbMB52l5UcwLO5u2WYmYxhSUO
t4kkgF9c2GccC6Bvi8ZqwgPOU7ikX1uTeB4y3ejCbuJ3KOv8L1LE9z58sBbP
0BE6EmQJqrcD/IhtmHt53BvMmh7aTLwvlHXv0QZ/KhlvOcpQbwY+vXrsBRXw
ufHDdxxayDjrOdvKKswF7UrHRioIPL5GdCvI8W9O7AwGfJdFqt95UToKGkep
eh/IeC93wycmh2IcL5PPWwJz0Bc5IwV96LvIF9c8zAGvPNVTlDlGR5Tt6n/t
oW8Ruin4N9a+GHvYCdeUQ5+pc+/3JQfgr/XGfCH+jpG+8OVg9CYGyn70V1wO
5r6Lt9yJ7yjjsdIBJ3FDBrpotfLVQ38U53jWrcuDOWXWO+75ogEDjVUtbTPm
H8XtPrdiGmEu4zpqtuOkPgNtPdBJmYd+nrldNR7OD673iUj9jhlIg+r0pgT6
XgPTM1QFmMs8t0yKu0cy0OKeGzt0oQ+XJplF7QH5mZYvVYWdx9CvjNt1USAH
BUyMXQZ9UmoraZsHGSjqvLJUD+jfXTZxLxPs+drVcq0c5sqGc9Tq6QYSfnG2
9sUHqF/7yPtPdYA+qTJ6C2SQk1BVbLYZ6vJQDuVr80UGQlhz4zbAU0LyngjL
V+O3qutL9WBfyqJr7UksJBx8nHtlCOrvT7W9WzkBj9Sd3NwG/fxCr6BdBPQJ
V88dbVYDXCHISX+VTMG3rqZ5Ed9V2V2xm90c+vb+ktX1z9YNY/e6mccmUF+i
W3aeNYV4S8f93mT5YeiXDvceAFxchqXkC8TblbPmKpKQD0O7Pa7rKo7jyLdN
kb8hLyWGxo9thPxp1Op+Q8J0HJuGSdt3At88Tuvvprf9eMp4qN0Pzq9uYcft
bIjP9w9o13/E9uMtLnOHOuGcrm2VEt8L+L0rmXaipsP4ybG/v+UgT36PlMOD
gI8o1U2Xw7oSGo0hBvbjOEb5SS3xvNDbJz0dsZAP8+rMmbI2TGB2cW8f4v6s
bpDPrCHULxepjx4HQf7dWwZ/vrAmIfGRI29NN8NcHz81cQ78YplK7w1xGkN/
ouJrd82M4ATvbQMNEG+U5+JsbYD7LVtqfQf73/m6oxzBvNwtKyE7NM1AI2t/
wpKfjeIdClxJhBxNZhtDCvhxw2eR9tyTY7h3TyqN0jCIJVuexjwj7svs/VF7
/gUDK760DZKGfYieL9k43NSOAg7ig9XzDPxhZ1s9fjiM+dXrjaZiWtFIU8Ry
JfRRzi2cogWjw/jXU87N+sA/++MVxQ3wu0/XUXzvj2DuIzXb8mNbUXKlYZpw
IwPPj8pHTTQOYqXjN8NfMXch0ikZtgnolxr8CudEoV71Vvaey+XvRL9CX2gT
/eSehAOs++SGcUVEv+QKUxdyvPJo7LLRGD7s8SBJCPjCgjuyOKA+lr70u5Si
z8A1eYLqEtCPmGvcWxI+2oMus1f+doqhYy+byE0U4D+ekDxgBbiIY8lEDfS3
/i/yfd2Ie4vM8jeI78jzNqmNiIH+vSf22WmCniumR69uPNSDNIYlrhHPMR47
ua3HFfh2NL/6y19/Iim/b08XoT83zSUvW20bwefMWf5blOtBb/vY7XswHb98
lVS9SNyDts52f+jUizZOnhtMBDmfDD15D6sMY9PzgYHzgN/eJidxjW0Cc3t9
mH0fmYjN73IZ0BoG0dme2YI5v3HcfsAvqhz8OGr2+ckDg2HkKO1kF/N3HL9K
WM96BeLh5Z7sjT8aB5HiQ1N/ZuCzbfI7Qfy9xVW9jzdQbhi5vF6RKsobw9s/
ed02hTipsNAMN4e++uKiipO4wzhuinmdtgrrLp00HLT1GUZ+ixOiJxLH8DrF
fT8/Qt5QNJ/7fA34QY9E9ZnOjuOjdCm/MJC/M/DSQDrwH8aYZcVDHN8/VTzz
E/Sc+vY3OTWuH52puSm3Der9IZ3LMvUgx/rMI8fi+H4k1D3UNxU3gVm5uG4Y
EvfOznR02kT2I8HjY86z8VBvNuojReDvTUk5PW/Uj/4deStxEvCHXlFep/8k
YK2xkwW8IN/+gG+vsj0Nt95dXtgPftEVl3BnxPajC4rq/HdgDhIarBjbBnih
deS/xUcDaHDBn/+KIA0/OBR7uxLidvOOO2Z0kNOuc/j5NTeY7/gSh/jB783/
SNLyTYNo7rJKyCUxOraqmQ+fAz9ms+k9rAT5GuGux5xAzi8+edd1tUO4jzsE
aTYPIheh6a82bHQc2KnpagPrTh/cyjUB/o0e+tO9AHHy61Lb1lyQc92fPcjf
vB/Jveim1EOcVMTklns69mLhKkF/Nlj3R/VN4TiYsyYS2gKUY/qxdrSZqTas
u2dbyJ9hOBe9/VH7HwL/0V0NI4epfjT9U96oGeLK+q/ikVuQt/D2Ix49TwdR
IVponYV1w/U5jNzO9+OCLfbOFRAnh7eZRLwAOUexyOawH734A4+T6jWQr8Vy
qyoCcFXlCENHWPfWFvcrUeW9KKTlbPQLkH87bqsxDdbt3kfyK1IZRhU5atdl
c6g45YfW2hnYV7vIU9OzEA9RUo6F8oD/naNvKoe80Wsa1eAG64pu++ZiD3ab
PH39AHFOH53/W7unbghF9LCK+jFT8dg2X8NB4JtSvHM4rIZRXLe0ni/gnd2G
x70sh3EYtTzUA+RLPJ04Yc5CxVsjv3mK2Y3gGfPOay2Ev25EDHSAnvJX9s9V
hAzi0nUdsUHg35P3M/8Qf2/v1IgzfQ/+HfirllpgN4JOtaXUGMJ5LzXw+MRf
C/lwWHsulniOokj5qtgKA79de/uFSnx3Q6mLjwx+jOAV1m50ZOBWn3smLmAf
6x+Tg4cAt/CxGqv5xcB6pYIrQtDn2jN0JS4QeeZJPx8d7LnT7bv5xcl+6C/0
/j0CvqTuRt5qkDPOt573AMg/s/pUwhXsrxpsYbC+YBxvEXrKyIN+wNLT6/pu
sJtWErfuLZ0JLPnSZ08E4NqT9PwvMf1Ie6LjqhrMY6ubPI9Pwhy9T+3O/otw
vjQDvDZfgTzwVEOOtQvqeLl9n01f7SCqK+PbcRfwzY+etnhTKvGhS0F/TcFu
9IeRlEmoZ0m7daKdQU45+oe4IJ7d+vzP958ax+7VVw5GQb2++zftynPgv3MZ
+aj5aByrrhN6JeVUh4XDigV+UwZQ4XcyQ7FvHJ/SPLC2aF+HF6c32t0DPd3k
vyW8tp/APoecWCkwv6/KHHWUBzsYCOx9uwzneurv5LZHsK6q32fFtJu9aNtK
vgw1bgyXFXz0HIV17XYxIsV8h9HK6uw1ivMY3nKs4bMv4Jo/5q4Ztg2jnhuk
j68B3y79/eC9m42YtFKnXQhx8sKYPqsD8tnLioo9oF9i922lqWn3oaqfDebc
qlN44P0ZCSvoNx5mMTt5Eb/vPxQe3grzkkJldrFsbBleGzB8GgbrFn0okzbu
H8Ou7PJ3llYrsYaMwYO9xHfDZfLPD8G6TtJcnG4gP+CFRW/J4xEUpXBniwvg
Bz/XNoaD/fcvLh9SVBxBK9UxGwqgPya/z+LaCPmTtX2fyHxDO6oLPV2iNTiJ
R/04Wv2gz/x1R7aFHerd6PUnjpxg5+5uJ7PvxH1kZsa2t3eHEKn3dChb2DjW
+vWjjKuxCT9/GD+9D+L8VXOFRajQBFbhSzYivtNhHKR6J9qxF2U8kF/yBr/f
sqrnnkxrxslWpyrWA39ru4VCDuTtf54Ra+kgh2u9dvMKxD+3p/LY9X9j+FpS
EW8k4L4/ttxcB/EwpnSxYBnknNtxts8L8N7dQ60/OvqRpHb80TSXMdwjelN2
HHCZd4uDoeeH0bqMb7lHxWCuKJY8V0zcc9wsJRsH+lwN3CcnC3HyoOv+V33Y
79mdKnnvoN69P/XvDzvMk5uKaxR/QB/7/ouelwDEM6v4tV0c4Me9O/55J4G/
pjhrqz2pfYhNPjvX5C/Mb53pFlmA2//X0/MW4mrqb72WNMzzlENVN1ehvpi/
+XlBFM4jr1D3jb8w/4+zByd2gP1Frv4I7QL+qWOrnjP+Y3ix/dtOA5DjszzL
Jxs7goZni9t+KYzjrGsWCkegD/evbL1aBPFgJV/+UYJ4H0h/lOAN4PupbsiQ
Z4U4KWgObA2exFYmVeNMIP9kxqzGJegH7tBzEkJgvrru3vW+HPbbomv91xvw
AMpY4sinSfydia6FgS+nqX2+zLob6aTWKwYDrpIRZ34T5OcIyml59XShcF/y
21qYowq0HqUTvwuTV8Noh6DvWraUu5g1P4nPa4fwE/fNLXOPDxP3i59u3j7U
84n4O8gg3Q34hzMTM2Yyu9HmkxKv/mObwnk6kmeJ+3FOcYc1ZaD/2f5Z93A3
OxnT0tNnaVC/LMX+GyMXkFByPlfF1uZRvLdUV5B4/3k6s+CU3RwJGcvcez8N
c8RZgd/KIrXDuPrOspg78G+H8aU0DIxiJwGf6lGi3jW3WL8ifh9vbOnKhTlO
6VZeDT/kfx92UcMM4O8edXKyBzmNhjkD9+YGMeWbdV448Avqu2j1MMfdl86+
PAt5u3a7o/KlPBLKlpVdLQJclid5axjogyKv7e4pGUGSHsM31tZR8Bkd3yh9
op/s6vj8FPxocKqyeQHmOOvZnQKXk4ex7+v0OTnAbRQ0ePuEqPghpyObdkM7
XjX+G/+VSkZzYWsf/LopuF9yulcd9Fe48uPidMwIWi2aH02Gdb1YVRtMoV5U
z7dHuoH+F+7evTxjT8F73AoOFTn04o/vJjw4QH/ug4/v8Hyg4IbZF6FdUC9a
GM/WbQH+TtmmrlbieUtzm7Y8p168pEb6pC44imo8b+irg3yytUnPGPAnfv6e
mAkdRbI2y3rvAc9WfevLRO3D6orj7YJNo2jePt9SAOQIv+tQyQrtg3m9gZ34
Oy3v5KVYV5hztzfJ6VoQ33c4Oip0AfQ5mGYf9xX4Z5+Oz09AnyB0u4Nsqk9C
bVtbjF8Afl9KJN3WYBB/UXUQngL7PPM49ZiYcxOtbt8j3ufzhyunZ6l/FPGN
tC13xFDxv4MC7w4xdeGZTT1eVSCfR9in2mwjFasZkvT3y/Vg3NR89hng6xck
uzhA/uM8G3d/wOeq2K7c6BhFch1sw6tQ33NOPXt9U6cHr284Q6kF/viBL5dy
mOmYU44Nc4JfPGbu3tXJJ6Fpq690UX8a/sN46bGXuQvrnHQanoT9ruyqDRCA
viJFtorbsLEdrwubap+pH0UxEt7jIdAHDnPE7t4Kevoaet7uOjqKVL8v19pB
n7D344TpHMhfaFtJHHcloa1Bi7PE/aYd3MoyF4BvFcM6pdA4gqS7dzZ2LVBx
Ou0/o7AjPbjPMDPMHfRhcxqL5rCm4sXLJAUfqOM1+V/HlgC3EdB7hWBdlXZL
/VXgn7JdJs0HkdDxgn35i8Q9LGOuX5vA73c8lmx9K0YQMnlotBP0L5d4r3Er
sxtn/a45fQv29eESFuPZRcNlxwR3ecC+TqxsVtIBv88mhcYS9ya2L9Oz7tW0
41sjF9WLwG4WEt92coD+Q5fmPLhr23CecXHUIOiz78SsyGEDEl7v9ZqFj3jP
7vwlnXlmKgqr/LGPQfyOxmrpNg9xYvKyPkYnk4Js5O+2Es9BhVVkVbdAXJnZ
+Q2aAB9m8fg6mCs77GO6F4B/x97xjieNjDa6SW/7C3EiklnuwwHxmWpn5N0G
uOK7Sw/lid+1b7n/siW+C39581RCJhlJa719qpBPwlcap/U5IA9QKjd9ZKGT
ETur26QWrPtJqzruGpyvhvMwLYCcxkLJaB/AP3z44HsY+N9t7ofSKWSIE65X
RctkLBLQnSEj34N/TDikcoGcO3OXRQLhvKip2t1aA7/cvV3O02VIRu9DnClH
/pCwt2GW5XvIDwe2/DPRAntu0dh3TRXk/9f2mU8C8phy6G4mScCfSad2Z3wd
wVonwp8lAz+/+/7QPOizZ6yFXAB8Cp6R/AU4hb9Tm5OdjMJuvozNsqRjsUo9
9R0QP7s2m6nYwTlyu9ejkQHzphR1+57LgMccr0W/oX/gODEiYAjzqc2sRf1Z
0J/88pLGFagvh3SibgxC317lj11/QfzMPPvBQ9o2gmqrnqxXB/8me+/fRE/q
wkkziZKEfP6d0wvhMNevT3gtnE6cF7OzkkPQN56/88p4A8zdU3ZPLiTCukxl
4j/HoX+7l0DqDod5OajhuqkIrGtuxsK2H+q7lWd1BfHc1Anzq/tNS37iAwaL
yfOg581DDlZD0McmCwm9Wg9ydsb3q2XCXKnA4afPBf3ziOcCaePBHqz82IXn
DMhvCEl7y9ZGxzX/uZmchrhVlijx/g56XpGXi30D/JWzxusvAf73VZqIHHkY
/R7dw1kP8t1GtDq/8XXi9MMtZxNh3V6VGzNnYJ4KmO7e2At+rLuz2YV47tT8
W+bEKZCjcOoMpY14b0CYjPrq/RGkH2kZJ/eCgXkFGMtzIN+S5yBfGthzB0tO
T8I8A59ImW3hAb6IeIydMsgRfNn/n4sKDZvq/Ra/DPL3ZN2+pAZ6Kqflqh+E
udIiwFa5EeL2m1viQhHwB4skDa3gnIrPFByohfzJrHhT2xT0VwrfYigOuCCL
nzPq7MULj6cvtYGcuwdaVS1hfhRccz2WC3IEO3g7N4J9dl4rfcwZRsUPdj+g
noTzKDJh8O80zNcP9lkJuMK53iukudbrN4CHPh1MT4J1A6U/Z32F+WI4Uafe
Dvxlr2h6QQj6oi+TCvonwA6/lzxs4iCvtphHOgvVwXx3cmvI+nYarjfO6NkN
/KiY2H3/QJ8vwjlShygUnNZelMsLccuT9uJlJsgfujpXLWc0hr/NCsbdamjC
z+bSwiMBP3Tt+XeveQZyXYl6WBjTihpNvknpwf/b/vqKPbfRGDLbE1dc0diE
TnPNb0gD/PShAySeKAbKq3QKJO43Pg3YeUI+dgSvs+z5LmDIQDHnZWlesa0o
W/n+9S0PRvCH6SPGnoDnmdleHt3Titg3KhhSgT99ZMePM90UVJzz/F8n9IVu
2n71szHE+7fSd/OzUFHpp6DvR8GO7qK7bQph/hvz8x+wBHzd/jv0OYNB9Mfx
BPMsyAlPdng97TSGaA6BdiTQfwNHgF1a+BAuLTy+6u8yhsIefA1Vam5C21m8
7d+cH8YixrOk08oMlEY1uecGeubsF9VNAjm5U6rH31MYaHaHWPIjxzqkKML/
9AfoIxOV9LxNfAwdf5/29gJLFZotscu6T3yfbJp6ocJ5DC2fnjUmfs9jteK5
Yts2jLeSrfbrAp5w+/n8KPG7QtOBT3qKIzh+PEX0HuBPam3+1t1qRPK5QSfq
wJ7B6aZbzMAOrq/Nb7+F/uPdUEu1F/RBKqYq8g6wX/vZghtvwa9eB7IvvTIc
xAv1xx+LAF6pJpjtCPNtzkllpS7Il2JaCmIN6yioMjVx2zHgb6nvOM4A+QJK
R1L/kSlI6o+1izX4+8agpk82se4u64+6kO93m5eLiQPe0ry7nctqGLNF8FoI
stGRRFuQwk3om4NSanfMAL+l6fe6Yyo0VHzOgm8J+vusULUhbbCbVPKz0K42
Gpo1CzYn3l8pM5T+mhnsI6zBRMuRp6M0PXfPZ9AHm4wqcU5sG8HKgaenrxyl
I5PiAM/pkp9ogus8hcl3GM+EcbbxAV7289KnwHddqPnsyuI1kH+667J3Newr
ZTL+XjjoWef9keUZ4S/31a2E/g36dwxKLYfR06Tu77dAzxhdJz17ATLKzP59
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
yJ9BN0Q+nRtHFdGfWa4Db/XvOFPJGJODobysJDLI77JRpW/9nketL2+KHQQ8
3mn+Py6w3zsv5+LX4jlUNXzr7hTY83V0qpT55TjSsKpRrbedRxcV1Jb3vWou
/9ijdR+/j+rHhtKKVt4c8qUMe3cT1vXjdC33grhmj22SHS3nUWAj1WuumESM
m+nAGz+QP8ptsdQBfM31tEaCVHQO9saeGFAH8o3SyWnawLvzLYwmRMAe3a0j
BsyOUzB3CXEdgLlDWma1Ar+f8fTIoyjv91NIzubvGTeI+4u+8392tElYu2fL
kScFk6hAWmvtN8RFS+ib3X+jJOygwWnZOMBtMYq+u3Aei4X3bK0tkbDt8o8V
f8KnUM6/Q+IuEHd7iQf7PoAeuhQ3b/x7uZmzB291gn7OIFHyIBcJmymolQxp
m0InVKUecAI/lzirG2R0nIQZ7pWL6AD9X4z6JfA5wiAzah6yE9P+/olSGfRM
Ct6O4gV7DlrVzGbSkTDaTwnaF/Hvb8V+JtjAuubGktGEdRKWHrUhsQ/8f0F1
ayHSqgK1zV2nKIG8IkilzT+PHEbfo//p3gWeODiuzPoW/HmJSa+Hx3gYZV8d
jkiHejN+lt9jGPwpVZC2Fm8ziO5kcJ8v5yEj1p1QTwqQ129/ONZrO4gub2iZ
P4e5+UQYx90I8DNhhMktcWkItdkJfayPWkDbp3remlqXYBnVSDYW5IH4lXX+
XkBXwzwW6G1LsE3BUP/lnGG0J15M4BGsW8xuG9sCeeJup7l+MBb6cZK1Sxjg
0/E3NrucEzEVctY5ZuATLo5p10Q+LqASPb+pRe/m8se13Jk6oF+IebR2lp+M
MqOiP3+CfFbxN16qjhtGHnVn1w/i+u0ZIw7FJmLY1MYDXdDDG0sRcB/mUaVj
IbaGsN/Ec8HKT68OoU4SLzczyMu33CaYQ58a6mIWGLEeRBrv1qwLYA4+pfKu
4iTg8u1z7pfBz5ks3LOCPnPoq8/RHn2bEszlDl/9NNS72LHriY+k51GRtSSH
PPhBX6JptPv1BLKuH6c/CHVIk9ooWiKmElugL+7ZgnxulimoOWg9h/y0U28f
dqnAAtZim0vxPu0glhTOPI+e+6yTVqHPStr4JV/eN47ckyK4XeA8WphcKY6G
dfc5arc7eI+hF42x/C/hvItOcY3dAzszGzNeNeB8SMyV0m9wHuk2Fln5gD2D
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
DuQbjXmGPwG/s+7Rj7nkI3hlZGIfcT5sZezDD+6A61HGeM8MAb9vUPIC6DPb
vpsUTcxrH7+7a+YkXjH4xkec732+/V+kFW09ahq6I5eZOYOvXf6mQPT/N9UY
L83D36MlfVTpgFs3v5Weo6lH0yTqap/qa9FpzrP1//7O4Pb2V5+0oL/P3sNH
3wB/5zVYzTcAn3jNQvG7rhYZJZ7uOwt/cWFWWcvBWZwokiZjWFuLLD+Ldu4H
fSjINKZ278xiiXUzyr7qJvSV4YfcHfDvB5YIpcnfszg9iiN5G/RY+xL0eh3q
kRfbO087w1n8ot3AZxl4Qu/oqrUCvyFP0Kd7gN+8ktovA3LCdyVJiPO3lBMW
fwbEzuL+Ae4kLcBDJzi85YGv2UDzaTr9LG5tEswKsKhEvN17JoXiGtAGnUVB
pfIsziZ5bPsE6uK3/j0iGTDOO67BRI+QWXzW90pNKuz3WbM11bQsK1Gq1euq
n8BT8tPydi7sp/yaSj6cAP3bqudFO2D/1W6dJkHsZ/VaJRcVYL60hutRj2Jm
sH3ENUE/WHeJ9LNUtCBP9npfFE3WDD7ZUVfxL6sN/Q0/+/s7xO1wfh0tC+DH
LumW1pq3IaXe/tomwDlNBBSfBM3gCJ2W9RZY10eWhoSJc6afBS1wLazNYB2P
FwbEuaULbO9e0cUmodMdeOMo1Sx+zhwX/Az2mXQvAi9MgHyffmibK9htW13j
nyzs9zzlTLooAPdFXn9mv81igYEavTWY13zTdabUgRok5J0uHlozi08qCdN5
Qd2K3pL4fhvsf0KhiCIGcK1RKnKHVow0NxnUGSFO5BSHjXrAjxfmtzZHifvm
zzYUhv2pRyM1SW8GQN766thECIw3/7es+4tUA7o799vrLODXju35vAX2SmK4
ou8E/qJS2LLpAX26VeNii6EP+JjbbOgG8Ra61qTXDvzLpFGBL8COx8hXyewh
nkMfq+jfBJ4HGRH3nkJdZ9KdOdULPI8GryltOcziK4pfVolz/Kj1drjpgIdj
7YHg48hZHOJ+JzQZ5Id80o7HVVSi6wpF403As68W3dCHPqYqmNkiFfzueO5S
kWDTLP46vrxmA/GQaVkW9ALiq5nLafokyRxeqWVfIuzD5nBk190P/l/lFRYC
Htsk/1An+Hx1o+H6LPCZfpx0bAO8dW+aTe/fSmR0kekSJeB0Ye/+HQX+UQaF
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

     "]], {}},
  Axes->True,
  AxesLabel->{
    FormBox["p1", TraditionalForm], 
    FormBox["p2", TraditionalForm], 
    FormBox["p3", TraditionalForm]},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-1.1, 1.1}, {-1.1, 1.1}, {-1.1, 1.1}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  SphericalRegion->True,
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.821552078001371*^9, 3.821556095770255*^9, 
  3.821567335669311*^9, 3.8215673785097103`*^9, 3.821567750089425*^9, 
  3.821572049638165*^9, 3.8215739157772417`*^9, 3.821629764967017*^9, 
  3.8216347847834387`*^9, 3.821697233264674*^9, 3.821717477651457*^9, 
  3.822134035818552*^9, 3.822137836310392*^9, 3.8482605772083883`*^9, 
  3.848260904556563*^9, 3.8839034582689753`*^9, 3.883906993366542*^9},
 CellLabel->
  "Out[206]=",ExpressionUUID->"b092c811-999e-4cfe-85fb-838ecb1a8c4c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "appendixEq63Metric", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"appendixEq63Metric", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"lineToMetric", "[", 
    RowBox[{
     RowBox[{"appendixEq63", "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
     RowBox[{"{", 
      RowBox[{"dt", ",", "dx", ",", "dy", ",", "dz"}], "}"}]}], "]"}]}], "  ",
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"appendixEq63Metric", "//", " ", "MatrixForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8221338559024754`*^9, 3.8221339203504877`*^9}, 
   3.822137836310535*^9},
 CellLabel->
  "In[208]:=",ExpressionUUID->"3908d90c-a111-41d8-bf39-34d0e146a544"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], "0", "0", "0"},
     {"0", 
      SuperscriptBox["t", 
       RowBox[{"2", " ", "p1"}]], "0", "0"},
     {"0", "0", 
      SuperscriptBox["t", 
       RowBox[{"2", " ", "p2"}]], "0"},
     {"0", "0", "0", 
      SuperscriptBox["t", 
       RowBox[{"2", " ", "p3"}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822133857929522*^9, 3.8221338824459143`*^9}, 
   3.8221339210892963`*^9, 3.822137836310964*^9, 3.8482605773399353`*^9, 
   3.8482609045703993`*^9, 3.883903458350156*^9, 3.883906993377911*^9},
 CellLabel->
  "Out[210]//MatrixForm=",ExpressionUUID->"6249a725-f448-4da0-a8ae-\
14f476b9bd0e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"kasner", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"ToMetric", "[", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
     "\"\<kasnerMetric\>\"", ",", " ", 
      "\"\<\!\(\*SuperscriptBox[\(g\), \(kasner\)]\)\>\""}], " ", "}"}], " ", 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "}"}], ",", " ", 
    "appendixEq63Metric", ",", "\"\<Greek\>\""}], "]"}], " "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822134111509988*^9, 3.822134161302217*^9}, {
   3.822134200453928*^9, 3.822134207149806*^9}, {3.8221342971284733`*^9, 
   3.822134324637836*^9}, 3.822137836311116*^9},
 CellLabel->
  "In[211]:=",ExpressionUUID->"8baa19b8-b767-4880-9511-8d98aafd6e9a"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox[
   SuperscriptBox["g", "kasner"], "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.82213430674482*^9, 3.822134325208495*^9}, 
   3.8221378363114233`*^9, 3.8482605773520184`*^9, 3.848260904593544*^9, 
   3.883903458372058*^9, 3.8839069934045057`*^9},
 CellLabel->
  "Out[211]=",ExpressionUUID->"a7a33bf3-f36f-49ed-98d3-cd7317566d04"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"kasnerWeyl", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"WeylTensor", "[", " ", 
   RowBox[{"kasner", " ", ",", " ", 
    RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}], 
  "  "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822134342998664*^9, 3.822134358984786*^9}, 
   3.8221378363115473`*^9},
 CellLabel->
  "In[212]:=",ExpressionUUID->"4aaf3fb3-498d-4277-8359-a8e639bf8883"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["C", "\[Alpha]\[Beta]\[Gamma]\[Delta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.822134359766073*^9, 3.822137836312011*^9, 
  3.848260577873438*^9, 3.8482609050946302`*^9, 3.8839034588682137`*^9, 
  3.883906994058654*^9},
 CellLabel->
  "Out[212]=",ExpressionUUID->"465a59f8-c72a-4cb3-b41b-94eac3333fa8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"kasnerWeyl", "[", 
   RowBox[{"\[Alpha]", ",", "\[Beta]", ",", 
    RowBox[{"-", "\[Gamma]"}], ",", 
    RowBox[{"-", "\[Delta]"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "kasnerWeylValyes", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kasnerWeylValyes", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"TensorValues", "[", 
    RowBox[{"kasnerWeyl", "[", 
     RowBox[{"\[Alpha]", ",", "\[Beta]", ",", 
      RowBox[{"-", "\[Gamma]"}], ",", 
      RowBox[{"-", "\[Delta]"}]}], "]"}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"kasnerWeylValyes", " ", "//", " ", "MatrixForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822134762726141*^9, 3.8221348340618763`*^9}, 
   3.822137836312155*^9},
 CellLabel->
  "In[213]:=",ExpressionUUID->"0ab98cad-23a2-44a5-9ff1-9745970131c6"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["C", 
   RowBox[{"    ", "\[Gamma]\[Delta]"}], 
   RowBox[{"\[Alpha]\[Beta]", "    "}]],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822134776675187*^9, 3.822134795405424*^9}, {
   3.822134829360815*^9, 3.822134834319642*^9}, 3.822137836312254*^9, 
   3.848260577924149*^9, 3.848260905227682*^9, 3.883903458959426*^9, 
   3.8839069941122103`*^9},
 CellLabel->
  "Out[213]=",ExpressionUUID->"bd73d2be-a688-4ebc-a2b9-b8c2455e81a1"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              SuperscriptBox["p1", "2"]}], "+", 
             SuperscriptBox["p2", "2"], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "p2", "+", "p3"}], ")"}]}], "-", 
             RowBox[{"p2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", "p3"}]}], ")"}]}]}], 
            RowBox[{"6", " ", 
             SuperscriptBox["t", "2"]}]]}], "0", "0"},
         {
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox["p1", "2"]}], "+", "p2", "-", 
             SuperscriptBox["p2", "2"], "+", "p3", "+", 
             RowBox[{"2", " ", "p2", " ", "p3"}], "-", 
             SuperscriptBox["p3", "2"], "-", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "p2", "+", "p3"}], ")"}]}]}], 
            RowBox[{"6", " ", 
             SuperscriptBox["t", "2"]}]]}], "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["p1", "2"], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["p2", "2"]}], "+", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p2", "-", 
                RowBox[{"2", " ", "p3"}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
             RowBox[{"p2", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "p3"}], ")"}]}]}], 
            RowBox[{"6", " ", 
             SuperscriptBox["t", "2"]}]]}], "0"},
         {"0", "0", "0", "0"},
         {
          FractionBox[
           RowBox[{
            SuperscriptBox["p1", "2"], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["p2", "2"]}], "+", 
            RowBox[{"p1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "p2", "-", 
               RowBox[{"2", " ", "p3"}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
            RowBox[{"p2", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", "p3"}], ")"}]}]}], 
           RowBox[{"6", " ", 
            SuperscriptBox["t", "2"]}]], "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["p1", "2"], "+", 
             SuperscriptBox["p2", "2"], "+", 
             RowBox[{"p2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}]}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "-", 
                RowBox[{"2", " ", "p2"}], "+", "p3"}], ")"}]}]}], 
            RowBox[{"6", " ", 
             SuperscriptBox["t", "2"]}]]}]},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {
          FractionBox[
           RowBox[{
            SuperscriptBox["p1", "2"], "+", 
            SuperscriptBox["p2", "2"], "+", 
            RowBox[{"p2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "p3"}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
            RowBox[{"p1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "-", 
               RowBox[{"2", " ", "p2"}], "+", "p3"}], ")"}]}]}], 
           RowBox[{"6", " ", 
            SuperscriptBox["t", "2"]}]], "0", "0", "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox["p1", "2"]}], "+", "p2", "-", 
             SuperscriptBox["p2", "2"], "+", "p3", "+", 
             RowBox[{"2", " ", "p2", " ", "p3"}], "-", 
             SuperscriptBox["p3", "2"], "-", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "p2", "+", "p3"}], ")"}]}]}], 
            RowBox[{"6", " ", 
             SuperscriptBox["t", "2"]}]]}], "0", "0"},
         {
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              SuperscriptBox["p1", "2"]}], "+", 
             SuperscriptBox["p2", "2"], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "p2", "+", "p3"}], ")"}]}], "-", 
             RowBox[{"p2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", "p3"}]}], ")"}]}]}], 
            RowBox[{"6", " ", 
             SuperscriptBox["t", "2"]}]]}], "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", 
          RowBox[{
           FractionBox["1", "6"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["p1", "2"]}], "+", "p2", "-", 
             SuperscriptBox["p2", "2"], "+", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", "p2"}], "-", "p3"}], ")"}]}], "-", 
             RowBox[{"p2", " ", "p3"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}]}], ")"}], 
           " ", 
           SuperscriptBox["t", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "p1"}], "-", 
             RowBox[{"2", " ", "p2"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p1", "+", "p2"}], ")"}]}]}]]}], "0"},
         {"0", 
          RowBox[{
           FractionBox["1", "6"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["p1", "2"], "+", 
             SuperscriptBox["p2", "2"], "+", 
             RowBox[{"p2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}]}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "-", 
                RowBox[{"2", " ", "p2"}], "+", "p3"}], ")"}]}]}], ")"}], " ", 
           
           SuperscriptBox["t", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "p1"}], "-", 
             RowBox[{"2", " ", "p2"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p1", "+", "p2"}], ")"}]}]}]]}], "0",
           "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "6"]}], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["p1", "2"], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["p2", "2"]}], "+", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p2", "-", 
                RowBox[{"2", " ", "p3"}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
             RowBox[{"p2", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "p3"}], ")"}]}]}], ")"}], " ", 
           SuperscriptBox["t", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "p1"}], "-", 
             RowBox[{"2", " ", "p3"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p1", "+", "p3"}], ")"}]}]}]]}]},
         {"0", "0", "0", "0"},
         {"0", 
          RowBox[{
           FractionBox["1", "6"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["p1", "2"], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["p2", "2"]}], "+", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p2", "-", 
                RowBox[{"2", " ", "p3"}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
             RowBox[{"p2", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "p3"}], ")"}]}]}], ")"}], " ", 
           SuperscriptBox["t", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "p1"}], "-", 
             RowBox[{"2", " ", "p3"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p1", "+", "p3"}], ")"}]}]}]]}], "0",
           "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", 
          FractionBox[
           RowBox[{
            SuperscriptBox["p1", "2"], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["p2", "2"]}], "+", 
            RowBox[{"p1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "p2", "-", 
               RowBox[{"2", " ", "p3"}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
            RowBox[{"p2", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", "p3"}], ")"}]}]}], 
           RowBox[{"6", " ", 
            SuperscriptBox["t", "2"]}]], "0"},
         {"0", "0", "0", "0"},
         {
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["p1", "2"], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["p2", "2"]}], "+", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p2", "-", 
                RowBox[{"2", " ", "p3"}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
             RowBox[{"p2", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "p3"}], ")"}]}]}], 
            RowBox[{"6", " ", 
             SuperscriptBox["t", "2"]}]]}], "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", 
          RowBox[{
           FractionBox["1", "6"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["p1", "2"], "+", 
             SuperscriptBox["p2", "2"], "+", 
             RowBox[{"p2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}]}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "-", 
                RowBox[{"2", " ", "p2"}], "+", "p3"}], ")"}]}]}], ")"}], " ", 
           
           SuperscriptBox["t", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "p1"}], "-", 
             RowBox[{"2", " ", "p2"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p1", "+", "p2"}], ")"}]}]}]]}], "0"},
         {"0", 
          RowBox[{
           FractionBox["1", "6"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["p1", "2"]}], "+", "p2", "-", 
             SuperscriptBox["p2", "2"], "+", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", "p2"}], "-", "p3"}], ")"}]}], "-", 
             RowBox[{"p2", " ", "p3"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}]}], ")"}], 
           " ", 
           SuperscriptBox["t", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "p1"}], "-", 
             RowBox[{"2", " ", "p2"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p1", "+", "p2"}], ")"}]}]}]]}], "0",
           "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          RowBox[{
           FractionBox["1", "6"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox["p1", "2"]}], "+", "p2", "-", 
             SuperscriptBox["p2", "2"], "+", "p3", "+", 
             RowBox[{"2", " ", "p2", " ", "p3"}], "-", 
             SuperscriptBox["p3", "2"], "-", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "p2", "+", "p3"}], ")"}]}]}], ")"}], " ", 
           SuperscriptBox["t", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "p2"}], "-", 
             RowBox[{"2", " ", "p3"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p2", "+", "p3"}], ")"}]}]}]]}]},
         {"0", "0", 
          RowBox[{
           FractionBox["1", "6"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              SuperscriptBox["p1", "2"]}], "+", 
             SuperscriptBox["p2", "2"], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "p2", "+", "p3"}], ")"}]}], "-", 
             RowBox[{"p2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", "p3"}]}], ")"}]}]}], ")"}], " ", 
           SuperscriptBox["t", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "p2"}], "-", 
             RowBox[{"2", " ", "p3"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p2", "+", "p3"}], ")"}]}]}]]}], 
          "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", 
          FractionBox[
           RowBox[{
            SuperscriptBox["p1", "2"], "+", 
            SuperscriptBox["p2", "2"], "+", 
            RowBox[{"p2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "p3"}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
            RowBox[{"p1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "-", 
               RowBox[{"2", " ", "p2"}], "+", "p3"}], ")"}]}]}], 
           RowBox[{"6", " ", 
            SuperscriptBox["t", "2"]}]]},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["p1", "2"], "+", 
             SuperscriptBox["p2", "2"], "+", 
             RowBox[{"p2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}]}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "-", 
                RowBox[{"2", " ", "p2"}], "+", "p3"}], ")"}]}]}], 
            RowBox[{"6", " ", 
             SuperscriptBox["t", "2"]}]]}], "0", "0", "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          RowBox[{
           FractionBox["1", "6"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["p1", "2"], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["p2", "2"]}], "+", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p2", "-", 
                RowBox[{"2", " ", "p3"}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
             RowBox[{"p2", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "p3"}], ")"}]}]}], ")"}], " ", 
           SuperscriptBox["t", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "p1"}], "-", 
             RowBox[{"2", " ", "p3"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p1", "+", "p3"}], ")"}]}]}]]}]},
         {"0", "0", "0", "0"},
         {"0", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "6"]}], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["p1", "2"], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["p2", "2"]}], "+", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p2", "-", 
                RowBox[{"2", " ", "p3"}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
             RowBox[{"p2", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "p3"}], ")"}]}]}], ")"}], " ", 
           SuperscriptBox["t", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "p1"}], "-", 
             RowBox[{"2", " ", "p3"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p1", "+", "p3"}], ")"}]}]}]]}], "0",
           "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          RowBox[{
           FractionBox["1", "6"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              SuperscriptBox["p1", "2"]}], "+", 
             SuperscriptBox["p2", "2"], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "p2", "+", "p3"}], ")"}]}], "-", 
             RowBox[{"p2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", "p3"}]}], ")"}]}]}], ")"}], " ", 
           SuperscriptBox["t", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "p2"}], "-", 
             RowBox[{"2", " ", "p3"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p2", "+", "p3"}], ")"}]}]}]]}]},
         {"0", "0", 
          RowBox[{
           FractionBox["1", "6"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox["p1", "2"]}], "+", "p2", "-", 
             SuperscriptBox["p2", "2"], "+", "p3", "+", 
             RowBox[{"2", " ", "p2", " ", "p3"}], "-", 
             SuperscriptBox["p3", "2"], "-", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "p2", "+", "p3"}], ")"}]}]}], ")"}], " ", 
           SuperscriptBox["t", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "p2"}], "-", 
             RowBox[{"2", " ", "p3"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p2", "+", "p3"}], ")"}]}]}]]}], 
          "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822134776675187*^9, 3.822134795405424*^9}, {
   3.822134829360815*^9, 3.822134834319642*^9}, 3.822137836312254*^9, 
   3.848260577924149*^9, 3.848260905227682*^9, 3.883903458959426*^9, 
   3.883906994146154*^9},
 CellLabel->
  "Out[216]//MatrixForm=",ExpressionUUID->"0dcf70b2-542b-43d7-bba0-\
d52f5d06250c"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "weylDual", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"weylDual", "[", 
   RowBox[{"a_", ",", "b_", ",", "c_", ",", "d_"}], "]"}], ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Sum", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"LeviCivitaTensor", "[", "4", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"a", ",", "b", ",", "e", ",", "f"}], "]"}], "]"}], " ", 
     RowBox[{"kasnerWeylValyes", " ", "[", 
      RowBox[{"[", 
       RowBox[{"e", ",", "f", ",", "c", ",", "d"}], "]"}], "]"}]}], " ", ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"e", ",", "1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"f", ",", "1", ",", "4"}], "}"}]}], "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822134673888981*^9, 3.822134680061698*^9}, {
   3.822134857800089*^9, 3.8221349613015547`*^9}, 3.8221350123440733`*^9, 
   3.822137894104567*^9},
 CellLabel->
  "In[217]:=",ExpressionUUID->"1508244d-b0cb-4203-8418-5eceb638cd49"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"weylDual", "[", 
     RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "]"}], " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"l", ",", "1", ",", "4"}], "}"}]}], "]"}], " ", "//", " ", 
  "MatrixForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8221349670726757`*^9, 3.822134997453801*^9}, 
   3.822137894104733*^9},
 CellLabel->
  "In[219]:=",ExpressionUUID->"0077093c-c82c-47d6-80e0-8711bfa4dccd"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          RowBox[{
           RowBox[{
            FractionBox["1", "6"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox["p1", "2"]}], "+", "p2", "-", 
              SuperscriptBox["p2", "2"], "+", "p3", "+", 
              RowBox[{"2", " ", "p2", " ", "p3"}], "-", 
              SuperscriptBox["p3", "2"], "-", 
              RowBox[{"p1", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "p2", "+", "p3"}], ")"}]}]}], ")"}], " ", 
            SuperscriptBox["t", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "p2"}], "-", 
              RowBox[{"2", " ", "p3"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p2", "+", "p3"}], ")"}]}]}]]}], 
           "-", 
           RowBox[{
            FractionBox["1", "6"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               SuperscriptBox["p1", "2"]}], "+", 
              SuperscriptBox["p2", "2"], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
              RowBox[{"p1", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "p2", "+", "p3"}], ")"}]}], "-", 
              RowBox[{"p2", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"2", " ", "p3"}]}], ")"}]}]}], ")"}], " ", 
            SuperscriptBox["t", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "p2"}], "-", 
              RowBox[{"2", " ", "p3"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p2", "+", "p3"}], ")"}]}]}]]}]}]},
         {"0", "0", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "6"]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox["p1", "2"]}], "+", "p2", "-", 
              SuperscriptBox["p2", "2"], "+", "p3", "+", 
              RowBox[{"2", " ", "p2", " ", "p3"}], "-", 
              SuperscriptBox["p3", "2"], "-", 
              RowBox[{"p1", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "p2", "+", "p3"}], ")"}]}]}], ")"}], " ", 
            SuperscriptBox["t", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "p2"}], "-", 
              RowBox[{"2", " ", "p3"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p2", "+", "p3"}], ")"}]}]}]]}], 
           "+", 
           RowBox[{
            FractionBox["1", "6"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               SuperscriptBox["p1", "2"]}], "+", 
              SuperscriptBox["p2", "2"], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
              RowBox[{"p1", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "p2", "+", "p3"}], ")"}]}], "-", 
              RowBox[{"p2", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"2", " ", "p3"}]}], ")"}]}]}], ")"}], " ", 
            SuperscriptBox["t", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "p2"}], "-", 
              RowBox[{"2", " ", "p3"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p2", "+", "p3"}], ")"}]}]}]]}]}], 
          "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          RowBox[{
           FractionBox["1", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["p1", "2"], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["p2", "2"]}], "+", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p2", "-", 
                RowBox[{"2", " ", "p3"}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
             RowBox[{"p2", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "p3"}], ")"}]}]}], ")"}], " ", 
           SuperscriptBox["t", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "p1"}], "-", 
             RowBox[{"2", " ", "p3"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p1", "+", "p3"}], ")"}]}]}]]}]},
         {"0", "0", "0", "0"},
         {"0", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "3"]}], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["p1", "2"], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["p2", "2"]}], "+", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p2", "-", 
                RowBox[{"2", " ", "p3"}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
             RowBox[{"p2", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "p3"}], ")"}]}]}], ")"}], " ", 
           SuperscriptBox["t", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "p1"}], "-", 
             RowBox[{"2", " ", "p3"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p1", "+", "p3"}], ")"}]}]}]]}], "0",
           "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", 
          RowBox[{
           RowBox[{
            FractionBox["1", "6"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["p1", "2"]}], "+", "p2", "-", 
              SuperscriptBox["p2", "2"], "+", 
              RowBox[{"p1", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"2", " ", "p2"}], "-", "p3"}], ")"}]}], "-", 
              RowBox[{"p2", " ", "p3"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}]}], ")"}],
             " ", 
            SuperscriptBox["t", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "p1"}], "-", 
              RowBox[{"2", " ", "p2"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p1", "+", "p2"}], ")"}]}]}]]}], 
           "-", 
           RowBox[{
            FractionBox["1", "6"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["p1", "2"], "+", 
              SuperscriptBox["p2", "2"], "+", 
              RowBox[{"p2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p3"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
              RowBox[{"p1", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 RowBox[{"2", " ", "p2"}], "+", "p3"}], ")"}]}]}], ")"}], " ", 
            SuperscriptBox["t", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "p1"}], "-", 
              RowBox[{"2", " ", "p2"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p1", "+", "p2"}], ")"}]}]}]]}]}], 
          "0"},
         {"0", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "6"]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["p1", "2"]}], "+", "p2", "-", 
              SuperscriptBox["p2", "2"], "+", 
              RowBox[{"p1", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"2", " ", "p2"}], "-", "p3"}], ")"}]}], "-", 
              RowBox[{"p2", " ", "p3"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}]}], ")"}],
             " ", 
            SuperscriptBox["t", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "p1"}], "-", 
              RowBox[{"2", " ", "p2"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p1", "+", "p2"}], ")"}]}]}]]}], 
           "+", 
           RowBox[{
            FractionBox["1", "6"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["p1", "2"], "+", 
              SuperscriptBox["p2", "2"], "+", 
              RowBox[{"p2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p3"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
              RowBox[{"p1", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 RowBox[{"2", " ", "p2"}], "+", "p3"}], ")"}]}]}], ")"}], " ", 
            SuperscriptBox["t", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "p1"}], "-", 
              RowBox[{"2", " ", "p2"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p1", "+", "p2"}], ")"}]}]}]]}]}], 
          "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "6"]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox["p1", "2"]}], "+", "p2", "-", 
              SuperscriptBox["p2", "2"], "+", "p3", "+", 
              RowBox[{"2", " ", "p2", " ", "p3"}], "-", 
              SuperscriptBox["p3", "2"], "-", 
              RowBox[{"p1", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "p2", "+", "p3"}], ")"}]}]}], ")"}], " ", 
            SuperscriptBox["t", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "p2"}], "-", 
              RowBox[{"2", " ", "p3"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p2", "+", "p3"}], ")"}]}]}]]}], 
           "+", 
           RowBox[{
            FractionBox["1", "6"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               SuperscriptBox["p1", "2"]}], "+", 
              SuperscriptBox["p2", "2"], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
              RowBox[{"p1", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "p2", "+", "p3"}], ")"}]}], "-", 
              RowBox[{"p2", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"2", " ", "p3"}]}], ")"}]}]}], ")"}], " ", 
            SuperscriptBox["t", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "p2"}], "-", 
              RowBox[{"2", " ", "p3"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p2", "+", "p3"}], ")"}]}]}]]}]}]},
         {"0", "0", 
          RowBox[{
           RowBox[{
            FractionBox["1", "6"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox["p1", "2"]}], "+", "p2", "-", 
              SuperscriptBox["p2", "2"], "+", "p3", "+", 
              RowBox[{"2", " ", "p2", " ", "p3"}], "-", 
              SuperscriptBox["p3", "2"], "-", 
              RowBox[{"p1", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "p2", "+", "p3"}], ")"}]}]}], ")"}], " ", 
            SuperscriptBox["t", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "p2"}], "-", 
              RowBox[{"2", " ", "p3"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p2", "+", "p3"}], ")"}]}]}]]}], 
           "-", 
           RowBox[{
            FractionBox["1", "6"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               SuperscriptBox["p1", "2"]}], "+", 
              SuperscriptBox["p2", "2"], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
              RowBox[{"p1", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "p2", "+", "p3"}], ")"}]}], "-", 
              RowBox[{"p2", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"2", " ", "p3"}]}], ")"}]}]}], ")"}], " ", 
            SuperscriptBox["t", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "p2"}], "-", 
              RowBox[{"2", " ", "p3"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p2", "+", "p3"}], ")"}]}]}]]}]}], 
          "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["p1", "2"], "+", 
             SuperscriptBox["p2", "2"], "+", 
             RowBox[{"p2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}]}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "-", 
                RowBox[{"2", " ", "p2"}], "+", "p3"}], ")"}]}]}], 
            RowBox[{"3", " ", 
             SuperscriptBox["t", "2"]}]]}]},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {
          FractionBox[
           RowBox[{
            SuperscriptBox["p1", "2"], "+", 
            SuperscriptBox["p2", "2"], "+", 
            RowBox[{"p2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "p3"}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
            RowBox[{"p1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "-", 
               RowBox[{"2", " ", "p2"}], "+", "p3"}], ")"}]}]}], 
           RowBox[{"3", " ", 
            SuperscriptBox["t", "2"]}]], "0", "0", "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", 
          FractionBox[
           RowBox[{
            SuperscriptBox["p1", "2"], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["p2", "2"]}], "+", 
            RowBox[{"p1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "p2", "-", 
               RowBox[{"2", " ", "p3"}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
            RowBox[{"p2", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", "p3"}], ")"}]}]}], 
           RowBox[{"3", " ", 
            SuperscriptBox["t", "2"]}]], "0"},
         {"0", "0", "0", "0"},
         {
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["p1", "2"], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["p2", "2"]}], "+", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p2", "-", 
                RowBox[{"2", " ", "p3"}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
             RowBox[{"p2", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "p3"}], ")"}]}]}], 
            RowBox[{"3", " ", 
             SuperscriptBox["t", "2"]}]]}], "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "3"]}], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["p1", "2"], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["p2", "2"]}], "+", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p2", "-", 
                RowBox[{"2", " ", "p3"}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
             RowBox[{"p2", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "p3"}], ")"}]}]}], ")"}], " ", 
           SuperscriptBox["t", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "p1"}], "-", 
             RowBox[{"2", " ", "p3"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p1", "+", "p3"}], ")"}]}]}]]}]},
         {"0", "0", "0", "0"},
         {"0", 
          RowBox[{
           FractionBox["1", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["p1", "2"], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["p2", "2"]}], "+", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p2", "-", 
                RowBox[{"2", " ", "p3"}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
             RowBox[{"p2", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "p3"}], ")"}]}]}], ")"}], " ", 
           SuperscriptBox["t", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "p1"}], "-", 
             RowBox[{"2", " ", "p3"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p1", "+", "p3"}], ")"}]}]}]]}], "0",
           "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", 
          FractionBox[
           RowBox[{
            SuperscriptBox["p1", "2"], "+", 
            SuperscriptBox["p2", "2"], "+", 
            RowBox[{"p2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "p3"}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
            RowBox[{"p1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "-", 
               RowBox[{"2", " ", "p2"}], "+", "p3"}], ")"}]}]}], 
           RowBox[{"3", " ", 
            SuperscriptBox["t", "2"]}]]},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["p1", "2"], "+", 
             SuperscriptBox["p2", "2"], "+", 
             RowBox[{"p2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}]}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "-", 
                RowBox[{"2", " ", "p2"}], "+", "p3"}], ")"}]}]}], 
            RowBox[{"3", " ", 
             SuperscriptBox["t", "2"]}]]}], "0", "0", "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", 
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox["p1", "2"]}], "+", "p2", "-", 
             SuperscriptBox["p2", "2"], "+", "p3", "+", 
             RowBox[{"2", " ", "p2", " ", "p3"}], "-", 
             SuperscriptBox["p3", "2"], "-", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "p2", "+", "p3"}], ")"}]}]}], 
            RowBox[{"6", " ", 
             SuperscriptBox["t", "2"]}]], "-", 
           FractionBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              SuperscriptBox["p1", "2"]}], "+", 
             SuperscriptBox["p2", "2"], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "p2", "+", "p3"}], ")"}]}], "-", 
             RowBox[{"p2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", "p3"}]}], ")"}]}]}], 
            RowBox[{"6", " ", 
             SuperscriptBox["t", "2"]}]]}], "0", "0"},
         {
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox["p1", "2"]}], "+", "p2", "-", 
              SuperscriptBox["p2", "2"], "+", "p3", "+", 
              RowBox[{"2", " ", "p2", " ", "p3"}], "-", 
              SuperscriptBox["p3", "2"], "-", 
              RowBox[{"p1", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "p2", "+", "p3"}], ")"}]}]}], 
             RowBox[{"6", " ", 
              SuperscriptBox["t", "2"]}]]}], "+", 
           FractionBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              SuperscriptBox["p1", "2"]}], "+", 
             SuperscriptBox["p2", "2"], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "p2", "+", "p3"}], ")"}]}], "-", 
             RowBox[{"p2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", "p3"}]}], ")"}]}]}], 
            RowBox[{"6", " ", 
             SuperscriptBox["t", "2"]}]]}], "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "6"]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["p1", "2"]}], "+", "p2", "-", 
              SuperscriptBox["p2", "2"], "+", 
              RowBox[{"p1", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"2", " ", "p2"}], "-", "p3"}], ")"}]}], "-", 
              RowBox[{"p2", " ", "p3"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}]}], ")"}],
             " ", 
            SuperscriptBox["t", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "p1"}], "-", 
              RowBox[{"2", " ", "p2"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p1", "+", "p2"}], ")"}]}]}]]}], 
           "+", 
           RowBox[{
            FractionBox["1", "6"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["p1", "2"], "+", 
              SuperscriptBox["p2", "2"], "+", 
              RowBox[{"p2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p3"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
              RowBox[{"p1", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 RowBox[{"2", " ", "p2"}], "+", "p3"}], ")"}]}]}], ")"}], " ", 
            SuperscriptBox["t", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "p1"}], "-", 
              RowBox[{"2", " ", "p2"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p1", "+", "p2"}], ")"}]}]}]]}]}], 
          "0"},
         {"0", 
          RowBox[{
           RowBox[{
            FractionBox["1", "6"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["p1", "2"]}], "+", "p2", "-", 
              SuperscriptBox["p2", "2"], "+", 
              RowBox[{"p1", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"2", " ", "p2"}], "-", "p3"}], ")"}]}], "-", 
              RowBox[{"p2", " ", "p3"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}]}], ")"}],
             " ", 
            SuperscriptBox["t", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "p1"}], "-", 
              RowBox[{"2", " ", "p2"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p1", "+", "p2"}], ")"}]}]}]]}], 
           "-", 
           RowBox[{
            FractionBox["1", "6"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["p1", "2"], "+", 
              SuperscriptBox["p2", "2"], "+", 
              RowBox[{"p2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p3"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
              RowBox[{"p1", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "-", 
                 RowBox[{"2", " ", "p2"}], "+", "p3"}], ")"}]}]}], ")"}], " ", 
            SuperscriptBox["t", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "p1"}], "-", 
              RowBox[{"2", " ", "p2"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p1", "+", "p2"}], ")"}]}]}]]}]}], 
          "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["p1", "2"], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["p2", "2"]}], "+", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p2", "-", 
                RowBox[{"2", " ", "p3"}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
             RowBox[{"p2", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "p3"}], ")"}]}]}], 
            RowBox[{"3", " ", 
             SuperscriptBox["t", "2"]}]]}], "0"},
         {"0", "0", "0", "0"},
         {
          FractionBox[
           RowBox[{
            SuperscriptBox["p1", "2"], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["p2", "2"]}], "+", 
            RowBox[{"p1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "p2", "-", 
               RowBox[{"2", " ", "p3"}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
            RowBox[{"p2", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", "p3"}], ")"}]}]}], 
           RowBox[{"3", " ", 
            SuperscriptBox["t", "2"]}]], "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox["p1", "2"]}], "+", "p2", "-", 
              SuperscriptBox["p2", "2"], "+", "p3", "+", 
              RowBox[{"2", " ", "p2", " ", "p3"}], "-", 
              SuperscriptBox["p3", "2"], "-", 
              RowBox[{"p1", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "p2", "+", "p3"}], ")"}]}]}], 
             RowBox[{"6", " ", 
              SuperscriptBox["t", "2"]}]]}], "+", 
           FractionBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              SuperscriptBox["p1", "2"]}], "+", 
             SuperscriptBox["p2", "2"], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "p2", "+", "p3"}], ")"}]}], "-", 
             RowBox[{"p2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", "p3"}]}], ")"}]}]}], 
            RowBox[{"6", " ", 
             SuperscriptBox["t", "2"]}]]}], "0", "0"},
         {
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox["p1", "2"]}], "+", "p2", "-", 
             SuperscriptBox["p2", "2"], "+", "p3", "+", 
             RowBox[{"2", " ", "p2", " ", "p3"}], "-", 
             SuperscriptBox["p3", "2"], "-", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "p2", "+", "p3"}], ")"}]}]}], 
            RowBox[{"6", " ", 
             SuperscriptBox["t", "2"]}]], "-", 
           FractionBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              SuperscriptBox["p1", "2"]}], "+", 
             SuperscriptBox["p2", "2"], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p3"}], ")"}], " ", "p3"}], "+", 
             RowBox[{"p1", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "p2", "+", "p3"}], ")"}]}], "-", 
             RowBox[{"p2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", "p3"}]}], ")"}]}]}], 
            RowBox[{"6", " ", 
             SuperscriptBox["t", "2"]}]]}], "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.822134997726863*^9, 3.822135015547113*^9}, 
   3.822137894105068*^9, 3.8482605783175993`*^9, 3.84826090562064*^9, 
   3.8839034593681602`*^9, 3.8839069945327597`*^9},
 CellLabel->
  "Out[219]//MatrixForm=",ExpressionUUID->"ee3401f8-9373-44ad-a3c6-\
167a997b772a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Appendix 64 :  Rotating Minkowski", "Section",
 CellChangeTimes->{{3.8221385971209373`*^9, 3.822138616875987*^9}, {
  3.883904496738555*^9, 
  3.883904515717787*^9}},ExpressionUUID->"b996d263-67bb-4533-918f-\
565df51cd1ba"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "appendixEq64", "]"}], "\[IndentingNewLine]", 
 RowBox[{"appendixEq64", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"-", " ", 
    SuperscriptBox["dt", "2"]}], "+", " ", 
   SuperscriptBox["dr", "2"], "+", " ", 
   RowBox[{
    SuperscriptBox["r", "2"], " ", 
    SuperscriptBox["d\[Phi]", "2"]}], " ", "+", " ", 
   SuperscriptBox["dz", "2"]}]}]}], "Input",
 CellChangeTimes->{{3.8221386253025627`*^9, 3.822138671054432*^9}},
 CellLabel->
  "In[220]:=",ExpressionUUID->"1a6ebd7e-5ffd-466d-8d0a-fb380d2fffe4"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["dr", "2"], "-", 
  SuperscriptBox["dt", "2"], "+", 
  SuperscriptBox["dz", "2"], "+", 
  RowBox[{
   SuperscriptBox["d\[Phi]", "2"], " ", 
   SuperscriptBox["r", "2"]}]}]], "Output",
 CellChangeTimes->{3.822138672071436*^9, 3.822138988820799*^9, 
  3.848260578380126*^9, 3.84826090563346*^9, 3.883903459398162*^9, 
  3.883906994584341*^9},
 CellLabel->
  "Out[221]=",ExpressionUUID->"da423cf9-9718-43f0-873a-bc8147115c02"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"lineToMetric", "[", 
   RowBox[{"appendixEq64", ",", " ", 
    RowBox[{"{", 
     RowBox[{"dt", ",", "dr", ",", "d\[Phi]", ",", "dz"}], "}"}]}], "]"}], 
  " ", "//", " ", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8221386739358683`*^9, 3.822138698461803*^9}, {
  3.8221390859592524`*^9, 3.822139086909906*^9}},
 CellLabel->
  "In[222]:=",ExpressionUUID->"aa217098-d2cc-4a72-99fe-f2a8d0256810"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], "0", "0", "0"},
     {"0", "1", "0", "0"},
     {"0", "0", 
      SuperscriptBox["r", "2"], "0"},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8221386827449827`*^9, 3.822138698774004*^9}, 
   3.822138988879767*^9, 3.8221390879965887`*^9, 3.848260578392076*^9, 
   3.848260905657535*^9, 3.883903459426186*^9, 3.8839069945955048`*^9},
 CellLabel->
  "Out[222]//MatrixForm=",ExpressionUUID->"b9954151-ac2b-44b0-a6a6-\
389cd96d80e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "appendixEq64a", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"appendixEq64a", " ", "=", "  ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[ScriptT]", " ", "\[Equal]", " ", "t"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"\[ScriptR]", " ", "\[Equal]", " ", "r"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CurlyPhi]", " ", "\[Equal]", " ", 
      RowBox[{"\[Phi]", " ", "-", " ", 
       RowBox[{"\[CapitalOmega]", " ", "t"}]}]}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"\[ScriptZ]", " ", "\[Equal]", " ", "z"}]}], " ", 
    "\[IndentingNewLine]", "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"appendixEq64a", "  ", "//", " ", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.822138711214493*^9, 3.8221387652936163`*^9}},
 CellLabel->
  "In[223]:=",ExpressionUUID->"a1b05909-2b79-4bfe-a40c-c2ca1866a8bb"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"\[ScriptT]", "\[Equal]", "t"}]},
     {
      RowBox[{"\[ScriptR]", "\[Equal]", "r"}]},
     {
      RowBox[{"\[CurlyPhi]", "\[Equal]", 
       RowBox[{"\[Phi]", "-", 
        RowBox[{"t", " ", "\[CapitalOmega]"}]}]}]},
     {
      RowBox[{"\[ScriptZ]", "\[Equal]", "z"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.822138765580284*^9, 3.822138988891992*^9, 
  3.848260578428989*^9, 3.848260905670978*^9, 3.883903459439143*^9, 
  3.8839069946240873`*^9},
 CellLabel->
  "Out[225]//TableForm=",ExpressionUUID->"d47bd72f-0fe2-4be1-8d15-\
4aa7c173e97f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{"Solve", "[", " ", 
    RowBox[{"appendixEq64a", "  ", ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", "r", ",", "\[Phi]", ",", "z"}], "}"}]}], "]"}], "]"}],
   " ", "//", " ", "TableForm"}]], "Input",
 CellChangeTimes->{{3.822139055424039*^9, 3.8221390769090643`*^9}},
 CellLabel->
  "In[226]:=",ExpressionUUID->"fdc0bc57-3ea1-430f-928b-5bbc09a1b5d7"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"t", "\[Rule]", "\[ScriptT]"}]},
     {
      RowBox[{"r", "\[Rule]", "\[ScriptR]"}]},
     {
      RowBox[{"\[Phi]", "\[Rule]", 
       RowBox[{"\[CurlyPhi]", "+", 
        RowBox[{"\[ScriptT]", " ", "\[CapitalOmega]"}]}]}]},
     {
      RowBox[{"z", "\[Rule]", "\[ScriptZ]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8221390664711933`*^9, 3.822139077546083*^9}, 
   3.8482605784411097`*^9, 3.8482609056954823`*^9, 3.883903459466653*^9, 
   3.883906994635667*^9},
 CellLabel->
  "Out[226]//TableForm=",ExpressionUUID->"f9fbd6c2-1b3d-4c29-8789-\
82aca35f2c25"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Dt", "[", " ", "appendixEq64a", "   ", "]"}], " ", "/.", " ", 
   "dtReplace"}], "  ", "//", " ", "TableForm"}]], "Input",
 CellChangeTimes->{{3.822138772265967*^9, 3.822138776621789*^9}, {
  3.8221389368077393`*^9, 3.822138942919177*^9}, {3.822138998830389*^9, 
  3.822139003981821*^9}},
 CellLabel->
  "In[227]:=",ExpressionUUID->"ce1005d1-c0f3-49bf-9498-135f9f1db570"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"d\[ScriptT]", "\[Equal]", "dt"}]},
     {
      RowBox[{"d\[ScriptR]", "\[Equal]", "dr"}]},
     {
      RowBox[{"d\[CurlyPhi]", "\[Equal]", 
       RowBox[{"d\[Phi]", "-", 
        RowBox[{"dt", " ", "\[CapitalOmega]"}]}]}]},
     {
      RowBox[{"d\[ScriptZ]", "\[Equal]", "dz"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8221387768446198`*^9, 3.822138887146929*^9, {3.822138925478791*^9, 
   3.822138943592227*^9}, {3.822138988932448*^9, 3.822139004275799*^9}, 
   3.848260578472845*^9, 3.848260905710816*^9, 3.88390345948133*^9, 
   3.883906994664341*^9},
 CellLabel->
  "Out[227]//TableForm=",ExpressionUUID->"f46c07ed-3e92-4bfa-ba36-\
259eedd09c1d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{"Solve", "[", " ", 
    RowBox[{
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"Dt", "[", " ", "appendixEq64a", "   ", "]"}], " ", "/.", " ", 
       "dtReplace"}], "  ", ")"}], " ", ",", " ", 
     RowBox[{"{", 
      RowBox[{"dt", ",", "dr", ",", "d\[Phi]", ",", "dz"}], "}"}]}], "]"}], 
   "]"}], "  ", "//", "  ", "TableForm"}]], "Input",
 CellChangeTimes->{{3.822139008161377*^9, 3.822139045142013*^9}},
 CellLabel->
  "In[228]:=",ExpressionUUID->"0e2fe6fe-8e42-4aaf-95c5-b04f6df6be08"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"dt", "\[Rule]", "d\[ScriptT]"}]},
     {
      RowBox[{"dr", "\[Rule]", "d\[ScriptR]"}]},
     {
      RowBox[{"d\[Phi]", "\[Rule]", 
       RowBox[{"d\[CurlyPhi]", "+", 
        RowBox[{"d\[ScriptT]", " ", "\[CapitalOmega]"}]}]}]},
     {
      RowBox[{"dz", "\[Rule]", "d\[ScriptZ]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.822139025645405*^9, 3.822139045378477*^9}, 
   3.848260578485914*^9, 3.848260905734421*^9, 3.883903459506934*^9, 
   3.883906994676716*^9},
 CellLabel->
  "Out[228]//TableForm=",ExpressionUUID->"9564de71-d7e8-4f3d-85c3-\
d8ed933bebd2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "appendixEq64b", "]"}], "\[IndentingNewLine]", 
 RowBox[{"appendixEq64b", " ", "=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"appendixEq64", " ", "/.", " ", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Solve", "[", " ", 
       RowBox[{"appendixEq64a", "  ", ",", " ", 
        RowBox[{"{", 
         RowBox[{"t", ",", "r", ",", "\[Phi]", ",", "z"}], "}"}]}], "]"}], 
      "]"}], " ", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], " ", "/.", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Solve", "[", " ", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"Dt", "[", " ", "appendixEq64a", "   ", "]"}], " ", "/.", " ",
         "dtReplace"}], "  ", ")"}], " ", ",", " ", 
      RowBox[{"{", 
       RowBox[{"dt", ",", "dr", ",", "d\[Phi]", ",", "dz"}], "}"}]}], "]"}], 
    "]"}], " "}]}]}], "Input",
 CellChangeTimes->{{3.8221390978385143`*^9, 3.8221391577894173`*^9}},
 CellLabel->
  "In[229]:=",ExpressionUUID->"d5d538fa-a862-4c94-b1de-23a9bcd89467"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["d\[ScriptR]", "2"], "-", 
  SuperscriptBox["d\[ScriptT]", "2"], "+", 
  SuperscriptBox["d\[ScriptZ]", "2"], "+", 
  RowBox[{
   SuperscriptBox["\[ScriptR]", "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"d\[CurlyPhi]", "+", 
      RowBox[{"d\[ScriptT]", " ", "\[CapitalOmega]"}]}], ")"}], 
    "2"]}]}]], "Output",
 CellChangeTimes->{{3.822139095776401*^9, 3.822139122229335*^9}, 
   3.82213915840693*^9, 3.848260578519834*^9, 3.8482609057473*^9, 
   3.88390345952075*^9, 3.883906994705866*^9},
 CellLabel->
  "Out[230]=",ExpressionUUID->"96f132af-73ae-496e-810c-cbb9e73744b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "appendixEq64c", "]"}], "\[IndentingNewLine]", 
 RowBox[{"appendixEq64c", " ", "=", "\[IndentingNewLine]", 
  RowBox[{"Collect", "[", " ", 
   RowBox[{
    RowBox[{"Expand", "[", "appendixEq64b", "]"}], " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["d\[ScriptT]", "2"], ",", " ", 
      SuperscriptBox["d\[ScriptR]", "2"], ",", " ", 
      SuperscriptBox["d\[CurlyPhi]", "2"], ",", " ", 
      SuperscriptBox["d\[ScriptZ]", "2"]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.822139189055455*^9, 3.822139246685672*^9}},
 CellLabel->
  "In[231]:=",ExpressionUUID->"11ce50d7-ba1a-44a1-9d5c-04c5dc166fa0"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["d\[ScriptR]", "2"], "+", 
  SuperscriptBox["d\[ScriptZ]", "2"], "+", 
  RowBox[{
   SuperscriptBox["d\[CurlyPhi]", "2"], " ", 
   SuperscriptBox["\[ScriptR]", "2"]}], "+", 
  RowBox[{"2", " ", "d\[ScriptT]", " ", "d\[CurlyPhi]", " ", 
   SuperscriptBox["\[ScriptR]", "2"], " ", "\[CapitalOmega]"}], "+", 
  RowBox[{
   SuperscriptBox["d\[ScriptT]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{
      SuperscriptBox["\[ScriptR]", "2"], " ", 
      SuperscriptBox["\[CapitalOmega]", "2"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.82213918406114*^9, 3.822139192268469*^9}, {
   3.8221392337772217`*^9, 3.8221392472388973`*^9}, 3.848260578532209*^9, 
   3.848260905771319*^9, 3.883903459544182*^9, 3.883906994717849*^9},
 CellLabel->
  "Out[232]=",ExpressionUUID->"a25b8a1a-a99f-4df1-89d2-bc063067a806"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "appendixEq64d", "]"}], "\[IndentingNewLine]", 
 RowBox[{"appendixEq64d", " ", "=", "\[IndentingNewLine]", 
  RowBox[{
   SuperscriptBox["\[Gamma]", 
    RowBox[{"-", "2"}]], "\[Equal]", " ", 
   RowBox[{"1", " ", "-", " ", 
    RowBox[{
     SuperscriptBox["\[CapitalOmega]", "2"], " ", 
     SuperscriptBox["\[ScriptR]", "2"]}]}]}]}]}], "Input",
 CellChangeTimes->{{3.82213926816672*^9, 3.822139300182571*^9}},
 CellLabel->
  "In[233]:=",ExpressionUUID->"3c041623-db02-4f9a-ac0c-14fe730ca37e"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SuperscriptBox["\[Gamma]", "2"]], "\[Equal]", 
  RowBox[{"1", "-", 
   RowBox[{
    SuperscriptBox["\[ScriptR]", "2"], " ", 
    SuperscriptBox["\[CapitalOmega]", "2"]}]}]}]], "Output",
 CellChangeTimes->{3.82213930126866*^9, 3.848260578562869*^9, 
  3.848260905783144*^9, 3.883903459556691*^9, 3.883906994744701*^9},
 CellLabel->
  "Out[234]=",ExpressionUUID->"90b5a2d4-1920-4e50-9791-fd03560d6b9b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{"Solve", "[", " ", 
    RowBox[{"appendixEq64d", "  ", ",", " ", "\[CapitalOmega]"}], "]"}], 
   "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8221393108435593`*^9, 3.822139332647353*^9}},
 CellLabel->
  "In[235]:=",ExpressionUUID->"9000a56a-a150-4c1b-93c2-641b3fa475db"],

Cell[BoxData[
 RowBox[{"\[CapitalOmega]", "\[Rule]", 
  RowBox[{"-", 
   FractionBox[
    SqrtBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["\[Gamma]", "2"]}]], 
    RowBox[{"\[ScriptR]", " ", "\[Gamma]"}]]}]}]], "Output",
 CellChangeTimes->{{3.822139316755159*^9, 3.822139332964245*^9}, 
   3.848260578575487*^9, 3.848260905807912*^9, 3.8839034595842953`*^9, 
   3.883906994775769*^9},
 CellLabel->
  "Out[235]=",ExpressionUUID->"caf9c5da-6f9f-4b99-a24b-df4cb0150150"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "appendixEq64e", "]"}], "\[IndentingNewLine]", 
 RowBox[{"appendixEq64e", " ", "=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"appendixEq64c", "[", 
        RowBox[{"[", "5", "]"}], "]"}], " ", "/.", " ", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Solve", "[", " ", 
          RowBox[{"appendixEq64d", "  ", ",", " ", "\[CapitalOmega]"}], "]"}],
          "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "   ", "//", " ", "Expand"}], " ", "//",
      " ", "Simplify"}], " ", ")"}], "+", "\[IndentingNewLine]", 
   RowBox[{"appendixEq64c", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "4"}], "]"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.8221393525824957`*^9, 3.822139474014097*^9}},
 CellLabel->
  "In[236]:=",ExpressionUUID->"307dec6d-c707-4d82-91fb-fa79d924fefb"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["d\[ScriptR]", "2"], "+", 
  SuperscriptBox["d\[ScriptZ]", "2"], "+", 
  RowBox[{
   SuperscriptBox["d\[CurlyPhi]", "2"], " ", 
   SuperscriptBox["\[ScriptR]", "2"]}], "-", 
  FractionBox[
   SuperscriptBox["d\[ScriptT]", "2"], 
   SuperscriptBox["\[Gamma]", "2"]], "+", 
  RowBox[{"2", " ", "d\[ScriptT]", " ", "d\[CurlyPhi]", " ", 
   SuperscriptBox["\[ScriptR]", "2"], " ", "\[CapitalOmega]"}]}]], "Output",
 CellChangeTimes->{{3.8221393530425377`*^9, 3.8221394749518538`*^9}, 
   3.848260578607912*^9, 3.848260905820373*^9, 3.883903459598242*^9, 
   3.883906994787064*^9},
 CellLabel->
  "Out[237]=",ExpressionUUID->"c1e3d70b-24c6-4d92-8637-1fde673ba897"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"lineToMetric", "[", " ", 
   RowBox[{"appendixEq64e", "  ", ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "d\[ScriptT]", ",", "d\[ScriptR]", ",", "d\[CurlyPhi]", ",", 
      "d\[ScriptZ]"}], "}"}]}], "]"}], " ", "//", " ", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.822139477747304*^9, 3.822139521605945*^9}},
 CellLabel->
  "In[238]:=",ExpressionUUID->"8583e6e7-effd-4f8d-9c55-f17d4a1de528"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox["1", 
        SuperscriptBox["\[Gamma]", "2"]]}], "0", 
      RowBox[{
       SuperscriptBox["\[ScriptR]", "2"], " ", "\[CapitalOmega]"}], "0"},
     {"0", "1", "0", "0"},
     {
      RowBox[{
       SuperscriptBox["\[ScriptR]", "2"], " ", "\[CapitalOmega]"}], "0", 
      SuperscriptBox["\[ScriptR]", "2"], "0"},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8221395124807463`*^9, 3.8482605786185923`*^9, 
  3.848260905843657*^9, 3.883903459622004*^9, 3.883906994814698*^9},
 CellLabel->
  "Out[238]//MatrixForm=",ExpressionUUID->"65ec845a-86ab-40f1-9b6b-\
72da7820599b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Appendix 65:  Rotating Minkowski", "Section",
 CellChangeTimes->{{3.8221401032223377`*^9, 3.822140114405195*^9}, {
   3.883904519711561*^9, 3.8839045201618137`*^9}, 
   3.883904564610276*^9},ExpressionUUID->"d42bdd56-e92d-4575-bdd3-\
bc97ebcbf615"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "appendixEq65", "]"}], "\[IndentingNewLine]", 
 RowBox[{"appendixEq65", " ", "=", " ", "\[IndentingNewLine]", 
  "appendixEq64e"}]}], "Input",
 CellChangeTimes->{{3.8221401234060917`*^9, 3.822140143749908*^9}},
 CellLabel->
  "In[239]:=",ExpressionUUID->"23c7319c-2675-48b9-8039-49a87fe4ea5e"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["d\[ScriptR]", "2"], "+", 
  SuperscriptBox["d\[ScriptZ]", "2"], "+", 
  RowBox[{
   SuperscriptBox["d\[CurlyPhi]", "2"], " ", 
   SuperscriptBox["\[ScriptR]", "2"]}], "-", 
  FractionBox[
   SuperscriptBox["d\[ScriptT]", "2"], 
   SuperscriptBox["\[Gamma]", "2"]], "+", 
  RowBox[{"2", " ", "d\[ScriptT]", " ", "d\[CurlyPhi]", " ", 
   SuperscriptBox["\[ScriptR]", "2"], " ", "\[CapitalOmega]"}]}]], "Output",
 CellChangeTimes->{3.822140144975518*^9, 3.848260578649383*^9, 
  3.848260905855633*^9, 3.883903459636475*^9, 3.8839069948268127`*^9},
 CellLabel->
  "Out[240]=",ExpressionUUID->"3ee85318-aceb-4190-ab78-8c24cb76c436"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "appendixEq65b", "]"}], "\[IndentingNewLine]", 
 RowBox[{"appendixEq65b", " ", "=", "\[IndentingNewLine]", "appendixEq64d", 
  " "}]}], "Input",
 CellChangeTimes->{{3.822140178574463*^9, 3.822140196509603*^9}},
 CellLabel->
  "In[241]:=",ExpressionUUID->"b161b4be-830b-435e-b1f5-43e4fe6c2eee"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SuperscriptBox["\[Gamma]", "2"]], "\[Equal]", 
  RowBox[{"1", "-", 
   RowBox[{
    SuperscriptBox["\[ScriptR]", "2"], " ", 
    SuperscriptBox["\[CapitalOmega]", "2"]}]}]}]], "Output",
 CellChangeTimes->{3.822140197187602*^9, 3.848260578660242*^9, 
  3.8482609058797073`*^9, 3.883903459661191*^9, 3.8839069948546953`*^9},
 CellLabel->
  "Out[242]=",ExpressionUUID->"a7a77f03-7911-4571-9455-1d342c0918f6"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Appendix 75:  Euclidean Taub NUT ", "Section",
 CellChangeTimes->{{3.8221404200382757`*^9, 3.8221404299256163`*^9}, {
  3.883904609150629*^9, 
  3.883904618072657*^9}},ExpressionUUID->"5c47f7b0-b550-4c2d-84b4-\
7b9a4d5632c5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "use", " ", "ToCurve", " ", "look", " ", "at", " ", "documentation"}], " ",
    "*)"}], " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "appendixEq75", "]"}], " ", "\[IndentingNewLine]", 
   RowBox[{"appendixEq75", "=", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        FractionBox[
         RowBox[{"2", " ", "\[ScriptL]"}], "r"]}], ")"}], " ", 
      RowBox[{"(", " ", 
       RowBox[{
        SuperscriptBox["dr", "2"], " ", "+", " ", 
        RowBox[{
         SuperscriptBox["r", "2"], 
         RowBox[{"(", " ", 
          RowBox[{
           SuperscriptBox["d\[Theta]", "2"], "+", " ", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
            SuperscriptBox["d\[Phi]", "2"]}]}], ")"}]}]}], ")"}]}], " ", "+", 
     " ", 
     RowBox[{
      RowBox[{"(", 
       FractionBox[
        RowBox[{" ", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[ScriptL]", "2"]}]}], 
        RowBox[{"1", " ", "+", " ", 
         RowBox[{"(", 
          FractionBox[
           RowBox[{"2", " ", "\[ScriptL]"}], "r"], ")"}]}]], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"d\[Psi]", " ", "+", " ", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         SuperscriptBox["d\[Phi]", "2"]}]}], ")"}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.822140449974571*^9, 3.8221405988938847`*^9}, {
  3.8839045712508307`*^9, 3.883904575119607*^9}},
 CellLabel->
  "In[243]:=",ExpressionUUID->"e0420516-895f-4e77-b39b-22baf017e5dd"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"4", " ", 
    SuperscriptBox["\[ScriptL]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"d\[Psi]", "+", 
      RowBox[{
       SuperscriptBox["d\[Phi]", "2"], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], 
   RowBox[{"1", "+", 
    FractionBox[
     RowBox[{"2", " ", "\[ScriptL]"}], "r"]}]], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", 
     FractionBox[
      RowBox[{"2", " ", "\[ScriptL]"}], "r"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["dr", "2"], "+", 
     RowBox[{
      SuperscriptBox["r", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["d\[Theta]", "2"], "+", 
        RowBox[{
         SuperscriptBox["d\[Phi]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.8221405705522223`*^9, 3.84826057869416*^9, 
  3.848260905895487*^9, 3.883903459678879*^9, 3.883906994871464*^9},
 CellLabel->
  "Out[244]=",ExpressionUUID->"5ed9ce4d-4d9d-4f24-97f2-0406cb176384"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Appendix 77:  FRLW", "Section",
 CellChangeTimes->{{3.8221403255022793`*^9, 3.822140337237289*^9}, {
  3.883904639436582*^9, 
  3.883904642609515*^9}},ExpressionUUID->"9fcbe88e-b834-4555-9af4-\
6170ddb0c02d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "appendixEq77", "]"}], "\[IndentingNewLine]", 
 RowBox[{"appendixEq77", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["dt", "2"]}], "+", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"R", "[", "t", "]"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["d\[Theta]", "2"], " ", 
       SuperscriptBox["r", "2"]}], "+", 
      FractionBox[
       SuperscriptBox["dr", "2"], 
       RowBox[{"1", "-", 
        RowBox[{"\[Kappa]", " ", 
         SuperscriptBox["r", "2"]}]}]], "+", " ", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
       SuperscriptBox["d\[Phi]", "2"]}]}], ")"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.82214034443904*^9, 3.822140350128685*^9}},
 CellLabel->
  "In[245]:=",ExpressionUUID->"c48580b8-01d1-4139-8081-a0c16098ec98"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["dt", "2"]}], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"R", "[", "t", "]"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["d\[Theta]", "2"], " ", 
      SuperscriptBox["r", "2"]}], "+", 
     FractionBox[
      SuperscriptBox["dr", "2"], 
      RowBox[{"1", "-", 
       RowBox[{
        SuperscriptBox["r", "2"], " ", "\[Kappa]"}]}]], "+", 
     RowBox[{
      SuperscriptBox["d\[Phi]", "2"], " ", 
      SuperscriptBox["r", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.822140359443489*^9, 3.822140377425276*^9}, 
   3.848260578709613*^9, 3.848260905921927*^9, 3.88390345970485*^9, 
   3.8839069949006042`*^9},
 CellLabel->
  "Out[246]=",ExpressionUUID->"a8bf1d95-57ed-4d56-b3e1-d356035bd512"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Appendix 78:  de Sitter Metrics", "Section",
 CellChangeTimes->{{3.822140798190233*^9, 3.8221408070693493`*^9}, {
  3.883904646411908*^9, 
  3.88390465596321*^9}},ExpressionUUID->"08715f96-4f89-4d88-a1f8-\
b871706f1d6c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "appendixEq78", "]"}], "\[IndentingNewLine]", 
 RowBox[{"appendixEq78", "=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"-", " ", 
    SuperscriptBox["dt", "2"]}], "+", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"2", " ", "H", " ", "t"}], "]"}], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["dx", "2"], "+", 
      SuperscriptBox["dy", "2"], "+", 
      SuperscriptBox["dz", "2"]}], ")"}], " "}]}]}]}], "Input",
 CellChangeTimes->{{3.822140819767342*^9, 3.822140855581949*^9}, 
   3.822141358304427*^9},
 CellLabel->
  "In[247]:=",ExpressionUUID->"4d9c2ce1-f468-484f-8f34-90af6559c3b7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["dt", "2"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["dx", "2"], "+", 
     SuperscriptBox["dy", "2"], "+", 
     SuperscriptBox["dz", "2"]}], ")"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", "H", " ", "t"}]]}]}]], "Output",
 CellChangeTimes->{3.822140857934751*^9, 3.8221413589920177`*^9, 
  3.822141407081587*^9, 3.848260578743288*^9, 3.848260905935903*^9, 
  3.883903459721078*^9, 3.8839069949141083`*^9},
 CellLabel->
  "Out[248]=",ExpressionUUID->"4e52f5d3-be91-4786-af7c-da1b3152f720"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "appendixEq78a", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"appendixEq78a", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"x", "\[Rule]", " ", 
      RowBox[{"\[Rho]", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"y", "\[Rule]", " ", 
      RowBox[{"\[Rho]", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"z", "\[Rule]", " ", 
      RowBox[{"\[Rho]", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]}], "\[IndentingNewLine]", 
    "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"appendixEq78a", " ", "//", " ", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.82214088079056*^9, 3.8221408868698387`*^9}, {
  3.822140976780781*^9, 3.8221410118619843`*^9}},
 CellLabel->
  "In[249]:=",ExpressionUUID->"c8f149be-46ef-4176-bc5b-45d496c4f9d4"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"x", "\[Rule]", 
       RowBox[{"\[Rho]", " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]},
     {
      RowBox[{"y", "\[Rule]", 
       RowBox[{"\[Rho]", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}]},
     {
      RowBox[{"z", "\[Rule]", 
       RowBox[{"\[Rho]", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.822141012153474*^9, 3.82214140902442*^9, 
  3.84826057875758*^9, 3.848260905961153*^9, 3.883903459747918*^9, 
  3.88390699494314*^9},
 CellLabel->
  "Out[251]//TableForm=",ExpressionUUID->"ce6983d6-4de8-47c0-b529-\
21c08ab29df4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Dt", "[", " ", "appendixEq78a", "  ", "]"}], " ", "/.", " ", 
   "dtReplace"}], " ", "//", " ", "TableForm"}]], "Input",
 CellChangeTimes->{{3.822141733297216*^9, 3.822141745293952*^9}},
 CellLabel->
  "In[252]:=",ExpressionUUID->"208d4b88-8538-4fac-82d9-16044ffefabc"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"dx", "\[Rule]", 
       RowBox[{
        RowBox[{"d\[Theta]", " ", "\[Rho]", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
        RowBox[{"d\[Rho]", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{"d\[Phi]", " ", "\[Rho]", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}]}]},
     {
      RowBox[{"dy", "\[Rule]", 
       RowBox[{
        RowBox[{"d\[Phi]", " ", "\[Rho]", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"d\[Theta]", " ", "\[Rho]", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
        RowBox[{"d\[Rho]", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}]}]},
     {
      RowBox[{"dz", "\[Rule]", 
       RowBox[{
        RowBox[{"d\[Rho]", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{"d\[Theta]", " ", "\[Rho]", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.822141745593161*^9, 3.848260578791642*^9, 
  3.8482609059750032`*^9, 3.883903459764155*^9, 3.883906994956067*^9},
 CellLabel->
  "Out[252]//TableForm=",ExpressionUUID->"a92655a5-7bec-4cd6-a332-\
02a1a585921d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "appendixEq78b", "]"}], "\[IndentingNewLine]", 
 RowBox[{"appendixEq78b", "=", "\[IndentingNewLine]", 
  RowBox[{"Collect", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"appendixEq78", "[", 
       RowBox[{"[", "2", "]"}], "]"}], " ", "/.", 
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"Dt", "[", " ", "appendixEq78a", "]"}], "  ", "/.", " ", 
        "dtReplace"}], " ", ")"}]}], " ", "//", " ", "Expand"}], "  ", ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["d\[Rho]", "2"], ",", " ", 
      SuperscriptBox["d\[Theta]", "2"], ",", " ", 
      SuperscriptBox["d\[Phi]", "2"]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.822141369782549*^9, 3.822141510870039*^9}},
 CellLabel->
  "In[253]:=",ExpressionUUID->"20e95e18-e606-40a6-bbb9-2a060f77ff01"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["d\[Theta]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "H", " ", "t"}]], " ", 
      SuperscriptBox["\[Rho]", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "H", " ", "t"}]], " ", 
      SuperscriptBox["\[Rho]", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "H", " ", "t"}]], " ", 
      SuperscriptBox["\[Rho]", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], ")"}]}], "+", 
  RowBox[{"d\[Theta]", " ", "d\[Rho]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "H", " ", "t"}]], " ", "\[Rho]", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "H", " ", "t"}]], " ", "\[Rho]", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "H", " ", "t"}]], " ", "\[Rho]", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["d\[Rho]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "H", " ", "t"}]], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "H", " ", "t"}]], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "H", " ", "t"}]], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["d\[Phi]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "H", " ", "t"}]], " ", 
      SuperscriptBox["\[Rho]", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "H", " ", "t"}]], " ", 
      SuperscriptBox["\[Rho]", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.822141378513157*^9, {3.822141412060416*^9, 3.822141479482348*^9}, 
   3.822141511462866*^9, 3.848260578806343*^9, 3.848260906003883*^9, 
   3.883903459791396*^9, 3.8839069949915133`*^9},
 CellLabel->
  "Out[254]=",ExpressionUUID->"4361a21e-dca9-425c-a0b7-485d5e68a7d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "appendixEq78c", "]"}], "\[IndentingNewLine]", 
 RowBox[{"appendixEq78c", "=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"appendixEq78", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "+", "\[IndentingNewLine]", 
   RowBox[{"Collect", "[", " ", 
    RowBox[{
     RowBox[{"Sum", "[", " ", 
      RowBox[{
       RowBox[{"Simplify", "[", " ", 
        RowBox[{"appendixEq78b", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], " ", ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", " ", ",", " ", 
         RowBox[{"Length", "[", " ", "appendixEq78b", "]"}]}], "}"}]}], "]"}],
      " ", ",", " ", 
     SuperscriptBox["\[Rho]", "2"]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.82214151315378*^9, 3.822141596278181*^9}},
 CellLabel->
  "In[255]:=",ExpressionUUID->"02ce0d89-1eea-482e-8abd-de7b1edd3966"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["dt", "2"]}], "+", 
  RowBox[{
   SuperscriptBox["d\[Rho]", "2"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", "H", " ", "t"}]]}], "+", 
  RowBox[{
   SuperscriptBox["\[Rho]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["d\[Theta]", "2"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "H", " ", "t"}]]}], "+", 
     RowBox[{
      SuperscriptBox["d\[Phi]", "2"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "H", " ", "t"}]], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.822141538138921*^9, 3.8221415528137627`*^9}, {
   3.8221415838131647`*^9, 3.822141596828649*^9}, 3.848260578840897*^9, 
   3.848260906042945*^9, 3.883903459829145*^9, 3.883906995028213*^9},
 CellLabel->
  "Out[256]=",ExpressionUUID->"522dbcac-55b8-4360-93dc-2b8ef5a54c4e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "appendixEq78d", "]"}], "\[IndentingNewLine]", 
 RowBox[{"appendixEq78d", "=", "\[IndentingNewLine]", 
  RowBox[{"Collect", "[", " ", 
   RowBox[{"appendixEq78c", " ", ",", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"2", " ", "H", " ", "t"}], "]"}], ",", " ", 
      SuperscriptBox["\[Rho]", "2"]}], "}"}]}], " ", "]"}], " "}]}], "Input",
 CellChangeTimes->{{3.822141612030755*^9, 3.822141654646165*^9}},
 CellLabel->
  "In[257]:=",ExpressionUUID->"0e4dc268-fd5d-4ac4-bc7f-0b7e26865295"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["dt", "2"]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", "H", " ", "t"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["d\[Rho]", "2"], "+", 
     RowBox[{
      SuperscriptBox["\[Rho]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["d\[Theta]", "2"], "+", 
        RowBox[{
         SuperscriptBox["d\[Phi]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{{3.8221416285252743`*^9, 3.822141655226535*^9}, 
   3.84826057885268*^9, 3.848260906055081*^9, 3.883903459843011*^9, 
   3.8839069950403433`*^9},
 CellLabel->
  "Out[258]=",ExpressionUUID->"2d199b3d-97d7-4f66-b519-f554ca493586"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"lineToMetric", "[", " ", 
    RowBox[{"appendixEq78d", " ", ",", " ", 
     RowBox[{"{", 
      RowBox[{"dt", ",", "d\[Rho]", ",", "d\[Theta]", ",", "d\[Phi]"}], 
      "}"}]}], "]"}], " ", "//", " ", "MatrixForm"}], " ", "//", " ", 
  "pdConv"}]], "Input",
 CellChangeTimes->{{3.82214166763335*^9, 3.8221416916459227`*^9}, {
  3.8839075111839933`*^9, 3.8839075127948647`*^9}},
 CellLabel->
  "In[323]:=",ExpressionUUID->"bc767360-0960-4d60-9fd6-3888b94d23f6"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"-", "1"}], "0", "0", "0"},
      {"0", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "H", " ", "t"}]], "0", "0"},
      {"0", "0", 
       RowBox[{
        SuperscriptBox["\[Rho]", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "H", " ", "t"}]]}], "0"},
      {"0", "0", "0", 
       RowBox[{
        SuperscriptBox["\[Rho]", "2"], " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "H", " ", "t"}]]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.822141687326989*^9, 3.8221416923337927`*^9}, 
   3.848260578883709*^9, 3.848260906078195*^9, 3.883903459866646*^9, 
   3.883906995068371*^9, 3.883907513288684*^9},
 CellLabel->
  "Out[323]//TraditionalForm=",ExpressionUUID->"2f0fab39-ae93-4883-875e-\
7b16e6b35a0b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Appendix 83:  Mathison Papapetrou Equations For Spinning Body\
\>", "Section",
 CellChangeTimes->{{3.822141809849341*^9, 3.822141827189536*^9}, {
  3.883904659923223*^9, 
  3.88390468671038*^9}},ExpressionUUID->"81f7edf4-d0ba-4e2d-9a51-\
eaff783080b8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "appendixEq83", "]"}], "\[IndentingNewLine]", 
 RowBox[{"appendixEq83", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["dt", "2"]}], "+", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"R", "[", "t", "]"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["d\[Theta]", "2"], " ", 
       SuperscriptBox["r", "2"]}], "+", 
      FractionBox[
       SuperscriptBox["dr", "2"], 
       RowBox[{"1", "-", 
        RowBox[{"\[Kappa]", " ", 
         SuperscriptBox["r", "2"]}]}]], "+", " ", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
       SuperscriptBox["d\[Phi]", "2"]}]}], ")"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.8221420398003683`*^9, 3.82214204398244*^9}},
 CellLabel->
  "In[260]:=",ExpressionUUID->"9393b669-4d2b-489f-bb9e-a2d03ca3dc09"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["dt", "2"]}], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"R", "[", "t", "]"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["d\[Theta]", "2"], " ", 
      SuperscriptBox["r", "2"]}], "+", 
     FractionBox[
      SuperscriptBox["dr", "2"], 
      RowBox[{"1", "-", 
       RowBox[{
        SuperscriptBox["r", "2"], " ", "\[Kappa]"}]}]], "+", 
     RowBox[{
      SuperscriptBox["d\[Phi]", "2"], " ", 
      SuperscriptBox["r", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.822141832011697*^9, 3.8221420458407087`*^9, 
  3.848260578897085*^9, 3.848260906094391*^9, 3.8839034598848457`*^9, 
  3.883906995082535*^9},
 CellLabel->
  "Out[261]=",ExpressionUUID->"d202f10a-f0c9-477d-bada-08bc00881b69"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Appendix 96:  Rindler Metric", "Section",
 CellChangeTimes->{{3.822142203345211*^9, 3.822142216973534*^9}, {
  3.883904716017057*^9, 
  3.883904744975322*^9}},ExpressionUUID->"160d511b-77ee-4104-89d2-\
77e2714a74e6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"appendixEq96", ",", "z", ",", "g"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"appendixEq96", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"g", " ", "z"}]}], " ", ")"}]}], " ", 
    SuperscriptBox["dt", "2"]}], "+", " ", 
   SuperscriptBox["dx", "2"], "+", " ", 
   SuperscriptBox["dy", "2"], "+", " ", 
   SuperscriptBox["dz", "2"]}]}]}], "Input",
 CellChangeTimes->{{3.8221422277985077`*^9, 3.822142250670753*^9}, {
  3.848261064402072*^9, 3.848261073664165*^9}},
 CellLabel->
  "In[262]:=",ExpressionUUID->"7907b701-da56-4db6-900f-c08323e68fcf"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["dx", "2"], "+", 
  SuperscriptBox["dy", "2"], "+", 
  SuperscriptBox["dz", "2"], "+", 
  RowBox[{
   SuperscriptBox["dt", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"g", " ", "z"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.822142251972268*^9, 3.848260578948748*^9, 3.848260705109556*^9, {
   3.848260763609977*^9, 3.848260771614026*^9}, {3.8482608037709084`*^9, 
   3.848260833384158*^9}, 3.8482609061731663`*^9, {3.8482610662268133`*^9, 
   3.8482610740675163`*^9}, 3.883903459990819*^9, 3.883906995112239*^9},
 CellLabel->
  "Out[263]=",ExpressionUUID->"277a1632-9359-4833-93a3-7addeff8bca6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"lineToMetric", "[", " ", 
   RowBox[{"appendixEq96", " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"dt", ",", "dx", ",", "dy", ",", "dz"}], "}"}]}], "]"}], " ", "//",
   " ", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.822142254785947*^9, 3.822142270309764*^9}, {
  3.848261077328376*^9, 3.8482610795915823`*^9}},
 CellLabel->
  "In[264]:=",ExpressionUUID->"c1bd2b8e-b5d7-411c-85f7-571dba586066"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"g", " ", "z"}]}], "0", "0", "0"},
     {"0", "1", "0", "0"},
     {"0", "0", "1", "0"},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.822142271822935*^9, 3.848260578980954*^9, 3.848260706690352*^9, {
   3.848260763660132*^9, 3.8482607691048317`*^9}, {3.848260805649778*^9, 
   3.848260835666923*^9}, 3.8482609061834707`*^9, {3.848261075826273*^9, 
   3.848261079878397*^9}, 3.8839034600202513`*^9, 3.8839069951246023`*^9},
 CellLabel->
  "Out[264]//MatrixForm=",ExpressionUUID->"ea9167f6-9914-4c1e-b5dd-\
cf1d7567cc4b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Appendix 91:  Vaidya", "Section",
 CellChangeTimes->{{3.822142056965626*^9, 3.822142078413509*^9}, 
   3.8221421221661673`*^9, {3.883904708031971*^9, 
   3.8839047122483253`*^9}},ExpressionUUID->"bf34f306-0271-46e8-a989-\
db0eae45d8cc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "appendixEq91", "]"}], "\[IndentingNewLine]", 
 RowBox[{"appendixEq91", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"1", "-", " ", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"M", "[", "u", "]"}]}], "r"]}], ")"}]}], " ", 
    SuperscriptBox["du", "2"]}], " ", "+", " ", 
   RowBox[{"2", " ", "du", " ", "dr"}], " ", "+", " ", 
   RowBox[{
    SuperscriptBox["r", "2"], " ", 
    RowBox[{"(", " ", 
     RowBox[{
      SuperscriptBox["d\[Theta]", "2"], " ", "+", " ", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
       SuperscriptBox["d\[Phi]", "2"]}]}], ")"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.822142065642157*^9, 3.822142122166402*^9}, {
  3.8839052246304407`*^9, 3.883905224989814*^9}},
 CellLabel->
  "In[265]:=",ExpressionUUID->"c900ec75-0a66-43eb-91f6-b5b5937af9ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", "dr", " ", "du"}], "+", 
  RowBox[{
   SuperscriptBox["du", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"M", "[", "u", "]"}]}], "r"]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["d\[Theta]", "2"], "+", 
     RowBox[{
      SuperscriptBox["d\[Phi]", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.8221421124445953`*^9, 3.8482605789334297`*^9, 
  3.848260906118363*^9, 3.8839034599761744`*^9, 3.883905171239903*^9, 
  3.883905227205936*^9, 3.883906995153607*^9},
 CellLabel->
  "Out[266]=",ExpressionUUID->"c8fe5f50-1f02-44f8-96c7-64dbd495bead"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric91", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric91", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"lineToMetric", "[", 
    RowBox[{"appendixEq91", ",", 
     RowBox[{"{", 
      RowBox[{"du", ",", "dr", ",", "d\[Theta]", ",", "d\[Phi]"}], "}"}]}], 
    "]"}]}], "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric91", "//", " ", "MatrixForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellChangeTimes->{{3.883905172700159*^9, 3.883905192905966*^9}, {
  3.8839052303902283`*^9, 3.8839052438785353`*^9}},
 CellLabel->
  "In[267]:=",ExpressionUUID->"661298dc-5988-4dd0-aaa0-196e2aed06fc"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"M", "(", "u", ")"}]}], "r"], "-", "1"}], "1", "0", "0"},
      {"1", "0", "0", "0"},
      {"0", "0", 
       SuperscriptBox["r", "2"], "0"},
      {"0", "0", "0", 
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.883905185974358*^9, 3.883905193380527*^9}, {
   3.883905228699421*^9, 3.883905244705366*^9}, 3.88390699518657*^9},
 CellLabel->
  "Out[269]//TraditionalForm=",ExpressionUUID->"dedef232-b43e-4604-ae4e-\
b23e953a58ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "g91", " ", "]"}], "\[IndentingNewLine]", 
 RowBox[{"g91", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"ToMetric", "[", 
   RowBox[{"\"\<g91\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{"u", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], " ", ",",
     " ", "metric91", " ", ",", "  ", "\"\<Greek\>\""}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.883905451198443*^9, 3.883905480212852*^9}},
 CellLabel->
  "In[270]:=",ExpressionUUID->"06d2450d-63d6-423f-8e86-79f6a5d0af67"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g91", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellChangeTimes->{3.8839054810274057`*^9, 3.883906995199957*^9},
 CellLabel->
  "Out[271]=",ExpressionUUID->"748dd02a-338b-4fa1-932a-8d69f5dad87d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "massFunction", "]"}], "\[IndentingNewLine]", 
 RowBox[{"massFunction", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"M", "[", "u", "]"}], " ", "==", " ", 
   RowBox[{"M1", " ", "+", " ", 
    RowBox[{
     RowBox[{"(", 
      FractionBox[
       RowBox[{"M2", " ", "-", " ", "M1"}], "2"], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"Tanh", "[", 
        RowBox[{"\[Alpha]", " ", "u"}], "]"}]}], ")"}]}]}]}]}]}], "Input",
 CellChangeTimes->{{3.883905264378392*^9, 3.883905314294458*^9}},
 CellLabel->
  "In[272]:=",ExpressionUUID->"a0b105ae-9a11-484c-a384-a201a2d251ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"M", "[", "u", "]"}], "\[Equal]", 
  RowBox[{"M1", "+", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "M1"}], "+", "M2"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"Tanh", "[", 
       RowBox[{"u", " ", "\[Alpha]"}], "]"}]}], ")"}]}]}]}]], "Output",
 CellChangeTimes->{3.883905319494355*^9, 3.8839064457573757`*^9, 
  3.883906995230464*^9},
 CellLabel->
  "Out[273]=",ExpressionUUID->"6702c4c3-baf9-4349-ace2-8941fd85e3c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "massDerivatives", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"massDerivatives", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"massFunction", " ", ",", " ", "\[IndentingNewLine]", 
      RowBox[{"D", "[", 
       RowBox[{"massFunction", " ", ",", "u"}], "]"}], " ", ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"D", "[", 
       RowBox[{"massFunction", " ", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
     "}"}], " ", "/.", " ", 
    RowBox[{"Equal", "->", " ", "Rule"}]}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"massDerivatives", "  ", "//", " ", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.8839053292134*^9, 3.883905373663616*^9}, {
  3.883905408661388*^9, 3.883905424693448*^9}},
 CellLabel->
  "In[274]:=",ExpressionUUID->"0f7126d5-6283-4253-a486-ca50282ab597"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"M", "[", "u", "]"}], "\[Rule]", 
       RowBox[{"M1", "+", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "M1"}], "+", "M2"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"Tanh", "[", 
            RowBox[{"u", " ", "\[Alpha]"}], "]"}]}], ")"}]}]}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["M", "\[Prime]",
         MultilineFunction->None], "[", "u", "]"}], "\[Rule]", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "M1"}], "+", "M2"}], ")"}], " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"Sech", "[", 
          RowBox[{"u", " ", "\[Alpha]"}], "]"}], "2"]}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["M", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}], "\[Rule]", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "M1"}], "+", "M2"}], ")"}], " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sech", "[", 
            RowBox[{"u", " ", "\[Alpha]"}], "]"}], "2"], " ", 
          RowBox[{"Tanh", "[", 
           RowBox[{"u", " ", "\[Alpha]"}], "]"}]}], ")"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.88390533091471*^9, 3.883905339138667*^9}, 
   3.883905374160575*^9, {3.883905415455567*^9, 3.883905425099321*^9}, 
   3.883906447626981*^9, 3.883906995251267*^9},
 CellLabel->
  "Out[276]//TableForm=",ExpressionUUID->"481bf6dc-2281-4d4f-873a-\
4d0da2a0dc1a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "tetrad91", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tetrad91", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"e0", " ", "\[Equal]", "  ", 
      RowBox[{"{", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "*", 
           RowBox[{"g91", "[", 
            RowBox[{
             RowBox[{"-", "u"}], ",", 
             RowBox[{"-", "u"}]}], "]"}]}], "]"}]], ",", "0", ",", "0", ",", 
        "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"e1", " ", "\[Equal]", " ", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"g91", "[", 
          RowBox[{
           RowBox[{"-", "u"}], ",", 
           RowBox[{"-", "u"}]}], "]"}]}], "]"}], 
       RowBox[{"{", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"g91", "[", 
           RowBox[{
            RowBox[{"-", "u"}], ",", 
            RowBox[{"-", "u"}]}], "]"}]], ",", "1", ",", "0", ",", "0"}], 
        "}"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"e2", " ", "\[Equal]", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        FractionBox["1", 
         RowBox[{"PowerExpand", "[", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"g91", "[", 
            RowBox[{
             RowBox[{"-", "\[Theta]"}], ",", 
             RowBox[{"-", "\[Theta]"}]}], "]"}], "]"}], "]"}]], ",", "0"}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"e3", " ", "\[Equal]", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", 
        FractionBox["1", 
         RowBox[{"PowerExpand", "[", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"g91", "[", 
            RowBox[{
             RowBox[{"-", "\[Phi]"}], ",", 
             RowBox[{"-", "\[Phi]"}]}], "]"}], "]"}], "]"}]]}], "}"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"tetrad91", " ", "//", " ", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.883905572398046*^9, 3.883905605203209*^9}, {
  3.883905679410405*^9, 3.883905707816052*^9}, {3.8839057526946774`*^9, 
  3.883905758824548*^9}, {3.883905802924548*^9, 3.883905819530929*^9}, {
  3.883906304733163*^9, 3.883906308051406*^9}, {3.883906352783332*^9, 
  3.88390636369449*^9}},
 CellLabel->
  "In[277]:=",ExpressionUUID->"6093ef81-bb43-4c3d-8a44-3ab5a848e2f7"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"e0", "\[Equal]", 
        RowBox[{"{", 
         RowBox[{
          FractionBox["1", 
           SqrtBox[
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{"2", " ", 
               RowBox[{"M", "[", "u", "]"}]}], "r"]}]]], ",", "0", ",", "0", 
          ",", "0"}], "}"}]}]},
      {
       RowBox[{"e1", "\[Equal]", 
        RowBox[{"{", 
         RowBox[{
          FractionBox[
           SqrtBox[
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{"2", " ", 
               RowBox[{"M", "[", "u", "]"}]}], "r"]}]], 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            FractionBox[
             RowBox[{"2", " ", 
              RowBox[{"M", "[", "u", "]"}]}], "r"]}]], ",", 
          SqrtBox[
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"2", " ", 
              RowBox[{"M", "[", "u", "]"}]}], "r"]}]], ",", "0", ",", "0"}], 
         "}"}]}]},
      {
       RowBox[{"e2", "\[Equal]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          FractionBox["1", "r"], ",", "0"}], "}"}]}]},
      {
       RowBox[{"e3", "\[Equal]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", 
          FractionBox[
           RowBox[{"Csc", "[", "\[Theta]", "]"}], "r"]}], "}"}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.883905761979583*^9, 3.8839058220011597`*^9, 
  3.883906039212529*^9, 3.883906309410122*^9, 3.883906364119439*^9, 
  3.88390645037703*^9, 3.883906995287842*^9},
 CellLabel->
  "Out[279]//MatrixForm=",ExpressionUUID->"04e632bc-09f5-4511-974d-\
4810bf9a8dd3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "e0", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Always", " ", "check", " ", "if", " ", "indices", " ", "are", " ", "up", 
    " ", "or", " ", "down", " ", "and", " ", "these", " ", "are", " ", "UP"}],
    " ", "*)"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"e0", " ", "=", " ", 
  RowBox[{"ToTensor", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<NewTensor\>\"", " ", ",", " ", "\"\<e0\>\""}], "}"}], " ", 
    ",", "g91", " ", ",", " ", 
    RowBox[{"tetrad91", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", ",", " ", 
    RowBox[{"{", "\[Mu]", "}"}]}], "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.848223464059928*^9, 3.848223470950391*^9}, 
   3.8482243812333384`*^9, {3.8482260385537167`*^9, 3.8482260391759377`*^9}, {
   3.848227317208695*^9, 3.848227318054558*^9}, {3.848228270433114*^9, 
   3.8482282720644913`*^9}, {3.8482294132023163`*^9, 3.848229413593457*^9}, {
   3.8737333612272453`*^9, 3.873733362557562*^9}, {3.88390620023929*^9, 
   3.883906237028245*^9}, {3.88390663922401*^9, 3.88390664026999*^9}},
 CellLabel->
  "In[280]:=",ExpressionUUID->"afc49ee9-5e12-4686-990d-b8081d7c34c3"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["e0", "", "\[Mu]"],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.848223471912197*^9, 3.84822351414655*^9, 
  3.848224381234922*^9, 3.84822605536651*^9, 3.8482273331254177`*^9, 
  3.848227752912285*^9, 3.848228272834257*^9, 3.848229426895555*^9, 
  3.848237678014843*^9, 3.883906237494611*^9, 3.883906312567338*^9, 
  3.88390637348003*^9, 3.88390645740904*^9, 3.883906995304845*^9},
 CellLabel->
  "Out[281]=",ExpressionUUID->"a3abe70a-bfae-471d-8d0e-6c63a21c077d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "e1", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Always", " ", "check", " ", "if", " ", "indices", " ", "are", " ", "up", 
    " ", "or", " ", "down", " ", "and", " ", "these", " ", "are", " ", "UP"}],
    "*)"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"e1", " ", "=", " ", 
  RowBox[{"ToTensor", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<NewTensor\>\"", " ", ",", " ", "\"\<e1\>\""}], "}"}], " ", 
    ",", "g91", " ", ",", " ", 
    RowBox[{"tetrad91", "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", ",", " ", 
    RowBox[{"{", "\[Mu]", "}"}]}], "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.84822352295592*^9, 3.848223532628107*^9}, 
   3.8482243812352953`*^9, {3.8482260429214773`*^9, 3.848226043334833*^9}, {
   3.8482273212566147`*^9, 3.8482273217180023`*^9}, {3.8482282759687843`*^9, 
   3.8482282781045628`*^9}, {3.848229416250186*^9, 3.848229416808537*^9}, {
   3.873733366859096*^9, 3.873733368500683*^9}, {3.8839062037605743`*^9, 
   3.8839062403689423`*^9}, {3.88390664361161*^9, 3.883906644263957*^9}},
 CellLabel->
  "In[282]:=",ExpressionUUID->"d7371898-5664-4a0b-9921-e0ed527d6fca"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["e1", "", "\[Mu]"],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.8482235331758842`*^9, 3.848224381236953*^9, 
  3.848226056971047*^9, 3.848227334509531*^9, 3.8482277529503403`*^9, 
  3.848228278762145*^9, 3.848229428467861*^9, 3.84823767803195*^9, 
  3.8839062406989813`*^9, 3.883906314152802*^9, 3.883906373539987*^9, 
  3.8839064574651012`*^9, 3.8839069953382177`*^9},
 CellLabel->
  "Out[283]=",ExpressionUUID->"f524033b-77f2-4c64-902e-b497bc79757b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "e2", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Always", " ", "check", " ", "if", " ", "indices", " ", "are", " ", "up", 
    " ", "or", " ", "down", " ", "and", " ", "these", " ", "are", " ", "UP"}],
    " ", "*)"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"e2", " ", "=", " ", 
  RowBox[{"ToTensor", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<NewTensor\>\"", " ", ",", " ", "\"\<e2\>\""}], "}"}], " ", 
    ",", "g91", " ", ",", " ", 
    RowBox[{"tetrad91", "[", 
     RowBox[{"[", 
      RowBox[{"3", ",", "2"}], "]"}], "]"}], " ", ",", " ", 
    RowBox[{"{", "\[Mu]", "}"}]}], "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.848223541259647*^9, 3.848223549363646*^9}, {
   3.848223593230089*^9, 3.848223601547662*^9}, 3.848224381237541*^9, {
   3.848226047129753*^9, 3.848226047551119*^9}, {3.848227325088573*^9, 
   3.8482273255343246`*^9}, {3.848228281192997*^9, 3.848228282600294*^9}, {
   3.84822941957856*^9, 3.848229420280414*^9}, {3.8737333711869783`*^9, 
   3.873733373109192*^9}, {3.883906207079382*^9, 3.8839062426191483`*^9}, {
   3.883906647076733*^9, 3.8839066475936832`*^9}},
 CellLabel->
  "In[284]:=",ExpressionUUID->"6648f86f-73c3-4d1e-b48b-56ca684f02b8"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["e2", "", "\[Mu]"],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.84822354983495*^9, 3.848223602247395*^9, 
  3.8482243812394657`*^9, 3.848226058892399*^9, 3.8482273364765253`*^9, 
  3.848227752969081*^9, 3.848228283218144*^9, 3.848229429937379*^9, 
  3.8482376780453863`*^9, 3.883906242926495*^9, 3.8839063155723124`*^9, 
  3.883906373554036*^9, 3.883906457480176*^9, 3.883906995352717*^9},
 CellLabel->
  "Out[285]=",ExpressionUUID->"e807a116-d2b5-4d14-a015-95e82b0e8bb6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "e3", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Always", " ", "check", " ", "if", " ", "indices", " ", "are", " ", "up", 
    " ", "or", " ", "down", " ", "and", " ", "these", " ", "are", " ", "UP"}],
    " ", "*)"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"e3", " ", "=", " ", 
  RowBox[{"ToTensor", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<NewTensor\>\"", " ", ",", " ", "\"\<e3\>\""}], "}"}], " ", 
    ",", "g91", " ", ",", " ", 
    RowBox[{"tetrad91", "[", 
     RowBox[{"[", 
      RowBox[{"4", ",", "2"}], "]"}], "]"}], " ", ",", " ", 
    RowBox[{"{", "\[Mu]", "}"}]}], "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.848223554620051*^9, 3.848223563955687*^9}, {
   3.8482236049412537`*^9, 3.84822361022784*^9}, 3.848224381240014*^9, {
   3.848226051257503*^9, 3.8482260520714293`*^9}, {3.848227328904667*^9, 
   3.848227329326262*^9}, {3.848228285337075*^9, 3.848228287256715*^9}, {
   3.848229423146452*^9, 3.84822942365696*^9}, {3.87373337823485*^9, 
   3.873733379781621*^9}, {3.883906211050735*^9, 3.883906244699971*^9}, {
   3.8839066500578938`*^9, 3.8839066520825377`*^9}},
 CellLabel->
  "In[286]:=",ExpressionUUID->"b7b26f1d-d1a7-45d7-875f-ca3ebb70353c"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["e3", "", "\[Mu]"],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.848223564995236*^9, 3.8482235752011757`*^9}, 
   3.8482236109957867`*^9, 3.848224381241589*^9, 3.8482260606606007`*^9, 
   3.848227338156362*^9, 3.848227753004251*^9, 3.848228287812702*^9, 
   3.848229431336131*^9, 3.8482376780615673`*^9, 3.8839062450656443`*^9, 
   3.883906317401733*^9, 3.883906373586439*^9, 3.883906457512804*^9, 
   3.883906995389642*^9},
 CellLabel->
  "Out[287]=",ExpressionUUID->"60c0b51c-6374-4397-ba1f-31de60a7e1e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[ScriptE]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[ScriptE]", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"{", " ", 
   RowBox[{"e0", ",", "e1", ",", "e2", ",", "e3"}], "}"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.848224381242104*^9},
 CellLabel->
  "In[288]:=",ExpressionUUID->"ccf5dd56-8f63-453e-88bb-e98f8257f7ce"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    SubsuperscriptBox["e0", "", "\[Mu]"],
    DisplayForm], ",", 
   TagBox[
    SubsuperscriptBox["e1", "", "\[Mu]"],
    DisplayForm], ",", 
   TagBox[
    SubsuperscriptBox["e2", "", "\[Mu]"],
    DisplayForm], ",", 
   TagBox[
    SubsuperscriptBox["e3", "", "\[Mu]"],
    DisplayForm]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.848223613031617*^9, 3.8482243812437763`*^9, 
  3.8482260635440693`*^9, 3.848227340342976*^9, 3.848227753026196*^9, 
  3.8482282911916103`*^9, 3.848229433271633*^9, 3.8482376780723248`*^9, 
  3.883906247381296*^9, 3.8839063190586557`*^9, 3.883906373600856*^9, 
  3.883906457527358*^9, 3.883906995406198*^9},
 CellLabel->
  "Out[289]=",ExpressionUUID->"3784b276-6c89-44ac-99e8-fae6ca4adad4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"TensorValues", "[", 
       RowBox[{"MergeTensors", "[", 
        RowBox[{
         RowBox[{"g91", " ", "[", 
          RowBox[{
           RowBox[{"-", "\[Alpha]"}], ",", 
           RowBox[{"-", "\[Beta]"}]}], "]"}], 
         RowBox[{
          RowBox[{"\[ScriptE]", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", "\[Alpha]", "]"}], 
         RowBox[{
          RowBox[{"\[ScriptE]", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", "\[Beta]", "]"}]}], "]"}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "  ", "//", " ", 
    "Expand"}], " ", "//", " ", "FullSimplify"}], " ", "//", " ", 
  "MatrixForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.84822507402914*^9, 3.8482251306631517`*^9}, {
  3.848225163494828*^9, 3.848225192018127*^9}, {3.8482260727058887`*^9, 
  3.84822607361522*^9}, {3.848227348168742*^9, 3.8482273485503407`*^9}, {
  3.84822829361722*^9, 3.8482282950481253`*^9}, {3.848228845833626*^9, 
  3.8482288528886757`*^9}, {3.848229441322661*^9, 3.848229441800511*^9}, {
  3.88390625103498*^9, 3.883906261024404*^9}},
 CellLabel->
  "In[290]:=",ExpressionUUID->"67e64f4c-a4e8-405d-aa79-4433fd72ffbc"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], "2", "0", "0"},
     {"2", 
      RowBox[{"-", "3"}], "0", "0"},
     {"0", "0", "1", "0"},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.848225131172542*^9, {3.848225164937395*^9, 3.848225192018488*^9}, 
   3.848226075528942*^9, 3.848227351199624*^9, 3.848227753300462*^9, 
   3.848228295890533*^9, 3.84822885336161*^9, 3.848229443252534*^9, 
   3.848237678336722*^9, 3.883906262483506*^9, 3.883906320801374*^9, 
   3.883906373832452*^9, {3.88390643642979*^9, 3.883906457761801*^9}, 
   3.883906995642136*^9},
 CellLabel->
  "Out[290]//MatrixForm=",ExpressionUUID->"e3ee061f-5e74-4704-a636-\
5708eb925efd"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[ScriptU]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[ScriptU]", " ", "=", " ", 
  RowBox[{"ToTensor", "[", " ", 
   RowBox[{"\"\<u\>\"", " ", ",", "g91", " ", ",", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"g91", "[", 
          RowBox[{
           RowBox[{"-", "u"}], ",", 
           RowBox[{"-", "u"}]}], "]"}]}], "]"}]], ",", "0", ",", "0", ",", 
      "0"}], "}"}], " ", ",", " ", 
    RowBox[{"{", "\[Mu]", "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8839067767467546`*^9, 3.883906813050403*^9}},
 CellLabel->
  "In[291]:=",ExpressionUUID->"859707f8-6c4d-4cc0-bfc1-c6a39a5efc74"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["u", "", "\[Mu]"],
  DisplayForm]], "Output",
 CellChangeTimes->{3.883906819968252*^9, 3.883906995721385*^9},
 CellLabel->
  "Out[292]=",ExpressionUUID->"31509de2-7c55-443c-ab97-9f21545fa4fc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Four", " ", "velocity", " ", "should", " ", "be", " ", "normalized", " ",
      "to", " ", "minus", " ", "one"}], "..."}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[ScriptU]", "[", "\[Mu]", "]"}], 
    RowBox[{"\[ScriptU]", "[", 
     RowBox[{"-", "\[Mu]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"MergeTensors", "[", 
    RowBox[{
     RowBox[{"\[ScriptU]", "[", "\[Mu]", "]"}], 
     RowBox[{"\[ScriptU]", "[", 
      RowBox[{"-", "\[Mu]"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"MergeTensors", "[", 
       RowBox[{
        RowBox[{"\[ScriptU]", "[", "\[Mu]", "]"}], 
        RowBox[{"\[ScriptU]", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}]}], "]"}], "]"}], " ", "//", " ", 
     "Expand"}], " ", "//", " ", "Simplify"}]}]}]], "Input",
 CellChangeTimes->{{3.8839072796494093`*^9, 3.8839073253413486`*^9}},
 CellLabel->
  "In[314]:=",ExpressionUUID->"46e0269b-2113-4698-a5d5-48b1b8d4adaf"],

Cell[BoxData[
 RowBox[{
  TagBox[
   SubsuperscriptBox["u", "\[Mu]", ""],
   DisplayForm], " ", 
  TagBox[
   SubsuperscriptBox["u", "", "\[Mu]"],
   DisplayForm]}]], "Output",
 CellChangeTimes->{{3.883907282957046*^9, 3.883907325656934*^9}},
 CellLabel->
  "Out[314]=",ExpressionUUID->"391ebd03-27cd-4f8f-8d8e-7f8bde9d33a5"],

Cell[BoxData[
 TagBox["\<\"(u\[CenterDot]u)\"\>",
  DisplayForm]], "Output",
 CellChangeTimes->{{3.883907282957046*^9, 3.883907325680513*^9}},
 CellLabel->
  "Out[315]=",ExpressionUUID->"292f0484-2f46-4c81-a6cf-1a0d9a878670"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{{3.883907282957046*^9, 3.883907325684657*^9}},
 CellLabel->
  "Out[316]=",ExpressionUUID->"cf925146-777c-4d80-9052-d110c2230527"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Looks", " ", "like", " ", "it", " ", "closer", " ", "to", " ", "being", 
     " ", "on", " ", "track"}], "..."}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[ScriptU]", "[", "\[Nu]", "]"}], 
    RowBox[{"CovariantD", "[", 
     RowBox[{
      RowBox[{"\[ScriptU]", "[", 
       RowBox[{"-", "\[Mu]"}], "]"}], ",", 
      RowBox[{"-", "\[Nu]"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"MergeTensors", "[", 
    RowBox[{
     RowBox[{"\[ScriptU]", "[", "\[Nu]", "]"}], 
     RowBox[{"CovariantD", "[", 
      RowBox[{
       RowBox[{"\[ScriptU]", "[", 
        RowBox[{"-", "\[Mu]"}], "]"}], ",", 
       RowBox[{"-", "\[Nu]"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"MergeTensors", "[", 
       RowBox[{
        RowBox[{"\[ScriptU]", "[", "\[Nu]", "]"}], 
        RowBox[{"CovariantD", "[", 
         RowBox[{
          RowBox[{"\[ScriptU]", "[", 
           RowBox[{"-", "\[Mu]"}], "]"}], ",", 
          RowBox[{"-", "\[Nu]"}]}], "]"}]}], "]"}], "]"}], " ", "//", " ", 
     "Expand"}], " ", "//", " ", "Simplify"}]}]}]], "Input",
 CellChangeTimes->{{3.88390709142589*^9, 3.883907153990904*^9}, {
  3.8839073319916487`*^9, 3.88390734070933*^9}, {3.8839074692558327`*^9, 
  3.883907477962488*^9}},
 CellLabel->
  "In[320]:=",ExpressionUUID->"f5b7d0d6-251e-4ded-b81b-dc2e172e2394"],

Cell[BoxData[
 RowBox[{
  TagBox[
   SubsuperscriptBox["u", "", "\[Nu]"],
   DisplayForm], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      TagBox[
       SubsuperscriptBox["u", "\[Alpha]", ""],
       DisplayForm]}], " ", 
     TagBox[
      SubsuperscriptBox["\[CapitalGamma]", 
       RowBox[{"  ", "\[Mu]\[Nu]"}], 
       RowBox[{"\[Alpha]", "    "}]],
      DisplayForm]}], "+", 
    TagBox[
     SubsuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[PartialD]", "u"}], ")"}], "\[Nu]\[Mu]", ""],
     DisplayForm]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.883907102238349*^9, 3.8839071544125443`*^9}, 
   3.883907341781014*^9, 3.8839074782896557`*^9},
 CellLabel->
  "Out[320]=",ExpressionUUID->"a9511cab-3596-4c8f-af1c-10c0bf8d57ba"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "\[CenterDot]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"u", "\[CenterDot]", "u"}], ")"}], "\[CenterDot]", 
         "\[CapitalGamma]"}], ")"}]}], ")"}], "+", 
     RowBox[{"(", 
      RowBox[{"u", "\[CenterDot]", 
       RowBox[{"(", 
        RowBox[{"\[PartialD]", "u"}], ")"}]}], ")"}]}], ")"}], "\[Mu]", ""],
  DisplayForm]], "Output",
 CellChangeTimes->{{3.883907102238349*^9, 3.8839071544125443`*^9}, 
   3.883907341781014*^9, 3.883907478333912*^9},
 CellLabel->
  "Out[321]=",ExpressionUUID->"5e3b986b-da82-46f6-a3d2-05009b5244ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   FractionBox[
    RowBox[{
     RowBox[{"r", " ", 
      RowBox[{"M", "[", "u", "]"}]}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"M", "[", "u", "]"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox["r", "2"], " ", 
      RowBox[{
       SuperscriptBox["M", "\[Prime]",
        MultilineFunction->None], "[", "u", "]"}]}]}], 
    RowBox[{"r", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", 
        RowBox[{"2", " ", 
         RowBox[{"M", "[", "u", "]"}]}]}], ")"}], "2"]}]], ",", "0", ",", 
   "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.883907102238349*^9, 3.8839071544125443`*^9}, 
   3.883907341781014*^9, 3.883907478382908*^9},
 CellLabel->
  "Out[322]=",ExpressionUUID->"4e77d694-a0e3-474d-9930-28dc9ab3ce06"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Line Element and Metric 8.73:  Kerr Space Time and Killing Vectors \
\>", "Section",
 CellChangeTimes->{{3.883912640522965*^9, 3.883912697734824*^9}, {
  3.883915032597403*^9, 
  3.883915048673625*^9}},ExpressionUUID->"fc785680-d915-40ca-ab51-\
58fa947ca717"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq8pt73", "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq8pt73", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"2", " ", "M", " ", "r"}], "\[CapitalSigma]"]}], ")"}]}], "  ", 
    SuperscriptBox["dt", "2"]}], " ", "-", " ", 
   RowBox[{
    RowBox[{"(", " ", 
     FractionBox[
      RowBox[{"2", " ", "M", "  ", "r", " "}], "\[CapitalSigma]"], ")"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", "d\[Phi]"}], " ", 
       "-", " ", "dt"}], ")"}], "2"]}], "+", " ", 
   RowBox[{
    RowBox[{"(", 
     FractionBox["\[CapitalSigma]", "\[CapitalDelta]"], ")"}], " ", 
    SuperscriptBox["dr", "2"]}], " ", "+", 
   RowBox[{"\[CapitalSigma]", " ", 
    SuperscriptBox["d\[Theta]", "2"]}], "+", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
    RowBox[{"(", " ", 
     RowBox[{
      SuperscriptBox["r", "2"], "+", " ", 
      SuperscriptBox["a", "2"]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
    SuperscriptBox["d\[Phi]", "2"]}]}]}]}], "Input",
 CellChangeTimes->{{3.8839123078239393`*^9, 3.883912374561623*^9}, {
   3.883912408683362*^9, 3.8839124586109867`*^9}, 3.883995570012533*^9},
 CellLabel->
  "In[665]:=",ExpressionUUID->"d8d0de1e-92d4-4263-be05-78d1e190df66"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["dt", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox[
      RowBox[{"2", " ", "M", " ", "r"}], "\[CapitalSigma]"]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["d\[Theta]", "2"], " ", "\[CapitalSigma]"}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["dr", "2"], " ", "\[CapitalSigma]"}], "\[CapitalDelta]"], 
  "+", 
  RowBox[{
   SuperscriptBox["d\[Phi]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["a", "2"], "+", 
     SuperscriptBox["r", "2"]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "4"]}], "-", 
  FractionBox[
   RowBox[{"2", " ", "M", " ", "r", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "dt"}], "+", 
       RowBox[{"a", " ", "d\[Phi]", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"]}], 
   "\[CapitalSigma]"]}]], "Output",
 CellChangeTimes->{3.883912475927569*^9, 3.883995578502584*^9},
 CellLabel->
  "Out[666]=",ExpressionUUID->"e295684b-f44a-4e1c-9c6d-e7c7229f9c0b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric8pt73a", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric8pt73a", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"lineToMetric", "[", 
      RowBox[{"eq8pt73", " ", ",", 
       RowBox[{"{", 
        RowBox[{"dt", ",", "dr", ",", "d\[Theta]", ",", "d\[Phi]"}], "}"}]}], 
      "]"}], "  ", "//", " ", "Expand"}], " ", "//", " ", "Simplify"}]}], " ",
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric8pt73a", "//", " ", "MatrixForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellChangeTimes->{{3.883912478008648*^9, 3.88391253505658*^9}, {
  3.8839130994022837`*^9, 3.883913100428204*^9}, {3.883913563205447*^9, 
  3.883913565656908*^9}},
 CellLabel->
  "In[667]:=",ExpressionUUID->"a49b6bc3-dd5b-4da6-9809-427501eb04aa"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"-", "1"}], "0", "0", 
       FractionBox[
        RowBox[{"2", " ", "a", " ", "M", " ", "r", " ", 
         RowBox[{
          SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}], 
        "\[CapitalSigma]"]},
      {"0", 
       FractionBox["\[CapitalSigma]", "\[CapitalDelta]"], "0", "0"},
      {"0", "0", "\[CapitalSigma]", "0"},
      {
       FractionBox[
        RowBox[{"2", " ", "a", " ", "M", " ", "r", " ", 
         RowBox[{
          SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}], 
        "\[CapitalSigma]"], "0", "0", 
       FractionBox[
        RowBox[{
         RowBox[{
          SuperscriptBox["sin", "4"], "(", "\[Theta]", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"\[CapitalSigma]", "-", 
              RowBox[{"2", " ", "M", " ", "r"}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["r", "2"], " ", "\[CapitalSigma]"}]}], ")"}]}], 
        "\[CapitalSigma]"]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{3.883912535668208*^9, 3.883913100909317*^9, 
  3.8839135672213984`*^9, 3.883995582064995*^9},
 CellLabel->
  "Out[669]//TraditionalForm=",ExpressionUUID->"e3dac6a0-8d9f-4390-ad61-\
8c58160159da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "sigmaDeltaFunction", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigmaDeltaFunction", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[CapitalSigma]", "->", " ", 
      RowBox[{"\[CapitalSigma]", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]", "->", " ", 
      RowBox[{"\[CapitalDelta]", "[", "r", "]"}]}]}], "\[IndentingNewLine]", 
    "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"sigmaDeltaFunction", "  ", "//", " ", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.855920588698358*^9, 3.855920639596554*^9}},
 CellLabel->
  "In[491]:=",ExpressionUUID->"b3fcbdba-4935-46b1-870f-449aae7dceb3"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"\[CapitalSigma]", "\[Rule]", 
       RowBox[{"\[CapitalSigma]", "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}]}]},
     {
      RowBox[{"\[CapitalDelta]", "\[Rule]", 
       RowBox[{"\[CapitalDelta]", "[", "r", "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8559206301007757`*^9, 3.85592064006682*^9}, 
   3.855921019852298*^9, 3.855959737740024*^9, 3.855997244416374*^9, 
   3.865939598756407*^9, 3.877611430832026*^9, 3.87761303047379*^9, 
   3.883913604099266*^9},
 CellLabel->
  "Out[493]//TableForm=",ExpressionUUID->"7c58951b-52a4-4c46-bfaf-\
59174575f33b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric8pt73", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric8pt73", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"metric8pt73a", " ", "/.", " ", "sigmaDeltaFunction"}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric8pt73", " ", "//", " ", "MatrixForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellChangeTimes->{{3.8839135774135313`*^9, 3.8839136189176683`*^9}},
 CellLabel->
  "In[499]:=",ExpressionUUID->"6052c375-d323-4682-872c-9565302389b7"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"-", "1"}], "0", "0", 
       FractionBox[
        RowBox[{"2", " ", "a", " ", "M", " ", "r", " ", 
         RowBox[{
          SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}], 
        RowBox[{"\[CapitalSigma]", "(", 
         RowBox[{"r", ",", "\[Theta]"}], ")"}]]},
      {"0", 
       FractionBox[
        RowBox[{"\[CapitalSigma]", "(", 
         RowBox[{"r", ",", "\[Theta]"}], ")"}], 
        RowBox[{"\[CapitalDelta]", "(", "r", ")"}]], "0", "0"},
      {"0", "0", 
       RowBox[{"\[CapitalSigma]", "(", 
        RowBox[{"r", ",", "\[Theta]"}], ")"}], "0"},
      {
       FractionBox[
        RowBox[{"2", " ", "a", " ", "M", " ", "r", " ", 
         RowBox[{
          SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}], 
        RowBox[{"\[CapitalSigma]", "(", 
         RowBox[{"r", ",", "\[Theta]"}], ")"}]], "0", "0", 
       FractionBox[
        RowBox[{
         RowBox[{
          SuperscriptBox["sin", "4"], "(", "\[Theta]", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[CapitalSigma]", "(", 
               RowBox[{"r", ",", "\[Theta]"}], ")"}], "-", 
              RowBox[{"2", " ", "M", " ", "r"}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["r", "2"], " ", 
            RowBox[{"\[CapitalSigma]", "(", 
             RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], ")"}]}], 
        RowBox[{"\[CapitalSigma]", "(", 
         RowBox[{"r", ",", "\[Theta]"}], ")"}]]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.883913605867405*^9, 3.8839136193477077`*^9}},
 CellLabel->
  "Out[501]//TraditionalForm=",ExpressionUUID->"ef0bbcda-927b-4877-9a55-\
eea4b52d11b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "g8pt73", " ", "]"}], "\[IndentingNewLine]", 
 RowBox[{"g8pt73", "  ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"ToMetric", "[", 
   RowBox[{"\"\<g8pt73\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], " ", ",",
     " ", "metric8pt73", " ", ",", "  ", "\"\<Greek\>\""}], "]"}]}]}], "Input",\

 CellChangeTimes->{{3.8839139201186*^9, 3.883913973973727*^9}},
 CellLabel->
  "In[504]:=",ExpressionUUID->"474bd2ba-4e91-4801-b096-ae6341823cfb"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g8pt73", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellChangeTimes->{{3.883913968519918*^9, 3.883913974506535*^9}},
 CellLabel->
  "Out[505]=",ExpressionUUID->"2987e530-cee6-4956-8c46-844028f75336"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq8pt74", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq8pt74", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[CapitalSigma]", "->", "  ", 
      RowBox[{
       SuperscriptBox["r", "2"], "+", " ", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]}], "  ", ",", " ", 
     "\[IndentingNewLine]", " ", 
     RowBox[{"\[CapitalDelta]", "->", "   ", 
      RowBox[{
       SuperscriptBox["r", "2"], "-", 
       RowBox[{"2", " ", "M", " ", "r"}], " ", "+", " ", 
       SuperscriptBox["a", "2"]}]}]}], "\[IndentingNewLine]", "}"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq8pt74", " ", "//", " ", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.8559196265005093`*^9, 3.855919669926269*^9}, {
  3.855920195377442*^9, 3.855920195682721*^9}, {3.8839125670755177`*^9, 
  3.8839125939959383`*^9}},
 CellLabel->
  "In[454]:=",ExpressionUUID->"2868584a-1989-486a-b351-c05672028f6b"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"\[CapitalSigma]", "\[Rule]", 
       RowBox[{
        SuperscriptBox["r", "2"], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]}]},
     {
      RowBox[{"\[CapitalDelta]", "\[Rule]", 
       RowBox[{
        SuperscriptBox["a", "2"], "-", 
        RowBox[{"2", " ", "M", " ", "r"}], "+", 
        SuperscriptBox["r", "2"]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.855919670518941*^9, 3.855920216085907*^9, 
  3.855921019868086*^9, 3.8559597377555847`*^9, 3.8559972444551907`*^9, 
  3.865939598775593*^9, 3.877611430858059*^9, 3.877613030494409*^9, 
  3.883912595025716*^9},
 CellLabel->
  "Out[456]//TableForm=",ExpressionUUID->"29f39b54-e775-49d7-84ef-\
2cfbdc30f546"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq8pt75", "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq8pt75", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"A", " ", "==", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["r", "2"], "+", 
       SuperscriptBox["a", "2"]}], ")"}], "2"], " ", "-", " ", 
    RowBox[{"\[CapitalDelta]", " ", 
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]}]}]}], "Input",
 CellChangeTimes->{{3.883912803588457*^9, 3.883912836517845*^9}},
 CellLabel->
  "In[457]:=",ExpressionUUID->"b2b22b69-a408-4e06-8cc4-8987def114c4"],

Cell[BoxData[
 RowBox[{"A", "\[Equal]", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["a", "2"], "+", 
      SuperscriptBox["r", "2"]}], ")"}], "2"], "-", 
   RowBox[{
    SuperscriptBox["a", "2"], " ", "\[CapitalDelta]", " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]}]], "Output",
 CellChangeTimes->{3.883912838294928*^9},
 CellLabel->
  "Out[458]=",ExpressionUUID->"6d059621-635d-4d9f-ab18-c082e890b7fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "sigmaDeltaAreplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigmaDeltaAreplace", " ", "=", "  ", 
   RowBox[{
    RowBox[{"{", " ", "\[IndentingNewLine]", 
     RowBox[{"eq8pt74", "  ", ",", " ", "\[IndentingNewLine]", 
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"(", " ", 
         RowBox[{"eq8pt75", " ", "/.", " ", 
          RowBox[{"Equal", "->", " ", "Rule"}]}], " ", ")"}], "  ", "/.", " ", 
        RowBox[{"eq8pt74", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "  ", ")"}]}], " ", 
     "\[IndentingNewLine]", "}"}], " ", "//", " ", "Flatten"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"sigmaDeltaAreplace", " ", "//", " ", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.883912858725787*^9, 3.883912896695106*^9}, {
  3.883912997092437*^9, 3.8839130179281588`*^9}, {3.88399605516122*^9, 
  3.88399607804294*^9}},
 CellLabel->
  "In[716]:=",ExpressionUUID->"4011efce-06a0-4cf6-9f3b-8f58b20f72ff"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"\[CapitalSigma]", "\[Rule]", 
       RowBox[{
        SuperscriptBox["r", "2"], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]}]},
     {
      RowBox[{"\[CapitalDelta]", "\[Rule]", 
       RowBox[{
        SuperscriptBox["a", "2"], "-", 
        RowBox[{"2", " ", "M", " ", "r"}], "+", 
        SuperscriptBox["r", "2"]}]}]},
     {
      RowBox[{"A", "\[Rule]", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           SuperscriptBox["r", "2"]}], ")"}], "2"], "-", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["a", "2"], "-", 
           RowBox[{"2", " ", "M", " ", "r"}], "+", 
           SuperscriptBox["r", "2"]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.883912856375454*^9, 3.883912897033414*^9}, 
   3.883913019206278*^9, 3.8839960784221153`*^9},
 CellLabel->
  "Out[718]//TableForm=",ExpressionUUID->"36bb3da8-f579-4f04-bae3-\
4d8576bc7257"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq8pt76", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq8pt76", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"eq8pt74", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "0"}], ",", "r"}], "]"}], 
         "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], " ", "/.", " ", 
       RowBox[{"r", "->", " ", 
        SubscriptBox["r", "+"]}]}], " ", ",", " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"eq8pt74", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "0"}], ",", "r"}], "]"}], 
         "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", "/.", " ", 
       RowBox[{"r", "->", " ", 
        SubscriptBox["r", "-"]}]}]}], "\[IndentingNewLine]", "}"}], " ", "/.",
     " ", 
    RowBox[{"Rule", "->", " ", "Equal"}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq8pt76", " ", "//", " ", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.883913141500483*^9, 3.88391317747899*^9}, {
  3.883913359294571*^9, 3.883913410826865*^9}},
 CellLabel->
  "In[485]:=",ExpressionUUID->"a15c7d64-3c16-4d78-bd5a-23ebb4950e8f"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       SubscriptBox["r", "+"], "\[Equal]", 
       RowBox[{"M", "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["a", "2"]}], "+", 
          SuperscriptBox["M", "2"]}]]}]}]},
     {
      RowBox[{
       SubscriptBox["r", "-"], "\[Equal]", 
       RowBox[{"M", "-", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["a", "2"]}], "+", 
          SuperscriptBox["M", "2"]}]]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8839131422262917`*^9, 3.883913178609891*^9}, {
  3.88391339686077*^9, 3.88391341253519*^9}},
 CellLabel->
  "Out[487]//TableForm=",ExpressionUUID->"7dd12665-75b9-4be7-8741-\
e7a10cc66c28"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "xi0", "]"}], "\[IndentingNewLine]", 
 RowBox[{"xi0", " ", "=", " ", 
  RowBox[{"ToTensor", "[", " ", 
   RowBox[{"\"\<\[Xi]0\>\"", " ", ",", "g8pt73", " ", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], " ", ",", " ", 
    RowBox[{"{", "\[Mu]", "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8839143088253317`*^9, 3.88391431447367*^9}, {
  3.883914375742058*^9, 3.883914378419381*^9}, {3.883914586280168*^9, 
  3.8839145890574217`*^9}},
 CellLabel->
  "In[534]:=",ExpressionUUID->"4c1a6198-710d-4969-8f9a-c00a16b86cd4"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["\[Xi]0", "", "\[Mu]"],
  DisplayForm]], "Output",
 CellChangeTimes->{3.8839143810221453`*^9, 3.883914616296721*^9},
 CellLabel->
  "Out[535]=",ExpressionUUID->"f3d24654-e5d6-4f1e-b65b-47043492aa3d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"CovariantD", "[", 
  RowBox[{
   RowBox[{"xi0", "[", "\[Mu]", "]"}], ",", "\[Nu]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"MergeTensors", "[", 
  RowBox[{"CovariantD", "[", 
   RowBox[{
    RowBox[{"xi0", "[", "\[Mu]", "]"}], ",", "\[Nu]"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"MergeTensors", "[", 
       RowBox[{"CovariantD", "[", 
        RowBox[{
         RowBox[{"xi0", "[", "\[Mu]", "]"}], ",", "\[Nu]"}], "]"}], "]"}], 
      "]"}], " ", "//", " ", "Expand"}], " ", "//", " ", "Simplify"}], " ", "//",
    " ", "MatrixForm"}], " ", "//", " ", "pdConv"}]}], "Input",
 CellChangeTimes->{{3.883914383460202*^9, 3.883914433952265*^9}, {
  3.883914590464953*^9, 3.883914593130191*^9}},
 CellLabel->
  "In[536]:=",ExpressionUUID->"cc236855-da36-4023-a2dd-62a14e54016b"],

Cell[BoxData[
 RowBox[{
  TagBox[
   SubsuperscriptBox["g8pt73", "", "\[Nu]\[Alpha]"],
   DisplayForm], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     TagBox[
      SubsuperscriptBox["\[CapitalGamma]", 
       RowBox[{"  ", "\[Beta]\[Alpha]"}], 
       RowBox[{"\[Mu]", "    "}]],
      DisplayForm], " ", 
     TagBox[
      SubsuperscriptBox["\[Xi]0", "", "\[Beta]"],
      DisplayForm]}], "+", 
    TagBox[
     SubsuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[PartialD]", "\[Xi]0"}], ")"}], 
      RowBox[{"\[Alpha]", "  "}], 
      RowBox[{"  ", "\[Mu]"}]],
     DisplayForm]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.88391439476372*^9, 3.883914434349722*^9}, 
   3.8839146184737873`*^9},
 CellLabel->
  "Out[536]=",ExpressionUUID->"1ce70889-f4f8-4ff6-98b7-ae4958792954"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"g8pt73", "\[CenterDot]", "\[CapitalGamma]"}], ")"}], 
       "\[CenterDot]", "\[Xi]0"}], ")"}], "+", 
     RowBox[{"(", 
      RowBox[{"g8pt73", "\[CenterDot]", 
       RowBox[{"(", 
        RowBox[{"\[PartialD]", "\[Xi]0"}], ")"}]}], ")"}]}], ")"}], "", 
   "\[Mu]\[Nu]"],
  DisplayForm]], "Output",
 CellChangeTimes->{{3.88391439476372*^9, 3.883914434349722*^9}, 
   3.883914618664426*^9},
 CellLabel->
  "Out[537]=",ExpressionUUID->"55b45b3f-b4da-4bbc-b186-c337a99c763b"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["M", "2"], " ", "r", " ", 
         RowBox[{"\[CapitalDelta]", "(", "r", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[CapitalSigma]", "(", 
            RowBox[{"r", ",", "\[Theta]"}], ")"}], "-", 
           RowBox[{"r", " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[CapitalSigma]", "(", 
               RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "r"}],
             MultilineFunction->None]}]}], ")"}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[CapitalSigma]", "(", 
           RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]], 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["M", "2"], " ", 
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"cot", "(", "\[Theta]", ")"}], " ", 
            RowBox[{"\[CapitalSigma]", "(", 
             RowBox[{"r", ",", "\[Theta]"}], ")"}]}], "-", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
            RowBox[{"\[PartialD]", "\[Theta]"}],
            MultilineFunction->None]}], ")"}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[CapitalSigma]", "(", 
           RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]], "0"},
      {
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["M", "2"], " ", "r", " ", 
         RowBox[{"\[CapitalDelta]", "(", "r", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[CapitalSigma]", "(", 
               RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "r"}],
             MultilineFunction->None]}], "-", 
           RowBox[{"\[CapitalSigma]", "(", 
            RowBox[{"r", ",", "\[Theta]"}], ")"}]}], ")"}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[CapitalSigma]", "(", 
           RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]], "0", "0", 
       FractionBox[
        RowBox[{"a", " ", "M", " ", 
         RowBox[{
          SuperscriptBox["csc", "2"], "(", "\[Theta]", ")"}], " ", 
         RowBox[{"\[CapitalDelta]", "(", "r", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[CapitalSigma]", "(", 
               RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "r"}],
             MultilineFunction->None]}], "-", 
           RowBox[{"\[CapitalSigma]", "(", 
            RowBox[{"r", ",", "\[Theta]"}], ")"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[CapitalSigma]", "(", 
          RowBox[{"r", ",", "\[Theta]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]]},
      {
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["M", "2"], " ", 
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
            RowBox[{"\[PartialD]", "\[Theta]"}],
            MultilineFunction->None], "-", 
           RowBox[{"2", " ", 
            RowBox[{"cot", "(", "\[Theta]", ")"}], " ", 
            RowBox[{"\[CapitalSigma]", "(", 
             RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], ")"}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[CapitalSigma]", "(", 
           RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]], "0", "0", 
       FractionBox[
        RowBox[{"a", " ", "M", " ", "r", " ", 
         RowBox[{
          SuperscriptBox["csc", "2"], "(", "\[Theta]", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
            RowBox[{"\[PartialD]", "\[Theta]"}],
            MultilineFunction->None], "-", 
           RowBox[{"2", " ", 
            RowBox[{"cot", "(", "\[Theta]", ")"}], " ", 
            RowBox[{"\[CapitalSigma]", "(", 
             RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[CapitalSigma]", "(", 
          RowBox[{"r", ",", "\[Theta]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]]},
      {"0", 
       FractionBox[
        RowBox[{"a", " ", "M", " ", 
         RowBox[{
          SuperscriptBox["csc", "2"], "(", "\[Theta]", ")"}], " ", 
         RowBox[{"\[CapitalDelta]", "(", "r", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[CapitalSigma]", "(", 
            RowBox[{"r", ",", "\[Theta]"}], ")"}], "-", 
           RowBox[{"r", " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[CapitalSigma]", "(", 
               RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "r"}],
             MultilineFunction->None]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[CapitalSigma]", "(", 
          RowBox[{"r", ",", "\[Theta]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]], 
       FractionBox[
        RowBox[{"a", " ", "M", " ", "r", " ", 
         RowBox[{
          SuperscriptBox["csc", "2"], "(", "\[Theta]", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"cot", "(", "\[Theta]", ")"}], " ", 
            RowBox[{"\[CapitalSigma]", "(", 
             RowBox[{"r", ",", "\[Theta]"}], ")"}]}], "-", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
            RowBox[{"\[PartialD]", "\[Theta]"}],
            MultilineFunction->None]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[CapitalSigma]", "(", 
          RowBox[{"r", ",", "\[Theta]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]], "0"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.88391439476372*^9, 3.883914434349722*^9}, 
   3.8839146189610243`*^9},
 CellLabel->
  "Out[538]//TraditionalForm=",ExpressionUUID->"c30a5114-9e7e-4b90-a78a-\
bf0fc367a6fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"CovariantD", "[", 
  RowBox[{
   RowBox[{"xi0", "[", "\[Nu]", "]"}], ",", "\[Mu]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"MergeTensors", "[", 
  RowBox[{"CovariantD", "[", 
   RowBox[{
    RowBox[{"xi0", "[", "\[Nu]", "]"}], ",", "\[Mu]"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"MergeTensors", "[", 
       RowBox[{"CovariantD", "[", 
        RowBox[{
         RowBox[{"xi0", "[", "\[Nu]", "]"}], ",", "\[Mu]"}], "]"}], "]"}], 
      "]"}], "//", " ", "Expand"}], " ", "//", " ", "Simplify"}], " ", "//", 
   " ", "MatrixForm"}], " ", "//", " ", "pdConv"}]}], "Input",
 CellChangeTimes->{{3.883914402877021*^9, 3.883914407132078*^9}, {
  3.883914443929565*^9, 3.8839144650034027`*^9}, {3.883914595515814*^9, 
  3.8839145987102547`*^9}},
 CellLabel->
  "In[539]:=",ExpressionUUID->"4f81d448-deca-4868-9694-f198dc82be63"],

Cell[BoxData[
 RowBox[{
  TagBox[
   SubsuperscriptBox["g8pt73", "", "\[Mu]\[Alpha]"],
   DisplayForm], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     TagBox[
      SubsuperscriptBox["\[CapitalGamma]", 
       RowBox[{"  ", "\[Beta]\[Alpha]"}], 
       RowBox[{"\[Nu]", "    "}]],
      DisplayForm], " ", 
     TagBox[
      SubsuperscriptBox["\[Xi]0", "", "\[Beta]"],
      DisplayForm]}], "+", 
    TagBox[
     SubsuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[PartialD]", "\[Xi]0"}], ")"}], 
      RowBox[{"\[Alpha]", "  "}], 
      RowBox[{"  ", "\[Nu]"}]],
     DisplayForm]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.883914408075259*^9, {3.883914440863544*^9, 3.883914465749544*^9}, 
   3.8839146214402857`*^9},
 CellLabel->
  "Out[539]=",ExpressionUUID->"b547408b-3003-4000-a3f4-ea089e618172"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"g8pt73", "\[CenterDot]", "\[CapitalGamma]"}], ")"}], 
       "\[CenterDot]", "\[Xi]0"}], ")"}], "+", 
     RowBox[{"(", 
      RowBox[{"g8pt73", "\[CenterDot]", 
       RowBox[{"(", 
        RowBox[{"\[PartialD]", "\[Xi]0"}], ")"}]}], ")"}]}], ")"}], "", 
   "\[Mu]\[Nu]"],
  DisplayForm]], "Output",
 CellChangeTimes->{
  3.883914408075259*^9, {3.883914440863544*^9, 3.883914465749544*^9}, 
   3.883914621632403*^9},
 CellLabel->
  "Out[540]=",ExpressionUUID->"c9d8bc29-cc52-49ce-8e0b-785963c6bf86"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["M", "2"], " ", "r", " ", 
         RowBox[{"\[CapitalDelta]", "(", "r", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[CapitalSigma]", "(", 
               RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "r"}],
             MultilineFunction->None]}], "-", 
           RowBox[{"\[CapitalSigma]", "(", 
            RowBox[{"r", ",", "\[Theta]"}], ")"}]}], ")"}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[CapitalSigma]", "(", 
           RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]], 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["M", "2"], " ", 
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
            RowBox[{"\[PartialD]", "\[Theta]"}],
            MultilineFunction->None], "-", 
           RowBox[{"2", " ", 
            RowBox[{"cot", "(", "\[Theta]", ")"}], " ", 
            RowBox[{"\[CapitalSigma]", "(", 
             RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], ")"}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[CapitalSigma]", "(", 
           RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]], "0"},
      {
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["M", "2"], " ", "r", " ", 
         RowBox[{"\[CapitalDelta]", "(", "r", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[CapitalSigma]", "(", 
            RowBox[{"r", ",", "\[Theta]"}], ")"}], "-", 
           RowBox[{"r", " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[CapitalSigma]", "(", 
               RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "r"}],
             MultilineFunction->None]}]}], ")"}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[CapitalSigma]", "(", 
           RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]], "0", "0", 
       FractionBox[
        RowBox[{"a", " ", "M", " ", 
         RowBox[{
          SuperscriptBox["csc", "2"], "(", "\[Theta]", ")"}], " ", 
         RowBox[{"\[CapitalDelta]", "(", "r", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[CapitalSigma]", "(", 
            RowBox[{"r", ",", "\[Theta]"}], ")"}], "-", 
           RowBox[{"r", " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[CapitalSigma]", "(", 
               RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "r"}],
             MultilineFunction->None]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[CapitalSigma]", "(", 
          RowBox[{"r", ",", "\[Theta]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]]},
      {
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["M", "2"], " ", 
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"cot", "(", "\[Theta]", ")"}], " ", 
            RowBox[{"\[CapitalSigma]", "(", 
             RowBox[{"r", ",", "\[Theta]"}], ")"}]}], "-", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
            RowBox[{"\[PartialD]", "\[Theta]"}],
            MultilineFunction->None]}], ")"}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[CapitalSigma]", "(", 
           RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]], "0", "0", 
       FractionBox[
        RowBox[{"a", " ", "M", " ", "r", " ", 
         RowBox[{
          SuperscriptBox["csc", "2"], "(", "\[Theta]", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"cot", "(", "\[Theta]", ")"}], " ", 
            RowBox[{"\[CapitalSigma]", "(", 
             RowBox[{"r", ",", "\[Theta]"}], ")"}]}], "-", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
            RowBox[{"\[PartialD]", "\[Theta]"}],
            MultilineFunction->None]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[CapitalSigma]", "(", 
          RowBox[{"r", ",", "\[Theta]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]]},
      {"0", 
       FractionBox[
        RowBox[{"a", " ", "M", " ", 
         RowBox[{
          SuperscriptBox["csc", "2"], "(", "\[Theta]", ")"}], " ", 
         RowBox[{"\[CapitalDelta]", "(", "r", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[CapitalSigma]", "(", 
               RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "r"}],
             MultilineFunction->None]}], "-", 
           RowBox[{"\[CapitalSigma]", "(", 
            RowBox[{"r", ",", "\[Theta]"}], ")"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[CapitalSigma]", "(", 
          RowBox[{"r", ",", "\[Theta]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]], 
       FractionBox[
        RowBox[{"a", " ", "M", " ", "r", " ", 
         RowBox[{
          SuperscriptBox["csc", "2"], "(", "\[Theta]", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
            RowBox[{"\[PartialD]", "\[Theta]"}],
            MultilineFunction->None], "-", 
           RowBox[{"2", " ", 
            RowBox[{"cot", "(", "\[Theta]", ")"}], " ", 
            RowBox[{"\[CapitalSigma]", "(", 
             RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[CapitalSigma]", "(", 
          RowBox[{"r", ",", "\[Theta]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]], "0"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.883914408075259*^9, {3.883914440863544*^9, 3.883914465749544*^9}, 
   3.8839146219366817`*^9},
 CellLabel->
  "Out[541]//TraditionalForm=",ExpressionUUID->"fe933d92-54fd-4344-899f-\
187f6466f563"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Just", " ", "a", " ", "check", " ", "to", " ", "make", " ", "sure", " ", 
    SubscriptBox["\[Xi]", "0"], " ", "is", " ", "indeed", " ", "a", " ", 
    "killing", " ", "vector"}], " ", "*)"}], " ", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"TensorValues", "[", 
       RowBox[{"MergeTensors", "[", 
        RowBox[{"CovariantD", "[", 
         RowBox[{
          RowBox[{"xi0", "[", "\[Mu]", "]"}], ",", "\[Nu]"}], "]"}], "]"}], 
       "]"}], "+", 
      RowBox[{"TensorValues", "[", 
       RowBox[{"MergeTensors", "[", 
        RowBox[{"CovariantD", "[", 
         RowBox[{
          RowBox[{"xi0", "[", "\[Nu]", "]"}], ",", "\[Mu]"}], "]"}], "]"}], 
       "]"}]}], " ", "//", " ", "Expand"}], " ", "//", " ", "Simplify"}], " ",
    "//", " ", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.883914508708001*^9, 3.883914604222949*^9}},
 CellLabel->
  "In[542]:=",ExpressionUUID->"cbb3423f-7433-4134-b767-03304359e510"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.883914516254356*^9, 3.883914528252351*^9}, 
   3.8839146251595984`*^9},
 CellLabel->
  "Out[542]//MatrixForm=",ExpressionUUID->"f649cf53-0d10-4605-b89f-\
4f9705f4c4ed"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "xi3", "]"}], "\[IndentingNewLine]", 
 RowBox[{"xi3", " ", "=", " ", 
  RowBox[{"ToTensor", "[", " ", 
   RowBox[{"\"\<\[Xi]3\>\"", " ", ",", "g8pt73", " ", ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], " ", ",", " ", 
    RowBox[{"{", "\[Mu]", "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.883914689118449*^9, 3.883914708647587*^9}},
 CellLabel->
  "In[543]:=",ExpressionUUID->"13bca149-c6c8-45ce-9925-43f6b29ed572"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["\[Xi]3", "", "\[Mu]"],
  DisplayForm]], "Output",
 CellChangeTimes->{3.883914709560973*^9},
 CellLabel->
  "Out[544]=",ExpressionUUID->"52a9854d-fc91-4ed7-99a5-0eb5026d5a76"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"CovariantD", "[", 
  RowBox[{
   RowBox[{"xi3", "[", "\[Mu]", "]"}], ",", "\[Nu]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"MergeTensors", "[", 
  RowBox[{"CovariantD", "[", 
   RowBox[{
    RowBox[{"xi3", "[", "\[Mu]", "]"}], ",", "\[Nu]"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"MergeTensors", "[", 
       RowBox[{"CovariantD", "[", 
        RowBox[{
         RowBox[{"xi3", "[", "\[Mu]", "]"}], ",", "\[Nu]"}], "]"}], "]"}], 
      "]"}], "//", " ", "Expand"}], " ", "//", " ", "Simplify"}], " ", "//", 
   " ", "MatrixForm"}], " ", "//", " ", "pdConv"}]}], "Input",
 CellChangeTimes->{{3.883914750342059*^9, 3.883914766284876*^9}, {
  3.8839148193160133`*^9, 3.883914825391181*^9}, {3.8839148764113207`*^9, 
  3.883914903245569*^9}},
 CellLabel->
  "In[562]:=",ExpressionUUID->"cedd21cf-f52e-4f96-94b8-19aad8ded0c3"],

Cell[BoxData[
 RowBox[{
  TagBox[
   SubsuperscriptBox["g8pt73", "", "\[Nu]\[Alpha]"],
   DisplayForm], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     TagBox[
      SubsuperscriptBox["\[CapitalGamma]", 
       RowBox[{"  ", "\[Beta]\[Alpha]"}], 
       RowBox[{"\[Mu]", "    "}]],
      DisplayForm], " ", 
     TagBox[
      SubsuperscriptBox["\[Xi]3", "", "\[Beta]"],
      DisplayForm]}], "+", 
    TagBox[
     SubsuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[PartialD]", "\[Xi]3"}], ")"}], 
      RowBox[{"\[Alpha]", "  "}], 
      RowBox[{"  ", "\[Mu]"}]],
     DisplayForm]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.883914767475528*^9, {3.883914816749061*^9, 3.883914825631988*^9}, {
   3.883914883820264*^9, 3.8839149037539454`*^9}},
 CellLabel->
  "Out[562]=",ExpressionUUID->"03e471a1-b19b-4015-8755-911a29063d20"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"g8pt73", "\[CenterDot]", "\[CapitalGamma]"}], ")"}], 
       "\[CenterDot]", "\[Xi]3"}], ")"}], "+", 
     RowBox[{"(", 
      RowBox[{"g8pt73", "\[CenterDot]", 
       RowBox[{"(", 
        RowBox[{"\[PartialD]", "\[Xi]3"}], ")"}]}], ")"}]}], ")"}], "", 
   "\[Mu]\[Nu]"],
  DisplayForm]], "Output",
 CellChangeTimes->{
  3.883914767475528*^9, {3.883914816749061*^9, 3.883914825631988*^9}, {
   3.883914883820264*^9, 3.8839149039638968`*^9}},
 CellLabel->
  "Out[563]=",ExpressionUUID->"7cbe3d73-cebb-4c78-b7c7-2c66db1f4f55"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", 
       FractionBox[
        RowBox[{"a", " ", "M", " ", 
         RowBox[{
          SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
         RowBox[{"\[CapitalDelta]", "(", "r", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["r", "2"], "-", 
              SuperscriptBox["a", "2"]}], ")"}], " ", 
            RowBox[{"\[CapitalSigma]", "(", 
             RowBox[{"r", ",", "\[Theta]"}], ")"}]}], "+", 
           RowBox[{"r", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[CapitalSigma]", "(", 
               RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "r"}],
             MultilineFunction->None]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[CapitalSigma]", "(", 
          RowBox[{"r", ",", "\[Theta]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]], 
       FractionBox[
        RowBox[{"a", " ", "M", " ", "r", " ", 
         RowBox[{"sin", "(", "\[Theta]", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
            RowBox[{"\[CapitalSigma]", "(", 
             RowBox[{"r", ",", "\[Theta]"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            RowBox[{"sin", "(", "\[Theta]", ")"}], " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[CapitalSigma]", "(", 
               RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "\[Theta]"}],
             MultilineFunction->None]}], "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
            RowBox[{"cos", "(", "\[Theta]", ")"}]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[CapitalSigma]", "(", 
          RowBox[{"r", ",", "\[Theta]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]], "0"},
      {
       FractionBox[
        RowBox[{"a", " ", "M", " ", 
         RowBox[{
          SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
         RowBox[{"\[CapitalDelta]", "(", "r", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "-", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            RowBox[{"\[CapitalSigma]", "(", 
             RowBox[{"r", ",", "\[Theta]"}], ")"}]}], "-", 
           RowBox[{"r", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[CapitalSigma]", "(", 
               RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "r"}],
             MultilineFunction->None]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[CapitalSigma]", "(", 
          RowBox[{"r", ",", "\[Theta]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]], "0", "0", 
       FractionBox[
        RowBox[{
         RowBox[{"\[CapitalDelta]", "(", "r", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"], " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[CapitalSigma]", "(", 
               RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "r"}],
             MultilineFunction->None]}], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", "M", " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "-", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
            RowBox[{"\[CapitalSigma]", "(", 
             RowBox[{"r", ",", "\[Theta]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[CapitalSigma]", "(", 
                 RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
               RowBox[{"\[PartialD]", "r"}],
               MultilineFunction->None], "+", 
              RowBox[{"2", " ", "M"}]}], ")"}]}], "-", 
           RowBox[{"r", " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "3"]}]}], ")"}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[CapitalSigma]", "(", 
           RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]]},
      {
       FractionBox[
        RowBox[{"a", " ", "M", " ", "r", " ", 
         RowBox[{"sin", "(", "\[Theta]", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["a", "2"], "+", 
               SuperscriptBox["r", "2"]}], ")"}], " ", 
             RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            RowBox[{"sin", "(", "\[Theta]", ")"}], " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[CapitalSigma]", "(", 
               RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "\[Theta]"}],
             MultilineFunction->None]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
            RowBox[{"cos", "(", "\[Theta]", ")"}]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[CapitalSigma]", "(", 
          RowBox[{"r", ",", "\[Theta]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]], "0", "0", 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["M", "2"], " ", 
          SuperscriptBox["r", "2"], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[CapitalSigma]", "(", 
             RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
           RowBox[{"\[PartialD]", "\[Theta]"}],
           MultilineFunction->None]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
          RowBox[{"cot", "(", "\[Theta]", ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[CapitalSigma]", "(", 
            RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "-", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
          RowBox[{"\[CapitalSigma]", "(", 
           RowBox[{"r", ",", "\[Theta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[CapitalSigma]", "(", 
               RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "\[Theta]"}],
             MultilineFunction->None], "+", 
            RowBox[{"4", " ", "M", " ", "r", " ", 
             RowBox[{"cot", "(", "\[Theta]", ")"}]}]}], ")"}]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            SuperscriptBox["r", "2"]}], ")"}], " ", 
          RowBox[{"cot", "(", "\[Theta]", ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[CapitalSigma]", "(", 
            RowBox[{"r", ",", "\[Theta]"}], ")"}], "3"]}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[CapitalSigma]", "(", 
           RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]]},
      {"0", 
       FractionBox[
        RowBox[{
         RowBox[{"\[CapitalDelta]", "(", "r", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", 
             SuperscriptBox["M", "2"], " ", 
             SuperscriptBox["r", "2"], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[CapitalSigma]", "(", 
                RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
              RowBox[{"\[PartialD]", "r"}],
              MultilineFunction->None]}]}], "-", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", "M", " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
            RowBox[{"\[CapitalSigma]", "(", 
             RowBox[{"r", ",", "\[Theta]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[CapitalSigma]", "(", 
                 RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
               RowBox[{"\[PartialD]", "r"}],
               MultilineFunction->None], "+", 
              RowBox[{"2", " ", "M"}]}], ")"}]}], "+", 
           RowBox[{"r", " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "3"]}]}], ")"}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[CapitalSigma]", "(", 
           RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]], 
       FractionBox[
        RowBox[{
         RowBox[{"-", 
          RowBox[{"2", " ", 
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["M", "2"], " ", 
           SuperscriptBox["r", "2"], " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
            RowBox[{"\[PartialD]", "\[Theta]"}],
            MultilineFunction->None]}]}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
          RowBox[{"cot", "(", "\[Theta]", ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[CapitalSigma]", "(", 
            RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
          RowBox[{"\[CapitalSigma]", "(", 
           RowBox[{"r", ",", "\[Theta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[CapitalSigma]", "(", 
               RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "\[Theta]"}],
             MultilineFunction->None], "+", 
            RowBox[{"4", " ", "M", " ", "r", " ", 
             RowBox[{"cot", "(", "\[Theta]", ")"}]}]}], ")"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            SuperscriptBox["r", "2"]}], ")"}], " ", 
          RowBox[{"cot", "(", "\[Theta]", ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[CapitalSigma]", "(", 
            RowBox[{"r", ",", "\[Theta]"}], ")"}], "3"]}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[CapitalSigma]", "(", 
           RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]], "0"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.883914767475528*^9, {3.883914816749061*^9, 3.883914825631988*^9}, {
   3.883914883820264*^9, 3.883914904334453*^9}},
 CellLabel->
  "Out[564]//TraditionalForm=",ExpressionUUID->"28fb17cb-9505-4e44-a88c-\
09e84c8bdf3a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"CovariantD", "[", 
  RowBox[{
   RowBox[{"xi3", "[", "\[Nu]", "]"}], ",", "\[Mu]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"MergeTensors", "[", 
  RowBox[{"CovariantD", "[", 
   RowBox[{
    RowBox[{"xi3", "[", "\[Nu]", "]"}], ",", "\[Mu]"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"MergeTensors", "[", 
       RowBox[{"CovariantD", "[", 
        RowBox[{
         RowBox[{"xi3", "[", "\[Nu]", "]"}], ",", "\[Mu]"}], "]"}], "]"}], 
      "]"}], " ", "//", " ", "Expand"}], " ", "//", " ", "Simplify"}], " ", "//",
    " ", "MatrixForm"}], " ", "//", " ", "pdConv"}]}], "Input",
 CellChangeTimes->{{3.883914833581242*^9, 3.883914866164049*^9}, {
  3.8839149066291227`*^9, 3.883914907542576*^9}},
 CellLabel->
  "In[565]:=",ExpressionUUID->"f006a151-51e0-41e4-94ae-5e74f5e354f1"],

Cell[BoxData[
 RowBox[{
  TagBox[
   SubsuperscriptBox["g8pt73", "", "\[Mu]\[Alpha]"],
   DisplayForm], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     TagBox[
      SubsuperscriptBox["\[CapitalGamma]", 
       RowBox[{"  ", "\[Beta]\[Alpha]"}], 
       RowBox[{"\[Nu]", "    "}]],
      DisplayForm], " ", 
     TagBox[
      SubsuperscriptBox["\[Xi]3", "", "\[Beta]"],
      DisplayForm]}], "+", 
    TagBox[
     SubsuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[PartialD]", "\[Xi]3"}], ")"}], 
      RowBox[{"\[Alpha]", "  "}], 
      RowBox[{"  ", "\[Nu]"}]],
     DisplayForm]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.8839148421824303`*^9, 3.883914866594228*^9}, 
   3.883914908015785*^9},
 CellLabel->
  "Out[565]=",ExpressionUUID->"c1654aa6-52f7-4d9c-8c8e-71173763c2bb"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"g8pt73", "\[CenterDot]", "\[CapitalGamma]"}], ")"}], 
       "\[CenterDot]", "\[Xi]3"}], ")"}], "+", 
     RowBox[{"(", 
      RowBox[{"g8pt73", "\[CenterDot]", 
       RowBox[{"(", 
        RowBox[{"\[PartialD]", "\[Xi]3"}], ")"}]}], ")"}]}], ")"}], "", 
   "\[Mu]\[Nu]"],
  DisplayForm]], "Output",
 CellChangeTimes->{{3.8839148421824303`*^9, 3.883914866594228*^9}, 
   3.883914908216416*^9},
 CellLabel->
  "Out[566]=",ExpressionUUID->"a5c144a7-623e-4d60-924a-172b168796e7"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", 
       FractionBox[
        RowBox[{"a", " ", "M", " ", 
         RowBox[{
          SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
         RowBox[{"\[CapitalDelta]", "(", "r", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "-", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            RowBox[{"\[CapitalSigma]", "(", 
             RowBox[{"r", ",", "\[Theta]"}], ")"}]}], "-", 
           RowBox[{"r", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[CapitalSigma]", "(", 
               RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "r"}],
             MultilineFunction->None]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[CapitalSigma]", "(", 
          RowBox[{"r", ",", "\[Theta]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]], 
       FractionBox[
        RowBox[{"a", " ", "M", " ", "r", " ", 
         RowBox[{"sin", "(", "\[Theta]", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["a", "2"], "+", 
               SuperscriptBox["r", "2"]}], ")"}], " ", 
             RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            RowBox[{"sin", "(", "\[Theta]", ")"}], " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[CapitalSigma]", "(", 
               RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "\[Theta]"}],
             MultilineFunction->None]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
            RowBox[{"cos", "(", "\[Theta]", ")"}]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[CapitalSigma]", "(", 
          RowBox[{"r", ",", "\[Theta]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]], "0"},
      {
       FractionBox[
        RowBox[{"a", " ", "M", " ", 
         RowBox[{
          SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
         RowBox[{"\[CapitalDelta]", "(", "r", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["r", "2"], "-", 
              SuperscriptBox["a", "2"]}], ")"}], " ", 
            RowBox[{"\[CapitalSigma]", "(", 
             RowBox[{"r", ",", "\[Theta]"}], ")"}]}], "+", 
           RowBox[{"r", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[CapitalSigma]", "(", 
               RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "r"}],
             MultilineFunction->None]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[CapitalSigma]", "(", 
          RowBox[{"r", ",", "\[Theta]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]], "0", "0", 
       FractionBox[
        RowBox[{
         RowBox[{"\[CapitalDelta]", "(", "r", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", 
             SuperscriptBox["M", "2"], " ", 
             SuperscriptBox["r", "2"], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[CapitalSigma]", "(", 
                RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
              RowBox[{"\[PartialD]", "r"}],
              MultilineFunction->None]}]}], "-", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", "M", " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
            RowBox[{"\[CapitalSigma]", "(", 
             RowBox[{"r", ",", "\[Theta]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[CapitalSigma]", "(", 
                 RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
               RowBox[{"\[PartialD]", "r"}],
               MultilineFunction->None], "+", 
              RowBox[{"2", " ", "M"}]}], ")"}]}], "+", 
           RowBox[{"r", " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "3"]}]}], ")"}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[CapitalSigma]", "(", 
           RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]]},
      {
       FractionBox[
        RowBox[{"a", " ", "M", " ", "r", " ", 
         RowBox[{"sin", "(", "\[Theta]", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
            RowBox[{"\[CapitalSigma]", "(", 
             RowBox[{"r", ",", "\[Theta]"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            RowBox[{"sin", "(", "\[Theta]", ")"}], " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[CapitalSigma]", "(", 
               RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "\[Theta]"}],
             MultilineFunction->None]}], "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
            RowBox[{"cos", "(", "\[Theta]", ")"}]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[CapitalSigma]", "(", 
          RowBox[{"r", ",", "\[Theta]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]], "0", "0", 
       FractionBox[
        RowBox[{
         RowBox[{"-", 
          RowBox[{"2", " ", 
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["M", "2"], " ", 
           SuperscriptBox["r", "2"], " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
            RowBox[{"\[PartialD]", "\[Theta]"}],
            MultilineFunction->None]}]}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
          RowBox[{"cot", "(", "\[Theta]", ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[CapitalSigma]", "(", 
            RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
          RowBox[{"\[CapitalSigma]", "(", 
           RowBox[{"r", ",", "\[Theta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[CapitalSigma]", "(", 
               RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "\[Theta]"}],
             MultilineFunction->None], "+", 
            RowBox[{"4", " ", "M", " ", "r", " ", 
             RowBox[{"cot", "(", "\[Theta]", ")"}]}]}], ")"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            SuperscriptBox["r", "2"]}], ")"}], " ", 
          RowBox[{"cot", "(", "\[Theta]", ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[CapitalSigma]", "(", 
            RowBox[{"r", ",", "\[Theta]"}], ")"}], "3"]}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[CapitalSigma]", "(", 
           RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]]},
      {"0", 
       FractionBox[
        RowBox[{
         RowBox[{"\[CapitalDelta]", "(", "r", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"], " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[CapitalSigma]", "(", 
               RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "r"}],
             MultilineFunction->None]}], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", "M", " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "-", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
            RowBox[{"\[CapitalSigma]", "(", 
             RowBox[{"r", ",", "\[Theta]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[CapitalSigma]", "(", 
                 RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
               RowBox[{"\[PartialD]", "r"}],
               MultilineFunction->None], "+", 
              RowBox[{"2", " ", "M"}]}], ")"}]}], "-", 
           RowBox[{"r", " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "3"]}]}], ")"}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[CapitalSigma]", "(", 
           RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]], 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["M", "2"], " ", 
          SuperscriptBox["r", "2"], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[CapitalSigma]", "(", 
             RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
           RowBox[{"\[PartialD]", "\[Theta]"}],
           MultilineFunction->None]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
          RowBox[{"cot", "(", "\[Theta]", ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[CapitalSigma]", "(", 
            RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "-", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
          RowBox[{"\[CapitalSigma]", "(", 
           RowBox[{"r", ",", "\[Theta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[CapitalSigma]", "(", 
               RowBox[{"r", ",", "\[Theta]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "\[Theta]"}],
             MultilineFunction->None], "+", 
            RowBox[{"4", " ", "M", " ", "r", " ", 
             RowBox[{"cot", "(", "\[Theta]", ")"}]}]}], ")"}]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            SuperscriptBox["r", "2"]}], ")"}], " ", 
          RowBox[{"cot", "(", "\[Theta]", ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[CapitalSigma]", "(", 
            RowBox[{"r", ",", "\[Theta]"}], ")"}], "3"]}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[CapitalSigma]", "(", 
           RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"], " ", "M", " ", "r", " ", 
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["r", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[CapitalSigma]", "(", 
              RowBox[{"r", ",", "\[Theta]"}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["r", "2"]}]}], ")"}]}]], "0"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.8839148421824303`*^9, 3.883914866594228*^9}, 
   3.883914908582692*^9},
 CellLabel->
  "Out[567]//TraditionalForm=",ExpressionUUID->"04480adf-6602-495f-b8ee-\
703d33ee0715"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Just", " ", "a", " ", "check", " ", "to", " ", "make", " ", "sure", " ", 
    SubscriptBox["\[Xi]", "3"], " ", "is", " ", "indeed", " ", "a", " ", 
    "killing", " ", "vector"}], " ", "*)"}], " ", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"TensorValues", "[", 
       RowBox[{"MergeTensors", "[", 
        RowBox[{"CovariantD", "[", 
         RowBox[{
          RowBox[{"xi3", "[", "\[Mu]", "]"}], ",", "\[Nu]"}], "]"}], "]"}], 
       "]"}], "+", 
      RowBox[{"TensorValues", "[", 
       RowBox[{"MergeTensors", "[", 
        RowBox[{"CovariantD", "[", 
         RowBox[{
          RowBox[{"xi3", "[", "\[Nu]", "]"}], ",", "\[Mu]"}], "]"}], "]"}], 
       "]"}]}], " ", "//", " ", "Expand"}], " ", "//", " ", "Simplify"}], " ",
    "//", " ", "MatrixForm", " "}]}]], "Input",
 CellChangeTimes->{{3.88391492675561*^9, 3.883914950245122*^9}, {
  3.883914998645137*^9, 
  3.8839150061597567`*^9}},ExpressionUUID->"9817b445-bc15-4c90-afd1-\
34b7b246c3e0"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.883914951878375*^9},
 CellLabel->
  "Out[568]//MatrixForm=",ExpressionUUID->"8d2e0924-9e7b-452f-86c0-\
15bff6836eba"]
}, Open  ]]
}, Closed]]
},
CellGrouping->Manual,
WindowSize->{1276, 720},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
FrontEndVersion->"13.0 for Mac OS X x86 (64-bit) (February 4, 2022)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"9b880edc-18fd-4e7c-bcb0-f27afeed29db"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 357, 7, 159, "Title",ExpressionUUID->"7b6a8998-5f82-498b-8e1f-cf8da41c5661",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[918, 29, 1115, 19, 94, "Author",ExpressionUUID->"22f2cf12-b136-4724-a30c-f5ff0568f659",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[2036, 50, 356, 9, 41, "Input",ExpressionUUID->"d75aa15c-8058-4be7-b463-6c09ed9e232d"],
Cell[2395, 61, 475, 9, 84, "Input",ExpressionUUID->"f3b891b8-75de-45db-911b-f9cc8f43b2a0"],
Cell[2873, 72, 842, 20, 147, "Input",ExpressionUUID->"bb54cd0a-37dc-428d-a7ca-1ae1e6b84030"],
Cell[CellGroupData[{
Cell[3740, 96, 251, 4, 69, "Section",ExpressionUUID->"d881d030-84fa-4d0e-8877-538ea520e45f",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[CellGroupData[{
Cell[4016, 104, 459, 10, 63, "Input",ExpressionUUID->"c8723ee2-1698-4b17-af09-9ca035a466bc",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[4478, 116, 544, 10, 70, "Output",ExpressionUUID->"0d9390c6-cf20-4967-8ed0-98161d319ee4",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[5071, 132, 315, 5, 55, "Section",ExpressionUUID->"d497c31c-9e65-4aa8-89eb-2ae80422ae1e",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[CellGroupData[{
Cell[5411, 141, 566, 10, 63, "Input",ExpressionUUID->"90617976-c54a-4fd2-ba2a-c9a826762daf",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[5980, 153, 576, 10, 70, "Output",ExpressionUUID->"c350938e-1fa7-4f67-9277-64b9db4352c4",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[6605, 169, 251, 4, 55, "Section",ExpressionUUID->"0eab23e0-be13-43e3-af1b-5d72d4148fa8",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[CellGroupData[{
Cell[6881, 177, 1666, 45, 189, "Input",ExpressionUUID->"7f7bd3e0-d20f-4ef6-9b77-2520547b687c",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[8550, 224, 925, 17, 70, "Print",ExpressionUUID->"1a0cd25e-53fc-4801-9800-3ca2c926a288",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[9478, 243, 942, 18, 70, "Print",ExpressionUUID->"6fe5eca7-bc92-495a-ba35-175f71b6dfdb",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[10423, 263, 925, 15, 70, "Output",ExpressionUUID->"84346b6e-7dbc-4cd4-a3c2-a53118f95926",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[11363, 281, 267, 4, 41, "Input",ExpressionUUID->"f1a267e9-984c-49fc-b0fb-1662d4fa5eea",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Closed]],
Cell[CellGroupData[{
Cell[11667, 290, 240, 4, 55, "Section",ExpressionUUID->"62a3bc7f-e214-461b-8595-acd316bee2c2",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[11910, 296, 335, 6, 41, "Input",ExpressionUUID->"3e9a22a7-bc6e-4269-b52f-96d31442f8be",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[CellGroupData[{
Cell[12270, 306, 813, 19, 147, "Input",ExpressionUUID->"1d68bc39-013a-4a3c-98e5-fdd6d101c270"],
Cell[13086, 327, 356, 9, 50, "Output",ExpressionUUID->"956185e7-1d35-4776-8035-82a7227fc74d"]
}, Open  ]],
Cell[13457, 339, 618, 19, 148, "Input",ExpressionUUID->"376fbe3d-cc03-49c0-9380-25a70bcb5ef4"],
Cell[CellGroupData[{
Cell[14100, 362, 7049, 164, 987, "Input",ExpressionUUID->"d37740c4-c679-42f6-b1e5-74598c190e40",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[21152, 528, 4589, 147, 735, "Output",ExpressionUUID->"6064cfdd-d068-4e7f-9585-831ed41b2655",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[25756, 678, 1581, 39, 105, "Input",ExpressionUUID->"8abbff61-7860-4464-bd8d-1c44033fd559",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Closed]],
Cell[CellGroupData[{
Cell[27374, 722, 362, 6, 55, "Section",ExpressionUUID->"aef50d6a-7496-4d91-8234-79954f66cc1e",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[27739, 730, 1660, 41, 126, "Input",ExpressionUUID->"fe292e01-906a-49b6-bdc7-105423360109",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[29402, 773, 1056, 26, 84, "Input",ExpressionUUID->"f70f1445-e4d5-4b4a-b40e-2ed55fafc6b1",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Closed]],
Cell[CellGroupData[{
Cell[30495, 804, 384, 8, 55, "Section",ExpressionUUID->"4875075d-77bd-4ce5-a455-2786c4ebec84",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[30882, 814, 4808, 108, 552, "Input",ExpressionUUID->"812a29fe-5fde-499b-94cc-fa3259a83eca",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[35693, 924, 809, 16, 147, "Input",ExpressionUUID->"792abdf4-40a6-4b15-b17d-aca462785d64",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}]
}, Closed]],
Cell[CellGroupData[{
Cell[36539, 945, 185, 3, 55, "Section",ExpressionUUID->"2809fe34-d2d3-460f-a81b-e92d72cd08be"],
Cell[CellGroupData[{
Cell[36749, 952, 691, 16, 86, "Input",ExpressionUUID->"d95e2b7c-8423-4d02-a8f1-f516f9611717",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[37443, 970, 633, 16, 70, "Output",ExpressionUUID->"c77dc3ef-11aa-4418-bd8e-c9fd1e16b576",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[38113, 991, 659, 14, 105, "Input",ExpressionUUID->"5d75db5a-c103-40c8-a83c-7205eb7b7334",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[38775, 1007, 1186, 32, 70, "Output",ExpressionUUID->"24d5e5d0-7e42-4332-baf1-2b2f0dc26639",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[39998, 1044, 724, 13, 105, "Input",ExpressionUUID->"11e79846-a061-4a30-8125-55cd068d9529",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[40725, 1059, 3077, 85, 70, "Output",ExpressionUUID->"ab95fb9b-4148-48a8-bfeb-2076075ecc02",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[43839, 1149, 347, 7, 41, "Input",ExpressionUUID->"638f1a1f-dc45-4f09-8bb3-744ee6fffb99"],
Cell[44189, 1158, 2425, 71, 70, "Output",ExpressionUUID->"9844ab8a-d079-4722-addc-223774f00b93"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[46663, 1235, 193, 3, 55, "Section",ExpressionUUID->"0e4b9904-1614-4f8a-82cd-45aaed572347"],
Cell[CellGroupData[{
Cell[46881, 1242, 947, 23, 102, "Input",ExpressionUUID->"68340ad2-e6e7-43cb-b705-725222ccfa73",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[47831, 1267, 798, 20, 70, "Output",ExpressionUUID->"e1d3fab3-2c31-47e9-bfac-67a6f82f2b48",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[48666, 1292, 666, 14, 105, "Input",ExpressionUUID->"400f73c8-4e4a-48a6-b574-1547d516c434",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[49335, 1308, 1408, 40, 70, "Output",ExpressionUUID->"b2b84acf-8b47-4a6d-bdac-d5bd26387534",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[50780, 1353, 717, 13, 105, "Input",ExpressionUUID->"105fa26d-1296-4d18-bf64-f8ee7808f953",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[51500, 1368, 3666, 100, 70, "Output",ExpressionUUID->"636db1cf-0a2a-4b8f-b0c8-8a91757b9bd8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[55203, 1473, 538, 10, 105, "Input",ExpressionUUID->"c0829ecd-30d8-411b-bee9-8d4359410864"],
Cell[55744, 1485, 2817, 82, 70, "Output",ExpressionUUID->"2b297c8f-c421-4c43-ab65-8c559d7f86f3"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[58610, 1573, 198, 3, 55, "Section",ExpressionUUID->"1d3c6307-0c7c-4e70-bf19-aac17265a8f2"],
Cell[CellGroupData[{
Cell[58833, 1580, 799, 19, 84, "Input",ExpressionUUID->"4babbf55-f30c-4864-a379-1d7809279752",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[59635, 1601, 693, 18, 70, "Output",ExpressionUUID->"d5e69583-034a-4ab4-b69b-9ad136c181b1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[60365, 1624, 397, 8, 41, "Input",ExpressionUUID->"181ebbde-b9f8-4f67-9331-e036d001f2c1"],
Cell[60765, 1634, 904, 27, 70, "Output",ExpressionUUID->"b4818934-30f8-45aa-915f-494eee0267f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61706, 1666, 969, 23, 147, "Input",ExpressionUUID->"0577d081-a074-49e8-827e-a832edc82e78",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[62678, 1691, 1182, 35, 70, "Output",ExpressionUUID->"242e24bc-d981-482e-b9a9-dd62ef19cdc7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[63897, 1731, 263, 4, 41, "Input",ExpressionUUID->"2ad5b943-a75b-4aa8-83d1-71872abc351b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[64163, 1737, 1139, 34, 70, "Output",ExpressionUUID->"461cda95-362a-467a-af88-47402bd2a39e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[65339, 1776, 693, 15, 105, "Input",ExpressionUUID->"53e705ed-1d4f-4366-995d-85d26e897c5d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[66035, 1793, 1657, 50, 70, "Output",ExpressionUUID->"f164950b-6cd2-4076-9919-60f4acd6e353",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[67729, 1848, 454, 9, 41, "Input",ExpressionUUID->"afb3a2e9-c833-4870-8559-5a748a477fb3",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[68186, 1859, 15525, 380, 70, "Output",ExpressionUUID->"5ee71a11-52f6-43cf-9ac4-ca67570d432b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[83760, 2245, 293, 5, 55, "Section",ExpressionUUID->"4e937120-35fa-47fd-8893-033fbdda4e13",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[CellGroupData[{
Cell[84078, 2254, 1083, 31, 102, "Input",ExpressionUUID->"7eed098d-c923-434b-a94c-a1dd1ee7011c",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[85164, 2287, 955, 27, 69, "Output",ExpressionUUID->"f0c1e2a7-1dd8-4b7e-9e02-f17c32537735",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[86156, 2319, 662, 13, 105, "Input",ExpressionUUID->"acc4c0e4-00d7-40e3-95ed-12196bc0ed6b",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[86821, 2334, 1268, 37, 131, "Output",ExpressionUUID->"7645dc0c-2998-4482-b652-d071a4a7ce76",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[88126, 2376, 533, 11, 84, "Input",ExpressionUUID->"d19e0126-25ee-454c-81b6-dd8d08729cdb"],
Cell[88662, 2389, 227, 6, 45, "Output",ExpressionUUID->"32909c66-8e94-40cb-ad5d-9afa8c42a3ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88926, 2400, 798, 17, 105, "Input",ExpressionUUID->"21d80725-5012-4166-ad60-b4fcb31d5c0c",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[89727, 2419, 1094, 34, 139, "Output",ExpressionUUID->"23939dd7-e344-4a0c-97e4-dac3134f03aa",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[90858, 2458, 438, 10, 41, "Input",ExpressionUUID->"1db5257f-5a29-4bcc-b2e5-3c13f44c9451",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[91299, 2470, 869, 24, 101, "Output",ExpressionUUID->"fdea3126-81d3-4033-9db6-2d162a37dc0d",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[92205, 2499, 461, 11, 41, "Input",ExpressionUUID->"508ba5bd-d3dd-4ce5-93cd-4143b2471e88",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[92669, 2512, 868, 24, 101, "Output",ExpressionUUID->"2a3f8dc9-0dc4-4a1a-8f48-e0da2ff20994",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[93574, 2541, 1041, 22, 168, "Input",ExpressionUUID->"86bf4dae-5df0-4951-91e1-ee623527771e",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[94618, 2565, 1073, 32, 69, "Output",ExpressionUUID->"a1d6af4b-59cb-4107-bef4-5ca2633376e1",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[95728, 2602, 723, 17, 79, "Input",ExpressionUUID->"9e7b3b77-00ff-44a3-88fa-c678dbd1a7bd",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[96454, 2621, 609, 14, 54, "Output",ExpressionUUID->"f674f706-fe2f-43ab-bf04-5faaac131605",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[97112, 2641, 189, 3, 55, "Section",ExpressionUUID->"b9d9c1e5-c2a5-46f1-8437-65938b4dc7f0"],
Cell[CellGroupData[{
Cell[97326, 2648, 1525, 37, 189, "Input",ExpressionUUID->"a2713925-244b-4ad3-b4de-f10e16a6289d"],
Cell[98854, 2687, 1481, 45, 105, "Output",ExpressionUUID->"e014d6e7-50c5-4dcf-a828-4aaa39a4e3d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100372, 2737, 585, 13, 63, "Input",ExpressionUUID->"a1d369f9-60cc-42af-9ba6-3c00a90cb0ee"],
Cell[100960, 2752, 218, 6, 45, "Output",ExpressionUUID->"deed03d7-0e58-44a5-a3a9-a18683406abc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101215, 2763, 539, 12, 63, "Input",ExpressionUUID->"9bdfed0d-8d34-4759-995e-a5aa05e3aef9"],
Cell[101757, 2777, 218, 6, 45, "Output",ExpressionUUID->"e93ec85e-21ad-465e-af7d-159964095e8d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102012, 2788, 537, 12, 63, "Input",ExpressionUUID->"db7982e5-a703-43ae-8009-5bdabf5019df"],
Cell[102552, 2802, 220, 6, 45, "Output",ExpressionUUID->"385a9bdb-8b47-44f4-bb5e-15e9c7b02e25"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102809, 2813, 537, 12, 63, "Input",ExpressionUUID->"3bbe80d9-a8a3-4575-b831-cea6cc7f1f9f"],
Cell[103349, 2827, 217, 6, 45, "Output",ExpressionUUID->"6e2fd11d-476e-4b49-96b9-bd2286f0a378"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103603, 2838, 484, 10, 126, "Input",ExpressionUUID->"d15ca5ca-8476-43f7-8723-72b3cbf01ac0"],
Cell[104090, 2850, 845, 30, 95, "Output",ExpressionUUID->"b10d1fcd-cea6-4be0-a569-0f105ee5b704"]
}, Open  ]],
Cell[104950, 2883, 883, 24, 41, "Input",ExpressionUUID->"790a6338-06d8-452c-8b33-c04baaadd93f"],
Cell[105836, 2909, 1007, 29, 44, "Output",ExpressionUUID->"96596096-0ccd-4dd5-af15-eba9447a2b1b"]
}, Closed]],
Cell[CellGroupData[{
Cell[106880, 2943, 296, 6, 55, "Section",ExpressionUUID->"760b238e-08b1-4b15-9696-589d556af052",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[107179, 2951, 6075, 135, 735, "Input",ExpressionUUID->"033bf7df-86b3-4752-ad3d-975e4e86ea40",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[CellGroupData[{
Cell[113279, 3090, 857, 18, 65, "Input",ExpressionUUID->"f6951fce-4af1-4e81-aca6-e845b9ee35fd",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[114139, 3110, 431, 8, 70, "Output",ExpressionUUID->"f142231f-cf0b-47ab-a2a5-2ce06e877728",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[114607, 3123, 283, 4, 41, "Input",ExpressionUUID->"aad586f9-9279-4497-b763-db5f8e54e600",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[114893, 3129, 1203, 35, 70, "Output",ExpressionUUID->"a979ff75-ea3e-467e-b998-4aaa5dfa14eb",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[116133, 3169, 766, 18, 84, "Input",ExpressionUUID->"1b37d2da-6cfd-43fa-a59a-700e894e1bcb",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[116902, 3189, 446, 9, 70, "Output",ExpressionUUID->"287518e7-0ed5-4ff9-8df1-a3526593bf93",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[117351, 3200, 366, 5, 70, "Output",ExpressionUUID->"a98a720c-f9a6-43cd-bd01-891a71a86065",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[117720, 3207, 1301, 37, 70, "Output",ExpressionUUID->"3689c311-e8cf-4a04-a104-066431d38c8f",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[119058, 3249, 812, 18, 84, "Input",ExpressionUUID->"8e735174-3a5c-4b6b-8eba-18096e0db43b",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[119873, 3269, 480, 10, 70, "Output",ExpressionUUID->"66da72b2-bc52-4b5f-abb1-cf8aae384436",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[120356, 3281, 381, 5, 70, "Output",ExpressionUUID->"206c2a5a-4e7e-42ed-ae50-dc4483670c07",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[120740, 3288, 11135, 336, 70, "Output",ExpressionUUID->"26f7ffa3-9793-4fdb-bdcf-b16fb9f75c30",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[131912, 3629, 813, 18, 84, "Input",ExpressionUUID->"25570815-6b18-4a9e-a97f-f58a138e0345",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[132728, 3649, 431, 8, 70, "Output",ExpressionUUID->"2b39277c-77c4-43a1-9fd6-0a83f97b2691",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[133162, 3659, 378, 5, 70, "Output",ExpressionUUID->"b2a05954-9537-437b-b60c-423feb33eabf",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[133543, 3666, 14054, 377, 70, "Output",ExpressionUUID->"35ef075f-8c02-4d86-bb38-e8986cf0fa74",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[147634, 4048, 812, 18, 84, "Input",ExpressionUUID->"9e3ae8de-332f-43fa-b13b-8757df5e298e",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[148449, 4068, 416, 8, 70, "Output",ExpressionUUID->"73eb98e9-1904-4ab7-952b-0896dac0af47",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[148868, 4078, 377, 5, 70, "Output",ExpressionUUID->"9848747b-920e-4ecc-a16a-9935a6d837c9",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[149248, 4085, 939, 25, 70, "Output",ExpressionUUID->"b8ba34d0-a950-4951-a45e-a4384566b778",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[150224, 4115, 814, 18, 84, "Input",ExpressionUUID->"6a647bf7-07df-485a-96b3-8fb1fb70d2c3",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[151041, 4135, 377, 7, 70, "Output",ExpressionUUID->"6f407386-4ad3-4958-8c8b-ac31932a5468",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[151421, 4144, 377, 5, 70, "Output",ExpressionUUID->"dec4fc70-2379-41b9-bfe2-64670dbc55b4",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[151801, 4151, 459, 11, 70, "Output",ExpressionUUID->"4a3b1467-21e1-4a92-9e6e-383285152416",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[152297, 4167, 811, 18, 84, "Input",ExpressionUUID->"cb79598b-20ca-4f54-b802-6614a0d76620",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[153111, 4187, 375, 7, 70, "Output",ExpressionUUID->"a520806d-e31c-4b93-b7ce-1d99784d7cb7",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[153489, 4196, 379, 5, 70, "Output",ExpressionUUID->"60ef278b-4b58-44e7-aafb-686ebaaf0aa9",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[153871, 4203, 557, 15, 70, "Output",ExpressionUUID->"e9d0a4a8-ca3e-4090-a63b-115d39584530",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[154465, 4223, 814, 18, 84, "Input",ExpressionUUID->"41d580ca-748a-48a2-ae12-16faaff57906",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[155282, 4243, 416, 8, 70, "Output",ExpressionUUID->"49e56e5d-1159-4b11-811d-88a9e3cc50d8",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[155701, 4253, 382, 5, 70, "Output",ExpressionUUID->"b16cb119-bce1-42d3-8297-0810e84f8c15",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[156086, 4260, 941, 25, 70, "Output",ExpressionUUID->"88c998fa-6965-4713-bd34-271c69fa6c6f",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[157064, 4290, 814, 18, 84, "Input",ExpressionUUID->"2153addb-5702-4fdb-9da1-05cc2531b970",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[157881, 4310, 430, 8, 70, "Output",ExpressionUUID->"d1728398-5ba3-431a-9e48-fdfc3ed0ed77",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[158314, 4320, 374, 5, 70, "Output",ExpressionUUID->"ab89f2d7-5af3-4d3d-ad83-434c247bb4a9",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[158691, 4327, 13987, 375, 70, "Output",ExpressionUUID->"5fd53e4c-6117-459a-8da0-1896a1ee00bb",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[172715, 4707, 811, 18, 84, "Input",ExpressionUUID->"31f44b13-9cca-4f35-9cc6-7dfa5b28a9c4",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[173529, 4727, 423, 8, 70, "Output",ExpressionUUID->"df069045-d3bc-4eef-a2e0-6b52a5c52a20",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[173955, 4737, 375, 5, 70, "Output",ExpressionUUID->"95706dca-2e7e-42b9-9a72-ccd11d11c313",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[174333, 4744, 9724, 297, 70, "Output",ExpressionUUID->"ee058e04-66ba-42aa-89ff-fe51bffd066a",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[184094, 5046, 736, 16, 147, "Input",ExpressionUUID->"8fd192e2-0919-454b-9253-cc08fca696bb",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[184833, 5064, 385, 7, 70, "Output",ExpressionUUID->"699d95f7-d283-426c-ac06-025fcbd126ff",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[185221, 5073, 387, 5, 70, "Output",ExpressionUUID->"985dc9a2-3c22-47b6-b50e-7f5dcac5c7c7",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[185611, 5080, 442, 9, 70, "Output",ExpressionUUID->"8a1db360-2ac2-4288-a618-e3bb65515914",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[186102, 5095, 321, 7, 93, "Section",ExpressionUUID->"9e1f8ba0-dc8c-4e9f-9330-8ddea8275972",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[CellGroupData[{
Cell[186448, 5106, 2381, 64, 307, "Input",ExpressionUUID->"e0061922-7cc3-4a71-b2a2-b86ace5ca261",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[188832, 5172, 2206, 68, 155, "Output",ExpressionUUID->"e92d9a65-8ec3-4e5b-a668-d93f1e2a1178",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[191075, 5245, 344, 8, 41, "Input",ExpressionUUID->"0ef6b204-7ead-4c92-b653-622434b97257",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[191422, 5255, 639, 17, 56, "Output",ExpressionUUID->"d7f77746-1a02-4a8d-9e3d-cad8cc08a1d1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[192098, 5277, 2717, 64, 126, "Input",ExpressionUUID->"0f2fb2c1-7348-4de0-a3f8-d6d2c76ca2dc",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[194818, 5343, 410, 9, 43, "Output",ExpressionUUID->"6b8fa566-fb86-4df5-a312-056070d0baaa",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[195231, 5354, 412, 9, 43, "Output",ExpressionUUID->"18c8cdc2-7d13-4fa0-874f-89329c48c053",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[195646, 5365, 412, 9, 43, "Output",ExpressionUUID->"8bf5b017-f58a-4fec-9220-fc4bf107a846",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[196061, 5376, 413, 9, 43, "Output",ExpressionUUID->"9ac7a586-a880-4afc-b38d-8de4dba827ab",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[196511, 5390, 6851, 194, 504, "Input",ExpressionUUID->"42ec3dbb-37d6-4903-9c4e-0ba76012bfc7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[203365, 5586, 401, 7, 41, "Output",ExpressionUUID->"11e70b11-e887-45fd-bb5e-bef17077d0f6",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[203769, 5595, 401, 7, 41, "Output",ExpressionUUID->"38dbd2d4-7357-4819-a012-e1808547aacc",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[204173, 5604, 403, 7, 41, "Output",ExpressionUUID->"5592d2fc-6a0b-4230-b70b-eaad25dab1d3",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[204579, 5613, 401, 7, 41, "Output",ExpressionUUID->"30e2b17e-c8f5-4e64-b428-9367109bb379",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[204983, 5622, 401, 7, 41, "Output",ExpressionUUID->"34aa3cff-93b7-46a0-b08f-fc2fbcf9ec8f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[205387, 5631, 401, 7, 41, "Output",ExpressionUUID->"f5e80849-bae0-4860-af6c-122bca3fb925",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[205791, 5640, 403, 7, 41, "Output",ExpressionUUID->"bd2679c2-b15a-4e2e-a491-1b01a149fee4",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[206197, 5649, 401, 7, 41, "Output",ExpressionUUID->"a751097b-ac7b-4250-881d-2f47c6cf1eeb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[206601, 5658, 1368, 40, 123, "Output",ExpressionUUID->"a165c88f-39e0-4b40-8041-20f66ac598fb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[207972, 5700, 1054, 38, 305, "Output",ExpressionUUID->"0cab3e11-8321-485c-8f07-48dfe5c5bb52",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[209029, 5740, 1284, 37, 139, "Output",ExpressionUUID->"b188ff20-24e9-4b07-8a78-99ae2c33b030",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[210316, 5779, 1054, 38, 305, "Output",ExpressionUUID->"a350059a-b82c-4574-9093-e7c4fdfa9a46",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[211419, 5823, 277, 6, 55, "Section",ExpressionUUID->"5f20cd6d-58b6-49c4-87ea-8e33cdb6f1fe",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[CellGroupData[{
Cell[211721, 5833, 13081, 316, 533, "Input",ExpressionUUID->"f7af1682-0a9d-4694-87ad-b15bb06f6946",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[224805, 6151, 2036, 65, 290, "Output",ExpressionUUID->"da3b8eca-4f8d-486a-9dd0-4f5d26c255f9",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[226856, 6219, 536, 13, 41, "Input",ExpressionUUID->"766572fa-6408-4290-b9cd-e8b00dabb48e",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[CellGroupData[{
Cell[227417, 6236, 9710, 252, 792, "Input",ExpressionUUID->"8313c630-7f03-4e0c-9355-9a378e467d7f",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[237130, 6490, 1652, 51, 202, "Output",ExpressionUUID->"33f60f5c-e21c-49c3-8798-f0aedd9b8213",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[238819, 6546, 5783, 146, 336, "Input",ExpressionUUID->"ef046c83-fe09-4411-a41a-a55ab64f2f96",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[244605, 6694, 1285, 39, 128, "Output",ExpressionUUID->"8fc1c82d-c84c-43cf-93fc-999a2fa9cce8",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[245939, 6739, 220, 4, 55, "Section",ExpressionUUID->"ab09dbc2-b595-432f-9c9d-b7ad10f7d3e4",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[CellGroupData[{
Cell[246184, 6747, 754, 18, 105, "Input",ExpressionUUID->"f1785cbe-cccd-4de3-ae57-39429eceae8c",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[246941, 6767, 568, 15, 70, "Output",ExpressionUUID->"2962bf6e-b0cb-4ca6-a326-5ec5b069ff88",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[247546, 6787, 698, 15, 63, "Input",ExpressionUUID->"cfb8a943-c51f-4352-a6b2-58d1e9d87406",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[248247, 6804, 421, 9, 70, "Output",ExpressionUUID->"f75faee8-3495-4b00-93f5-03e117188c70",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[248705, 6818, 447, 10, 63, "Input",ExpressionUUID->"b0e43ddf-dd4c-463f-bbb0-cc368a4087bd",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[249155, 6830, 405, 8, 70, "Output",ExpressionUUID->"39d5df7c-5629-4e9b-9f96-7ae0228082a0",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[249597, 6843, 522, 12, 41, "Input",ExpressionUUID->"5df2201f-32cb-4f44-bf53-773da2ab3477",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[250122, 6857, 603, 16, 70, "Output",ExpressionUUID->"8da91530-2a91-4ac2-ad2c-b57abc05cb87",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[250762, 6878, 1652, 40, 273, "Input",ExpressionUUID->"b405e2ed-3ef5-42a7-b3df-d9429c0146c0",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[252417, 6920, 1773, 52, 70, "Output",ExpressionUUID->"b422ea26-7d26-4e11-bf7f-da1d7cda6817",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[254227, 6977, 457, 12, 41, "Input",ExpressionUUID->"c3920357-92b0-4ee6-8694-6943c537b68c",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[254687, 6991, 1013, 30, 70, "Output",ExpressionUUID->"33338413-6f67-440a-bc9c-8fcc7407d949",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[255737, 7026, 1703, 41, 259, "Input",ExpressionUUID->"b50d0820-fca4-4bfb-b38c-c82abe29d31b",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[257443, 7069, 1646, 49, 70, "Output",ExpressionUUID->"cb5a1f21-413f-4b50-9fcd-bf6cddb2bbc1",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[259126, 7123, 691, 18, 41, "Input",ExpressionUUID->"b8921911-39bf-41e2-a062-601a2edda00f",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[259820, 7143, 534, 14, 70, "Output",ExpressionUUID->"cf1b7dc5-e034-4ea8-8bae-7b8378a56f47",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[260369, 7160, 3299, 82, 147, "Input",ExpressionUUID->"e80004b3-3e63-4ee3-89c6-bc7491c854e4",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[263671, 7244, 1558, 39, 123, "Input",ExpressionUUID->"c0bd30c4-7fbe-4fd7-b7a5-9a3810347ebe",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[CellGroupData[{
Cell[265254, 7287, 1931, 47, 105, "Input",ExpressionUUID->"24f9b6f0-14b6-4d0b-b614-01ed11f30fda",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[267188, 7336, 10649, 323, 70, "Output",ExpressionUUID->"13eb0323-4741-4e63-ab29-bfb426435399",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[277874, 7664, 1885, 47, 105, "Input",ExpressionUUID->"462bcb59-5dbc-45ca-b916-cf7819a3eecd",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[279762, 7713, 10601, 322, 70, "Output",ExpressionUUID->"13e288c4-29a1-40b5-846a-c8dd0dab75bc",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[290412, 8041, 285, 5, 55, "Section",ExpressionUUID->"1d6df0e0-a32d-4376-a4f2-0378dd2e9fb2",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[CellGroupData[{
Cell[290722, 8050, 2425, 66, 307, "Input",ExpressionUUID->"e545fffa-7b0e-45f1-ba8c-50de81ca5167",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[293150, 8118, 2245, 70, 155, "Output",ExpressionUUID->"1e9d43c4-ba7d-4f39-ade1-e4590374290a",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[295432, 8193, 1266, 36, 105, "Input",ExpressionUUID->"5ec37006-2fce-4944-b49c-548370ab324e",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[296701, 8231, 523, 16, 66, "Output",ExpressionUUID->"d46b7eaf-7c07-4dc1-9631-82f8708cbdbc",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[297227, 8249, 521, 16, 56, "Output",ExpressionUUID->"ff616226-b2f5-4b53-aa6a-085f77d8c6ce",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[297751, 8267, 524, 15, 61, "Output",ExpressionUUID->"73866f13-73a4-4d0a-a8ab-0dc3561719dd",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[298278, 8284, 548, 16, 61, "Output",ExpressionUUID->"4dea9978-5852-46cd-bdb2-52f4b4877142",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[298841, 8303, 3433, 89, 168, "Input",ExpressionUUID->"aed4202d-cdd6-45af-b727-fca531372986",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[302277, 8394, 1405, 45, 149, "Output",ExpressionUUID->"48b72f89-0865-4391-bd07-c9fa66d73738",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Closed]],
Cell[CellGroupData[{
Cell[303719, 8444, 326, 7, 55, "Section",ExpressionUUID->"cbbe5547-7823-4564-bb8a-acb3e84d3cd6",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[CellGroupData[{
Cell[304070, 8455, 1234, 32, 84, "Input",ExpressionUUID->"26374324-dfd9-4f94-9540-306c887f6a9c",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[305307, 8489, 893, 25, 70, "Output",ExpressionUUID->"180c2f09-3ecd-4874-bad9-eeaf60ad9025",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[306237, 8519, 665, 14, 105, "Input",ExpressionUUID->"39b1ba3e-cc4a-4b2a-9bca-dd7408c20272",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[306905, 8535, 1276, 37, 70, "Output",ExpressionUUID->"13a6dfc3-c3a8-4572-aa6f-031a789842de",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[308230, 8578, 174, 3, 55, "Section",ExpressionUUID->"c5b05e1c-fca6-44f4-8068-012abbad076f"],
Cell[CellGroupData[{
Cell[308429, 8585, 2228, 65, 118, "Input",ExpressionUUID->"5605e34b-fd98-465e-af02-a38aeda98c45"],
Cell[310660, 8652, 1813, 56, 68, "Output",ExpressionUUID->"66ba5b05-8a20-4799-be8d-d77aabd5b853"]
}, Open  ]],
Cell[CellGroupData[{
Cell[312510, 8713, 637, 14, 105, "Input",ExpressionUUID->"1f03295b-1f0d-4d39-ba9d-25e54f716c23"],
Cell[313150, 8729, 3035, 92, 158, "Output",ExpressionUUID->"08b933aa-7f1c-44b5-af4e-bb02bbed7980"]
}, Open  ]],
Cell[316200, 8824, 715, 17, 105, "Input",ExpressionUUID->"55aeb888-3627-454c-af1f-1be00edcb99b"],
Cell[316918, 8843, 3441, 101, 158, "Output",ExpressionUUID->"4d4a3220-87f3-4045-b20e-9e4010592670"]
}, Closed]],
Cell[CellGroupData[{
Cell[320396, 8949, 199, 3, 55, "Section",ExpressionUUID->"53e156e2-b65e-45d7-a1ca-b27dead077a3"],
Cell[CellGroupData[{
Cell[320620, 8956, 1461, 34, 225, "Input",ExpressionUUID->"21cf6dd3-22dd-4ec1-85e1-7b1435a362a0"],
Cell[322084, 8992, 1934, 55, 117, "Output",ExpressionUUID->"930b13c6-1acd-44ff-b470-43490da5dac4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[324055, 9052, 623, 13, 105, "Input",ExpressionUUID->"1ac133d0-6e05-4269-95c0-13578552ac6a"],
Cell[324681, 9067, 1980, 56, 117, "Output",ExpressionUUID->"0cd8c67a-c000-4172-86dd-0b8d8d722764"]
}, Open  ]],
Cell[CellGroupData[{
Cell[326698, 9128, 409, 10, 41, "Input",ExpressionUUID->"98404d9e-966f-4078-955a-1755bbc5b334"],
Cell[327110, 9140, 1242, 38, 115, "Output",ExpressionUUID->"6428cced-8c95-4efe-a2fa-16b038c8e8b4"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[328401, 9184, 226, 4, 55, "Section",ExpressionUUID->"d60783c8-b196-4c04-8439-a39c2c59bdb2"],
Cell[328630, 9190, 40268, 1124, 2781, "Input",ExpressionUUID->"82f0f0f2-6f1a-403a-a51d-243b3d07aa58"]
}, Closed]],
Cell[CellGroupData[{
Cell[368935, 10319, 199, 3, 55, "Section",ExpressionUUID->"a320ca3f-da76-4a9a-8db7-454f77c6b8ab"],
Cell[CellGroupData[{
Cell[369159, 10326, 1181, 31, 105, "Input",ExpressionUUID->"726c9ab9-b799-44f2-8640-320e0abf1fed"],
Cell[370343, 10359, 929, 28, 59, "Output",ExpressionUUID->"c486057d-9a25-49e6-89a0-9a9f05d95597"]
}, Open  ]],
Cell[371287, 10390, 622, 14, 105, "Input",ExpressionUUID->"c6a92cc8-16a0-4e09-93e8-666d70cc6b7b"],
Cell[371912, 10406, 1532, 44, 136, "Output",ExpressionUUID->"feace1f1-c74d-46bc-b4ef-2ed0b8a1c890"],
Cell[CellGroupData[{
Cell[373469, 10454, 1584, 38, 175, "Input",ExpressionUUID->"ca8087e0-6670-435c-9436-ba68f5e4ee3f"],
Cell[375056, 10494, 1674, 48, 95, "Output",ExpressionUUID->"1a975e81-4c27-4ba1-aad8-7a1ca110cc1a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[376767, 10547, 1059, 24, 168, "Input",ExpressionUUID->"b9775994-f100-4b67-af11-374d32c1d913"],
Cell[377829, 10573, 1578, 49, 95, "Output",ExpressionUUID->"c54482de-ee82-4438-af10-a18606eaea28"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[379456, 10628, 267, 5, 55, "Section",ExpressionUUID->"1379d40a-f23d-4166-8fa1-2560adeb820e",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[379726, 10635, 843, 18, 168, "Input",ExpressionUUID->"4cc4bfe9-6ef8-4901-9cb0-a18c9d7e54d8",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Closed]],
Cell[CellGroupData[{
Cell[380606, 10658, 285, 5, 55, "Section",ExpressionUUID->"a4d05c9d-b887-4ba7-b6bf-6851a05abca6",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[CellGroupData[{
Cell[380916, 10667, 1655, 43, 300, "Input",ExpressionUUID->"548ca5a9-22c5-4950-8185-d97b77061ad4",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[382574, 10712, 1724, 52, 70, "Output",ExpressionUUID->"f30115c6-7057-47d1-8bbc-be3c3b321235",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[384335, 10769, 1657, 41, 259, "Input",ExpressionUUID->"bb6e99b2-ef6d-458c-b5fe-5e2fa876c342",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[385995, 10812, 1620, 49, 70, "Output",ExpressionUUID->"b66b0d43-0aef-4fd1-a628-5513d3dff556",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[387664, 10867, 304, 5, 55, "Section",ExpressionUUID->"6d2e70c0-e860-4c60-a401-002a164f1c6d",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[CellGroupData[{
Cell[387993, 10876, 1020, 24, 151, "Input",ExpressionUUID->"8642c990-8d4f-4b9c-94aa-25147526d6a8",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[389016, 10902, 531, 14, 56, "Output",ExpressionUUID->"5ee2a20c-933b-42aa-bf22-007fe1901fce",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[389584, 10921, 379, 8, 41, "Input",ExpressionUUID->"a9568c24-9e2d-4e39-85eb-d8c68b5e8cfa",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[389966, 10931, 554, 14, 56, "Output",ExpressionUUID->"4f8d797d-a6aa-44a5-93f3-0a7aaf1a573c",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[390557, 10950, 747, 17, 41, "Input",ExpressionUUID->"81fca5ad-6cc2-4542-ad93-94e55de7fd9a",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[391307, 10969, 702, 16, 63, "Output",ExpressionUUID->"d06eca0f-2f5d-49cc-a5f6-f3d7091b1c1f",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[392046, 10990, 1133, 26, 147, "Input",ExpressionUUID->"07d2d053-6873-401a-9f7c-4fe3e13efc7b",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[393182, 11018, 1272, 39, 70, "Output",ExpressionUUID->"6bb45359-218a-494f-86b6-aa29de420472",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[394491, 11062, 586, 9, 126, "Input",ExpressionUUID->"d181572e-f360-466b-8a31-72af39dd0bc2",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[395080, 11073, 402, 7, 70, "Output",ExpressionUUID->"edab7c3d-2f03-4785-b320-c61eae807adc",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[395485, 11082, 401, 7, 70, "Output",ExpressionUUID->"0cd156d6-027c-4253-84f1-4e6bca29fa88",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[395923, 11094, 1062, 24, 63, "Input",ExpressionUUID->"73dfffe5-7e30-4d14-ba54-1deb6262fc06",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[396988, 11120, 581, 12, 70, "Message",ExpressionUUID->"9d63b393-5f83-4269-bc18-15712b72551a",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[397572, 11134, 580, 12, 70, "Message",ExpressionUUID->"3eb18845-578d-4589-ba38-d2c60098f370",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[398155, 11148, 581, 12, 70, "Message",ExpressionUUID->"702e3ef5-c91a-4543-b721-08f46d875b7d",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[398739, 11162, 578, 12, 70, "Message",ExpressionUUID->"8c92429a-bb38-415c-b82f-616c9ec33007",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[399320, 11176, 742, 16, 70, "Output",ExpressionUUID->"6dc2469d-ba5f-4db3-a252-f2b39b297ca3",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[400111, 11198, 269, 5, 55, "Section",ExpressionUUID->"39f98918-9ee4-4948-8349-8d841d0b7670",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[CellGroupData[{
Cell[400405, 11207, 1031, 28, 110, "Input",ExpressionUUID->"7b324177-2d16-4222-b76d-5399294e258c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[401439, 11237, 934, 27, 70, "Output",ExpressionUUID->"68aca1a1-fde6-47bf-8b66-f4164c399940",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[402410, 11269, 757, 14, 105, "Input",ExpressionUUID->"a47d3d77-f2c4-4944-80b4-d9c0862ea340",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[403170, 11285, 1445, 41, 70, "Output",ExpressionUUID->"e70696d2-eef2-468f-8987-5f24d0595b8c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[404652, 11331, 720, 16, 65, "Input",ExpressionUUID->"d0ea40d2-8131-4791-9ff0-1493c60d4e33",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[405375, 11349, 424, 10, 70, "Output",ExpressionUUID->"854f0c4a-c283-4247-876e-0894f80a0d80",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[405836, 11364, 469, 10, 63, "Input",ExpressionUUID->"f4cb34e7-21ff-411e-b377-6625fc160ba7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[406308, 11376, 408, 9, 70, "Output",ExpressionUUID->"16fca207-5111-42cf-b6e1-63ba19d9532a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[406753, 11390, 401, 10, 41, "Input",ExpressionUUID->"c8677661-bb52-4421-9325-6101106f00dc",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[407157, 11402, 762, 22, 70, "Output",ExpressionUUID->"a62c26ae-a476-4ede-b9b3-7a09b1c2b109",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[407968, 11430, 295, 5, 55, "Section",ExpressionUUID->"4c66a183-e59c-4a87-a303-fa6f6cf4ee8a",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[CellGroupData[{
Cell[408288, 11439, 1125, 24, 126, "Input",ExpressionUUID->"721c01a8-6282-4f57-a092-2cbe9307ee77",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[409416, 11465, 531, 12, 70, "Output",ExpressionUUID->"092d1611-4167-43ec-9efe-fb94b042f9b2",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[409984, 11482, 1363, 33, 241, "Input",ExpressionUUID->"7be028df-18fb-4faa-aefa-9bc5c614f5a5",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[411350, 11517, 446, 10, 70, "Output",ExpressionUUID->"99ae54b7-c2d4-4021-bbe6-30662295ad47",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[411833, 11532, 497, 10, 41, "Input",ExpressionUUID->"f5b008ef-c96e-44d3-b468-4d9c4ecbb2c3",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[412333, 11544, 1263, 37, 70, "Output",ExpressionUUID->"783c5c1a-6c97-450a-af6f-f73d812360b9",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[413633, 11586, 570, 13, 41, "Input",ExpressionUUID->"489eee96-8a21-4c30-93cd-a1ff8ed1ef5c",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[414206, 11601, 1187, 36, 70, "Output",ExpressionUUID->"0c38ae7b-0d04-46a3-94b5-0c8d1a64dcec",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[415430, 11642, 614, 14, 41, "Input",ExpressionUUID->"486f9861-22ec-457c-a32c-734ab6cff801",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[416047, 11658, 353, 6, 70, "Output",ExpressionUUID->"ad226aed-c216-406d-8415-63603a1a0e33",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[416437, 11669, 1291, 33, 241, "Input",ExpressionUUID->"9a03ac33-b861-4bc3-8ed7-d3583b0aac1d",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[417731, 11704, 1346, 42, 70, "Output",ExpressionUUID->"dbd0aeff-171c-4496-ad31-1d86313c7d65",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[419114, 11751, 531, 12, 41, "Input",ExpressionUUID->"190f967f-0d2a-4537-aeb4-a8d72e0fad79",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[419648, 11765, 1731, 51, 70, "Output",ExpressionUUID->"568b3093-46e0-4dd9-ac61-c72903cb45b2",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[421416, 11821, 661, 15, 63, "Input",ExpressionUUID->"d66306da-8ea2-41d5-8bd4-09cb63669ce0",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[422080, 11838, 517, 12, 70, "Output",ExpressionUUID->"40a177c5-49b5-454e-a710-af5b8f8cc10f",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[422600, 11852, 647, 17, 70, "Output",ExpressionUUID->"a3eb2ae8-4b41-4eb1-a8a8-2cd47abf41ee",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[423296, 11875, 337, 7, 55, "Section",ExpressionUUID->"2cb2b52d-f1ab-4ab2-ab1f-00da7bdba663",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[CellGroupData[{
Cell[423658, 11886, 1311, 34, 151, "Input",ExpressionUUID->"aef02228-e897-4858-a167-00b1ebc424d3",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[424972, 11922, 1019, 30, 70, "Output",ExpressionUUID->"c0bb33dc-170c-4069-b093-305978414600",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[426028, 11957, 663, 17, 63, "Input",ExpressionUUID->"c1154549-4eb3-4851-9c1a-eaa127016af4",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[426694, 11976, 413, 8, 70, "Output",ExpressionUUID->"a79736ee-74cb-4632-b200-202da74d6e34",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[427110, 11986, 487, 11, 70, "Output",ExpressionUUID->"9e9f81c3-8c59-4d3d-a710-50e9161f730b",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[427634, 12002, 568, 12, 63, "Input",ExpressionUUID->"108ab7e0-fa47-4c1c-bb99-bfc3a2dea243",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[428205, 12016, 759, 14, 70, "Output",ExpressionUUID->"8c400333-83f2-4fa0-a90d-29f6654bb036",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[429001, 12035, 2552, 71, 210, "Input",ExpressionUUID->"3248dc85-89bb-4f1d-b7dc-bb8eea5a4abe",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[431556, 12108, 952631, 15647, 70, "Output",ExpressionUUID->"b092c811-999e-4cfe-85fb-838ecb1a8c4c",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[1384224, 27760, 741, 16, 105, "Input",ExpressionUUID->"3908d90c-a111-41d8-bf39-34d0e146a544",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[1384968, 27778, 1115, 31, 70, "Output",ExpressionUUID->"6249a725-f448-4da0-a8ae-14f476b9bd0e",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[1386120, 27814, 770, 17, 65, "Input",ExpressionUUID->"8baa19b8-b767-4880-9511-8d98aafd6e9a",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[1386893, 27833, 455, 10, 70, "Output",ExpressionUUID->"a7a33bf3-f36f-49ed-98d3-cd7317566d04",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[1387385, 27848, 467, 10, 63, "Input",ExpressionUUID->"4aaf3fb3-498d-4277-8359-a8e639bf8883",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[1387855, 27860, 414, 9, 70, "Output",ExpressionUUID->"465a59f8-c72a-4cb3-b41b-94eac3333fa8",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[1388306, 27874, 926, 21, 147, "Input",ExpressionUUID->"0ab98cad-23a2-44a5-9ff1-9745970131c6",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[1389235, 27897, 532, 12, 70, "Output",ExpressionUUID->"bd73d2be-a688-4ebc-a2b9-b8c2455e81a1",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[1389770, 27911, 29396, 799, 70, "Output",ExpressionUUID->"0dcf70b2-542b-43d7-bba0-d52f5d06250c",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[1419181, 28713, 1048, 26, 84, "Input",ExpressionUUID->"1508244d-b0cb-4203-8418-5eceb638cd49",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[CellGroupData[{
Cell[1420254, 28743, 727, 19, 41, "Input",ExpressionUUID->"0077093c-c82c-47d6-80e0-8711bfa4dccd",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[1420984, 28764, 40383, 1088, 70, "Output",ExpressionUUID->"ee3401f8-9373-44ad-a3c6-167a997b772a",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1461416, 29858, 229, 4, 55, "Section",ExpressionUUID->"b996d263-67bb-4533-918f-565df51cd1ba"],
Cell[CellGroupData[{
Cell[1461670, 29866, 564, 13, 84, "Input",ExpressionUUID->"1a6ebd7e-5ffd-466d-8d0a-fb380d2fffe4"],
Cell[1462237, 29881, 464, 12, 70, "Output",ExpressionUUID->"da423cf9-9718-43f0-873a-bc8147115c02"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1462738, 29898, 433, 10, 41, "Input",ExpressionUUID->"aa217098-d2cc-4a72-99fe-f2a8d0256810"],
Cell[1463174, 29910, 915, 25, 70, "Output",ExpressionUUID->"b9954151-ac2b-44b0-a6a6-389cd96d80e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1464126, 29940, 931, 19, 189, "Input",ExpressionUUID->"a1b05909-2b79-4bfe-a40c-c2ca1866a8bb"],
Cell[1465060, 29961, 984, 30, 70, "Output",ExpressionUUID->"d47bd72f-0fe2-4be1-8d15-4aa7c173e97f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1466081, 29996, 420, 10, 41, "Input",ExpressionUUID->"fdc0bc57-3ea1-430f-928b-5bbc09a1b5d7"],
Cell[1466504, 30008, 997, 30, 70, "Output",ExpressionUUID->"f9fbd6c2-1b3d-4c29-8789-82aca35f2c25"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1467538, 30043, 418, 9, 41, "Input",ExpressionUUID->"ce1005d1-c0f3-49bf-9498-135f9f1db570"],
Cell[1467959, 30054, 1093, 32, 70, "Output",ExpressionUUID->"f46c07ed-3e92-4bfa-ba36-259eedd09c1d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1469089, 30091, 561, 14, 41, "Input",ExpressionUUID->"0e2fe6fe-8e42-4aaf-95c5-b04f6df6be08"],
Cell[1469653, 30107, 1000, 30, 70, "Output",ExpressionUUID->"9564de71-d7e8-4f3d-85c3-d8ed933bebd2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1470690, 30142, 1033, 25, 84, "Input",ExpressionUUID->"d5d538fa-a862-4c94-b1de-23a9bcd89467"],
Cell[1471726, 30169, 635, 16, 70, "Output",ExpressionUUID->"96f132af-73ae-496e-810c-cbb9e73744b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1472398, 30190, 670, 14, 86, "Input",ExpressionUUID->"11ce50d7-ba1a-44a1-9d5c-04c5dc166fa0"],
Cell[1473071, 30206, 890, 21, 70, "Output",ExpressionUUID->"a25b8a1a-a99f-4df1-89d2-bc063067a806"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1473998, 30232, 533, 12, 84, "Input",ExpressionUUID->"3c041623-db02-4f9a-ac0c-14fe730ca37e"],
Cell[1474534, 30246, 447, 11, 70, "Output",ExpressionUUID->"90b5a2d4-1920-4e50-9791-fd03560d6b9b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1475018, 30262, 366, 9, 41, "Input",ExpressionUUID->"9000a56a-a150-4c1b-93c2-641b3fa475db"],
Cell[1475387, 30273, 495, 13, 70, "Output",ExpressionUUID->"caf9c5da-6f9f-4b99-a24b-df4cb0150150"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1475919, 30291, 910, 22, 105, "Input",ExpressionUUID->"307dec6d-c707-4d82-91fb-fa79d924fefb"],
Cell[1476832, 30315, 700, 16, 70, "Output",ExpressionUUID->"c1e3d70b-24c6-4d92-8637-1fde673ba897"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1477569, 30336, 437, 11, 41, "Input",ExpressionUUID->"8583e6e7-effd-4f8d-9c55-f17d4a1de528"],
Cell[1478009, 30349, 1070, 30, 70, "Output",ExpressionUUID->"65ec845a-86ab-40f1-9b6b-72da7820599b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1479128, 30385, 254, 4, 55, "Section",ExpressionUUID->"d42bdd56-e92d-4575-bdd3-bc97ebcbf615"],
Cell[CellGroupData[{
Cell[1479407, 30393, 331, 6, 84, "Input",ExpressionUUID->"23c7319c-2675-48b9-8039-49a87fe4ea5e"],
Cell[1479741, 30401, 669, 15, 70, "Output",ExpressionUUID->"3ee85318-aceb-4190-ab78-8c24cb76c436"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1480447, 30421, 331, 6, 84, "Input",ExpressionUUID->"b161b4be-830b-435e-b1f5-43e4fe6c2eee"],
Cell[1480781, 30429, 452, 11, 70, "Output",ExpressionUUID->"a7a77f03-7911-4571-9455-1d342c0918f6"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1481282, 30446, 231, 4, 55, "Section",ExpressionUUID->"5c47f7b0-b550-4c2d-84b4-7b9a4d5632c5"],
Cell[CellGroupData[{
Cell[1481538, 30454, 1670, 46, 168, "Input",ExpressionUUID->"e0420516-895f-4e77-b39b-22baf017e5dd"],
Cell[1483211, 30502, 1103, 34, 70, "Output",ExpressionUUID->"5ed9ce4d-4d9d-4f24-97f2-0406cb176384"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1484363, 30542, 214, 4, 55, "Section",ExpressionUUID->"9fcbe88e-b834-4555-9af4-6170ddb0c02d"],
Cell[CellGroupData[{
Cell[1484602, 30550, 940, 26, 110, "Input",ExpressionUUID->"c48580b8-01d1-4139-8081-a0c16098ec98"],
Cell[1485545, 30578, 880, 26, 70, "Output",ExpressionUUID->"a8bf1d95-57ed-4d56-b3e1-d356035bd512"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1486474, 30610, 226, 4, 55, "Section",ExpressionUUID->"08715f96-4f89-4d88-a1f8-b871706f1d6c"],
Cell[CellGroupData[{
Cell[1486725, 30618, 644, 17, 86, "Input",ExpressionUUID->"4d9c2ce1-f468-484f-8f34-90af6559c3b7"],
Cell[1487372, 30637, 601, 16, 44, "Output",ExpressionUUID->"4e52f5d3-be91-4786-af7c-da1b3152f720"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1488010, 30658, 1033, 22, 168, "Input",ExpressionUUID->"c8f149be-46ef-4176-bc5b-45d496c4f9d4"],
Cell[1489046, 30682, 1147, 34, 87, "Output",ExpressionUUID->"ce6983d6-4de8-47c0-b529-21c08ab29df4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1490230, 30721, 316, 7, 41, "Input",ExpressionUUID->"208d4b88-8538-4fac-82d9-16044ffefabc"],
Cell[1490549, 30730, 1929, 50, 87, "Output",ExpressionUUID->"a92655a5-7bec-4cd6-a332-02a1a585921d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1492515, 30785, 850, 21, 86, "Input",ExpressionUUID->"20e95e18-e606-40a6-bbb9-2a060f77ff01"],
Cell[1493368, 30808, 3739, 99, 90, "Output",ExpressionUUID->"4361a21e-dca9-425c-a0b7-485d5e68a7d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1497144, 30912, 864, 20, 107, "Input",ExpressionUUID->"02ce0d89-1eea-482e-8abd-de7b1edd3966"],
Cell[1498011, 30934, 991, 26, 44, "Output",ExpressionUUID->"522dbcac-55b8-4360-93dc-2b8ef5a54c4e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1499039, 30965, 562, 12, 86, "Input",ExpressionUUID->"0e4dc268-fd5d-4ac4-bc7f-0b7e26865295"],
Cell[1499604, 30979, 820, 24, 44, "Output",ExpressionUUID->"2d199b3d-97d7-4f66-b519-f554ca493586"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1500461, 31008, 507, 12, 41, "Input",ExpressionUUID->"bc767360-0960-4d60-9fd6-3888b94d23f6"],
Cell[1500971, 31022, 1372, 37, 110, "Output",ExpressionUUID->"2f0fab39-ae93-4883-875e-7b16e6b35a0b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1502392, 31065, 262, 6, 55, "Section",ExpressionUUID->"81f7edf4-d0ba-4e2d-9a51-eaff783080b8"],
Cell[CellGroupData[{
Cell[1502679, 31075, 942, 26, 110, "Input",ExpressionUUID->"9393b669-4d2b-489f-bb9e-a2d03ca3dc09"],
Cell[1503624, 31103, 879, 26, 70, "Output",ExpressionUUID->"d202f10a-f0c9-477d-bada-08bc00881b69"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1504552, 31135, 222, 4, 55, "Section",ExpressionUUID->"160d511b-77ee-4104-89d2-77e2714a74e6"],
Cell[CellGroupData[{
Cell[1504799, 31143, 689, 18, 84, "Input",ExpressionUUID->"7907b701-da56-4db6-900f-c08323e68fcf"],
Cell[1505491, 31163, 686, 17, 70, "Output",ExpressionUUID->"277a1632-9359-4833-93a3-7addeff8bca6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1506214, 31185, 436, 10, 41, "Input",ExpressionUUID->"c1bd2b8e-b5d7-411c-85f7-571dba586066"],
Cell[1506653, 31197, 1044, 28, 70, "Output",ExpressionUUID->"ea9167f6-9914-4c1e-b5dd-cf1d7567cc4b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1507746, 31231, 242, 4, 55, "Section",ExpressionUUID->"bf34f306-0271-46e8-a989-db0eae45d8cc"],
Cell[CellGroupData[{
Cell[1508013, 31239, 954, 25, 102, "Input",ExpressionUUID->"c900ec75-0a66-43eb-91f6-b5b5937af9ba"],
Cell[1508970, 31266, 829, 24, 56, "Output",ExpressionUUID->"c8fe5f50-1f02-44f8-96c7-64dbd495bead"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1509836, 31295, 667, 15, 105, "Input",ExpressionUUID->"661298dc-5988-4dd0-aaa0-196e2aed06fc"],
Cell[1510506, 31312, 1122, 32, 116, "Output",ExpressionUUID->"dedef232-b43e-4604-ae4e-b23e953a58ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1511665, 31349, 523, 10, 84, "Input",ExpressionUUID->"06d2450d-63d6-423f-8e86-79f6a5d0af67"],
Cell[1512191, 31361, 249, 6, 45, "Output",ExpressionUUID->"748dd02a-338b-4fa1-932a-8d69f5dad87d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1512477, 31372, 648, 16, 102, "Input",ExpressionUUID->"a0b105ae-9a11-484c-a384-a201a2d251ba"],
Cell[1513128, 31390, 536, 16, 56, "Output",ExpressionUUID->"6702c4c3-baf9-4349-ace2-8941fd85e3c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1513701, 31411, 936, 21, 168, "Input",ExpressionUUID->"0f7126d5-6283-4253-a486-ca50282ab597"],
Cell[1514640, 31434, 2122, 63, 105, "Output",ExpressionUUID->"481bf6dc-2281-4d4f-873a-4d0da2a0dc1a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1516799, 31502, 2526, 66, 295, "Input",ExpressionUUID->"6093ef81-bb43-4c3d-8a44-3ab5a848e2f7"],
Cell[1519328, 31570, 2115, 64, 175, "Output",ExpressionUUID->"04e632bc-09f5-4511-974d-4810bf9a8dd3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1521480, 31639, 1252, 26, 63, "Input",ExpressionUUID->"afc49ee9-5e12-4686-990d-b8081d7c34c3",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1522735, 31667, 565, 11, 43, "Output",ExpressionUUID->"a3abe70a-bfae-471d-8d0e-6c63a21c077d",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[1523337, 31683, 1252, 26, 63, "Input",ExpressionUUID->"d7371898-5664-4a0b-9921-e0ed527d6fca",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1524592, 31711, 554, 11, 43, "Output",ExpressionUUID->"f524033b-77f2-4c64-902e-b497bc79757b",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[1525183, 31727, 1300, 27, 63, "Input",ExpressionUUID->"6648f86f-73c3-4d1e-b48b-56ca684f02b8",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1526486, 31756, 574, 11, 43, "Output",ExpressionUUID->"e807a116-d2b5-4d14-a015-95e82b0e8bb6",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[1527097, 31772, 1298, 27, 63, "Input",ExpressionUUID->"b7b26f1d-d1a7-45d7-875f-ca3ebb70353c",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1528398, 31801, 609, 12, 43, "Output",ExpressionUUID->"60c0b51c-6374-4397-ba1f-31de60a7e1e2",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[1529044, 31818, 417, 8, 84, "Input",ExpressionUUID->"ccf5dd56-8f63-453e-88bb-e98f8257f7ce",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1529464, 31828, 827, 22, 43, "Output",ExpressionUUID->"3784b276-6c89-44ac-99e8-fae6ca4adad4",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[1530328, 31855, 1411, 34, 41, "Input",ExpressionUUID->"67e64f4c-a4e8-405d-aa79-4433fd72ffbc",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1531742, 31891, 1149, 30, 101, "Output",ExpressionUUID->"e3ee061f-5e74-4704-a636-5708eb925efd",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[1532906, 31924, 778, 20, 84, "Input",ExpressionUUID->"859707f8-6c4d-4cc0-bfc1-c6a39a5efc74"],
Cell[1533687, 31946, 235, 6, 43, "Output",ExpressionUUID->"31509de2-7c55-443c-ab97-9f21545fa4fc"],
Cell[CellGroupData[{
Cell[1533947, 31956, 1116, 29, 126, "Input",ExpressionUUID->"46e0269b-2113-4698-a5d5-48b1b8d4adaf"],
Cell[1535066, 31987, 325, 10, 45, "Output",ExpressionUUID->"391ebd03-27cd-4f8f-8d8e-7f8bde9d33a5"],
Cell[1535394, 31999, 225, 5, 41, "Output",ExpressionUUID->"292f0484-2f46-4c81-a6cf-1a0d9a878670"],
Cell[1535622, 32006, 194, 4, 41, "Output",ExpressionUUID->"cf925146-777c-4d80-9052-d110c2230527"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1535853, 32015, 1503, 40, 126, "Input",ExpressionUUID->"f5b7d0d6-251e-4ded-b81b-dc2e172e2394"],
Cell[1537359, 32057, 768, 25, 45, "Output",ExpressionUUID->"a9511cab-3596-4c8f-af1c-10c0bf8d57ba"],
Cell[1538130, 32084, 742, 22, 45, "Output",ExpressionUUID->"5e3b986b-da82-46f6-a3d2-05009b5244ba"],
Cell[1538875, 32108, 824, 25, 64, "Output",ExpressionUUID->"4e77d694-a0e3-474d-9930-28dc9ab3ce06"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1539748, 32139, 269, 6, 55, "Section",ExpressionUUID->"fc785680-d915-40ca-ab51-58fa947ca717"],
Cell[CellGroupData[{
Cell[1540042, 32149, 1528, 41, 102, "Input",ExpressionUUID->"d8d0de1e-92d4-4263-be05-78d1e190df66"],
Cell[1541573, 32192, 1129, 35, 62, "Output",ExpressionUUID->"e295684b-f44a-4e1c-9c6d-e7c7229f9c0b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1542739, 32232, 816, 19, 105, "Input",ExpressionUUID->"a49b6bc3-dd5b-4da6-9809-427501eb04aa"],
Cell[1543558, 32253, 1762, 49, 138, "Output",ExpressionUUID->"e3dac6a0-8d9f-4390-ad61-8c58160159da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1545357, 32307, 776, 16, 147, "Input",ExpressionUUID->"b3fcbdba-4935-46b1-870f-449aae7dceb3"],
Cell[1546136, 32325, 1007, 28, 69, "Output",ExpressionUUID->"7c58951b-52a4-4c46-bfaf-59174575f33b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1547180, 32358, 523, 11, 105, "Input",ExpressionUUID->"6052c375-d323-4682-872c-9565302389b7"],
Cell[1547706, 32371, 2239, 60, 144, "Output",ExpressionUUID->"ef0bbcda-927b-4877-9a55-eea4b52d11b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1549982, 32436, 536, 11, 84, "Input",ExpressionUUID->"474bd2ba-4e91-4801-b096-ae6341823cfb"],
Cell[1550521, 32449, 252, 6, 45, "Output",ExpressionUUID->"2987e530-cee6-4956-8c46-844028f75336"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1550810, 32460, 1057, 25, 151, "Input",ExpressionUUID->"2868584a-1989-486a-b351-c05672028f6b"],
Cell[1551870, 32487, 1207, 35, 73, "Output",ExpressionUUID->"29f39b54-e775-49d7-84ef-2cfbdc30f546"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1553114, 32527, 653, 16, 87, "Input",ExpressionUUID->"b2b22b69-a408-4e06-8cc4-8987def114c4"],
Cell[1553770, 32545, 477, 14, 45, "Output",ExpressionUUID->"6d059621-635d-4d9f-ab18-c082e890b7fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1554284, 32564, 986, 21, 147, "Input",ExpressionUUID->"4011efce-06a0-4cf6-9f3b-8f58b20f72ff"],
Cell[1555273, 32587, 1647, 50, 95, "Output",ExpressionUUID->"36bb3da8-f579-4f04-bae3-4d8576bc7257"]
}, Open  ]],
Cell[1556935, 32640, 1577, 42, 147, "Input",ExpressionUUID->"a15c7d64-3c16-4d78-bd5a-23ebb4950e8f"],
Cell[1558515, 32684, 1122, 37, 77, "Output",ExpressionUUID->"7dd12665-75b9-4be7-8741-e7a10cc66c28"],
Cell[CellGroupData[{
Cell[1559662, 32725, 596, 12, 63, "Input",ExpressionUUID->"4c1a6198-710d-4969-8f9a-c00a16b86cd4"],
Cell[1560261, 32739, 242, 6, 43, "Output",ExpressionUUID->"f3d24654-e5d6-4f1e-b65b-47043492aa3d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1560540, 32750, 902, 24, 84, "Input",ExpressionUUID->"cc236855-da36-4023-a2dd-62a14e54016b"],
Cell[1561445, 32776, 792, 26, 44, "Output",ExpressionUUID->"1ce70889-f4f8-4ff6-98b7-ae4958792954"],
Cell[1562240, 32804, 620, 19, 43, "Output",ExpressionUUID->"55b45b3f-b4da-4bbc-b186-c337a99c763b"],
Cell[1562863, 32825, 12990, 333, 204, "Output",ExpressionUUID->"c30a5114-9e7e-4b90-a78a-bf0fc367a6fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1575890, 33163, 950, 25, 84, "Input",ExpressionUUID->"4f81d448-deca-4868-9694-f198dc82be63"],
Cell[1576843, 33190, 818, 27, 45, "Output",ExpressionUUID->"b547408b-3003-4000-a3f4-ea089e618172"],
Cell[1577664, 33219, 646, 20, 43, "Output",ExpressionUUID->"c9d8bc29-cc52-49ce-8e0b-785963c6bf86"],
Cell[1578313, 33241, 13016, 334, 204, "Output",ExpressionUUID->"fe933d92-54fd-4344-899f-187f6466f563"]
}, Open  ]],
Cell[1591344, 33578, 1058, 27, 105, "Input",ExpressionUUID->"cbb3423f-7433-4134-b767-03304359e510"],
Cell[1592405, 33607, 747, 22, 101, "Output",ExpressionUUID->"f649cf53-0d10-4605-b89f-4f9705f4c4ed"],
Cell[CellGroupData[{
Cell[1593177, 33633, 495, 10, 63, "Input",ExpressionUUID->"13bca149-c6c8-45ce-9925-43f6b29ed572"],
Cell[1593675, 33645, 218, 6, 43, "Output",ExpressionUUID->"52a9854d-fc91-4ed7-99a5-0eb5026d5a76"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1593930, 33656, 950, 25, 84, "Input",ExpressionUUID->"cedd21cf-f52e-4f96-94b8-19aad8ded0c3"],
Cell[1594883, 33683, 842, 27, 44, "Output",ExpressionUUID->"03e471a1-b19b-4015-8755-911a29063d20"],
Cell[1595728, 33712, 672, 20, 43, "Output",ExpressionUUID->"7cbe3d73-cebb-4c78-b7c7-2c66db1f4f55"],
Cell[1596403, 33734, 18579, 469, 204, "Output",ExpressionUUID->"28fb17cb-9505-4e44-a88c-09e84c8bdf3a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1615019, 34208, 904, 24, 84, "Input",ExpressionUUID->"f006a151-51e0-41e4-94ae-5e74f5e354f1"],
Cell[1615926, 34234, 793, 26, 45, "Output",ExpressionUUID->"c1654aa6-52f7-4d9c-8c8e-71173763c2bb"],
Cell[1616722, 34262, 623, 19, 43, "Output",ExpressionUUID->"a5c144a7-623e-4d60-924a-172b168796e7"],
Cell[1617348, 34283, 18532, 468, 204, "Output",ExpressionUUID->"04480adf-6602-495f-b8ee-703d33ee0715"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1635917, 34756, 1090, 28, 105, "Input",ExpressionUUID->"9817b445-bc15-4c90-afd1-34b7b246c3e0"],
Cell[1637010, 34786, 695, 21, 101, "Output",ExpressionUUID->"8d2e0924-9e7b-452f-86c0-15bff6836eba"]
}, Open  ]]
}, Closed]]
}
]
*)

