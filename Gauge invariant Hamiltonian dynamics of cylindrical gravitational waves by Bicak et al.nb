(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1148713,      24313]
NotebookOptionsPosition[   1123907,      23963]
NotebookOutlinePosition[   1124373,      23980]
CellTagsIndexPosition[   1124330,      23977]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Notebook for :  
Gauge invariant Hamiltonian dynamics of cylindrical gravitational waves by \
Bicak et al\
\>", "Title",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8217294718661222`*^9, 3.821729502043838*^9}, 
   3.8217295683553457`*^9, 3.821732221863006*^9, {3.821811203295624*^9, 
   3.8218112036548367`*^9}, {3.822041768762134*^9, 3.822041781290854*^9}, {
   3.822048009752109*^9, 3.8220480569607773`*^9}, {3.822504877727007*^9, 
   3.8225048874039307`*^9}, {3.822565447028533*^9, 3.822565457908236*^9}, {
   3.822822107930128*^9, 3.822822113128089*^9}, {3.823176459993638*^9, 
   3.823176470345335*^9}, {3.823359338529508*^9, 3.823359361520629*^9}, {
   3.8235974638251762`*^9, 3.823597473367338*^9}, {3.823618458364909*^9, 
   3.8236184669077578`*^9}, {3.8236833044709806`*^9, 3.823683312509585*^9}, {
   3.8236885755476217`*^9, 3.823688587026948*^9}, {3.823689672516461*^9, 
   3.823689672910822*^9}, {3.8237044493810883`*^9, 3.8237044672759027`*^9}, {
   3.8239668765180197`*^9, 3.8239668768923607`*^9}, {3.823969962518847*^9, 
   3.823969963027501*^9}, {3.825843456962591*^9, 3.825843470538437*^9}, {
   3.82587531772775*^9, 3.825875324670994*^9}, {3.8260076306940603`*^9, 
   3.826007641918522*^9}, 3.826011839512066*^9, {3.8263801688919907`*^9, 
   3.82638019304388*^9}, {3.8263958589521112`*^9, 3.826395869887525*^9}, {
   3.826395931303625*^9, 3.826395939943798*^9}, {3.8263961522321043`*^9, 
   3.8263961649670258`*^9}, 3.8264576044436207`*^9, {3.826532680726181*^9, 
   3.8265326870531597`*^9}, 3.826532734543453*^9, {3.826533116450289*^9, 
   3.826533124873698*^9}, {3.826533177034293*^9, 3.826533177449621*^9}, {
   3.826533345354254*^9, 3.826533345712063*^9}, {3.826533447380822*^9, 
   3.82653350371865*^9}, {3.826533627028933*^9, 3.82653363935043*^9}, {
   3.826533707484222*^9, 3.82653371594044*^9}, {3.826533828077026*^9, 
   3.8265338284558773`*^9}, {3.826534072681231*^9, 3.826534075296845*^9}, {
   3.826534277005148*^9, 3.826534295116191*^9}, {3.8265344097890177`*^9, 
   3.82653441661204*^9}, {3.826534538309024*^9, 3.826534543164234*^9}, {
   3.826534621037068*^9, 3.826534629179826*^9}, {3.826534709420918*^9, 
   3.826534712612302*^9}, {3.8273315873641787`*^9, 3.82733160993854*^9}, {
   3.82738680103983*^9, 3.82738681239182*^9}, {3.8273882617119207`*^9, 
   3.827388268231215*^9}, {3.827530669072693*^9, 3.8275306832478333`*^9}, {
   3.8275883997033043`*^9, 3.82758840628754*^9}, {3.827589303839069*^9, 
   3.827589355014329*^9}, {3.8430858871113043`*^9, 3.843085901198807*^9}, 
   3.855743846970058*^9, {3.85574756837037*^9, 3.855747568821251*^9}, 
   3.855748309821015*^9, {3.855753533642441*^9, 3.855753543921975*^9}},
 TextAlignment->Center,ExpressionUUID->"6a24496e-2f67-451f-b810-448a6a81f160"],

Cell["\<\
Geoff Cope
University of Utah
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\|01040f\|01042d\|01044c\|010432\|010442\|010432\
\|010449\|010445\|01042e\|01043b\|010428 \|010432\|010442 \|01040f\|01042d\
\|01043b\|01042b
March 8, 2022\
\>", "Author",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.821729507652328*^9, 3.821729529657844*^9}, 
   3.8220480097522783`*^9, {3.822048070235491*^9, 3.822048084689715*^9}, {
   3.8225654346519403`*^9, 3.8225654361641483`*^9}, {3.8231764728567343`*^9, 
   3.823176482313031*^9}, {3.8233640113399878`*^9, 3.823364023347041*^9}, {
   3.8234229506702557`*^9, 3.823422956381791*^9}, {3.827953252419902*^9, 
   3.827953254868108*^9}, {3.851065213363542*^9, 3.8510652255731983`*^9}, {
   3.8510652620952*^9, 3.851065307413348*^9}, {3.851099255534511*^9, 
   3.851099264486588*^9}, {3.851252093025189*^9, 3.851252093273655*^9}, 
   3.851252176997463*^9, 3.8512537234246607`*^9, 3.85125469290289*^9, 
   3.851254775884119*^9, {3.855738457186393*^9, 3.855738466208013*^9}, {
   3.855743846970149*^9, 3.8557438532987127`*^9}, {3.855747583450808*^9, 
   3.85574758986139*^9}, 3.855748309821106*^9},
 TextAlignment->Center,ExpressionUUID->"ad9e396f-b723-4bc0-a47c-edc1f393da64"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hyperlink To Documentation", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.820944675605734*^9, 
  3.8209446931410646`*^9}},ExpressionUUID->"d41da0e9-5ed0-4c47-adb8-\
ac5a380c4da2"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<GeneralRelativityTensors Documentation and Download\>\"", ",", 
   "\[IndentingNewLine]", 
   "\"\<https://github.com/BlackHolePerturbationToolkit\>\""}], 
  "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.820944619768764*^9, 3.820944681268063*^9}},
 CellLabel->
  "In[193]:=",ExpressionUUID->"63c430bf-d176-4a81-8336-374f37bbc6b5"],

Cell[BoxData[
 TemplateBox[{
  "\"GeneralRelativityTensors Documentation and Download\"", 
   "https://github.com/BlackHolePerturbationToolkit"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.820944653562152*^9, 3.820944681268403*^9}, 
   3.821729905862431*^9, 3.821732641380642*^9, 3.8218069931429567`*^9, 
   3.821811425912986*^9, 3.822042652654992*^9, {3.822048793766124*^9, 
   3.8220488009116488`*^9}, 3.82250502887521*^9, 3.822505578829629*^9, 
   3.822565490613895*^9, 3.8225662097813597`*^9, 3.822606717894772*^9, 
   3.822739433713368*^9, 3.822822210464344*^9, 3.8233594284652433`*^9, 
   3.8233607803938913`*^9, 3.823360880234103*^9, 3.823361224481102*^9, 
   3.82336209870968*^9, 3.823364030542309*^9, 3.823597528606563*^9, 
   3.823618495251218*^9, 3.82368341365138*^9, 3.82368384184562*^9, 
   3.823684775269041*^9, 3.823688794270237*^9, 3.82369077711421*^9, 
   3.823704572306265*^9, 3.8239670360944*^9, 3.8239675178827963`*^9, 
   3.823970038559888*^9, 3.824025681964837*^9, 3.825843522027536*^9, 
   3.825875355898499*^9, 3.8260077681021748`*^9, 3.826380423345456*^9, 
   3.8263927978526917`*^9, 3.826553813481596*^9, 3.827332028734309*^9, 
   3.827386838117896*^9, 3.827388549731575*^9, 3.827530764473493*^9, 
   3.827588445295884*^9, 3.827589528310417*^9, 3.855744011105496*^9, 
   3.8557478855685987`*^9, 3.855753766924189*^9, 3.855771326573222*^9},
 CellLabel->
  "Out[193]=",ExpressionUUID->"8b237634-a19c-408d-add1-39773f574342"]
}, Closed]],

Cell[CellGroupData[{

Cell["Hyperlink  To Article ", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.820937794883616*^9, {3.820938266275806*^9, 3.82093829464357*^9}, 
   3.820943883376583*^9, {3.8210324492405148`*^9, 3.821032453951701*^9}, {
   3.8217297279218817`*^9, 3.8217297313782063`*^9}, {3.822593613363134*^9, 
   3.822593616181035*^9}, {3.822736144359599*^9, 3.8227361450547543`*^9}, {
   3.823359417697976*^9, 3.823359420672374*^9}, 3.8265327310118723`*^9, {
   3.826533163674143*^9, 3.826533167241699*^9}, 3.82653355805296*^9, {
   3.827388003218487*^9, 3.8273880065386333`*^9}, 
   3.85574391078898*^9},ExpressionUUID->"a030eeca-16b1-4e57-96c7-\
d6cf5fb2e50e"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gauge invariant Hamiltonian dynamics of cylindrical gravitational \
waves by Bicak et al\>\"", ",", "\[IndentingNewLine]", 
   "\"\<https://arxiv.org/abs/gr-qc/0308032\>\""}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.855747617531762*^9, 3.855747628723041*^9}, {
  3.85575359302689*^9, 3.855753604770008*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"78488de0-841f-4ad4-90d6-7c0b19a4e08b"],

Cell[BoxData[
 TemplateBox[{
  "\"Gauge invariant Hamiltonian dynamics of cylindrical gravitational waves \
by Bicak et al\"", "https://arxiv.org/abs/gr-qc/0308032"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.8557476311636457`*^9, 3.855747885610458*^9, 
  3.855753606373332*^9, 3.855753766955453*^9, 3.855771326615569*^9},
 CellLabel->
  "Out[194]=",ExpressionUUID->"a49fd5c8-1bb3-471f-8d8a-cb7adc2b2e61"]
}, Closed]],

Cell[CellGroupData[{

Cell["Utilities and Package Load", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.820937646765551*^9, 3.8209376725449123`*^9}, 
   3.825287778263229*^9},ExpressionUUID->"c2c21a3c-c189-4385-b68a-\
8c4bf7708b50"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "Utilities`CleanSlate`"}], "\[IndentingNewLine]", 
 RowBox[{"CleanSlate", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearInOut", "[", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pdConv", "[", "f_", "]"}], ":=", 
  RowBox[{"TraditionalForm", "[", 
   RowBox[{"f", "/.", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Derivative", "[", "inds__", "]"}], "[", "g_", "]"}], "[", 
      "vars__", "]"}], "\[RuleDelayed]", 
     RowBox[{"Apply", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Defer", "[", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"g", "[", "vars", "]"}], ",", "##"}], "]"}], "]"}], "&"}], 
       ",", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "vars", "}"}], ",", 
           RowBox[{"{", "inds", "}"}]}], "}"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"var_", ",", "0"}], "}"}], "\[RuleDelayed]", 
           RowBox[{"Sequence", "[", "]"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"var_", ",", "1"}], "}"}], "\[RuleDelayed]", 
           RowBox[{"{", "var", "}"}]}]}], "}"}]}]}], "]"}]}]}], 
   "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.8209376549030037`*^9, {3.821032517164062*^9, 3.821032518258361*^9}, 
   3.8252877782634068`*^9},
 CellLabel->
  "In[195]:=",ExpressionUUID->"3ebb46f9-540c-4fa2-aa6b-61f1af2f54f0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  (CleanSlate) Contexts purged: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"Global`\"\>", "}"}]}],
  SequenceForm["  (CleanSlate) Contexts purged: ", {"Global`"}],
  Editable->False]], "Print",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.820932754769992*^9, 3.820933427630714*^9, 3.820937654903143*^9, 
   3.821729906190301*^9, 3.821732641685704*^9, 3.8218069933778133`*^9, 
   3.82181142618342*^9, 3.8220426528487463`*^9, {3.822048793940605*^9, 
   3.822048801089246*^9}, 3.822505029191699*^9, 3.822505579049889*^9, 
   3.822565490838564*^9, 3.822566210008327*^9, 3.822606718180009*^9, 
   3.8226371008270607`*^9, 3.822739433887854*^9, 3.822761800089258*^9, 
   3.8228172997642097`*^9, 3.822822210725956*^9, 3.822988687208267*^9, 
   3.823359428732101*^9, 3.823360780582996*^9, 3.823360880477087*^9, 
   3.823361224742215*^9, 3.8233620990886593`*^9, 3.8233640308219624`*^9, 
   3.8235320061137466`*^9, 3.823597528753026*^9, 3.823618495521882*^9, 
   3.823683414021819*^9, 3.823683842015107*^9, 3.823684775412067*^9, 
   3.823688794547976*^9, 3.823690777270031*^9, 3.8237045725706463`*^9, 
   3.823967036254635*^9, 3.823967518049459*^9, 3.823970038788274*^9, 
   3.824025682258999*^9, 3.825287778263542*^9, 3.825843522300147*^9, 
   3.8258753561698093`*^9, 3.826007768416874*^9, 3.826380423662938*^9, 
   3.826392798321377*^9, 3.826553813683632*^9, 3.8273320290278063`*^9, 
   3.827386838389818*^9, 3.8273885499231586`*^9, 3.8275307646891537`*^9, 
   3.8275884455169487`*^9, 3.82758952854709*^9, 3.8557440113560143`*^9, 
   3.855747885839944*^9, 3.855753767093075*^9, 3.855771326887871*^9},
 CellLabel->
  "During evaluation of \
In[195]:=",ExpressionUUID->"0e7aa03a-73e7-4df2-87d6-dd0be61fb22e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  (CleanSlate) Approximate kernel memory recovered: \"\>", 
   "\[InvisibleSpace]", "\<\"1508 Kb\"\>"}],
  SequenceForm[
  "  (CleanSlate) Approximate kernel memory recovered: ", "1508 Kb"],
  Editable->False]], "Print",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.820932754769992*^9, 3.820933427630714*^9, 3.820937654903143*^9, 
   3.821729906190301*^9, 3.821732641685704*^9, 3.8218069933778133`*^9, 
   3.82181142618342*^9, 3.8220426528487463`*^9, {3.822048793940605*^9, 
   3.822048801089246*^9}, 3.822505029191699*^9, 3.822505579049889*^9, 
   3.822565490838564*^9, 3.822566210008327*^9, 3.822606718180009*^9, 
   3.8226371008270607`*^9, 3.822739433887854*^9, 3.822761800089258*^9, 
   3.8228172997642097`*^9, 3.822822210725956*^9, 3.822988687208267*^9, 
   3.823359428732101*^9, 3.823360780582996*^9, 3.823360880477087*^9, 
   3.823361224742215*^9, 3.8233620990886593`*^9, 3.8233640308219624`*^9, 
   3.8235320061137466`*^9, 3.823597528753026*^9, 3.823618495521882*^9, 
   3.823683414021819*^9, 3.823683842015107*^9, 3.823684775412067*^9, 
   3.823688794547976*^9, 3.823690777270031*^9, 3.8237045725706463`*^9, 
   3.823967036254635*^9, 3.823967518049459*^9, 3.823970038788274*^9, 
   3.824025682258999*^9, 3.825287778263542*^9, 3.825843522300147*^9, 
   3.8258753561698093`*^9, 3.826007768416874*^9, 3.826380423662938*^9, 
   3.826392798321377*^9, 3.826553813683632*^9, 3.8273320290278063`*^9, 
   3.827386838389818*^9, 3.8273885499231586`*^9, 3.8275307646891537`*^9, 
   3.8275884455169487`*^9, 3.82758952854709*^9, 3.8557440113560143`*^9, 
   3.855747885839944*^9, 3.855753767093075*^9, 3.855771326891602*^9},
 CellLabel->
  "During evaluation of \
In[195]:=",ExpressionUUID->"a5ca3dfb-9e05-4065-a9d5-ef7f6e039c8c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Utilities`CleanSlate`\"\>", 
   ",", "\<\"GeneralRelativityTensors`\"\>", 
   ",", "\<\"GeneralRelativityTensors`CommonTensors`\"\>", 
   ",", "\<\"GeneralRelativityTensors`TensorDerivatives`\"\>", 
   ",", "\<\"GeneralRelativityTensors`TensorManipulation`\"\>", 
   ",", "\<\"GeneralRelativityTensors`TensorDefinitions`\"\>", 
   ",", "\<\"GeneralRelativityTensors`Utils`\"\>", 
   ",", "\<\"DocumentationSearch`\"\>", ",", "\<\"ResourceLocator`\"\>", 
   ",", "\<\"NaturalLanguageProcessingLoader`\"\>", ",", "\<\"System`\"\>", 
   ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.820932754773623*^9, 3.820933427635436*^9, 3.8209376549033947`*^9, 
   3.821729906193787*^9, 3.821732641691049*^9, 3.821806993386058*^9, 
   3.821811426187071*^9, 3.822042652852829*^9, {3.822048793944077*^9, 
   3.822048801092909*^9}, 3.822505029195156*^9, 3.8225055790570173`*^9, 
   3.8225654908422747`*^9, 3.8225662100125237`*^9, 3.8226067181902227`*^9, 
   3.822637100839163*^9, 3.8227394339100733`*^9, 3.822761800103311*^9, 
   3.822817299776285*^9, 3.822822210739685*^9, 3.822988687217742*^9, 
   3.823359428736412*^9, 3.823360780587545*^9, 3.8233608804810534`*^9, 
   3.823361224746982*^9, 3.823362099093968*^9, 3.823364030838743*^9, 
   3.8235320061191893`*^9, 3.823597528756508*^9, 3.8236184955254183`*^9, 
   3.823683414029439*^9, 3.823683842020509*^9, 3.823684775416593*^9, 
   3.823688794552709*^9, 3.823690777273932*^9, 3.8237045725743713`*^9, 
   3.823967036258197*^9, 3.823967518053287*^9, 3.8239700387921047`*^9, 
   3.824025682265245*^9, 3.825287778263782*^9, 3.825843522304077*^9, 
   3.82587535617485*^9, 3.826007768422662*^9, 3.8263804236686697`*^9, 
   3.826392798332839*^9, 3.8265538136893*^9, 3.8273320290307903`*^9, 
   3.82738683839509*^9, 3.827388549927188*^9, 3.827530764693576*^9, 
   3.8275884455246162`*^9, 3.8275895285554113`*^9, 3.855744011364238*^9, 
   3.855747885847402*^9, 3.855753767098947*^9, 3.855771326894779*^9},
 CellLabel->"Out[0]=",ExpressionUUID->"6ca74439-5046-47a7-86aa-82fae80ef711"],

Cell[BoxData[
 RowBox[{"<<", "GeneralRelativityTensors`"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8209376549035053`*^9, 3.825287778263854*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"b9a0fe09-4c5a-470f-99b0-e64abe8bc33f"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<VariationalMethods`\>\"", "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.82282432548825*^9, 3.822824327819418*^9}, 
   3.825287778263926*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"faae55ea-aec3-4456-855c-6aa986faaa91"]
}, Closed]],

Cell[CellGroupData[{

Cell["Custom Notation", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.8225114042235403`*^9, 3.822511435665856*^9}, 
   3.823176577809782*^9, 
   3.825287791153748*^9},ExpressionUUID->"2c6ea12b-8d52-41a2-9128-\
ec29efcdc56c"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "dtReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dtReplace", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Dt", "[", "r", "]"}], "\[Rule]", " ", "dr"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "t", "]"}], "\[Rule]", " ", "dt"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "u", "]"}], "\[Rule]", " ", "du"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "v", "]"}], "\[Rule]", " ", "dv"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "x", "]"}], "\[Rule]", " ", "dx"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "y", "]"}], " ", "\[Rule]", " ", "dy"}], " ", ",", 
     " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "z", "]"}], "\[Rule]", " ", "dz"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "T", "]"}], "\[Rule]", " ", "dT"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "X", "]"}], "\[Rule]", " ", "dX"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "Y", "]"}], "\[Rule]", " ", "dY"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "Z", "]"}], "\[Rule]", " ", "dZ"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "U", "]"}], "\[Rule]", " ", "dU"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "V", "]"}], "\[Rule]", " ", "dV"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Rho]", "]"}], "\[Rule]", " ", "d\[Rho]"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dtReplace", " ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.82317656063256*^9, 3.823176577809904*^9}, {
   3.823598236175474*^9, 3.823598253654046*^9}, {3.823598849383689*^9, 
   3.82359891091936*^9}, {3.8236913141384983`*^9, 3.823691322585009*^9}, {
   3.8237047861092253`*^9, 3.823704790612156*^9}, 3.825287791153907*^9, {
   3.827387971485525*^9, 3.827387993676759*^9}, {3.8275904634026003`*^9, 
   3.827590476103849*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"fd16e22d-5945-4f95-8caa-2e14379ebee6"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"Dt", "[", "r", "]"}], "\[Rule]", "dr"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "t", "]"}], "\[Rule]", "dt"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "u", "]"}], "\[Rule]", "du"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "v", "]"}], "\[Rule]", "dv"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "x", "]"}], "\[Rule]", "dx"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "y", "]"}], "\[Rule]", "dy"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "z", "]"}], "\[Rule]", "dz"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "T", "]"}], "\[Rule]", "dT"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "X", "]"}], "\[Rule]", "dX"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "Y", "]"}], "\[Rule]", "dY"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "Z", "]"}], "\[Rule]", "dZ"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "U", "]"}], "\[Rule]", "dU"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "V", "]"}], "\[Rule]", "dV"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Rho]", "]"}], "\[Rule]", "d\[Rho]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{
  3.823598254375844*^9, 3.823598877146447*^9, 3.823598911379983*^9, 
   3.823618495599228*^9, 3.823683414107848*^9, 3.823683842051852*^9, 
   3.823684775483016*^9, 3.82368879462633*^9, 3.823690777330206*^9, 
   3.823691323069952*^9, 3.823704572638439*^9, 3.823704791783836*^9, 
   3.823967036322558*^9, 3.8239675180766773`*^9, 3.823970038900818*^9, 
   3.824025682372151*^9, 3.8252877911540327`*^9, 3.825843522413425*^9, 
   3.825875356265313*^9, 3.826007768477283*^9, 3.82638042378487*^9, 
   3.826392798568123*^9, 3.8265538137816563`*^9, 3.8273320291418343`*^9, 
   3.8273868385200787`*^9, {3.827387990674118*^9, 3.827387994239736*^9}, 
   3.827388550013358*^9, 3.827530765014926*^9, 3.827588445777919*^9, 
   3.8275895298117237`*^9, 3.827590476870022*^9, 3.855744011746557*^9, 
   3.855747886038825*^9, 3.855753767531357*^9, 3.8557713269398203`*^9},
 CellLabel->
  "Out[6]//TableForm=",ExpressionUUID->"cfeab642-d816-4f1d-88fd-7691b10c576b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a", "/:", 
    RowBox[{"Dt", "[", "a", "]"}], "=", "0"}], "  ", ";"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"b", " ", "/:", " ", 
    RowBox[{"Dt", "[", "b", "]"}], " ", "=", " ", "0"}], " ", ";"}], 
  "  "}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.823598195430221*^9, 3.823598210501268*^9}, {
   3.823602495092556*^9, 3.823602530987715*^9}, {3.8236188964036007`*^9, 
   3.8236189207008657`*^9}, {3.8237047330364532`*^9, 3.823704739867001*^9}, 
   3.825287791154132*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"bed03213-8d76-4cd6-9519-84b86220f1f4"]
}, Closed]],

Cell[CellGroupData[{

Cell["Line Element and Metric Functions", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.820937548919169*^9, 3.8209375728447866`*^9}, 
   3.8209383129401073`*^9, 3.8220481344968433`*^9, {3.8225115057038183`*^9, 
   3.822511507783984*^9}, 
   3.822763734568725*^9},ExpressionUUID->"5a08a305-cfff-4db7-a585-\
f6b48e0b4a10"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "lineToMetric", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lineToMetric", "[", 
    RowBox[{"lineelement_", " ", ",", " ", "differentials_"}], "]"}], ":=", 
   " ", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"i", "\[Equal]", "j"}], " ", ",", 
       RowBox[{"Coefficient", "[", 
        RowBox[{"lineelement", ",", " ", 
         RowBox[{
          RowBox[{"differentials", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", 
          RowBox[{"differentials", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}], "*", 
        RowBox[{"Coefficient", "[", 
         RowBox[{"lineelement", ",", " ", 
          RowBox[{
           RowBox[{"differentials", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", 
           RowBox[{"differentials", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}]}], "]"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "differentials", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "differentials", "]"}]}], "}"}]}], "]"}]}], 
  "  ", ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{3.821567412203915*^9, 3.821641945174967*^9, 
  3.821641981470141*^9, 3.8220481344970007`*^9, 3.822763734569355*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"0b629df8-b0d6-46ec-82b4-d18b9ece7b86"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "metricToLine", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metricToLine", "[", 
   RowBox[{"metric_", ",", " ", "differentials_"}], "]"}], ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"metric", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "j"}], "]"}], "]"}], " ", 
     RowBox[{"differentials", "[", 
      RowBox[{"[", "i", "]"}], "]"}], " ", 
     RowBox[{"differentials", "[", 
      RowBox[{"[", "j", "]"}], "]"}]}], " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "differentials", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", 
      RowBox[{"Length", "[", "differentials", "]"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.822762557092309*^9, 3.8227626322008677`*^9}, 
   3.8227637345698223`*^9, 3.822988709740047*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"2533fef5-1f7a-47e6-912c-3a0c40759b15"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Line Element and Metric 3.1:  Cylindrical Gravitational Waves With Fixed \
Polarization\
\>", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.827530921488049*^9, 3.827530935927705*^9}, 
   3.827588295887451*^9, {3.827589374319911*^9, 3.827589375663677*^9}, {
   3.827596811937872*^9, 3.827596813073987*^9}, {3.855747781322448*^9, 
   3.855747789730176*^9}, {3.8557536227137327`*^9, 
   3.855753641473989*^9}},ExpressionUUID->"f405e443-5d15-47ce-af4f-\
d3ac7f241874"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq3pt1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq3pt1", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"\[Gamma]", "-", "\[Psi]"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["dT", "2"]}], "+", " ", 
      SuperscriptBox["dR", "2"]}], " ", ")"}]}], " ", "+", " ", 
   RowBox[{
    RowBox[{"Exp", "[", "\[Psi]", "]"}], " ", 
    SuperscriptBox["dz", "2"]}], " ", "+", " ", 
   RowBox[{
    SuperscriptBox["R", "2"], " ", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", "\[Psi]"}], "]"}], " ", 
    SuperscriptBox["d\[Phi]", "2"], " "}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.827530713304961*^9, 3.82753075816862*^9}, 
   3.827530928200708*^9, {3.82758830316956*^9, 3.827588304590618*^9}, {
   3.827588348318924*^9, 3.827588379734867*^9}, {3.827589378407551*^9, 
   3.82758938064802*^9}, {3.8275894396873093`*^9, 3.827589482672262*^9}, {
   3.855747662237918*^9, 3.855747664219151*^9}, {3.855747707915208*^9, 
   3.8557477727235813`*^9}, {3.85575365009133*^9, 3.85575370570673*^9}, {
   3.8557539478346643`*^9, 3.8557539614822073`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"10c19d83-846f-4ef1-9149-7b93bb75fe37"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["dR", "2"], "-", 
     SuperscriptBox["dT", "2"]}], ")"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[Gamma]", "-", "\[Psi]"}]]}], "+", 
  RowBox[{
   SuperscriptBox["dz", "2"], " ", 
   SuperscriptBox["\[ExponentialE]", "\[Psi]"]}], "+", 
  RowBox[{
   SuperscriptBox["d\[Phi]", "2"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "\[Psi]"}]], " ", 
   SuperscriptBox["R", "2"]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{3.827530765076221*^9, 3.827530928200934*^9, 
  3.827588445830583*^9, 3.82758851780506*^9, 3.827589531083387*^9, 
  3.8557440118342133`*^9, 3.855744737694397*^9, 3.8557478860863256`*^9, 
  3.855753767579507*^9, 3.8557539650243073`*^9, 3.855771326995191*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"06abcac0-0b91-4095-a347-35babc0db53d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"lineToMetric", "[", " ", 
    RowBox[{"eq3pt1", " ", ",", 
     RowBox[{"{", 
      RowBox[{"dT", ",", "dR", ",", "d\[Phi]", ",", "dz"}], "}"}]}], "]"}], 
   " ", "//", " ", "MatrixForm"}], " ", "//", " ", "pdConv"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.827530815129415*^9, 3.827530825775861*^9}, {
   3.8275308578814573`*^9, 3.827530860496024*^9}, 3.827530928201089*^9, 
   3.8275883061943073`*^9, {3.827588457089252*^9, 3.827588463279962*^9}, {
   3.827589383735662*^9, 3.827589383880108*^9}, {3.8557447346434393`*^9, 
   3.855744735393487*^9}, {3.8557476660114403`*^9, 3.855747666179092*^9}, {
   3.8557537080179234`*^9, 3.8557537158344584`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"bbc5e735-7327-445a-a0a7-52029215228f"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[Gamma]", "-", "\[Psi]"}]]}], "0", "0", "0"},
      {"0", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Gamma]", "-", "\[Psi]"}]], "0", "0"},
      {"0", "0", 
       RowBox[{
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "\[Psi]"}]]}], "0"},
      {"0", "0", "0", 
       SuperscriptBox["\[ExponentialE]", "\[Psi]"]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{
  3.8275308260511703`*^9, 3.8275308610009193`*^9, 3.8275309282012568`*^9, {
   3.827588445858923*^9, 3.827588463902945*^9}, 3.82758851960677*^9, 
   3.8275895312248573`*^9, 3.85574401186664*^9, 3.855744739017836*^9, 
   3.855747886117091*^9, 3.855753767604443*^9, 3.8557539650742207`*^9, 
   3.855771327024886*^9},
 CellLabel->
  "Out[15]//TraditionalForm=",ExpressionUUID->"c491369e-eca9-4911-8356-\
e93a16f2c328"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq3pt1a", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3pt1a", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Psi]", "\[Rule]", " ", 
      RowBox[{"\[Psi]", "[", 
       RowBox[{"T", ",", "R"}], "]"}]}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]", "\[Rule]", " ", 
      RowBox[{"\[Gamma]", "[", 
       RowBox[{"T", ",", "R"}], "]"}]}]}], "\[IndentingNewLine]", "}"}]}], 
  " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq3pt1a", " ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.827530776296482*^9, 3.827530812184041*^9}, 
   3.827530928201516*^9, {3.8275883082714443`*^9, 3.8275883112386923`*^9}, {
   3.827588484416424*^9, 3.827588491928028*^9}, {3.827589386743643*^9, 
   3.827589393615745*^9}, {3.827589499847171*^9, 3.8275895130816383`*^9}, {
   3.8557476677313757`*^9, 3.855747671754757*^9}, {3.855753721483013*^9, 
   3.8557537300579777`*^9}, {3.8557537768476677`*^9, 3.8557537935324793`*^9}},
 
 CellLabel->"In[16]:=",ExpressionUUID->"685a75fb-5cd0-4c3a-bc0e-b8d62094564e"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"\[Psi]", "\[Rule]", 
       RowBox[{"\[Psi]", "[", 
        RowBox[{"T", ",", "R"}], "]"}]}]},
     {
      RowBox[{"\[Gamma]", "\[Rule]", 
       RowBox[{"\[Gamma]", "[", 
        RowBox[{"T", ",", "R"}], "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{
  3.827530812448737*^9, 3.827530928201703*^9, 3.827588445874488*^9, {
   3.827588492512083*^9, 3.827588522278041*^9}, 3.8275895312528057`*^9, 
   3.855744011881629*^9, 3.855744741333247*^9, 3.855747886131803*^9, {
   3.85575376761719*^9, 3.8557537940021*^9}, 3.855753965085826*^9, 
   3.855771327042308*^9},
 CellLabel->
  "Out[18]//TableForm=",ExpressionUUID->"85a0e4a2-654d-4c2e-85d5-\
1e2aea6dd34d"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric3pt1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric3pt1", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lineToMetric", "[", " ", 
     RowBox[{"eq3pt1", " ", ",", "  ", 
      RowBox[{"{", 
       RowBox[{"dT", ",", "dR", ",", "d\[Phi]", ",", "dz"}], "}"}]}], "]"}], 
    "  ", "/.", " ", "eq3pt1a"}]}], "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric3pt1", " ", "//", " ", "MatrixForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.8275308339367743`*^9, 3.827530853680006*^9}, 
   3.827530928201849*^9, {3.827588313305825*^9, 3.827588318662716*^9}, {
   3.827588502696577*^9, 3.827588507359664*^9}, {3.8275893958390427`*^9, 
   3.827589406679843*^9}, {3.827589541337308*^9, 3.8275895563346043`*^9}, {
   3.85574767385959*^9, 3.855747680706882*^9}, {3.8557537324269876`*^9, 
   3.8557537499706078`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"32d3668c-231d-41a1-a631-7e54a8dc7a9f"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "R"}], ")"}], "-", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}]]}], "0", "0", "0"},
      {"0", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"\[Gamma]", "(", 
          RowBox[{"T", ",", "R"}], ")"}], "-", 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}]], "0", "0"},
      {"0", "0", 
       RowBox[{
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}]]}], "0"},
      {"0", "0", "0", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Psi]", "(", 
         RowBox[{"T", ",", "R"}], ")"}]]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.8275308355505447`*^9, 3.8275308541307507`*^9}, 
   3.827530928201952*^9, 3.827588445954012*^9, 3.827588525984885*^9, {
   3.827589531302733*^9, 3.82758956901729*^9}, 3.855744011912462*^9, 
   3.855744742903347*^9, 3.855747886162422*^9, {3.8557537676393633`*^9, 
   3.855753795873969*^9}, 3.855753965114397*^9, 3.855771327068631*^9},
 CellLabel->
  "Out[21]//TraditionalForm=",ExpressionUUID->"5637b6fc-fc82-42dc-8a77-\
6edf9d7d84ae"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Tensors Calculated For Metric 3.1:  Cylindrical Gravitational Waves With \
Fixed Polarization\
\>", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.82753103002352*^9, 3.827531052415834*^9}, {
   3.8275968095870447`*^9, 3.827596810505775*^9}, {3.855747812954296*^9, 
   3.855747813146385*^9}, {3.855753806532263*^9, 3.855753807908319*^9}, 
   3.85575459184744*^9},ExpressionUUID->"4c45b11e-b5e3-477b-93a5-\
616aab13ec99"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "input", "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"input", "[", 
    RowBox[{
    "equationNumber_", ",", "equation_", ",", "metricName_", ",", 
     "displayName_", ",", "variables_", ",", "indices_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", "tensorList", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"tensorList", " ", "=", " ", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<g\>\"", "<>", "equationNumber"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<christoffel\>\"", "<>", "equationNumber"}], " ", ",", 
         " ", "\[IndentingNewLine]", 
         RowBox[{"\"\<riemann\>\"", "<>", "equationNumber"}], "  ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<ricci\>\"", "<>", "equationNumber"}], " ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<ricciscalar\>\"", "<>", "equationNumber"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<kretschmannscalar\>\"", "<>", "equationNumber"}], "  ", 
         ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<einstein\>\"", "<>", "equationNumber"}], "  ", ",", " ",
          "\[IndentingNewLine]", 
         RowBox[{"\"\<weyl\>\"", "<>", "equationNumber"}], "  ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<cotton\>\"", "<>", "equationNumber"}]}], "  ", 
        "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"ToMetric", "[", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{"metricName", ",", " ", "displayName"}], " ", "}"}], " ", 
         ",", " ", "variables", ",", " ", "equation", ",", " ", "indices"}], 
        " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "  ", "=", " ", "\[IndentingNewLine]", 
       RowBox[{"ChristoffelSymbol", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], "]"}]}], " ", ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "3", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"RiemannTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWithNested", "\[Rule]", " ", "Simplify"}]}], " ", 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "4", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"RicciTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}]}], " ",
       ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "5", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"RicciScalar", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}]}], " ",
       ";", "\[IndentingNewLine]", " ", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "6", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"KretschmannScalar", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], "]"}]}], " ", ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "7", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"EinsteinTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], "]"}]}], " ", ";",
       "  ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "8", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"WeylTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}]}], " ",
       ";", "\[IndentingNewLine]", " ", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "9", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"CottonTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}]}], " ",
       ";"}]}], " ", "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820937492203251*^9, 3.821110229350912*^9, {3.824381686137444*^9, 
   3.824381701791286*^9}, {3.824382212611581*^9, 3.824382216339905*^9}, {
   3.8243823186862707`*^9, 3.824382322501081*^9}, {3.8275309635868196`*^9, 
   3.827530965633152*^9}, 3.827531041137661*^9, {3.8275896570588703`*^9, 
   3.82758966411475*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"2d2ca10c-67ee-429a-8d7c-f12b78aef62c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Last", " ", "timing", " ", "took", " ", "8.35", " ", "for", " ", "all", 
    " ", "tensors", " ", "except", " ", "Kretschmann", " ", "and", " ", 
    "Cotton"}], " ", "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"input", "[", " ", 
    RowBox[{
    "\"\<metric3pt1\>\"", ",", " ", "metric3pt1", ",", " ", 
     "\"\<CylindricalGW\>\"", ",", 
     "\"\<\!\(\*SuperscriptBox[\(g\), \(cyl\)]\)\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"T", ",", "R", ",", "\[Phi]", ",", "z"}], "}"}], ",", " ", 
     "\"\<Greek\>\""}], "]"}], " ", "//", " ", "Timing"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820937492203436*^9, 3.821110229350998*^9, {3.822307281934704*^9, 
   3.822307303605431*^9}, {3.8243818575378323`*^9, 3.82438186818433*^9}, {
   3.824513580589107*^9, 3.824513589908223*^9}, {3.827530980865696*^9, 
   3.827531060072402*^9}, {3.827588575088112*^9, 3.8275885963279343`*^9}, {
   3.82758863536852*^9, 3.827588636880064*^9}, {3.827589583103713*^9, 
   3.827589684344103*^9}, {3.855747818700015*^9, 3.855747823853696*^9}, {
   3.855747897595808*^9, 3.855747899243574*^9}, {3.855753817076994*^9, 
   3.8557538780821466`*^9}, {3.855753983895069*^9, 3.8557539875906963`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"cb8d65be-f6d2-4dbe-b036-4dd4526fff40"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8.596688`", ",", "Null"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.827531030651795*^9, 3.8275310411379538`*^9}, 
   3.827588597641552*^9, 3.827588629141403*^9, {3.827589637430705*^9, 
   3.8275896457941227`*^9}, 3.8275896778576593`*^9, 3.855744022308065*^9, 
   3.855747888356427*^9, 3.8557538503905697`*^9, 3.8557539772585573`*^9, 
   3.855771335593874*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"58eecb16-b189-43c4-b53d-fc700b3e6094"],

Cell[BoxData["tensorList"], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.8275310153844624`*^9, 3.827531041138036*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"3f97cfb8-dfbf-4595-99db-88a6a13d3842"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    SubsuperscriptBox[
     SuperscriptBox["g", "cyl"], "\[Alpha]\[Beta]", ""],
    DisplayForm], ",", 
   TagBox[
    SubsuperscriptBox["\[CapitalGamma]", 
     RowBox[{"  ", "\[Beta]\[Gamma]"}], 
     RowBox[{"\[Alpha]", "    "}]],
    DisplayForm], ",", 
   TagBox[
    SubsuperscriptBox["R", "\[Alpha]\[Beta]\[Gamma]\[Delta]", ""],
    DisplayForm], ",", 
   TagBox[
    SubsuperscriptBox["R", "\[Beta]\[Gamma]", ""],
    DisplayForm], ",", 
   TagBox["\<\"R\"\>",
    DisplayForm], ",", 
   TagBox["\<\"K\"\>",
    DisplayForm], ",", 
   TagBox[
    SubsuperscriptBox["G", "\[Alpha]\[Beta]", ""],
    DisplayForm], ",", 
   TagBox[
    SubsuperscriptBox["C", "\[Alpha]\[Beta]\[Gamma]\[Delta]", ""],
    DisplayForm], ",", 
   TagBox[
    SubsuperscriptBox["C", "\[Alpha]\[Beta]\[Gamma]", ""],
    DisplayForm]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.82753106614108*^9, 3.8275321257370567`*^9, 
  3.827588643637848*^9, 3.8275896952581797`*^9, 3.8557440223777103`*^9, 
  3.855747888421427*^9, 3.8557538504584618`*^9, 3.855753977303688*^9, 
  3.855771335674107*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"667726fd-0054-429d-841d-2efbc726ce13"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "1", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.82093459847665*^9, 3.820934601699522*^9}, 
   3.8209374922041063`*^9, 3.821110229351385*^9, 3.824373536864387*^9, 
   3.824381939541588*^9, 3.824751170474918*^9, 3.827531041138124*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"5ff7790d-b63f-421a-9b24-eac062774536"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox[
   SuperscriptBox["g", "cyl"], "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934602303184*^9, 3.820937492204216*^9, 3.821110229351462*^9, 
   3.824373536864538*^9, 3.824381620924634*^9, 3.8243818501805983`*^9, 
   3.824381939541747*^9, 3.824511842173975*^9, 3.824514167840876*^9, 
   3.8247511704751453`*^9, {3.8275310411382227`*^9, 3.827531066196312*^9}, 
   3.827588643676983*^9, 3.8275896953061113`*^9, 3.8557440223912497`*^9, 
   3.855747888436604*^9, 3.855753850470118*^9, 3.855753977316424*^9, 
   3.855771335692211*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"ffff9364-31fe-431c-b3b3-f7afb409e2e8"],

Cell[BoxData["\<\"CylindricalGW\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934602303184*^9, 3.820937492204216*^9, 3.821110229351462*^9, 
   3.824373536864538*^9, 3.824381620924634*^9, 3.8243818501805983`*^9, 
   3.824381939541747*^9, 3.824511842173975*^9, 3.824514167840876*^9, 
   3.8247511704751453`*^9, {3.8275310411382227`*^9, 3.827531066196312*^9}, 
   3.827588643676983*^9, 3.8275896953061113`*^9, 3.8557440223912497`*^9, 
   3.855747888436604*^9, 3.855753850470118*^9, 3.855753977316424*^9, 
   3.855771335696628*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"ccbaf97f-8fdc-4679-870d-f093e73c1bd5"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "R"}], ")"}], "-", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}]]}], "0", "0", "0"},
      {"0", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"\[Gamma]", "(", 
          RowBox[{"T", ",", "R"}], ")"}], "-", 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}]], "0", "0"},
      {"0", "0", 
       RowBox[{
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}]]}], "0"},
      {"0", "0", "0", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Psi]", "(", 
         RowBox[{"T", ",", "R"}], ")"}]]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934602303184*^9, 3.820937492204216*^9, 3.821110229351462*^9, 
   3.824373536864538*^9, 3.824381620924634*^9, 3.8243818501805983`*^9, 
   3.824381939541747*^9, 3.824511842173975*^9, 3.824514167840876*^9, 
   3.8247511704751453`*^9, {3.8275310411382227`*^9, 3.827531066196312*^9}, 
   3.827588643676983*^9, 3.8275896953061113`*^9, 3.8557440223912497`*^9, 
   3.855747888436604*^9, 3.855753850470118*^9, 3.855753977316424*^9, 
   3.855771335700317*^9},
 CellLabel->
  "Out[28]//TraditionalForm=",ExpressionUUID->"d863bc48-e443-4348-8281-\
2577a61041d5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "2", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.820934553796588*^9, 3.820934587380786*^9}, 
   3.8209374922046547`*^9, 3.821110229351994*^9, 3.824373536864839*^9, 
   3.824381939542098*^9, 3.8247511704755993`*^9, 3.827531041138465*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"632b8107-cf1c-4b76-9d55-206c6a59633e"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["\[CapitalGamma]", 
   RowBox[{"  ", "\[Beta]\[Gamma]"}], 
   RowBox[{"\[Alpha]", "    "}]],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820932775595148*^9, 3.8209334480804567`*^9, {3.8209345574198027`*^9, 
   3.820934588189248*^9}, 3.82093749220476*^9, 3.821110229352072*^9, 
   3.824373536864976*^9, 3.8243816209856853`*^9, 3.824381850238319*^9, 
   3.8243819395421953`*^9, 3.8245118422163897`*^9, 3.8245141678935013`*^9, 
   3.82475117047574*^9, {3.827531041138555*^9, 3.827531066250152*^9}, 
   3.827588643715147*^9, 3.827589695325852*^9, 3.855744022426618*^9, 
   3.85574788847617*^9, 3.855753850509824*^9, 3.8557539773565187`*^9, 
   3.855771335737195*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"19fc9ba2-3185-4b19-89c8-4adeda331908"],

Cell[BoxData["\<\"ChristoffelSymbolCylindricalGW\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820932775595148*^9, 3.8209334480804567`*^9, {3.8209345574198027`*^9, 
   3.820934588189248*^9}, 3.82093749220476*^9, 3.821110229352072*^9, 
   3.824373536864976*^9, 3.8243816209856853`*^9, 3.824381850238319*^9, 
   3.8243819395421953`*^9, 3.8245118422163897`*^9, 3.8245141678935013`*^9, 
   3.82475117047574*^9, {3.827531041138555*^9, 3.827531066250152*^9}, 
   3.827588643715147*^9, 3.827589695325852*^9, 3.855744022426618*^9, 
   3.85574788847617*^9, 3.855753850509824*^9, 3.8557539773565187`*^9, 
   3.85577133574395*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"6520b380-937a-4125-b4db-3aa16e0511b1"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], "-", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], ")"}]}]},
           {
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], "-", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], ")"}]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], "-", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], ")"}]}]},
           {
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], "-", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], ")"}]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], " ", 
             SuperscriptBox["R", "2"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], "-", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], "-", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], ")"}]}]},
           {
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], "-", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], ")"}]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], "-", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], ")"}]}]},
           {
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], "-", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], ")"}]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{
             FractionBox["1", "2"], " ", "R", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", "2"}], ")"}]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], "-", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{
             FractionBox["1", "R"], "-", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None]}]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None]}]},
           {
            RowBox[{
             FractionBox["1", "R"], "-", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None]}]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{
             FractionBox["1", "2"], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{
             FractionBox["1", "2"], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{
             FractionBox["1", "2"], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None]}]},
           {
            RowBox[{
             FractionBox["1", "2"], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820932775595148*^9, 3.8209334480804567`*^9, {3.8209345574198027`*^9, 
   3.820934588189248*^9}, 3.82093749220476*^9, 3.821110229352072*^9, 
   3.824373536864976*^9, 3.8243816209856853`*^9, 3.824381850238319*^9, 
   3.8243819395421953`*^9, 3.8245118422163897`*^9, 3.8245141678935013`*^9, 
   3.82475117047574*^9, {3.827531041138555*^9, 3.827531066250152*^9}, 
   3.827588643715147*^9, 3.827589695325852*^9, 3.855744022426618*^9, 
   3.85574788847617*^9, 3.855753850509824*^9, 3.8557539773565187`*^9, 
   3.855771335786775*^9},
 CellLabel->
  "Out[31]//TraditionalForm=",ExpressionUUID->"6e7d42da-e6cd-440e-bcf4-\
18371a3de318"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "3", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.82093461950063*^9, 3.820934623299252*^9}, 
   3.820937492205227*^9, 3.821110229352274*^9, 3.8243735368652897`*^9, 
   3.824381939542493*^9, 3.824751170476118*^9, 3.82753104113878*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"59b0dc44-54d0-40b4-a7dd-2b7f58b8bb69"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["R", "\[Alpha]\[Beta]\[Gamma]\[Delta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934623837241*^9, 3.820937492205323*^9, 3.821110229352366*^9, 
   3.824373536865405*^9, 3.824381621264045*^9, 3.824381850457645*^9, 
   3.824381939542604*^9, 3.8245118424513693`*^9, 3.8245141681144238`*^9, 
   3.8247511704762497`*^9, {3.8275310411388607`*^9, 3.827531066525813*^9}, 
   3.82758864397784*^9, 3.8275896954074163`*^9, 3.855744022501696*^9, 
   3.855747888540327*^9, 3.8557538505705976`*^9, 3.85575397742315*^9, 
   3.8557713358485403`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"a71a7afd-9b05-4bc5-aa3c-3a0c9cea60c5"],

Cell[BoxData["\<\"RiemannTensorCylindricalGW\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934623837241*^9, 3.820937492205323*^9, 3.821110229352366*^9, 
   3.824373536865405*^9, 3.824381621264045*^9, 3.824381850457645*^9, 
   3.824381939542604*^9, 3.8245118424513693`*^9, 3.8245141681144238`*^9, 
   3.8247511704762497`*^9, {3.8275310411388607`*^9, 3.827531066525813*^9}, 
   3.82758864397784*^9, 3.8275896954074163`*^9, 3.855744022501696*^9, 
   3.855747888540327*^9, 3.8557538505705976`*^9, 3.85575397742315*^9, 
   3.85577133585314*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"4e8b96a4-4ea4-4ea6-a69e-35ac4d98c8f8"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "R"}], ")"}], "-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["R", "2"]}],
               MultilineFunction->None], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["R", "2"]}],
               MultilineFunction->None], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None]}], ")"}]}], "0", "0"},
          {
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "R"}], ")"}], "-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["R", "2"]}],
               MultilineFunction->None], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["R", "2"]}],
               MultilineFunction->None], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None]}], ")"}]}], "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "2"}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}]}], ")"}]}], "0"},
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None]}]}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "2"}], ")"}]}]}], ")"}]}],
            "0"},
          {
           RowBox[{
            FractionBox["1", "4"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "2"}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}]}], ")"}]}], 
           RowBox[{
            FractionBox["1", "4"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None]}]}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "2"}], ")"}]}]}], ")"}]}],
            "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{
            FractionBox["1", "4"], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], ")"}], "2"], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]},
          {"0", "0", "0", 
           RowBox[{
            FractionBox["1", "4"], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "R"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}]}], ")"}]}]},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], ")"}], "2"], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "R"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}]}], ")"}]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "R"}], ")"}], "-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["R", "2"]}],
               MultilineFunction->None], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["R", "2"]}],
               MultilineFunction->None], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None]}], ")"}]}], "0", "0"},
          {
           RowBox[{
            FractionBox["1", "2"], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "R"}], ")"}], "-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["R", "2"]}],
               MultilineFunction->None], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["R", "2"]}],
               MultilineFunction->None], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None]}], ")"}]}], "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None]}]}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "2"}], ")"}]}]}], ")"}]}],
            "0"},
          {"0", "0", 
           RowBox[{
            FractionBox["1", "4"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}]}], ")"}]}], "0"},
          {
           RowBox[{
            FractionBox["1", "4"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None]}]}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "2"}], ")"}]}]}], ")"}]}], 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}]}], ")"}]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{
            FractionBox["1", "4"], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "R"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}]}], ")"}]}]},
          {"0", "0", "0", 
           RowBox[{
            FractionBox["1", "4"], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], ")"}], "2"]}], ")"}]}]},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "R"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}]}], ")"}]}], 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], ")"}], "2"]}], ")"}]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{
            FractionBox["1", "4"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "2"}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}]}], ")"}]}], "0"},
          {"0", "0", 
           RowBox[{
            FractionBox["1", "4"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None]}]}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "2"}], ")"}]}]}], ")"}]}],
            "0"},
          {
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "2"}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}]}], ")"}]}], 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None]}]}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "2"}], ")"}]}]}], ")"}]}],
            "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{
            FractionBox["1", "4"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None]}]}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "2"}], ")"}]}]}], ")"}]}],
            "0"},
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}]}], ")"}]}], "0"},
          {
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None]}]}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "2"}], ")"}]}]}], ")"}]}], 
           RowBox[{
            FractionBox["1", "4"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}]}], ")"}]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{
            FractionBox["1", "4"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}], "-", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]},
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}], "-", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], ")"}], "2"], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]},
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "R"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}]}], ")"}]}]},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            FractionBox["1", "4"], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], ")"}], "2"], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
           RowBox[{
            FractionBox["1", "4"], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "R"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}]}], ")"}]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "R"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}]}], ")"}]}]},
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], ")"}], "2"]}], ")"}]}]},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            FractionBox["1", "4"], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "R"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}]}], ")"}]}], 
           RowBox[{
            FractionBox["1", "4"], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], ")"}], "2"]}], ")"}]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}], "-", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]},
          {"0", "0", 
           RowBox[{
            FractionBox["1", "4"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}], "-", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934623837241*^9, 3.820937492205323*^9, 3.821110229352366*^9, 
   3.824373536865405*^9, 3.824381621264045*^9, 3.824381850457645*^9, 
   3.824381939542604*^9, 3.8245118424513693`*^9, 3.8245141681144238`*^9, 
   3.8247511704762497`*^9, {3.8275310411388607`*^9, 3.827531066525813*^9}, 
   3.82758864397784*^9, 3.8275896954074163`*^9, 3.855744022501696*^9, 
   3.855747888540327*^9, 3.8557538505705976`*^9, 3.85575397742315*^9, 
   3.855771336440688*^9},
 CellLabel->
  "Out[34]//TraditionalForm=",ExpressionUUID->"79655ac1-000b-462c-a428-\
d9eb284b3dd4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "4", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "4", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.820934641180434*^9, 3.820934644683545*^9}, 
   3.820937492205658*^9, 3.821110229352577*^9, 3.8243735368657513`*^9, 
   3.8243819395429*^9, 3.82475117047663*^9, 3.827531041139097*^9},
 CellLabel->"In[35]:=",ExpressionUUID->"fdc82bcc-328b-44e0-a69b-20e1976763b9"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["R", "\[Beta]\[Gamma]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934645395719*^9, 3.8209374922057543`*^9, 3.82111022935266*^9, 
   3.8243735368658533`*^9, 3.824381626124463*^9, 3.824381854371036*^9, 
   3.824381939543002*^9, 3.824511846625956*^9, 3.8245141719213133`*^9, 
   3.824751170476756*^9, {3.8275310411391783`*^9, 3.8275310710006037`*^9}, 
   3.827588648690543*^9, 3.827589696068985*^9, 3.8557440231903133`*^9, 
   3.855747889252039*^9, 3.855753850956683*^9, 3.855753978053028*^9, 
   3.8557713364905643`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"f28902b3-77c8-4c87-b573-34f23539845f"],

Cell[BoxData["\<\"RicciTensorCylindricalGW\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934645395719*^9, 3.8209374922057543`*^9, 3.82111022935266*^9, 
   3.8243735368658533`*^9, 3.824381626124463*^9, 3.824381854371036*^9, 
   3.824381939543002*^9, 3.824511846625956*^9, 3.8245141719213133`*^9, 
   3.824751170476756*^9, {3.8275310411391783`*^9, 3.8275310710006037`*^9}, 
   3.827588648690543*^9, 3.827589696068985*^9, 3.8557440231903133`*^9, 
   3.855747889252039*^9, 3.855753850956683*^9, 3.855753978053028*^9, 
   3.8557713364946938`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"9c5a833e-3286-4740-b6f9-338452206bbc"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       FractionBox[
        RowBox[{
         RowBox[{"R", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["R", "2"]}],
             MultilineFunction->None], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["R", "2"]}],
             MultilineFunction->None], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["T", "2"]}],
             MultilineFunction->None], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["T", "2"]}],
             MultilineFunction->None], "-", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], 
               RowBox[{"\[PartialD]", "T"}],
               MultilineFunction->None], ")"}], "2"]}], ")"}]}], "+", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"T", ",", "R"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], "-", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"T", ",", "R"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None]}], 
        RowBox[{"2", " ", "R"}]], 
       FractionBox[
        RowBox[{
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"T", ",", "R"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None], "-", 
         RowBox[{"R", " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None]}]}], 
        RowBox[{"2", " ", "R"}]], "0", "0"},
      {
       FractionBox[
        RowBox[{
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"T", ",", "R"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None], "-", 
         RowBox[{"R", " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None]}]}], 
        RowBox[{"2", " ", "R"}]], 
       FractionBox[
        RowBox[{
         RowBox[{"R", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[PartialD]", "2"], 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}], 
              RowBox[{"\[PartialD]", 
               SuperscriptBox["R", "2"]}],
              MultilineFunction->None]}], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["R", "2"]}],
             MultilineFunction->None], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["T", "2"]}],
             MultilineFunction->None], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["T", "2"]}],
             MultilineFunction->None]}], ")"}]}], "+", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"T", ",", "R"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], "-", 
         RowBox[{"R", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None], ")"}], "2"]}], "+", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"T", ",", "R"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None]}], 
        RowBox[{"2", " ", "R"}]], "0", "0"},
      {"0", "0", 
       RowBox[{
        FractionBox["1", "2"], " ", "R", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"R", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{
               SuperscriptBox["\[PartialD]", "2"], 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}], 
              RowBox[{"\[PartialD]", 
               SuperscriptBox["R", "2"]}],
              MultilineFunction->None], "-", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[PartialD]", "2"], 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}], 
              RowBox[{"\[PartialD]", 
               SuperscriptBox["T", "2"]}],
              MultilineFunction->None]}], ")"}]}], "+", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None]}], ")"}]}], "0"},
      {"0", "0", "0", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]}], "-", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"R", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None], "-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], ")"}]}], "+", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None]}], ")"}]}], 
         RowBox[{"2", " ", "R"}]]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934645395719*^9, 3.8209374922057543`*^9, 3.82111022935266*^9, 
   3.8243735368658533`*^9, 3.824381626124463*^9, 3.824381854371036*^9, 
   3.824381939543002*^9, 3.824511846625956*^9, 3.8245141719213133`*^9, 
   3.824751170476756*^9, {3.8275310411391783`*^9, 3.8275310710006037`*^9}, 
   3.827588648690543*^9, 3.827589696068985*^9, 3.8557440231903133`*^9, 
   3.855747889252039*^9, 3.855753850956683*^9, 3.855753978053028*^9, 
   3.855771336541237*^9},
 CellLabel->
  "Out[37]//TraditionalForm=",ExpressionUUID->"a1f7f152-e15c-4fb9-9a81-\
a6eee6959227"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "5", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "5", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "5", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.820934650372052*^9, 3.820934653739538*^9}, 
   3.820937492206099*^9, 3.821110229352878*^9, 3.824373536866138*^9, 
   3.82438193954329*^9, 3.8247511704771013`*^9, 3.827531041139411*^9},
 CellLabel->"In[38]:=",ExpressionUUID->"4b67d8bb-d34f-42bb-bb69-0636c0335f42"],

Cell[BoxData[
 TagBox["\<\"R\"\>",
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.8209346543102093`*^9, 3.820937492206188*^9, 
  3.821110229352955*^9, 3.82437353686622*^9, 3.8243816263835297`*^9, 
  3.824381854615872*^9, 3.8243819395433826`*^9, 3.824511846864684*^9, 
  3.824514172146737*^9, 3.8247511704772167`*^9, 3.827531041139492*^9, 
  3.827531071261441*^9, 3.827588649071699*^9, 3.8275896961405277`*^9, 
  3.8557440232716084`*^9, 3.8557478893287277`*^9, 3.855753851060841*^9, 
  3.8557539781200314`*^9, 3.855771336559211*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"4b616f61-033b-4157-bca8-ab70a86a034a"],

Cell[BoxData["\<\"RicciScalarCylindricalGW\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.8209346543102093`*^9, 3.820937492206188*^9, 
  3.821110229352955*^9, 3.82437353686622*^9, 3.8243816263835297`*^9, 
  3.824381854615872*^9, 3.8243819395433826`*^9, 3.824511846864684*^9, 
  3.824514172146737*^9, 3.8247511704772167`*^9, 3.827531041139492*^9, 
  3.827531071261441*^9, 3.827588649071699*^9, 3.8275896961405277`*^9, 
  3.8557440232716084`*^9, 3.8557478893287277`*^9, 3.855753851060841*^9, 
  3.8557539781200314`*^9, 3.855771336563466*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"4d42a68a-c8ea-4b56-9c3a-f21fbf25ec92"],

Cell[BoxData[
 FormBox[
  TagBox[
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}], "-", 
       RowBox[{"\[Gamma]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"R", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"2", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["R", "2"]}],
             MultilineFunction->None]}]}], "+", 
          RowBox[{"2", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["R", "2"]}],
            MultilineFunction->None]}], "+", 
          RowBox[{"2", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["T", "2"]}],
            MultilineFunction->None]}], "-", 
          RowBox[{"2", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["T", "2"]}],
            MultilineFunction->None]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None], ")"}], "2"]}], ")"}]}], "-", 
       RowBox[{"R", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "2"]}], "+", 
       RowBox[{"2", " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None]}]}], ")"}]}], 
    RowBox[{"2", " ", "R"}]],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.8209346543102093`*^9, 3.820937492206188*^9, 
  3.821110229352955*^9, 3.82437353686622*^9, 3.8243816263835297`*^9, 
  3.824381854615872*^9, 3.8243819395433826`*^9, 3.824511846864684*^9, 
  3.824514172146737*^9, 3.8247511704772167`*^9, 3.827531041139492*^9, 
  3.827531071261441*^9, 3.827588649071699*^9, 3.8275896961405277`*^9, 
  3.8557440232716084`*^9, 3.8557478893287277`*^9, 3.855753851060841*^9, 
  3.8557539781200314`*^9, 3.855771336584115*^9},
 CellLabel->
  "Out[40]//TraditionalForm=",ExpressionUUID->"d58984e0-55d7-4c79-8bf4-\
c1b3ad719c17"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "6", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "6", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "6", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.824382031881773*^9, 3.824382035720847*^9}, 
   3.824382068120364*^9, 3.8247511704775753`*^9, 3.8275310411397467`*^9, {
   3.827531085049985*^9, 3.8275310892800713`*^9}, {3.827589709279572*^9, 
   3.827589714609309*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"841a7464-0cc5-44d6-889f-36a7949c16ba"],

Cell[BoxData[
 TagBox["\<\"K\"\>",
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.827589715137965*^9, 3.827590067306985*^9, 
  3.855744023317609*^9, 3.8557478893732977`*^9, 3.855753851105516*^9, 
  3.855753978163677*^9, 3.855771336613001*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"60e7cc90-2d9b-4613-8002-1889098f6ce9"],

Cell[BoxData["\<\"KretschmannScalarCylindricalGW\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.827589715137965*^9, 3.827590067306985*^9, 
  3.855744023317609*^9, 3.8557478893732977`*^9, 3.855753851105516*^9, 
  3.855753978163677*^9, 3.8557713366179247`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"04e2ea76-d94e-47bc-a61c-44b4036eab74"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", " ", 
      SuperscriptBox["R", "2"]}]], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"\[Psi]", "(", 
         RowBox[{"T", ",", "R"}], ")"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"\[Gamma]", "(", 
         RowBox[{"T", ",", "R"}], ")"}]}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"8", " ", "R", " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], 
               RowBox[{"\[PartialD]", "T"}],
               MultilineFunction->None], "-", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{
                 RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                 RowBox[{"\[PartialD]", "R"}]}],
                MultilineFunction->None]}]}], ")"}]}]}], "-", 
          RowBox[{"4", " ", "R", " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]}], 
            RowBox[{"\[PartialD]", "T"}],
            MultilineFunction->None], " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]}], 
            RowBox[{
             RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
             RowBox[{"\[PartialD]", "R"}]}],
            MultilineFunction->None]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["R", "2"]}],
           MultilineFunction->None], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["T", "2"]}],
           MultilineFunction->None], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None], ")"}], "2"]}], ")"}]}], "+", 
       RowBox[{"4", " ", "R", " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", "R", " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]}], 
            RowBox[{"\[PartialD]", "T"}],
            MultilineFunction->None], " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]}], 
            RowBox[{
             RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
             RowBox[{"\[PartialD]", "R"}]}],
            MultilineFunction->None]}], "-", 
          RowBox[{"2", " ", "R", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{
               SuperscriptBox["\[PartialD]", "2"], 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}], 
              RowBox[{"\[PartialD]", 
               SuperscriptBox["R", "2"]}],
              MultilineFunction->None], "+", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[PartialD]", "2"], 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}], 
              RowBox[{"\[PartialD]", 
               SuperscriptBox["T", "2"]}],
              MultilineFunction->None], "-", 
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], ")"}], "2"]}], ")"}], " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]}], 
            RowBox[{"\[PartialD]", "R"}],
            MultilineFunction->None]}], "+", 
          RowBox[{"2", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["R", "2"]}],
            MultilineFunction->None]}], "+", 
          RowBox[{"2", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["T", "2"]}],
            MultilineFunction->None]}], "-", 
          RowBox[{"2", " ", "R", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None], ")"}], "3"]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None], ")"}], "2"]}], ")"}]}], "-", 
       RowBox[{"16", " ", 
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{
            RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
            RowBox[{"\[PartialD]", "R"}]}],
           MultilineFunction->None], ")"}], "2"]}], "-", 
       RowBox[{"16", " ", "R", " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{
          RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
          RowBox[{"\[PartialD]", "R"}]}],
         MultilineFunction->None]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox["R", "2"], " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["T", "2"]}],
            MultilineFunction->None]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["R", "2"], " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]}], 
            RowBox[{"\[PartialD]", "T"}],
            MultilineFunction->None], " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]}], 
            RowBox[{"\[PartialD]", "T"}],
            MultilineFunction->None]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["R", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], ")"}], "2"]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["R", "2"], " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["R", "2"]}],
            MultilineFunction->None]}], "-", 
          RowBox[{"7", " ", 
           SuperscriptBox["R", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], ")"}], "2"]}], "+", "6"}], ")"}]}], 
       "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["R", "2"], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["R", "2"], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["R", "2"], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["R", "2"], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["T", "2"]}],
           MultilineFunction->None], ")"}], "2"]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["R", "2"], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None]}], "+", 
       RowBox[{"12", " ", 
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["T", "2"]}],
           MultilineFunction->None], ")"}], "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], ")"}], "2"], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["R", "2"], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["R", "2"], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["R", "2"], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["R", "2"], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], ")"}], "3"]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], ")"}], "2"]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["R", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None], ")"}], "2"]}], "-", 
          RowBox[{
           SuperscriptBox["R", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], ")"}], "2"]}], "-", 
          RowBox[{"2", " ", "R", " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]}], 
            RowBox[{"\[PartialD]", "R"}],
            MultilineFunction->None]}], "+", "2"}], ")"}]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["R", "2"]}],
           MultilineFunction->None], ")"}], "2"]}], "+", 
       RowBox[{"12", " ", 
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["R", "2"]}],
           MultilineFunction->None], ")"}], "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], ")"}], "2"], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None]}], "+", 
       RowBox[{"7", " ", 
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "4"]}], "+", 
       RowBox[{"7", " ", 
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], ")"}], "4"]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], ")"}], "2"]}], "-", 
       RowBox[{"8", " ", "R", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "3"]}]}], ")"}]}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.827589715137965*^9, 3.827590067306985*^9, 
  3.855744023317609*^9, 3.8557478893732977`*^9, 3.855753851105516*^9, 
  3.855753978163677*^9, 3.855771336755343*^9},
 CellLabel->
  "Out[43]//TraditionalForm=",ExpressionUUID->"78ca8a3a-ac7f-4134-b99a-\
63f543e20610"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "7", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "7", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "7", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.8243818880356607`*^9, 3.824381891296851*^9}, 
   3.82438193954393*^9, {3.824382052340536*^9, 3.824382068120544*^9}, 
   3.8247511704783077`*^9, 3.827531041140236*^9},
 CellLabel->"In[44]:=",ExpressionUUID->"f9c46b54-a7f4-4aad-b9ca-791cfcf504ab"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["G", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.824381892203912*^9, 3.824381939544029*^9, {3.824382052340662*^9, 
   3.8243820681206617`*^9}, 3.82451184696933*^9, 3.824514172248722*^9, 
   3.8247511704784727`*^9, 3.8275310411403227`*^9, 3.827531071383174*^9, 
   3.827588649162919*^9, 3.8275896962087593`*^9, 3.855744023557928*^9, 
   3.855747889601858*^9, 3.855753851273715*^9, 3.8557539783688498`*^9, 
   3.855771336827958*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"dce0283d-096b-492f-9775-ece1ebe5d414"],

Cell[BoxData["\<\"EinsteinTensorCylindricalGW\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.824381892203912*^9, 3.824381939544029*^9, {3.824382052340662*^9, 
   3.8243820681206617`*^9}, 3.82451184696933*^9, 3.824514172248722*^9, 
   3.8247511704784727`*^9, 3.8275310411403227`*^9, 3.827531071383174*^9, 
   3.827588649162919*^9, 3.8275896962087593`*^9, 3.855744023557928*^9, 
   3.855747889601858*^9, 3.855753851273715*^9, 3.8557539783688498`*^9, 
   3.8557713368338413`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"ec20ea4c-42e5-4e5a-8582-c661f903ab54"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None]}], "-", 
         RowBox[{"R", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], 
               RowBox[{"\[PartialD]", "T"}],
               MultilineFunction->None], ")"}], "2"]}], ")"}]}]}], 
        RowBox[{"4", " ", "R"}]], 
       FractionBox[
        RowBox[{
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"T", ",", "R"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None], "-", 
         RowBox[{"R", " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None]}]}], 
        RowBox[{"2", " ", "R"}]], "0", "0"},
      {
       FractionBox[
        RowBox[{
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"T", ",", "R"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None], "-", 
         RowBox[{"R", " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None]}]}], 
        RowBox[{"2", " ", "R"}]], 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None]}], "-", 
         RowBox[{"R", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], 
               RowBox[{"\[PartialD]", "T"}],
               MultilineFunction->None], ")"}], "2"]}], ")"}]}]}], 
        RowBox[{"4", " ", "R"}]], "0", "0"},
      {"0", "0", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["R", "2"]}],
            MultilineFunction->None]}], "-", 
          RowBox[{"2", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["T", "2"]}],
            MultilineFunction->None]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None], ")"}], "2"], "-", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None], ")"}], "2"]}], ")"}]}], "0"},
      {"0", "0", "0", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], "-", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"4", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], ")"}], "2"]}], ")"}]}], "+", 
           RowBox[{"R", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None], ")"}], "2"]}], "-", 
           RowBox[{"4", " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None]}]}], ")"}]}], 
        RowBox[{"4", " ", "R"}]]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.824381892203912*^9, 3.824381939544029*^9, {3.824382052340662*^9, 
   3.8243820681206617`*^9}, 3.82451184696933*^9, 3.824514172248722*^9, 
   3.8247511704784727`*^9, 3.8275310411403227`*^9, 3.827531071383174*^9, 
   3.827588649162919*^9, 3.8275896962087593`*^9, 3.855744023557928*^9, 
   3.855747889601858*^9, 3.855753851273715*^9, 3.8557539783688498`*^9, 
   3.85577133687985*^9},
 CellLabel->
  "Out[46]//TraditionalForm=",ExpressionUUID->"d884cc61-b7af-4980-833d-\
31e29bac55ce"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "8", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "8", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "8", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.82093465870828*^9, 3.820934665723707*^9}, 
   3.820937492206532*^9, 3.821110229353163*^9, 3.824373536866439*^9, 
   3.82438193954467*^9, {3.824382052340996*^9, 3.824382068120945*^9}, 
   3.824751170478986*^9, 3.827531041140554*^9},
 CellLabel->"In[47]:=",ExpressionUUID->"120c50f2-7f25-49db-80b5-0cb19f9bec79"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["C", "\[Alpha]\[Beta]\[Gamma]\[Delta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934666611442*^9, 3.820937492206628*^9, 3.821110229353245*^9, 
   3.824381626454548*^9, 3.824381854687508*^9, {3.824382052341096*^9, 
   3.8243820681210527`*^9}, 3.824511847219433*^9, 3.824514172561551*^9, 
   3.824751170479109*^9, 3.8275310411406403`*^9, 3.827531071681217*^9, 
   3.827588649610564*^9, 3.8275896963091383`*^9, 3.855744023646163*^9, 
   3.855747889673588*^9, 3.855753851377846*^9, 3.855753978438447*^9, 
   3.855771336947418*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"e0d0e581-0288-43c8-b3e8-1a4a284b4b55"],

Cell[BoxData["\<\"WeylTensorCylindricalGW\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934666611442*^9, 3.820937492206628*^9, 3.821110229353245*^9, 
   3.824381626454548*^9, 3.824381854687508*^9, {3.824382052341096*^9, 
   3.8243820681210527`*^9}, 3.824511847219433*^9, 3.824514172561551*^9, 
   3.824751170479109*^9, 3.8275310411406403`*^9, 3.827531071681217*^9, 
   3.827588649610564*^9, 3.8275896963091383`*^9, 3.855744023646163*^9, 
   3.855747889673588*^9, 3.855753851377846*^9, 3.855753978438447*^9, 
   3.855771336951579*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"95f7f617-d450-47d9-b2ff-ecbe4091f799"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "R"}], ")"}], "-", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None], "-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None], "-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None], "+", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], ")"}]}], "-", 
               RowBox[{"R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            RowBox[{"6", " ", "R"}]], "0", "0"},
          {
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "R"}], ")"}], "-", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"R", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None], "-", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None], "-", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None], "+", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None], "+", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], ")"}]}]}], "+", 
               RowBox[{"R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            RowBox[{"6", " ", "R"}]], "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{
            FractionBox["1", "12"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"4", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "+", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None], "+", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{"3", "-", 
                 RowBox[{"3", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{"4", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}]}], ")"}]}], "0"},
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                   MultilineFunction->None], "+", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}]}], ")"}]}], "0"},
          {
           RowBox[{
            FractionBox["1", "12"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None], "-", 
                 RowBox[{"4", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "-", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
              RowBox[{"3", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}]}], ")"}]}], 
           RowBox[{
            FractionBox["1", "4"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                   MultilineFunction->None], "+", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}]}], ")"}]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"R", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None], "+", 
                   RowBox[{"2", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "-", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None], "+", 
                   RowBox[{"4", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"3", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"4", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{"3", "-", 
                   RowBox[{"3", " ", "R", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
                RowBox[{"2", " ", "R", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                RowBox[{"2", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             RowBox[{"12", " ", "R"}]]}]},
          {"0", "0", "0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"2", " ", "R", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None], "+", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            RowBox[{"4", " ", "R"}]]},
          {"0", "0", "0", "0"},
          {
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None], "+", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None], "+", 
                  RowBox[{"4", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"3", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{"3", "-", 
                  RowBox[{"3", " ", "R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
               RowBox[{"2", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            RowBox[{"12", " ", "R"}]], 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"2", " ", "R", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None], "+", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"R", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             RowBox[{"4", " ", "R"}]]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "R"}], ")"}], "-", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"R", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None], "-", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None], "-", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None], "+", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None], "+", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], ")"}]}]}], "+", 
               RowBox[{"R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            RowBox[{"6", " ", "R"}]], "0", "0"},
          {
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "R"}], ")"}], "-", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None], "-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None], "-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None], "+", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], ")"}]}], "-", 
               RowBox[{"R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            RowBox[{"6", " ", "R"}]], "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                   MultilineFunction->None], "+", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}]}], ")"}]}], "0"},
          {"0", "0", 
           RowBox[{
            FractionBox["1", "12"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None], "+", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "-", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None], "+", 
                 RowBox[{"4", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{"3", "-", 
                 RowBox[{"3", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{"2", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}]}], ")"}]}], "0"},
          {
           RowBox[{
            FractionBox["1", "4"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                   MultilineFunction->None], "+", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}]}], ")"}]}], 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "12"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None], "+", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "-", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None], "+", 
                 RowBox[{"4", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{"3", "-", 
                 RowBox[{"3", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{"2", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}]}], ")"}]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"2", " ", "R", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None], "+", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            RowBox[{"4", " ", "R"}]]},
          {"0", "0", "0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None], "-", 
                  RowBox[{"4", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None], "-", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"3", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"2", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
               RowBox[{"3", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "-", 
               RowBox[{"4", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            RowBox[{"12", " ", "R"}]]},
          {"0", "0", "0", "0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"2", " ", "R", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None], "+", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"R", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             RowBox[{"4", " ", "R"}]]}], 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None], "+", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"3", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{"3", "-", 
                  RowBox[{"3", " ", "R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
               RowBox[{"4", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            RowBox[{"12", " ", "R"}]], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{
            FractionBox["1", "12"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None], "-", 
                 RowBox[{"4", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "-", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
              RowBox[{"3", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}]}], ")"}]}], "0"},
          {"0", "0", 
           RowBox[{
            FractionBox["1", "4"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                   MultilineFunction->None], "+", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}]}], ")"}]}], "0"},
          {
           RowBox[{
            FractionBox["1", "12"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"4", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "+", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None], "+", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{"3", "-", 
                 RowBox[{"3", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{"4", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}]}], ")"}]}], 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                   MultilineFunction->None], "+", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}]}], ")"}]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{
            FractionBox["1", "4"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                   MultilineFunction->None], "+", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}]}], ")"}]}], "0"},
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "12"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None], "+", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "-", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None], "+", 
                 RowBox[{"4", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{"3", "-", 
                 RowBox[{"3", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{"2", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}]}], ")"}]}], "0"},
          {
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                   MultilineFunction->None], "+", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}]}], ")"}]}], 
           RowBox[{
            FractionBox["1", "12"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None], "+", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "-", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None], "+", 
                 RowBox[{"4", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{"3", "-", 
                 RowBox[{"3", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{"2", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}]}], ")"}]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{
            FractionBox["1", "6"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}], "-", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None], "-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None], "-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None], "+", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], ")"}]}]}], "+", 
              RowBox[{"R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}]}], ")"}]}]},
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "6"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}], "-", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None], "-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None], "-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None], "+", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], ")"}]}]}], "+", 
              RowBox[{"R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}]}], ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None], "+", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None], "+", 
                  RowBox[{"4", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"3", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{"3", "-", 
                  RowBox[{"3", " ", "R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
               RowBox[{"2", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            RowBox[{"12", " ", "R"}]]},
          {"0", "0", "0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"2", " ", "R", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None], "+", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"R", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             RowBox[{"4", " ", "R"}]]}]},
          {"0", "0", "0", "0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"R", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None], "+", 
                   RowBox[{"2", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "-", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None], "+", 
                   RowBox[{"4", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"3", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"4", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{"3", "-", 
                   RowBox[{"3", " ", "R", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
                RowBox[{"2", " ", "R", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                RowBox[{"2", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             RowBox[{"12", " ", "R"}]]}], 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"2", " ", "R", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None], "+", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            RowBox[{"4", " ", "R"}]], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"2", " ", "R", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None], "+", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"R", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             RowBox[{"4", " ", "R"}]]}]},
          {"0", "0", "0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None], "+", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"3", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{"3", "-", 
                  RowBox[{"3", " ", "R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
               RowBox[{"4", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            RowBox[{"12", " ", "R"}]]},
          {"0", "0", "0", "0"},
          {
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"2", " ", "R", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None], "+", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            RowBox[{"4", " ", "R"}]], 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None], "-", 
                  RowBox[{"4", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None], "-", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"3", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"2", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
               RowBox[{"3", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "-", 
               RowBox[{"4", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            RowBox[{"12", " ", "R"}]], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "6"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}], "-", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None], "-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None], "-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None], "+", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], ")"}]}]}], "+", 
              RowBox[{"R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}]}], ")"}]}]},
          {"0", "0", 
           RowBox[{
            FractionBox["1", "6"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}], "-", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None], "-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None], "-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None], "+", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], ")"}]}]}], "+", 
              RowBox[{"R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}]}], ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934666611442*^9, 3.820937492206628*^9, 3.821110229353245*^9, 
   3.824381626454548*^9, 3.824381854687508*^9, {3.824382052341096*^9, 
   3.8243820681210527`*^9}, 3.824511847219433*^9, 3.824514172561551*^9, 
   3.824751170479109*^9, 3.8275310411406403`*^9, 3.827531071681217*^9, 
   3.827588649610564*^9, 3.8275896963091383`*^9, 3.855744023646163*^9, 
   3.855747889673588*^9, 3.855753851377846*^9, 3.855753978438447*^9, 
   3.855771337794653*^9},
 CellLabel->
  "Out[49]//TraditionalForm=",ExpressionUUID->"964fb12e-6d0a-4511-95b7-\
8c82213eb2ce"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "9", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "9", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "9", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.824382043442072*^9, 3.824382068121275*^9}, 
   3.824751170479444*^9, 3.8275310411408653`*^9, {3.8275310942501097`*^9, 
   3.827531098768097*^9}, {3.827589700385611*^9, 3.8275897051775293`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"43a2cdf8-3c00-44de-897e-bde1003028e3"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["C", "\[Alpha]\[Beta]\[Gamma]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.827589705561117*^9, 3.827590067307354*^9, 
  3.855744024759164*^9, 3.855747890757163*^9, 3.855753852333047*^9, 
  3.855753979334918*^9, 3.855771337934382*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"20e6b55a-3493-4c4c-a95c-371a79ecde07"],

Cell[BoxData["\<\"CottonTensorCylindricalGW\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.827589705561117*^9, 3.827590067307354*^9, 
  3.855744024759164*^9, 3.855747890757163*^9, 3.855753852333047*^9, 
  3.855753979334918*^9, 3.855771337938435*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"29b35a9d-e865-4b99-b12b-5fd48edb8a81"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {
            FractionBox[
             RowBox[{
              RowBox[{"R", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None]}]}], "+", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "3"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "3"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}]}], "+", 
                 RowBox[{"5", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"3", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{
                  SuperscriptBox["R", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], ")"}]}], "+", 
                 "2"}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{
                  SuperscriptBox["R", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], ")"}]}], "+", 
                 RowBox[{
                  SuperscriptBox["R", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "3"}], ")"}]}], "+", 
              RowBox[{
               SuperscriptBox["R", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "3"]}], "-", 
              RowBox[{"2", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}]}], 
             RowBox[{"6", " ", 
              SuperscriptBox["R", "2"]}]]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{
              RowBox[{"R", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "3"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "3"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"5", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"3", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{
                  SuperscriptBox["R", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", "2"}], 
                ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}]}], "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{
                  SuperscriptBox["R", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                 RowBox[{
                  SuperscriptBox["R", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "+", "3"}], ")"}]}], "-", 
              RowBox[{
               SuperscriptBox["R", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "3"]}], "+", 
              RowBox[{"2", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}]}], 
             RowBox[{"6", " ", 
              SuperscriptBox["R", "2"]}]]},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {
            FractionBox[
             RowBox[{
              RowBox[{"R", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], "-", 
                    RowBox[{"R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"5", " ", "R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "3"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "3"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"3", " ", "R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"R", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "3"]}], "+", 
                 RowBox[{"R", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{
                  SuperscriptBox["R", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], ")"}]}], "+", 
                 RowBox[{
                  SuperscriptBox["R", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "3"}], ")"}]}]}], 
             RowBox[{"6", " ", 
              SuperscriptBox["R", "2"]}]]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{
              RowBox[{"R", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}]}],
                    MultilineFunction->None]}]}], "+", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], "-", 
                    RowBox[{"R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None]}]}], ")"}]}], "-", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"5", " ", "R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "3"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "3"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"3", " ", "R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"R", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "3"]}], "-", 
                 RowBox[{"R", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}]}], "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{
                  SuperscriptBox["R", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                 RowBox[{
                  SuperscriptBox["R", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "+", "3"}], ")"}]}]}], 
             RowBox[{"6", " ", 
              SuperscriptBox["R", "2"]}]]},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{
             FractionBox["1", "12"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"2", " ", 
                    SuperscriptBox["R", "2"], " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}]}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{
                   SuperscriptBox["R", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                  RowBox[{
                   SuperscriptBox["R", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "+", "6"}], ")"}]}], "-", 
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", "R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None]}], "+", 
                    RowBox[{"5", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}], "-", 
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", "R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "3"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"4", " ", "R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "3"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"6", " ", "R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"3", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", "R", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "3"]}], "-", 
                  RowBox[{"2", " ", "R", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}]}], ")"}]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{
             FractionBox["1", "12"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", "R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "3"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"4", " ", "R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "3"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"6", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"4", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"6", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"3", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{
                    SuperscriptBox["R", "2"], " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}]}], "+", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"6", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", "4"}], 
                 ")"}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"2", " ", 
                    SuperscriptBox["R", "2"], " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}]}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{
                   SuperscriptBox["R", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                  RowBox[{
                   SuperscriptBox["R", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "+", "6"}], ")"}]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["R", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "3"]}], "-", 
               RowBox[{"10", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{
             FractionBox["1", "12"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", "R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None]}], "+", 
                    RowBox[{"5", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}], "-", 
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", "R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "3"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"4", " ", "R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "3"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"6", " ", "R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"3", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", "R", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "3"]}], "-", 
                  RowBox[{"2", " ", "R", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}], "-", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"2", " ", 
                    SuperscriptBox["R", "2"], " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}]}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{
                   SuperscriptBox["R", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                  RowBox[{
                   SuperscriptBox["R", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "+", "6"}], ")"}]}]}], 
              ")"}]}]},
           {
            RowBox[{
             FractionBox["1", "12"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None]}]}], "-", 
                  RowBox[{"4", " ", "R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "3"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", "R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "3"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"6", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"6", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"3", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"6", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", "4"}], 
                 ")"}]}], "-", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"2", " ", 
                    SuperscriptBox["R", "2"], " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}]}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{
                   SuperscriptBox["R", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                  RowBox[{
                   SuperscriptBox["R", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "+", "6"}], ")"}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["R", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "3"]}], "+", 
               RowBox[{"10", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], "-", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}]}],
                   MultilineFunction->None]}]}], "+", 
                RowBox[{"8", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None]}]}], "-", 
                   RowBox[{"5", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"14", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
                RowBox[{"8", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "R"}]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"5", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}], "-", 
                RowBox[{"8", " ", "R", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"14", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"2", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "3"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"8", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "3"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"5", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"8", " ", "R", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"2", " ", "R", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"12", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                RowBox[{"3", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"R", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], "-", 
                   RowBox[{"4", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
                RowBox[{"4", " ", "R", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "3"]}]}], ")"}]}], 
             RowBox[{"12", " ", "R"}]]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], "-", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"R", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"8", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "3"]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"8", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "3"]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"R", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"8", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"2", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "+", 
                    RowBox[{"8", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], ")"}]}], "+", 
                   RowBox[{"8", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"3", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"5", " ", 
                    SuperscriptBox["R", "2"], " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"14", " ", 
                    SuperscriptBox["R", "2"], " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"5", " ", 
                    SuperscriptBox["R", "2"], " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"12", " ", 
                    SuperscriptBox["R", "2"], " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["R", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                   RowBox[{"5", " ", "R", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "8"}], ")"}]}], "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "3"]}], "+", 
                RowBox[{"R", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"R", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "+", "14"}], ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
             RowBox[{"12", " ", 
              SuperscriptBox["R", "2"]}]]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], "-", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"8", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"5", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"14", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}], "-", 
                RowBox[{"8", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "R"}]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"5", " ", "R", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
                RowBox[{"8", " ", "R", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"14", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"2", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "3"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"8", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "3"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"5", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"8", " ", "R", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"2", " ", "R", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"12", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                RowBox[{"3", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"R", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], "-", 
                   RowBox[{"4", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}], "-", 
                RowBox[{"4", " ", "R", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "3"]}]}], ")"}]}], 
             RowBox[{"12", " ", "R"}]]},
           {
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], "-", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"R", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None]}]}], "+", 
                   RowBox[{"8", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "R"}]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "3"]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"8", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "3"]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"R", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"2", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}]}], "+", 
                    RowBox[{"8", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                    RowBox[{"2", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"8", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], ")"}]}], "-", 
                   RowBox[{"8", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"3", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"5", " ", 
                    SuperscriptBox["R", "2"], " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}]}], "+", 
                   RowBox[{"14", " ", 
                    SuperscriptBox["R", "2"], " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"5", " ", 
                    SuperscriptBox["R", "2"], " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"12", " ", 
                    SuperscriptBox["R", "2"], " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["R", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                   RowBox[{"5", " ", "R", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "+", "8"}], ")"}]}], "+", 
                RowBox[{"4", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "3"]}], "-", 
                RowBox[{"R", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"R", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "+", "14"}], ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "R"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
             RowBox[{"12", " ", 
              SuperscriptBox["R", "2"]}]]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.827589705561117*^9, 3.827590067307354*^9, 
  3.855744024759164*^9, 3.855747890757163*^9, 3.855753852333047*^9, 
  3.855753979334918*^9, 3.8557713387296743`*^9},
 CellLabel->
  "Out[52]//TraditionalForm=",ExpressionUUID->"18164dbf-3c73-4831-bbfc-\
be0f15a264df"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Derivation of Einstein Vacuum Field Equations for Metric 3.1:  Cylindrical \
Gravitational Waves With Fixed Polarization\
\>", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.82753204336027*^9, 3.827532089113233*^9}, {
   3.827589203503796*^9, 3.82758920451965*^9}, {3.8275900183832197`*^9, 
   3.827590033172667*^9}, 3.8557442287039013`*^9, {3.855747836986326*^9, 
   3.855747837170343*^9}, {3.8557545657156057`*^9, 
   3.8557545948713617`*^9}},ExpressionUUID->"c4f0d565-12fc-43f0-8911-\
1c08d652ce3c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "nonzeroRicci", "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nonzeroRicci", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Cases", "[", " ", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", " ", 
          RowBox[{
           RowBox[{"i", "<=", " ", "j"}], " ", ",", " ", 
           RowBox[{
            RowBox[{"TensorValues", "[", 
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", "Nothing"}], "]"}], 
         " ", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}], " ", ",", 
      " ", 
      RowBox[{"Except", "[", "0", "]"}]}], "]"}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nonzeroRicci", " ", "//", " ", "TableForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.827531198977305*^9, 3.827531218712432*^9}, {
   3.8275316424984903`*^9, 3.827531659451207*^9}, 3.82753208911338*^9, {
   3.827589726960992*^9, 3.827589744361826*^9}, 3.8275900331729307`*^9, 
   3.855744228704505*^9, {3.855747869843055*^9, 3.855747870257724*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"c435b73f-68b9-45f7-9957-b76a8c154613"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       FractionBox[
        RowBox[{
         RowBox[{"R", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["R", "2"]}],
             MultilineFunction->None], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["R", "2"]}],
             MultilineFunction->None], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["T", "2"]}],
             MultilineFunction->None], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["T", "2"]}],
             MultilineFunction->None], "-", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], 
               RowBox[{"\[PartialD]", "T"}],
               MultilineFunction->None], ")"}], "2"]}], ")"}]}], "+", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"T", ",", "R"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], "-", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"T", ",", "R"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None]}], 
        RowBox[{"2", " ", "R"}]]},
      {
       FractionBox[
        RowBox[{
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"T", ",", "R"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None], "-", 
         RowBox[{"R", " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None]}]}], 
        RowBox[{"2", " ", "R"}]]},
      {
       FractionBox[
        RowBox[{
         RowBox[{"R", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[PartialD]", "2"], 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}], 
              RowBox[{"\[PartialD]", 
               SuperscriptBox["R", "2"]}],
              MultilineFunction->None]}], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["R", "2"]}],
             MultilineFunction->None], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["T", "2"]}],
             MultilineFunction->None], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["T", "2"]}],
             MultilineFunction->None]}], ")"}]}], "+", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"T", ",", "R"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], "-", 
         RowBox[{"R", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None], ")"}], "2"]}], "+", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"T", ",", "R"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None]}], 
        RowBox[{"2", " ", "R"}]]},
      {
       RowBox[{
        FractionBox["1", "2"], " ", "R", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"R", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{
               SuperscriptBox["\[PartialD]", "2"], 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}], 
              RowBox[{"\[PartialD]", 
               SuperscriptBox["R", "2"]}],
              MultilineFunction->None], "-", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[PartialD]", "2"], 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}], 
              RowBox[{"\[PartialD]", 
               SuperscriptBox["T", "2"]}],
              MultilineFunction->None]}], ")"}]}], "+", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None]}], ")"}]}]},
      {
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]}], "-", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"R", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None], "-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], ")"}]}], "+", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None]}], ")"}]}], 
         RowBox[{"2", " ", "R"}]]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{
  3.8275312198491096`*^9, {3.8275316434903307`*^9, 3.8275316598665257`*^9}, 
   3.8275320891134653`*^9, 3.827588684407709*^9, {3.827589732912424*^9, 
   3.827589744879117*^9}, 3.827590033173017*^9, 3.855744025779849*^9, 
   3.855744228705258*^9, 3.8557478918232822`*^9, 3.855753904446992*^9, 
   3.85575399305928*^9, 3.855771338842952*^9},
 CellLabel->
  "Out[55]//TraditionalForm=",ExpressionUUID->"0b9e58cc-3055-41ac-b504-\
387a0a18bf18"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "nonzeroEinstein", "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nonzeroEinstein", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Cases", "[", " ", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", " ", 
          RowBox[{
           RowBox[{"i", "<=", " ", "j"}], " ", ",", " ", 
           RowBox[{
            RowBox[{"TensorValues", "[", 
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "7", "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", "Nothing"}], "]"}], 
         " ", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}], " ", ",", 
      " ", 
      RowBox[{"Except", "[", "0", "]"}]}], "]"}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nonzeroEinstein", " ", "//", " ", "TableForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.8275311141527853`*^9, 3.827531186544376*^9}, 
   3.827532089113579*^9, {3.827589748304401*^9, 3.827589785888142*^9}, {
   3.827589827038352*^9, 3.827589836432034*^9}, 3.827590033173196*^9, 
   3.855744228705536*^9, {3.85574787865947*^9, 3.8557478790739813`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"df6dd53a-e4d0-4fac-a0a3-002d6189e38b"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None]}], "-", 
         RowBox[{"R", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], 
               RowBox[{"\[PartialD]", "T"}],
               MultilineFunction->None], ")"}], "2"]}], ")"}]}]}], 
        RowBox[{"4", " ", "R"}]]},
      {
       FractionBox[
        RowBox[{
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"T", ",", "R"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None], "-", 
         RowBox[{"R", " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None]}]}], 
        RowBox[{"2", " ", "R"}]]},
      {
       RowBox[{
        FractionBox["1", "4"], " ", 
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["R", "2"]}],
            MultilineFunction->None]}], "-", 
          RowBox[{"2", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["T", "2"]}],
            MultilineFunction->None]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None], ")"}], "2"], "-", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None], ")"}], "2"]}], ")"}]}]},
      {
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], "-", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"T", ",", "R"}], ")"}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"4", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "R"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "R"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], ")"}], "2"]}], ")"}]}], "+", 
           RowBox[{"R", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None], ")"}], "2"]}], "-", 
           RowBox[{"4", " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None]}]}], ")"}]}], 
        RowBox[{"4", " ", "R"}]]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.8275311825911407`*^9, 3.827531187420929*^9}, 
   3.827532089113645*^9, 3.827588684704623*^9, {3.827589737238222*^9, 
   3.827589764645112*^9}, {3.827589828793154*^9, 3.827589836726104*^9}, 
   3.8275900331732597`*^9, 3.8557440258723497`*^9, 3.8557442287057257`*^9, 
   3.855747891881023*^9, 3.855753904574752*^9, 3.855753995793992*^9, 
   3.855771338900239*^9},
 CellLabel->
  "Out[58]//TraditionalForm=",ExpressionUUID->"cae77ef9-5600-40d5-acbe-\
e9a768300a85"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "dgammadT", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dgammadT", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Solve", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"nonzeroRicci", "[", 
          RowBox[{"[", "2", "]"}], "]"}], " ", "==", " ", "0"}], " ", ",", 
        RowBox[{
         SuperscriptBox["\[Gamma]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"T", ",", "R"}], "]"}]}], "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], " ", "/.", " ", 
    RowBox[{"Rule", "->", " ", "Equal"}]}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"dgammadT", " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.8557540053995523`*^9, 3.855754051112382*^9}, 
   3.855754576877914*^9},
 CellLabel->"In[59]:=",ExpressionUUID->"bfc18f1e-250d-48f7-8973-3c747797920b"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", 
     RowBox[{"\[Gamma]", "(", 
      RowBox[{"T", ",", "R"}], ")"}]}], 
    RowBox[{"\[PartialD]", "T"}],
    MultilineFunction->None], "\[LongEqual]", 
   RowBox[{"R", " ", 
    FractionBox[
     RowBox[{"\[PartialD]", 
      RowBox[{"\[Psi]", "(", 
       RowBox[{"T", ",", "R"}], ")"}]}], 
     RowBox[{"\[PartialD]", "R"}],
     MultilineFunction->None], " ", 
    FractionBox[
     RowBox[{"\[PartialD]", 
      RowBox[{"\[Psi]", "(", 
       RowBox[{"T", ",", "R"}], ")"}]}], 
     RowBox[{"\[PartialD]", "T"}],
     MultilineFunction->None]}]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.855754006086534*^9, 3.8557540516184587`*^9}, 
   3.855754576878317*^9, 3.855771338951125*^9},
 CellLabel->
  "Out[61]//TraditionalForm=",ExpressionUUID->"3e985bb2-c2e2-4625-918f-\
c0ba2706777a"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "dgammadR", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dgammadR", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Solve", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"nonzeroEinstein", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", "==", " ", "0"}], " ", ",", 
        " ", 
        RowBox[{
         SuperscriptBox["\[Gamma]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"T", ",", "R"}], "]"}]}], " ", "]"}], " ", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], " ", "/.", " ", 
    RowBox[{"Rule", "->", " ", "Equal"}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"dgammadR", "  ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.855754064006682*^9, 3.855754104288117*^9}, 
   3.855754576878607*^9},
 CellLabel->"In[62]:=",ExpressionUUID->"df314915-f344-4f1c-aa84-3980ff637492"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", 
     RowBox[{"\[Gamma]", "(", 
      RowBox[{"T", ",", "R"}], ")"}]}], 
    RowBox[{"\[PartialD]", "R"}],
    MultilineFunction->None], "\[LongEqual]", 
   RowBox[{
    FractionBox["1", "2"], " ", "R", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], ")"}], "2"]}], ")"}]}]}], 
  TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{3.855754104770269*^9, 3.855754576878859*^9, 
  3.8557713389745693`*^9},
 CellLabel->
  "Out[64]//TraditionalForm=",ExpressionUUID->"9a84974b-bfa3-4a8e-8137-\
dea3dca41c58"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "d2gammadT2", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d2gammadT2", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Solve", "[", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"nonzeroEinstein", "[", 
              RowBox[{"[", "3", "]"}], "]"}], " ", "==", " ", "0"}], ",", 
            RowBox[{
             RowBox[{"nonzeroEinstein", "[", 
              RowBox[{"[", "4", "]"}], "]"}], " ", "==", " ", "0"}]}], " ", 
           "}"}], " ", ",", " ", 
          RowBox[{"{", " ", 
           RowBox[{
            RowBox[{
             SuperscriptBox["\[Gamma]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"T", ",", "R"}], "]"}], ",", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"T", ",", "R"}], "]"}]}], "}"}]}], "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", "//", " ", "Expand"}], "  ", 
     ")"}], "  ", "/.", " ", 
    RowBox[{"Rule", "->", " ", "Equal"}]}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"d2gammadT2", "  ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.855754238317399*^9, 3.855754335063265*^9}, 
   3.855754576879119*^9},
 CellLabel->"In[65]:=",ExpressionUUID->"f62c0ee1-e337-4ab2-9f59-d9f95a18a45f"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[PartialD]", "2"], 
     RowBox[{"\[Gamma]", "(", 
      RowBox[{"T", ",", "R"}], ")"}]}], 
    RowBox[{"\[PartialD]", 
     SuperscriptBox["T", "2"]}],
    MultilineFunction->None], "\[LongEqual]", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["\[PartialD]", "2"], 
      RowBox[{"\[Gamma]", "(", 
       RowBox[{"T", ",", "R"}], ")"}]}], 
     RowBox[{"\[PartialD]", 
      SuperscriptBox["R", "2"]}],
     MultilineFunction->None], "+", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}], 
        RowBox[{"\[PartialD]", "R"}],
        MultilineFunction->None], ")"}], "2"]}], "-", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}], 
        RowBox[{"\[PartialD]", "T"}],
        MultilineFunction->None], ")"}], "2"]}]}]}], 
  TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{
  3.855754239080426*^9, {3.855754275739265*^9, 3.855754335949381*^9}, 
   3.8557545768793573`*^9, 3.8557713390054817`*^9},
 CellLabel->
  "Out[67]//TraditionalForm=",ExpressionUUID->"a7a719bd-b350-4ecd-b2d0-\
34daea4a1cea"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "d2psidT2", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d2psidT2", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Solve", "[", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"nonzeroEinstein", "[", 
              RowBox[{"[", "3", "]"}], "]"}], " ", "==", " ", "0"}], ",", 
            RowBox[{
             RowBox[{"nonzeroEinstein", "[", 
              RowBox[{"[", "4", "]"}], "]"}], " ", "==", " ", "0"}]}], " ", 
           "}"}], " ", ",", " ", 
          RowBox[{"{", " ", 
           RowBox[{
            RowBox[{
             SuperscriptBox["\[Gamma]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"T", ",", "R"}], "]"}], ",", 
            RowBox[{
             SuperscriptBox["\[Psi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"2", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"T", ",", "R"}], "]"}]}], "}"}]}], "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], " ", "//", " ", "Expand"}], "  ", 
     ")"}], "  ", "/.", " ", 
    RowBox[{"Rule", "->", " ", "Equal"}]}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"d2psidT2", "  ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.85575434492581*^9, 3.8557543583019342`*^9}, 
   3.855754576879615*^9},
 CellLabel->"In[68]:=",ExpressionUUID->"a8be0def-e183-4a99-8407-2534193115d8"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[PartialD]", "2"], 
     RowBox[{"\[Psi]", "(", 
      RowBox[{"T", ",", "R"}], ")"}]}], 
    RowBox[{"\[PartialD]", 
     SuperscriptBox["T", "2"]}],
    MultilineFunction->None], "\[LongEqual]", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["\[PartialD]", "2"], 
      RowBox[{"\[Psi]", "(", 
       RowBox[{"T", ",", "R"}], ")"}]}], 
     RowBox[{"\[PartialD]", 
      SuperscriptBox["R", "2"]}],
     MultilineFunction->None], "+", 
    FractionBox[
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "R"}],
      MultilineFunction->None], "R"]}]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{3.85575435886873*^9, 3.855754576879945*^9, 
  3.855771339033042*^9},
 CellLabel->
  "Out[70]//TraditionalForm=",ExpressionUUID->"6a70c04c-59ae-47ad-952f-\
cbdf1dadc0aa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{"dgammadT", " ", ",", "R"}], "]"}], " ", "//", " ", 
  "pdConv"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{"dgammadR", ",", "T"}], "]"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.85575438298075*^9, 3.855754400215035*^9}, 
   3.855754576880288*^9},
 CellLabel->"In[71]:=",ExpressionUUID->"1563626c-50a2-42f4-82b5-8646b64c18b5"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[PartialD]", "2"], 
     RowBox[{"\[Gamma]", "(", 
      RowBox[{"T", ",", "R"}], ")"}]}], 
    RowBox[{
     RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
     RowBox[{"\[PartialD]", "R"}]}],
    MultilineFunction->None], "\[LongEqual]", 
   RowBox[{
    RowBox[{"R", " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "R"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{
       RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
       RowBox[{"\[PartialD]", "R"}]}],
      MultilineFunction->None]}], "+", 
    RowBox[{"R", " ", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", 
       SuperscriptBox["R", "2"]}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "T"}],
      MultilineFunction->None]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "R"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "T"}],
      MultilineFunction->None]}]}]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.855754374552978*^9, 3.855754400788986*^9}, 
   3.855754576880459*^9, 3.855771339059753*^9},
 CellLabel->
  "Out[71]//TraditionalForm=",ExpressionUUID->"2a4944d3-b433-4a3c-b329-\
c9445d37bd37"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[PartialD]", "2"], 
     RowBox[{"\[Gamma]", "(", 
      RowBox[{"T", ",", "R"}], ")"}]}], 
    RowBox[{
     RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
     RowBox[{"\[PartialD]", "R"}]}],
    MultilineFunction->None], "\[LongEqual]", 
   RowBox[{
    FractionBox["1", "2"], " ", "R", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}], 
        RowBox[{"\[PartialD]", "R"}],
        MultilineFunction->None], " ", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[PartialD]", "2"], 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}], 
        RowBox[{
         RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
         RowBox[{"\[PartialD]", "R"}]}],
        MultilineFunction->None]}], "+", 
      RowBox[{"2", " ", 
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}], 
        RowBox[{"\[PartialD]", "T"}],
        MultilineFunction->None], " ", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[PartialD]", "2"], 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}], 
        RowBox[{"\[PartialD]", 
         SuperscriptBox["T", "2"]}],
        MultilineFunction->None]}]}], ")"}]}]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.855754374552978*^9, 3.855754400788986*^9}, 
   3.855754576880459*^9, 3.855771339066173*^9},
 CellLabel->
  "Out[72]//TraditionalForm=",ExpressionUUID->"f3443afe-97d9-4b0f-99d2-\
e2af9702bd15"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"(", " ", 
   RowBox[{"d2gammadT2", "  ", "/.", " ", 
    RowBox[{"Equal", "->", " ", "Rule"}]}], "  ", ")"}], "  ", "//", " ", 
  "pdConv"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", " ", 
   RowBox[{"d2psidT2", "   ", "/.", " ", 
    RowBox[{"Equal", "->", " ", "Rule"}]}], "  ", ")"}], "  ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.8557544536104813`*^9, 3.855754474614307*^9}, 
   3.855754576880856*^9, {3.856260049955714*^9, 
   3.8562600538052263`*^9}},ExpressionUUID->"f5b9608d-291d-4c79-ac79-\
2409d7366b24"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[Gamma]", 
    TagBox[
     RowBox[{"(", 
      RowBox[{"2", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"T", ",", "R"}], "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["\[Psi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"T", ",", "R"}], "]"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox["\[Gamma]", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "2"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"T", ",", "R"}], "]"}], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["\[Psi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"T", ",", "R"}], "]"}], "2"]}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{3.855771339077454*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"fab975ea-d233-435a-bd4d-67c1a7ec1a1f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[Psi]", 
    TagBox[
     RowBox[{"(", 
      RowBox[{"2", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"T", ",", "R"}], "]"}], "\[Rule]", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Psi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"T", ",", "R"}], "]"}], "R"], "+", 
   RowBox[{
    SuperscriptBox["\[Psi]", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "2"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"T", ",", "R"}], "]"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{3.855771339082591*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"a12fd92f-7818-4bb6-906a-226afbbc8a8d"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "compatabilityConditions", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"compatabilityConditions", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"dgammadT", " ", ",", "R"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "==", " ", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"dgammadR", ",", "T"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"compatabilityConditions", " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.855743969602873*^9, 3.8557439944050283`*^9}, 
   3.8557442287083883`*^9, {3.855748189371532*^9, 3.85574820548534*^9}, {
   3.855754408463127*^9, 3.8557544170474033`*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"d37b9309-9de1-42fc-aa99-6cf9cd9df659"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"R", " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "R"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{
       RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
       RowBox[{"\[PartialD]", "R"}]}],
      MultilineFunction->None]}], "+", 
    RowBox[{"R", " ", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", 
       SuperscriptBox["R", "2"]}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "T"}],
      MultilineFunction->None]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "R"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "T"}],
      MultilineFunction->None]}]}], "\[LongEqual]", 
   RowBox[{
    FractionBox["1", "2"], " ", "R", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}], 
        RowBox[{"\[PartialD]", "R"}],
        MultilineFunction->None], " ", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[PartialD]", "2"], 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}], 
        RowBox[{
         RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
         RowBox[{"\[PartialD]", "R"}]}],
        MultilineFunction->None]}], "+", 
      RowBox[{"2", " ", 
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}], 
        RowBox[{"\[PartialD]", "T"}],
        MultilineFunction->None], " ", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[PartialD]", "2"], 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}], 
        RowBox[{"\[PartialD]", 
         SuperscriptBox["T", "2"]}],
        MultilineFunction->None]}]}], ")"}]}]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{3.855744026029189*^9, 3.855744228708555*^9, 
  3.855747892100136*^9, 3.855748207218297*^9, 3.855753904997072*^9, 
  3.855754417831352*^9, 3.855771339107595*^9},
 CellLabel->
  "Out[77]//TraditionalForm=",ExpressionUUID->"d9b8e9a6-9fc3-47e4-abe2-\
f9e797a9a0dd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{"Just", " ", "to", " ", "make", " ", "sure", " ", 
     RowBox[{"we", "'"}], "ve", " ", "correctly", " ", "derived", " ", "the", 
     " ", "field", " ", "equations"}], ".."}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"compatabilityConditions", "  ", "//", " ", "pdConv"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"compatabilityConditions", "  ", "/.", " ", 
      RowBox[{"(", " ", 
       RowBox[{"d2gammadT2", "  ", "/.", " ", 
        RowBox[{"Equal", "->", " ", "Rule"}]}], "  ", ")"}]}], "  ", "/.", 
     " ", 
     RowBox[{"(", " ", 
      RowBox[{"d2psidT2", "   ", "/.", " ", 
       RowBox[{"Equal", "->", " ", "Rule"}]}], " ", " ", ")"}]}], " ", "//", 
    " ", "pdConv"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"compatabilityConditions", "  ", "/.", " ", 
       RowBox[{"(", " ", 
        RowBox[{"d2gammadT2", "  ", "/.", " ", 
         RowBox[{"Equal", "->", " ", "Rule"}]}], "  ", ")"}]}], "  ", "/.", 
      " ", 
      RowBox[{"(", " ", 
       RowBox[{"d2psidT2", "   ", "/.", " ", 
        RowBox[{"Equal", "->", " ", "Rule"}]}], " ", " ", ")"}]}], "//", " ", 
     "Expand"}], " ", "//", " ", "Simplify"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.8557441197918386`*^9, 3.855744165626363*^9}, 
   3.855744228708838*^9, {3.855748269155795*^9, 3.855748273408819*^9}, {
   3.8557544799393063`*^9, 3.8557545047189093`*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"73ff37a2-6567-4a5f-8d95-350eaeeed21d"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"R", " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "R"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{
       RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
       RowBox[{"\[PartialD]", "R"}]}],
      MultilineFunction->None]}], "+", 
    RowBox[{"R", " ", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", 
       SuperscriptBox["R", "2"]}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "T"}],
      MultilineFunction->None]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "R"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "T"}],
      MultilineFunction->None]}]}], "\[LongEqual]", 
   RowBox[{
    FractionBox["1", "2"], " ", "R", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}], 
        RowBox[{"\[PartialD]", "R"}],
        MultilineFunction->None], " ", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[PartialD]", "2"], 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}], 
        RowBox[{
         RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
         RowBox[{"\[PartialD]", "R"}]}],
        MultilineFunction->None]}], "+", 
      RowBox[{"2", " ", 
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}], 
        RowBox[{"\[PartialD]", "T"}],
        MultilineFunction->None], " ", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[PartialD]", "2"], 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}], 
        RowBox[{"\[PartialD]", 
         SuperscriptBox["T", "2"]}],
        MultilineFunction->None]}]}], ")"}]}]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.855744149750355*^9, 3.855744168097168*^9}, 
   3.8557442287090187`*^9, 3.855747892133415*^9, 3.855748274236367*^9, 
   3.855753905011677*^9, 3.8557545061260223`*^9, 3.855771339136436*^9},
 CellLabel->
  "Out[78]//TraditionalForm=",ExpressionUUID->"b000f29f-1c3e-4464-b422-\
76ed6cce1d40"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"R", " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "R"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{
       RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
       RowBox[{"\[PartialD]", "R"}]}],
      MultilineFunction->None]}], "+", 
    RowBox[{"R", " ", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", 
       SuperscriptBox["R", "2"]}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "T"}],
      MultilineFunction->None]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "R"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "T"}],
      MultilineFunction->None]}]}], "\[LongEqual]", 
   RowBox[{
    FractionBox["1", "2"], " ", "R", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}], 
        RowBox[{"\[PartialD]", "R"}],
        MultilineFunction->None], " ", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[PartialD]", "2"], 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}], 
        RowBox[{
         RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
         RowBox[{"\[PartialD]", "R"}]}],
        MultilineFunction->None]}], "+", 
      RowBox[{"2", " ", 
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}], 
        RowBox[{"\[PartialD]", "T"}],
        MultilineFunction->None], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"T", ",", "R"}], ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["R", "2"]}],
          MultilineFunction->None], "+", 
         FractionBox[
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], "R"]}], ")"}]}]}], ")"}]}]}], 
  TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.855744149750355*^9, 3.855744168097168*^9}, 
   3.8557442287090187`*^9, 3.855747892133415*^9, 3.855748274236367*^9, 
   3.855753905011677*^9, 3.8557545061260223`*^9, 3.8557713391609087`*^9},
 CellLabel->
  "Out[79]//TraditionalForm=",ExpressionUUID->"adc6f2bc-26f5-4b32-91fb-\
7bdc18b8cc37"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.855744149750355*^9, 3.855744168097168*^9}, 
   3.8557442287090187`*^9, 3.855747892133415*^9, 3.855748274236367*^9, 
   3.855753905011677*^9, 3.8557545061260223`*^9, 3.855771339167206*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"2b65e735-821c-48da-add1-14ea106be7cf"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "vacuumFieldEquations", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vacuumFieldEquations", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
    "d2gammadT2", "   ", ",", " ", "d2psidT2", "  ", ",", " ", "dgammadT", 
     " ", ",", " ", "dgammadR"}], "\[IndentingNewLine]", "}"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vacuumFieldEquations", " ", "//", " ", "TableForm"}], " ", "//", 
  " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.855744170924131*^9, 3.85574423464398*^9}, {
  3.8557482857793627`*^9, 3.855748291787125*^9}, {3.855754526923243*^9, 
  3.8557545475472383`*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"231499d2-4ace-4b1f-a390-aab0460cbacd"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], "\[LongEqual]", 
        RowBox[{
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"T", ",", "R"}], ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["R", "2"]}],
          MultilineFunction->None], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None], ")"}], "2"]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None], ")"}], "2"]}]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], "\[LongEqual]", 
        RowBox[{
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"T", ",", "R"}], ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["R", "2"]}],
          MultilineFunction->None], "+", 
         FractionBox[
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], "R"]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], "\[LongEqual]", 
        RowBox[{"R", " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"T", ",", "R"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"T", ",", "R"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], "\[LongEqual]", 
        RowBox[{
         FractionBox["1", "2"], " ", "R", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "R"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], ")"}], "2"]}], ")"}]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.8557442130550537`*^9, 3.855744234644767*^9}, 
   3.855747892187023*^9, 3.8557482923289337`*^9, 3.855753905221266*^9, 
   3.855754549369808*^9, 3.855771339194386*^9},
 CellLabel->
  "Out[83]//TraditionalForm=",ExpressionUUID->"47ea04b4-311f-446b-84fc-\
96575fdaf260"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transformation of Field Equations From \[Psi] to \[Phi]", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.8557551915952387`*^9, 
  3.855755212557358*^9}},ExpressionUUID->"15408852-3651-4c38-8141-\
92509a354dbe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Not", " ", "numbered", " ", "but", " ", "just", " ", "above", " ", 
    "equation", " ", "3.2"}], " ", "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "physicalKGfield", "]"}], "\[IndentingNewLine]", 
   RowBox[{"physicalKGfield", " ", "=", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Phi]", "[", 
      RowBox[{"T", ",", "R"}], "]"}], " ", "==", 
     FractionBox[
      RowBox[{" ", 
       RowBox[{"\[Psi]", "[", 
        RowBox[{"T", ",", "R"}], "]"}]}], 
      SqrtBox[
       RowBox[{"8", " ", "G"}]]]}]}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.8557546048776608`*^9, 3.855754650428293*^9}, {
   3.855754702544804*^9, 3.855754712248755*^9}, 3.8557551997929983`*^9},
 CellLabel->"In[84]:=",ExpressionUUID->"a94e29ac-8e67-4990-b9be-3d38436f1d5e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Phi]", "[", 
   RowBox[{"T", ",", "R"}], "]"}], "\[Equal]", 
  FractionBox[
   RowBox[{"\[Psi]", "[", 
    RowBox[{"T", ",", "R"}], "]"}], 
   RowBox[{"2", " ", 
    SqrtBox["2"], " ", 
    SqrtBox["G"]}]]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{3.855754712952448*^9, 3.855755199793428*^9, 
  3.8557713392226048`*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"0625574b-4767-4512-9bb2-dd7631daff34"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{"Solve", "[", " ", 
    RowBox[{"physicalKGfield", " ", ",", "  ", 
     RowBox[{"\[Psi]", "[", 
      RowBox[{"T", ",", "R"}], "]"}]}], "]"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.855754715137411*^9, 3.855754736258662*^9}, 
   3.8557551997936697`*^9},
 CellLabel->"In[86]:=",ExpressionUUID->"fe5d029f-3e1e-46ef-bd72-35cfa2c46678"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"T", ",", "R"}], "]"}], "\[Rule]", 
  RowBox[{"2", " ", 
   SqrtBox["2"], " ", 
   SqrtBox["G"], " ", 
   RowBox[{"\[Phi]", "[", 
    RowBox[{"T", ",", "R"}], "]"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.855754727406967*^9, 3.8557547364950123`*^9}, 
   3.8557551997939863`*^9, 3.855771339244516*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"e8b07dba-400f-4a37-9206-f2c4a51c6072"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "psiToPhi", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psiToPhi", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Solve", "[", " ", 
        RowBox[{"physicalKGfield", " ", ",", "  ", 
         RowBox[{"\[Psi]", "[", 
          RowBox[{"T", ",", "R"}], "]"}]}], "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Solve", "[", " ", 
          RowBox[{"physicalKGfield", " ", ",", "  ", 
           RowBox[{"\[Psi]", "[", 
            RowBox[{"T", ",", "R"}], "]"}]}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "R"}], "]"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Solve", "[", " ", 
          RowBox[{"physicalKGfield", " ", ",", "  ", 
           RowBox[{"\[Psi]", "[", 
            RowBox[{"T", ",", "R"}], "]"}]}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "T"}], "]"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Solve", "[", " ", 
          RowBox[{"physicalKGfield", " ", ",", "  ", 
           RowBox[{"\[Psi]", "[", 
            RowBox[{"T", ",", "R"}], "]"}]}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"R", ",", "2"}], "}"}]}], "]"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Solve", "[", " ", 
          RowBox[{"physicalKGfield", " ", ",", "  ", 
           RowBox[{"\[Psi]", "[", 
            RowBox[{"T", ",", "R"}], "]"}]}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"T", ",", "2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
    "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psiToPhi", " ", "//", " ", "TableForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.855754742010993*^9, 3.855754820547083*^9}, 
   3.855755199794283*^9},
 CellLabel->"In[87]:=",ExpressionUUID->"733f08be-91fb-40f1-9848-2c9127f21893"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{"\[Psi]", "(", 
         RowBox[{"T", ",", "R"}], ")"}], "\[Rule]", 
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", 
         SqrtBox["G"], " ", 
         RowBox[{"\[Phi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], "\[Rule]", 
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", 
         SqrtBox["G"], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Phi]", "(", 
            RowBox[{"T", ",", "R"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], "\[Rule]", 
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", 
         SqrtBox["G"], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Phi]", "(", 
            RowBox[{"T", ",", "R"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], "\[Rule]", 
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", 
         SqrtBox["G"], " ", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"\[Phi]", "(", 
            RowBox[{"T", ",", "R"}], ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["R", "2"]}],
          MultilineFunction->None]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], "\[Rule]", 
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", 
         SqrtBox["G"], " ", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"\[Phi]", "(", 
            RowBox[{"T", ",", "R"}], ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["T", "2"]}],
          MultilineFunction->None]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.855754752378151*^9, 3.8557547624365253`*^9}, {
   3.855754817444137*^9, 3.8557548210385437`*^9}, 3.8557551997945623`*^9, 
   3.855771339279125*^9},
 CellLabel->
  "Out[89]//TraditionalForm=",ExpressionUUID->"41b51ff3-0e7a-4a9e-99bb-\
ec3dcc221b93"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "vacuumFieldEquationsPsi", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vacuumFieldEquationsPsi", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"vacuumFieldEquations", " ", "/.", " ", "psiToPhi"}]}], "   ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vacuumFieldEquationsPsi", " ", "//", " ", "TableForm"}], " ", "//",
   " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.855754837368787*^9, 3.855754863366835*^9}, {
   3.855754898440243*^9, 3.855754913549861*^9}, 3.855755199794756*^9},
 CellLabel->"In[90]:=",ExpressionUUID->"cfa4f52a-2a92-4847-bde0-b6f1f08c94c8"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], "\[LongEqual]", 
        RowBox[{
         RowBox[{"4", " ", "G", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Phi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None], ")"}], "2"]}], "-", 
         RowBox[{"4", " ", "G", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Phi]", "(", 
               RowBox[{"T", ",", "R"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None], ")"}], "2"]}], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"T", ",", "R"}], ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["R", "2"]}],
          MultilineFunction->None]}]}]},
      {
       RowBox[{
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", 
         SqrtBox["G"], " ", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"\[Phi]", "(", 
            RowBox[{"T", ",", "R"}], ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["T", "2"]}],
          MultilineFunction->None]}], "\[LongEqual]", 
        RowBox[{
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", 
          SqrtBox["G"], " ", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Phi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["R", "2"]}],
           MultilineFunction->None]}], "+", 
         FractionBox[
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", 
           SqrtBox["G"], " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Phi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]}], 
            RowBox[{"\[PartialD]", "R"}],
            MultilineFunction->None]}], "R"]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], "\[LongEqual]", 
        RowBox[{"8", " ", "G", " ", "R", " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Phi]", "(", 
            RowBox[{"T", ",", "R"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Phi]", "(", 
            RowBox[{"T", ",", "R"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], "\[LongEqual]", 
        RowBox[{
         FractionBox["1", "2"], " ", "R", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"8", " ", "G", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Phi]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None], ")"}], "2"]}], "+", 
           RowBox[{"8", " ", "G", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Phi]", "(", 
                 RowBox[{"T", ",", "R"}], ")"}]}], 
               RowBox[{"\[PartialD]", "T"}],
               MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.855754840707711*^9, 3.8557548640276527`*^9}, 
   3.8557549144146957`*^9, 3.855755199795026*^9, 3.855771339323184*^9},
 CellLabel->
  "Out[92]//TraditionalForm=",ExpressionUUID->"60d4d575-d3ca-406c-80b9-\
f12ccd6cd0d7"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq3pt6", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3pt6", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"Expand", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "R"}], ")"}], "*", 
     RowBox[{
      RowBox[{
       RowBox[{"Simplify", "[", 
        RowBox[{"vacuumFieldEquationsPsi", "[", 
         RowBox[{"[", "2", "]"}], "]"}], " ", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], " ", "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq3pt6", " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.85575504309846*^9, 3.855755135545803*^9}, 
   3.8557551997951813`*^9},
 CellLabel->"In[93]:=",ExpressionUUID->"9f8607d8-762b-496d-a2dd-d49df101bf0f"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[PartialD]", "2"], 
     RowBox[{"\[Phi]", "(", 
      RowBox[{"T", ",", "R"}], ")"}]}], 
    RowBox[{"\[PartialD]", 
     SuperscriptBox["R", "2"]}],
    MultilineFunction->None], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[PartialD]", "2"], 
     RowBox[{"\[Phi]", "(", 
      RowBox[{"T", ",", "R"}], ")"}]}], 
    RowBox[{"\[PartialD]", 
     SuperscriptBox["T", "2"]}],
    MultilineFunction->None], "+", 
   FractionBox[
    FractionBox[
     RowBox[{"\[PartialD]", 
      RowBox[{"\[Phi]", "(", 
       RowBox[{"T", ",", "R"}], ")"}]}], 
     RowBox[{"\[PartialD]", "R"}],
     MultilineFunction->None], "R"]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.85575504116258*^9, 3.8557551358874474`*^9}, 
   3.8557551997953463`*^9, 3.855771339365119*^9},
 CellLabel->
  "Out[95]//TraditionalForm=",ExpressionUUID->"33e2369a-ca91-41f6-a0ae-\
775d19dc36cd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Solve", "[", " ", 
       RowBox[{
        RowBox[{"eq3pt6", " ", "==", " ", "0"}], " ", ",", 
        RowBox[{
         SuperscriptBox["\[Phi]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"2", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"T", ",", "R"}], "]"}]}], "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], " ", "/.", " ", 
    RowBox[{"Rule", "->", " ", "Equal"}]}], " ", "//", " ", "Expand"}], "  ", 
  "//", " ", "pdConv"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.855755296523807*^9, 3.855755334502604*^9}, 
   3.855755398277461*^9},
 CellLabel->"In[96]:=",ExpressionUUID->"dd1addd2-3d23-4f82-bf6d-7b3aaa9c39b3"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[PartialD]", "2"], 
     RowBox[{"\[Phi]", "(", 
      RowBox[{"T", ",", "R"}], ")"}]}], 
    RowBox[{"\[PartialD]", 
     SuperscriptBox["T", "2"]}],
    MultilineFunction->None], "\[LongEqual]", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["\[PartialD]", "2"], 
      RowBox[{"\[Phi]", "(", 
       RowBox[{"T", ",", "R"}], ")"}]}], 
     RowBox[{"\[PartialD]", 
      SuperscriptBox["R", "2"]}],
     MultilineFunction->None], "+", 
    FractionBox[
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "R"}],
      MultilineFunction->None], "R"]}]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.855755297283337*^9, 3.8557553349538*^9}, 
   3.855755398277915*^9, 3.855771339399732*^9},
 CellLabel->
  "Out[96]//TraditionalForm=",ExpressionUUID->"3cc0fd52-7ca8-407a-95df-\
e0ded4fd86cb"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq3pt7", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3pt7", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"Collect", "[", 
    RowBox[{
     RowBox[{"Expand", "[", 
      RowBox[{"vacuumFieldEquationsPsi", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "]"}], " ", ",", " ", 
     RowBox[{"4", " ", "G", " ", "R"}]}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq3pt7", " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.855754892438499*^9, 3.855754974763118*^9}, 
   3.855755199795538*^9},
 CellLabel->"In[97]:=",ExpressionUUID->"009e1922-75cf-4d24-9d92-1d2b347b35a2"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", 
     RowBox[{"\[Gamma]", "(", 
      RowBox[{"T", ",", "R"}], ")"}]}], 
    RowBox[{"\[PartialD]", "R"}],
    MultilineFunction->None], "\[LongEqual]", 
   RowBox[{"4", " ", "G", " ", "R", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Phi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Phi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], ")"}], "2"]}], ")"}]}]}], 
  TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.855754935036291*^9, 3.8557549752249937`*^9}, 
   3.855755199795807*^9, 3.855771339436118*^9},
 CellLabel->
  "Out[99]//TraditionalForm=",ExpressionUUID->"5fea42ee-6e7f-4d58-90d0-\
2344404c9337"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq3pt8", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3pt8", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"vacuumFieldEquationsPsi", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq3pt8", " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.8557549890427856`*^9, 3.855755009772874*^9}, 
   3.855755199795993*^9},
 CellLabel->
  "In[100]:=",ExpressionUUID->"c817385f-0473-4edb-b418-ccb3db6aa8ce"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", 
     RowBox[{"\[Gamma]", "(", 
      RowBox[{"T", ",", "R"}], ")"}]}], 
    RowBox[{"\[PartialD]", "T"}],
    MultilineFunction->None], "\[LongEqual]", 
   RowBox[{"8", " ", "G", " ", "R", " ", 
    FractionBox[
     RowBox[{"\[PartialD]", 
      RowBox[{"\[Phi]", "(", 
       RowBox[{"T", ",", "R"}], ")"}]}], 
     RowBox[{"\[PartialD]", "R"}],
     MultilineFunction->None], " ", 
    FractionBox[
     RowBox[{"\[PartialD]", 
      RowBox[{"\[Phi]", "(", 
       RowBox[{"T", ",", "R"}], ")"}]}], 
     RowBox[{"\[PartialD]", "T"}],
     MultilineFunction->None]}]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{3.855755010301742*^9, 3.855755199796261*^9, 
  3.855771339452558*^9},
 CellLabel->
  "Out[102]//TraditionalForm=",ExpressionUUID->"aae886f4-d52d-433e-9e49-\
e4adefadd3d8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{"eq3pt7", ",", "T"}], "]"}], " ", "//", " ", 
  "pdConv"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{"eq3pt8", ",", "R"}], "]"}], " ", "//", " ", "pdConv"}]}], "Input",\

 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.8557552266452017`*^9, 3.855755244390235*^9}, 
   3.8557553982781343`*^9},
 CellLabel->
  "In[103]:=",ExpressionUUID->"d7f419d0-a08e-48e3-9263-21853671e14a"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[PartialD]", "2"], 
     RowBox[{"\[Gamma]", "(", 
      RowBox[{"T", ",", "R"}], ")"}]}], 
    RowBox[{
     RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
     RowBox[{"\[PartialD]", "R"}]}],
    MultilineFunction->None], "\[LongEqual]", 
   RowBox[{"4", " ", "G", " ", "R", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{"\[Phi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}], 
        RowBox[{"\[PartialD]", "R"}],
        MultilineFunction->None], " ", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[PartialD]", "2"], 
         RowBox[{"\[Phi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}], 
        RowBox[{
         RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
         RowBox[{"\[PartialD]", "R"}]}],
        MultilineFunction->None]}], "+", 
      RowBox[{"2", " ", 
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{"\[Phi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}], 
        RowBox[{"\[PartialD]", "T"}],
        MultilineFunction->None], " ", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[PartialD]", "2"], 
         RowBox[{"\[Phi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}], 
        RowBox[{"\[PartialD]", 
         SuperscriptBox["T", "2"]}],
        MultilineFunction->None]}]}], ")"}]}]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.8557552249646893`*^9, 3.855755244987419*^9}, 
   3.855755398278323*^9, 3.85577133949044*^9},
 CellLabel->
  "Out[103]//TraditionalForm=",ExpressionUUID->"a0da525a-e0d6-43f9-9da2-\
23940e8332bf"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[PartialD]", "2"], 
     RowBox[{"\[Gamma]", "(", 
      RowBox[{"T", ",", "R"}], ")"}]}], 
    RowBox[{
     RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
     RowBox[{"\[PartialD]", "R"}]}],
    MultilineFunction->None], "\[LongEqual]", 
   RowBox[{
    RowBox[{"8", " ", "G", " ", "R", " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "R"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{
       RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
       RowBox[{"\[PartialD]", "R"}]}],
      MultilineFunction->None]}], "+", 
    RowBox[{"8", " ", "G", " ", "R", " ", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", 
       SuperscriptBox["R", "2"]}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "T"}],
      MultilineFunction->None]}], "+", 
    RowBox[{"8", " ", "G", " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "R"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "T"}],
      MultilineFunction->None]}]}]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.8557552249646893`*^9, 3.855755244987419*^9}, 
   3.855755398278323*^9, 3.855771339495816*^9},
 CellLabel->
  "Out[104]//TraditionalForm=",ExpressionUUID->"84563565-4667-4f39-b59c-\
bac476aaef41"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "compatabilityConditions", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"compatabilityConditions", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"eq3pt7", ",", "T"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], " ", "==", " ", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"eq3pt8", ",", "R"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"compatabilityConditions", " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.855755251148691*^9, 3.8557552775903587`*^9}, 
   3.8557553982788363`*^9},
 CellLabel->
  "In[105]:=",ExpressionUUID->"7d1b5f73-c3b2-4772-8e52-823232ca9e42"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"4", " ", "G", " ", "R", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{"\[Phi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}], 
        RowBox[{"\[PartialD]", "R"}],
        MultilineFunction->None], " ", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[PartialD]", "2"], 
         RowBox[{"\[Phi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}], 
        RowBox[{
         RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
         RowBox[{"\[PartialD]", "R"}]}],
        MultilineFunction->None]}], "+", 
      RowBox[{"2", " ", 
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{"\[Phi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}], 
        RowBox[{"\[PartialD]", "T"}],
        MultilineFunction->None], " ", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[PartialD]", "2"], 
         RowBox[{"\[Phi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}], 
        RowBox[{"\[PartialD]", 
         SuperscriptBox["T", "2"]}],
        MultilineFunction->None]}]}], ")"}]}], "\[LongEqual]", 
   RowBox[{
    RowBox[{"8", " ", "G", " ", "R", " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "R"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{
       RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
       RowBox[{"\[PartialD]", "R"}]}],
      MultilineFunction->None]}], "+", 
    RowBox[{"8", " ", "G", " ", "R", " ", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", 
       SuperscriptBox["R", "2"]}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "T"}],
      MultilineFunction->None]}], "+", 
    RowBox[{"8", " ", "G", " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "R"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "T"}],
      MultilineFunction->None]}]}]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{3.855755278204977*^9, 3.855755398279133*^9, 
  3.8557713395355997`*^9},
 CellLabel->
  "Out[107]//TraditionalForm=",ExpressionUUID->"830043cc-c8b4-40f1-9b4f-\
60736e295c7a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{
    "Just", " ", "a", " ", "check", " ", "to", " ", "make", " ", "sure", " ", 
     "we", " ", "correctly", " ", "derived", " ", "the", " ", "field", " ", 
     "equations"}], "..."}], " ", "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"compatabilityConditions", " ", "//", " ", "pdConv"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"compatabilityConditions", "  ", "/.", " ", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Solve", "[", " ", 
        RowBox[{
         RowBox[{"eq3pt6", " ", "==", " ", "0"}], " ", ",", 
         RowBox[{
          SuperscriptBox["\[Phi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"2", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"T", ",", "R"}], "]"}]}], "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], " ", "//", " ", "pdConv"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"compatabilityConditions", "  ", "/.", " ", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Solve", "[", " ", 
         RowBox[{
          RowBox[{"eq3pt6", " ", "==", " ", "0"}], " ", ",", 
          RowBox[{
           SuperscriptBox["\[Phi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"2", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"T", ",", "R"}], "]"}]}], "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "  ", "//", " ", "Expand"}], " ", "//",
     " ", "Simplify", " "}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.855755285020056*^9, 3.855755286412074*^9}, {
  3.855755344750914*^9, 3.8557553982794323`*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"6e606962-a665-4d20-8c69-b7fffff8eea8"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"4", " ", "G", " ", "R", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{"\[Phi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}], 
        RowBox[{"\[PartialD]", "R"}],
        MultilineFunction->None], " ", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[PartialD]", "2"], 
         RowBox[{"\[Phi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}], 
        RowBox[{
         RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
         RowBox[{"\[PartialD]", "R"}]}],
        MultilineFunction->None]}], "+", 
      RowBox[{"2", " ", 
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{"\[Phi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}], 
        RowBox[{"\[PartialD]", "T"}],
        MultilineFunction->None], " ", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[PartialD]", "2"], 
         RowBox[{"\[Phi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}], 
        RowBox[{"\[PartialD]", 
         SuperscriptBox["T", "2"]}],
        MultilineFunction->None]}]}], ")"}]}], "\[LongEqual]", 
   RowBox[{
    RowBox[{"8", " ", "G", " ", "R", " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "R"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{
       RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
       RowBox[{"\[PartialD]", "R"}]}],
      MultilineFunction->None]}], "+", 
    RowBox[{"8", " ", "G", " ", "R", " ", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", 
       SuperscriptBox["R", "2"]}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "T"}],
      MultilineFunction->None]}], "+", 
    RowBox[{"8", " ", "G", " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "R"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "T"}],
      MultilineFunction->None]}]}]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{3.855755367178557*^9, 3.855755398279673*^9, 
  3.855771339574664*^9},
 CellLabel->
  "Out[108]//TraditionalForm=",ExpressionUUID->"6ce78388-b72c-42c1-ac99-\
be2f577fb468"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"4", " ", "G", " ", "R", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{"\[Phi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}], 
        RowBox[{"\[PartialD]", "R"}],
        MultilineFunction->None], " ", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[PartialD]", "2"], 
         RowBox[{"\[Phi]", "(", 
          RowBox[{"T", ",", "R"}], ")"}]}], 
        RowBox[{
         RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
         RowBox[{"\[PartialD]", "R"}]}],
        MultilineFunction->None]}], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Phi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"R", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Phi]", "(", 
              RowBox[{"T", ",", "R"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["R", "2"]}],
            MultilineFunction->None]}], "+", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Phi]", "(", 
             RowBox[{"T", ",", "R"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None]}], ")"}]}], "R"]}], ")"}]}], 
   "\[LongEqual]", 
   RowBox[{
    RowBox[{"8", " ", "G", " ", "R", " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "R"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{
       RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
       RowBox[{"\[PartialD]", "R"}]}],
      MultilineFunction->None]}], "+", 
    RowBox[{"8", " ", "G", " ", "R", " ", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", 
       SuperscriptBox["R", "2"]}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "T"}],
      MultilineFunction->None]}], "+", 
    RowBox[{"8", " ", "G", " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "R"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"T", ",", "R"}], ")"}]}], 
      RowBox[{"\[PartialD]", "T"}],
      MultilineFunction->None]}]}]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{3.855755367178557*^9, 3.855755398279673*^9, 
  3.8557713396088943`*^9},
 CellLabel->
  "Out[109]//TraditionalForm=",ExpressionUUID->"e37e3609-8996-47ed-bed6-\
55f6da967ed9"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{3.855755367178557*^9, 3.855755398279673*^9, 
  3.8557713396154633`*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"7c93032d-f800-46a3-9181-ed51a059f131"]
}, Closed]],

Cell[CellGroupData[{

Cell["Solution to \[Phi] Field Equations by Separation of Variables ", \
"Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.},
 CellChangeTimes->{{3.855772688873413*^9, 
  3.8557727163546*^9}},ExpressionUUID->"94594f47-3725-446f-a6a9-82b213cb36a3"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "phiReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{"phiReplace", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[Phi]", "[", 
    RowBox[{"T", ",", "R"}], "]"}], "\[Rule]", " ", 
   RowBox[{
    RowBox[{"f", "[", "T", "]"}], " ", 
    RowBox[{"g", "[", "R", "]"}]}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.},
 CellChangeTimes->{{3.8557719751232367`*^9, 3.855771993698995*^9}, 
   3.855772697839596*^9},
 CellLabel->
  "In[111]:=",ExpressionUUID->"57f69b4e-13a7-4d76-b238-d591c8efb889"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Phi]", "[", 
   RowBox[{"T", ",", "R"}], "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{"f", "[", "T", "]"}], " ", 
   RowBox[{"g", "[", "R", "]"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.},
 CellChangeTimes->{3.8557719944586363`*^9, 3.855772697840272*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"7293415f-ec7b-4739-ba56-28f5f9a33929"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "phiDerivatives", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phiDerivatives", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{"phiReplace", "  ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"D", "[", 
      RowBox[{"phiReplace", " ", ",", "T"}], "]"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"D", "[", 
      RowBox[{"phiReplace", " ", ",", "R"}], "]"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"D", "[", 
      RowBox[{"phiReplace", " ", ",", 
       RowBox[{"{", 
        RowBox[{"T", ",", "2"}], "}"}]}], "]"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"D", "[", 
      RowBox[{"phiReplace", " ", ",", 
       RowBox[{"{", 
        RowBox[{"R", ",", "2"}], "}"}]}], "]"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{"phiReplace", " ", ",", "T"}], "]"}], ",", "R"}], "]"}]}], 
    "\[IndentingNewLine]", "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phiDerivatives", "  ", "//", " ", "TableForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.},
 CellChangeTimes->{{3.855772004818985*^9, 3.855772076276988*^9}, 
   3.85577269784054*^9},
 CellLabel->
  "In[131]:=",ExpressionUUID->"00bb8e30-7628-4177-9fbf-e6fd6115dcc6"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{"\[Phi]", "(", 
         RowBox[{"T", ",", "R"}], ")"}], "\[Rule]", 
        RowBox[{
         RowBox[{"f", "(", "T", ")"}], " ", 
         RowBox[{"g", "(", "R", ")"}]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Phi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], "\[Rule]", 
        RowBox[{
         RowBox[{"g", "(", "R", ")"}], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"f", "(", "T", ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Phi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], "\[Rule]", 
        RowBox[{
         RowBox[{"f", "(", "T", ")"}], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"g", "(", "R", ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Phi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], "\[Rule]", 
        RowBox[{
         RowBox[{"g", "(", "R", ")"}], " ", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"f", "(", "T", ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["T", "2"]}],
          MultilineFunction->None]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Phi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], "\[Rule]", 
        RowBox[{
         RowBox[{"f", "(", "T", ")"}], " ", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"g", "(", "R", ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["R", "2"]}],
          MultilineFunction->None]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Phi]", "(", 
           RowBox[{"T", ",", "R"}], ")"}]}], 
         RowBox[{
          RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
          RowBox[{"\[PartialD]", "R"}]}],
         MultilineFunction->None], "\[Rule]", 
        RowBox[{
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"f", "(", "T", ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"g", "(", "R", ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.},
 CellChangeTimes->{{3.85577200818429*^9, 3.8557720767201138`*^9}, 
   3.85577269784099*^9},
 CellLabel->
  "Out[133]//TraditionalForm=",ExpressionUUID->"af3690eb-739c-4eeb-97dc-\
927098bf1a09"],

Cell[BoxData[{
 RowBox[{"eq3pt6", " ", "//", " ", "pdConv"}], "\[IndentingNewLine]", 
 RowBox[{"eq3pt6", " ", "/.", " ", "phiDerivatives", " "}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.},
 CellChangeTimes->{{3.855772099026772*^9, 3.85577211573512*^9}, 
   3.855772697841174*^9},
 CellLabel->
  "In[135]:=",ExpressionUUID->"126c6f6d-c3ec-420d-927d-3fa905d0e815"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[PartialD]", "2"], 
     RowBox[{"\[Phi]", "(", 
      RowBox[{"T", ",", "R"}], ")"}]}], 
    RowBox[{"\[PartialD]", 
     SuperscriptBox["R", "2"]}],
    MultilineFunction->None], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[PartialD]", "2"], 
     RowBox[{"\[Phi]", "(", 
      RowBox[{"T", ",", "R"}], ")"}]}], 
    RowBox[{"\[PartialD]", 
     SuperscriptBox["T", "2"]}],
    MultilineFunction->None], "+", 
   FractionBox[
    FractionBox[
     RowBox[{"\[PartialD]", 
      RowBox[{"\[Phi]", "(", 
       RowBox[{"T", ",", "R"}], ")"}]}], 
     RowBox[{"\[PartialD]", "R"}],
     MultilineFunction->None], "R"]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.},
 CellChangeTimes->{{3.855772102411969*^9, 3.855772116524281*^9}, 
   3.855772697841343*^9},
 CellLabel->
  "Out[135]//TraditionalForm=",ExpressionUUID->"48369ca2-242d-4697-9110-\
905988ba0627"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"f", "[", "T", "]"}], " ", 
    RowBox[{
     SuperscriptBox["g", "\[Prime]",
      MultilineFunction->None], "[", "R", "]"}]}], "R"], "-", 
  RowBox[{
   RowBox[{"g", "[", "R", "]"}], " ", 
   RowBox[{
    SuperscriptBox["f", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "T", "]"}]}], "+", 
  RowBox[{
   RowBox[{"f", "[", "T", "]"}], " ", 
   RowBox[{
    SuperscriptBox["g", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "R", "]"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.},
 CellChangeTimes->{{3.855772102411969*^9, 3.8557721165284653`*^9}, 
   3.855772697841764*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"88f8fb92-dba6-4363-928f-300d16fd310c"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "sov", "]"}], "\[IndentingNewLine]", 
 RowBox[{"sov", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"\[Phi]", "[", 
          RowBox[{"T", ",", "R"}], "]"}]], " ", "/.", " ", "phiDerivatives"}],
        ")"}], "*", " ", 
      RowBox[{"(", 
       RowBox[{"eq3pt6", " ", "/.", " ", "phiDerivatives"}], "  ", ")"}]}], 
     " ", "//", " ", "Expand"}], " ", "//", " ", "Apart"}], " ", "//", " ", 
   "Expand", " "}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.},
 CellChangeTimes->{{3.855772124565093*^9, 3.855772174827343*^9}, 
   3.855772697841978*^9},
 CellLabel->
  "In[138]:=",ExpressionUUID->"9a871825-74d4-447b-a3ef-9c654a905c7c"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["g", "\[Prime]",
     MultilineFunction->None], "[", "R", "]"}], 
   RowBox[{"R", " ", 
    RowBox[{"g", "[", "R", "]"}]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["f", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "T", "]"}], 
   RowBox[{"f", "[", "T", "]"}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["g", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "R", "]"}], 
   RowBox[{"g", "[", "R", "]"}]]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.},
 CellChangeTimes->{{3.8557721621081047`*^9, 3.8557721761982183`*^9}, 
   3.8557726978423977`*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"db7efe0f-0fc9-4834-b7e5-ac1686aa934d"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "fODE", "]"}], "\[IndentingNewLine]", 
 RowBox[{"fODE", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Select", "[", " ", 
    RowBox[{"sov", " ", ",", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"!", 
        RowBox[{"FreeQ", "[", 
         RowBox[{"#", ",", "T"}], "]"}]}], ")"}], "&"}]}], "]"}], " ", 
   "\[Equal]", "   ", 
   SuperscriptBox["\[Omega]", "2"]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.},
 CellChangeTimes->{{3.855772183527198*^9, 3.855772207403274*^9}, 
   3.855772697842608*^9},
 CellLabel->
  "In[142]:=",ExpressionUUID->"ba8cdbd9-2471-4634-966d-71ea83aecb27"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["f", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "T", "]"}], 
    RowBox[{"f", "[", "T", "]"}]]}], "\[Equal]", 
  SuperscriptBox["\[Omega]", "2"]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.},
 CellChangeTimes->{{3.855772204716158*^9, 3.85577220780872*^9}, 
   3.855772697843026*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"a5e81e1d-c772-4556-97e6-efc78de03457"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "fReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{"fReplace", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"DSolve", "[", " ", 
     RowBox[{"fODE", " ", ",", " ", 
      RowBox[{"f", "[", "T", "]"}], " ", ",", " ", "T"}], "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.},
 CellChangeTimes->{{3.85577221910039*^9, 3.855772254539241*^9}, 
   3.8557726978432198`*^9},
 CellLabel->
  "In[146]:=",ExpressionUUID->"f0d01ade-2836-45c3-89cb-8d520c600872"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "T", "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"1"},
     "C"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"T", " ", "\[Omega]"}], "]"}]}], "+", 
   RowBox[{
    TemplateBox[{"2"},
     "C"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"T", " ", "\[Omega]"}], "]"}]}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.},
 CellChangeTimes->{{3.8557722290235043`*^9, 3.8557722550227613`*^9}, 
   3.8557726978436327`*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"cf3a7858-2362-40a8-a93f-88cdca5492cc"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "gODE", "]"}], "\[IndentingNewLine]", 
 RowBox[{"gODE", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Select", "[", " ", 
    RowBox[{"sov", " ", ",", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"!", 
        RowBox[{"FreeQ", "[", 
         RowBox[{"#", ",", "R"}], "]"}]}], ")"}], "&"}]}], "]"}], " ", 
   "\[Equal]", "  ", 
   RowBox[{"-", " ", 
    SuperscriptBox["\[Omega]", "2"]}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.},
 CellChangeTimes->{{3.8557722600278597`*^9, 3.8557722778841743`*^9}, 
   3.85577269784383*^9},
 CellLabel->
  "In[148]:=",ExpressionUUID->"462f7f0b-4e30-4526-b2ce-2fc841469ede"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["g", "\[Prime]",
      MultilineFunction->None], "[", "R", "]"}], 
    RowBox[{"R", " ", 
     RowBox[{"g", "[", "R", "]"}]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["g", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "R", "]"}], 
    RowBox[{"g", "[", "R", "]"}]]}], "\[Equal]", 
  RowBox[{"-", 
   SuperscriptBox["\[Omega]", "2"]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.},
 CellChangeTimes->{3.855772278241371*^9, 3.8557726978442574`*^9},
 CellLabel->
  "Out[149]=",ExpressionUUID->"fdede375-307e-4bd5-8913-3b058e68c868"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "gReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{"gReplace", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"DSolve", "[", " ", 
       RowBox[{"gODE", " ", ",", " ", 
        RowBox[{"g", "[", "R", "]"}], " ", ",", " ", "R"}], "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], " ", "/.", " ", 
    RowBox[{
     RowBox[{"C", "[", "1", "]"}], "->", " ", 
     RowBox[{"C", "[", "3", "]"}]}]}], " ", "/.", " ", 
   RowBox[{
    RowBox[{"C", "[", "2", "]"}], "->", " ", 
    RowBox[{"C", "[", "4", "]"}]}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.},
 CellChangeTimes->{{3.855772289307057*^9, 3.855772306635158*^9}, {
   3.855772504515314*^9, 3.855772516082505*^9}, 3.855772697844472*^9},
 CellLabel->
  "In[173]:=",ExpressionUUID->"0137e50c-e2df-4ce8-bc55-b8905d81f1ff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "R", "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{
    RowBox[{"BesselJ", "[", 
     RowBox[{"0", ",", 
      RowBox[{"R", " ", "\[Omega]"}]}], "]"}], " ", 
    TemplateBox[{"3"},
     "C"]}], "+", 
   RowBox[{
    RowBox[{"BesselY", "[", 
     RowBox[{"0", ",", 
      RowBox[{"R", " ", "\[Omega]"}]}], "]"}], " ", 
    TemplateBox[{"4"},
     "C"]}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.},
 CellChangeTimes->{{3.855772296223486*^9, 3.855772307274724*^9}, 
   3.855772516685308*^9, 3.855772697844919*^9},
 CellLabel->
  "Out[174]=",ExpressionUUID->"7ced2ed5-6f3f-4779-b3e3-7a02f79a2dac"],

Cell[BoxData[{
 RowBox[{"\[Phi]", "[", 
  RowBox[{"T", ",", "R"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]", "[", 
   RowBox[{"T", ",", "R"}], "]"}], " ", "/.", " ", 
  "phiDerivatives"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]", "[", 
    RowBox[{"T", ",", "R"}], "]"}], " ", "/.", " ", "phiDerivatives"}], " ", "/.",
   " ", "fReplace"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"T", ",", "R"}], "]"}], " ", "/.", " ", "phiDerivatives"}], " ", 
   "/.", " ", "fReplace"}], " ", "/.", " ", "gReplace"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.},
 CellChangeTimes->{{3.8557723232927322`*^9, 3.855772344821114*^9}, 
   3.855772697845105*^9},
 CellLabel->
  "In[175]:=",ExpressionUUID->"24b8bee5-8b02-4284-8fa0-379713567b3d"],

Cell[BoxData[
 RowBox[{"\[Phi]", "[", 
  RowBox[{"T", ",", "R"}], "]"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.},
 CellChangeTimes->{{3.855772319084323*^9, 3.855772345376132*^9}, 
   3.8557725188558187`*^9, 3.8557726978452673`*^9},
 CellLabel->
  "Out[175]=",ExpressionUUID->"9c296f33-83fb-47f7-8e73-1588c82f9aad"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "T", "]"}], " ", 
  RowBox[{"g", "[", "R", "]"}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.},
 CellChangeTimes->{{3.855772319084323*^9, 3.855772345376132*^9}, 
   3.855772518859164*^9, 3.855772697845427*^9},
 CellLabel->
  "Out[176]=",ExpressionUUID->"0a5f4ce2-c276-4b24-9ffd-9b44b158e74c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "R", "]"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     TemplateBox[{"1"},
      "C"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"T", " ", "\[Omega]"}], "]"}]}], "+", 
    RowBox[{
     TemplateBox[{"2"},
      "C"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"T", " ", "\[Omega]"}], "]"}]}]}], ")"}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.},
 CellChangeTimes->{{3.855772319084323*^9, 3.855772345376132*^9}, 
   3.855772518862768*^9, 3.855772697845583*^9},
 CellLabel->
  "Out[177]=",ExpressionUUID->"d534c583-861f-4038-aaf4-8dbba913fbdc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"BesselJ", "[", 
      RowBox[{"0", ",", 
       RowBox[{"R", " ", "\[Omega]"}]}], "]"}], " ", 
     TemplateBox[{"3"},
      "C"]}], "+", 
    RowBox[{
     RowBox[{"BesselY", "[", 
      RowBox[{"0", ",", 
       RowBox[{"R", " ", "\[Omega]"}]}], "]"}], " ", 
     TemplateBox[{"4"},
      "C"]}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     TemplateBox[{"1"},
      "C"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"T", " ", "\[Omega]"}], "]"}]}], "+", 
    RowBox[{
     TemplateBox[{"2"},
      "C"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"T", " ", "\[Omega]"}], "]"}]}]}], ")"}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.},
 CellChangeTimes->{{3.855772319084323*^9, 3.855772345376132*^9}, 
   3.855772518868517*^9, 3.8557726978459578`*^9},
 CellLabel->
  "Out[178]=",ExpressionUUID->"d4c72772-67e5-4ed2-9e50-e0c41faa3b16"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "phiSolution", "]"}], "\[IndentingNewLine]", 
 RowBox[{"phiSolution", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[Phi]", "[", 
    RowBox[{"T", ",", "R"}], "]"}], "\[Rule]", " ", 
   RowBox[{"(", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Phi]", "[", 
        RowBox[{"T", ",", "R"}], "]"}], " ", "/.", " ", "phiDerivatives"}], 
      " ", "/.", " ", "fReplace"}], " ", "/.", " ", "gReplace"}], "  ", ")"}],
    " "}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.},
 CellChangeTimes->{{3.855772358747232*^9, 3.855772379772489*^9}, 
   3.85577269784614*^9},
 CellLabel->
  "In[179]:=",ExpressionUUID->"5f053368-d378-4919-87b6-1369f67f0281"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Phi]", "[", 
   RowBox[{"T", ",", "R"}], "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"BesselJ", "[", 
       RowBox[{"0", ",", 
        RowBox[{"R", " ", "\[Omega]"}]}], "]"}], " ", 
      TemplateBox[{"3"},
       "C"]}], "+", 
     RowBox[{
      RowBox[{"BesselY", "[", 
       RowBox[{"0", ",", 
        RowBox[{"R", " ", "\[Omega]"}]}], "]"}], " ", 
      TemplateBox[{"4"},
       "C"]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      TemplateBox[{"1"},
       "C"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"T", " ", "\[Omega]"}], "]"}]}], "+", 
     RowBox[{
      TemplateBox[{"2"},
       "C"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"T", " ", "\[Omega]"}], "]"}]}]}], ")"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.},
 CellChangeTimes->{3.855772380670149*^9, 3.8557725234547*^9, 
  3.855772697846653*^9},
 CellLabel->
  "Out[180]=",ExpressionUUID->"df0b6902-bdce-4474-9699-3fe0336b32d5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "phiSolution1", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Arbitrary", " ", "\[Omega]"}], " ", "*)"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"phiSolution1", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Expand", "[", "phiSolution", " ", "]"}], " ", "/.", " ", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "->", " ", "1"}]}], " ", "/.", " ", 
      RowBox[{
       RowBox[{"C", "[", "3", "]"}], "->", " ", "1"}]}], "  ", "/.", " ", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], "->", " ", "1"}]}], " ", "/.", " ", 
    RowBox[{
     RowBox[{"C", "[", "4", "]"}], "->", " ", "0"}]}], "  ", "/.", " ", 
   RowBox[{"\[Omega]", "->", " ", "1", " "}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.},
 CellChangeTimes->{{3.8557723992836847`*^9, 3.855772485458679*^9}, {
   3.855772530451585*^9, 3.855772586970935*^9}, {3.85577262326761*^9, 
   3.855772639883202*^9}, 
   3.8557726978469152`*^9},ExpressionUUID->"3b3191d6-c2f8-4009-ab80-\
7fd2ef8649bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Phi]", "[", 
   RowBox[{"T", ",", "R"}], "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{
    RowBox[{"BesselJ", "[", 
     RowBox[{"0", ",", "R"}], "]"}], " ", 
    RowBox[{"Cos", "[", "T", "]"}]}], "+", 
   RowBox[{
    RowBox[{"BesselJ", "[", 
     RowBox[{"0", ",", "R"}], "]"}], " ", 
    RowBox[{"Sin", "[", "T", "]"}]}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.},
 CellChangeTimes->{{3.85577240211495*^9, 3.8557724858423767`*^9}, {
   3.855772527587613*^9, 3.8557725879609823`*^9}, 3.8557726275019693`*^9, 
   3.8557726978475943`*^9},
 CellLabel->
  "Out[189]=",ExpressionUUID->"6f51eed9-1e0d-4e0a-bab7-742b999e232d"],

Cell[BoxData[
 RowBox[{"RevolutionPlot3D", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", " ", 
    RowBox[{
     RowBox[{"\[Phi]", "[", 
      RowBox[{"T", ",", "R"}], "]"}], " ", "/.", " ", "phiSolution1"}], " ", 
    "]"}], "  ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"R", ",", "0.1", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"T", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.},
 CellChangeTimes->{{3.855772605747011*^9, 3.855772614651196*^9}, 
   3.855772697847889*^9},
 CellLabel->
  "In[190]:=",ExpressionUUID->"8eca1e5e-b88b-40d3-a53e-122bda20d121"],

Cell[BoxData[
 Graphics3DBox[{{GraphicsComplex3DBox[CompressedData["
1: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
swnCqUizWXPd32QFqZhczBDWoIW7u4dpNYdb0eRBTlE6yCkjBzml6aVbSNdf
FnyJ8dOZAEIRKOwWHDTsnoIUmvSjbY8x46Mrat6xEuIw71jU8+vi34HhcF0z
qS8DJtf9Ik+uKwWjMy8dpnLEYOJow0MGkjWUZ+WguGI5DBrZ7a6ZxHah9JPd
vMefEeH3DULELd4rQHCepf54fwL4w16ZX8VOhdnZxmfjWAjg26FGOsUeDN5d
FLxW18aEC8lqlUWH93n+ywlLi43XKH6Es90hnhVf8p52vdnIDXUTy5vt9LwR
9UG++HyQLy4f5AtSjbxBdXJRbIF0uU88YoDONIxM6fZZ4GpmDM15RzH8lO2x
iP4dNrg4qvzmd1A2uqm61DLuJo7rP3R4TMzxwMKyZ5OyVlnoZ4HsP0pmCWxq
AV7PbwnC/mOfyJLonICpVus//mMSeDJq3lylQBSaew0LSZiHgOfWzFdmNddQ
6pOk616FA4jYwlTw+61plKGztdZIQ4LpOy8xib6bQOSke5PyF3+AjokEs2xA
h6c6Pb9GVY0jKmfL2rjIQZB0kBeOHuSFtwd5QYA+4fGFs6JY4eKh53aydPh+
cmDiQEA5OLTERBinI4H7LiZoEyxR4FZdl/Worhqkds2Z47OyNFYiCNkqqiHE
7hv9XDUdjWiIYGvz6CkF7DDaf8fldBsIYQga2DlSC1y+NXwmO/wLuZnXunnn
rCD0yUXAiHoW0R30+NQOenzgoMfncMD/zw/4/+UB/8eZGP4o0mHDpwqDMxMS
hfFXo6etBXUVYEnC/mNEIA92bxxQmo4RwS8+qicYaDQg7UKNSoVFCbwulOZs
OiWC01g54o4atwEzL0qTyuVWcIyO9QEvyzrK0dRtHv89iLYOzhV8PjhXYHxw
roDJzIz3nVkOML7YtjGUQIc/Hs0IldXsA6f/h6+w8YDDSVXndGWaCGH2UK8v
ragYZhjsHRQszQMshRm5DzvXwa90yRjmBQlcv8H3z/FSGfLzIR+4GE6Cmd9E
lFowKGC2tKg9nyONYPqJa89xomWQoXn9h5XeLOrkff7uul0xMDy4v6vy4P4u
hYP7u0zpKe25AkngguxSGy4jw5/KntkqLkcDraLHZodTqKBOv/mj9x6s2LkP
5tPVfUPHD7i68oCr3Q+4+o5OC63nkCAE3GGNW3H7uc/y0IuVrjCk0v9Pd/qW
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
hdcy2gLaJyqRwRnzyZlOFpwd3hj/9IsMbpd/be2b8g1QOrYQlf9ghCxijlpY
Rhb7PlJ/TMZQBAx7VDpKC9iw+4phZpS8PO571VpRN1oLThiaTCQ+ZYab9zkc
Wuzk8VMtGj5202Jww5KmPCCSA3+Mbg7Y8lLAcaRS9ibGX5HN6nC6mSMXbjup
cf/qoCJGGa+WjsAGdM33mHYyzAXX6CWeBFzIRDZvRi3/v7/0Q8/hjbk4aljd
rJ0Cjciw50bBn2vUWch05j7PynkmqPXzof20Lg0221Gmcd4fBGzuHFd70MQG
LdcbhLQTGXGat8D4JONn8NJiwuX2d344RbqytBTOgRf5Hlg9qkxG57M0h+Qs
RaA1M1d5lC8/9nt++E7ZwURwTZZjX9q4OFwPEqgVhMJYoPFjK+f7KGR6z53R
WlQKhl+c2dbZFcECVgPXD++PQRccYnJYw4vAPvVKT33Zu+hyqwbrVPc8UEs+
Y1DFJgKdrrrMnLnSiSjOK4hOfWhCQcJ3DwrPi0FH+wC1P0Y9yDFrx1jo6hc0
muDL+qJaAjq+iQvKMetD1umG19k9aoEKX9r6UIw0fP4lY/T2rZ/osVZf7hPp
MvA6urEbPJaDandMuenyhpBy5fDJV/Pl6IGfvXGzqAJUezqpcefQCJp49/bU
8Z8V6LS8yzdHPkkY1y+dFRQgCIu1RgFneR2K9JgIcHwuDfXvfS8JEhGG+1Lz
dK05G9CZcPsW3aEhYDS/U327cx08KnYEsn5jgIft5KzrwU1AxZcwu2zKAIOP
XL1EXdiPGp2FNy5RE0GNQHlrkMcKbz96ICyYXQpePxTdvLtDAp2Jyid9qbhh
qkS1nJRqD9C6eWDLfW4/7C9MVZyVE4C/P46OOu+6A7LL/+x1PyPsdZMe/Gev
u1JLaju9mR6ySB7JOvxKFO5cqlewulmIcCzbnvkQI8y+sW/hp5w4rDoTPHVW
pwXwR0TszfYww3PRdTKvfkhCJ13qfExXBZyDOP48bWWFM+3BNlKvZGDfINfy
n65vqN8n8g9xPTs8SZ7eOcUuD+374ksKWevQUYJnPoTgmdcjeOZjnKKJOEu4
4bD6E5bAir95ScvSa9y+AZCOyinrMP5AlaXmGrqPN4BBzENXuhNdoHeMg2Fb
eRqlvbd5sp1BDp1UHLNDzasR52zjidTsZeR08GLSZCsDvGH3YZqWpxlV3fLf
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
guo=
     "], {{
       {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
         GrayLevel[1], 3], 
        StyleBox[GraphicsGroup3DBox[
          TagBox[
           TagBox[{Polygon3DBox[CompressedData["
1:eJxNnXn8VsP7/8991vs+N7LvEtGihCyFRFJCiwqFUIlQpPjYd1FCJHskJJJ9
zS7Jnl3JXonKvu/5vp7v13j8fn/M+1z3nJk5c86ZM3Ndr+t1zXuTwSP6HBdH
UdSmFkWJjodkUbRFHkWVShT9Tyf2VzpC+WN0/kilE/S7bxlFKytdqgorqlF0
nVJHlb9QdZcrbS95oc4/VURRf9Vtq3pXq8yOyv9R9Sfr9w86TlXZE1TmAOWv
V4+imapzk/LG6vxQpRNV5iL9XkX92UFlUuXdo3ZOV5s7q2zvmvv3ttoYoPwz
lL+7jqna2kL1RqveUSpzkso8pPrtlPqqzC7K+4jy+r2Njn+qrdVU/nIdhymt
l0bRCNXprbSfyq+l41Yq+xXt6/yBqn+Y8npK/kjy7noOd+r3dKUtVa6Zrr9A
5/7U9TeX/LHkFurjFToep7Sh2t9U+U9JfoV+Kq2sstupblulVkq9dK1P1PaZ
Ster3fuUt7VST+WfobxP1O+z9HsDneuj4/fKf1fXeF1tniW5rjJPq8yROpdI
niH5BOUfLbkvz1ZyrOPtyh8pebL6sLr60EPlJ0n+Uam75PVVZrrKjFKZXyR/
rWuco2ueLPkQ5U8I8gLlXy55Tz2LN3W8Saml2hugdhhf1+n4g9I+avPG2OOL
/D3U31TtPCX5T8ag5CclnyT5f0qXqtBAtflE4fG4nlI31f1GZTpUuVE9b7X7
vs4vUVsXKKuJjn1U94DYZV7XuZOUf7PyblL6SflXqs7Ryu+itt7T8Xnln6My
e6p8TW1upfMb6Thfv09RmcPV5mCl81Vmnsq/oPLnSf5JfeugdB/jWWWvVzpW
+YNUdqDSuZL/Vd6tSsPpg9o9TvV7V3xvlyh9p/xFKjtX+UMln60yh0lurTLL
dJ17JXdV/o4qc5/kPSXPl1xRm4/z3vWc38s9Dp9R3fUkn6i616jtq5X+Upm+
qrdf4bF3gc79o7wXlVrp/Ln6/bfkayWPlvyC5Ld03V9U/m7JbyvvZKV7Ja+m
Z/Kerv2lrrGO2lo79bvbR2W7K62h3yNV93nul+9Nbf4t+X7Jq6vuTqr7gfr5
kvp5OmNJ+Ssrvx/jSWXf1fG3wte6mPGm9KjyO6rMa6p7ua7bXnl7KW2q/I9U
9nvJE1T+A8nfSr5M8kO65mFKF0tup7z7JPfTtX6t+H3ep/xPVf5kpSslN1f7
e6n9r9S3t3X8Q/n3K3/91PPBM5I/Vl5HnbtC8pPq/z/MX2prZMXf2XTl99J1
VlJb7XTucaW/lUYxXtVGX8nv8R3p90lK9/AO+D50T2fr9xSV2TjzGBivYyPl
76r8XUtfd5H6drHSI8rbWemHmu99mPK+q/nej5L8lc51ZsyqnXv0jIYon0n+
XuZyycfreA33lXl+nqDjqrpWJ9U5Tuef0z0cI3lj3ccxzI8q85h+7640WPLj
Ou6hNETyN6p7merO1O+71e4uOm6rNE75Q/S82vN8lL+NjgNUfgflXaq0Qv2s
1v1Nraq+XMU3qfQ7Y5V5O/ccO1vtRJJPVf23WJMqHpNl3d/7KLW1o8r9o34+
oHOtM3/LLdX+0cr7ofB76aAy7ZV2Upm85rHxs/JPqXnt+EHyNMkPSj5IZVqo
7Ok6/qH893Q8U+lRyRuEMuMkN9X111C6Wtd6n7VI+ReqXivJXZRKyc8pfaC6
FyvNkvys0ljJbXQcp+MKtdNNbeRVj7GPlHeV0geSL2VNVZon+X3mIz2HK/X7
Hcmp5Ak8E8kbSr5ccqeq74d7uS31kbloueTeKvem5CHq65+6dlOlFjwDvmXm
W5WpqMzWku9TG3/ruc3nm1eZzbk3ya/p/DnKHyP5XNU/XOlD5kDV7adzn0pe
prwbax6fzPOpjouVv7Guc5Xa+kJ5X0peu+r+HKtjd5WPVe5ryZdLvkHy8Nj9
2pTE3KxzSyR/peMaSnMln8/YVvpY8hdqs6r8WZIHsnZI/pw5U/c7VWXWUJur
6LhIxy+U31X5b+h3XamZyt+v8j/yvfAd6R7fVbn91OYSyW+y9ur8H4xV9ATd
7xqZ12L0mm1q1m2mSG4qeU/JBzEWlL5mHlP5RpnnbfSfZ9TmEypzi47vqR9d
lD9J9R7S74eV/zTzEnqG8q9Qve8yf89/8z6CHnJf4rZo5yaeZ91zx5OF9aJ+
KjNRvwfm/lb7qy8XVF33bv1ermMnpb8kN1dayjeu9g5UGqTfTXTsr+MvzO1V
fzN8LzvrupuE8h0l9634uY1X+Ytj6yEbxR4vP0musshLXsS8oeewTeZv5261
uVnN9a+hb5I7SF6Nscm6x73HviZ63Smp+7yN0okqu23p6+2S+Hmzho5Wmara
31XyhzpeoGdxnc6NV/m56Bgqf6nkhyU/ITlTOq/i9XGInl9nvoXEuuGHNeuH
6F4N81/k+YQ5kd87S34NnUTysKr1NNbURerD3pnXUHS0XWvW05qr7Q9ZG9R+
T6WVwpg8QnkvVD3vnU1Zxr/Ofau8TSRPVpmBau8UvceCOZ2+K/3GnBDW8ZeU
ktj9pZ009jWZu9ZX2ePV59/Urwlqb02lXOf20XFvdNfY3xt5q6n8kSo7SPkH
6nrbxH5/ic7VlKpKaiZqoXtZqHZX0X3soXKHZrYdFitvD9U9n28nzMmsBUN1
bFJzf7qp4N6x72VP5Y3VuR30O0fXD/PhIPVhX9Z4tb1I5zvV/J5OQBfWM78A
PUFp5fAM5+n4ntJarMPq4O9K60TW/y/iu2KuUt4R6qeqR9+GNXE3lT8Y/QLb
Jrau8UDV+gb2zoX8ljxAx5nYJJJvUVqFZ6F2NtNzmMp9KW+Fjpkyn1b+YF3r
8Kxh2YrOp+8164dnKx2HDqL81yT/VPF7PIc1WXVvU16v2O+8ZP1l/sCOUHuP
q8zgmvMfpF9Kq+pZFjqfKa2j/A9j38e6ktvGfmdZ0Hun8P2y7uv4KfaD5O3C
/LemyvVQW92VVpf8CN8IY0W/T1YfFkteW/kbSr5acp11WO/oMcmP6SbX0kNd
m3lS5Qepr4MyX/c4ycdgv0leEO6Ndl5VuVeUbo2t481UuwOV/4zKb59Zl5uu
41pq+5Cge+6QWCdcS2XaSr5L8uXqQ3/d+0669kvK31l1bgq62euqOwN9TOfe
Tq1roVu+p7R9Yj1iu8S6BLruO8wp9EvHV5XaSD4t9vFGlblE1+qga22s9taV
fJfkg3SdvpIfUf9nSP5Q1+maWR/urfwbWM+wpxPrI9hZb6peZ517Rf37C30s
8Xw7Wnnv69zvyl+CDlu1HX2R2lw58xoxQGUPUTo0sq6FjL61aepz5PfX8UC+
S77H3PW7BPlzpYMSr8tdEttgW8deCxkHPLPXwnNDzzyY63Hvuv6S3Gv6l+rb
xKpt6U/U32vU79Z6Jg+m1r3O5R3VbbOx/nynYwul4yPP9awZp0a2FZFZO5jD
Oieex3qVUcPHxXy7QvIjpe3RS8JczzzfWNdqL/mByGs7azy6Abri27n19teD
Xda14vWKdatN5LY/rrl96u6UeD6JGc+l7TPWE651TOQ5hvaZZ7ALTlO5N3WN
D2peIzqxHirvLZ17Q/kvKe9lpS1Z13WtQufaqM0Z6vNe2HSJU6vE9viaOv8V
34HKnBq73nj0E/TW1Hb3IOUN5v2qDx8rr1tmXfGG8B7Rr77DTpB8ZmSbj36x
rr2r8n0Kfz+Nda0n1M85mdedBcyBieckjtPCmks7Dbpx7OueLflG1X1Ude5S
3SskH6p2dle7/cBvlHrxHHStfRPrbMeq3Ae55+TO6B26VvPEY2RQsIuZ95hf
mBMOVpuzJD+k82cmob3I7fUObR6g4/5KnSUP17U+UvsroTOrn3cmngP7qZ2R
ameo2jmwbpvnHMa95GewQ7F5JJ8KpoHOqvMzVHdj9Csd/1E6lvUwyJnSH+jM
ocwDaqud7ndq5LrkM5cOV5sv677OY2xgazJWVP4s9TPTddpFzr9A+f8yz6J3
Bj3nOGxqdFeV+0Ztf1raPhqm/JcknxhsIfIeVPkuqftEf/ZM3W/63FdtHFC6
bzewfqutjdAVwZYkXxV5HeK7+JbnqfaXqc58XfdY5e+n/A0j68XMCejkn6nu
QrAF5Z+ma30qeVt0IdVZIHlVlVlXZfdROkr1rlaZpfQ3YDbMAweo/KGJ8/aP
XGbdzPnYIkPCHDiTdTrxWnCt+vakxscTaqtf4nfPe6c95heuAa6zuDS2wzgd
FMYqaxhr2WoVr9d7J16zr1O90eCHmfUv9LCNVX6o8megM6nNoyXvp+v2yD0/
9AzfPs+mb3g+HPndmLkXO0Pl+3BvqvuOfj+r9jfT8TPlN1b5w5Q/W/3spDbn
K72fu083q/290AUr1onQjTKeecX56Cq0w3rdPdgr4Gtga28GmXc0Jvb8hk5e
17UeL71+dgzPFluvlfKfVv7rmXW/VWvWH79RX57W+7hcdXevWd9C1yJvu8z5
lPlW6ZjEusFDSmtI7qGy56jdHcDSEp8HN3hK50+pWg9Jdc0fJU9FHwXbUTpB
5c7VcSv0CvXtfP0erbSlrvWlrttT7b0meXPJmymdzbeITap0kuS9WXtrtv2O
1O+hSter/Kro0cp/JTKW+Bd2oM79or7/qvRyZHt8ZGIcZhY2svInSv5ZZRdU
jTNspPbL0v36FywcnEry1pJvL4zxbqnyZ6PXVmxTPCn5CMnPqs3vVW4440Nt
rAQmKfkMXffYxNgR9z8qcT/B8ZrqGf6sOo9krku5PmrvJ3CbxHbP5ML2Gvre
hsyfyt9J9T6TfKTOjdfvZqkx+d1i22/YbthwmwT5A7X/l9o/TWVWDjjPZOVv
LHl21brT8TVjcTdLnqu2R+gaV6jOw6HNscpfBk6v/It13QQcUml1xqrOjwj6
7VmxddvblVapGQ+cwtyia09Rel3l1kSJZkzSN55T3f07BR0hsY3fTPnrK92o
39vrOENt1RKPDZ7BZirzWRhDjB/eN2PkVWyNmm3zddCFS79XyqE/36/UiHaU
ty46huSFjK+q16xlrGWZ+7Ze1ffJPXLN88J10dX+UDpZv89KvG6xZnXSfbyh
8i/r3Om8e6VJavMqtdc2t05yvPJGKN2q8j8q7yelWyT3VN3zdb3TVPYenb8o
MYY2RsexzLMqc2/i9w02uFfd60V7vYt9JU9Q3bGq20vywZIPRHeLXZ+6+G5O
UPo5sX6Hnodetw/6re5/19zjiPYHovuFMuiB+Gzoz0Hon4nbBKMmb1zIp95l
oe5euv6qutaV+v1Q4iO+nj661m06dyPzi/ImKB2t8lso/26VPzgzRn95yP8z
6MmPY7PX7eN4Ifd6M537io2XJnoGh0XGRqgLtt8ROxXMNnF/VpM8JvK6Dm53
teQ9WLux+/CBlMb1OEfdRpJPUZkHE7cBbn+djtcqXaf8K2vGr/aM/Zx4XuCz
26rNOarbU/1snnp83YC+p7yayr9UsS6Sq8+TlL9O6bFIOcr/wpyWhHqhLt/j
SsxvFc8B1TAPrFf6O+Ebmafjrrr2cl23XnoOuiB8b3x3d0T+faFSh8h1Jivd
Fvn8TaFMPfE58n8L3+zxauMGsA31eZDyH2MNS6zncLyF9xz5u7pVabbkJ2gj
MWb4eMgH85+ODq7ne3jFz/qa8C4Wxe4ffWua2UeF3dRG9/Si7uWA3G1MDe2/
rvK3J14Tuc40pbfR20PfHgr6DGXAAxkrdyTWG9cIfaM8eYylOvm6xvlK31T8
nTxdsd+K+f9A9XnN2Pjifv8fxoidgA3SNGBYW0k+D32sarxxS9Vtg76EfR8b
GwYTa6W81rnrbx3s8VWV3yO2joJ+coXauLuwTcd62JR1UddJdIyV1tf1j1Mb
x2PvxcZ8vgEnVfntQ5v0cy30KaXFFX+vfLfgjWCiYKNN0M10nS1q7kPXgP/o
dDRRfwrJC5j3gjwh2FbcE7pHs3Dv6LRfY3fo/b0ruXPAd8B2FmIHKX+O5DN1
PEupJRcAYwrPBL8hPmh+Nwl94xnuor7tqpSpjfeUdlfdRyLjU9VQd57yO2fG
6vGnPqjUO7KPAP/AvpH9q8j4WMEhbqk0LEMNOBTYKOtsl9h+X/DWh7GZCs9p
Z2R+j9zrHJ3vrnSr5EuU94/SC7Fxmx+U1ousd94c8CLwk+9YXyRvG3CeNfkG
lTezsG96fmw8C32phe6lxK5W/l2sT8q/q2K9C18UusRUXfO23JjWTcp/vLCO
fVlYI/DLLI+NyzMv4aPGF9cjMobwaMW4wd65cW0w7Uslx2AqOv+U5N0kN2aO
V/t3FMZXW2iMtFSKVaY1czl+GO6ran8nvs6V1F5dqUmY45mTG3BvnX+u8Jry
eWzdm+e8g/IranME45YHhv7D3Kvn/3yY2+8CF1H+aUEnQjdqG9lmXz82PrCR
5C/4Hd71l+G9n5Mav28v+R/W+IrbPJ1+Kn87yeuC/ZSuv7bkLSR/LvkRXev9
xHWmFLZDKQ82vqHKXSJ5RsU+i6ZKm+r8UtY6dIbU/AKez434EOr2B2yg80uw
n/iuVX55xfPqMB1/rFj3xjfRXKmie7tM7aye+d39DyA28zyDf6Sx3tOfFdth
b8deGzcIGPIfwU65trD98rzK/FwxhraJ8q9R/gY8t/BOv9e5tsrvoH42AU+X
vIvkFpLP13ULbIvIY+ef8AzvUX7zzO9lWcgH+0UHBOdEDzw581zHN32K5P11
3U0rxhNvqhgvbRzwtx8q1kvRo3gW6BuLdU/3SJ6letvWjM+00nW3APuL7OOA
x7IG82/u+Zq5uh0+Y6XGsX3A+CfwTeCjaBzkTPUOrVoGp9owNja1LbZz7rGF
n4S2d2F8wknJXY65AHueZ3Iq32zmMbl/uBbPZBv6Anao3y1CeeZJfDIHBr9M
+6r5FmA+7Zg/asbNzsl8L9gd50o+LzMX5A6Veamwnxef5bcVc2Mmg58V5q58
lvh9Mj7BZxeHOeflir9ddA+4Lcx13SN/h8j05zHdy9a61kWR+7x2uMeta9at
0avxc50b7Dh4GeTBzfipav3kNuVdr75Pyo1PP5raNz46sp6XKP9fybHK/8r6
JHmBynTPLMNxgGMDzwF8HS4NGPvzOt8ht48WzARODrjHusFWZcw8rDJ/Zv6e
Hta9/67rvyh5l9jPZIDSHomxRzDIR3VMEutXD6reH9i1FdtlR+TmMzwZe2we
xb1i/6o/b0X238L5AZd7TsdD9b10pB+Ffeh3Rvar4jvBbzJDx63q9pviowaX
m64yPdHjC3MrsNeGqY1reSdV27xvqExvsIXC9sJP4EVVY7YnqOz/cvM40Lvw
DyxQ3blqZ/fcfueXJe+Wm/NRU70zdd3nVPdOHVvU7SeGk/RqZi5IUTUv4tnI
+Gbvwvj53Tq/U26s5jfJ++bWaddRH09XneYq3w3cTWlfdBvVu0jp98R+HPzl
+MoPUdsDSs/JY2NjGegSv6iNM5RaSD5J7X+RGW9hfj5T+S0Ztzr+Vvp7Q+9B
j2BtOl55/ar2FW5R8Rqxm9IkXf9p8H/JN0h+tmZc7mDwBKUd0G0Yz1X7wRvp
uLRq3ADc5I3Mfnx0N3QO9I1XVe9YPbexus8nE/tMPqkYlwWfBWP/S/KSxPgb
dv3CwnbfzMQ441yVuUdt35tZH/6qMO+I9ztCebXc2OZOGhM7Kl0Yeb19Jvea
gs8a/yK+xc8L8774rvHt/VYxh+AVnR+lfl6IjiL5cMl9JH9a8fqAb++vwvw0
MEb4L3DhwNLfVXvLCtvvh4CN1by23hJ0bHzlrCHvlF5HPlb57wvbEaw5H5Ve
d+DdvFNxm9OC7s34XIyzqPBcwZq1Ws1z1JuSvyyMUeBznVcxbt8Y3bbmdXMj
yasz/0j+UvJKVfteG6nswkqDCtHwbYN1wXeaGmwQuA1Plv4++TbHBnuW9eXP
qnEbdC2uc0LV12IcoR8ylli37qzY3odH8UfVc/7NhX0w6Op8tx8rfRRZHzwx
6IS/VY0vTde5Havm5+EL+B5Mumrf5fo6N61iub+ez/Gpr9WMeVJpC8mbV/2d
8I1syBpbcfsnJtbR0c8Hawx8qOP7yn+29JhmPMNXeqPie8dWGBHshbtqxliw
FxvVjL0wPgdjq+Zeq48OuAccEObE1yr22YH9vVox/wqOBvYaGE7L0pggeOAR
uo/jM78vfPCsQ2B3I5X/j1KzyJgJeAlYKPYu+Axz8j265r3opjq/QnX/iT3n
wAnL9Nxfia2rwBNlHWSenxPWPjhY8DiYJ7urTKEyl0q+TvXuK42TH4a+WbUd
tJxxWDWONI17Kcx9mgsWEfsbb63yXWu203rl5jeMU5n9dO65inXgiQE3mKXf
Q/A3ZMZ7qzVzh1iPrgrYyGx0HrX1fMVr7p28q8I8qx6siUqp0i661tzU39cL
iTlt8Nmeqpr3ybsF+4Uf9x+uPjC0ia8VXILfe1fNk4MjhwN/QGwM843UbTA2
wCXWUhqq303Vl80K6xS7xsYDByu/t/rzfGo8BL/RwRVzNsBs8HGC24CPflNz
+/hYh9e8huJrH6LjtZGxC3CBw0PfTtAc1Tb4EL9N7D8aoms9kRkPQY/FFwwH
7y1df9fM/lwwlccyz4EvwE/M7MOdVzWnk3noSeU/kNnXxnjC90Z/lqn9OzNz
aAeE8YOegL1T1iyDEd0h+TDmMt5DZr/bzpJ/i52PH3BYzT47xtvtNfuyGbN/
x77HK9Br0P8kH5S6X8yNcJz+rXn++Fb5+2Xmg8ELu6ZieY/YHDI4Exerz3/z
DmKPW3ByysIZW5DZZj8vdl3ywRqfy7y+zFf7e0ieGXk+bKLn84J+vxXbJ8F3
OAPOXtU+IObsNQKe01nXqVdty8OXg3OCPQ735iOlzyL7Cs4tXYfv5vqKOTlg
8GDx48P6dFnFPLclam/lqudq5qvz1J+38XdKbo3vVfKLif2/p4b57YqK+W+s
FyNq9u0Pis2fo02wiolhPpyldrZUO/My8+jeyzw37qZ6X6j+85E5de8qzY/M
17ukYhxjWmpeOTbp/nqG43Jf50Xl75R5nWKtHFUzZwE+3juFxwZ81YFVf5Nf
44PJbY+3C3YH3z0+YHzt4LE71Gznwu+GE/8zmG7FfM5HC9uKYBrYpdhb4Ku/
xp5D1gz2DvbAXam5zPCUKE9Z7LIv1PZdhW3Udiqzg9LJvN/Mdg120jTJt2e2
LQ5R3tm5uZyH1G2Tbpabtwa3D14fcyGYGPMh/hGwr0aSV2OtyM1LvVrtXaO0
V8U2PbED2I/wbL6umHMOr+L7zD5KOEJ3FrbhuXfuG94OPGh4yHDqHpR8kuS9
JU9mrNXNbYWDCZaFvvau8s+qmwOxXc32I1zy+wtzkrtFxtW/i42ZoMNsUJr3
iT8c/zpzG+8FTiS2XYPPK6x3+HuGh3UQjgccaH7jQ8Y/mwWc9u6afbUvYRPU
jKm+VjPvlrZe1nvokFnX2q3q2Abm0neU3ykzB2ZOYu4K4/xFldmxZr/L21X7
H+EW/5qYl4xN0UZtbFU4jzViceE1t9DvzWP7/zcLx2mRMcYG3xvzTNV89/Mk
v6Rn160wd+ENHU/R/Ryl/K4qM7+wTfdCxfMc8+c09L66OT34Z+ETMB9O0e9B
2AUV4+rwklgfu6iNPZVWST33MAfpdPSLyo/KvaZOwR8UOP+3ZLbNiX94tTDn
/0iVv0zH5YXXRbh/XxTGO/BtgBsyR8E3hi/3MGtfap88mPetNfssfgu4wb2p
dYn2YPKx/Re31OxT4DfxBKeV9ldsFPAF7H34V+jW6NXbVR0bABd3SsU6FFjH
x4zR3HMseAIYCnVfVJsfluaJwKvk/oYpv2nV+kqDrqK6n2TWkRgniZ5Jy8x4
JP5vfN/glkcp//rMGNqFkq/NjPviy8Gv1C+2fxA/IXE6N9SMUfDdgmWDL50M
zpzZnmpZtX8K/HlEbt4wttJOsfnV8GDnqI22pXlP6Lc367qbZ9ZniMfhvV8r
eXYROEv40PAvM3/p/DalOUN3pPYBjAw6GDFBPVV3Umo/xKDIPBF08U0iP+e/
VHfTzPjh36XjkjZPHEsEf/0onVuY2T4Ad4UPTz7Y6fKaubLEJ7VN/Ywm69g4
sw4GrgIfFy4uXEB0dPTzrur7Yan9g+gYjL2bI69r2F+sI2CeS2ue91iD8FW/
EnldW6Vq7hNj5caKOZasWejwrN3V3JwB7BnwqFtSjwc4TnOV7o/NF4A3gG4J
Lww+GNywnRnHsXnvX8fmZZIPNoyvGB/iBuCCAd/kvRDTxXMD57lZ8sGR+ZJg
zMQRwOWHqwufH0yXsY+vbRP1bQ21s6JiDjiY81KlG9TfDTPrz+CcxJAxhx+J
jqC0MrqQylyWGS9lHlta2B+9Qm2emhlTxZcJxxcb/y61MSqMtxfDPTZg9bFj
khjPM4MujX51guouCZjrRVXjhOBe+PPhIYCtYWd9mdnXgC2I3xT/5hjGVfX/
+Q04giePVNnPldar2DYEa+AbAeMA8+A7bZ3ap0U74OfnBuyOuBt4suhOxOnA
uUD3GJ6ZO4UPGjsVXxr+ss9U996aZbhOcJ6wl3sq/5PCHAZscfxe+OO+TxxT
Am72nc7vXDNWNkH9WTOz7wPe8r+FdT/0LjghjNmOOv5TeJ6s6/mfkRunnhYb
C8eOW6x29smsp6G7XRjGOX71s0v3Gx8HeCOc1Zap/fSbS7646pggxtEY5Y/J
zO25o2LsHgwBbkXjgBW3Aler+Xs7Efspt707LHV5sIijY+dh/2IXT9Gc828a
/FoV23TgTfir4AGCNYHnguWCFYNrg21iX48t3S6+rGZhDlyk6+6Z2y+DLw/8
nXx8rNfVfF+fkJ+5//ANrq2ZowVHDL4WPDG4VBdk1qUvUBu1zHjChZLPz+x7
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
DxAvSaw/+xjPUf7/AVjBn+M=
              "]], Polygon3DBox[CompressedData["
1:eJwtnHkcFtMXxmfed/ZXizX8RFmyRhHKXlRESsm+ZCtKZSsiKm1ECUlKSXbZ
t2QJIVGUJUvJFsmWtcj6e74988f9vPfMuXNn3pk7957znOfcxqf369K3EgTB
o3EQRPq9IQ+CA2pBMC4JgjekWKbj16j+iurLpX+1CII9pH9Qx7uHQXBdqrYq
FZ28nfTDsyC4RfoTdGw76S/X8S90/nHVINhT+gXqv7X0r+vYbjrWUO12VFml
+nnSn6j+B0i/v47FOvcEte+gY99Lv1D6o1Q/X2Vr6U6R3E73caTaNpD8vORb
1O9klWW6340lfy/9GMnzJDfX/bRVfbzK25InS35M9/u9rnGG+j9e8jeSj9H1
Y9pJfkTX+knlVskN1d9bqsfSfyP5Csnf6Nz1JX8t+RT10UPyKJXH1P8ROn+g
+jtO+kL6zST/pfu5UfUF0v+u83/TvfdQnxvr/h+Q/KfkfpK3lPyY5PN0/hD1
t4nOLVQGSI6kv1P1jVUOVX9H6ZzN1f4Ftb9Efb+vcqjuJZW+qXS7qfzO85W8
XO0nSb9U199U8hs6b77kZtLfrvMfUt/fqkzUsY0kn6b6Ljqnrfqoq7ah5IrK
Yp2/gfRH6N7GqyySXFF/u6k+VOV+yU0lP6DzVkg+Vv0frPbt1e8ElQ8q/g+n
qK8b9HwOVrtC/f+h33N17H+qP6L2H+vcI3kHOv8Zyefr/x+r9qn6qKPzn5Z8
jdrMVH8TpX9XbVepfCL9/3hf6mdX9blG598n+QnVJ6v9CrU/XPKH0r+pts2l
f1ZyT+muUnlc+iNDv5/put54/W6ktp+pdFV9C/3OUfvXdK1dpV9JP7wvyXtJ
7qY2W+lYC/3uqfKX+r9J+relbyx9l9T/8Rld+3jVt1F9W+nrSN9V5Te1P1zX
/0q6oyWvlnyr9Eer/WiVl3V/10if6d30lXy15AOlf0pt/1V5Tcf6Sf5V5w+s
+T/y/Orrvx2u0kbtR+r8OXp+fSVfJnmq9I3VfmuVSyQPljxT+ik6/xIdO1Xt
u+l6vdTXUOmXSn9OYvlKyTdJ/4ran6/+Lpc8TfpTJO/N+5fuV8nXS+6s/r5T
P3vp2Mjye7lQ7U/j/6l+jvSnM2fo2Ov6L+dKnqLnc4b0++u8nnx70t0j+WT1
d7HOGSf5F8mP8X7V/gz9HsfzkL6r5DU67xRdb5bkjdTnPNXPUHlB8gnSb6I+
e0r+W339o3Jx1f/ndOm3Vfu16n+N+vtXuiZq/6faX6I2nfV7v8q/Ffd5he5z
c117sXR7qf2D0j2sEkkew/tQfx11fqg2V+rYqeqvh+TjeY7q40NdazjzifpZ
wPiX/KPKZow5yZ/r9xrpm+j3DslPqr8x6uMsXfsklZtyf5+Xqe9Y8mdqN1Tt
f1H/09X+NvX7iupNpD9L8uM6/26d87euPVryS5JPVPsGanMOz0Pt/+F5q31j
6S+S/hTekdpvJvlhXes7lWMTz7f363rtpd9L+ta8T7VvJ3lPyV9K7qD3cKHa
TpQ8V/Jd0nfR9X7V8Y6sJ5nni5Wq76nysPo7TfrDdE47tb9V+qMkr1L71tJ/
ztiVvFT6TrrHj1KPh+vV/1Vqf6Xqw1Sukdxb8iTpL5Q8UvKukj9Rf4Mk3yL5
b96X5AGSx0j+UfLZ+v9n61r1dK088H/vr+vNSvwMTlL7S3TsBtUHSb9U/Q+W
/nu+EclLJJ8u+QjJQyQvU9tPVCap/SzJ+/E9Sn+Q9Dvq2Bfqr42ONVX9X8Y3
64rKBdyv7mHz2PL5XFv6C9T+JLXvKbkB40Xy/rn7+kvyTqq3VWkmub7ku3U/
k3S9U/R7GNfXu7u25jV4mZ7fJur/JeYOtT9a+u7q7zCdf5Dk1ZLPldyd+Vpt
Qt3PYp03WvKW+j1f+or0dSV/pef2huTmOvdQlX10fiu1/1nH++jc4dgWrM9q
P1j6W0v74g9d/yHpK7qXs9X+Ud3fz8xpOraN9L+r7VqVi6S/nvHCt6VrXyf5
aclL1d/2aj9L8qWMD8k7SH5G8hDGs9o+ovPrSn6C70f1p1Q2lPyO5JvUfiu1
f0hyS7WfTN/6P63020T6QrqGKjNYT6Rfj7Va5QHJD0i+M/d88RTrlf7T5qo3
UXla8pvS78N4UX911N/LOvaYdL+ovKj/sZP676LzG0l+FFtC8iq1e0jH1pN8
l+RNpdtOZabkN9TfE+X9byT5Fsm3qv316n8//e6g9t10vQ95/tJ/FXgtHSP9
zqnX1BX6HSv987rXKdJvqPuo6dicqte/GTr/Nel3kXyh9PdIflXyTlW/7295
PpJfqNh+uEjvt9CxF6TfUfJJicfTNpL3Vn/vSV9f+rlVr+9fSn5P+jaSX5ec
qT5TpYHkumr/qfRvS95b8kvSX15+P4dI/kfy5tLVVX+vSu7PeGHtVqkveZTk
nzSe1pd+nuRVrA+lvp7klyWvr/PnqGwnuY3ab6jns43Kk5Jfk/w/nV/R+ddK
PlntZzCXSb9Q8lvSH65zp6l8q///lOTHI3/7Z1f9vf+g8++UvEr6g6QfI3kL
9feR9AdKnqb+blf5Vfpz1H46dov0H7K2MF+X+t+kP4r/o/rPKucy/rHHdb3v
dE4PyZMkP6N7q+n9PqBj1zK+pf9R9d7SXyl5d+w69f+m5Hbqr6/uZxPJb0tu
IHmV+v6R+V3ydYHtwI2lX1S1PXiT5A0kz5d8h+4p0/W2ULmf8anzD1D9QJXl
km9Q+1nYi7qfe3Xexdj3Gj+dsJ913e+x53WtfdVmqdofK/lZvqea7TbsNewA
7JFPq7YHBun8l3TOVlWP70P4HtR+B7VZqWOt1G+s+i18D8wn5XxxYdXz0aU6
/wXJDav+nh9R+23V/vOq1//vVV8t/XlVr69XZV7PvpZu59DPdRu1+azq53s8
tpTuYYXkOyXfIf1dKj/xvpDV9uqabYK9eb/6vbxmnwj7oLnk3VX+qNq/6KK+
LmTO0P/vLnkaOsmjItvPZ+t6wxlzuu/Oup83sf3V3zTpe2IfS34w8rPeS79P
YztIP1X1M/EPsK0l3866xnqt30N0Th39dlE5jG9F/e9c9Tc/Q/WHYttK2AgD
pH9a7Ubq3Fb6vVe6RyP7Qierze3S11P/gyL7e3dKri95sOSWtMHuUX1f1ibu
U/fTQPqJqh+vYz/pek+pz3NDj/Hlan+I9DNjj+/HIq+ljIVPpP8Yu0j6JyKP
70+luxS7m7mvav/naZ17fmgfoI3qi6UfJLlasT37o+SbQ9uwR0teJXlCaP9v
L/W3J30GtmHP5VtSGVbxGnaa2p+m9rdJV1MZp/dzhO7nVB27VfLB0r/P81E9
wqbQ/XSQft/E9ivjD9vzp9BjivH7Cu8qtP89Qs/nMLVvqfP+k74efoParwk9
h76p6x0s/Vk6NkjtFxb2rzeV/Iva3KP+7o5tm5woeY/SH/lb57bXdX7Q+Qeq
/cOxbch9dF4r/InA/v3zaruJ9DdHtqe/VfuNJd+o9odIf7O+j03x92PPr8vK
7/FjtZ/NfC15x5r9Jvyl5Wq/k+QT1f4/ybOl31nyculfk9y0Zh+cZ/++2qxU
fZea1wnWh7alv3WM7vEM/d+PCtvjy0r/N2O9r3ndYL04TPrtJX8i+UXJ47C1
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
TYyAeMTUxL46MQqwTWI1fGtgnPBNLqg5rkM8B3vqfMn3JOYUgM8TZyLeBGbf
S/Ldkn+uGPPHPuJeNgx8jxvEHkOMnb9Dx7LhL8CtIaYNtxb+KLF+OLbg5/cx
p1aMmbeM/Q55d8Sr4L7B54GrAgcOPuQjkuOqY5Dw+VhDWDuISe2N7ZkYe8Bn
ejTx/EYsv6iaa8f8Nzow5+68xO+vWWAOJPH3E1UgNa8q9fAjwYp5x4PU/+OJ
fQd8COLbzzIWpP+vYnvjOJW3Kh7j8DOfS4z1ba4yKzf/62nWdMn/6twLImMR
YBJw6S6suU/i5cRViZ/TN/FV7PuLpH8qMedodmLuD9hBo6rjSQtix4rwaS5L
HU+YE9hnwj/Cp3ogdgwwTT3/wQ0FM9pF+lE13xf3A3cF/jPcFDgs/Jf/WAuq
/k/EQomJ7pM6Zn4gPmFqrJkY6BjVr02NTePzgYWBiVVT2+Rwr/ieuwfmYMEN
4fupH5oj8nls/pxOC6brWC/V+6rfO0JjnHBP4JcsqZiDsiH4XGJuChgRfNRG
qWP9cEDAu+EYgffk+q2r/kZH9h3hXMKtgT/zQ8Ucm4NKfJy2xGz5f3DLtwA7
Kd8d/zcp3+HAxPZnB9WnV2yPwkmCi8Sx/rG5xWDRxIOO07krEsca4KTXkf7q
yL4hnPdjU+PUYMGNI3OzWd/gZsLRxnfEh4QnBT/qM+l6xOtgmeD20OOMOYm5
iPF2s3QTYuMtHfAxC/NBiQvjs4NlgGlcldoHh9sCXyWsmuPSKTZXGewITAhs
BYxlq9Q+MrxUxse2gTFMuOPwp8EO4ZB3LswfezcxZrQ4MX9rXmD8CGwM/vHk
2BjZf/hmrAe65j2RbYPBsWOt2AjwnbCHW4R+Z3fpWn8Wjj8Tr2auGh2bi8ec
xbeNPwY3lG/888RYLFyPY6q2q26K7MtgX8E/WVs4/t0+sH+MT4svS8wKfGO9
mmPoYCyXl+vXFqH5nXynfI/483yvH6u+NLZ/Pknlvdj25TjwW3zM2P4MeN2N
KlPV/+98M5H5sMdgS0TmTq/jL8S27+E7wDnJVR8R2RfckfVTz3N1Yf4M/CH4
B2tUhkTm04Adwym4PbYPvbxw/BYO0AB8gNjcnzN4P6HXhfGxY72sD3cQK9E5
d0b26eAuwGF4JLIP94R0/6jcLbmv5EnS/y35Lsl9JM8s/I55t+RvfFU4vgxH
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
3Az2z/4C7GdArgI+8v8B4Q2ANQ==
              "]], Polygon3DBox[CompressedData["
1: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
yP0gzk7skvg+4F/INxerhz3D9yu+/wNqHKY4
              "]], 
             Polygon3DBox[{{2204, 2203, 1423, 1170, 1171, 1424}, {2388, 2724, 
              1331, 1213, 1212, 1613}, {2648, 2713, 1283, 1148, 1147, 1850}, {
              2241, 2727, 1338, 1223, 1222, 1460}, {2193, 2192, 1415, 1159, 
              1160, 1416}, {2787, 1998, 1997, 2786, 1900, 1901}, {2161, 2709, 
              1272, 1126, 1125, 1383}, {2255, 2254, 1469, 1222, 1223, 1470}}]},
            Annotation[#, "Charting`Private`Tag$22855#1"]& ],
           Annotation[#, "Charting`Private`Tag$22873#1"]& ]],
         Lighting->{{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
       {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwl0rtL1WEcx/GvaR0v1VEpaCr8AyyCpi6EECFkDQ4NFmHaUFFKW9ZqeSG6
mUdwKNIUg2jyTA0iFk5C5TE7pWZLU/eEIBp6PTT8+Lzfn+f5Pc/zu9S1dTZ3
lETElOvwuojEu2UpaJS5TES1bg/eojtWEXEU79Bdk8PGd+IefED2lUfsMq8J
79Ptxc3yBH9orJFPu+c8v6F/hbvwbVzEvfggbjPvuL1a8JCuQc66v1M/zq8Y
u6fL46s4h5/jT+b0m9PK5/kh2cc/l0UU0p74C17Al0ojbvL8hoga/EZ3iy/K
wvqIu7hW/5Yv8AFexEWcw1+t844P4W/4Pf4ul+Sy7gdexj/livwlP8g1uSqX
rDNs3lZ7fORzzrrCt3mG13xcX+SVfIY/4ov8r/c0yUd4IZ2Dj/H7POtdzOly
6Vy8nM/yHl5TGTGom+GXeZYP8Gn+0hrndHf4Mz7FW3g/z/NJfoT38qd8P76O
/zjbE17Pu/lv/phv56vpX9HV8nnPltW9kKO8wzvYzC/KTfKC3CgnzK9K39c3
GTXXEeOsMUtFl25EZ4s4o2t3ZdJ/lf4XbDgeWPs09mqjAsNoJRls6TiFy7Bb
4mSaVPL/v/8HbeNlaw==
         "]]}, {}, {}, 
       {GrayLevel[0.2], 
        Line3DBox[{265, 264, 2286, 414, 266, 2402, 620, 231, 2804, 1144, 234, 
         429, 2299, 299, 434, 2301, 307, 439, 2302, 318, 2812, 1189, 241, 
         2424, 658, 244, 2310, 453, 348, 2314, 457, 2315, 358, 1231, 2847, 
         250, 666, 2429, 253, 472, 2320, 390, 399}], 
        Line3DBox[{1121, 1377, 1542, 1378, 2794, 1688, 1813, 1814, 1390, 1545,
          1391, 2801, 1790, 1401, 1512, 2894, 1402, 1145, 1290, 2807, 1158, 
         1411, 2871, 1549, 1412, 1698, 1819, 1820, 1421, 1551, 1422, 1795, 
         2950, 1432, 1521, 1433, 2813, 1190, 1322, 2820, 1201, 1448, 1557, 
         1449, 2827, 1708, 1827, 1828, 1456, 1558, 2906, 1457, 1798, 1465, 
         2885, 1532, 1466, 1232, 2848, 1478, 1538, 1479, 1834, 1835, 2957, 
         1747, 1749, 1748, 1252, 2860, 1488, 1564, 1489, 1492}], 
        Line3DBox[CompressedData["
1:eJwNzz1LQmEYBuBHOCbkr5D+RL+gLYQaJBoEdWjKuXAKdCxqKh21pSh3dS2X
alCCNg2nipZIcenjGi7u57nfc17OyZWqW/upiMhTSiLK6YgJFT5WIworERe0
aDLTRyZiMxuRkn+6AT127Of6vvnQXRNZs0/lK3XvrtvfZYNdXZtLOnzqTmTi
nmNZZM/zTf0XLX5901B/xz1p52/yytmCbfu1LOtu6HLLUld1dmbOuP9UVujr
N/Q/csCT7oED3aN88R9r5m/znAVH9pFnE/NYPvMP0VE0LQ==
         "]], 
        Line3DBox[{1123, 1381, 1543, 2903, 1383, 1125, 1392, 1546, 2904, 1394,
          1934, 1935, 1936, 1851, 2960, 1850, 1147, 1291, 2808, 1159, 1415, 
         2873, 1550, 1417, 1170, 1423, 2875, 1552, 1425, 1179, 1436, 1554, 
         1438, 2815, 1191, 1821, 1833, 2956, 1823, 1824, 1825, 1826, 1634, 
         2921, 1613, 1212, 1458, 1559, 2907, 1460, 1222, 1469, 2887, 1561, 
         1471, 1938, 1939, 2978, 1940, 1868, 1867, 1241, 1356, 2830, 1253, 
         2861, 1494, 1565, 1496, 1497}], 
        Line3DBox[{1128, 1384, 1505, 1274, 2796, 1129, 1395, 1509, 1279, 2976,
          1139, 1852, 2961, 1285, 1150, 1818, 2953, 1294, 1162, 1609, 2913, 
         1303, 1173, 1426, 1519, 1310, 1182, 2841, 1439, 1524, 1317, 2977, 
         1194, 1860, 1325, 2822, 1204, 2844, 1333, 1215, 1461, 1530, 2882, 
         1340, 1225, 1472, 2901, 1535, 1345, 1235, 1869, 2964, 1351, 1244, 
         2853, 1832, 1359, 1256, 2862, 1622, 1366, 1264}], 
        Line3DBox[{936, 587, 2797, 1131, 285, 2696, 1102, 1031, 2806, 1152, 
         1296, 2809, 1164, 2834, 986, 987, 2619, 597, 945, 2592, 598, 2699, 
         1108, 1040, 2824, 1206, 994, 2623, 995, 605, 2829, 1227, 2845, 376, 
         1114, 2704, 1049, 1246, 2855, 1003, 1004, 2634, 612, 1266}], 
        Line3DBox[{1132, 1756, 1757, 2798, 1758, 1397, 1510, 1398, 2802, 1728,
          1726, 1727, 1153, 1297, 2810, 1165, 2835, 1305, 1175, 2838, 1311, 
         1184, 2842, 1318, 2816, 1196, 1327, 2825, 1207, 1335, 2828, 1217, 
         1777, 2945, 1778, 1779, 1474, 2888, 1536, 1475, 1746, 2938, 1744, 
         1745, 1247, 2856, 1361, 1258, 2863, 1367, 1267}], 
        Line3DBox[{1133, 1815, 1816, 2799, 1817, 980, 1626, 1608, 2803, 1937, 
         1105, 1859, 2962, 1858, 1154, 1885, 2970, 1886, 1166, 1890, 2971, 
         1891, 1176, 2839, 1895, 1896, 1185, 2843, 1900, 1901, 2817, 1197, 
         1905, 1906, 2826, 1208, 1910, 1911, 1218, 1829, 2955, 1830, 1831, 
         999, 2916, 1640, 1619, 1941, 1117, 2966, 1876, 1875, 1248, 2857, 
         1918, 1919, 1259, 2864, 1923, 1924, 1268}], Line3DBox[CompressedData["
1:eJwVzksug3EUhvFDiqRWYQfUNXZgKh0hqQoSbfK1DRKUuCTul1EnkmojESUx
aJCuwcAOWIQl+H2DJ+85zzn/y8hKZT7pi4g8kkxEaSCijL9sRHMwYmwoIodR
XOJuOOJCPpgtyiUs4J6vO9fil/VFFHDItbk19Tpm7a3KK/6ZL6mbXFluoMF3
+BpX0VeR4JHv517MtvTb2MQT/8rtqvewk/7N3hvf5Sf0kxhHm79O38a72bSc
wRw/JW9xgw+zfXmAOr7c9ckdq1t2T+QRvvle+h/uTH+OU/zwv/gHbEItyA==

         "]], Line3DBox[CompressedData["
1:eJwVzrsvQwEYhvFPgg42TAZaIXVX17hUUBMSQyeStqRDu7WJBIsgEVaTwSox
sptZJIz+ALvV1MXvDE+e93vfc05OptosNtoioorf9ohiR8RIZ8QXF3gTh10R
P7ZtXdb9wRu8q1/nb1tBNyy/c553bKv8aVvT1eUajvW3fIM325JtT57TP8sr
8jJebTl3WT/kfpIXeQEvtqy7ZBt0P8rzyTeSbMvr07qeVERGdy/Pcq97hh88
06eryGVcou6dC76zddvS8hXneBrX+pR7QD7nKZ7EiT7c/fIZT/A4mvoWar57
4N5Pdpyiov/DkW0r+QfvjfEoSvI//kMn4w==
         "]], Line3DBox[CompressedData["
1:eJwV0L8rxHEcx/H3F4cyiUGZLiXZzoLhvosfV0cdZ/GjEBt1d37+BTbUFRlM
ymaR1Wy12iy3SFEWDCiPG5693u/n691n+GQ3quVKEhHreG+LWMhEtLZHrMjh
rogGVzTvcQfYxzb/xE/wg/YEq1wq83jUpboz84/c1JXNd5jHg36cz3RE1O2p
/ts+Z75BCfductyIrtc+hlHc8nluSDdg/5S7cgfXui1dluv29odcRh93qes3
t/Cnbt/MM/IKRdT1PdwrSu6X5BHXKSv6Gqo45BIu5+ZFLqLG/eJPf4IGV5AX
mMaabtb9V/POfoxnN1PyHJPN/7P/A4gBLrA=
         "]], 
        Line3DBox[{1262, 1364, 1541, 2902, 1495, 1254, 1357, 2852, 1242, 1349,
          2963, 1866, 1233, 1343, 1534, 2900, 1470, 1223, 1338, 2880, 1529, 
         1459, 1213, 1331, 2914, 1612, 1202, 1323, 2954, 1822, 1192, 1315, 
         1523, 2898, 1437, 1180, 1308, 1518, 2897, 1424, 1171, 1301, 1515, 
         2896, 1416, 1160, 1292, 2831, 1148, 1283, 2959, 1849, 1137, 1277, 
         2869, 1508, 1393, 1126, 1272, 2868, 1504, 1382, 1124}], 
        Line3DBox[CompressedData["
1:eJwNzb8rxHEcx/G3ujtX305JScqgbjTa5NfgbOdSkjJdSeRH3UDiOE4dO6M/
4GaD7YqJ1ULZUBbOyC3yGJ693q/n69P3O1zent/qiohFfKciFtIR65mINXTw
i9Mk4sNWtNXdP9yLXtCL3RElXPJz8pGf4nvcg95t8meygXvbmO3BPc0PyDa+
0LKN2o74T/1aH9FnfGcWBTS5XXueT/Q+7+o4wQZ/ZR+y3em9OMYSX5MXtn7b
rXsZh/y7fMO5LWercq96VU/pO/q4/0xiAhX+Dw0+qyfeHmAfq/wK35E3ehbP
eMIe/gECUy32
         "]], Line3DBox[CompressedData["
1:eJwVzT0vw2EYxeFbwr9RpNVEIjF1MRo7E0ttNP0AraSDt1rapJEIA4nGKKzs
ZqKDhDBIDRaLJmZMGCwsrg4n55zfufM8+eXNUn0gIsr0PRixkUSs0xr1hiL+
+P5IxIdtUf/Vp/VXvagvpSKesDxWkp/xLM/QFF7Hb9215a7tse80j9f4pe2L
39h2sYL+qV/oKX1GL3rrAVvg53gLH5NHqYqfudnjp7Z7fkcVOsIn3L7LJ7ZJ
/U0exw71jJ6Vd+SfdESiz3rz2s0cb+BpfuBmuP8f3nCzzVdtHd60XfEXWrHl
3B3LW/QPpX0sgQ==
         "]], Line3DBox[CompressedData["
1:eJwVzatLw3EUhvHjbaLWZWFrwxsYrBbb2nDO5jB7A8MGY4KCRS0Wf1mUGQZq
EQXzisLWFBQs4sL8AxYs+xge3vM+53vJbO4WdoYiooDyWEQ1FfGGDfMX+qMR
e1N2MuG3uG18mGv8pyyNR6yhyhflEj9srrhTlweYwLF+KI+Qxrl+6X7a+VP9
DD96F+veSfhZecEnyOJvMuLavStzDiPO3OsN8w0Wsc89c03v3Op3WOZ6+i9a
do/cCvck5/yxgHm07ab51v8e73pWfzG/Io9vboZrmztY9eYJinjAAKrZLfc=

         "]]}, 
       {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVz70ug3EYhvGnDJSpTFTxaqd2FWfQrRKxGIqIxEarPlZOwaAfToJu5Ti6
Shg60c8z8DNcue/7+j95kzc5rx/WUhFxgNZCRDEdUUYJV4sRFfn8z1LE2XLE
JfdgP2KoP8kKv6bPu0lhDk3+ml/nR6hjjITPyox8dfeDlr7BTfBm/6LK9ZDj
VuSRbzX0prddfarf4NjbOy64TXtVv5VDd1tyhjuc8vduPuS2fSL3MXKX2G3/
3tfHGPA7XIf7tCfYQ5574br6FG13Xyjw3/IPeTgrDw==
         "]], 
        Line3DBox[{1946, 2419, 2520, 2133, 2176, 2338, 1566, 2175, 2349, 2134,
          2178, 2711, 2865, 2296, 2177, 2712, 2870, 2672, 2135, 2804, 2088, 
         2297, 2894, 2179, 2089, 2674, 2968, 2492, 2090, 2649, 2960, 2648, 
         2713, 2959, 1947, 2494, 2714, 2934, 2651, 2650, 2715, 2961, 1948, 
         2496, 2805, 2091, 2653, 2652, 2806, 2092, 1949, 1727, 2093, 2655, 
         2962, 2654, 2094, 2676, 2969, 2180, 2457, 2571, 2590, 2572, 2298}], 
        Line3DBox[{647, 232, 1404, 294, 233, 1646, 649, 297, 1406, 298, 234, 
         1950, 2807, 2095, 1951, 2940, 853, 1952, 2808, 2716, 2831, 1953, 856,
          2941, 1954, 981, 2953, 1955, 2717, 2832, 1956, 2809, 2096, 1957, 
         2810, 2097, 1958, 2970, 1066, 1067, 1887, 300, 941, 430}], 
        Line3DBox[{1972, 2459, 2591, 2197, 2458, 2196, 2874, 2784, 1971, 2678,
          2677, 2971, 1970, 2835, 2718, 1969, 2618, 2834, 2617, 1968, 2773, 
         2833, 2537, 1967, 2913, 2384, 2615, 2383, 2616, 1966, 2772, 2942, 
         2195, 2535, 2194, 1965, 2896, 2193, 2192, 2873, 1964, 2534, 2191, 
         2533, 2190, 2872, 1963, 2189, 2188, 2871, 1962, 2375, 2184, 2299, 
         2183, 1961, 1409, 2186, 1960, 2895, 2139, 2182, 2138, 2433, 2351, 
         1959, 1584, 2137, 2181, 2136, 2350, 2185}], 
        Line3DBox[{1983, 754, 2462, 1074, 2972, 1982, 2679, 2839, 2785, 1981, 
         2838, 2719, 1980, 2385, 2619, 988, 1979, 864, 2837, 2538, 2207, 1978,
          1426, 2206, 1977, 2905, 687, 2405, 2205, 1976, 2897, 2204, 2203, 
         2875, 1975, 686, 2404, 750, 1701, 752, 751, 985, 1820, 984, 1974, 
         569, 2301, 596, 748, 747, 2836, 2461, 745, 746, 1696, 595, 2300, 
         2187, 1973, 2919, 683, 711, 567, 571}], 
        Line3DBox[{1985, 2355, 2356, 2208, 2339, 2876, 2098, 2612, 2434, 2435,
          2420, 2611, 2922, 2099, 2303, 2211, 2811, 2100, 2212, 2202, 2812, 
         2101, 2304, 2740, 2813, 2102, 2305, 2742, 2814, 2499, 2609, 2103, 
         2329, 2743, 2815, 1315, 2306, 2215, 2501, 2610, 2935, 2104, 2330, 
         2217, 2698, 2977, 2105, 2307, 2219, 2503, 2779, 2936, 2106, 2409, 
         2387, 2699, 2107, 1996, 2816, 2108, 1998, 2787, 2817, 2109, 2681, 
         2745, 2818, 2466, 2574, 2110, 2575}], Line3DBox[CompressedData["
1:eJwV0D0uhFEYxfGj8B29j8ZYgbEKjcLYgYIpxEQ0omawAUMyiSEhIjqRKMX3
EGEFClFYhfjd4p/znHOee3Pft7LYqK32JJnDZ3/SGUyOcYTNoWRtOPmhH7oN
OsF/03d+3Nwxv5lr9ifNU6jgVbYn2+pL6vRiIOnKbnRjzp3zL3yXX+F37Szj
TP5c7pOdmtu9yRPf1O1gCXXdtXOPZY+uYwEjaOqu6IPu0Pk/HOCeny/fg5ad
L/rrrhPdne6SH5W3+O3ybtzKq97fNs9gX1els5gu/4n/BwfTLkM=
         "]], 
        Line3DBox[{2001, 2421, 2422, 2221, 2340, 2721, 2908, 2220, 2357, 2358,
          2223, 2341, 2877, 2111, 2308, 2222, 2819, 2112, 2002, 2140, 2424, 
         2113, 2003, 2820, 2114, 2004, 2766, 2821, 2539, 2115, 2637, 2956, 
         2620, 2621, 2722, 2954, 2005, 2500, 1324, 2657, 2656, 2822, 2116, 
         2006, 2502, 2823, 2117, 2659, 2658, 2824, 2118, 2007, 2825, 2119, 
         2008, 2789, 2826, 2120, 2683, 1444, 2467, 2576, 2121, 2577}], 
        Line3DBox[{2009, 2423, 2141, 2225, 2342, 2343, 2909, 2224, 2359, 2142,
          2309, 2723, 2866, 2331, 2227, 2470, 2931, 2122, 2228, 2143, 2310, 
         2123, 2332, 2746, 2827, 2471, 2124, 2311, 2899, 2230, 2411, 2504, 
         2505, 2410, 2921, 2388, 2724, 2914, 2010, 2542, 2543, 2725, 2943, 
         2011, 2726, 2844, 2012, 2544, 2545, 2944, 2125, 2013, 2622, 2623, 
         2126, 2014, 2828, 2127, 2015, 1911, 2128, 2684, 2973, 2231, 2472, 
         2578, 2595, 2579, 2312}], Line3DBox[CompressedData["
1:eJwVzLkyA2AUhuGjsqTXKcyYcQWKtELQGlvKLG2SmXQuIC03QYNxA4bSkthF
RBRm7Euikt6jOPN+33vO/4/myvOlvohYMj/9EbuDEeNDEQ8DEcvYxirOJSIe
sesm42ZSXsECn5I7fE+/d/+LLZy1++bv5BG5iV/6un1Jv9UrcgM/+UXuRr42
H3rdv0XuSi+7u8R3foG7kM/NjPzGrdmf6UU8xTT/+n/rj7o+jDWc5l/4Aznh
dh+f9Sn+RN7ijnHC/ba8Yw7lvH2B3zN5s8o/eVezq9ht6GNyzm5TzmISj/AP
oac5cA==
         "]], Line3DBox[CompressedData["
1:eJwV0DlSAlEUheFr5LQEq0Qy16A7INTcwGJQFIilyh04AroANwA5RgaECjgV
gaWuACccCfw6+Ovc87/br7o7vV5ZKU9ExCrGkxGt6YjFmYjnqYim+Unu8n8o
8zWUcDobUZe/fEXe2b1Hle/rP/yWPEIRx/jmtmUPaXu39m/wxTf0Df4ABRzi
kz/hN819e9foYcTX+Ry/hyz2ccZ9OMubr+x1cYkd/p1/9C0L5nPnb3pRTyX3
y1e9zc/rc/KBe+EuzGvJuyXPuqsgl+XQWYZfMue5DnIYJP8A/5xHN7I=
         "]], 
        Line3DBox[{2058, 2482, 2483, 2481, 2687, 2686, 2974, 2057, 2685, 2857,
          2790, 2056, 2856, 2730, 2055, 2633, 2855, 2632, 2054, 2777, 2854, 
         2558, 2053, 2781, 2853, 2628, 2052, 2947, 2555, 2554, 2051, 2852, 
         2729, 2830, 2050, 2550, 2851, 2775, 2049, 2524, 2638, 2957, 2640, 
         2639, 2048, 2525, 2526, 2429, 2155, 2047, 2749, 2850, 2276, 2046, 
         2760, 2923, 2428, 2270, 2367, 2366, 2045, 2891, 2364, 2365, 2268, 
         2523, 2522, 2427}], 
        Line3DBox[{2072, 2485, 2486, 2484, 2689, 2932, 2792, 2071, 2688, 2864,
          2791, 2070, 2863, 2731, 2069, 2394, 2634, 2636, 2635, 2068, 2560, 
         2949, 2778, 2559, 2283, 2067, 2759, 2862, 2629, 2631, 2630, 2066, 
         2776, 2948, 2557, 2556, 2282, 2065, 2902, 2281, 2861, 2753, 2064, 
         2552, 2553, 2551, 2946, 2752, 2063, 2280, 2860, 2751, 2062, 2378, 
         2379, 2320, 2277, 2061, 2750, 2859, 2279, 2060, 2733, 2858, 2275, 
         2372, 2371, 2059, 2755, 2911, 2370, 2274, 2369, 2368, 2278}], 
        Line3DBox[CompressedData["
1:eJwNzLsuA2AYxvFXQrW1Og0MBgR1WNyCjUEqYUIlxtbi0AMRkrYSkYikMfYW
GIkIcSPlCrTo6jf885ze75vIFdbzPRGxhW4yIp2OGEcK96mIM90lf4GbgYgN
Oq27oh18YM/dEl3EO9+mj/hzN4U6f0pHbQv8POr+epMr+l9Moqmr2cr8iK0m
Z+Q5vMol/Q+W9Q1dFUV5Ux62z8ozeOFP9Al+1dbhk/wY+tGHbzxgyO0znpDD
gdtzeky/6CfK/mjRI12vN216nYi41Q0iL2/TfXe79A47ONRnscJnsIZ/sY8t
Kg==
         "]], Line3DBox[CompressedData["
1:eJwVzD0vg3EYhfHbVG29LARNaAyE2WKiZTK2oqIWMTctH0FiUhZfwEgHi0SC
SOqtC22YzIwSFv0CfoYr59zX+T/P5HatWO2JiA0MJiMyqYhpjOHc3eqN2NdP
0hFfsoRVLi9zqPOfiYgi1/X+F3vcB1fg+vV1bgcdLLvffLerP9kH5BJ3xj26
s+5XPc+19Soe/v8jc9yp7d69qU9wL3hGBXd8je940+celVMYwTCa9rJ93DaL
GaRwyR/JW/kjF715976hX3NDelJvywXbsX7DX+Bbr+NKb9nn7AfuNRxii1+R
8yjhD4AOLv8=
         "]]}}},
     VertexNormals->CompressedData["
1:eJwUmXc4Vv8fxiUV2SlpkZRUfJWRCr0rO5SyiohQpGTLyAxZGdl7k70J+dh7
772Jh+c5KMn+nd9fLuc613me837fn/u+X9fD/urDUz1yMjKyeGoysoP43/ZD
6ian9M1BNevtzaMDGPqlnyUm5vEDrs5feazNMg75rKTo03FdSN/vMTGolwBF
Cum0mtF9oOKhrmoUkg8vDvQI/6EgwZts5Z50hkZ078I60qYvgBNjrs/ElTBo
uyP1II61B1Ge2Z9n/+iDBrLbWMk9SBCT3PB+uCUDuhTv9rJNJyJO9leuAssY
WFb/I35p74RGO/KLwzQy6Ktf3b7tJAmuJu3n+6fGAA1WSLK4EwZlI7JxoZsY
7PVFzVxXbEUWTAkKj7qtIcBLTu2nAAZ8aV8vfo8rRneUTi5Nqvqi8ENh9PSj
GPAL3hBxvl0PEWGbbem8TuiZhJyUlAsGoS+FuKpOVYF5coMMS74zHKx+9Veo
CAPVbhG/VHKEKjxe/bnC5Awizqk+ajUYvGV3luW5VIscg6z4L4eYIaXXv0s7
wjCIv0XtznAsF57X1/znzuCEKmNptWyJGDz/eWph9NAk0JHtuEfRTqL3gsw6
HQHzoNFy9nMf0wSomx67GlA5CFoSF86/Yl6EvN/kdS4hfaD39xjztEoP8HuX
tkS4L8OruvyhOawJ7bPZ+glw16GklH1CwzQJ/IefxfLa9KBtmp83zh/oQtGZ
VE0/JIhwqop+2exQDtyLYtb1OPAdfsY8MLk0j4GOqFdpmHIXpHg4GKZSt8Oh
Ms3eqgkiUCmFfaykigVdyy1voasxQBgzX/zvHwaZpT5hHB5taL1lVww5NiH6
4P+0j9iQ4I74uHhfTwmquyRB0KcuQvMK08odpRh4iZ747mnQAGRsFlcNuWrB
dYeGuo0WA3tsQndutwpekJcwhDkhYL314lvNBwzOeZUmittWosa3XG0EqXI0
on4pQ9QDAxlsRksZf0+rw5S3jxlXoxnOuH6nWxjc5lhVdJPNgzdG6291uLKB
pLdL3jeCwd2scMtn7zF0/W33UPpINRD57r2LoKmA05GiqMinBj0X3zww7TsF
9iz0ghVyBMgT2/wXM/4TmN4JX70kNQBdd6YNegKI8G93rNP4Wjz8nXsTlEjT
igozauzC+DE4QtPuRf0sC1EnnNbppe5DPudFXnBcIYFB599rrd1hqLvjSqaN
di5MDgab2xEwIL2uLxWgSgKd9sX7CindkP38ktXJIBIsDXox8zwIB6bKB/VH
hGJBRlyJkQ/X8zy70npZcTTKeNBmox/ZgTSKbZvM9kiwJ22Q/E0mEg0RubxS
/v1AC8f2LUO6MZA23BLhFgqCuzfnSPlLjSDsq/fWVBuDl7xbfa9KouBBeOC1
/Y1qCJY63kgXj0Hw7bwiff8viDHgVtGlj1UoT4L6c2UeBkbPxO+cGI1CV1yi
Jk3f1qMCZfPmsU8Y1JtyRljKGsHqMcoRas18cCrLs7NawODy+ZszH4cJiPjK
8ksrTKFAjeHRY6554DU40Jx/ZwRxzXImkZ0tQScWI64rtS2D0z/JIhejeIiI
P2p5nbcG0qXph1miMfjCdXzyrAcCcavrOgMW7qCowBjFUIVBYXl0/DQpFuy1
Chx+rBchzwX2cLthDMwtrQXK/mQg7/MjuyU1foiioWW/aRX//oos7J7byYi/
UCw3RSkX2Lqoz5FmMXB+sGgQdT0UZn3lj6wPhcPZ7BKTuS0MZu28/krFJsMD
0tb3xMI0xNXJPN+L+4/ANf95FYE3qCV4Koe/Nw6l1rAW7+P3K3AwRSVnJKCr
Ym3EEaMEWJKpHz36B4NwGvrvYu1uSO2O50eJmUTYviG6ko6fF6GQM8OfO6MB
03pCSx8XiniS1x8u4fulUGv0i0wLhEUx7V83XiajexOan5z+YiA3cKHp6+Eg
NMbRoOGV4gp9hZnRnbv4fk36I+fLuhADteoLlwQSAuuKapWYAmhT+PCu60Qr
PJV25RXpH0FHN1QKuNeWwMaeLjleqhN2Dha9CBCMBHMkdPwpRgJZ25hW8eAS
5K9R4nngeyXYNx6cPheIQelk3Fd/gWZkr9U7moZ///oP1ZYushhUWS2vZB0M
gd9bohRPNLJQZ6ffMWcMAw9WTtK8bD2UexSFWoakoYsPqnbdrTDQPnW75f67
KBiNuXH04YFQ+IiMvmrgcxNXMR/KeV+NCm2IUqkN36FCkIPpciwG3sdanRza
c9DTU7uJfcHiaIvluZwiCQO//eMR5RbloJd/9ZK/aDIK1/2ta1yHwVWuFRbb
W8XAbGir2HTkK7qv8Cj62RgGzVl1Z+2d8tG6U073ongcsKe4NDjP4H6bKl6y
M16K5L6nR3XShsHbhD/jUp24P9CaHapoSYT/PPfPq/CHoAFvt/gLGxj8aKbL
MZwfhoqqRJ8nisvowR0hqjWPJoiVJjrWE6fBittPeCqoEuSvs5eA1SKM670u
KT8+CA9vKPAinhYwO+7nujWyDM2fT9d0lLSjmzXbiROGuWh7U/DY1g4JFo7p
3/dm7UeBexX9fXfr0Lx50+FNHyKsshyIzLLNh/MyAswkEU9g5gg44f8Lg8Dv
5pc1qnoggpY9PIS+Ghbe01xEp0ggz/rsd6BdLAQemtperI+Es/OX61xwvVHS
K8i+HehEP8Yo4cThCnTylNi374kkEKZTr5kKLkNR6yQTX7dMpK0ncPNbNe6f
31F7cX4zvHqVGdWoVAwQFFn0iwsDW7pnUVXCtfCo+or0Wns+jHgxuLI7YnAm
0mrgQ2c1Sl3LCNCjzEEidRHNNcEYMLPza80SG1DOlYTWzNAiRBO2f+TwYwzu
b9QlVWwWgG749d0fy7EQcuZ4yN8JDNrTKN4e1V5G4jYU+qslw6D1ABv/q9QE
G18HSv15K8HY5IALaWUaPJTVLlNYLwJygyHroy1QdII2+OnJQZCSUHdyHlsG
QRk7qfNsuYjs0D+OQ+Xt6InrnJjpLglS6M7Qep+sQwX33watn+9Hh8eEi6V8
idBd+qOTT80DWMRD7Is/5cOTnV3/EHzOlRP83rmEKrjXmXJGp6YHvOvo15pP
488x3OELRJFQPZKSOojPm44/UNoVn7PrU9Usp7qfKJ15fn9/sBO9/HK+730S
CXK9wu07n2eiXheKzrDQMhQn/a6oCJ+zUpDgusf5YpjNOXmWvKgZiFaLJ3Wv
YDBecHV3Ny0ff09XWWHRWghqEfv4Dp9zu+CzKdu6bDQbHHCd2FWN9nOu5BwI
weDGaApjw7sixJNCvFePNSBau3ax9/ic5077t+9UxgL5rpqE2nYBnKtss6Sa
xGDmWb2dSiQJXT2rFDdI7EJz9qXn5IMLgGsk9qjk3AgKN1u/HfC9BeqpXeW5
15dAmp0J1v5EQO1A02SsYCdIWvf0/FwlwSmrob/puZWgePrO2rhMCdowvnyx
CveNhfL0qat4rhVTZ2g70DQjU3JOLyd5DMiiD2joGmShALL7Zi6BwdDV9M/Q
E/cNJYb7E4ylaSgzmLrZm7MeGjJaixisMZBfeelWvh8CKyt3DhzTi8LtjcLx
Je4b7plfE67MfYcCjCT3UL4a6Xqm7AnHYTDs/OUvNd8DlB7qm/KpJAf952Mf
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
x9vrKAFOTWacXtSNg7cdNvNzTTkQWHKZP3YR9z2MvupJXB7QMubyUobnAbXx
xX6/XgxspGP3CmTagIO16Y6O7hSY0pK9Ozi4CFtU08xk6Q1oWtrYn7++Adn7
qtAlT5EgVKHvirnqG4g0mqbgCu9D8S13OATYSNDuGUO1rlKD7F/k9ge9qkF9
R187qT3AIM7LpiOaqQUsDnG//n2tBcb5s+zs3ElwyTvb+l5PA6w6itO1zDaA
k6n+hMg4CSSuxOnLz1YiljTVoX+/K5Ewj1CRJ86/gUx2x+k/NaG7lkpm5P5N
6P0gDfO7fBLs+z2TDtHLgtxNH9Goz1lwDQn7rE/j/cqC5rV2diYy3lgdaqrJ
RCd0H1uozuI+JmEtzverBVVduui1aTgJ010MbB/9CCDVxj22jevez1H0RMjT
fJQwu3h5VmMGHOzVrXx+YEiw6qPt9MV8OBKm1Lr1qQyGXzcWbU2WwoWXFx9Y
7uRCt5bSaQ1cV3mSsaI7a5nQZSiyuCDYjFrG1CqPi2MgLNuhOm6Vis5cmFbQ
salFuyoXmcjwfvjmVf9tr7NWKPAXu7VJfBu87a5+/5Adg0P2XA3e7dGQkLp0
j5TQBKWHTEjcKhjsED4x9FxxhEfmRccMHlWjl5lNDu64Tli9f4p8OhSMukc2
vo6GtKCTFQ/3TUXx3K+c43py+TPimv5vg2SXAzevb1OHkvA+bLIRN+jjgSxY
8p2F9bKRqKfD4bX//87CJa0acGEICd+TudpZUIeMKVaLQ5eXIY7G1Wr95yAS
izBim+P9hVbFL2Y03p+G7Uid1/9cygFeSV1npCwFIXI9/Ye4D+zEPaqLayyD
zSaVM+lmVejSwCG5FGecRwhFlPzc+sjLM1ZqhsEf2Tgsh/Xg5z079t98HOqG
12Bf5M46jEzoScx305dgMP5rnBXFEGj/aH17wWEaHU8q4vm3NA95ZVKTRgem
YOYHj5tIeRdc5JJA6VGLsOwYLqlWVwCnWJbKVFfLQZ3WZ+kh7p8LrA1lz2QR
YrhFs20JCMgnW3/0f8ZAXzlJFnwH0I9J+kTOJ43IgvJ8PP15IgRItgl2UVSi
jeZzN0mVQWhWPju8DOeC9Of5XX5itTAunBhicCIHnU1VZ5L/goHa3GD5UbsU
pMkf+SH+jRwa4w/+8xL3W0JQ0ZlB22kY2lffhKQmKEDT3xKeLgKbBaOAnV4b
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
VvxlPJ/fBEdtbkpIbB0C7ZlgL6mBcdDL+CkhSO+M6XHe/mp0WVAdcZL31BAB
A+dNlJpda5BDt7Tzo5sjzLctB666RkDLdna6tJdZsHd22wGeJQ8c3dTFo0j+
7oyquV2uWA3uuUq7UZtSg1mfadcxpVEgcP/q1HCVMhzZ3Hj7d3UD8p2LO+dS
RPKtXv3gTd4seG12vMzaPQeELzjn3Mkn4BiIz7EQQ5BeysClaVkJr0wu+5aP
jUP80fSJAu4B6Di5Z/GAUgdEvirz0CP3xdHWnicaEY14ZEPcJ5HeYhwv3BHx
tJoCe5PnToUG1SH/CQV3r6NVeMnRbAeJhsBluNqTaTIDS6XHr30/3oR0Rl7P
taYoYO48QrG9/wb3b/wzlafXgBfmpl4/5ibATV3G8HZNCMwG3xLpLSmAq2o8
fLtryLi0fpeyXkwzRGd+fpcwOgh+lOZwezJO8vNvOIcl2fAneT3rR5JrXrEU
KaSTeeQ8y3LG9epyPNPocfjRDvL7o3s2fs6lAGt9Mm7jLMDX+wwfPOJrwscT
wUF6nRToK71j4PcklawjxWdETfLhc9HG128LCTjkGD3vmuOPraVlN3M+JICX
3C4zTXK96VDPfXmvOPflTj1/NbbCj/p/fKd5VpxXmeP9z3f6MdV32o7qO72a
6kf9YIX+P37UDSvOCZyl+lGnU/2oe6h+1Beo+vsVOgP1uX/XCp9qNWqeVVuZ
f80Utk8ey4PY2xsZOQ4ehrulXPlEOwE01PyrviLPBpjcOv8g0xmIksWI8P57
GM416mDxz7/0RdbOsc01+P54cF3MuUrsukDDljpEgWiqn/Pstv/8nN2ofs6h
VP3nCj2cqi+s0K+HM85nDZRgdtJDek9hxAe/5YHNkoBYYfH19pnBqM34y1Rp
uBQdtXMl3aMIWA6davjr7w3vd6V3fbOLwpesqwmeX2R8eFoS016ThazdnlWW
3/2AVTlqA/On/5cH/q7ggf3KVZw58p5k3fHu5iGPEGi/+4dLepEA5QyWTkNK
Ha5t9tReFCzCUo4t3Iw05P5t/s/3uIvqe1xL9T2eoupjK3QKVR9YoSclCN68
wleONbV9Dg3y6chT1GYu4EAAz9pRSdG96fhqsse4l78cG7dnbr5P6lH2BquM
mf1hj4ji4eCYLKRXr/G3Iu9LQMk55khVFIY8Wma6uOgNrE9P2n3/5++xos/O
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
FiwPKfFO4+tc68zhbzGdmbAsn7jx60NDOOXP5y1N/q/+sBBFPhQ3PLogx1QD
/g1MnazsA9BrPu6avn4G5xsq+56Fp6GZp4bZkXVVqLV/5dUbbwxojol7Lf6J
hfVH3Zr8jqfCEw1PsSr8+WRpqycV31NQ8CPVEerf1Sh1acj0Db7OFwg8nECB
hxWJ+2hhFPfUvhE4Krn5XxzVp7BFww7LA7+eu55PSuuQbN6z+6fw9z9M4CtH
Al/VE/hqRXSt/sZS+PXs/+06MGVWAGE8ErX7AwvgwPqxWfdiDG4Q9VGSoj5e
I3Sxhih0sQKJ+mVA1C91on6Npw2vU+19jL4ztXH5cHgjQ/re+1/x9bn48Ubd
PoVokK0zKpZKdEOmi8o7BfD5Le6SYvv0KRBt+Xop3/ujD5yuo8vKw79fB6KO
TPn+W0caGu4X+B74ANc2ai/lsQbCNVpxZT/dWaA/VFq594kfpF1iqOxqLoDq
qYjVzR8x+Pgj7oBqQzWSlzl47dLmADQZ9KfAzgeDUgIfeoSv4cMBAh9GVbb2
+UhXIjOFOV8XA3e0KWXD7SIcf36TQpd0X0aA0mYH791udgi6ZP5cxt9n6EGp
8FOaChTwm3Fij6Y5XJx+xbcN59eruutf0SUmoryRKDudxk6I5jS82fqaDIjg
WUVf1nhWCcGz/oMnnQk8yUvgyVMta/fLmHL+vV8G99fuhTlT3Av7D599RcFn
dQkdADEKHYCs8ytlt1MroHe+XTj8XCgaSzM49gHHgerxTiV/xlpg8kIE920D
Eyh4JiimwIXnDQJv7CHwhhmBNyZNhZ48XGiHzrODemSJOqgPHoxzukKGI+Fs
8vfPDKMm0cQLAr2VQLI9PdbqPAWJ6SVeqToFwKnzmbthrzdSlVhlTu3HIHJV
hdYP+mHWQotp2rcLDngP38n8MwUPCN8f5zP/4jqWd2v3mMoo7jH9JPyzYgm8
ukzgVXd3ta5dWjWo6v5iu5t7Carq3B1YdBvHRQSOVaHw1Uq4YbhnMigdVL4L
m7rXO6NLhds7+/7WTcLXXp/C1/494WufSuFrX0L4iZtT+InHEf71/hT+9eMU
Pg6ZhI/DZ8JPWZW4f/GUuH/x8covG5m7Hag+b+GVRUo/upxdnHpZbhps3o3J
LFR9hPKlIaMtL7qhTqD7oO23KeD6H/44Jc/WdDD6KHQwFrs1uo3E+sCaZsuG
1K/RMN1wkL5VZBa2blrT0Q0mdHRpCR3dEEJX1o9CV1aS0EH9Q6GDqkPcW3ei
uLd+ltCNvEmhGyl1XrcpTSkbSZ3k4fC/VYtmnB3GG/QxuHl8TXfuJ4XunAOh
x0L15V89ltN+z3xOMRbC3BXRs61lHXAgqsFYHOeDtal+pgq8Lch6/wGpa3TV
yPqR+H2lCvz3xD30ZOIeOhdxD33Ja8r78IYOYORZVVRwrAPTxPA45/NkUCf6
MI+JPsxTog8zX54xHaP1ASpUD76WZP+AOI6QTMu8pmC2+cpxnuZEZCd6id7j
URfsZciJnjMjw1mCn+pR+Fn/pz8mTtEf491c5wQVlSiWcS/3ic1+iFTl2CyQ
gPPxzjX90hcU+qWKSdsfGCTVQXLvwfcDrQMQM+Rx42bWNIQT/rxbKfx5Awid
unJCp+4xoVNHtyv1XvqjVKRsZXnnu/oIjBW8QhcFpoDM0+uo1D4EWsqurzdf
x+chYPS78tIk+CUeNrqGrxMe5yv2vaRqEIJzqc+8MOCKjHHxGG0BqgmGRdGK
l8Av/brjEp5/en6NTRhdSEdGzAclHPDvqHGWVS4ugAznCB49yb3Go3cQPBoI
Hl1O4fc6bXjc4ShbHto17SVEFdKKuj6aYR3fyWCmEaVD5o+GQma3eM2WEnjC
+2vApAkDkWnBp5GiNaDB5/88i6MY0ppGD+ZpY2CjcIxOo1UBEr227v5B7w/T
AmET+nheUiJ4UyfBmwYI3iR08l9/5F7CH7n8cyiNmeFDeGeUu6KC58XbySep
Ugbw+kvwI2P9NX4UQPCjW8T5zIMU5zOZtC/pLHolwL1aqlv9IeVINPDGXcDj
oZbvnLclJ8Moh43864sk9OlnetZqNgaPubIczGlj0PkZ+ezNoyngd8xxUQDP
b6ymz0T4h98iZsYUdVGFbPj65lsiHf4+MgR/N6Dw+xtSeyyG7ciEONfEb937
fVFXsPnNVzgucsilz7CkPY0WpOVfhD9PRPefjBrdxXFCweaFlPrlOGSnsD/e
UcIeNo3kHzDEn2NC8P242//6zW3ZNLNdvLUOvbJjuf3j7UPEwltA3mKMgeBv
8XEnoXwIsfO7tPGdPSo5iNPzITxvED5rBRTnrLYXDLiyh5MgnT2Y19IkEp0w
41Ngwev18bmwjBumfmjZ+OxZJQVHKHxwyP/vvXI2oj9gRPQHWIj+AAfhdyZJ
9AGkiT6ATotT7mJ4MVqeetkcZ9WELm5cqrPejvP9Bx+ufniYgwa994dTv2tF
P1n2yTgu4vlEcZO+0O0I2NRZevVSciksLl29u6sB5xG/FejHsVhUKTsuHjgq
jkIKmJf++gZ6EbrHAYTusQuhe0yXfSsMO1ODinlNNMY+lCD1Cn3NZryuJRH7
75UU++8fmA5/Sqd+iyRBMpkTBaDjJdS6v/B5/xlp7a6c9xZ1zhgtfT5SjV5L
Cn2Tc8dAltC3V6XQtx/n/vVN72Us+pX0hSQSUQWTQc+dekMwoP+1lwRRtmAo
1DejYlmMGGsXGzq6MDh9zlY9clM0bBkZcthWVohquzjKonF+N/V8Tc/WnELP
dmPrGVU+M0fgGPhkkHyrEKkzL90x7MPxPLE/uEqxP1jREC5kZh8Dr9lvjkBp
Mfpk4VVyrxWDnURfRZPCB6qol+zuXJmOWJpUeeQP5AEEbuxnwd/HaDB00/dw
T3hy6gTv83V5iE47utRiFAOfvGgqO/VQpDixIpBq5wn0VLx6Wn91hx6Qzagd
KpFgpBbNUZEbqMD8ttZgMo7Dh9FDO5kq5BekGr3duASJV1KJHDXF4Mgby7hY
LxISXNfp9azSESmJYjSFOA7fBnPpjPbB6DTjxzBTakOIEdGQCsb5jivRDzlB
4e8AhA7nIoUO58tUvbc54l7AeZzqy5vKIpSd8mveHP+/HhL7PvnEvs8yse/z
fyzIYsA=
      "]], {}}, {}},
  Axes->True,
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->NCache[{2, 2, GoldenRatio^(-1)}, {2, 2, 0.6180339887498948}],
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-19.94717866662527, 
   19.999998578566327`}, {-19.951671363874908`, 
   19.999898671146745`}, {-0.826901274488284, 0.8236719379907127}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.},
 CellChangeTimes->{{3.8557726153491488`*^9, 3.855772629538308*^9}, 
   3.8557726978483753`*^9},
 CellLabel->"Out[190]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
IOy0QRhsMipyEY3+m8Wk0TgC5mzFrC6ZQNVhZs2L8v2VQygFbVhFOMGSNux6
dwinzV0RN4vERFPJXVm2H5X2TiR/v8o0rZSl6ERH2pEKkorelV1mZIFA2rLX
lah8WY4N57IJVYPkNuQPGESnyJ2tf1qtsxh9S1LENkuDMIZAgklgDg+KGVH1
4QOZLlKbfBN2uUjtss+qalQWjfgxBvgiro2SBtfYN9jIF0y98Hkt68P9QKSs
b3WhuE5IS5d00nKw54dG0KKHlWU/1jWRXh0dJWr7B2e4C0hm5u7dJkX1Bsnh
ut+XtCSktAQjk6tqCIsZNXxglEXyfirBL/NU4QVMov/sTVRXmV1jvBWRt9fH
R9tgRiCzQx0mavcpkEc0iBM3EkXz77I3L6NCjqbSzTNFwOyg7t27W7TaNUJe
87RWqtfVxxzoNUWwfNrtXt8R4Lv1CypbXvLOCnVUpjZf08O4eTuAvD6B3pgY
TTu7h9GjrauIfhr0YBzr67EPhgQzuBCEHl3BIne9N1lo+IIWVYRjLzMcG97x
TvaOv1kUr9FWTGY/lU7la7JlSb+YFknPDIyW0Nbw1swc52PqQYKU8L8/NZq2
s0WH9Qe/hkUe+GCcwHtsPbjq44TvW7ie0KCyCZxn0sSHYK2r2Nuspkq44SJD
fIY0zZbYFoqnYJJRE4yWTcweQFwLg0Ew8k4AhnZLxK8sM/xKprQpIQ8LMi0q
hqmCJ4XassKb0ED1yMJWGhOHZcauUBR5CEUjQ6PouZHapHZ1imIanPubR3Tc
1s/rk5X2rUpXXo/5IzvFQrOdbqY8/0nToLbHAJ0Zg28tS3af6hoqG1vkvyvL
UWOzoUm3JPElztQpWZ018+Q7ZYb/wD5/DXbtQPWfLPtcqLb7MzMj9X1tq5HC
id7sy/auzd+T65hmZY36ThMfuaT7HZq65f36lifLnbJQ2ITzRNc1epUXtYqU
uxWPb5VNz7MtRA0RymIlIIapzGA/jGx0prKNdgIb9RxyKgc1ySRBLmbVSMFj
F97ZmBq+Nwn8JpH95Z/A+06kiL9ssezV3TMsYM/pkEst62bQsHsqCbBnNqos
wo3McfkEM2fLWOnrJ+qCznoC1Q+bGuEE978Er3X9WLXrr4L8WLWSzpZ3jNcU
yuFa2rg0U1uUVsdLhuzxLmE0s5kOGSh5MAJIDRKkMl4fYIeft5L7rBhWAiMq
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
N9An\
\>", "ImageResolution" -> \
72.],ExpressionUUID->"6bd631cf-9acd-429b-90a2-aaea0bff37d6"],

Cell[BoxData[
 RowBox[{"Plot3D", "[", " ", 
  RowBox[{
   RowBox[{"Evaluate", "[", " ", 
    RowBox[{
     RowBox[{"\[Phi]", "[", 
      RowBox[{"T", ",", "R"}], "]"}], " ", "/.", " ", "phiSolution1"}], " ", 
    "]"}], "   ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"R", ",", "0.1", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"T", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.},
 CellChangeTimes->{{3.855772659275033*^9, 3.855772665295176*^9}, 
   3.855772697848598*^9},
 CellLabel->
  "In[191]:=",ExpressionUUID->"8c8e7e5e-1007-4cf5-b567-c0d0ac5a4887"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
fpd7XfcVyXLCZ3293Zy6bXhSvH3igui0wS+fp8xXF4TPUbHiIeP5yqn1Iepi
o7RwkT3FL9VbsL3DWdvlbed9o40qtK1dMoOMn3ld27RUToxOitPAvulF7W2a
5uQeiN5xzlI/qa+Tnm+F8j+Sln56+JXwgIBP4iJHRybFV1j/wvA6HWcyj9Tq
7WJfDRTR/lhlu7H7kf5K13F3C5StpxlGm/rn/Sbl9/QdNT842k1j9VdMKggn
PJnd3dFDe3SSn79oeey9dsY32tcRmS3nVcm+cm2VmH+t7gjtxuVXrzyCCB9s
UFhAXzRKk3NtX7Xam9RfP0HgMt+2EZrw0ZOjVc6kv7Q2SA4pVXbTth7e4GkQ
Q/o34e18xS3Tx2gP/GJCfsiSfcGodPV6wdhR2obxXeP8ASQeVmhbV7K1fHTS
OfXBZZ8vjl4apeXQHqa828+D3N9qaPGFj6O0mbV2wV7lZF9wd+58N67uUZrI
XW5Ob3biH+TPZsZLHv9GC7i/X21dDvGfNv0aht95vtEk999xlu8hfPaHZ41i
WiO05CIpqVGJb1hPD6eUdR1KA7Rbd6+sPJ9H+v1A0cO9KSeHafLOh+bRwkk8
3Did99lE4CDNo6Hnvdd3wreLDe/b83d0Ut77S/tH8asSY7SoDvpaOfHJcbvZ
ENumlU+IncC1SXKeUsOT4vMvGxdYejiOTsq3Kys4DueOjtK2e20X+/yB2O/j
azjo+I9ultxW166OEz7/wN29HaWjtIikdUsWWJJ6XpW+tn7Jh1EaFz+tpNKF
8Au5xvX02SOT8hhTrVNT+c+p5tdU+k81T6fq36nGw1Tr7FTrzlTjbarxPNW4
nWqcTxUPTLU+TuX3pvLzU61rU60XU62P/7/1gjnemGp9nMrPTxXPTOXfphqH
U/m9qfzn/3X8/1/n9VRxy1Tx2P91/k7lB6by81OtX1P5n6n83lR+aSp/OFWc
OdW6OdU6ONW6OVXcMlUcO1WcNlWcM9U6OFX8M1W8N1VcNNX6O1W8PVXcO1V8
OFUcMlWcPFW8NNW+Zqo4f6p1dqo4bar4Yap4Y6r911T7kaniyani7ani86ni
2BDqHArqY+kdu/VYQBLDV/NVy4VgXuT+b1h6Ek+2M7Z1SDpf2EWe873wV55f
+X0RTZHadwPfffRbfzV3GU14VlZlsS/5Lk/giGCisksAw5vpezED1Pdi5q0w
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
uiG/Rd0/4aXuP4N9uHe6fXU2b9uuDnJ+QeXhS7ce2BG9Jwv9iTa13xQSX121
TJWcb0JcZ+6W0jG2ndxThXuJ/JLS0jHLwnG9g/Id1PuigUtTvJ/iGI9R43nG
gdzk5VyfUAe4J7DezdN2mjN5jgnWcW8+9u2mFi+Qw7n8Ruq+GcYJ8J0F6n3O
wOGe0kuKg53Z1D2fKOo9z8DnUJyN4nheT/XLjzbWvoffYtAOvG+zkHqfMzPP
pjjmc6h9qzP1fmZmbkFxfI6Jup+wlnpvMzN3pDjudyjdNgz5na5tyEIOfiBO
4+mZTddacJ2KpeKTrdUK6iUMBvIzVHzC77l1NYtiBuoDftWVKd64Tq0jR+ix
obv+WR9xHYf75Ibjrwa/5eA69YziCRas9CuWAbhOHafyDA3hUtUaef4krqDi
XtG/3wRe9FphPcG+9ZdPFrRr8Vgezm2PfXNQ7JFKxvrAuWSp4yyXM9okroB9
iqV12yNuozKSl6P26Svv2Hf8YSfxPOSd+B4Eh13tIn6SlfLz7dR7g4HD/dtW
ikN751P2/aP3cHWzvUF94PyIpebZ0RA/EldAffh3vgn1uEXiQzj/CtmpMXT8
YSaeq0JeZdq9R84zQ9KZns8Sph8/tTXo5pFycs5I2Wet2GN96V7JpPu6XUxx
C+TPSzb2C6r8qkPdgKdmDp1JeFFI2kXxeUtMcjdZk7x9MOTnvyd5GbcHYp4W
8ipaZp3eoldIeyH+l9j46JQhvzv2O8Q5OtM+KkqYpyOH+rz81Me//ncy8W/U
76qylJtGb2KQvBMVn6gzxTnwftEK9VBRV6P6KZ+DgPLgB8pUw9q7Kj/geIA8
p7PGJVEFN7KuraXsfKPexwtckuKjFP//xRuwrl22sHe5q92OusF9GMvZx74P
uJJxAvdYdFqPXqy/VIHjIYAqX1BUbnGYTsYJ3GPpNOmvNrYuQT3hnP3Mbo2q
9/OTMW9sQZ0j8y7673MBwNdCPoFaL8AOnGOWvzc+ZLWO9Dvso4vS98pd53+P
/BEV18VlFO+cLZtK3u9Brdc98vu5J6ITsb1g52H4kmKl0+TePtybNfgsnHlf
oJCc11P7Ym5tO8sV7V7I4b7lUIZAvWJVOHnOnTp/T3NfldSTHYjzAs7TX56a
uS6mJhL5K2qdfaNxpyZ/FfFjsP/d4pT3+fGCSNIu6r7fEa87jsl1CcjhPuFP
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
kewO/OxYM1W9nvfEIorTwB86Gvpb1SYLVmSP4IoxpQFzFycI58kewS/+fOlw
JC5UWEt+Cbyig7DHplOQGJB24lyAggZzlecmiT0GxIpeZL9c/syXjs07Ogif
yH7B+67XuPTFJEx4TfYLXqV0/kjGXkdBj+wXPGiZvN2D3FtiR/Jv4OZWbtpW
f3zFSBp3wN0fvXH95LBP2E15nOH/1deFBWTpi+J90lvw7uVrJr4LPyto0rgM
rt8/qsvxc17iIuSTJa74LHrB669XhN8NjXoLvizKpM8U9yuiAekt+JHmoy8d
/GkjFNB4DZ5i3FJTR3mzeJ7GZXB5dc9B7a+cFDaSX+L53YQn8c11s4UB5JfA
U0rcWhaV2PJ8FuPa+Yajg9oqVQrbqR5w2wPV8x49fi6+pXypGO/KPM0VHz4t
ErvjPRwq31Zu4/+8czLu1Ixp9rs1mQdtupceopzH/g1cTuPLrm+5d0RLG+Nh
PTQHMBfunNO3icrm9Q2eD8Z0d757NJ3XhdZI8t0fJzsFX9HnmdLbQ1Gcn5fH
67FNXT2X5omHilRNPTLa8Djom/xbS9cwk/O0onxHeudkEp03QHlPes8EebdR
vvLDOPm5ERGcxxZ8YklOSHeFHFGhKK8k7F5v5qdm3oirMErjfKzgzQesq/xp
e0nQ3NX6ZSfLAcy3fHg0fNeMLJYD/ifh/PJTryvjWQ7gKz7fqnkd6M/rD+Dj
i8XB3Wr9OL8tuKbpD+3MBY84LzzPp6w3TOxom8h5acG3z0lZscBeFNAu8Aqb
cXJZWyJE5J8FnxmgMNOv1I/fFQQ3Gj7P4Y3PKbGK4jrw+iPnP7tNcuZ2Ybze
dvd67PLWDzjfLrhiWrDboKbx/J/gXTaWaGcHJfP/gNtWLLmywS+U30dl/my8
SzvDywLiJfBlFaPE6Bo/AfNN8IKr1t/1F13g9XNpHIW4EfNEA/OKXl9NCsWD
pIcoPyKu+c/Zxs94HQDl/301ze12wB3WQ96/o/dVMO8Gd57zrMrgZJaIuBHc
z7Xt0I7jYgQ/8s/g1pMjQ5NWJwknTP28bQb0Yf6oINVeJTtNyJiq2GxPmYy3
3vA55eeTJM7rhHgD7cW6BP5f89/tHf2zYjlPPe/rLRwpr5scyfm4wYe8zHkz
5U+2ADsCTx59dM+S+qechxo8YUV2vdKgVAF2xPWo2X38uuWUCDsCH+RbOnFD
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
q5k31yy8zuejeF7g9NvtfGK+sJvehZDWv+gvPIXWzcA3FS/3aKH+XHCk+TL4
rZ0mZoeCyoUwCd9DHHEa+nf7l00GH3/FipMonsF4lK5Rf9VjWJWoWfC/71+n
0/1rbbdGPyC99wq/IT3PA47y8d6pd/Z4yMpDb9PHbPtVc+yl8OlxZ71v+6v+
U3/L23fHuBjV/Kd+qz/n9Qrc3vxnvrNwS5G+hlcDnyMCr3vX2dj0T91/xtmQ
ut/TtL/X/cePDT5c+Dk377/9csvzTe/uRvX/8WN/q/9v//+39v7/fvdvcvhb
u2INVbKso//7Tg7O1YB3H5Ry4IlOrohzR6jHVsX+7KZ+WeJ1eg8K/q3Jvcb8
7zg3BT71bYNHR7koEeej+Bz+omCn6iYxfC4dXDdm+aXqi/c5HsA9o5Obei7u
pXxSRDwPebZoSD9TZhfHeU7Bx1P+ccwLoA/Ll5c/1IsPEoPDzm6c13kI8xvt
F5l71KQIEyl/Afhiyusde8RU7fZT2bnxB9nmvY/1TRZ2/vqaGrZYdu/+x/AD
K7R8EoWmlNcD/DHlxYa98zoG5cWuI/mDK0YuCHoQelvUJ78EPTlzt8XmiWav
hJ00PoK3XhRx7ehEUbxE99rAt1P+6LvUL9Cr6j9Du81dnSU+oX4B7+wxru2v
MxniO+oX8BKdlnMTZyYI7eg+Gvslyu98mvwh9PN+SWMe5ATqL9i7Zrsp+TUr
YwQb6i/wz5QvuCfFh/BXOh7hEw59sRMDqb/AzaIGHR1j7yhEUb9A/4dMPHwv
Qy9WqO+xL1zxdA+W/53h7Vr3/pknBkjOm5nReTN9ut+E8leUdw9KHPBEDKU4
EP2ibjn9zZqIw8I3qp/3g0YfOtbxzD3BgvQBfNC1AX1n5rqL4/EeJrXXjPJy
6tF4weuH6Y15Kh2pH8HVwhrzS04g/QSXs2rML4n5CN+X9Lyw4a1lktBA/wne
NHBfw5zSZ6yfzClP4r+0jgp7r1BqdblZkSy+gl2EWOUknzBOFwPpu7yuMnBO
7Z+6eHGrZB+8/aPGffAD0vt3hxr3ETpTPIN6lCl/Ge6Zgu87s6GFt1+S6If8
XzhvT3ms3lN7oQ9Kg9673l6RKW6nfgHv5/9tQauiCGEF1Q/u4W1WPOffWFGO
5MP3iI815vHRp/t3/C5Qlu28upgocSBxjseeLPZeMDFCtCV7Rz1P/RvzQcyk
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
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxFnAXYVsXTxp/T8YpYgIgooCiCgpjYYjcmiA0oKiImKigKmGCDXaCCgYUJ
NhaKYie2CAZiB7bf/ePe//Vd13venbNnd88+e3ZnZ+6Z2fb9j9lzSNxoNHoW
jUai9Iy80ThGGV8r3bpqNM6MGo1ZZaOxvh6eLDrRtYaen6g01tVQuTuV/Js1
Glvqukv0c2mj8bfo60VvpecbqZ1bVXah2rlI7XROfP+t7v9TueWbGo1vRP8j
uhC9vdJJqvuU2tlO9M2iZ4j+QWUitVeqzLbKv0n5Tyr/feUv1P3qyv+q9Huf
1O8ZKPpa0Y8X7hN9u0jl/tI1RfTvmdu8XX35Xukfur9O+YXKL8pct6fet5Po
6aJfVRtr67ffHLn+ZKU36bqj4Tbu0HW36OUil7ld9GNq6xqlh6n9ZZU3Qdet
un9Gbd2mtDfjrPanin5BeZtorKaozI8qv5Xy71H+88rvpDE7Xu+eFPme/Ev0
vIfan6BnGyj9Rs8nhveuqnZuFP252jmm9Dd6WWWOED1G9VprrC7PXeY33T+l
upeKvoixE32J6AtEn6zy9yt9i/ZV7jLlL1B6ldIrdV2oZ+uqnatF/6D8I0X/
Inodpbtnrjtb/T1P7bQWvZT6tXzdaKwg+kC1ebbyb1G5ldSfg5W/nPIPUP6Z
jJfoJVT+HfXnLbXZTdfKand9pZNUZ31d56jMXWr/XJVfXvQ5Kn+O6Faim4tu
obJ36npQ983U7tNq63610Vz0dcr/WW08IHq8nq/JbxU9TnQX0evp2Vmi7+S7
ZC7zoOjNRF8ueproo0t//9mqtynjI/oh5XfWfUd9ly/1rnsKj9MaKnuZ7ger
D6cpXU/XterDT6q3rco8oPy7lPdQ4fa7qvxQXfeKfkN5Uwt/n87Km154/q8t
+mvVv0jtfKV0A72zg64ldL+J0keZLypXqt2nlI5TmRWV95CuJ3V/i8pM1tWb
Nanr58jzYA/15afI82CW6j6h+3uU3q4yt+naT9dx+l4HKG85fbtN9LxZ7Pmx
rcb9YqVvle4H9Gl611XKv1z0e8qfprIPxe73gWrrGsqpzEbq30TWjcawh+gJ
oh8V/XLu+T1b6eFq5yyVf1HtNCXuK+2eJnov0b+K3lB1b1DdR1R3jMZqL9EP
qPwX8DY9P0T3q6utHZUep7KdlD9P+bvqfluln0aeQ6er7jZK71bdpWv/9qWU
XqX8/qwV5Z+ld+zGGld7LdS3TqIj5e+gNj6LPO9XVP4JSpdX/s56Vw9dX+rZ
+WpnH+aS8tuozHGiV2J+Kf9g0YeyVpQ/BL6iMnP0jlx9eE9pW5X5TO08J3qu
0q8YS8aQviodzRyuvE63U3qA6sHsWasj1O5vqreWvt1LhfnZ/sqbVZgvwTdy
PX9E9AXqTyb6YdHniz5Abd2gNh5R2krpvZH548XMEeaW6Haip0au83LqvH3V
xoF6x9VqY5bSNqxLXY/Dc/XsUdrQs3VV9xHlP6f7Y1VuPz1bVv1cWn2bqWcP
6P41tfmYnl+p8u8Ubr+X+rN9Zd70ofq/sZ7dCP9X2fmizxB9qepO1v1w0XuL
nqr2Rqv84Ib3tZGij2JdqMypSserzDSN24/wOvha5fQupTU8Utcw1pfSM3QN
Fd0vMW+5tOH1yFwdIXqK2hwNj1JfllLeeZH5S1/9xtPY5/itukaJvkXpWurP
2Mh9vU11R9JH/dZmyjs78u9ZWumYyHywn+q0VXqIyjyp/q3BHqr0stJzkrm5
pn7PsaxNvWOR+vY360XpANXtzbdW3ckqv5Pos0RvL7qn6FPZQ1XnENV9VumO
yt9a+SOUv1Tm8qPVx/uV/zrzRd9r17DWBuuajZCh62n4jq5O9EFZm6h8V6UD
1c69ovcUfZ7o20XvLvpc0XewF4o+jT0997pZQ+ls9hvRLyl9ljxd77AfqPws
5aXqwwpK+7Lvq287q/4A9eEk1d1TZfoxf5Q3V2Ui1T1F6e6l1x3r72eVO4E2
lb+x6p0i+iRd7+r+KKUvK72t8DddRfW6ZF7jN+pdUwp/247svYW/z+qiB6md
THWP1f0Y0UfElqkuyT0PP1cbe4n+XvTaSneFjzC2amNdXVfrW3VXeouu05Xf
Xs+f0PWR6uX6vZ8V5vMH6Xt+VHhtnabnJ8SWUZBP/oosfyEP/R1Z3kCe2Cbz
XjNL/b87smwwLazrE3W1pJ+x1zzrfb76Mg+5SGmqvi4fmT+cLXqFyGsZ2aRN
WOOvFH7nq5qHrxeWeU5U365Q+daR+Qx71sa62tG/yPs3ezc8YTr7v6419byL
rpnwFNV5TelH6vM5aqe9nl+GfCJ6FdFX8W3ZN0S/r3IPK/8leLvSm9WPVM86
KV1W948pv0npJ4X3xhHqWx/Vf0X0h2p/mp49rzLL5K73ecN89vzS9Bi100H5
XVVmru6/L9y3o/Qtvi3cTqwyC0W/LLoSfYx+x2BdH7Bu9a5PlH6BTFuY9x6g
uh8W5nXfq/wPol8XfbTyrxF9qOin9f5h6tOpeu8nauMIPTtM+dfq+Sg9e0H0
l6zT3OuvudJIbb2o/K+Vf2DutbmJ0kL5LZU2aS6dobpP69FclcmVP0v0V6LX
0jtOFj1J/VwzM8+7SXRX5Bb9ljWVDtK1Eb9Rbeyid37BGmE9q+0tkclUrxey
NXuE6JF6/9aiV1WZFQqPy/JKu+lqKfpD9n3R67FXqM1/kbFED1GaqG+viv4O
ubH22DLG++Tmn1+q/UtVZzX2UPi2rjdE/4g8pfx79DzR7x0venXWjp5vLLqd
6ANF36x2erJ2Mu9fTyj/Y9afyswQ/Sm/G9lHVweV65t53N5W39LK34vvNrz0
N+Xb/p57Di9Quij3nP4G2bD2PGG+jIPnxF4LfXPP/0ppb7UzUGWuV5nBujYR
3aS843Kvx356/7G55ZgHRfcvPFYxPJvvrPyNdX2UW0aZrjLHUFd96Kuy36nf
zVS+v9LVlL89fEBlOoreRvT9ojdUOx9HHpcByt9M6R3K7yb6P9U9WXSZuW/D
1M4vDdMnqf0i89w4Rfn9kJMbbKDitw3nn6i8DmpnHbU5UWUn611bRNYN/mPO
IRcghyM3xtYHVsqtH9yg8t/DL3Qdo3Z+hBep3CdKf0u9Px6GLqn7Nsr/FL6r
Ng7U9Z2enan0YF0/sK71bG/2K7X5q+qsqLwB/BZdbRhnpe1Vpgf8VGX65dZT
2ip9T+l60WL1uNFO/zYQPVllvlWdJVjrSv9S/g3obLl1Hn7fL4X1IvSjP5Qe
VPhdfyrdLTNfejO1jvlHZLkNWWNRkDd+TD3Pj1T6ROU58LfSqZnX36roz7G/
e+tQjvKHZv7tvSKvsYcyf5cHlD6eOe8wpVeXXqe50iJ2+8jJjOGuyEeiH8s8
/v2V3qerpejNc3+X3SI/G1J77V+udtryLZX3GvpK5jbuVXqi8teH12WeG/up
/PZKf9LVV/S2SoerzOZKd1f7C5XuE7kt5ttekefcqrG/Yzf6oXW+HXpnbR0G
eR684L6g/6D7PMF+r7wjlJ6k9jdkLoU+7Bl5js7ILJMMRq4Ep2Deokdn1inQ
LXZA5kauYO9W231Eb6lnC0TvKPo9pR3Vt96Rf8OpamcLpRep7haV+eaVGp+P
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
jj22zcP+hY2Hvb5jYdvqQallcvLBO5jLVZjbPSv3AV++bpl1PjC5G/PFkONi
+QF7MnZh7tkbkSfYH/FthTcu0nsuyN0vbLMnVdZHV1ab1+fWp7E1nxzyeT6s
su9bqybjA6wFcOPpqXUU9Lgbcu8z+6bW//m98Hp4HrwP2fTLoLeA6aMr45eD
vrw//Yntqzc95DOnwfMPadjuh8/MNrH1qldz0/0Df2VOMhbUXSe0Cda6fmxM
D32cfHz8GMseYTzBiDaKrSOjl7D3tAq4PvoCey7P8RGbJt71V/gt8HD80Ggf
vBAfmA1i+7MeUtmP4pnKcgTrH5+wXoEPkDe/Mv//SuknpXnddfQ39zrFtxyb
GvyzQ2Xb3ETRq4j+APsN+6W+xUel94oOTZYPkQ2viGz3YS3iQ4t9DQxjssZw
79IyLLrLyXrX8Mh2R3x9sCfuo+fvZ7Z3oPPMKG2jxLf0mdK4Or6oa+W2OWID
RvdCb0UeiGrLhdhx5gfZG30Gea17kNlOyG0HQ08/PrdNb1Cwe6EXYBPLM9vq
R6a2k0Fjx2Mds1ZZpzsEPeNY5Z8b2zfvb93vntjvDh877I/gQvcVtouh681G
ly8ti95b2F6JvIbv9srq/3TVbxvsSswpdOQ9Sq+hRwIuip/2g4XtS+ixyGxj
Y6811jJ+mGCkdwT5DVwGfQO9ZnnRg/W73s09v95Req/ypupqkfg5Pkud9Oyv
1PbBoUoHpdZL0CMOqe3DPqY21gnmidz2eu65+Vruecp8xc8GPSkPuhK43aLA
k7cI9+yh8Gn4NXYW+tMqsR/JopBPeZ5xTz38X1YIOuB/lcvjLwrvbwr61Ljc
mMWpuf1U0cnwPcS2i26FjjU8N56JToX9F9wCvB977pmiby9s5x0p+lbRTxde
Cz8GOx44F+v3g9yYOraPLql1xDVT+xmzLo6vrevRN9YG+EqzxPzr+9QyzsDU
Ohr62WoN41VgZNgVkInAxbCBIRPjJ4KduYPaHSR6nOjHK/ucHBH0WXTZo1Pb
hPEDwR/k+tLP8G3bI/K85xuPVL9viRwLA59nb3i0tM8IawB98nA966L0mNQ2
Z96Fn8s1QZ7Dt61lbD8W+ngD9pKG/buwLW/XsL/JgMxyH3463RLLgdTH9rl4
fystcyLjIYdeVToFuwD3Av9CbnmuMh5yqNKtKu/Z2PFvDvbKXUr7EWzVsM8L
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
cur4kE/Zsar7TWpf0APTxUuscVtmexAxS/ha758Gn1DlX147Xot5e5jqrKX8
DJt+4VieFDt7Yb2YscLnDx9R/GZ2DvojeuTJKrNzw2OFbRudCR9/4j3RHYh7
GFo4/qJZ6XgwfD/31vu/TB1b1yx37Ba+cHti3ykc18NYja8dI0TfxtWO+aFv
l4n+J7Ut+IraMUisu0MD9g4GTwzYDLWzl54fkNpXlpipa4OdDnvdlbVjn+jb
qDDmjDP2kcV2/NI+ANhF/lHeM7VjMpnbyCGtw179tO5XzbzGn9K1Sua1/2Lt
eEV+F/gUONTq4Ga14yTpGzIDez5xUfwmcCpi7B6trbvC0x6prU/C9x6urd/C
M4kZnxbkiFX10ZcrzKtXA7vMLb8hC+FHtRA8GZlS961Lyy3gFN/l9pFgX2Jf
niG6Q2be+yQTJjKG+XxtfynWILLZV2BCTZap0Es/AyuqHRMFv7qz9hkN3VV3
Su2zIbrBd2vH5a5aOg4aOfZpdK/aGOVmtWP9Pm84jvPB2nrj5rVjBolvIo6K
MytYi63hsWH824IthPFfsbSe/j+sZWXlXYAMoDFqQ1nRc9XnmbV9NYl7BY/G
lokOemvtuMpOyh+c27cKH6vJtWMsVysdKw0uDT59e+3zKdYqLR8icxIXPCGM
Z5vSMhVyFGe5IHehWxB3+KPKtMt8FsGvou/OLS9xjspivUzt/6z7zpnjmolh
wH+T79iiyf0Di0Oenx10iONKn60yl/Wh6/LMsas/MT8y+/2ik66qshuqjVNq
67zovutmjjFZUs8qPatz+9zi44J+QwxCrfwlcsfSLsE5L6n1i2aiF6S2iTQX
/V7mMxOWFL0wdQzdMk22Mx1T29dikN61bGFZFxmSs1PQI1opXU9l/1a5sZnP
Q2in+9Uz21ZWFt02c8zRGk3+xvgObSB6aOaYppNq67DosujaxERxTgPyHj7Y
+GK3bPKcwB+sTZPt3yeyH+nZb4nl7Y2b7Pd2hvI3avI5L1VtP4QeKvNr7vV3
lOgW9J95lTleae0m++WcXlvX5twMzs8AW8a/Fh9qsGv2as6TWLfJfiojVX6d
Jn8Pzj/B74jY5JaF/Y7wYSKuZHrYF9hzOjJGyOvwisJn9bAGHyl8hs86pc/2
ARfdsLKvONgCGAPnFUzROy6sfRYQ+gNnBeEDCubPuSg/lY5P51wczgSZ2PAZ
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

            "]], Polygon3DBox[CompressedData["
1:eJwtnHf819MXx9+f8Z5flJE0pKRERUakjIpI2atQqIiorLY0yAglFEo0RMko
LTIiGYVslZGRaPgZiTKi3+vZ6/3H+/G5533uve9177nnvM7rfup0vfqs3sUg
CHYNg6Cs392zIJhZCoJ7Vb4kCYLpOq9TweeFIKgTBUFTnZsr+R1Vni3FY9Lr
VPCZ9LWl31nCyZKHS/+A9HvreF79jZL+I+ne0PkZKj+uo6XaHq02Bd3A52rT
SfIK6RdyLZ07U3L7OAj+Vvu/dLRT+Wodh6nuVdJ9qr47pEFwjOpO1LlF0vXV
0Vzla6RfJf156m+l+jtcxxSde1rXm6f69XW+g+qu1O8L0jVW/2dJf6nkLyQ3
1/GE5KtUp6H6u1zlT9Tffmr/tXTH65itc6dJriN9O8mnq9xbx7nqv5L6+0Ll
w/XMc6R/W/3OUvvKkntIniB5guQPVO8Yyeeq/WcqV1ab1wvuo5fKtVTvLsmZ
jn1UPk3Pe4h0tST/rr7OkXyE5AaSt0t+Tm3el3yl+tpV5Re5R+l+0TV6qHyl
nudAlf9TX+N0/QrVWSV5qersrvJu6qOn5InS/yp9dR1z1Nc90q+Q7hudX1Lw
9S5kbCR+3wPy/l7SudOl+zX/RjtJf7TKA6W/X/rLdf16krtJ95Hk3XT/X6l+
XV27VBEEu6h+e+lvUv0HpX9A8inSv6D6P0peo/PvSX5XR2ed+1bycpXfKXj8
nKf+muv5+0k+WOXbdb2z1N8H0v2s9tV0zNbzVNe5vVS+Tu3bq+4eavOnyi1V
n/nQUOcmqs3GxGN1mO7vX9VvLHms9PNV9wnJp+gaTdRgJnNCbX+WfJX630Pl
/fQ8f6n+vmo/Tn1tV/1rJFeXfIv6+05ye9U/SO1Hco+8K7V7qeQx2kblO9Vu
oXSz1aasNlfpOEu6XXQ8r3vopzZ7S3ev6n2f93eH5Aq+j3TvMe4YO6p/surU
0Ll+6m+qzk9S/ZqS+0t+VPJk5qvkAZKnSZ4i+Tm1qSb5W/VRX9ceofNrVe6q
/jLp2ul6DVUu6tyyxO+cd79Kukp6/vo6d4vaP6V2j/H91Ud71V+nOt1Vvlbn
O0mupmfeqnIXtaut+hfq3LXSN1D72yQ/Ld30zM/Ms6/TcYTqXqE6p6u8Sf3N
kq6hrn+kyhtV3lnXbyT5KMn/o53k+/W7E33r3J5qP1/HXur/Ap27Rn01U/1d
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
S96s633JnFb5AR0Hq25F7G83vuAxOFv9T1b5D7XbX/1/FDk+/kf3+7HKsyK/
qw2Sl6n8dWT/8BD1sYkxrP5uoL/A8dFTxBGqO6Ron/Bx9f+FyktUrqf+9wJT
AasIHE//Jv01JcfXm/D9pT+zZJ+F79tQ8mjJ0wv2EXkPvI8DmDN63m/VpgPv
Q/Iq8ALJ55VsA7pLbqT6u5f8zvmeDXTcpfIN6m8gvoeOeyQP0lFHuoVl97Wx
6PHBGGWsRjpWqrxW/XdW+W7i79T3wL3wjpvEfie8m5a4HXq+V7Fx6mtFwetj
7djXGliyj/mmzn2HbSJGUHkz41u6rjoqxcaP6uka+5Udn78ieRXrleq/rPJr
kd/vvrreFarzvNqPVNuqOlZLtzz02B0guZbaP6Z7XlF0HzunjuGIf38pO7Z7
I3Ks3F/19wYbkPyJ5OvxEWN/X/z9vpJrSr4o9Xz5jTlYYR9pWuj5ju/E/PtR
13pCdV7H30ltqw6S3ELfp6nq/1NyTMn1z4/tF+MfX62281gjeXf4zdJ9p/YX
qPyw2q9X+1Xqs7vkhjrODt0P/a0tuX0lbHTJGBdY1/9Sy7uB6+HflY098s4r
x35+bCc+K75rpHPnS3cXNkvlz1lDJffSca6utzm2/4MfVCTe1PMcrPKJOn+s
5Cqx8RnwooWRxzvt6aep9E9IPlS6xfn8GJb5eXgu7u9r/S6VfLx+Lwg9f5gr
zJnqsf0x2jPGGGsfSe6i+5krfYvY42O19KvzOVhW/0dI/4/6a6D+P9X1W6lu
azBTvc9HpJ9Sdgy1JPGafU3ZPgZrOWvI1WVjlKwt9yfGs8As8CcK0o9RX2N0
7lPJYyT3yufIK6kxSLDIKyTfzfgpGxtjzNaT/IvusYnkGpJ/jbymgO22DbzW
fJTatmHjrmehzTyf9wltj5uqzkTJN2IDY/tEYIGsMfhKvXVP1Qr2Pb7NjEmB
TfVlzY7tE/QuG7PEVwBjBGtkjQPLvFrXvBH/F/8ssQ9CXMccwDf5N7Lvvkfg
GGFF6nfLM42TfpvOtSwZwyWefkjtPwuNYb2cOCZ9Bsyn4Fh1FD552T5UF5Vv
yuyfPR8Z7yvontqqv6Y61zf34TuVjTHh289MvF4S+/0k3X/6PbFkTAl/eqLO
9dP1/uP7po4pupXtMxBrsCaDjbYLvFbfGBsfIrY/qMIxXpeyfSpiP9ZY1tr7
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
L/xHEPgZ/FywcP6D5FrJ/wci03TX
            "]], Polygon3DBox[CompressedData["
1:eJwt13n4zlUax/EHv+Wh8bNNZF8HQy6ZsQ2GiIxMSY01ZAktsmYnW+QSUg3G
1GQPpW2oJvsyhWKGGleYH21kyVYSTZZ53dfXH/f1Pff7/tz3Oc/5nnO+56nY
e9B9A/OmUql3WCZrmE6lumjsz0iltvO/zk6lRmDPYR9ja7CR/Pb5U6m6Epth
Tdk1rC5rRbeZv5TuA7mvsEHaY/FxrEuBVOoKdpamN8sR68kvJTeVJ5Xq6Pk3
/suh0V6JfUA3W+6QdMIjfoc6lbCFnvezztqH6f6tzBfiJ7NSqWr5Uqk62G1s
Ar+y/Bp0E9gwupV0P7Mz4j1ZQexBfn261jRbseXYDqwAdo0/kNXEHsMysIv8
Pqws9hBWD7tT7hZsGfYh9rT2NPYR3tfvucnzT8bc0/Mb/AjdWbo95jRH/Lix
nmD/4ldgF7A6/Cn03dW/S+5vtNfInRNjxi6w1+h2BIvfx1+i5mLWir4Kttjz
d+oV8d7W013HztDVxwpjLfTxXcwj9lv2e+336ObpY706dekK0b1Nd1bsvzQ5
2rdnJOsg1sMD/A76GS5+iI0ypnlyJ2JFPQuJb8NOqtUOa0mzS+5b+tgu3kDN
e7Hd2Fpsf7Ab41uHXRX7luYWVkG7doxFvTI096p3D/Yp3Sa5e+UOwGOBP0k3
VayHvMZYUWwjXV78+1jPctuJ/wfbIvcTuV+JlbWGrrBv2Ah+PtofaHqxMnR9
6F5iL7ION9Zwp3gXsW+4E9WcxLqq/z98rfheufOxsfz78E7audge+iPy7o73
hG3AFmKf05VjVbE2xnBOjbIxJ1gpbDZdV7o5cvvhD/ttY+jGiHVWawHeHxuN
fY71xzakk3cT72gE64gNxmbFIZCV7LvYfy3Vu4t/En8Wa8V/QX/Ps0+wgVgx
zz54X32MpD3C76feC/odJn4h5piNxf6qZjtsA01v1jT2C/4r7eVqThJroVZr
rDq2MvYOtpvu+dBqv4uvZXP4Q2gn6He6+m/GXGAt5JbUXiC3v58zO95PrCu5
G2MPsmb85nS3aP+Frh/drDh38PvpNuEPsxb8/jEv+mhAV59VlXcRy7UmGmYk
sbHGMSZ/MtZj8p4zntH8UfHusMZ0jVgFuT1iHmheZHv1+6V+n8TyeeaN/YpN
iLNT/lZ1KrFcNVbwB8V64XeMd0S3i64plqPWDPU7xJrDbsdKYPOxvthM7Bn5
y411qdw3Yv5pmrFC2jPpOtFNppuA5fdMx9rGcuMswLLoJtLdiQ0Va4z9zB/O
6mEb1V9Ae4+xrqd9O9YMfydeyVwd0+/RmBd5NeOMEc9RZ4rcNZ5D8QHih1hB
+nXyXqX7kO4atsLYZ2KL2A59FMGKyZskb7fna+r8gF1k47DHWSnt0uwLsfPx
2+S+H986bD6byH+I7oA+avFPqzuXrqh+y2Cts5I1/A/+XHab3Mt+7x34QHmP
sV/EeGNviZ2T+yhWIMbGdso9gZWXWy3WLDbd7xih38l0vxS7me3DTsa3B+vq
2YLVlDtZXglWXm71G/u4r9zT2rn664EXjzmUN5LtUL8cf5T5K0l3Lp2cIXGW
5BE7zz+Hb8D2YSVoz/N7s+M3zro48/7JXxt7gW463af6eSedrKNYT8XjjhD7
Xp+5mcl5EOfCYe1NdN/TneCXjjNAvQvq1aBtz28TZ5wa0zyHY28Y1644Y/y2
N+keZTPEa6s1PuafpiB2QHwzfxMbgaX1c1UftdWZr49MrAhWOjM5u/vQ95L3
mfit4pewH9l4uhp4lnhT/iv0U+V9RDcHmxs67JE4h9lP+hjGmquxP76BtIXF
J2NtjXOqvCt4K+9rsNwq/Kv8JXGXwibQPUHfll9dvYPqdMCr6qsiPxP/MfYp
K6deX/lP4M+qNZs1w0Zj38ZdSm4pz5LsqVjf+ZM1G2v3YJxt2JTYh/zsrOR7
8xR/mT62ilfDvsKKYxfZOPUqq3U6vtc0FbGxWCVsJ+2oOKuyk29sfGtH0nWK
90GbHd/3ONeMbzjNAdZI7mW6U/H9ib1Bd51mMKtF9zjNIraQtRSvrMaiuM/Q
NdF+l24u3TrxWnGnxFZjU+OOitWJ73esRezP2PtY6XRyF9xSIKkb9Wtj9bDX
6Z6mew+rjtXClmGjsNexKljNuBvFO8JWYWXSybi2FkjuT3GPmmVeVnlf4+l2
RV2aPHHviu+B3/ql+bmZ5gE5M8QzsLewj+VWpbsVW5KR3AniblA2ndzJttEv
5S9jOVgaG03XJO7ZwWLdq1NevWViPemP4pvzJHetrmww1obVEf+73O7ewVF5
+bGGcaawX2N7sSZx/45xsPZqvBTnNdYoM7kPxb2oEd22ONPjTpeR3KObindQ
53KcETTdjK8I1ijuNTF3Gcn3Nb6z3bC5YvPibkd3SN4f8KHxjuJOQrc4dNnJ
f47FMTfswRgv+06tRzKSb31883uJHaU7pu/NrF9Gck+K+1LH+M7HvVjeNeOu
ih82JyXorvMb4Cfpu2Qk+z32/XE1f5KTTduV7mtsMdsrfpCueOwd/h9jPJnJ
XTnuzA2xY3JS2t1purEhcaZ5bo/9o9a+fMmeXp1O7vorxFJyDsk9E2OL+zpt
SXxAnC2x99Rfid0k1j3mOPY6VjG+hWoUlnsJO4Utwl7W/zTslD6uZCb39rgf
xz05/kvFf6pV+Kuslz7asgaZyf05dHHfPyr3EtY8K7nT18OKYWWxz9hw/a6L
tYGv1t4jtzPt3fz/A/jKzik=
            "]], 
           Polygon3DBox[{{2073, 1313, 1505, 2664, 1947, 1948}, {2693, 1862, 
            1880, 1070, 915, 2563}, {2226, 1488, 1158, 1159, 1489, 2227}, {
            2598, 1078, 1077, 1218, 1417, 2152}, {2632, 1326, 1198, 1057, 
            1056, 2597}}]},
          Annotation[#, "Charting`Private`Tag$22909#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, 
      {GrayLevel[1], EdgeForm[None], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtUr1KA2EQ3Nyd0btoBBv/KkEIdj6AnUgixiaIjcRCEK0ULPIKdoovoC9g
giBaJyCYH7Ax6aIG8gQKVhJ1hp3iY/d2Z/dmZ3fp4LR0EpjZBl6IdzdhdpQy
e4jNthDYDPy7C/8J+WfYAmJ/ePuI52F/8YbwD5Hbgd+A3w7cz8Gvwg6Eyct+
m/dhvAh/MjL7gZ2CnY0cNwdbQc8R/DJqlhOvWwfHjPCsewGmBcwnbKI48/eI
3eKdoXY+8toF2O3QOR2nnAt5MMeZCuJT0HyMF6UDOfTSZjPoURr3uUeapxY4
hj1D4fdQexk7h37sMeaIodhB6No+IpcKXfNs5P505LXMcycDceO/stL51dzy
m5rfAP8FfyXx+WriQwx3k9NeqFVdei7iP6uJY6uacSCfOnRUy/4f6tELXRMT
/57i77BrGbNdaHOe+Lw19eQOqAN3Y6ov6za4D/5rLPYbu469Tzft+pJ/U/P2
pecF7FXsGtMnjrcylA7kzT7k3tEdVrR3YprqWxeHiviQM++efd90813p3Rae
mKJmbynO/v/TAW5l
           "]], Polygon3DBox[CompressedData["
1:eJwtkLtKQ2EQhOdcTHKOeIt3TSMIFml8gFSmiGCXwka0sLFT8CXslLyApZVF
QLTWUgQrrSL4DCmsRMk37CmGf/Yys/vv1ulF/zyV1AI5+KhJS5BFsF+XZnh/
ySeZNAtfBn8I/sEK/KuQDqidJdIN/AmkxPPU2mW8jgUW4Gugh/aH1Dp8l56N
POLtMjzt7Z5VeLcRtRP87+DX+N9TewAD+LAR+znn+e4ZMatVab3DXB77e7fH
InZNq9h/9F+b4LMWGms389jH9eMk/uzbWG8vzxxW+xwpbuBb3II3el/QTMH3
8HmGv5J7z2KGb2FPe9vXNz2Ed6alqzLu71mOC/hlEvNK+DgLrx1y3/B+Pe6q
ynsCLSIz7Q==
           "]], 
          Polygon3DBox[{{2462, 196, 989, 1010, 2463}, {2601, 990, 295, 715, 
           2463}}]}],
        Lighting->{{"Ambient", 
           GrayLevel[0.8]}}]}, 
      {GrayLevel[1], EdgeForm[None], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFVDtPlFEQvev9ZPcuFoTGQhNj7DZQaGc0uzQ+YhQU1sR1K/kBCpYmLkaF
JbFDFBoSpLAkwUSzPKxQOgvBP0An0cCaGJ+J8RzPSSzuzuzc+ebOnDkzR4dv
Dd7cF0K4jxNxpvFTwCnnQ1jDxWucx7kQWpDrODPw6YdcwZmC/QB830B/DvsC
5DxOD+yb1rtgP1gMYRF+hyGfphAe4f4J5FfcP8M5Ap92Tu9NQp+FLOOUYKsl
xagjn3HESDiruNvC6bPPA+e87HwZh280YLsblQ9z4D3f/YXzEPbfkHNJtd0o
KF/WcBr+TdxPuLZK1B3tn6GPQN+Jev8LTi/st/F/j3n527fQu6Hfi4rJHL7h
rW7mn1TvS+fJWjdzquVaUoxOyFHH5NtjUd/W2APjw3d3rUMNhUwxd6PiVKAv
JX2/5xzmXU+X+zgY1VPKfveUubPuOeg/kmr4mWRjv2mfNm7Eb8eYbLgH7AXj
tJIwILZV94i9+55UD2OyV8SCOJALNfPhatQduXcuk/085ExSnvUkDi4752NF
cWcRPFlO+q7unEfMz6r5Q/+FpP5dT+pdG/oH40Tc2QPqvKO9bZ32oSi8pszz
UfNj1pzsNZdZA3Pim0P2f19QrZyDojEn/sSTuG7jfjIJi2bSt1XjdjJTHZ/8
PmO2jHfV8V8k8zfJp+X4xO+Osd2fac4zyEPArQPyRFEYbsF+HPJd1FyFTJI4
X8prJshv9nUvim/k3ZlM8c+ag5x31pnLNGsfPRNNz9SGOfOHGCBuhN/lvGqZ
dr1l/+f7wwW9SU7Rn/f0W8P/C/i2pyidM8I5W+0I4SLsQ3nlzfxfRfGZ2BLj
9SjubUfZxjxfzG/C+ZGrnBvO7KlOxeAe415pxP+caXjPEE/60PdKppkezMSR
Te+HCvIZIJZF7TdyhnxseN4Zkzz5x40kv4FM31W8+0reG7PmW5/1kvmZ3Hv6
7Hq/EBPGXunQfmEu5H/ZO4U7ZMl7g28R83Hvyb/VgcqY
           "]], 
          Polygon3DBox[CompressedData["
1:eJwtkjtPFVEUhfedOd5hhsbQUGhCCJ0hFFYmvih8JvKQWIhU8gOA2sRIAqKJ
pagVhRSWJJhogKsVUloI/gDtSHxhYgQxqN9yTbFy1j77efZZ3eOTIxNZRJwA
CSyUERtcLDQi5uF/8ogp7DnOjIAV7kr4XTDeFvEYew3/IHiHvYy9A98i/zr8
EVjNHKPYL+QtgRfY3zgPQAexs5wN6vdWEZc5O7BfEd8qze+AXfiv0vwp+Xvw
G6V7bWIv1vG92LeJ+VnHT+e+U34f9bdz99vHvgdO4Vsk/35piCtH9YcL3gNv
6Y3wj7xxHb6SeT9rzYgB5r0CWk3vaK5+00HdQ7mqod7tmhf7bOb9qL/e8gM8
h5+mx2ByTdUew/6Orx+M4r/Z5t76A/3FS86C2L+cA8Rego9m3pn2eLyyX3FH
Ku9LtTSDZhlOnuUY815Nrq/Z/2sA/xh4iP0a+wn8AjG3Mve4qNzC+aozVDhG
sQ8a1sMn+j4La+gzfCS51yb4kDtfb5ZmpJ1z+LvCPc7Df5fWmnaoXc7A34IN
cKZw/lDyzlRHd/Il7Pnc+bP1f0iv2pF2JbGr1tdaizv413O/V1qu4Kv1/77P
PJ/qS2PS2uHwf0jfeqs03cl+j1betTQv+2R7xDXymsn7X4K/wb8FeirPeAhf
nqyvf/tveLg=
           "]], 
          Polygon3DBox[{{2588, 942, 1005, 1876, 2875}, {1875, 1099, 893, 724, 
           1723}, {2550, 893, 1099, 1098, 2492}, {2609, 993, 496, 136, 
           2595}}]}],
        Lighting->{{"Ambient", 
           GrayLevel[0.8]}}]}, {}, {}}, {
      {GrayLevel[0], 
       Line3DBox[{750, 1, 663, 301, 753, 1883, 16, 831, 316, 2482, 756, 31, 
        1092, 1093, 1094, 1095, 1096, 1097, 2604, 1098, 1099, 1875, 1100, 
        1101, 1102, 1103, 2694, 1871, 1104, 1105, 1106, 992, 466, 750}], 
       Line3DBox[CompressedData["
1:eJwl08lLlVEYx/GjN23OgoIWZdqkWV4t0yK1klbRqqQcIgqpwCBbVn9ARNAi
WrSpkCiX7ooWQZM0aKOSlveW8wBBi7C5Fn0OLr58f8855znnvO+9b37TqX0t
GSGE90gKmVwzM4TaGSH0JYxjBI3GKuaE0CnfxxS+ocH4GP9FufkufoBxvMFn
fMBuex+3Nmn/Fq7m5c54a64fhXq7OYVRvMBD/MBe64vM/5S/4xf2G3vJj1Bi
7jf/wQT+YRI9eIzL1p5wXhuf5YvukuvsFSjQm8f5WIlVWI01qLN+LRdbU8CF
WIcirMeGOIck6q0t4TJrS3kjNsUam1GOCmzBVnyMzzIrhHZ3ueNOefq2Ga9E
Fapjn7HtvAM7UYNdeK53kN/p69A/JPfKzcafqNPZIeTIfcaeZkz/touNdcoL
4++hXqLuUvfLS+VX8rB9UurX8oiclkfjXTnTH2NM/iSP8wBP8CBP8hAvs0+3
3kXOGFZ/0ZPAV++mJ+7FHdzLt/kZt/E9vsJ3+Ty38xm+xTfRLF/iRj7He/g0
V/FJLuZjnMsXvNNKd5hybo46xWn1UXdcoG7i+XyE5/FhnsuH2OsOB3k23/As
rXptF67L1+R6c44JV+U6OTt+N/Y+IGfJZbIYWhWlciL2Zk1/V/8ByKJwaQ==

        "]], 
       Line3DBox[{767, 76, 845, 360, 771, 91, 2449, 691, 370, 1033, 1034, 
        1035, 1036, 1037, 1038, 1039, 2603, 1040, 1041, 1874, 1042, 1043, 
        1044, 2695, 1878, 1045, 1046, 1047, 1048, 1049, 1050, 2608, 1051, 
        1052, 987, 2214, 350, 767}], 
       Line3DBox[{1966, 136, 853, 403, 2489, 778, 151, 707, 2273, 413, 780, 
        166, 1081, 1003, 1004, 1001, 966, 1022, 1026, 1021, 1025, 1000, 2606, 
        1008, 1872, 1027, 1029, 1028, 965, 973, 1024, 1023, 1031, 2610, 1030, 
        1876, 1005, 1007, 1032, 1006, 963, 993, 2609, 979, 964, 1966}], 
       Line3DBox[{967, 196, 2309, 449, 782, 211, 712, 448, 1090, 974, 1009, 
        991, 981, 990, 2601, 1010, 989, 980, 967}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1893, 2053, 2707, 1892, 2052, 2706, 1891, 2051, 2705, 1890, 
        2050, 2704, 2495, 2497, 2559, 2558, 2872, 2498, 2196, 2325, 2049, 
        2703, 2195, 2398, 2871, 2557, 2556, 2494, 2193, 2324, 2793, 2616, 
        2194, 2192, 2794, 1889, 2048, 2417, 2190, 2819, 2322, 2047, 2323, 
        2702, 2658, 2443, 2046, 2415, 2188, 2472, 2321, 2471, 2470, 2853, 
        2473, 2180, 2442, 2186, 1698, 2441, 2187, 2106, 2397, 2877, 2613}], 
       Line3DBox[{1894, 2107, 2400, 2499, 1758, 2399, 2414, 2108, 2198, 2365, 
        2768, 2670, 2197, 2518, 2189, 2517, 2617, 2792, 2416, 2109, 2200, 
        2366, 2367, 2199, 2795, 2191, 2201, 2054, 2418, 2842, 2110, 2202, 
        2055, 1895, 2770, 2111, 2203, 2618, 2769, 1896, 2493, 2619, 2856, 
        2564, 2112, 2204, 2620, 2771, 1897, 2496, 2708, 2056, 2565, 2113, 
        2205, 2057, 1898, 2709, 2058, 1899, 2772, 2114, 2206, 2059, 1900, 
        2710, 2060, 1901}], 
       Line3DBox[{1902, 236, 1471, 340, 237, 1760, 795, 794, 1777, 817, 238, 
        605, 1650, 239, 1903, 2773, 240, 607, 1651, 241, 2774, 1904, 840, 
        2863, 1905, 242, 2775, 1906, 2621, 2740, 1907, 243, 1908, 2711, 2061, 
        1909, 2776, 244, 1910, 2712, 2062, 1911}], 
       Line3DBox[{1925, 2063, 2713, 1924, 2213, 2326, 2212, 2796, 1923, 2742, 
        2623, 1922, 2125, 2211, 2124, 1921, 2741, 2622, 1920, 2778, 2123, 
        2210, 2122, 1919, 2686, 2864, 2223, 2523, 2222, 1918, 2820, 2221, 
        2445, 2220, 2522, 2862, 1917, 2121, 2209, 2120, 2777, 1916, 2219, 
        2444, 2218, 2797, 2521, 1915, 2119, 2208, 2118, 1914, 1476, 2519, 
        2216, 2520, 1913, 2676, 2843, 2117, 2207, 2116, 2376, 1912, 1617, 
        2593, 2600}], 
       Line3DBox[{1936, 2064, 2714, 1935, 2747, 2626, 1934, 2746, 2625, 1933, 
        2745, 2624, 1932, 2659, 2744, 2231, 1931, 1492, 2230, 1930, 2799, 
        2229, 2228, 1929, 2821, 2227, 2226, 2798, 1928, 2225, 2487, 774, 1753,
         775, 589, 2350, 2865, 849, 1927, 2217, 2328, 588, 772, 569, 2743, 
        2349, 568, 587, 1639, 586, 2327, 2215, 1926, 2602}], 
       Line3DBox[{1938, 2594, 2402, 2500, 2838, 2065, 2401, 2420, 2421, 2233, 
        2368, 2800, 2066, 2232, 2526, 2527, 2448, 2847, 2067, 2234, 2129, 
        2235, 2369, 2068, 2330, 2661, 2715, 2237, 2069, 2236, 2646, 2716, 
        2404, 2501, 2070, 2403, 2662, 2717, 2241, 1310, 2331, 2240, 2503, 
        2560, 2857, 2071, 2405, 2132, 2244, 2801, 2072, 2332, 2243, 2718, 
        2073, 1948, 2135, 2245, 2074, 1950, 2719, 2075, 1952, 2720, 2076, 
        1954, 2721, 2077, 1956}], 
       Line3DBox[{1955, 2754, 2629, 1953, 2753, 2628, 1951, 2752, 2627, 1949, 
        2134, 2751, 2133, 1947, 2664, 2750, 2352, 2242, 1946, 2647, 2749, 
        2131, 1945, 2663, 2748, 2239, 1944, 2822, 2238, 1500, 1943, 2130, 
        2548, 2870, 2645, 1942, 2389, 2390, 2351, 2831, 2660, 1941, 2128, 
        2525, 2127, 1940, 2476, 2854, 2679, 2329, 2475, 2474, 1939, 2683, 
        2860, 2514, 2419, 2126, 1937, 1866, 2607}], 
       Line3DBox[{1957, 2136, 2247, 2370, 2630, 2832, 2246, 2377, 2378, 2249, 
        2371, 2802, 2078, 2333, 2248, 2451, 2848, 2079, 2422, 2423, 2424, 
        2250, 2407, 2080, 2406, 2648, 2722, 2567, 2081, 1958, 2649, 2723, 
        2251, 2409, 2082, 2408, 2839, 2425, 2426, 2252, 2631, 2779, 1959, 
        2502, 2568, 1321, 2566, 2137, 2253, 2803, 2083, 1960, 2724, 2084, 
        1961, 2138, 2254, 2085, 1962, 2725, 2086, 1963, 2650, 2726, 2255, 
        2087, 1964, 2727, 2088, 1965}], 
       Line3DBox[{1975, 2095, 2730, 1974, 2094, 1416, 1973, 2093, 2729, 1972, 
        2092, 2579, 2144, 1971, 2091, 2866, 2535, 2534, 1970, 2784, 2634, 
        2143, 1969, 2858, 2633, 2532, 2507, 2508, 2859, 2510, 2509, 2412, 
        2142, 2783, 1968, 2090, 2336, 2141, 2782, 1967, 2089, 2530, 2728, 
        2681, 2504, 2506, 2505, 2335, 2140, 2260, 2373, 2372, 2833, 2353, 
        2259, 2410, 2675, 2781, 2411, 2334, 2139, 2379, 2256, 2780, 2632, 
        2597, 2599}], 
       Line3DBox[{1979, 2099, 2734, 1978, 2098, 2733, 1977, 2097, 2732, 1976, 
        2096, 2731, 2533, 2536, 2809, 2638, 2362, 2272, 2339, 2808, 2637, 
        2271, 2460, 2807, 2636, 2360, 2270, 2338, 2806, 2635, 2358, 2269, 
        2850, 2459, 2577, 2576, 2578, 2262, 2586, 2874, 2687, 2268, 2375, 
        2374, 2356, 2267, 2849, 2458, 2457, 2574, 2573, 2575, 2261, 2561, 
        2529, 2264, 2456, 2805, 2677, 2479, 2263, 2478, 2337, 2680, 2804, 
        2477, 2354, 2258, 2589, 2591, 2590, 2450, 2605}], 
       Line3DBox[{1991, 2102, 2737, 1990, 2101, 2736, 1989, 2100, 2735, 1988, 
        2755, 2639, 1987, 2814, 2290, 2363, 2289, 1986, 2824, 2288, 2287, 
        1985, 2840, 2285, 2361, 2284, 1984, 2823, 2283, 2359, 2282, 2813, 
        1983, 2280, 2531, 2279, 2811, 1982, 2391, 2277, 2357, 2276, 2810, 
        1981, 2150, 2528, 2149, 1980, 2480, 2855, 2266, 2549, 2265, 2396, 
        2490, 2674, 2837, 2148, 2355, 2147, 2562, 2563, 2693, 2878, 2611}], 
       Line3DBox[{2005, 2103, 2738, 2004, 2167, 2166, 2789, 2003, 2759, 2641, 
        2002, 2165, 2758, 2164, 2001, 2757, 2640, 2000, 2788, 2163, 2291, 
        2162, 1999, 2873, 2569, 2512, 2513, 2511, 1998, 2786, 2161, 2286, 
        2160, 2787, 1997, 2159, 2413, 2158, 2785, 2684, 1996, 2157, 2281, 
        2812, 2651, 1995, 2380, 2156, 2278, 2155, 2515, 1994, 2665, 2756, 
        2340, 2275, 1993, 2671, 2834, 2154, 2274, 2153, 2428, 1992, 2841, 
        2152, 2598, 2151, 2427, 2293}], 
       Line3DBox[{2019, 2104, 2739, 2018, 2175, 2301, 2816, 2654, 2017, 2763, 
        2643, 2016, 2174, 2300, 2173, 2015, 2762, 2642, 2014, 2653, 2761, 
        2299, 2172, 2013, 2868, 2544, 2543, 2012, 2790, 2171, 2298, 2436, 
        2435, 2845, 2011, 2433, 2434, 2297, 2815, 2652, 2010, 2170, 2296, 
        2844, 2432, 2431, 2009, 2429, 2430, 2295, 2169, 2008, 2682, 2760, 
        2570, 2572, 2571, 2007, 2685, 2861, 2516, 2294, 2384, 2383, 2006, 
        2817, 2381, 2382, 2292, 2168, 2592}], 
       Line3DBox[{2033, 2314, 2767, 2669, 2032, 2308, 2343, 2826, 2667, 2031, 
        2766, 2644, 2030, 2307, 2342, 2306, 2029, 2668, 2765, 2313, 2028, 
        2691, 2764, 2580, 2582, 2581, 2027, 2692, 2869, 2546, 2545, 2312, 
        2026, 2827, 2311, 2465, 2542, 2852, 2690, 2025, 2305, 2341, 2825, 
        2666, 2024, 2310, 2464, 2689, 2851, 2541, 2023, 2177, 2304, 2176, 
        2022, 2540, 2867, 2688, 2537, 2539, 2538, 2021, 2673, 2836, 2388, 
        2303, 2387, 2386, 2020, 2672, 2835, 2385, 2302, 2612}], 
       Line3DBox[{2185, 2045, 2701, 2657, 1888, 2044, 2700, 1887, 2043, 2699, 
        1886, 2042, 2585, 2584, 1885, 2041, 2830, 2348, 2184, 2320, 2040, 
        2698, 2183, 2438, 2039, 2829, 2347, 2182, 2319, 2791, 2615, 2346, 
        2181, 2846, 2437, 2038, 2484, 2697, 2656, 2318, 2037, 2364, 2345, 
        2696, 2655, 1884, 2036, 2483, 2179, 2316, 2035, 2818, 2678, 2317, 
        2469, 2468, 2547, 2034, 2828, 2467, 2344, 2105, 2178, 2614}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{307, 305, 2483, 758, 319, 2415, 637, 230, 2200, 333, 238, 
        343, 2208, 247, 485, 2328, 354, 932, 846, 2525, 253, 2235, 375, 259, 
        2250, 388, 268, 2335, 498, 400, 2575, 934, 854, 2528, 276, 419, 2278, 
        279, 433, 2295, 288, 443, 2304, 297, 454}], Line3DBox[CompressedData["

1:eJwVzj1LQmEchvF/cI5CDdHL2CK2NgQ5SvoJgoY+gJsNCm35ASIKWgoamuwF
gl7QpSD32mxNGqspdC0ypV/DxXXf93meh5Or1NdrExGxho0koplGnGJ3MqKY
iRjhRj/jWz6wL8ot+QGfeps7qGLLt00+5zEe5b4zF/KTvMpJNmJ5KqKrX+nP
fM0lTNtf9CW5xyfuvvI2GrbG///ZVrxRwJvtA++4tKe2DPrOtWw57w3ktlzG
l/zjXEH+lof41fc4se1zysdYcPdQ35GP+I7ztjnvz8j3mMU8/gA2pi7B
        "]], 
       Line3DBox[CompressedData["
1:eJwNzC9PAmAQB+BzKn+js1iQ0WwUNvgMJgudqsNNJ2ODghbYrJJs2P0CBiNR
YCoY3NisYJGgBHzCs9/dvXdvvnZ+Ut+KiGOqOxGD3YhcIuJB9jIRL+oRE8YU
2M5GPHrvqhcs6XFgXjN/4pRX92fymQtm+qG85M3+OzOmHJFPRhySo+SvK3sf
NLh327TTUrcZ6L/kNZ/qG1n0XnZb4Vtf8UdanSLJr9nabsnen7ojf1gxN+/L
W/OE3Ojv1H3K+rS/MnKPLPv8A4QfKuY=
        "]], 
       Line3DBox[{1112, 1694, 1695, 1692, 2846, 1446, 1598, 1458, 2794, 1460, 
        1462, 1379, 2770, 1381, 1469, 1676, 1677, 1651, 1390, 1702, 1791, 
        2862, 1792, 1703, 1482, 1158, 1488, 2798, 1851, 1490, 1170, 1500, 
        1655, 1502, 2717, 1504, 1405, 1659, 1682, 2839, 1681, 1509, 1412, 
        2783, 1413, 1662, 1802, 1803, 1714, 2850, 1521, 1602, 1532, 2813, 
        1664, 1534, 1536, 1421, 2787, 1669, 1423, 1543, 1689, 2845, 1690, 
        1688, 1432, 1720, 2852, 1812, 1813, 1721, 1559, 1560}], 
       Line3DBox[{1115, 1447, 1569, 1259, 2698, 1116, 1463, 1574, 1267, 2703, 
        1131, 1382, 2771, 1276, 1142, 1391, 2775, 1285, 1151, 1396, 2778, 
        1293, 1161, 1492, 1580, 1301, 1173, 2749, 1399, 1583, 1312, 2801, 
        1184, 1407, 1322, 2803, 1194, 1414, 2784, 1330, 1203, 1522, 1588, 
        2808, 1337, 1212, 1537, 2824, 1592, 1346, 1223, 1424, 2788, 1357, 
        1234, 2761, 1433, 1366, 1243, 2764, 1814, 1374, 1251}], 
       Line3DBox[{1117, 1448, 1260, 2830, 1118, 1829, 1464, 1757, 1830, 2872, 
        1831, 1132, 1840, 1756, 1839, 1277, 2708, 1143, 2740, 1286, 1152, 
        2741, 1294, 1162, 2744, 1493, 1302, 1174, 2750, 1505, 1313, 2718, 
        1185, 1323, 2724, 1195, 1806, 1331, 2866, 1204, 1808, 1523, 1807, 
        2809, 1338, 1213, 1538, 2814, 1347, 1224, 2757, 1358, 1235, 2762, 
        1367, 1244, 2765, 1561, 1375, 1252}], 
       Line3DBox[{1119, 943, 2585, 944, 789, 2704, 1133, 234, 2205, 338, 243, 
        346, 2211, 250, 1163, 2745, 1303, 1175, 2751, 256, 2245, 383, 264, 
        2254, 392, 272, 2579, 938, 863, 2731, 1214, 2755, 1348, 1225, 2758, 
        284, 438, 2300, 293, 510, 2342, 445, 1253}], 
       Line3DBox[{1120, 1261, 2699, 1121, 1268, 2705, 1134, 1278, 2709, 1144, 
        1287, 2711, 1153, 2742, 1295, 1164, 2746, 1304, 1176, 2752, 1314, 
        2719, 1186, 1324, 2725, 1196, 1332, 2729, 1205, 1339, 2732, 1215, 
        1349, 2735, 1226, 2759, 1359, 1236, 2763, 1368, 1245, 2766, 1376, 
        1254}], Line3DBox[{1122, 1262, 2700, 1123, 1269, 2706, 1135, 1383, 
        2772, 1384, 1470, 1392, 2776, 1393, 1575, 1473, 2796, 1474, 1165, 
        2747, 1305, 1177, 2753, 1315, 2720, 1187, 1408, 1409, 2726, 1510, 
        1415, 1416, 1206, 1340, 2733, 1216, 1350, 2736, 1227, 1425, 2789, 
        1426, 1544, 2816, 1434, 1435, 1594, 2826, 1548, 1549, 1255}], 
       Line3DBox[{1124, 1449, 1450, 2701, 1125, 1270, 2707, 1136, 1279, 2710, 
        1145, 1288, 2712, 1154, 1296, 2713, 1166, 1306, 2714, 1178, 2754, 
        1316, 2721, 1188, 1325, 2727, 1197, 1333, 2730, 1207, 1341, 2734, 
        1217, 1351, 2737, 1228, 1360, 2738, 1237, 1369, 2739, 1246, 2767, 
        1562, 1563, 1564}], 
       Line3DBox[{1247, 1370, 1863, 1550, 1627, 1626, 2835, 1238, 1361, 1613, 
        1545, 1625, 2817, 1624, 1229, 1352, 1668, 1667, 2841, 1417, 1218, 
        1342, 1769, 1663, 2878, 1862, 1880}], Line3DBox[CompressedData["
1:eJwVzj8oxGEYB/D38q+OxcV0bmBQishgMRgMuhJ1xIDi5N8RJSZsZhQji8Fi
sBgom5TpmCilzqYo1xEGg89v+PQ87/N9fr/3bcyuZJZjIYQchfIQxipC6K4M
YYJx6qpDeDTPmL87v/HDN22yvCwt63cuI2E2qo5wLeuR1VaFcO78pa+XL+mf
WOTCTpd5k53baCceQqe6QI55zuy029nSP8s31QP2OZGVzJrlaecOhshwKCvK
GmR9zg/qp1qi1Tv25AmzlLtvzFqYZY4ZtuVx+bp+jaRvdtUdNmQx2Yu+QJEP
Vs1/6dXfu/vSzqB+IPpv9B7+9MecyqbVO7IMy2rc8aomvenKLMUUeSY58s0/
Jo85hQ==
        "]], 
       Line3DBox[{1249, 1372, 1596, 2827, 1558, 1241, 1364, 2790, 1431, 1232, 
        1355, 2786, 1422, 1221, 1344, 1591, 2823, 1533, 1210, 1335, 2806, 
        1587, 1520, 1201, 1328, 2859, 1768, 1767, 1834, 1833, 1192, 1320, 
        2779, 1406, 1182, 1310, 1582, 2822, 1501, 1171, 1299, 1579, 2821, 
        1489, 1159, 1291, 1576, 2820, 1481, 1149, 1283, 2774, 1389, 1140, 
        1274, 2769, 1380, 1129, 1265, 2793, 1573, 1459, 1113, 1257, 2791, 
        1568, 1445, 1693}], Line3DBox[CompressedData["
1:eJwVzKtPAmAUhvHDRdwUGptAcW4GFG+o3CIdCxvFzWI0iMVgMZj8A+xCk4oz
abY7m4XNYLC4Wdwk6I/w7Lzvc873rRz3u6eJiDjAezriaC6iMB9RQhG1xYg3
vsfvy0vci97R63ITLb5hPvNtviJfZfzD/+mPfNP8WYi453P2WYz5Kr/u7oMf
6Wt61W4Pu7idOftlvqxfuJvIT/66scvLX/Krea1nzTs3O96k3Cdxyaf5bS6h
n+tTlPUNfQubOOG+0eBX9TP/PHh3yOW4T3PATfGLIf4Bs8sjOA==
        "]], 
       Line3DBox[CompressedData["
1:eJwVzzkvxFEUhvFDLAmFpWZsYT6Az0AxOjItIQqNUWi1oqVQiaUTImhEFPax
zkyUJAqFZgyNYoTO7188ec95zj335vZMzY3maiJiEpv1EWsNEX/YUKfkKc5x
htrmiGxdxLT6AlvO9MpL9JtdyyvMOJOXHY0Re84sqctN7uXn8ab/Tu4zW0jO
yhsMccNY5MblsZ0CX8SO/ha7WDEf8N6dOuWNkvkzOtHFr5u/q5fN07Kb2+bK
6g9k+DZuRB7yE7LCf6LqzX39Aw5wYv4o+7zzZZ62V5UFroQi8skf7P3wq/qM
fOLuuYr+F2PcCzdov91dLVwrZnGEHF7xD3E7PIY=
        "]], 
       Line3DBox[{1857, 1856, 1436, 1858, 1882}], 
       Line3DBox[{1877, 1297, 1167, 1866, 1867, 1654, 1762, 1307, 2838, 1179, 
        1400, 1506, 1608, 2832, 1317, 1189, 1620, 1621, 1511, 2780, 1326, 
        1198, 1860, 1852, 1861, 1709, 1879}], 
       Line3DBox[{1881, 1647, 1868, 2877, 1263, 1126, 1377, 1649, 1758, 1271, 
        1137, 1674, 1675, 1471, 1604, 1280, 1146, 1616, 1617, 1475, 1859, 
        1289, 1155, 1865, 1873}]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
zuN/AERwy4E=
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{377.54512806995183`, 344.7103207587958},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{0.1, 20}, {0, 10}, {-0.8146124206414166, 0.8123403187681952}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.2931095992863544`, -1.837041371669574, 2.5304439458339893`},
  ViewVertical->{-0.43044628824217673`, 0.6115085992856975, 
   0.6639075432153014}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.},
 CellChangeTimes->{3.85577266610658*^9, 3.855772697849112*^9},
 CellLabel->
  "Out[191]=",ExpressionUUID->"236b9945-fa02-4267-ae6b-41365ebf6aec"]
}, Closed]]
},
WindowSize->{1276, 671},
WindowMargins->{{Automatic, 0}, {0, Automatic}},
FrontEndVersion->"13.0 for Mac OS X x86 (64-bit) (December 2, 2021)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"7ddb1001-f0ca-4712-aad7-bf74aff45c23"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 2775, 40, 221, "Title",ExpressionUUID->"6a24496e-2f67-451f-b810-448a6a81f160",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[3358, 64, 1230, 21, 94, "Author",ExpressionUUID->"ad9e396f-b723-4bc0-a47c-edc1f393da64",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[4625, 90, 228, 4, 69, "Section",ExpressionUUID->"d41da0e9-5ed0-4c47-adb8-ac5a380c4da2",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4856, 96, 438, 10, 63, "Input",ExpressionUUID->"63c430bf-d176-4a81-8336-374f37bbc6b5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[5297, 108, 1512, 24, 43, "Output",ExpressionUUID->"8b237634-a19c-408d-add1-39773f574342",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Closed]],
Cell[CellGroupData[{
Cell[6846, 137, 691, 11, 55, "Section",ExpressionUUID->"a030eeca-16b1-4e57-96c7-d6cf5fb2e50e",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[7540, 150, 504, 10, 63, "Input",ExpressionUUID->"78488de0-841f-4ad4-90d6-7c0b19a4e08b",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[8047, 162, 469, 9, 43, "Output",ExpressionUUID->"a49fd5c8-1bb3-471f-8d8a-cb7adc2b2e61",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Closed]],
Cell[CellGroupData[{
Cell[8553, 176, 251, 4, 55, "Section",ExpressionUUID->"c2c21a3c-c189-4385-b68a-8c4bf7708b50",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[8807, 182, 1673, 46, 189, "Input",ExpressionUUID->"3ebb46f9-540c-4fa2-aa6b-61f1af2f54f0",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[10483, 230, 1786, 29, 24, "Print",ExpressionUUID->"0e7aa03a-73e7-4df2-87d6-dd0be61fb22e",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[12272, 261, 1807, 30, 24, "Print",ExpressionUUID->"a5ca3dfb-9e05-4065-a9d5-ef7f6e039c8c",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[14082, 293, 2131, 33, 84, "Output",ExpressionUUID->"6ca74439-5046-47a7-86aa-82fae80ef711",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[16216, 328, 268, 4, 41, "Input",ExpressionUUID->"b9a0fe09-4c5a-470f-99b0-e64abe8bc33f",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[16487, 334, 308, 5, 41, "Input",ExpressionUUID->"faae55ea-aec3-4456-855c-6aa986faaa91",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Closed]],
Cell[CellGroupData[{
Cell[16832, 344, 266, 5, 55, "Section",ExpressionUUID->"2c6ea12b-8d52-41a2-9128-ec29efcdc56c",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[17101, 351, 2443, 56, 399, "Input",ExpressionUUID->"fd16e22d-5945-4f95-8caa-2e14379ebee6",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[19547, 409, 2581, 72, 285, "Output",ExpressionUUID->"cfeab642-d816-4f1d-88fd-7691b10c576b",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[22131, 483, 675, 16, 63, "Input",ExpressionUUID->"bed03213-8d76-4cd6-9519-84b86220f1f4",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}]
}, Closed]],
Cell[CellGroupData[{
Cell[22843, 504, 362, 6, 55, "Section",ExpressionUUID->"5a08a305-cfff-4db7-a585-f6b48e0b4a10",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[23208, 512, 1659, 41, 126, "Input",ExpressionUUID->"0b629df8-b0d6-46ec-82b4-d18b9ece7b86",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[24870, 555, 1056, 26, 84, "Input",ExpressionUUID->"2533fef5-1f7a-47e6-912c-3a0c40759b15",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Closed]],
Cell[CellGroupData[{
Cell[25963, 586, 516, 10, 55, "Section",ExpressionUUID->"f405e443-5d15-47ce-af4f-d3ac7f241874",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[26482, 598, 1302, 28, 86, "Input",ExpressionUUID->"10c19d83-846f-4ef1-9149-7b93bb75fe37",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[27787, 628, 920, 22, 44, "Output",ExpressionUUID->"06abcac0-0b91-4095-a347-35babc0db53d",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[28710, 652, 826, 15, 41, "Input",ExpressionUUID->"bbc5e735-7327-445a-a0a7-52029215228f",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[29539, 669, 1465, 38, 110, "Output",ExpressionUUID->"c491369e-eca9-4911-8356-e93a16f2c328",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[31007, 709, 1159, 22, 147, "Input",ExpressionUUID->"685a75fb-5cd0-4c3a-bc0e-b8d62094564e",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[32169, 733, 1147, 32, 69, "Output",ExpressionUUID->"85a0e4a2-654d-4c2e-85d5-1e2aea6dd34d",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[33319, 767, 1052, 20, 105, "Input",ExpressionUUID->"32d3668c-231d-41a1-a631-7e54a8dc7a9f",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[34374, 789, 1885, 49, 110, "Output",ExpressionUUID->"5637b6fc-fc82-42dc-8a77-6edf9d7d84ae",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}]
}, Closed]],
Cell[CellGroupData[{
Cell[36296, 843, 470, 9, 55, "Section",ExpressionUUID->"4c45b11e-b5e3-477b-93a5-616aab13ec99",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[36769, 854, 5779, 131, 714, "Input",ExpressionUUID->"2d2ca10c-67ee-429a-8d7c-f12b78aef62c",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[42551, 987, 1383, 26, 65, "Input",ExpressionUUID->"cb8d65be-f6d2-4dbe-b036-4dd4526fff40",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[43937, 1015, 532, 9, 41, "Output",ExpressionUUID->"58eecb16-b189-43c4-b53d-fc700b3e6094",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[44472, 1026, 238, 3, 41, "Input",ExpressionUUID->"3f97cfb8-dfbf-4595-99db-88a6a13d3842",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[44713, 1031, 1254, 36, 45, "Output",ExpressionUUID->"667726fd-0054-429d-841d-2efbc726ce13",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[45970, 1069, 810, 18, 84, "Input",ExpressionUUID->"5ff7790d-b63f-421a-9b24-eac062774536",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[46783, 1089, 736, 14, 45, "Output",ExpressionUUID->"ffff9364-31fe-431c-b3b3-f7afb409e2e8",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[47522, 1105, 659, 10, 41, "Output",ExpressionUUID->"ccbaf97f-8fdc-4679-870d-f093e73c1bd5",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[48184, 1117, 2007, 52, 110, "Output",ExpressionUUID->"d863bc48-e443-4348-8281-2577a61041d5",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[50194, 1171, 813, 18, 84, "Input",ExpressionUUID->"632b8107-cf1c-4b76-9d55-206c6a59633e",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[51010, 1191, 846, 16, 45, "Output",ExpressionUUID->"19fc9ba2-3185-4b19-89c8-4adeda331908",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[51859, 1209, 748, 11, 41, "Output",ExpressionUUID->"6520b380-937a-4125-b4db-3aa16e0511b1",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[52610, 1222, 20095, 561, 388, "Output",ExpressionUUID->"6e7d42da-e6cd-440e-bcf4-18371a3de318",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[72708, 1785, 809, 18, 84, "Input",ExpressionUUID->"59b0dc44-54d0-40b4-a7dd-2b7f58b8bb69",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[73520, 1805, 727, 13, 45, "Output",ExpressionUUID->"a71a7afd-9b05-4bc5-aa3c-3a0c9cea60c5",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[74250, 1820, 671, 10, 41, "Output",ExpressionUUID->"4e8b96a4-4ea4-4ea6-a69e-35ac4d98c8f8",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[74924, 1832, 102354, 2512, 488, "Output",ExpressionUUID->"79655ac1-000b-462c-a428-d9eb284b3dd4",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[177281, 4346, 808, 18, 84, "Input",ExpressionUUID->"fdc82bcc-328b-44e0-a69b-20e1976763b9",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[178092, 4366, 712, 13, 45, "Output",ExpressionUUID->"f28902b3-77c8-4c87-b573-34f23539845f",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[178807, 4381, 673, 10, 41, "Output",ExpressionUUID->"9c5a833e-3286-4740-b6f9-338452206bbc",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[179483, 4393, 9749, 263, 200, "Output",ExpressionUUID->"a1f7f152-e15c-4fb9-9a81-a6eee6959227",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[189235, 4658, 810, 18, 84, "Input",ExpressionUUID->"4b67d8bb-d34f-42bb-bb69-0636c0335f42",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[190048, 4678, 666, 11, 41, "Output",ExpressionUUID->"4b616f61-033b-4157-bca8-ab70a86a034a",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[190717, 4691, 664, 9, 41, "Output",ExpressionUUID->"4d42a68a-c8ea-4b56-9c3a-f21fbf25ec92",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[191384, 4702, 3363, 90, 82, "Output",ExpressionUUID->"d58984e0-55d7-4c79-8bf4-c1b3ad719c17",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[194750, 4794, 845, 19, 84, "Input",ExpressionUUID->"841a7464-0cc5-44d6-889f-36a7949c16ba",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[195598, 4815, 377, 7, 41, "Output",ExpressionUUID->"60e7cc90-2d9b-4613-8002-1889098f6ce9",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[195978, 4824, 383, 5, 41, "Output",ExpressionUUID->"04e2ea76-d94e-47bc-a61c-44b4036eab74",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[196364, 4831, 23576, 651, 324, "Output",ExpressionUUID->"78ca8a3a-ac7f-4134-b99a-63f543e20610",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[219943, 5484, 792, 18, 84, "Input",ExpressionUUID->"f9c46b54-a7f4-4aad-b9ca-791cfcf504ab",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[220738, 5504, 638, 12, 45, "Output",ExpressionUUID->"dce0283d-096b-492f-9775-ece1ebe5d414",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[221379, 5518, 604, 9, 41, "Output",ExpressionUUID->"ec20ea4c-42e5-4e5a-8582-c661f903ab54",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[221986, 5529, 9252, 249, 184, "Output",ExpressionUUID->"d884cc61-b7af-4980-833d-31e29bac55ce",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[231241, 5780, 857, 19, 84, "Input",ExpressionUUID->"120c50f2-7f25-49db-80b5-0cb19f9bec79",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[232101, 5801, 721, 13, 45, "Output",ExpressionUUID->"e0d0e581-0288-43c8-b3e8-1a4a284b4b55",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[232825, 5816, 665, 10, 41, "Output",ExpressionUUID->"95f7f617-d450-47d9-b2ff-ecbe4091f799",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[233493, 5828, 144846, 3426, 606, "Output",ExpressionUUID->"964fb12e-6d0a-4511-95b7-8c82213eb2ce",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[378342, 9256, 819, 18, 84, "Input",ExpressionUUID->"43a2cdf8-3c00-44de-897e-bde1003028e3",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[379164, 9276, 420, 8, 45, "Output",ExpressionUUID->"20e6b55a-3493-4c4c-a95c-371a79ecde07",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[379587, 9286, 374, 5, 41, "Output",ExpressionUUID->"29b35a9d-e865-4b99-b12b-5fd48edb8a81",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[379964, 9293, 145223, 3362, 454, "Output",ExpressionUUID->"18164dbf-3c73-4831-bbfc-be0f15a264df",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}]
}, Closed]],
Cell[CellGroupData[{
Cell[525224, 12660, 553, 10, 93, "Section",ExpressionUUID->"c4f0d565-12fc-43f0-8911-1c08d652ce3c",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[525780, 12672, 1556, 36, 105, "Input",ExpressionUUID->"c435b73f-68b9-45f7-9957-b76a8c154613",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[527339, 12710, 8800, 241, 236, "Output",ExpressionUUID->"0b9e58cc-3055-41ac-b504-387a0a18bf18",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[536142, 12953, 1568, 37, 105, "Input",ExpressionUUID->"df6dd53a-e4d0-4fac-a0a3-002d6189e38b",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[537713, 12992, 7346, 198, 182, "Output",ExpressionUUID->"cae77ef9-5600-40d5-acbe-e9a768300a85",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[545062, 13192, 1086, 27, 107, "Input",ExpressionUUID->"bfc18f1e-250d-48f7-8973-3c747797920b",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[546151, 13221, 932, 27, 69, "Output",ExpressionUUID->"3e985bb2-c2e2-4625-918f-c0ba2706777a",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[547086, 13250, 1111, 28, 107, "Input",ExpressionUUID->"df314915-f344-4f1c-aa84-3980ff637492",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[548200, 13280, 1144, 35, 72, "Output",ExpressionUUID->"9a84974b-bfa3-4a8e-8137-dea3dca41c58",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[549347, 13317, 1792, 46, 107, "Input",ExpressionUUID->"f62c0ee1-e337-4ab2-9f59-d9f95a18a45f",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[551142, 13365, 1496, 47, 74, "Output",ExpressionUUID->"a7a719bd-b350-4ecd-b2d0-34daea4a1cea",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[552641, 13414, 1787, 46, 107, "Input",ExpressionUUID->"a8be0def-e183-4a99-8407-2534193115d8",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[554431, 13462, 1031, 32, 79, "Output",ExpressionUUID->"6a70c04c-59ae-47ad-952f-cbdf1dadc0aa",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[555465, 13496, 487, 12, 63, "Input",ExpressionUUID->"1563626c-50a2-42f4-82b5-8646b64c18b5",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[555955, 13510, 2035, 62, 74, "Output",ExpressionUUID->"2a4944d3-b433-4a3c-b329-c9445d37bd37",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[557993, 13574, 1774, 52, 76, "Output",ExpressionUUID->"f3443afe-97d9-4b0f-99d2-e2af9702bd15",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[559770, 13628, 632, 15, 63, "Input",ExpressionUUID->"f5b9608d-291d-4c79-ac79-2409d7366b24",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[560405, 13645, 1247, 43, 56, "Output",ExpressionUUID->"fab975ea-d233-435a-bd4d-67c1a7ec1a1f",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[561655, 13690, 883, 30, 59, "Output",ExpressionUUID->"a12fd92f-7818-4bb6-906a-226afbbc8a8d",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[562541, 13722, 905, 19, 105, "Input",ExpressionUUID->"d37b9309-9de1-42fc-aa99-6cf9cd9df659",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[563449, 13743, 2973, 89, 76, "Output",ExpressionUUID->"d9b8e9a6-9fc3-47e4-abe2-f9e797a9a0dd",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[566425, 13834, 1632, 38, 105, "Input",ExpressionUUID->"73ff37a2-6567-4a5f-8d95-350eaeeed21d",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[568060, 13874, 3003, 89, 76, "Output",ExpressionUUID->"b000f29f-1c3e-4464-b422-76ed6cce1d40",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[571066, 13965, 3325, 99, 86, "Output",ExpressionUUID->"adc6f2bc-26f5-4b32-91fb-7bdc18b8cc37",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[574394, 14066, 375, 5, 41, "Output",ExpressionUUID->"2b65e735-821c-48da-add1-14ea106be7cf",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[574772, 14073, 809, 16, 126, "Input",ExpressionUUID->"231499d2-4ace-4b1f-a390-aab0460cbacd",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[575584, 14091, 4730, 136, 154, "Output",ExpressionUUID->"47ea04b4-311f-446b-84fc-96575fdaf260",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[580351, 14232, 257, 4, 55, "Section",ExpressionUUID->"15408852-3651-4c38-8141-92509a354dbe",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[580611, 14238, 903, 21, 131, "Input",ExpressionUUID->"a94e29ac-8e67-4990-b9be-3d38436f1d5e",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[581517, 14261, 481, 13, 61, "Output",ExpressionUUID->"0625574b-4767-4512-9bb2-dd7631daff34",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[582001, 14276, 490, 11, 41, "Input",ExpressionUUID->"fe5d029f-3e1e-46ef-bd72-35cfa2c46678",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[582494, 14289, 493, 12, 42, "Output",ExpressionUUID->"e8b07dba-400f-4a37-9206-f2c4a51c6072",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[582990, 14303, 2503, 63, 210, "Input",ExpressionUUID->"733f08be-91fb-40f1-9848-2c9127f21893",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[585496, 14368, 3525, 107, 166, "Output",ExpressionUUID->"41b51ff3-0e7a-4a9e-99bb-ec3dcc221b93",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[589024, 14477, 684, 13, 105, "Input",ExpressionUUID->"cfa4f52a-2a92-4847-bde0-b6f1f08c94c8",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[589711, 14492, 5056, 144, 154, "Output",ExpressionUUID->"60d4d575-d3ca-406c-80b9-f12ccd6cd0d7",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[594770, 14638, 843, 20, 105, "Input",ExpressionUUID->"9f8607d8-762b-496d-a2dd-d49df101bf0f",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[595616, 14660, 1020, 31, 79, "Output",ExpressionUUID->"33e2369a-ca91-41f6-a0ae-775d19dc36cd",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[596639, 14693, 861, 23, 44, "Input",ExpressionUUID->"dd1addd2-3d23-4f82-bf6d-7b3aaa9c39b3",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[597503, 14718, 1055, 32, 79, "Output",ExpressionUUID->"3cc0fd52-7ca8-407a-95df-e0ded4fd86cb",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[598561, 14752, 700, 15, 105, "Input",ExpressionUUID->"009e1922-75cf-4d24-9d92-1d2b347b35a2",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[599264, 14769, 1156, 34, 72, "Output",ExpressionUUID->"5fea42ee-6e7f-4d58-90d0-2344404c9337",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[600423, 14805, 555, 11, 105, "Input",ExpressionUUID->"c817385f-0473-4edb-b418-ccb3db6aa8ce",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[600981, 14818, 926, 27, 69, "Output",ExpressionUUID->"aae886f4-d52d-433e-9e49-e4adefadd3d8",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[601910, 14847, 486, 13, 63, "Input",ExpressionUUID->"d7f419d0-a08e-48e3-9263-21853671e14a",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[602399, 14862, 1763, 51, 76, "Output",ExpressionUUID->"a0da525a-e0d6-43f9-9da2-23940e8332bf",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[604165, 14915, 2098, 62, 74, "Output",ExpressionUUID->"84563565-4667-4f39-b59c-bac476aaef41",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[606266, 14979, 808, 19, 105, "Input",ExpressionUUID->"7d1b5f73-c3b2-4772-8e52-823232ca9e42",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[607077, 15000, 2932, 87, 76, "Output",ExpressionUUID->"830043cc-c8b4-40f1-9b4f-60736e295c7a",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[610012, 15089, 1911, 50, 109, "Input",ExpressionUUID->"6e606962-a665-4d20-8c69-b7fffff8eea8",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[611926, 15141, 2930, 87, 76, "Output",ExpressionUUID->"6ce78388-b72c-42c1-ac99-be2f577fb468",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[614859, 15230, 3306, 98, 98, "Output",ExpressionUUID->"e37e3609-8996-47ed-bed6-55f6da967ed9",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[618168, 15330, 260, 5, 41, "Output",ExpressionUUID->"7c93032d-f800-46a3-9181-ed51a059f131",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}]
}, Closed]],
Cell[CellGroupData[{
Cell[618465, 15340, 260, 4, 55, "Section",ExpressionUUID->"94594f47-3725-446f-a6a9-82b213cb36a3",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.}],
Cell[618728, 15346, 570, 13, 84, "Input",ExpressionUUID->"57f69b4e-13a7-4d76-b238-d591c8efb889",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.}],
Cell[619301, 15361, 398, 10, 41, "Output",ExpressionUUID->"7293415f-ec7b-4739-ba56-28f5f9a33929",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.}],
Cell[619702, 15373, 1403, 34, 231, "Input",ExpressionUUID->"00bb8e30-7628-4177-9fbf-e6fd6115dcc6",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.}],
Cell[621108, 15409, 3879, 118, 194, "Output",ExpressionUUID->"af3690eb-739c-4eeb-97dc-927098bf1a09",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.}],
Cell[624990, 15529, 385, 7, 63, "Input",ExpressionUUID->"126c6f6d-c3ec-420d-927d-3fa905d0e815",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.}],
Cell[625378, 15538, 996, 31, 79, "Output",ExpressionUUID->"48369ca2-242d-4697-9110-905988ba0627",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.}],
Cell[626377, 15571, 766, 22, 57, "Output",ExpressionUUID->"88f8fb92-dba6-4363-928f-300d16fd310c",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.}],
Cell[627146, 15595, 817, 21, 105, "Input",ExpressionUUID->"9a871825-74d4-447b-a3ef-9c654a905c7c",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.}],
Cell[627966, 15618, 763, 22, 60, "Output",ExpressionUUID->"db7efe0f-0fc9-4834-b7e5-ac1686aa934d",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.}],
Cell[628732, 15642, 672, 17, 84, "Input",ExpressionUUID->"ba8cdbd9-2471-4634-966d-71ea83aecb27",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.}],
Cell[629407, 15661, 490, 13, 60, "Output",ExpressionUUID->"a5e81e1d-c772-4556-97e6-efc78de03457",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.}],
Cell[629900, 15676, 606, 13, 84, "Input",ExpressionUUID->"f0d01ade-2836-45c3-89cb-8d520c600872",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.}],
Cell[630509, 15691, 581, 18, 41, "Output",ExpressionUUID->"cf3a7858-2362-40a8-a93f-88cdca5492cc",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.}],
Cell[631093, 15711, 699, 18, 84, "Input",ExpressionUUID->"462f7f0b-4e30-4526-b2ce-2fc841469ede",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.}],
Cell[631795, 15731, 662, 19, 60, "Output",ExpressionUUID->"fdede375-307e-4bd5-8913-3b058e68c868",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.}],
Cell[632460, 15752, 915, 21, 84, "Input",ExpressionUUID->"0137e50c-e2df-4ce8-bc55-b8905d81f1ff",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.}],
Cell[633378, 15775, 659, 20, 41, "Output",ExpressionUUID->"7ced2ed5-6f3f-4779-b3e3-7a02f79a2dac",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.}],
Cell[634040, 15797, 849, 22, 105, "Input",ExpressionUUID->"24b8bee5-8b02-4284-8fa0-379713567b3d",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.}],
Cell[634892, 15821, 339, 7, 41, "Output",ExpressionUUID->"9c296f33-83fb-47f7-8e73-1588c82f9aad",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.}],
Cell[635234, 15830, 358, 8, 41, "Output",ExpressionUUID->"0a5f4ce2-c276-4b24-9ffd-9b44b158e74c",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.}],
Cell[635595, 15840, 625, 19, 41, "Output",ExpressionUUID->"d534c583-861f-4038-aaf4-8dbba913fbdc",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.}],
Cell[636223, 15861, 958, 32, 41, "Output",ExpressionUUID->"d4c72772-67e5-4ed2-9e50-e0c41faa3b16",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.}],
Cell[637184, 15895, 741, 18, 84, "Input",ExpressionUUID->"5f053368-d378-4919-87b6-1369f67f0281",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.}],
Cell[637928, 15915, 1041, 35, 41, "Output",ExpressionUUID->"df0b6902-bdce-4474-9699-3fe0336b32d5",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.}],
Cell[638972, 15952, 1114, 27, 84, "Input",ExpressionUUID->"3b3191d6-c2f8-4009-ab80-7fd2ef8649bb",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.}],
Cell[640089, 15981, 681, 18, 41, "Output",ExpressionUUID->"6f51eed9-1e0d-4e0a-bab7-742b999e232d",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.}],
Cell[640773, 16001, 649, 16, 63, "Input",ExpressionUUID->"8eca1e5e-b88b-40d3-a53e-122bda20d121",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.}],
Cell[641425, 16019, 309533, 5088, 297, 229608, 3776, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"6bd631cf-9acd-429b-90a2-aaea0bff37d6",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.}],
Cell[950961, 21109, 622, 16, 41, "Input",ExpressionUUID->"8c8e7e5e-1007-4cf5-b567-c0d0ac5a4887",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.}],
Cell[951586, 21127, 172305, 2833, 369, "Output",ExpressionUUID->"236b9945-fa02-4267-ae6b-41365ebf6aec",
 CellGroupingRules->{"GroupTogetherGrouping", 10008.}]
}, Closed]]
}
]
*)

