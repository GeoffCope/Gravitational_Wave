(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1574959,      32530]
NotebookOptionsPosition[   1541156,      32045]
NotebookOutlinePosition[   1541618,      32062]
CellTagsIndexPosition[   1541575,      32059]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Notebook for : Gravitational Waves in General Relativity XI Cylindrical - \
Spherical Waves - Marder \
\>", "Title",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.821550422362884*^9, 3.821550438179384*^9}, {
   3.825370659797716*^9, 3.825370659996311*^9}, 3.828006285316635*^9},
 TextAlignment->Center,ExpressionUUID->"4b5a6a66-8170-4e8d-9d37-4ea58f5a1110"],

Cell["\<\
Geoff Cope
University of Utah
February 3rd, 2021\
\>", "Author",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.821550440839562*^9, 3.821550456722641*^9}, 
   3.825370939892334*^9, 3.828006285316749*^9},
 TextAlignment->Center,ExpressionUUID->"841c20d4-c2a7-4aa5-869a-7026081419db"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hyperlink To Documentation", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.820944675605734*^9, 
  3.8209446931410646`*^9}},ExpressionUUID->"71c2b6d1-a128-4719-9e57-\
3a5008d47bb6"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<GeneralRelativityTensors Documentation and Download\>\"", ",", 
   "\[IndentingNewLine]", 
   "\"\<https://github.com/BlackHolePerturbationToolkit\>\""}], 
  "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.820944619768764*^9, 3.820944681268063*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"177d740a-8648-40f9-9f10-0e36912718dc"],

Cell[BoxData[
 TemplateBox[{
  "\"GeneralRelativityTensors Documentation and Download\"", 
   "https://github.com/BlackHolePerturbationToolkit"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.820944653562152*^9, 3.820944681268403*^9}, 
   3.821729905862431*^9, 3.821732641380642*^9, 3.8218069931429567`*^9, 
   3.821811425912986*^9, 3.822042652654992*^9, {3.822048793766124*^9, 
   3.8220488009116488`*^9}, 3.82250502887521*^9, 3.822505578829629*^9, 
   3.822565490613895*^9, 3.8225662097813597`*^9, 3.822606717894772*^9, 
   3.822739433713368*^9, 3.822822210464344*^9, 3.8233594284652433`*^9, 
   3.8233607803938913`*^9, 3.823360880234103*^9, 3.823361224481102*^9, 
   3.82336209870968*^9, 3.823364030542309*^9, 3.823597528606563*^9, 
   3.823618495251218*^9, 3.82368341365138*^9, 3.82368384184562*^9, 
   3.823684775269041*^9, 3.823688794270237*^9, 3.82369077711421*^9, 
   3.823704572306265*^9, 3.8239670360944*^9, 3.8239675178827963`*^9, 
   3.823970038559888*^9, 3.824025681964837*^9, 3.824032150329472*^9, 
   3.824050435315671*^9, 3.824050999906499*^9, 3.824051492117627*^9, 
   3.824054172450189*^9, 3.824054375215625*^9, 3.824111434931583*^9, 
   3.824117930025662*^9, 3.8241945834794397`*^9, 3.8242097150616713`*^9, 
   3.82421332410147*^9, 3.82429798682445*^9, 3.8242994580237417`*^9, 
   3.8243006859479227`*^9, 3.8243007605452642`*^9, 3.82546102301834*^9, 
   3.827943943286234*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"63e6a3c7-5b58-48fc-b8bc-c9f7e5a87e86"]
}, Closed]],

Cell[CellGroupData[{

Cell["Hyperlink  To Article Series and Other References", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.820937794883616*^9, {3.820938266275806*^9, 3.82093829464357*^9}, 
   3.820943883376583*^9, {3.8210324492405148`*^9, 3.821032453951701*^9}, {
   3.8217297279218817`*^9, 3.8217297313782063`*^9}, {3.822593613363134*^9, 
   3.822593616181035*^9}, {3.822736144359599*^9, 3.8227361450547543`*^9}, {
   3.823359417697976*^9, 3.823359420672374*^9}, {3.825541581630826*^9, 
   3.825541589790456*^9}, 
   3.8280061655585737`*^9},ExpressionUUID->"80d70a4f-b9f1-4374-b487-\
da5e2727238c"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gravitational Waves in General Relativity I : Cylindrical Waves by L. \
Marder\>\"", ",", "\[IndentingNewLine]", 
   "\"\<https://www.jstor.org/stable/pdf/100266.pdf?casa_token=\
TrNPGDbJWhEAAAAA:nHeMW7zJ_0_07X0h11FLWJGitgk21sXIJ0ms5rt9T6I7YP04Hxm5K6_\
DGydbW-uCDzXCIbV6iqe69QkuDgDCxonOf4hKoSU1TBMr0-OOnLLqt1CVyLmw\>\""}], 
  "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8218867746254797`*^9, 3.821886810805148*^9}, 
   3.823176507207197*^9, {3.823472730005904*^9, 3.823472744739744*^9}, {
   3.823597507106205*^9, 3.823597507709626*^9}, {3.824218491076791*^9, 
   3.824218504482604*^9}, {3.825540567837326*^9, 3.825540582234589*^9}, 
   3.828006165558715*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"244d5d54-4f80-4132-a261-169cdef558a1"],

Cell[BoxData[
 TemplateBox[{
  "\"Gravitational Waves in General Relativity I : Cylindrical Waves by L. \
Marder\"", 
   "https://www.jstor.org/stable/pdf/100266.pdf?casa_token=TrNPGDbJWhEAAAAA:\
nHeMW7zJ_0_07X0h11FLWJGitgk21sXIJ0ms5rt9T6I7YP04Hxm5K6_DGydbW-\
uCDzXCIbV6iqe69QkuDgDCxonOf4hKoSU1TBMr0-OOnLLqt1CVyLmw"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.821886813557355*^9, 3.8231765072073307`*^9, 3.823359428608782*^9, 
   3.8233607804338617`*^9, 3.823360880363216*^9, 3.823361224626254*^9, 
   3.823362098931829*^9, 3.823364030688095*^9, 3.823472745219315*^9, {
   3.8235975109202147`*^9, 3.823597528650549*^9}, 3.823618495400096*^9, 
   3.823683413880138*^9, 3.823683841884781*^9, 3.823684775280538*^9, 
   3.823688794413259*^9, 3.8236907771492443`*^9, 3.823704572455369*^9, 
   3.8239670361077127`*^9, 3.8239675178933*^9, 3.823970038708452*^9, 
   3.824025682120349*^9, 3.824032150367559*^9, 3.824050435367694*^9, 
   3.824050999946439*^9, 3.8240514922362757`*^9, 3.8240541725938663`*^9, 
   3.82405437525069*^9, 3.824111435079376*^9, 3.824117930144135*^9, 
   3.8241945835176497`*^9, 3.824209715204199*^9, 3.8242133242608747`*^9, 
   3.824218504809145*^9, 3.824297986947625*^9, 3.8242994581502113`*^9, 
   3.824300686126027*^9, 3.82430076064056*^9, 3.825374007480864*^9, 
   3.825374265555047*^9, 3.825540587654729*^9, 3.827827027863346*^9, 
   3.827842378149345*^9, 3.828006165558824*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"493fd71d-bb0c-4178-aa72-05c8db607f1e"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gravitational Waves in General Relativity. II. The Reflexion of \
Cylindrical Waves\>\"", ",", "\[IndentingNewLine]", 
   "\"\<https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1958.0111\>\"\
"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.82554062706092*^9, 3.8255406491978817`*^9}, 
   3.825541578422616*^9, 3.828006165558926*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"1d2a64f8-8a51-4462-8147-758db00bffd8"],

Cell[BoxData[
 TemplateBox[{
  "\"Gravitational Waves in General Relativity. II. The Reflexion of \
Cylindrical Waves\"", 
   "https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1958.0111"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.825540651265662*^9, 3.8255415784230347`*^9, 
  3.827827027900567*^9, 3.8278423781660423`*^9, 3.82800616555902*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"43039e88-15f6-48ed-80ed-9b28c9482d12"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gravitational Waves in General Relativity. III. Exact Plane Waves\>\"",
    ",", "\[IndentingNewLine]", 
   "\"\<http://newt.phys.unsw.edu.au/~jkw/phys3550/GWs/Gravitational_waves_in_\
general_relativity_exact_plane_waves.pdf\>\""}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.82554069320828*^9, 3.825540717254922*^9}, 
   3.82554157842317*^9, 3.828006165559114*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"2b22d001-4936-40c6-bac5-46dd585ed301"],

Cell[BoxData[
 TemplateBox[{
  "\"Gravitational Waves in General Relativity. III. Exact Plane Waves\"", 
   "http://newt.phys.unsw.edu.au/~jkw/phys3550/GWs/Gravitational_waves_in_\
general_relativity_exact_plane_waves.pdf"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8255407202328453`*^9, 3.8255415784233847`*^9, 
  3.827827027916807*^9, 3.827842378175069*^9, 3.828006165559206*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"21681a78-5e34-4f47-ac6e-43e67478d739"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gravitational waves in general relativity. IV. The gravitational field \
of a fast-moving particle\>\"", ",", "\[IndentingNewLine]", 
   "\"\<https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1959.0139\>\"\
"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.825540750864812*^9, 3.8255407724224977`*^9}, 
   3.825541578423504*^9, 3.828006165559279*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"7eb76c33-588f-4c47-bd25-b7a6f3245907"],

Cell[BoxData[
 TemplateBox[{
  "\"Gravitational waves in general relativity. IV. The gravitational field \
of a fast-moving particle\"", 
   "https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1959.0139"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.825540775367878*^9, 3.825541578423728*^9, 
  3.8278270279518433`*^9, 3.827842378191126*^9, 3.828006165559353*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"766c9234-f265-45ac-9af0-c1293850bc66"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gravitational Waves in General Relativity V. An Exact Spherical Wave\>\
\"", ",", "\[IndentingNewLine]", 
   "\"\<http://newt.phys.unsw.edu.au/~jkw/phys3550/GWs/Gravitational_waves_in_\
general_relativity_exact_plane_waves.pdf\>\""}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8255408143765717`*^9, 3.825540856358446*^9}, 
   3.825541578423868*^9, 3.828006165559424*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"4c3de8df-465a-45c4-9826-972af9cf6767"],

Cell[BoxData[
 TemplateBox[{
  "\"Gravitational Waves in General Relativity V. An Exact Spherical Wave\"", 
   "http://newt.phys.unsw.edu.au/~jkw/phys3550/GWs/Gravitational_waves_in_\
general_relativity_exact_plane_waves.pdf"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8255408568205214`*^9, 3.825541578424076*^9, 
  3.827827027969742*^9, 3.827842378201785*^9, 3.828006165559499*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"254ed773-b5d2-4b05-85d7-3789ccf1542e"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gravitational waves in general relativity. VI. The outgoing radiation \
condition\>\"", ",", "\[IndentingNewLine]", 
   "\"\<https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1961.0202\>\"\
"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8255408905695457`*^9, 3.825540911766217*^9}, 
   3.825541578424193*^9, 3.8280061655595713`*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"444207c8-d3d0-4ebd-92af-47259d96bf27"],

Cell[BoxData[
 TemplateBox[{
  "\"Gravitational waves in general relativity. VI. The outgoing radiation \
condition\"", 
   "https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1961.0202"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8255409122121153`*^9, 3.825541578424399*^9, 
  3.827827028009102*^9, 3.827842378216729*^9, 3.828006165559647*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"e1bc35a1-dc4b-4bef-b621-338ae61b13f6"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gravitational waves in general relativity, VII. Waves from \
axi-symmetric isolated system\>\"", ",", "\[IndentingNewLine]", 
   "\"\<https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1962.0161\>\"\
"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8255409438245907`*^9, 3.8255409648377953`*^9}, 
   3.82554157842451*^9, 3.828006165559719*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"122725d0-6cb1-4a20-b262-837076b9296a"],

Cell[BoxData[
 TemplateBox[{
  "\"Gravitational waves in general relativity, VII. Waves from axi-symmetric \
isolated system\"", 
   "https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1962.0161"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.825540965889183*^9, 3.825541578424714*^9, 
  3.827827028025394*^9, 3.827842378225857*^9, 3.828006165559794*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"44a2d44f-3416-4316-9181-afc6e92d19bb"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gravitational Waves in General Relativity. VIII. Waves in \
Asymptotically Flat Space- Time\>\"", ",", "\[IndentingNewLine]", 
   "\"\<https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1962.0206\>\"\
"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8255409698877487`*^9, 3.825541006902647*^9}, 
   3.8255415784248323`*^9, 3.828006165559868*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"54deca47-2efb-406c-b45b-5104a486572b"],

Cell[BoxData[
 TemplateBox[{
  "\"Gravitational Waves in General Relativity. VIII. Waves in Asymptotically \
Flat Space- Time\"", 
   "https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1962.0206"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.825541007489829*^9, 3.825541578425042*^9, 
  3.827827028063736*^9, 3.827842378242198*^9, 3.828006165559944*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"eb3a63ee-c7d0-461b-a8d8-b1709b8ffaef"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gravitational Waves in General Relativity. IX. Conserved \
Quantities\>\"", ",", "\[IndentingNewLine]", 
   "\"\<https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1966.0197\>\"\
"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.825541034648574*^9, 3.825541058022374*^9}, 
   3.825541578425152*^9, 3.828006165560019*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"0ae58561-f66a-423e-b9bb-4590799861e2"],

Cell[BoxData[
 TemplateBox[{
  "\"Gravitational Waves in General Relativity. IX. Conserved Quantities\"", 
   "https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1966.0197"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.825541058667922*^9, 3.825541578425355*^9, 
  3.827827028081127*^9, 3.827842378253251*^9, 3.828006165560095*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"832f3298-5356-4b8d-9a81-27fde7c1b920"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gravitational Waves in General Relativity X. Asymptotic Expansions for \
the Einstein- Maxwell Field\>\"", ",", "\[IndentingNewLine]", 
   "\"\<https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1969.0072\>\"\
"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8255410772409143`*^9, 3.825541102150763*^9}, 
   3.825541578425478*^9, 3.828006165560169*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"faa13332-c7c8-432b-9635-d1bdb02a7ab2"],

Cell[BoxData[
 TemplateBox[{
  "\"Gravitational Waves in General Relativity X. Asymptotic Expansions for \
the Einstein- Maxwell Field\"", 
   "https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1969.0072"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8255411036012993`*^9, 3.825541578425684*^9, 
  3.827827028118291*^9, 3.827842378268004*^9, 3.828006165560245*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"3c9e61af-23f8-4b97-bb93-dd9466ffa7b1"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gravitational Waves in General Relativity XI. Cylindrical-Spherical \
Waves\>\"", ",", "\[IndentingNewLine]", 
   "\"\<https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1969.0181\>\"\
"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.825541129401309*^9, 3.825541155342548*^9}, 
   3.8255415784257927`*^9, 3.8280061655603333`*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"a9f9b439-29e5-4163-8d02-0a788137075b"],

Cell[BoxData[
 TemplateBox[{
  "\"Gravitational Waves in General Relativity XI. Cylindrical-Spherical \
Waves\"", "https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1969.0181"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.825541156169825*^9, 3.825541578426003*^9, 
  3.8278270281345387`*^9, 3.827842378276972*^9, 3.828006165560419*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"d2b81f4a-7f32-455c-822a-c594d2925716"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gravitational waves in general relativity. XII. Correspondence between \
toroidal and cylindrical waves\>\"", ",", "\[IndentingNewLine]", 
   "\"\<https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1972.0034\>\"\
"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8255411598566*^9, 3.8255412091260767`*^9}, 
   3.825541578426115*^9, 3.828006165560491*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"466bb97c-e94c-44f6-85b6-c3ea69618b1d"],

Cell[BoxData[
 TemplateBox[{
  "\"Gravitational waves in general relativity. XII. Correspondence between \
toroidal and cylindrical waves\"", 
   "https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1972.0034"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.825541209583974*^9, 3.825541578426325*^9, 
  3.827827028802347*^9, 3.827842378292616*^9, 3.828006165560568*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"88822376-5257-4f56-82ed-9be348f8928e"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gravitational waves in general relativity - XIII. Caustic property of \
plane waves\>\"", ",", "\[IndentingNewLine]", 
   "\"\<https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1989.0016\>\"\
"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.825541244929132*^9, 3.825541266141914*^9}, 
   3.825541578426436*^9, 3.8280061655606413`*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"7871f32c-57c4-4f22-8dae-14e3b1432f3a"],

Cell[BoxData[
 TemplateBox[{
  "\"Gravitational waves in general relativity - XIII. Caustic property of \
plane waves\"", 
   "https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1989.0016"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.825541266538377*^9, 3.8255415784268427`*^9, 
  3.8278270289216433`*^9, 3.827842378303368*^9, 3.828006165560718*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"d3e266c0-b7c9-4cc1-aa8b-99f4f6814bf0"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gravitational Waves in General Relativity XIV. Bondi Expansions and \
the `Polyhomogeneity' of I\>\"", ",", "\[IndentingNewLine]", 
   "\"\<https://arxiv.org/abs/gr-qc/9305021\>\""}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.825541318073634*^9, 3.825541340774472*^9}, 
   3.825541578426999*^9, 3.828006165560791*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"6c4e956d-545c-47a8-a455-8c68deb7d344"],

Cell[BoxData[
 TemplateBox[{
  "\"Gravitational Waves in General Relativity XIV. Bondi Expansions and the \
`Polyhomogeneity' of I\"", "https://arxiv.org/abs/gr-qc/9305021"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.825541341115554*^9, 3.825541578427224*^9, 
  3.827827028957911*^9, 3.827842378318151*^9, 3.828006165560883*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"7679e4d1-d22e-484d-93aa-e74f4ed5f5d6"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gravitational Waves in General Relativity XV. The Loss-Free Case\>\"", 
   ",", "\[IndentingNewLine]", 
   "\"\<https://royalsocietypublishing.org/doi/abs/10.1098/rspa.2000.0630\>\"\
"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.825541367432994*^9, 3.8255413932545757`*^9}, 
   3.825541578427346*^9, 3.828006165560957*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"93f75265-ade5-46ce-a794-0e33812ae485"],

Cell[BoxData[
 TemplateBox[{
  "\"Gravitational Waves in General Relativity XV. The Loss-Free Case\"", 
   "https://royalsocietypublishing.org/doi/abs/10.1098/rspa.2000.0630"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.825541394393671*^9, 3.825541578427586*^9, 
  3.827827028973041*^9, 3.827842378327112*^9, 3.828006165561038*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"710a792d-3922-4b5c-a970-a20040d82747"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gravitational Waves in General Relativity XVI. Standing Waves\>\"", 
   ",", "\[IndentingNewLine]", 
   "\"\<https://royalsocietypublishing.org/doi/abs/10.1098/rspa.2003.1176\>\"\
"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8255414122570143`*^9, 3.8255414391104803`*^9}, 
   3.8255415784277143`*^9, 3.8280061655611143`*^9},
 CellLabel->"In[17]:=",ExpressionUUID->"28c3d8d2-2d3c-4b89-98c5-736ad78b5cb3"],

Cell[BoxData[
 TemplateBox[{
  "\"Gravitational Waves in General Relativity XVI. Standing Waves\"", 
   "https://royalsocietypublishing.org/doi/abs/10.1098/rspa.2003.1176"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.825541439624946*^9, 3.8255415784279203`*^9, 
  3.827827029011183*^9, 3.8278423783436604`*^9, 3.8280061655611973`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"05c15c37-71f5-43e4-9595-3a77292d01ae"],

Cell["Utilities and Package Load", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.820937646765551*^9, 3.8209376725449123`*^9}, 
   3.82536927604027*^9},ExpressionUUID->"a39fd035-af76-487a-9aec-\
2350964d5a56"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "Utilities`CleanSlate`"}], "\[IndentingNewLine]", 
 RowBox[{"CleanSlate", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearInOut", "[", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pdConv", "[", "f_", "]"}], ":=", 
  RowBox[{"TraditionalForm", "[", 
   RowBox[{"f", "/.", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Derivative", "[", "inds__", "]"}], "[", "g_", "]"}], "[", 
      "vars__", "]"}], "\[RuleDelayed]", 
     RowBox[{"Apply", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Defer", "[", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"g", "[", "vars", "]"}], ",", "##"}], "]"}], "]"}], "&"}], 
       ",", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "vars", "}"}], ",", 
           RowBox[{"{", "inds", "}"}]}], "}"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"var_", ",", "0"}], "}"}], "\[RuleDelayed]", 
           RowBox[{"Sequence", "[", "]"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"var_", ",", "1"}], "}"}], "\[RuleDelayed]", 
           RowBox[{"{", "var", "}"}]}]}], "}"}]}]}], "]"}]}]}], 
   "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.8209376549030037`*^9, {3.821032517164062*^9, 3.821032518258361*^9}, 
   3.825369276040393*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"a67c28b3-e4fa-467d-8477-02d241f26806"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  (CleanSlate) Contexts purged: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"Global`\"\>", "}"}]}],
  SequenceForm["  (CleanSlate) Contexts purged: ", {"Global`"}],
  Editable->False]], "Print",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.820932754769992*^9, 3.820933427630714*^9, 3.820937654903143*^9, 
   3.821729906190301*^9, 3.821732641685704*^9, 3.8218069933778133`*^9, 
   3.82181142618342*^9, 3.8220426528487463`*^9, {3.822048793940605*^9, 
   3.822048801089246*^9}, 3.822505029191699*^9, 3.822505579049889*^9, 
   3.822565490838564*^9, 3.822566210008327*^9, 3.822606718180009*^9, 
   3.8226371008270607`*^9, 3.822739433887854*^9, 3.822761800089258*^9, 
   3.8228172997642097`*^9, 3.822822210725956*^9, 3.822988687208267*^9, 
   3.823359428732101*^9, 3.823360780582996*^9, 3.823360880477087*^9, 
   3.823361224742215*^9, 3.8233620990886593`*^9, 3.8233640308219624`*^9, 
   3.8235320061137466`*^9, 3.823597528753026*^9, 3.823618495521882*^9, 
   3.823683414021819*^9, 3.823683842015107*^9, 3.823684775412067*^9, 
   3.823688794547976*^9, 3.823690777270031*^9, 3.8237045725706463`*^9, 
   3.823967036254635*^9, 3.823967518049459*^9, 3.823970038788274*^9, 
   3.824025682258999*^9, 3.8240321504830923`*^9, 3.8240504354973917`*^9, 
   3.824051000133101*^9, 3.824051492357512*^9, 3.824054172748905*^9, 
   3.824054375453238*^9, 3.824111435226822*^9, 3.824117930311021*^9, 
   3.8241945836859083`*^9, 3.824209715330535*^9, 3.824213324408888*^9, 
   3.824297987129281*^9, 3.824299458342237*^9, 3.824300686301352*^9, 
   3.824300760843173*^9, 3.8253692760404663`*^9, 3.825461023276972*^9, 
   3.8279439436082497`*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"2fa01d9c-cce1-4b70-867a-168ddc2f95bd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  (CleanSlate) Approximate kernel memory recovered: \"\>", 
   "\[InvisibleSpace]", "\<\"13 Kb\"\>"}],
  SequenceForm[
  "  (CleanSlate) Approximate kernel memory recovered: ", "13 Kb"],
  Editable->False]], "Print",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.820932754769992*^9, 3.820933427630714*^9, 3.820937654903143*^9, 
   3.821729906190301*^9, 3.821732641685704*^9, 3.8218069933778133`*^9, 
   3.82181142618342*^9, 3.8220426528487463`*^9, {3.822048793940605*^9, 
   3.822048801089246*^9}, 3.822505029191699*^9, 3.822505579049889*^9, 
   3.822565490838564*^9, 3.822566210008327*^9, 3.822606718180009*^9, 
   3.8226371008270607`*^9, 3.822739433887854*^9, 3.822761800089258*^9, 
   3.8228172997642097`*^9, 3.822822210725956*^9, 3.822988687208267*^9, 
   3.823359428732101*^9, 3.823360780582996*^9, 3.823360880477087*^9, 
   3.823361224742215*^9, 3.8233620990886593`*^9, 3.8233640308219624`*^9, 
   3.8235320061137466`*^9, 3.823597528753026*^9, 3.823618495521882*^9, 
   3.823683414021819*^9, 3.823683842015107*^9, 3.823684775412067*^9, 
   3.823688794547976*^9, 3.823690777270031*^9, 3.8237045725706463`*^9, 
   3.823967036254635*^9, 3.823967518049459*^9, 3.823970038788274*^9, 
   3.824025682258999*^9, 3.8240321504830923`*^9, 3.8240504354973917`*^9, 
   3.824051000133101*^9, 3.824051492357512*^9, 3.824054172748905*^9, 
   3.824054375453238*^9, 3.824111435226822*^9, 3.824117930311021*^9, 
   3.8241945836859083`*^9, 3.824209715330535*^9, 3.824213324408888*^9, 
   3.824297987129281*^9, 3.824299458342237*^9, 3.824300686301352*^9, 
   3.824300760843173*^9, 3.8253692760404663`*^9, 3.825461023276972*^9, 
   3.8279439436132193`*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"33629b5e-8ed5-45a6-b9f5-4234ee5f071a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Utilities`CleanSlate`\"\>", ",", "\<\"System`\"\>", 
   ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.820932754773623*^9, 3.820933427635436*^9, 3.8209376549033947`*^9, 
   3.821729906193787*^9, 3.821732641691049*^9, 3.821806993386058*^9, 
   3.821811426187071*^9, 3.822042652852829*^9, {3.822048793944077*^9, 
   3.822048801092909*^9}, 3.822505029195156*^9, 3.8225055790570173`*^9, 
   3.8225654908422747`*^9, 3.8225662100125237`*^9, 3.8226067181902227`*^9, 
   3.822637100839163*^9, 3.8227394339100733`*^9, 3.822761800103311*^9, 
   3.822817299776285*^9, 3.822822210739685*^9, 3.822988687217742*^9, 
   3.823359428736412*^9, 3.823360780587545*^9, 3.8233608804810534`*^9, 
   3.823361224746982*^9, 3.823362099093968*^9, 3.823364030838743*^9, 
   3.8235320061191893`*^9, 3.823597528756508*^9, 3.8236184955254183`*^9, 
   3.823683414029439*^9, 3.823683842020509*^9, 3.823684775416593*^9, 
   3.823688794552709*^9, 3.823690777273932*^9, 3.8237045725743713`*^9, 
   3.823967036258197*^9, 3.823967518053287*^9, 3.8239700387921047`*^9, 
   3.824025682265245*^9, 3.824032150486408*^9, 3.8240504355005302`*^9, 
   3.824051000137991*^9, 3.824051492360982*^9, 3.82405417275224*^9, 
   3.82405437545785*^9, 3.8241114352302933`*^9, 3.824117930315586*^9, 
   3.8241945836899357`*^9, 3.8242097153340693`*^9, 3.8242133244138002`*^9, 
   3.824297987134589*^9, 3.824299458346477*^9, 3.824300686304398*^9, 
   3.8243007608477297`*^9, 3.825369276040627*^9, 3.825461023281296*^9, 
   3.827943943614663*^9},
 CellLabel->"Out[0]=",ExpressionUUID->"8491ec75-84b8-4d30-93be-a83f27edf6e4"],

Cell[BoxData[
 RowBox[{"<<", "GeneralRelativityTensors`"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8209376549035053`*^9, 3.825369276040707*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"1cfc1cbc-082e-4984-9e16-aef2e7e27581"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<VariationalMethods`\>\"", "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.82282432548825*^9, 3.822824327819418*^9}, 
   3.8253692760407763`*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"b3b85a1d-9770-4862-ad35-b81cc74e9e4d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Custom Notation", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.8225114042235403`*^9, 3.822511435665856*^9}, 
   3.823176577809782*^9, 
   3.825369287523677*^9},ExpressionUUID->"32067aaa-f3bd-4d47-92cc-\
e407e444c96d"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "dtReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dtReplace", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Dt", "[", "r", "]"}], "\[Rule]", " ", "dr"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "t", "]"}], "\[Rule]", " ", "dt"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "u", "]"}], "\[Rule]", " ", "du"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "v", "]"}], "\[Rule]", " ", "dv"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "x", "]"}], "\[Rule]", " ", "dx"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "y", "]"}], " ", "\[Rule]", " ", "dy"}], " ", ",", 
     " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "z", "]"}], "\[Rule]", " ", "dz"}], " ", ",", " ", 
     "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Theta]", "]"}], " ", "\[Rule]", " ", 
      "d\[Theta]"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Phi]", "]"}], " ", "\[Rule]", " ", "d\[Phi]"}], 
     "  ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Eta]", "]"}], " ", "\[Rule]", " ", "d\[Eta]"}], 
     "  ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Chi]", "]"}], "\[Rule]", " ", "d\[Chi]"}], " ", 
     ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Rho]", "]"}], " ", "\[Rule]", " ", "d\[Rho]"}], 
     " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[CurlyRho]", "]"}], "\[Rule]", " ", 
      "d\[CurlyRho]"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[CurlyPhi]", "]"}], " ", "\[Rule]", " ", 
      "d\[CurlyPhi]"}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Xi]", "]"}], "\[Rule]", " ", "d\[Xi]"}], " ", ",",
      "  ", "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptT]", "]"}], " ", "\[Rule]", " ", 
      "d\[ScriptT]"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptV]", "]"}], "\[Rule]", " ", "d\[ScriptV]"}],
      " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptU]", "]"}], "\[Rule]", " ", "d\[ScriptU]"}],
      " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptX]", "]"}], "\[Rule]", " ", "d\[ScriptX]"}],
      " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptY]", "]"}], "\[Rule]", " ", "d\[ScriptY]"}],
      ",", "   ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptZ]", "]"}], " ", "\[Rule]", " ", 
      "d\[ScriptZ]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "R", "]"}], "\[Rule]", " ", "dR"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "T", "]"}], "\[Rule]", " ", "dT"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "X", "]"}], "\[Rule]", " ", "dX"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "Y", "]"}], "\[Rule]", " ", "dY"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "Z", "]"}], "\[Rule]", " ", "dZ"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "U", "]"}], "\[Rule]", " ", "dU"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "V", "]"}], "\[Rule]", " ", "dV"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptR]", "]"}], "\[Rule]", " ", "d\[ScriptR]"}],
      "  ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[CapitalPhi]", "]"}], "\[Rule]", " ", 
      "d\[CapitalPhi]"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Zeta]", "]"}], "\[Rule]", " ", "d\[Zeta]"}], " ", 
     ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Zeta]bar", "]"}], "\[Rule]", " ", 
      "d\[Zeta]bar"}]}], " ", "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"dtReplace", " ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.82317656063256*^9, 3.823176577809904*^9}, {
   3.823598236175474*^9, 3.823598253654046*^9}, {3.823598849383689*^9, 
   3.82359891091936*^9}, {3.8236913141384983`*^9, 3.823691322585009*^9}, {
   3.8237047861092253`*^9, 3.823704790612156*^9}, {3.824032529537923*^9, 
   3.8240325755969877`*^9}, {3.824111980853726*^9, 3.82411200435644*^9}, 
   3.825369287523849*^9, {3.8254642639057493`*^9, 3.8254642682568827`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"434e21e1-c12c-43ce-b5f8-2adc9da6ba36"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"Dt", "[", "r", "]"}], "\[Rule]", "dr"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "t", "]"}], "\[Rule]", "dt"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "u", "]"}], "\[Rule]", "du"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "v", "]"}], "\[Rule]", "dv"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "x", "]"}], "\[Rule]", "dx"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "y", "]"}], "\[Rule]", "dy"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "z", "]"}], "\[Rule]", "dz"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Theta]", "]"}], "\[Rule]", "d\[Theta]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Phi]", "]"}], "\[Rule]", "d\[Phi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Eta]", "]"}], "\[Rule]", "d\[Eta]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Chi]", "]"}], "\[Rule]", "d\[Chi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Rho]", "]"}], "\[Rule]", "d\[Rho]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[CurlyRho]", "]"}], "\[Rule]", "d\[CurlyRho]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[CurlyPhi]", "]"}], "\[Rule]", "d\[CurlyPhi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Xi]", "]"}], "\[Rule]", "d\[Xi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptT]", "]"}], "\[Rule]", "d\[ScriptT]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptV]", "]"}], "\[Rule]", "d\[ScriptV]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptU]", "]"}], "\[Rule]", "d\[ScriptU]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptX]", "]"}], "\[Rule]", "d\[ScriptX]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptY]", "]"}], "\[Rule]", "d\[ScriptY]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptZ]", "]"}], "\[Rule]", "d\[ScriptZ]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "R", "]"}], "\[Rule]", "dR"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "T", "]"}], "\[Rule]", "dT"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "X", "]"}], "\[Rule]", "dX"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "Y", "]"}], "\[Rule]", "dY"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "Z", "]"}], "\[Rule]", "dZ"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "U", "]"}], "\[Rule]", "dU"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "V", "]"}], "\[Rule]", "dV"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptR]", "]"}], "\[Rule]", "d\[ScriptR]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[CapitalPhi]", "]"}], "\[Rule]", 
       "d\[CapitalPhi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Zeta]", "]"}], "\[Rule]", "d\[Zeta]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Zeta]bar", "]"}], "\[Rule]", "d\[Zeta]bar"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{3.82403258232056*^9, 3.8240504355846977`*^9, 
  3.824051000170314*^9, 3.8240514924468307`*^9, 3.8240541728467197`*^9, 
  3.824054375493238*^9, 3.824111435338122*^9, 3.824112005137067*^9, 
  3.824117930406502*^9, 3.824194583721236*^9, 3.8242097154291267`*^9, 
  3.824213324509409*^9, 3.824297987264646*^9, 3.8242994584334517`*^9, 
  3.824300686394885*^9, 3.8243007608839197`*^9, 3.825369287523972*^9, 
  3.825461023326212*^9, 3.825464268916922*^9, 3.827943943730851*^9},
 CellLabel->
  "Out[6]//TableForm=",ExpressionUUID->"b145affd-70d2-4620-9b42-6a738aa0fb18"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a", "/:", 
    RowBox[{"Dt", "[", "a", "]"}], "=", "0"}], "  ", ";"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"M", " ", "/:", " ", 
    RowBox[{"Dt", "[", "M", "]"}], " ", "=", " ", "0"}], " ", ";"}], 
  "  "}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.823598195430221*^9, 3.823598210501268*^9}, {
   3.823602495092556*^9, 3.823602530987715*^9}, {3.8236188964036007`*^9, 
   3.8236189207008657`*^9}, {3.8237047330364532`*^9, 3.823704739867001*^9}, {
   3.824112239153829*^9, 3.824112246801137*^9}, 3.8253692875240507`*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"5a0745f2-cb18-49e4-8b8c-b083fddb30bb"]
}, Closed]],

Cell[CellGroupData[{

Cell["Line Element and Metric Functions", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.820937548919169*^9, 3.8209375728447866`*^9}, 
   3.8209383129401073`*^9, 3.8220481344968433`*^9, {3.8225115057038183`*^9, 
   3.822511507783984*^9}, 
   3.822763734568725*^9},ExpressionUUID->"82d6e648-30e5-4355-8a17-\
3f1f83f2c309"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "lineToMetric", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lineToMetric", "[", 
    RowBox[{"lineelement_", " ", ",", " ", "differentials_"}], "]"}], ":=", 
   " ", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"i", "\[Equal]", "j"}], " ", ",", 
       RowBox[{"Coefficient", "[", 
        RowBox[{"lineelement", ",", " ", 
         RowBox[{
          RowBox[{"differentials", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", 
          RowBox[{"differentials", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}], "*", 
        RowBox[{"Coefficient", "[", 
         RowBox[{"lineelement", ",", " ", 
          RowBox[{
           RowBox[{"differentials", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", 
           RowBox[{"differentials", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}]}], "]"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "differentials", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "differentials", "]"}]}], "}"}]}], "]"}]}], 
  "  ", ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{3.821567412203915*^9, 3.821641945174967*^9, 
  3.821641981470141*^9, 3.8220481344970007`*^9, 3.822763734569355*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"d9ebaf10-237f-4130-a5fb-0d1daa112573"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "metricToLine", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metricToLine", "[", 
   RowBox[{"metric_", ",", " ", "differentials_"}], "]"}], ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"metric", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "j"}], "]"}], "]"}], " ", 
     RowBox[{"differentials", "[", 
      RowBox[{"[", "i", "]"}], "]"}], " ", 
     RowBox[{"differentials", "[", 
      RowBox[{"[", "j", "]"}], "]"}]}], " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "differentials", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", 
      RowBox[{"Length", "[", "differentials", "]"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.822762557092309*^9, 3.8227626322008677`*^9}, 
   3.8227637345698223`*^9, 3.822988709740047*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"42e20412-9be8-4388-8cfe-943ddfe130e7"]
}, Closed]],

Cell[CellGroupData[{

Cell["Line Element and Metic 1", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.82537091784543*^9, 
  3.825370932349051*^9}},ExpressionUUID->"566df22b-755e-43ec-b11d-\
274a61a10680"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq1", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"\[Gamma]", "-", "\[Psi]"}], ")"}]}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["dT", "2"], "-", " ", 
      SuperscriptBox["dR", "2"]}], ")"}]}], " ", "-", " ", 
   RowBox[{
    SuperscriptBox["R", "2"], " ", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[Psi]"}], "]"}], " ", 
    SuperscriptBox["d\[Phi]", "2"]}], "-", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"2", "\[Psi]"}], "]"}], " ", 
    SuperscriptBox["dZ", "2"]}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.821528889680224*^9, 3.8215289723633833`*^9}, {
   3.821550510999731*^9, 3.821550513797514*^9}, 3.8253709234231358`*^9, {
   3.825461140916339*^9, 3.825461141707259*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"91dbd946-618f-4a9b-9948-0934d8670091"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["dR", "2"]}], "+", 
     SuperscriptBox["dT", "2"]}], ")"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"\[Gamma]", "-", "\[Psi]"}], ")"}]}]]}], "-", 
  RowBox[{
   SuperscriptBox["dZ", "2"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", "\[Psi]"}]]}], "-", 
  RowBox[{
   SuperscriptBox["d\[Phi]", "2"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", "\[Psi]"}]], " ", 
   SuperscriptBox["R", "2"]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{3.8215505338075533`*^9, 3.825370923423236*^9, 
  3.8254610233659067`*^9, 3.825461142485173*^9, 3.8279439438017073`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"851ce4b4-3548-4913-beb0-1541ea428da5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lineToMetric", "[", " ", 
   RowBox[{"eq1", " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"dT", ",", "dR", ",", "d\[Phi]", ",", "dZ"}], "}"}]}], "]"}], 
  " ", "//", " ", "MatrixForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.825461119791029*^9, 3.8254611511071367`*^9}, 
   3.8254613458267403`*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"27a9e42e-e6b3-4456-9a9c-0892ee1a5191"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"\[Gamma]", "-", "\[Psi]"}], ")"}]}]], "0", "0", "0"},
     {"0", 
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]", "-", "\[Psi]"}], ")"}]}]]}], "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Psi]"}]]}], " ", 
       SuperscriptBox["R", "2"]}], "0"},
     {"0", "0", "0", 
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "\[Psi]"}]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.8254611469822817`*^9, 3.825461151359169*^9}, 
   3.825461345827297*^9, 3.8279439438171673`*^9},
 CellLabel->
  "Out[15]//MatrixForm=",ExpressionUUID->"d6cada9c-c281-4a3e-b535-\
85f894b54d72"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq1a", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq1a", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Psi]", "\[Rule]", " ", 
      RowBox[{"\[Psi]", "[", 
       RowBox[{"R", ",", "T"}], "]"}]}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]", "\[Rule]", " ", 
      RowBox[{"\[Gamma]", "[", 
       RowBox[{"R", ",", "T"}], "]"}]}]}], "\[IndentingNewLine]", "}"}]}], 
  " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq1a", " ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.821528985540362*^9, 3.8215290254353952`*^9}, {
   3.821550521285809*^9, 3.8215505283656797`*^9}, 3.825370923423324*^9, {
   3.825461399052953*^9, 3.825461399515839*^9}, {3.82546469115804*^9, 
   3.8254647049004507`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"da4a47a7-da52-4c89-bc33-25ed731be190"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"\[Psi]", "\[Rule]", 
       RowBox[{"\[Psi]", "[", 
        RowBox[{"R", ",", "T"}], "]"}]}]},
     {
      RowBox[{"\[Gamma]", "\[Rule]", 
       RowBox[{"\[Gamma]", "[", 
        RowBox[{"R", ",", "T"}], "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{3.8215505370859833`*^9, 3.8253709234234056`*^9, 
  3.825461023384284*^9, 3.825461399969735*^9, 3.827943943856512*^9},
 CellLabel->
  "Out[18]//TableForm=",ExpressionUUID->"4fa2bce8-42d7-4e73-a071-\
1e32fa84ccde"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric1", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lineToMetric", "[", " ", 
     RowBox[{"eq1", " ", ",", " ", 
      RowBox[{"{", 
       RowBox[{"dT", ",", "dR", ",", "d\[Phi]", ",", "dZ"}], "}"}]}], "]"}], 
    " ", "/.", " ", "eq1a"}]}], "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"metric1", " ", "//", " ", "MatrixForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.825461160507687*^9, 3.8254611769788113`*^9}, 
   3.825461345827512*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"b332d15e-d557-4a6d-826a-87bef117d5ba"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Gamma]", "[", 
           RowBox[{"R", ",", "T"}], "]"}], "-", 
          RowBox[{"\[Psi]", "[", 
           RowBox[{"R", ",", "T"}], "]"}]}], ")"}]}]], "0", "0", "0"},
     {"0", 
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Gamma]", "[", 
            RowBox[{"R", ",", "T"}], "]"}], "-", 
           RowBox[{"\[Psi]", "[", 
            RowBox[{"R", ",", "T"}], "]"}]}], ")"}]}]]}], "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"\[Psi]", "[", 
           RowBox[{"R", ",", "T"}], "]"}]}]]}], " ", 
       SuperscriptBox["R", "2"]}], "0"},
     {"0", "0", "0", 
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"\[Psi]", "[", 
          RowBox[{"R", ",", "T"}], "]"}]}]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.825461162310535*^9, 3.825461177371427*^9}, 
   3.825461345827956*^9, 3.825461401717615*^9, 3.827943943874065*^9},
 CellLabel->
  "Out[21]//MatrixForm=",ExpressionUUID->"8f6709e8-9c43-447d-8b30-\
cafdeed4c3bf"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "inverse1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inverse1", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Inverse", "[", "metric1", "]"}], " ", "//", " ", "Expand"}], 
    " ", "//", " ", "Simplify"}]}], "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"inverse1", " ", "//", " ", "MatrixForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.825461268340797*^9, 3.825461290763137*^9}, 
   3.8254613458281116`*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"60ab4b93-743c-467f-9d3f-6426e61e1b7c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"\[Gamma]", "[", 
          RowBox[{"R", ",", "T"}], "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"\[Psi]", "[", 
          RowBox[{"R", ",", "T"}], "]"}]}]}]], "0", "0", "0"},
     {"0", 
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"\[Gamma]", "[", 
           RowBox[{"R", ",", "T"}], "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"\[Psi]", "[", 
           RowBox[{"R", ",", "T"}], "]"}]}]}]]}], "0", "0"},
     {"0", "0", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"\[Psi]", "[", 
           RowBox[{"R", ",", "T"}], "]"}]}]], 
        SuperscriptBox["R", "2"]]}], "0"},
     {"0", "0", "0", 
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"\[Psi]", "[", 
          RowBox[{"R", ",", "T"}], "]"}]}]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{3.825461291132869*^9, 3.825461345828547*^9, 
  3.8254614037350817`*^9, 3.827943943962126*^9},
 CellLabel->
  "Out[24]//MatrixForm=",ExpressionUUID->"bdfed53c-4a5e-4f0c-bc7e-\
8e00d002a4df"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"metric1", " ", ".", " ", "inverse1"}], " ", "//", " ", 
    "Expand"}], " ", "//", " ", "Simplify"}], " ", "//", " ", 
  "MatrixForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.825461300299472*^9, 3.825461345828676*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"bdc6de77-62dc-445a-a6f6-639c3d1d867f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0"},
     {"0", "1", "0", "0"},
     {"0", "0", "1", "0"},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.825461316500252*^9, 3.825461345829109*^9}, 
   3.825461407383836*^9, 3.827943943978322*^9},
 CellLabel->
  "Out[25]//MatrixForm=",ExpressionUUID->"4d50546f-71c2-4fbd-8d0c-\
f097ecd8ad04"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"inverse1", " ", ".", " ", "metric1"}], "  ", "//", " ", 
    "Expand"}], " ", "//", " ", "Simplify"}], " ", "//", " ", 
  "MatrixForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.825461326601246*^9, 3.825461345829241*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"e2019552-e56d-4d0e-9e0d-1682c78e966a"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0"},
     {"0", "1", "0", "0"},
     {"0", "0", "1", "0"},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.8254613306493177`*^9, 3.825461345829555*^9}, 
   3.825461408931019*^9, 3.827943944012888*^9},
 CellLabel->
  "Out[26]//MatrixForm=",ExpressionUUID->"03f59306-5513-40f7-a868-\
5755aa0d4e72"]
}, Closed]],

Cell[CellGroupData[{

Cell["Tensors Calculated For Metric 1", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.82546134755589*^9, {3.825461880106778*^9, 
   3.8254619075382843`*^9}},ExpressionUUID->"a1cd9c87-b348-4e88-9203-\
ce404066f7bb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "input", "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"input", "[", 
    RowBox[{
    "equationNumber_", ",", "equation_", ",", "metricName_", ",", 
     "displayName_", ",", "variables_", ",", "indices_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", "tensorList", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"tensorList", " ", "=", " ", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<g\>\"", "<>", "equationNumber"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<christoffel\>\"", "<>", "equationNumber"}], " ", ",", 
         " ", "\[IndentingNewLine]", 
         RowBox[{"\"\<riemann\>\"", "<>", "equationNumber"}], "  ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<ricci\>\"", "<>", "equationNumber"}], " ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<ricciscalar\>\"", "<>", "equationNumber"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<kretschmannscalar\>\"", "<>", "equationNumber"}], "  ", 
         ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<einstein\>\"", "<>", "equationNumber"}], "  ", ",", " ",
          "\[IndentingNewLine]", 
         RowBox[{"\"\<weyl\>\"", "<>", "equationNumber"}], "  ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<cotton\>\"", "<>", "equationNumber"}]}], "  ", 
        "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"ToMetric", "[", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{"metricName", ",", " ", "displayName"}], " ", "}"}], " ", 
         ",", " ", "variables", ",", " ", "equation", ",", " ", "indices"}], 
        " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "  ", "=", " ", "\[IndentingNewLine]", 
       RowBox[{"ChristoffelSymbol", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], "]"}]}], " ", ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "3", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"RiemannTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWithNested", "\[Rule]", " ", "Simplify"}]}], " ", 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "4", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"RicciTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}]}], " ",
       ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "5", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"RicciScalar", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}]}], " ",
       ";", "\[IndentingNewLine]", " ", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "6", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"KretschmannScalar", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], "]"}]}], " ", ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "7", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"EinsteinTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], "]"}]}], " ", ";",
       "  ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "8", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"WeylTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}]}], " ",
       ";", "\[IndentingNewLine]", " ", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "9", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"CottonTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}]}], " ",
       ";"}]}], " ", "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820937492203251*^9, 3.821110229350912*^9, {3.824381686137444*^9, 
   3.824381701791286*^9}, {3.824382212611581*^9, 3.824382216339905*^9}, {
   3.8243823186862707`*^9, 3.824382322501081*^9}, {3.825461202181799*^9, 
   3.825461211011776*^9}, 3.825461896249504*^9},
 CellLabel->"In[27]:=",ExpressionUUID->"3926158a-274e-4b9e-b299-12cb7734e6f5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Last", " ", "timing", " ", "took", " ", "9.92", " ", "for", " ", "all", 
    " ", "tensors"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"input", "[", " ", 
    RowBox[{
    "\"\<metric1\>\"", ",", " ", "metric1", ",", " ", "\"\<Cylindrical\>\"", 
     ",", "\"\<\!\(\*SuperscriptBox[\(g\), \(cylindrical\)]\)\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"T", ",", "R", ",", "\[Phi]", ",", "Z"}], "}"}], ",", " ", 
     "\"\<Greek\>\""}], "]"}], " ", "//", " ", "Timing"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820937492203436*^9, 3.821110229350998*^9, {3.822307281934704*^9, 
   3.822307303605431*^9}, {3.8243818575378323`*^9, 3.82438186818433*^9}, {
   3.824513580589107*^9, 3.824513589908223*^9}, {3.825461223316697*^9, 
   3.825461262770912*^9}, {3.8254613704925823`*^9, 3.825461379275358*^9}, 
   3.825461896249675*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"ab98a04c-d49f-473d-9c35-1b8c005834f9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"12.374041`", ",", "Null"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.8254612745082827`*^9, 3.825461428592732*^9, 
  3.825461896249813*^9, 3.82794395782463*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"f155103b-f255-4368-a25a-35168125aaad"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "1", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.82093459847665*^9, 3.820934601699522*^9}, 
   3.8209374922041063`*^9, 3.821110229351385*^9, 3.824373536864387*^9, 
   3.824381939541588*^9, 3.824751170474918*^9, 3.8254618962499523`*^9},
 CellLabel->"In[30]:=",ExpressionUUID->"931850c3-fd09-4e67-9eb8-d4999c3b8c58"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox[
   SuperscriptBox["g", "cylindrical"], "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.820934602303184*^9, 3.820937492204216*^9, 
  3.821110229351462*^9, 3.824373536864538*^9, 3.824381620924634*^9, 
  3.8243818501805983`*^9, 3.824381939541747*^9, 3.824511842173975*^9, 
  3.824514167840876*^9, 3.8247511704751453`*^9, 3.8254613672343473`*^9, 
  3.825461428652072*^9, 3.8254618962500553`*^9, 3.8279439579205647`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"5b68e725-5b31-4f63-b6c1-728fc4550477"],

Cell[BoxData["\<\"Cylindrical\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.820934602303184*^9, 3.820937492204216*^9, 
  3.821110229351462*^9, 3.824373536864538*^9, 3.824381620924634*^9, 
  3.8243818501805983`*^9, 3.824381939541747*^9, 3.824511842173975*^9, 
  3.824514167840876*^9, 3.8247511704751453`*^9, 3.8254613672343473`*^9, 
  3.825461428652072*^9, 3.8254618962500553`*^9, 3.827943957926373*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"42d78e6e-988d-49ab-8a77-591275236de7"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}], "-", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], ")"}]}]], "0", "0", "0"},
      {"0", 
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}], "-", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], ")"}]}]]}], "0", "0"},
      {"0", "0", 
       RowBox[{
        SuperscriptBox["R", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}]}], "0"},
      {"0", "0", "0", 
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}]]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.820934602303184*^9, 3.820937492204216*^9, 
  3.821110229351462*^9, 3.824373536864538*^9, 3.824381620924634*^9, 
  3.8243818501805983`*^9, 3.824381939541747*^9, 3.824511842173975*^9, 
  3.824514167840876*^9, 3.8247511704751453`*^9, 3.8254613672343473`*^9, 
  3.825461428652072*^9, 3.8254618962500553`*^9, 3.827943957929872*^9},
 CellLabel->
  "Out[32]//TraditionalForm=",ExpressionUUID->"f72cadeb-5d28-4a2d-92f7-\
639fec9b8569"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "2", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.820934553796588*^9, 3.820934587380786*^9}, 
   3.8209374922046547`*^9, 3.821110229351994*^9, 3.824373536864839*^9, 
   3.824381939542098*^9, 3.8247511704755993`*^9, 3.8254618962503843`*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"31442022-9c1c-4542-8029-3399ae4297a4"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["\[CapitalGamma]", 
   RowBox[{"  ", "\[Beta]\[Gamma]"}], 
   RowBox[{"\[Alpha]", "    "}]],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820932775595148*^9, 3.8209334480804567`*^9, {3.8209345574198027`*^9, 
   3.820934588189248*^9}, 3.82093749220476*^9, 3.821110229352072*^9, 
   3.824373536864976*^9, 3.8243816209856853`*^9, 3.824381850238319*^9, 
   3.8243819395421953`*^9, 3.8245118422163897`*^9, 3.8245141678935013`*^9, 
   3.82475117047574*^9, 3.825461367326404*^9, 3.82546142867092*^9, 
   3.8254618962504683`*^9, 3.8279439579518127`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"344dbade-ad70-4585-a292-7683ea008ce2"],

Cell[BoxData["\<\"ChristoffelSymbolCylindrical\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820932775595148*^9, 3.8209334480804567`*^9, {3.8209345574198027`*^9, 
   3.820934588189248*^9}, 3.82093749220476*^9, 3.821110229352072*^9, 
   3.824373536864976*^9, 3.8243816209856853`*^9, 3.824381850238319*^9, 
   3.8243819395421953`*^9, 3.8245118422163897`*^9, 3.8245141678935013`*^9, 
   3.82475117047574*^9, 3.825461367326404*^9, 3.82546142867092*^9, 
   3.8254618962504683`*^9, 3.827943957956071*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"c3aca5fc-1244-42c4-ba79-8ed066cf198a"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], "-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None]}]},
           {
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None], "-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None], "-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None]}]},
           {
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], "-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{
             SuperscriptBox["R", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"-", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "2"}], " ", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"4", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None], "-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None]}]},
           {
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], "-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], "-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None]}]},
           {
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None], "-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{"R", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", "1"}], ")"}]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"4", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}]}]]}], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{
             FractionBox["1", "R"], "-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None]}]},
           {
            RowBox[{
             FractionBox["1", "R"], "-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None]},
           {
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820932775595148*^9, 3.8209334480804567`*^9, {3.8209345574198027`*^9, 
   3.820934588189248*^9}, 3.82093749220476*^9, 3.821110229352072*^9, 
   3.824373536864976*^9, 3.8243816209856853`*^9, 3.824381850238319*^9, 
   3.8243819395421953`*^9, 3.8245118422163897`*^9, 3.8245141678935013`*^9, 
   3.82475117047574*^9, 3.825461367326404*^9, 3.82546142867092*^9, 
   3.8254618962504683`*^9, 3.827943958003129*^9},
 CellLabel->
  "Out[35]//TraditionalForm=",ExpressionUUID->"d6598982-d1ef-4c64-bbc3-\
2bacde0729fe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "3", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.82093461950063*^9, 3.820934623299252*^9}, 
   3.820937492205227*^9, 3.821110229352274*^9, 3.8243735368652897`*^9, 
   3.824381939542493*^9, 3.824751170476118*^9, 3.825461896250736*^9},
 CellLabel->"In[36]:=",ExpressionUUID->"fa8ba01f-d62e-4dca-99de-facc102b9e5e"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["R", "\[Alpha]\[Beta]\[Gamma]\[Delta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.820934623837241*^9, 3.820937492205323*^9, 
  3.821110229352366*^9, 3.824373536865405*^9, 3.824381621264045*^9, 
  3.824381850457645*^9, 3.824381939542604*^9, 3.8245118424513693`*^9, 
  3.8245141681144238`*^9, 3.8247511704762497`*^9, 3.825461367387659*^9, 
  3.825461428746798*^9, 3.825461896250822*^9, 3.827943958056542*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"8c183352-5642-4a77-ad1c-40f13fcd5cf5"],

Cell[BoxData["\<\"RiemannTensorCylindrical\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.820934623837241*^9, 3.820937492205323*^9, 
  3.821110229352366*^9, 3.824373536865405*^9, 3.824381621264045*^9, 
  3.824381850457645*^9, 3.824381939542604*^9, 3.8245118424513693`*^9, 
  3.8245141681144238`*^9, 3.8247511704762497`*^9, 3.825461367387659*^9, 
  3.825461428746798*^9, 3.825461896250822*^9, 3.827943958060726*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"b9e4648c-8f16-4394-b5e2-53856a8980a0"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["R", "2"]}],
               MultilineFunction->None], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None]}], ")"}]}], "0", "0"},
          {
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]}]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["R", "2"]}],
               MultilineFunction->None], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None]}], ")"}]}], "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{"R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}]}], ")"}]}], "0"},
          {"0", "0", 
           RowBox[{"R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], ")"}]}]}], ")"}]}], "0"},
          {
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}]}], ")"}]}], 
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], ")"}]}]}], ")"}]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], ")"}], "2"], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]},
          {"0", "0", "0", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{
                RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                RowBox[{"\[PartialD]", "T"}]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}]},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], ")"}], "2"], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{
                RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                RowBox[{"\[PartialD]", "T"}]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], "0", 
           "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]}]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["R", "2"]}],
               MultilineFunction->None], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None]}], ")"}]}], "0", "0"},
          {
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["R", "2"]}],
               MultilineFunction->None], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None]}], ")"}]}], "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{"R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], ")"}]}]}], ")"}]}], "0"},
          {"0", "0", 
           RowBox[{"R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None], "-", 
              RowBox[{"R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None]}], ")"}]}], "0"},
          {
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], ")"}]}]}], ")"}]}], 
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None], "-", 
              RowBox[{"R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None]}], ")"}]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{
                RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                RowBox[{"\[PartialD]", "T"}]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}]},
          {"0", "0", "0", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["R", "2"]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], ")"}], "2"]}], ")"}]}]},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{
                RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                RowBox[{"\[PartialD]", "T"}]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["R", "2"]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], ")"}], "2"]}], ")"}]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}]}], ")"}]}], "0"},
          {"0", "0", 
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], ")"}]}]}], ")"}]}], "0"},
          {
           RowBox[{"R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}]}], ")"}]}], 
           RowBox[{"R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], ")"}]}]}], ")"}]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], ")"}]}]}], ")"}]}], "0"},
          {"0", "0", 
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None], "-", 
              RowBox[{"R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None]}], ")"}]}], "0"},
          {
           RowBox[{"R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], ")"}]}]}], ")"}]}], 
           RowBox[{"R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None], "-", 
              RowBox[{"R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None]}], ")"}]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{"R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}]}], "+", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None], "+", 
              RowBox[{"R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]},
          {"0", "0", 
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}]}], "+", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None], "+", 
              RowBox[{"R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], ")"}], "2"], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]},
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{
                RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                RowBox[{"\[PartialD]", "T"}]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}]},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], ")"}], "2"], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{
                RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                RowBox[{"\[PartialD]", "T"}]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], "0", 
           "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{
                RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                RowBox[{"\[PartialD]", "T"}]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}]},
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["R", "2"]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], ")"}], "2"]}], ")"}]}]},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{
                RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                RowBox[{"\[PartialD]", "T"}]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["R", "2"]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], ")"}], "2"]}], ")"}]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}]}], "+", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None], "+", 
              RowBox[{"R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]},
          {"0", "0", 
           RowBox[{"R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}]}], "+", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None], "+", 
              RowBox[{"R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.820934623837241*^9, 3.820937492205323*^9, 
  3.821110229352366*^9, 3.824373536865405*^9, 3.824381621264045*^9, 
  3.824381850457645*^9, 3.824381939542604*^9, 3.8245118424513693`*^9, 
  3.8245141681144238`*^9, 3.8247511704762497`*^9, 3.825461367387659*^9, 
  3.825461428746798*^9, 3.825461896250822*^9, 3.827943958570916*^9},
 CellLabel->
  "Out[38]//TraditionalForm=",ExpressionUUID->"101553e9-fb5a-4662-b7b2-\
bc4239489ae0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "4", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "4", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.820934641180434*^9, 3.820934644683545*^9}, 
   3.820937492205658*^9, 3.821110229352577*^9, 3.8243735368657513`*^9, 
   3.8243819395429*^9, 3.82475117047663*^9, 3.825461896251109*^9},
 CellLabel->"In[39]:=",ExpressionUUID->"5581a3fc-e7c0-48ae-93b4-3816c94a26a8"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["R", "\[Beta]\[Gamma]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.820934645395719*^9, 3.8209374922057543`*^9, 
  3.82111022935266*^9, 3.8243735368658533`*^9, 3.824381626124463*^9, 
  3.824381854371036*^9, 3.824381939543002*^9, 3.824511846625956*^9, 
  3.8245141719213133`*^9, 3.824751170476756*^9, 3.825461367874867*^9, 
  3.825461429357312*^9, 3.825461896251197*^9, 3.827943958599661*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"284de5bb-547a-4c13-adb1-251854f38e61"],

Cell[BoxData["\<\"RicciTensorCylindrical\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.820934645395719*^9, 3.8209374922057543`*^9, 
  3.82111022935266*^9, 3.8243735368658533`*^9, 3.824381626124463*^9, 
  3.824381854371036*^9, 3.824381939543002*^9, 3.824511846625956*^9, 
  3.8245141719213133`*^9, 3.824751170476756*^9, 3.825461367874867*^9, 
  3.825461429357312*^9, 3.825461896251197*^9, 3.8279439586037483`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"f5138afa-741b-414a-b704-6acca80df005"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], "+", 
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], "R"], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "T"}],
            MultilineFunction->None], ")"}], "2"]}], "-", 
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], "R"]}], 
       RowBox[{
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None], "R"], "-", 
        RowBox[{"2", " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None]}]}], "0", "0"},
      {
       RowBox[{
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None], "R"], "-", 
        RowBox[{"2", " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None]}]}], 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["R", "2"]}],
          MultilineFunction->None]}], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], "+", 
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], "R"], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "R"}],
            MultilineFunction->None], ")"}], "2"]}], "+", 
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], "R"]}], "0", "0"},
      {"0", "0", 
       RowBox[{"R", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"R", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["R", "2"]}],
            MultilineFunction->None]}], "-", 
          RowBox[{"R", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["T", "2"]}],
            MultilineFunction->None]}], "+", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None]}], ")"}]}], "0"},
      {"0", "0", "0", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"4", " ", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"R", " ", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[PartialD]", "2"], 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", 
               SuperscriptBox["R", "2"]}],
              MultilineFunction->None]}]}], "+", 
           RowBox[{"R", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["T", "2"]}],
             MultilineFunction->None]}], "-", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "R"}],
            MultilineFunction->None]}], ")"}]}], "R"]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.820934645395719*^9, 3.8209374922057543`*^9, 
  3.82111022935266*^9, 3.8243735368658533`*^9, 3.824381626124463*^9, 
  3.824381854371036*^9, 3.824381939543002*^9, 3.824511846625956*^9, 
  3.8245141719213133`*^9, 3.824751170476756*^9, 3.825461367874867*^9, 
  3.825461429357312*^9, 3.825461896251197*^9, 3.8279439586401987`*^9},
 CellLabel->
  "Out[41]//TraditionalForm=",ExpressionUUID->"5a4b63a3-1dee-4738-b7c0-\
a69b3b3454a3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "5", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "5", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "5", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.820934650372052*^9, 3.820934653739538*^9}, 
   3.820937492206099*^9, 3.821110229352878*^9, 3.824373536866138*^9, 
   3.82438193954329*^9, 3.8247511704771013`*^9, 3.8254618962515163`*^9},
 CellLabel->"In[42]:=",ExpressionUUID->"b6025cbd-4b46-42eb-baca-5375352e0907"],

Cell[BoxData[
 TagBox["\<\"R\"\>",
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.8209346543102093`*^9, 3.820937492206188*^9, 
  3.821110229352955*^9, 3.82437353686622*^9, 3.8243816263835297`*^9, 
  3.824381854615872*^9, 3.8243819395433826`*^9, 3.824511846864684*^9, 
  3.824514172146737*^9, 3.8247511704772167`*^9, 3.825461367953107*^9, 
  3.8254614294213552`*^9, 3.82546189625161*^9, 3.827943958655676*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"0ff009c7-6c1b-4339-bea5-c3d202c37c2d"],

Cell[BoxData["\<\"RicciScalarCylindrical\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.8209346543102093`*^9, 3.820937492206188*^9, 
  3.821110229352955*^9, 3.82437353686622*^9, 3.8243816263835297`*^9, 
  3.824381854615872*^9, 3.8243819395433826`*^9, 3.824511846864684*^9, 
  3.824514172146737*^9, 3.8247511704772167`*^9, 3.825461367953107*^9, 
  3.8254614294213552`*^9, 3.82546189625161*^9, 3.8279439586602383`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"3329c924-14e1-4674-ace5-651eeb83e6c7"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"R", ",", "T"}], ")"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"\[Gamma]", "(", 
          RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"R", " ", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["R", "2"]}],
           MultilineFunction->None]}]}], "+", 
        RowBox[{"R", " ", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["R", "2"]}],
          MultilineFunction->None]}], "+", 
        RowBox[{"R", " ", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["T", "2"]}],
          MultilineFunction->None]}], "-", 
        RowBox[{"R", " ", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["T", "2"]}],
          MultilineFunction->None]}], "-", 
        RowBox[{"R", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "R"}],
            MultilineFunction->None], ")"}], "2"]}], "+", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], "+", 
        RowBox[{"R", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "T"}],
            MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "R"]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.8209346543102093`*^9, 3.820937492206188*^9, 
  3.821110229352955*^9, 3.82437353686622*^9, 3.8243816263835297`*^9, 
  3.824381854615872*^9, 3.8243819395433826`*^9, 3.824511846864684*^9, 
  3.824514172146737*^9, 3.8247511704772167`*^9, 3.825461367953107*^9, 
  3.8254614294213552`*^9, 3.82546189625161*^9, 3.827943958684383*^9},
 CellLabel->
  "Out[44]//TraditionalForm=",ExpressionUUID->"97275ac7-8456-4794-8971-\
ddfd42bf6db7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "6", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "6", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "6", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.824382031881773*^9, 3.824382035720847*^9}, 
   3.824382068120364*^9, 3.8247511704775753`*^9, 3.825461896251915*^9},
 CellLabel->"In[45]:=",ExpressionUUID->"b788313c-d4f8-4b28-9c19-53dbdf83f09c"],

Cell[BoxData[
 TagBox["\<\"K\"\>",
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.82451184692048*^9, 3.824514172191423*^9, 
  3.824751170477703*^9, 3.825461367971528*^9, 3.825461429482603*^9, 
  3.8254618962520027`*^9, 3.827943958708651*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"59de3f1a-f6e9-4d90-80b2-3d4c89da0d4f"],

Cell[BoxData["\<\"KretschmannScalarCylindrical\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.82451184692048*^9, 3.824514172191423*^9, 
  3.824751170477703*^9, 3.825461367971528*^9, 3.825461429482603*^9, 
  3.8254618962520027`*^9, 3.827943958712845*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"d751b6f6-7927-40e7-a898-6c2ddcd47d70"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["R", "2"]], 
    RowBox[{"4", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"4", " ", 
        RowBox[{"\[Psi]", "(", 
         RowBox[{"R", ",", "T"}], ")"}]}], "-", 
       RowBox[{"4", " ", 
        RowBox[{"\[Gamma]", "(", 
         RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"7", " ", 
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "4"]}], "-", 
       RowBox[{"4", " ", "R", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "3"]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["R", "2"], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "3"]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "2"]}], "+", 
       RowBox[{"2", " ", "R", " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "2"]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["R", "2"], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "2"]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["R", "2"], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "2"]}], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "2"]}], "-", 
       RowBox[{"4", " ", "R", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "2"], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None]}], "+", 
       RowBox[{"2", " ", "R", " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["R", "2"], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None]}], "-", 
       RowBox[{"2", " ", "R", " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["R", "2"], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None]}], "+", 
       RowBox[{"7", " ", 
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], ")"}], "4"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["R", "2"]}],
           MultilineFunction->None], ")"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["T", "2"]}],
           MultilineFunction->None], ")"}], "2"]}], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["R", "2"]}],
           MultilineFunction->None], ")"}], "2"]}], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["T", "2"]}],
           MultilineFunction->None], ")"}], "2"]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{
            RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
            RowBox[{"\[PartialD]", "T"}]}],
           MultilineFunction->None], ")"}], "2"]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["R", "2"], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           SuperscriptBox["R", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None], ")"}], "2"]}], "+", 
          RowBox[{"4", " ", "R", " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "R"}],
            MultilineFunction->None]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["R", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], ")"}], "2"]}], "-", "2"}], ")"}]}], 
       "+", 
       RowBox[{"2", " ", "R", " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["R", "2"], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["R", "2"], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None]}], "+", 
       RowBox[{"2", " ", "R", " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["R", "2"], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["R", "2"], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["R", "2"], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None]}], "+", 
       RowBox[{"2", " ", "R", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "R", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None], ")"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", "R", " ", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None]}], "+", "1"}], ")"}], " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "R"}],
            MultilineFunction->None]}], "-", 
          RowBox[{"7", " ", "R", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None], ")"}], "2"]}], "+", 
          RowBox[{"2", " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "R"}],
            MultilineFunction->None]}], "+", 
          RowBox[{"2", " ", "R", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["R", "2"]}],
            MultilineFunction->None]}], "+", 
          RowBox[{"2", " ", "R", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["T", "2"]}],
            MultilineFunction->None]}]}], ")"}]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["R", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], "-", 
          RowBox[{"2", " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "R"}],
            MultilineFunction->None]}]}], ")"}], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{
          RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
          RowBox[{"\[PartialD]", "T"}]}],
         MultilineFunction->None]}], "-", 
       RowBox[{"4", " ", "R", " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "R", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], ")"}], "3"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "R", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], ")"}], "2"]}], "+", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None], "+", 
             RowBox[{"R", " ", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["R", "2"]}],
               MultilineFunction->None]}], "+", 
             RowBox[{"R", " ", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None]}]}], ")"}], " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "T"}],
            MultilineFunction->None]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", "R", " ", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None]}]}], ")"}], " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{
             RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
             RowBox[{"\[PartialD]", "T"}]}],
            MultilineFunction->None]}]}], ")"}]}]}], ")"}]}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.82451184692048*^9, 3.824514172191423*^9, 
  3.824751170477703*^9, 3.825461367971528*^9, 3.825461429482603*^9, 
  3.8254618962520027`*^9, 3.827943958720392*^9},
 CellLabel->
  "Out[47]//TraditionalForm=",ExpressionUUID->"0153a708-33eb-4411-9632-\
de51cb5fd820"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "7", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "7", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "7", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.8243818880356607`*^9, 3.824381891296851*^9}, 
   3.82438193954393*^9, {3.824382052340536*^9, 3.824382068120544*^9}, 
   3.8247511704783077`*^9, 3.825461896252305*^9},
 CellLabel->"In[48]:=",ExpressionUUID->"3b422bb1-347e-4075-b7d9-df21555823a1"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["G", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.824381892203912*^9, 3.824381939544029*^9, {3.824382052340662*^9, 
   3.8243820681206617`*^9}, 3.82451184696933*^9, 3.824514172248722*^9, 
   3.8247511704784727`*^9, 3.825461368098164*^9, 3.825461429545022*^9, 
   3.82546189625239*^9, 3.827943958759293*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"8eef0df0-a2eb-43d2-99b3-4c0396f2d20f"],

Cell[BoxData["\<\"EinsteinTensorCylindrical\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.824381892203912*^9, 3.824381939544029*^9, {3.824382052340662*^9, 
   3.8243820681206617`*^9}, 3.82451184696933*^9, 3.824514172248722*^9, 
   3.8247511704784727`*^9, 3.825461368098164*^9, 3.825461429545022*^9, 
   3.82546189625239*^9, 3.827943958763989*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"b626c575-c241-4046-b894-971f90bfed53"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], "R"], "-", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "2"], "-", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], ")"}], "2"]}], 
       RowBox[{
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None], "R"], "-", 
        RowBox[{"2", " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None]}]}], "0", "0"},
      {
       RowBox[{
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None], "R"], "-", 
        RowBox[{"2", " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None]}]}], 
       RowBox[{
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], "R"], "-", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "2"], "-", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], ")"}], "2"]}], "0", "0"},
      {"0", "0", 
       RowBox[{
        SuperscriptBox["R", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["R", "2"]}],
            MultilineFunction->None]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["T", "2"]}],
           MultilineFunction->None], "-", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None], ")"}], "2"]}], ")"}]}], "0"},
      {"0", "0", "0", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"4", " ", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"R", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["R", "2"]}],
             MultilineFunction->None]}], "-", 
           RowBox[{"2", " ", "R", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["R", "2"]}],
             MultilineFunction->None]}], "-", 
           RowBox[{"R", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["T", "2"]}],
             MultilineFunction->None]}], "+", 
           RowBox[{"2", " ", "R", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["T", "2"]}],
             MultilineFunction->None]}], "+", 
           RowBox[{"R", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None], ")"}], "2"]}], "-", 
           RowBox[{"2", " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None]}], "-", 
           RowBox[{"R", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "T"}],
               MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "R"]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.824381892203912*^9, 3.824381939544029*^9, {3.824382052340662*^9, 
   3.8243820681206617`*^9}, 3.82451184696933*^9, 3.824514172248722*^9, 
   3.8247511704784727`*^9, 3.825461368098164*^9, 3.825461429545022*^9, 
   3.82546189625239*^9, 3.827943958791095*^9},
 CellLabel->
  "Out[50]//TraditionalForm=",ExpressionUUID->"37921ae8-a574-40e2-a969-\
ae0c4abe935a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "8", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "8", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "8", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.82093465870828*^9, 3.820934665723707*^9}, 
   3.820937492206532*^9, 3.821110229353163*^9, 3.824373536866439*^9, 
   3.82438193954467*^9, {3.824382052340996*^9, 3.824382068120945*^9}, 
   3.824751170478986*^9, 3.8254618962526617`*^9},
 CellLabel->"In[51]:=",ExpressionUUID->"be2db789-7f63-4097-988b-0807f6c55413"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["C", "\[Alpha]\[Beta]\[Gamma]\[Delta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934666611442*^9, 3.820937492206628*^9, 3.821110229353245*^9, 
   3.824381626454548*^9, 3.824381854687508*^9, {3.824382052341096*^9, 
   3.8243820681210527`*^9}, 3.824511847219433*^9, 3.824514172561551*^9, 
   3.824751170479109*^9, 3.825461368170291*^9, 3.825461429613463*^9, 
   3.825461896252749*^9, 3.827943958855624*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"3612f5ed-a4c6-4c72-8ede-ba5cf40e35e7"],

Cell[BoxData["\<\"WeylTensorCylindrical\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934666611442*^9, 3.820937492206628*^9, 3.821110229353245*^9, 
   3.824381626454548*^9, 3.824381854687508*^9, {3.824382052341096*^9, 
   3.8243820681210527`*^9}, 3.824511847219433*^9, 3.824514172561551*^9, 
   3.824751170479109*^9, 3.825461368170291*^9, 3.825461429613463*^9, 
   3.825461896252749*^9, 3.827943958859663*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"3ae53278-02f9-4560-878f-3fd97a59f2e3"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"2", " ", "R", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                RowBox[{"2", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"2", " ", "R", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
             RowBox[{"3", " ", "R"}]]}], "0", "0"},
          {
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
            RowBox[{"3", " ", "R"}]], "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{
            FractionBox["1", "6"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"3", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"8", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "0"},
          {"0", "0", 
           RowBox[{
            FractionBox["1", "2"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], "0"},
          {
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "6"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"3", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"8", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"4", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"6", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"6", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"3", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"4", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"8", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
            RowBox[{"6", " ", "R"}]]},
          {"0", "0", "0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                   MultilineFunction->None]}]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
                RowBox[{"2", " ", "R", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], "-", 
                   RowBox[{"2", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
             RowBox[{"2", " ", "R"}]]}]},
          {"0", "0", "0", "0"},
          {
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None]}]}], "-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"6", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"6", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"3", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"8", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
            RowBox[{"6", " ", "R"}]], 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"2", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None]}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], "-", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
            RowBox[{"2", " ", "R"}]], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
            RowBox[{"3", " ", "R"}]], "0", "0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"2", " ", "R", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                RowBox[{"2", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"2", " ", "R", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
             RowBox[{"3", " ", "R"}]]}], "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{
            FractionBox["1", "2"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], "0"},
          {"0", "0", 
           RowBox[{
            FractionBox["1", "6"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}]}], "-", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"3", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"8", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "0"},
          {
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "6"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}]}], "-", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"3", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"8", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "0", 
           "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                   MultilineFunction->None]}]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
                RowBox[{"2", " ", "R", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], "-", 
                   RowBox[{"2", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
             RowBox[{"2", " ", "R"}]]}]},
          {"0", "0", "0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None]}]}], "+", 
               RowBox[{"4", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"6", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"6", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"3", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"8", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"4", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
            RowBox[{"6", " ", "R"}]]},
          {"0", "0", "0", "0"},
          {
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"2", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None]}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], "-", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
            RowBox[{"2", " ", "R"}]], 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"6", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"6", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"3", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"8", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
            RowBox[{"6", " ", "R"}]], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "6"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"3", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"8", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "0"},
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], "0"},
          {
           RowBox[{
            FractionBox["1", "6"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"3", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"8", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
           RowBox[{
            FractionBox["1", "2"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], "0"},
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "6"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}]}], "-", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"3", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"8", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "0"},
          {
           RowBox[{
            FractionBox["1", "2"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
           RowBox[{
            FractionBox["1", "6"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}]}], "-", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"3", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"8", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "0", 
           "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{
            FractionBox["1", "3"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]},
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "3"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None]}]}], "-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"6", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"6", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"3", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"8", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
            RowBox[{"6", " ", "R"}]]},
          {"0", "0", "0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"2", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None]}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], "-", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
            RowBox[{"2", " ", "R"}]]},
          {"0", "0", "0", "0"},
          {
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"4", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"6", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"6", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"3", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"4", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"8", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
            RowBox[{"6", " ", "R"}]], 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                   MultilineFunction->None]}]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
                RowBox[{"2", " ", "R", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], "-", 
                   RowBox[{"2", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
             RowBox[{"2", " ", "R"}]]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"2", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None]}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], "-", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
            RowBox[{"2", " ", "R"}]]},
          {"0", "0", "0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"6", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"6", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"3", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"8", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
            RowBox[{"6", " ", "R"}]]},
          {"0", "0", "0", "0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                   MultilineFunction->None]}]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
                RowBox[{"2", " ", "R", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], "-", 
                   RowBox[{"2", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
             RowBox[{"2", " ", "R"}]]}], 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None]}]}], "+", 
               RowBox[{"4", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"6", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"6", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"3", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"8", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"4", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
            RowBox[{"6", " ", "R"}]], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "3"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]},
          {"0", "0", 
           RowBox[{
            FractionBox["1", "3"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934666611442*^9, 3.820937492206628*^9, 3.821110229353245*^9, 
   3.824381626454548*^9, 3.824381854687508*^9, {3.824382052341096*^9, 
   3.8243820681210527`*^9}, 3.824511847219433*^9, 3.824514172561551*^9, 
   3.824751170479109*^9, 3.825461368170291*^9, 3.825461429613463*^9, 
   3.825461896252749*^9, 3.827943959663056*^9},
 CellLabel->
  "Out[53]//TraditionalForm=",ExpressionUUID->"92b9e7f3-711d-4ba5-96f2-\
8380a0ec00b7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "9", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "9", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "9", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.824382043442072*^9, 3.824382068121275*^9}, 
   3.824751170479444*^9, 3.8254618962530327`*^9},
 CellLabel->"In[54]:=",ExpressionUUID->"269745b9-3b9d-40ee-bb40-97c459ac8ae4"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["C", "\[Alpha]\[Beta]\[Gamma]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.825461368931572*^9, 3.825461430647333*^9, 
  3.8254618962531223`*^9, 3.827943959777948*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"1c53a8fa-1c3d-4572-8318-24e32411cad0"],

Cell[BoxData["\<\"CottonTensorCylindrical\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.825461368931572*^9, 3.825461430647333*^9, 
  3.8254618962531223`*^9, 3.82794395978197*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"9d4e6cab-6553-45dc-a5fa-5da8aa2f4807"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {
            FractionBox[
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "3"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["R", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "3"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{
                 RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["R", "2"], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{
                 RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                 RowBox[{"\[PartialD]", "T"}]}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}]}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                 RowBox[{"4", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "3"}], ")"}]}], "+", 
              RowBox[{"10", " ", 
               SuperscriptBox["R", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["R", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"3", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["R", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "3"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "3"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["R", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["R", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "3"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "3"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["R", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "3"]}], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["R", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"4", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "3"}], ")"}]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}]}], 
             RowBox[{"3", " ", 
              SuperscriptBox["R", "2"]}]]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox["R", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "3"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{
                 RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["R", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "3"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{
                 RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["R", "2"], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{
                 RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                 RowBox[{"\[PartialD]", "T"}]}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                 RowBox[{"4", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "+", "3"}], ")"}]}], "-", 
              RowBox[{"10", " ", 
               SuperscriptBox["R", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["R", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"3", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["R", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "3"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "3"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["R", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["R", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "3"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "3"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["R", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "3"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["R", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"4", " ", "R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], "+", 
                 RowBox[{"4", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "+", "3"}], ")"}]}], "+", 
              RowBox[{"4", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}]}], 
             RowBox[{"3", " ", 
              SuperscriptBox["R", "2"]}]]},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {
            FractionBox[
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                 RowBox[{"4", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "3"}], ")"}]}], "-", 
              RowBox[{"2", " ", "R", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                    MultilineFunction->None]}]}], "+", 
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                   MultilineFunction->None]}], "+", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}]}], "+", 
                    RowBox[{"5", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                    RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"3", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"2", " ", "R", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                    RowBox[{"2", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "3"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "3"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"2", " ", "R", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "3"]}]}], ")"}]}]}], 
             RowBox[{"3", " ", 
              SuperscriptBox["R", "2"]}]]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{
              RowBox[{"2", " ", "R", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                    MultilineFunction->None]}]}], "+", 
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                   MultilineFunction->None]}], "+", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}]}], "+", 
                    RowBox[{"5", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                    RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"3", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"2", " ", "R", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                    RowBox[{"2", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "3"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "3"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"2", " ", "R", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "3"]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                 RowBox[{"4", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "+", "3"}], ")"}]}]}], 
             RowBox[{"3", " ", 
              SuperscriptBox["R", "2"]}]]},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{
             FractionBox["1", "3"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"2", " ", 
                    SuperscriptBox["R", "2"], " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}]}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "+", "3"}], ")"}]}], "-", 
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}]}], "+", 
                    RowBox[{"4", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                    RowBox[{"R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"6", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"3", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"4", " ", "R", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                    RowBox[{"10", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}], "-", 
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "3"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "3"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", "R", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "3"]}]}], ")"}]}]}], 
              ")"}]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{
             FractionBox["1", "3"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "3"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "3"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}], "-", 
               RowBox[{"3", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "3"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "3"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"6", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "3"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "3"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["R", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "3"]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["R", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "3"}], ")"}]}], "+", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"3", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"3", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"10", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}]}], ")"}]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{
             FractionBox["1", "3"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}]}], "+", 
                    RowBox[{"4", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                    RowBox[{"R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"6", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"3", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"4", " ", "R", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                    RowBox[{"10", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}], "-", 
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "3"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "3"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", "R", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "3"]}]}], ")"}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "3"}], ")"}]}]}], 
              ")"}]}]},
           {
            RowBox[{
             FractionBox["1", "3"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}]}],
                  MultilineFunction->None]}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "3"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"3", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "3"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "3"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"6", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "3"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "3"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["R", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "3"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["R", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "3"}], ")"}]}], "-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"3", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"3", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"10", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}]}], ")"}]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"4", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                   MultilineFunction->None]}]}], "+", 
                RowBox[{"4", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"2", " ", "R", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"4", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"5", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}]}], "+", 
                   RowBox[{"14", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"5", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"12", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"3", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"8", " ", "R", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                   RowBox[{"14", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"8", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"8", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"2", " ", "R", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                   RowBox[{"5", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"2", " ", "R", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "3"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"4", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "3"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"8", " ", "R", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "3"]}]}], ")"}]}], 
             RowBox[{"3", " ", "R"}]]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"4", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"5", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"8", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"14", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"5", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"8", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], "-", 
                   RowBox[{"4", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "3"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"12", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"4", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"4", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "3"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"8", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "3"]}], "-", 
                RowBox[{"5", " ", "R", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"3", " ", "R", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"14", " ", "R", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                RowBox[{"4", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             RowBox[{"3", " ", 
              SuperscriptBox["R", "2"]}]]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"4", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"4", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"2", " ", "R", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"4", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"5", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"14", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"5", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"12", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"3", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"8", " ", "R", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                   RowBox[{"14", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}]}], "+", 
                   RowBox[{"8", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"8", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"2", " ", "R", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                   RowBox[{"5", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"2", " ", "R", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "-", 
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "3"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"4", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "3"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"8", " ", "R", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "3"]}]}], ")"}]}], 
             RowBox[{"3", " ", "R"}]]},
           {
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"4", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}]}],
                   MultilineFunction->None]}]}], "+", 
                RowBox[{"4", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"5", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"8", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"14", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"5", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"8", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], "-", 
                   RowBox[{"4", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "3"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"12", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"4", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "3"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"8", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "3"]}], "+", 
                RowBox[{"5", " ", "R", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"3", " ", "R", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"14", " ", "R", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                RowBox[{"4", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             RowBox[{"3", " ", 
              SuperscriptBox["R", "2"]}]]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.825461368931572*^9, 3.825461430647333*^9, 
  3.8254618962531223`*^9, 3.827943960510913*^9},
 CellLabel->
  "Out[56]//TraditionalForm=",ExpressionUUID->"64acc3ad-a3e1-4108-8d17-\
8f4e50f844ca"]
}, Closed]],

Cell[CellGroupData[{

Cell["Derivation of Field Equations For Metric 1", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.825461911218462*^9, 
  3.825461934714126*^9}},ExpressionUUID->"2dd92ea5-1ac2-44ad-9de8-\
e46becee731f"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "nonzeroRicci", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nonzeroRicci", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"TensorValues", "[", 
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TensorValues", "[", 
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TensorValues", "[", 
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TensorValues", "[", 
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"3", ",", "3"}], "]"}], "]"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TensorValues", "[", 
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"4", ",", "4"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
    "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nonzeroRicci", " ", "//", " ", "TableForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.825461440924431*^9, 3.825461492667721*^9}, 
   3.825461922885262*^9},
 CellLabel->"In[57]:=",ExpressionUUID->"430b3bdf-8e5c-405a-8966-e77ce4351081"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], "+", 
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], "R"], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "T"}],
            MultilineFunction->None], ")"}], "2"]}], "-", 
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], "R"]}]},
      {
       RowBox[{
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None], "R"], "-", 
        RowBox[{"2", " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None]}]}]},
      {
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["R", "2"]}],
          MultilineFunction->None]}], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], "+", 
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], "R"], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "R"}],
            MultilineFunction->None], ")"}], "2"]}], "+", 
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], "R"]}]},
      {
       RowBox[{"R", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"R", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["R", "2"]}],
            MultilineFunction->None]}], "-", 
          RowBox[{"R", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["T", "2"]}],
            MultilineFunction->None]}], "+", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None]}], ")"}]}]},
      {
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"4", " ", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"R", " ", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[PartialD]", "2"], 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", 
               SuperscriptBox["R", "2"]}],
              MultilineFunction->None]}]}], "+", 
           RowBox[{"R", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["T", "2"]}],
             MultilineFunction->None]}], "-", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "R"}],
            MultilineFunction->None]}], ")"}]}], "R"]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.825461442269538*^9, 3.8254614625694227`*^9}, 
   3.825461493177374*^9, 3.825461922885829*^9, 3.827943960585627*^9},
 CellLabel->
  "Out[59]//TraditionalForm=",ExpressionUUID->"6da63780-0c6e-44bf-a9c8-\
a9ac6e3597a8"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "nonzeroEinstein", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nonzeroEinstein", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"TensorValues", "[", 
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "7", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TensorValues", "[", 
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "7", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TensorValues", "[", 
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "7", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TensorValues", "[", 
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "7", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"3", ",", "3"}], "]"}], "]"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TensorValues", "[", 
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "7", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"4", ",", "4"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
    "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nonzeroEinstein", " ", "//", " ", "TableForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.825461502973064*^9, 3.825461523500526*^9}, 
   3.825461922886047*^9},
 CellLabel->"In[60]:=",ExpressionUUID->"da56504d-fd36-427a-8686-8f4ae895fa6d"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], "R"], "-", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "2"], "-", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], ")"}], "2"]}]},
      {
       RowBox[{
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None], "R"], "-", 
        RowBox[{"2", " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None]}]}]},
      {
       RowBox[{
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], "R"], "-", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "2"], "-", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], ")"}], "2"]}]},
      {
       RowBox[{
        SuperscriptBox["R", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["R", "2"]}],
            MultilineFunction->None]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["T", "2"]}],
           MultilineFunction->None], "-", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None], ")"}], "2"]}], ")"}]}]},
      {
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"4", " ", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"R", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["R", "2"]}],
             MultilineFunction->None]}], "-", 
           RowBox[{"2", " ", "R", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["R", "2"]}],
             MultilineFunction->None]}], "-", 
           RowBox[{"R", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["T", "2"]}],
             MultilineFunction->None]}], "+", 
           RowBox[{"2", " ", "R", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["T", "2"]}],
             MultilineFunction->None]}], "+", 
           RowBox[{"R", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None], ")"}], "2"]}], "-", 
           RowBox[{"2", " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None]}], "-", 
           RowBox[{"R", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "T"}],
               MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "R"]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{3.825461524516405*^9, 3.825461922886528*^9, 
  3.827943960639937*^9},
 CellLabel->
  "Out[62]//TraditionalForm=",ExpressionUUID->"25b38f48-0d9f-45dd-98c4-\
a489eb89883e"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq2", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Simplify", "[", 
        RowBox[{
         RowBox[{"Expand", "[", 
          RowBox[{
           RowBox[{"(", 
            FractionBox[
             RowBox[{"-", "1"}], 
             RowBox[{"2", "R"}]], ")"}], "*", 
           RowBox[{
            RowBox[{"nonzeroEinstein", "[", 
             RowBox[{"[", "5", "]"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "]"}], " ", "+", 
         RowBox[{
          RowBox[{"(", 
           FractionBox[
            RowBox[{"-", "1"}], "2"], ")"}], "*", 
          RowBox[{
           RowBox[{"nonzeroEinstein", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], " ", "]"}], "  ", "//", " ", 
       "Apart"}], " ", "//", " ", "Expand"}], "  ", ")"}], "\[Equal]", " ", 
    "0"}]}], "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq2", " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.8254616098607273`*^9, 3.82546181881036*^9}, 
   3.825461922886698*^9},
 CellLabel->"In[63]:=",ExpressionUUID->"01e3afa6-3bbc-4a29-abf8-cf14b88715ce"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["\[PartialD]", "2"], 
      RowBox[{"\[Psi]", "(", 
       RowBox[{"R", ",", "T"}], ")"}]}], 
     RowBox[{"\[PartialD]", 
      SuperscriptBox["R", "2"]}],
     MultilineFunction->None], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[PartialD]", "2"], 
      RowBox[{"\[Psi]", "(", 
       RowBox[{"R", ",", "T"}], ")"}]}], 
     RowBox[{"\[PartialD]", 
      SuperscriptBox["T", "2"]}],
     MultilineFunction->None], "+", 
    FractionBox[
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"R", ",", "T"}], ")"}]}], 
      RowBox[{"\[PartialD]", "R"}],
      MultilineFunction->None], "R"]}], "\[LongEqual]", "0"}], 
  TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.825461610657627*^9, 3.825461819261469*^9}, 
   3.825461922887032*^9, 3.8279439606683283`*^9},
 CellLabel->
  "Out[65]//TraditionalForm=",ExpressionUUID->"68d5d3d7-be68-43a3-ae11-\
7bad6b0dc8c7"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq3a", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3a", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"nonzeroEinstein", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         SuperscriptBox["\[Gamma]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"R", ",", "T"}], "]"}]}], "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], " ", "/.", " ", 
    RowBox[{"Rule", "\[Rule]", " ", "Equal"}]}]}], "   ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq3a", " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.825461533764393*^9, 3.825461557859779*^9}, {
   3.8254618254678087`*^9, 3.8254618368266487`*^9}, 3.825461922887203*^9},
 CellLabel->"In[66]:=",ExpressionUUID->"8784da7d-261b-4fe0-b86b-3ff78a94d123"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", 
     RowBox[{"\[Gamma]", "(", 
      RowBox[{"R", ",", "T"}], ")"}]}], 
    RowBox[{"\[PartialD]", "T"}],
    MultilineFunction->None], "\[LongEqual]", 
   RowBox[{"2", " ", "R", " ", 
    FractionBox[
     RowBox[{"\[PartialD]", 
      RowBox[{"\[Psi]", "(", 
       RowBox[{"R", ",", "T"}], ")"}]}], 
     RowBox[{"\[PartialD]", "R"}],
     MultilineFunction->None], " ", 
    FractionBox[
     RowBox[{"\[PartialD]", 
      RowBox[{"\[Psi]", "(", 
       RowBox[{"R", ",", "T"}], ")"}]}], 
     RowBox[{"\[PartialD]", "T"}],
     MultilineFunction->None]}]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.825461535317956*^9, 3.825461558113735*^9}, 
   3.825461837267799*^9, 3.82546192288748*^9, 3.8279439606981573`*^9},
 CellLabel->
  "Out[68]//TraditionalForm=",ExpressionUUID->"41d8df1c-fe46-4de1-bb59-\
db37b85bb87d"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq3b", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3b", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"nonzeroEinstein", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         SuperscriptBox["\[Gamma]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"R", ",", "T"}], "]"}]}], "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], " ", "/.", " ", 
    RowBox[{"Rule", "\[Rule]", " ", "Equal"}]}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq3b", " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.82546158841282*^9, 3.825461596980156*^9}, {
   3.825461842827737*^9, 3.825461853330367*^9}, 3.825461922887642*^9},
 CellLabel->"In[69]:=",ExpressionUUID->"b68757b2-2217-4405-8d0f-ee8b81a0d33e"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", 
     RowBox[{"\[Gamma]", "(", 
      RowBox[{"R", ",", "T"}], ")"}]}], 
    RowBox[{"\[PartialD]", "R"}],
    MultilineFunction->None], "\[LongEqual]", 
   RowBox[{"R", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], ")"}], "2"]}], ")"}]}]}], 
  TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{3.8254615978375387`*^9, 3.8254618538633833`*^9, 
  3.82546192288791*^9, 3.827943960758854*^9},
 CellLabel->
  "Out[71]//TraditionalForm=",ExpressionUUID->"ff25d424-4274-4985-8743-\
bd7b15349592"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq3", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"eq3a", " ", ",", "\[IndentingNewLine]", "eq3b"}], 
    "\[IndentingNewLine]", "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3", " ", "//", " ", "TableForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.825461948154889*^9, 3.825461976928235*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"c60045ec-8672-49e2-9807-56d9d2ad410f"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], "\[LongEqual]", 
        RowBox[{"2", " ", "R", " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], "\[LongEqual]", 
        RowBox[{"R", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], ")"}], "2"]}], ")"}]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.825461966266095*^9, 3.825461976928664*^9}, 
   3.827943960787938*^9},
 CellLabel->
  "Out[74]//TraditionalForm=",ExpressionUUID->"4e756ba6-dfd9-4874-98e0-\
debd5cc7e682"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Solution of Vacuum Field Equations For Metric 3 Using Separation of Variables \
and Including Plots\
\>", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.827921392329904*^9, 3.8279214362326403`*^9}, {
  3.827943637373761*^9, 3.827943657700137*^9}, {3.82794386685361*^9, 
  3.827943870092927*^9}},ExpressionUUID->"658d25f4-3452-4b31-bb16-\
f73f8017618c"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "vacuumEquations", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vacuumEquations", " ", "=", "  ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{"eq2", ",", "eq3a", ",", "eq3b"}], "\[IndentingNewLine]", "}"}]}],
   " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vacuumEquations", "//", " ", "TableForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.827920961741544*^9, 3.8279210391547213`*^9}, 
   3.827921407281905*^9, {3.827942528500132*^9, 3.8279425482823133`*^9}, 
   3.827942650973143*^9, 3.8279436577003727`*^9, {3.827943894357924*^9, 
   3.82794389902917*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"c4e0191a-81a1-42fe-a7d2-75628c777e11"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["R", "2"]}],
          MultilineFunction->None], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["T", "2"]}],
          MultilineFunction->None], "+", 
         FractionBox[
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], "R"]}], "\[LongEqual]", "0"}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], "\[LongEqual]", 
        RowBox[{"2", " ", "R", " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], "\[LongEqual]", 
        RowBox[{"R", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], ")"}], "2"]}], ")"}]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.827921065621176*^9, 3.827921407282098*^9, 
  3.827942880634273*^9, 3.8279436577004766`*^9, 3.8279439609673243`*^9},
 CellLabel->
  "Out[78]//TraditionalForm=",ExpressionUUID->"b264722a-9ea5-442a-a109-\
3e127c8813d5"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "psiReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{"psiReplace", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[Psi]", "[", 
    RowBox[{"R", ",", "T"}], "]"}], "\[Rule]", " ", 
   RowBox[{
    RowBox[{"f", "[", "R", "]"}], " ", 
    RowBox[{"g", "[", "T", "]"}]}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.825412706274982*^9, 3.825412750387109*^9}, 
   3.825413315971154*^9, 3.8254141934242373`*^9, {3.827921101908229*^9, 
   3.827921103866809*^9}, 3.8279214072822313`*^9, {3.82794255858971*^9, 
   3.8279425820580883`*^9}, {3.827943151539765*^9, 3.827943153386166*^9}, {
   3.827943379267694*^9, 3.827943389750992*^9}, 3.827943657700636*^9, {
   3.8279440017629232`*^9, 3.82794401692872*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"e6f7b808-6e71-4c01-a87a-bcaf54c56be6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"R", ",", "T"}], "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{"f", "[", "R", "]"}], " ", 
   RowBox[{"g", "[", "T", "]"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.8254127508483543`*^9, 3.8254133159715633`*^9, 3.825414193424425*^9, 
   3.827827047403206*^9, 3.827920157295438*^9, 3.827921111955909*^9, 
   3.8279214072823763`*^9, 3.827942880671772*^9, 3.827943154272378*^9, 
   3.8279434609370813`*^9, 3.8279436577007504`*^9, 3.827943960998288*^9, {
   3.827944005227058*^9, 3.827944017317567*^9}},
 CellLabel->
  "Out[112]=",ExpressionUUID->"6ce32bfa-9541-465a-a802-5f745ead1cd7"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "psiDerivatives", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psiDerivatives", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{"psiReplace", "  ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"D", "[", " ", 
      RowBox[{"psiReplace", ",", " ", "R"}], "]"}], "  ", ",", " ", "\n", 
     "       ", 
     RowBox[{"D", "[", " ", 
      RowBox[{"psiReplace", " ", ",", " ", 
       RowBox[{"{", 
        RowBox[{"R", ",", "2"}], "}"}]}], "]"}], "  ", ",", " ", "\n", 
     "       ", 
     RowBox[{"D", "[", " ", 
      RowBox[{"psiReplace", " ", ",", " ", 
       RowBox[{"{", 
        RowBox[{"T", ",", "2"}], "}"}]}], "]"}]}], " ", "\[IndentingNewLine]",
     "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psiDerivatives", "  ", "//", " ", "TableForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.825412766564385*^9, 3.825412782963142*^9}, 
   3.8254133159716873`*^9, 3.8254141934245443`*^9, {3.827920177372521*^9, 
   3.8279202277018843`*^9}, 3.8279214072825336`*^9, {3.827942584786292*^9, 
   3.827942616114748*^9}, {3.827943393907599*^9, 3.827943423606689*^9}, 
   3.8279436577009163`*^9, {3.82794400889848*^9, 3.827944010617445*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"ff803a79-bcfe-44b2-90ce-d890d22e6d93"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{"\[Psi]", "(", 
         RowBox[{"R", ",", "T"}], ")"}], "\[Rule]", 
        RowBox[{
         RowBox[{"f", "(", "R", ")"}], " ", 
         RowBox[{"g", "(", "T", ")"}]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], "\[Rule]", 
        RowBox[{
         RowBox[{"g", "(", "T", ")"}], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"f", "(", "R", ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], "\[Rule]", 
        RowBox[{
         RowBox[{"g", "(", "T", ")"}], " ", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"f", "(", "R", ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["R", "2"]}],
          MultilineFunction->None]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], "\[Rule]", 
        RowBox[{
         RowBox[{"f", "(", "R", ")"}], " ", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"g", "(", "T", ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["T", "2"]}],
          MultilineFunction->None]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.8279202191464977`*^9, 3.827920228632128*^9}, 
   3.827920781312194*^9, 3.827921114851995*^9, 3.82792140728267*^9, 
   3.827942880692836*^9, 3.827943157504965*^9, 3.827943463543189*^9, 
   3.827943657700982*^9, 3.827943961030016*^9, {3.827944011138204*^9, 
   3.827944019743332*^9}},
 CellLabel->
  "Out[115]//TraditionalForm=",ExpressionUUID->"77f9896a-0023-4f87-81d9-\
ccfb3c86bb4d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"vacuumEquations", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1"}], "]"}], "]"}], "/.", "psiDerivatives"}], " ", 
   ")"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "the", " ", "subtraction", " ", "just", " ", "moves", " ", "everything", 
    " ", "in", " ", "the", " ", "equation", " ", "over", " ", "to", " ", 
    "the", " ", "LHS"}], " ", "*)"}], " "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.825412752732791*^9, 3.825412762404532*^9}, {
   3.825412806547402*^9, 3.825412858147223*^9}, 3.825413315972768*^9, 
   3.825414193425153*^9, {3.8279202400152407`*^9, 3.8279202715739527`*^9}, {
   3.827921128875271*^9, 3.8279211292472563`*^9}, {3.8279211643886147`*^9, 
   3.8279212154409847`*^9}, 3.827921407282813*^9, {3.827942643258754*^9, 
   3.827942666413204*^9}, {3.8279427012345743`*^9, 3.827942702378598*^9}, {
   3.827943427004528*^9, 3.827943427510572*^9}, 3.827943657701119*^9},
 CellLabel->
  "In[116]:=",ExpressionUUID->"59446fb0-4bbc-44f3-a5b3-00fabaa254dd"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"g", "[", "T", "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", "\[Prime]",
      MultilineFunction->None], "[", "R", "]"}]}], "R"], "+", 
  RowBox[{
   RowBox[{"g", "[", "T", "]"}], " ", 
   RowBox[{
    SuperscriptBox["f", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "R", "]"}]}], "-", 
  RowBox[{
   RowBox[{"f", "[", "R", "]"}], " ", 
   RowBox[{
    SuperscriptBox["g", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "T", "]"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.825412758840003*^9, 3.825412762689143*^9}, {
   3.82541280862001*^9, 3.825412858963379*^9}, 3.825413315972866*^9, 
   3.825414193425218*^9, 3.827827047504136*^9, {3.827920243809523*^9, 
   3.827920254745767*^9}, 3.827921131400004*^9, {3.8279211653089647`*^9, 
   3.82792119368594*^9}, 3.82792140728295*^9, 3.827942880703382*^9, 
   3.827943161165738*^9, 3.827943466568276*^9, 3.827943657701209*^9, 
   3.827943961042323*^9, 3.827944024259267*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"a02a4d21-f5e9-4bdb-aef5-6a41049a341f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "sov", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"separation", " ", "of", " ", "variables"}], " ", "*)"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"sov", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"\[Psi]", "[", 
          RowBox[{"R", ",", "T"}], "]"}]], "/.", "psiReplace"}], ")"}], "*", 
      " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"vacuumEquations", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], "/.", " ", 
        "psiDerivatives"}], " ", ")"}]}], " ", "//", " ", "Expand"}], " ", "//",
     " ", "Apart"}], " ", "//", " ", "Expand", " "}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.8254128669720993`*^9, 3.825412915755105*^9}, {
   3.825413066694908*^9, 3.825413069534131*^9}, 3.825413315973387*^9, 
   3.8254141934255667`*^9, {3.8279202646712217`*^9, 3.827920285349825*^9}, {
   3.8279212241140413`*^9, 3.827921242889999*^9}, 3.827921407283106*^9, {
   3.8279426724116077`*^9, 3.8279426990906353`*^9}, {3.827943167251685*^9, 
   3.8279431832332087`*^9}, {3.8279434306997433`*^9, 3.8279434370468273`*^9}, 
   3.827943657701357*^9, {3.827944028321361*^9, 3.8279440290485992`*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"b44f7dbd-a7b6-4479-b76f-32a43ac5fbe8"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["f", "\[Prime]",
     MultilineFunction->None], "[", "R", "]"}], 
   RowBox[{"R", " ", 
    RowBox[{"f", "[", "R", "]"}]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["f", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "R", "]"}], 
   RowBox[{"f", "[", "R", "]"}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["g", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "T", "]"}], 
   RowBox[{"g", "[", "T", "]"}]]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.825412895596088*^9, 3.825412916723487*^9}, 
   3.825413070421996*^9, 3.825413315973586*^9, 3.825414193425667*^9, 
   3.827827047560388*^9, {3.827920278136441*^9, 3.827920285654067*^9}, 
   3.827921243244876*^9, 3.827921407283242*^9, 3.827942880724093*^9, {
   3.827943169662047*^9, 3.827943183442697*^9}, 3.827943469181529*^9, 
   3.827943657701445*^9, 3.8279439610747557`*^9, 3.8279440304373627`*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"84d8dbf2-81eb-41cd-8643-1c518df1ae85"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "fODE", "]"}], "\[IndentingNewLine]", 
 RowBox[{"fODE", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Select", "[", " ", 
    RowBox[{"sov", " ", ",", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"!", 
        RowBox[{"FreeQ", "[", 
         RowBox[{"#", ",", "R"}], "]"}]}], ")"}], "&"}]}], "]"}], " ", 
   "\[Equal]", " ", 
   RowBox[{"-", " ", 
    SuperscriptBox["\[Omega]", "2"]}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.825413025268491*^9, 3.825413049469462*^9}, {
   3.825413100925441*^9, 3.825413128885972*^9}, 3.825413315973723*^9, 
   3.82541419342579*^9, {3.827920295519658*^9, 3.8279202957099123`*^9}, 
   3.827921407283367*^9, {3.827942707635375*^9, 3.827942708682526*^9}, {
   3.82794323566756*^9, 3.8279432664899683`*^9}, 3.8279432976835413`*^9, 
   3.827943657701571*^9},
 CellLabel->
  "In[119]:=",ExpressionUUID->"3c2203c8-d087-4d76-b3e7-670e251e9817"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["f", "\[Prime]",
      MultilineFunction->None], "[", "R", "]"}], 
    RowBox[{"R", " ", 
     RowBox[{"f", "[", "R", "]"}]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["f", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "R", "]"}], 
    RowBox[{"f", "[", "R", "]"}]]}], "\[Equal]", 
  RowBox[{"-", 
   SuperscriptBox["\[Omega]", "2"]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.825413050363896*^9, 3.8254130725328627`*^9}, {
   3.825413105821751*^9, 3.825413129160074*^9}, 3.825413315973977*^9, 
   3.825414193425879*^9, 3.827827047595553*^9, {3.827920292934746*^9, 
   3.827920296432672*^9}, 3.8279212473714647`*^9, 3.827921407283502*^9, 
   3.827942880734736*^9, 3.8279431962676163`*^9, {3.8279432673768463`*^9, 
   3.8279432982999897`*^9}, 3.827943471565741*^9, 3.827943657701659*^9, 
   3.827943961088438*^9, 3.8279440346498947`*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"6ea2e523-b413-433a-9f9d-1eb05cb74142"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "fReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{"fReplace", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"DSolve", "[", " ", 
     RowBox[{"fODE", " ", ",", " ", 
      RowBox[{"f", "[", "R", "]"}], ",", "R"}], "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Fix", " ", "these", " ", "constants", " ", "later"}], " ", "*)"}],
   " "}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.825413142416278*^9, 3.825413215309819*^9}, 
   3.8254133159741364`*^9, {3.825413931790369*^9, 3.825413948188295*^9}, 
   3.8254141934260073`*^9, 3.82541536266064*^9, {3.825415641187039*^9, 
   3.82541564171554*^9}, 3.827921407283628*^9, {3.8279427114036007`*^9, 
   3.8279427142667513`*^9}, {3.827943225843668*^9, 3.8279432423219357`*^9}, {
   3.827943292435772*^9, 3.827943292602024*^9}, 3.827943657701787*^9},
 CellLabel->
  "In[121]:=",ExpressionUUID->"51d68246-4cfd-4cbb-a0df-391f950dd94c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "R", "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{
    RowBox[{"BesselJ", "[", 
     RowBox[{"0", ",", 
      RowBox[{"R", " ", "\[Omega]"}]}], "]"}], " ", 
    TemplateBox[{"1"},
     "C"]}], "+", 
   RowBox[{
    RowBox[{"BesselY", "[", 
     RowBox[{"0", ",", 
      RowBox[{"R", " ", "\[Omega]"}]}], "]"}], " ", 
    TemplateBox[{"2"},
     "C"]}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.825413939379508*^9, 3.82541394858248*^9}, 
   3.8254141934261017`*^9, 3.8254153634181843`*^9, 3.825415641974312*^9, 
   3.8278270476353407`*^9, 3.8279203015276937`*^9, 3.827921250023563*^9, 
   3.827921407283763*^9, 3.82794288077346*^9, 3.8279432271927423`*^9, {
   3.827943270315446*^9, 3.827943301118185*^9}, 3.827943473538048*^9, 
   3.827943657701872*^9, 3.827943961129208*^9, 3.8279440396596403`*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"507505a4-10b9-4c2a-958a-89f43b0d4ce4"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "gODE", "]"}], "\[IndentingNewLine]", 
 RowBox[{"gODE", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Select", "[", " ", 
    RowBox[{"sov", " ", ",", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"!", 
        RowBox[{"FreeQ", "[", 
         RowBox[{"#", ",", "T"}], "]"}]}], ")"}], "&"}]}], "]"}], " ", 
   "\[Equal]", " ", 
   SuperscriptBox["\[Omega]", "2"]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.8254131147261047`*^9, 3.825413138836771*^9}, 
   3.825413315974481*^9, 3.8254141934262342`*^9, 3.827920304711067*^9, 
   3.82792140728388*^9, {3.827942716891342*^9, 3.827942717554788*^9}, {
   3.827943244218913*^9, 3.8279432636906233`*^9}, 3.827943305851907*^9, 
   3.827943657701993*^9, {3.827944044929607*^9, 3.827944045809116*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"e9a756a4-0206-4a05-97e1-3ea83cb7caa2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["g", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "T", "]"}], 
    RowBox[{"g", "[", "T", "]"}]]}], "\[Equal]", 
  SuperscriptBox["\[Omega]", "2"]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.8254131176300173`*^9, 3.825413139222302*^9}, 
   3.8254133159747267`*^9, 3.825414193426375*^9, 3.827827047650991*^9, 
   3.827920305198897*^9, 3.8279212524220247`*^9, 3.827921407284013*^9, 
   3.827942880784375*^9, {3.827943260087674*^9, 3.827943264382143*^9}, 
   3.827943306280838*^9, 3.8279434753661537`*^9, 3.8279436577020817`*^9, 
   3.827943961144549*^9, 3.827944046598865*^9},
 CellLabel->
  "Out[124]=",ExpressionUUID->"6278f5a3-029b-42a8-9137-cb2367ad795b"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "gReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{"gReplace", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"DSolve", "[", " ", 
       RowBox[{"gODE", " ", ",", " ", 
        RowBox[{"g", "[", "T", "]"}], ",", "T"}], "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "  ", "/.", " ", 
    RowBox[{
     RowBox[{"C", "[", "1", "]"}], "\[Rule]", " ", 
     RowBox[{"C", "[", "3", "]"}]}]}], " ", "/.", " ", 
   RowBox[{
    RowBox[{"C", "[", "2", "]"}], "\[Rule]", " ", 
    RowBox[{"C", "[", "4", "]"}], " ", 
    RowBox[{"(*", " ", 
     RowBox[{"Fix", " ", "these", " ", "constants", " ", "later"}], " ", 
     "*)"}], " "}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.82541316824539*^9, 3.8254132265737867`*^9}, 
   3.8254133159748917`*^9, {3.8254138844063263`*^9, 3.8254138914518013`*^9}, 
   3.825414193426602*^9, {3.825415367770537*^9, 3.82541537696286*^9}, {
   3.825415633587708*^9, 3.825415634100494*^9}, 3.827921407284154*^9, {
   3.827942720899975*^9, 3.827942723602512*^9}, {3.827943248962739*^9, 
   3.827943258322061*^9}, 3.827943657702227*^9, {3.82794405097889*^9, 
   3.827944053609047*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"15cfc988-0ada-4e1a-b04d-411f12b51abb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "T", "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"3"},
     "C"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"T", " ", "\[Omega]"}], "]"}]}], "+", 
   RowBox[{
    TemplateBox[{"4"},
     "C"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"T", " ", "\[Omega]"}], "]"}]}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.827943319560709*^9, 3.827943477522936*^9, 
  3.8279436577023163`*^9, 3.8279439611846724`*^9, 3.8279440552381372`*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"0983c25b-cdcf-408d-b090-07c976e75628"],

Cell[BoxData[{
 RowBox[{"\[Psi]", "[", 
  RowBox[{"R", ",", "T"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"R", ",", "T"}], "]"}], "/.", " ", 
  "psiReplace"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]", "[", 
    RowBox[{"R", ",", "T"}], "]"}], "/.", " ", "psiReplace"}], " ", "/.", " ",
   "fReplace"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", 
      RowBox[{"R", ",", "T"}], "]"}], " ", "/.", " ", "psiReplace"}], " ", "/.",
     " ", "fReplace"}], " ", "/.", " ", "gReplace"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "psiSolution", "]"}], "\[IndentingNewLine]", 
 RowBox[{"psiSolution", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[Psi]", "[", 
    RowBox[{"R", ",", "T"}], "]"}], "\[Rule]", " ", 
   RowBox[{"(", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", 
        RowBox[{"R", ",", "T"}], "]"}], " ", "/.", " ", "psiReplace"}], " ", "/.",
       " ", "fReplace"}], " ", "/.", " ", "gReplace"}], "  ", ")"}], 
   " "}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.8254132293502197`*^9, 3.825413258133724*^9}, 
   3.825413315975254*^9, {3.825413377445665*^9, 3.8254133868450203`*^9}, {
   3.825413443220189*^9, 3.8254134527067423`*^9}, 3.8254141934270144`*^9, {
   3.8279203219031143`*^9, 3.8279203256777678`*^9}, {3.827921262403627*^9, 
   3.827921278625524*^9}, 3.82792140728445*^9, {3.8279427265554*^9, 
   3.827942770735528*^9}, {3.827943335615018*^9, 3.827943357437359*^9}, {
   3.82794344777201*^9, 3.827943452538888*^9}, 3.827943657702484*^9, {
   3.827944060386964*^9, 3.827944071697317*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"85b97414-7494-4c88-98c1-5b890a008c84"],

Cell[BoxData[
 RowBox[{"\[Psi]", "[", 
  RowBox[{"R", ",", "T"}], "]"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.825413232498124*^9, 3.8254132583547697`*^9}, 
   3.825413315975355*^9, 3.825413389009687*^9, 3.825413453263356*^9, 
   3.8254138987882977`*^9, 3.8254139540393248`*^9, 3.825414193427183*^9, 
   3.8254153804141912`*^9, 3.82541564616749*^9, 3.8278270477005043`*^9, 
   3.82792032620221*^9, {3.827921259136561*^9, 3.827921279191937*^9}, 
   3.827921407284536*^9, 3.8279428808231153`*^9, 3.827943358974313*^9, 
   3.827943657702593*^9, 3.827943961198539*^9, 3.827944072717128*^9},
 CellLabel->
  "Out[127]=",ExpressionUUID->"7dddbe15-cad4-4ea1-8d74-b1f29b344f07"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "R", "]"}], " ", 
  RowBox[{"g", "[", "T", "]"}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.825413232498124*^9, 3.8254132583547697`*^9}, 
   3.825413315975355*^9, 3.825413389009687*^9, 3.825413453263356*^9, 
   3.8254138987882977`*^9, 3.8254139540393248`*^9, 3.825414193427183*^9, 
   3.8254153804141912`*^9, 3.82541564616749*^9, 3.8278270477005043`*^9, 
   3.82792032620221*^9, {3.827921259136561*^9, 3.827921279191937*^9}, 
   3.827921407284536*^9, 3.8279428808231153`*^9, 3.827943358974313*^9, 
   3.827943657702593*^9, 3.827943961198539*^9, 3.827944072719606*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"f4f7a971-8a6e-41b5-99ab-60202b39c62b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"BesselJ", "[", 
      RowBox[{"0", ",", 
       RowBox[{"R", " ", "\[Omega]"}]}], "]"}], " ", 
     TemplateBox[{"1"},
      "C"]}], "+", 
    RowBox[{
     RowBox[{"BesselY", "[", 
      RowBox[{"0", ",", 
       RowBox[{"R", " ", "\[Omega]"}]}], "]"}], " ", 
     TemplateBox[{"2"},
      "C"]}]}], ")"}], " ", 
  RowBox[{"g", "[", "T", "]"}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.825413232498124*^9, 3.8254132583547697`*^9}, 
   3.825413315975355*^9, 3.825413389009687*^9, 3.825413453263356*^9, 
   3.8254138987882977`*^9, 3.8254139540393248`*^9, 3.825414193427183*^9, 
   3.8254153804141912`*^9, 3.82541564616749*^9, 3.8278270477005043`*^9, 
   3.82792032620221*^9, {3.827921259136561*^9, 3.827921279191937*^9}, 
   3.827921407284536*^9, 3.8279428808231153`*^9, 3.827943358974313*^9, 
   3.827943657702593*^9, 3.827943961198539*^9, 3.827944072721785*^9},
 CellLabel->
  "Out[129]=",ExpressionUUID->"0f1a5d33-9679-496f-ab72-537709a44a83"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"BesselJ", "[", 
      RowBox[{"0", ",", 
       RowBox[{"R", " ", "\[Omega]"}]}], "]"}], " ", 
     TemplateBox[{"1"},
      "C"]}], "+", 
    RowBox[{
     RowBox[{"BesselY", "[", 
      RowBox[{"0", ",", 
       RowBox[{"R", " ", "\[Omega]"}]}], "]"}], " ", 
     TemplateBox[{"2"},
      "C"]}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     TemplateBox[{"3"},
      "C"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"T", " ", "\[Omega]"}], "]"}]}], "+", 
    RowBox[{
     TemplateBox[{"4"},
      "C"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"T", " ", "\[Omega]"}], "]"}]}]}], ")"}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.825413232498124*^9, 3.8254132583547697`*^9}, 
   3.825413315975355*^9, 3.825413389009687*^9, 3.825413453263356*^9, 
   3.8254138987882977`*^9, 3.8254139540393248`*^9, 3.825414193427183*^9, 
   3.8254153804141912`*^9, 3.82541564616749*^9, 3.8278270477005043`*^9, 
   3.82792032620221*^9, {3.827921259136561*^9, 3.827921279191937*^9}, 
   3.827921407284536*^9, 3.8279428808231153`*^9, 3.827943358974313*^9, 
   3.827943657702593*^9, 3.827943961198539*^9, 3.827944072726302*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"c968a9f3-1b42-48bf-bc5a-f03f25892139"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"R", ",", "T"}], "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"BesselJ", "[", 
       RowBox[{"0", ",", 
        RowBox[{"R", " ", "\[Omega]"}]}], "]"}], " ", 
      TemplateBox[{"1"},
       "C"]}], "+", 
     RowBox[{
      RowBox[{"BesselY", "[", 
       RowBox[{"0", ",", 
        RowBox[{"R", " ", "\[Omega]"}]}], "]"}], " ", 
      TemplateBox[{"2"},
       "C"]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      TemplateBox[{"3"},
       "C"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"T", " ", "\[Omega]"}], "]"}]}], "+", 
     RowBox[{
      TemplateBox[{"4"},
       "C"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"T", " ", "\[Omega]"}], "]"}]}]}], ")"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.825413232498124*^9, 3.8254132583547697`*^9}, 
   3.825413315975355*^9, 3.825413389009687*^9, 3.825413453263356*^9, 
   3.8254138987882977`*^9, 3.8254139540393248`*^9, 3.825414193427183*^9, 
   3.8254153804141912`*^9, 3.82541564616749*^9, 3.8278270477005043`*^9, 
   3.82792032620221*^9, {3.827921259136561*^9, 3.827921279191937*^9}, 
   3.827921407284536*^9, 3.8279428808231153`*^9, 3.827943358974313*^9, 
   3.827943657702593*^9, 3.827943961198539*^9, 3.8279440727297363`*^9},
 CellLabel->
  "Out[132]=",ExpressionUUID->"37b0fe8e-2daf-470a-8017-806cf7198fcd"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "psiSolution1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"psiSolution1", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", 
      RowBox[{"R", ",", "T"}], "]"}], "\[Rule]", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Expand", "[", "psiSolution", "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], " ", "/.", " ", 
         RowBox[{
          RowBox[{"C", "[", "1", "]"}], "\[Rule]", " ", "A"}]}], "  ", "/.", 
        " ", 
        RowBox[{
         RowBox[{"C", "[", "4", "]"}], "\[Rule]", " ", "1"}]}], " ", ")"}], 
      " ", "+", 
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Expand", "[", "psiSolution", "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], " ", "/.", " ", 
         RowBox[{
          RowBox[{"C", "[", "2", "]"}], "\[Rule]", " ", "A"}]}], "  ", "/.", 
        " ", 
        RowBox[{
         RowBox[{"C", "[", "3", "]"}], "\[Rule]", " ", "1"}]}], " ", 
       ")"}]}]}], "  ", "/.", " ", 
    RowBox[{"A", "\[Rule]", " ", "1"}]}], "  ", "/.", " ", 
   RowBox[{"\[Omega]", "\[Rule]", " ", "1", " "}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.8279203496923943`*^9, 3.8279204343537893`*^9}, {
   3.827920474600013*^9, 3.827920518053524*^9}, {3.82792067036033*^9, 
   3.82792067463905*^9}, 3.827920781312446*^9, {3.827921284491097*^9, 
   3.8279212859211473`*^9}, 3.827921407285124*^9, {3.827942778116398*^9, 
   3.827942799195005*^9}, {3.827943486499897*^9, 3.827943572181735*^9}, 
   3.827943657703714*^9, {3.827944084509617*^9, 3.827944085625252*^9}, {
   3.8279442509381104`*^9, 3.8279442575051394`*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"f75463c2-f2a2-4951-a74e-d01ecb2c49a4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"R", ",", "T"}], "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{
    RowBox[{"BesselY", "[", 
     RowBox[{"0", ",", "R"}], "]"}], " ", 
    RowBox[{"Cos", "[", "T", "]"}]}], "+", 
   RowBox[{
    RowBox[{"BesselJ", "[", 
     RowBox[{"0", ",", "R"}], "]"}], " ", 
    RowBox[{"Sin", "[", "T", "]"}]}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.827943501652095*^9, 3.82794353088015*^9}, 
   3.827943573384959*^9, 3.827943657703805*^9, 3.8279439612606697`*^9, 
   3.827944087332983*^9, {3.827944245020158*^9, 3.827944257793984*^9}},
 CellLabel->
  "Out[149]=",ExpressionUUID->"fb506b66-9214-423c-8323-7ea0226b99cb"],

Cell[BoxData[
 RowBox[{"RevolutionPlot3D", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", " ", 
    RowBox[{
     RowBox[{"\[Psi]", "[", 
      RowBox[{"R", ",", "T"}], "]"}], " ", "/.", " ", "psiSolution1"}], " ", 
    "]"}], "  ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"R", ",", "0.1", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"T", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.827920524400783*^9, 3.827920559927422*^9}, 
   3.827920781312705*^9, {3.827921290593889*^9, 3.82792129216125*^9}, {
   3.8279213654349623`*^9, 3.827921367233612*^9}, 3.827921407285377*^9, {
   3.827942802667502*^9, 3.827942817498477*^9}, {3.827943518759141*^9, 
   3.827943526704852*^9}, 3.827943657703919*^9, {3.827944095802149*^9, 
   3.827944099209304*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"a32bb711-7a6c-4d43-b1b2-828d765d5f25"],

Cell[BoxData[
 Graphics3DBox[{{GraphicsComplex3DBox[CompressedData["
1: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
FsJxuHAhe68NtBWbpaiQU0K/Q8szvASimIAxW+VP8mOg63PTbfckDbT8Qbdx
WCSOuSkd/Hu3mtBI0imuX5r08Lh7zdtfd6Rwhvj1GdZ7uYjdt52gYpABMoj6
6mMZWaw1SNjaO1gLTK2sp1O9meCmO7tP+x15vOTWKPZ7rhREnphvesLMAqcM
11pwuwJ22uItS5nHqJHdO9cplxV2i7YK5soo4SidWWFitUo09WN8wPPFd9Dz
4NUuycsvCKokHN7UO0DMmcZmGoHrQJDGulNWbR6lbKbwpQ5+A9ZxAaU5PcTQ
yDIkM9h6B5Us7ka+ixkBOV1W50+50kBi1pWN3VYi3C13D77Y+QYCKThXXB8z
Qbuj5FeKy+Q46NxsMY96N5L+HKxWYMAO0ayhqisdHX6p2NlodxujHv21oAMm
Hkg7t/enPZ4R31eWcHvQ0AzAeraT0DI/LLU2LV1IZ8GnO65SeJTXAGYdJyp9
cyHo1pkRTl7Ijl8b3/J9uV+JZmO5c24UiUAOvaMrwvVcWO7VI8UR33pUOtFp
/oJXHNaVXJCB/bxYOEy2rPZUAXihFLrzPUgSqrP3Hsqs8+N1x+OPBMkagGMQ
eDs4Kw1jTAln1B8K4vtPq4xPnXyB1Lo2tI/OysG5cOk2AxJh/JBIttDwYx0K
ZehdezEgD7XrLH5ahIvgMCNLA13qNDThWGsZYV4ENkYuOuZ+iQBZ+gcNezsb
SFzrNxs56zbw2mIdj1dpBmZjLA8knEfADiVTlsOZYzAYLlxUMxgCzs9+kDXU
9wKPEs7037oM8HOgk02c+iTYH3l3If9LA7Jf+eLNMM0K6aYuvgjrnAe6rzTc
Gdy6kLmYpv7JYG5YnCZkX1HwF/BXc4onkBeAD7LO4f8xCcDF7qQ9DYJ18ECZ
vSxWqwO8aci+azwhBPnJmF8WntkCOTwRr9j2fcHLa9tXrueLQlPVcFnl+F3w
2Jir/VdWC4o8grr+QRLw6XWS+uzxAyD6IsDGki4PPXsdKpNgJg2HjMpzWOIJ
4AfjlbtqlPXA/3gnS46QHLzn+MCvS4MIUnOQsWr8KQMa12mOJnbkIe0jFcMX
48Tw6QTLLZOfFajou8Lasp0izHi1yno+hBRqcb1Gae2VSJX44sxegxI8lf1t
glr2GKx0bxrNp/sBUENgTMD3HKB/QsLwlGM+kBZ5Nb57qw0d/KfwsLF2GcT8
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
7J5Pdwbq/51b1kI8Ye+0A/ZOXzVx9k6fw15ZNeyVecJeWUTw/CaRdgkqWK+w
m/VTk3LX2k/KPyCEOTXJUpeaS4tp1gZ7QQO67n2yfF99KZoD3Im5wJ2wAO7E
/DPNkj++ytCTUTbRkZuNqNOOoSS5uEpkCfur47C/2rjn/+dRqC0/ndr7Rgor
UJdzIQaiVGmYaaLo3UYMizaXbdsmi+29S/PiJaVoWfoJnt7Nj4iZq/qTdH1t
vKcmSazqTzW6LU1ssuX3amSRcLZ1+z5dLBzrZfHZRJ32NA0ETBikEeMrnk0z
MXJ4Wpglcp9ZS3hvSfO5yzUTv61zqoXnGuHpPWWZGXPfksjCxwPCzwuRFH/h
1D9zhGiElu0dHSE+LM/D8PbOaiDuv3iuL4PnWhb80XzzOP7oRvBHP1nG8Uev
A3+0FvijK7W6Cp4+lKCpmx4+ZmXXogAu4+bR3rvo/ANhJQcDabrRcIng/Lti
mM/FJKMqug19MeT4ncfA77zrMcfvfBv8y2LXOf7lY+BfVua2M5BT0aa9rbb6
3fIsHL0wk1Ua9pQ4gE9Z8DnHp3ypkuNT7hot3vG1RZaG7RoUujDdghzX2/5w
s2xFW8s7SH6oIl17USt+W0QHYl/Qc90VW0D8wFMsU87xFEeDpzgHfMTqNRwf
sdAwx0ds+H2d3ISZHh3955S4S/jfiBG0bPY/STl56IYOnqsxpKda7d5ddP2A
6HnP0MqAUjKduituiYMx3Tc4rD2Z9BFlVC3K3LC+DFn84qXaC14qBPPwtTAP
D4J5uD3sX3XC/pUI8LeHwB/UvYrjD9oP/iDPpz7bHfIHyJgOY9LDgYGteBLZ
P9RaSENO7Ev1sEEy2uOkKjWfgZeHXY+88rmFbLwyNWynxE/NlH+v33fsJkp5
JSnkfOMVUYTvEWPwPaIOvkeE3wnKk5Ljp0I/zbKjr5ahAKmehOmJV6QDON7V
wPHOXsvhePvA3oIt7C3wwt6CDfCcrYDnLAg85zHgABcBB1i3hcMBpsBbkwbe
2gvgranJcXitucBr9QRe628wn4+H+fw34KSlAL/UiTv2//ildnc4/NJ/eaGx
ZRxeqC7wQlcDz/N34HnOAZ7nJuukUrWXgjic5Rf9YYQbh5yLn5z7rJo435uc
xMeZuO4S17rr8aLYz8blyB232d/BbP0ZuSg5/Kdvv+vPAkmc2NDI2BvbhByB
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
     "], {{
       {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
         GrayLevel[1], 3], 
        StyleBox[GraphicsGroup3DBox[
          TagBox[
           TagBox[{Polygon3DBox[CompressedData["
1:eJxFnXX4FsXXxvfZ3n0eBbuDRkTsQlExsEBRQFARFBW742d3YGEHYmIHqFjY
KNiFgR2oqNiNre/9+d7j9f4x187Ozs7O7s7OnHOf+5ztMOqAbfePoyhat46i
RNunsyjqXURR3oiiVXRgorYTVb5fHkVLqfx27f9P5ZO0naTyfdMoukEn3qD9
lVR+i7a3qHxP1V9S9W/V/nqqc5O2f6n8EJXPVpqs/fN1zU3LKBqh8w5V2bKq
f7fKN9P+h9q+q/qj1Pbl2l9S+2NUp4vqPKv88Sp7WtunVWc15e9U/k7lV2qq
f2rzcJUdpPrLqP5dOraq9u/Q9g7V2Vvls5Ru0/6Kqn+Y6h+m4/cp3auyv1Xn
fl13uvJTlB5U+RPaNpRO1HlfKk1V/liVP6btYzw/5R9V/lHl31J+itI07R+l
up8rPaj8Edp+pvSA8h/r3s/SdddTvdN0rR2U31X54XpWw5XfjXLV/UrpGdWf
qfLXlcYpralj99M3XWsN2lB6VuXbKw1Sfhcd30f3farSXOWX1T1uqfKdlT9V
1xqm/Cjlj1XbHVTnIbX1uPYvUsqUP1l9O6H0dd7Sfqr0hq41TvWXU/33uGcd
e03bROlSlf+g9A7PSueerHOP1vELVPa90isqf0T7M7WNaUvpKe6J56Y+D1Sf
tlbqwb0q7adjq2k7n651KO9O+eeVDlF+WhVFGyodpHO/13ZjpYOVn67tJkqH
KP+A+nCc+nCkrnmm7n0v5UerfFuV91A6VPnz1V53tT+Dd6p6z2v7vMo3VP4F
5V9Q/madN18rig7QNzFF5x2j/SN0fHv19VJtK8a0yv7VdQvlN1fZR9q+r3N3
UZ0zw7i9Vtf6RekT5a/Wtqeu+7HyE5RfQfnZyg9V/e0St3Or2jxd15utdjZS
Gy+q7EXlT1L+JeVfUv5cnfud0svaH6/tj0rvK3+mtl8rPaf8vA23oUccnaZz
Z2n/PeVPVf4D5d9Rfh3lH1b+YeWP1zUH6V7O1v4xKn+E96bytVSeqnxh7d+l
bam0jPK3qXyA8sc3/O1MUv/vUf5+vjUmE+Wf0cUnJv6mVlT9EyvX2U75rZQ/
QflX9I62Vv5E7kX1v0l8zsN6No8oPZB43G6uc+bT9l3VP1Fpmdzf5hSVPdnw
OZPCtR7X8aOU3s/8fW2hcxdI/H11VvmO2u7GOKk8F52jfEv5zsrvr2O3qO6V
3Lvav0v5f5XfSW3dp/QU81jqOYI87+rD0s/6QeYTpRdVr1L5LWrzc7W5fuz6
zCf3Je4z88mhqe+P72iQzrlT6X7mPZ17VOV5jbm5nfLdlF9H+XmU76L8WOXn
Vb4r8w7zntJMnT9E5f1VfpzK/1D7k5Se0zXmUR830fGr1f6aqhOrzoKMA513
vNLCueeQS3TsFNXfVNsVVWeE6rys7eZKRzJXqPxz1Z+qd/OathcobaxzL1X7
T+jY45HnlseYW5R/Xce31bln6dz5VWe7zOPtYuWn1p4/GdePJx7ba6n+rvru
jlRf3lL+S9X7VuUjVXdXtXM1z1D5Ucpf1fD7ua/hd7SLyndX+bXav55t6W95
ssq/V/6PyN/31MTlV6lsuo49q/wM1i+l/7FOqGyYzr+g4bliGnOF6sxiXte5
7ZT/W/npyn8Uyp9UfnHV76o+X8X8zhjSdkulBamnOk9pO1/kteBRxrby/XS8
m9IcHd9R26G67vkNzx9PJ55DJvC9KC2i/WeVnlFaWufOr7IDdA9jVGduw8co
H6Dy5ZS+Vht7Jn7/yzNmdM0f9FyXVZ3bUtfvofJu6vPVqn+29r9Xuldpsuqs
rX6+oHQ0Y0/bF5WOUX7XxHPAAqpzb+l5gf3hav9HtduB+Vn7yyp1VP7f2GN2
UeVH0MeG+/AAz7/peotre2hpOWK22nhP42RB3pHa/ED5hZRvqV7dsKxyi+o+
oHMOzPxs+c6aSvup/iyVLaw63+ieeit1VPl3tb8f+vGr2j9Cdbqpzlzl/6d8
V9Z9tbklYy/zM/s49nN7UtvxIZ/p+Lz0WedtzthXOk35F1Pf1xy185nSUoz3
yO+wb3iP+6tvn6vtJVX+qeq/pLweaXQ775D5TXUGq/xGXWtr1niVn6vy7sr/
UHsuYB5AJuqp7TKMZ7X9vNIKrC9q/3elvbXfR/16ofb75V3fmnrcfKvtp7ru
EjqXB0l7iyv7k+r2Ydxo/zPVmaE6BeugrrWXyn5S/ivWVdX5UfkXVX62Un8d
O1rtHJW4z1vp3OtU3kf5Gao7UOdU2v+i9PfMt/ys9q9R6t3wXEPZQKXLWFtZ
O1V+Fe8ltfxwicouVjqdd682hqndc5TfUH28QelynXuXOru5HuaxyneMvY6d
ybqTee45RvmD1caBift2lbbnqd5lyCSl5ynq3a5rDlH5V6p/lq7zReV3+rbq
76R68+vY90p7K/2q8le1PTd2335U3etqH9td6Wcd30dpM5Uvr/LDmUtVfnvs
/Doqj2s/357KX6z8DshXus7mGmcXqu8f6rqbKf2idhbT/tlKO0V+5+srfaH8
X+rz0SpfWfkrwjj9UvlnlD8rPOcjVfeIxO/rebW/uNofp3NOVNk5sa+7vtoZ
lli2WYN7V/pHx9ppv33DY/UT1XlB52XM80FmGEd/Kq/pJym/LGtT7fn0p8py
wokq76wG5tF72kNtdVL+KaXRyj9Xec06QXXm03ntlW7TuQto+436eqfyHZnP
lJ+k/IjK8znvvVb5x6W/T9bcUuky5Qttc6VLlB+k6yyi616ka62s93x6afn9
GB1fVPv9dc8b6PhnKr9W5WvpHvupbBOl3srv3fCY30n501W2p/afUt290R1U
vrPOfVltzdSx7rrWvNrfV3VWUL6d8vuzjvD8G36Pj6v/6yntp/zROm+LyuOT
ez6s4XHzh8p2U7pG+XYqH8W8q/y8yu+i/CjlO6j9ltrfnfej8t203T2yfL+r
8rspv6jq1IXX8cWVf1xpJLKgrnu8+r+G6i6o/HfK3638Ujr+hNLOqvNuFdZT
tfNOFdZf5X+vwvqrfC89v7t0/o2MU+VXUNoz9VrHvLyE2vmetVwDZl7WFN6j
UkPHd1ZaL8yN82g83qtzl1c/vlP9N1R/HtW/Q/uPqPwQ7T+v85Zoeh7bMbH8
om60rTmHZV53nmHuziz3skb8W3qdQj6bp+Fy8sjHjOFNVLBx6rV7ouo+rPYP
1oHltS2VltKxddW3j3TtH5AhE8vCTdYX9DLVbaE7oOsoncTYZq2uLQtvorJX
lU5pWE5aUO/iZOV30PEVlM7XuT9XloFPVn4b1XlT6ULVObAMckiQw7+qPWez
7vM98C28WllmOC/IdV/WXm+vZU3X+c+pfK/EcgDzwj0q20wdPlz93kLXeT33
XLpNkPGYM3/Vdjulc5HNqiC/KX+R+r5W5jqs21XltXsblbVXu/foGqPV9l3I
AOiZSleoPyMjj71bdf7Oyo9T2eVKYxKvL2ckngP35ftT+Z7hW+P4jg2P5XMS
j+dlda0XC+/zHSCz8C101nZCYvlwZ/VtcfXtDbXxA3OG2vwzct+vCv3fTXVG
KH2oOg9pe7jSy5nLd1X6QOV3xV57mNvb1Z7HmbdH6dhFKj888jHWpjHMgawh
Siujg+m6vfQsLlOb3VV2vc4/mrVefZ+odIHOmaryI5XeVp2Z2l7Y9Dt5TNsj
lN5U+TRtj1Gao/zLuu5Oyp/DeE3cBnL+vurnhYl125d1/NymZTf6Rf9/Y71W
2dimdesXaKNp3Xqd1PWo86bKLmp6DG6gNKlwu6+q7Pymx/gT2h6t9Fnoz6G6
rw1Up6PStci86s8/On6/0up6BstSlng8r6pzZit/ReI5lzWY9Zd5lOfGXLq8
rrEbOIbymdq+vXbfDozdzqnK99Z7uLT22opuh47H3DdA/TmIdZE5Svm/mHuZ
h5AtlZ5i7Gj/AL4F1cm1f0Lm+k1dc+XMaxB4DG0OZR4uLC8iK16UGYMAf1gP
HEvHjo+8Pl0W5BbwjJuUblT58MrzI3PjPmrjeuQYZAmVHau0QO616V7WJpV3
j133MuXvVtk9hZ/p3shUPENkmNjjnHkD3A387Sbl70GmCs9zsvLjlP898rrW
FT0E2SxxOf3cXW1ezviJfM7VyF7Ie6HNcQ1/O4s1fewmtXFzbZnnG2SexDLh
YB0/oTJ2hw6O/o6Ov21i7A/cby7PUGkDrqntL4Vl+AFqp6/KmNZ2SHx8/obx
Qs69WeU76hv6Wf14Us9+XXAIXW9fle+isoX4hpUfxHfBJKyyfVRvldRYx+lq
f9XUuMw6ifMfqHyMyldLjcn8rrSSUufI1/hZfesDDqf2GujAhdvmGv8qPz6z
TIM8s5rKn0LnLfwN8S1tqe145kHlz2XMq87qTeu+jP09Uut3PZteL1kr5yTe
XhJ5u1fIMyZbpdu6W9fZtzLGunzhewQnPST2+GBs8N7AZMeFcQi+xrw3jT7r
nLVT6xfcy/eR9YzBIT8oHEOGvy6MOfToQ2OPXcbt9WEcX6fydRM/w1mRsavV
le8TZMw1ld9I27vV9yWb1knJs3az1u6nY1tou6raGab2t1R+OdXZWs9qUtPY
D+sxdRdDPlf9gTxb1fkl83fNOeenLt8cPULPJ6ssbwxUm5um1h+fRt5rGl/c
VudeETCmbVRns9R6Ivos9dFhd0tcjs64k/IbKb9ow/PAn4X7fTa6WmWdi7Xo
mtrrEX3ZJvTzUPQh5Tfgu9O1NkwtJyC3MOaRXZAb+wXd/xBtPyqtO24cnuF3
zDM6qYuOjSgskyKb/sD4V/lk3Vehc1ZQX7bRdqvI8gnXQkb5XGVLq843fF+x
+7MqMpjOTdXmaqznyt/CnK/8msrfDB6n/CGJdTl0pa1jPwfkN+ZX5tl1G55L
+yu/ZsN4+4Pg7arzodo4Q6lXbn0LveurIP+/VHh9X0Jl7yXGKKaojc+ZG9XO
a+rX67WPTUcP5Z7RSVXvFeVX0rkrqp1FdW/vsr41fO7pQRfYqLRuvImuvx5r
p9pYEf0z8TfFdk7ID1Y7rxUe251U9qnSD//JbCo/TeWvsf7xLSEXqb3vmaxC
fz8L110bDF7111H+74b7vILyPWvrfcyXk1PrkOg+6JHkd+B7V/7V2nL7rmqj
Y+Z1jeNvhTpb6brLIecxj4Fpqd72Kn+ltv44FtkfWU7l17Mepe4338UWDefp
P/16OfTtC13nadXvGVmXBEdAfq4Sv1fWx2tT53m/jHXqoW8erPNeUn62rntg
yFN/B+R39XOY6n7NO1e6QeUPpn7u16v8GdUZ07RudGBq/A7Mc5va2P4B6KHK
L1x5fkDHfT707Umdt5jK11D5jjr/Pl37CmTUpnWoo1i7dO5Tyi8W2+aDTIrd
57mm8X/G26Da9oKDdHy08qdXttE8pPwq+gYeKKyHos+jy2+Anqj86qqzB9he
Zdx8hto8r2ls7GPkDOY/XesplZ3atC64CFh0bR1+P727N9D3I++j27OW3cO6
lNjewThknUCPvil1nvWin9rZQOk45j316UtkDJUvE8Yt9S8FA8ksDyylun+i
A6fWO7kWuufWtXXPfVR2GWOzMlZxRG08Ajn81Ibvh3u5L3Ue/eV3tXmH0nuF
25sV+g8e8onyRyl/ROF5jTmtxHbDnKnyBXVeXhkXK1T3MOZW3peO31h4fzi4
CN+76v+p6x6V+Xv/Tufe1jS+tbnK9wnzwAvgFSp/nPlI2+d0D08kxpCfqY3z
JurDTYXbHaZ6J3AdnfsjchkyKpiothOV7lS+jl2HNbG3yp6tjU1vp/J9te0S
GS8BN2F+PkjHb6ps05mi7ezS3wh4BHoXOtcZqnOm0ucqn602L0bfUL+ujj03
Msd+orJLlY7HlsN7Vloo9/w9p/QcPkH9uy7Mzd/q2VyPHBB5Xme9YW5/Xdvj
WcMi20ywnYwKfeBZoQd+qe04pVPU/rmpsU7KB6k/o5P/xwbJgw8OVvkeyi+l
4jjxc1hZ5d+qjeuUrsytz1MH/LBfw33YNKxlPCvwpYtqY1wnab89tpnMa9YS
4EzYLJDL1N6j2n+Q+SI2tohMspHKlmadaxhrpJxnsrvKT6lsE11U+b+ZB3Re
Q326Rc9nI9X5im+htC1zmursp7Sqzn8zsWzBev0pz7+yXfkz5a9QOht7JHKo
6oxXnTVU9pjOfUj798ZBzlf9OYzNynaMvcGfKtup/2l4vVyxYbnoyDBmboid
B4ubpzb2x/NB1p5YW97mGZ2ceK0HHwUn3Tqy/ZZ3OkT5lp7fdurfcUEuOCnU
x45DfTDVnbBpKN8buV3tT+DedF8bN3zeJqybietsqrK9dP2Va9uOkUGOCH3e
U2XnVbZ59w/30x/5SuUHKK2u/Se13R+5QvmG+lmrfxtHthud0bD+OylgpWOC
3oQuckZkrPu+yusIeOYQdIaGx9/PDWPU2AseqDzm5w969D7Y1iqv9dhAmBs4
j/kBPP/eyrJlH+yl4MM6tmRsO8aBKl8mtu0R3fNB1X+w8nd0n/KTK+sF6MIL
FLZXYj/4qWFbBjYm5hnkcGyHPyotwniObTM5QPm99Qwey8xnWF/tzMhtM+0U
G28Grx6Zedw9o/zluo+BWoNOVb2fuZfY/IMz9Uzmav9x5VdWfu3ENt+eqZ83
PIHllF8p8dr0PN+10o+J8Yr9YmNT6H2QPsB8Lqk87rn24rHXz/0j21WxqT6J
vK3zf4/Nh3iIdbG0DfPN2PgWPIfxamMj9fl09XkP3csjmTkDF6v9Dyvb+8+s
vHbSt/WV/lXqqzqb6pwtCo+PrUrbwjaPbOf5rGE98SWVdWh6bkOHQ5dDp9tX
15ma2eZ+g9o/sLad+8bK8zZ1sKffWlkXuEv5OyrbX5CPv24Yx3tcbdyWW/YG
A5xY+f0io3/VMMYIDjmp8jjEBojN79uG9bDeiccA+vxjSts1jLPdWdn+db0u
sqmez1VgMmE9ZY29Ablb5dfkli3+VOqu+v20vxnyZ8My0B8N26cerSwD/B3m
FeYXsIuHwEh1bG3l10Smzf3N/YENR2kDlfdtMHl7PrwGvVz7PSLPs3BSHozM
Sbgut04H/+HmyjYsbJ2fNsxVQOdD90N3/kzPeKj685v2l42Na/4vMiaI/a9T
ZJ3qu4YxWGy/k4P9d4C2R+tatyvfHRk9sQx2pK55dGnM+X/M5aUx8LdK46Fg
oV1j22ZPiayjrhC7/Ea10yW2bg5WBGYE7gQHaPXYNs09gkyFnHWI2j+iNI79
gbbvYb9R/pIg36NbwGFaWefepvJ9KtsosTt0i21PQEforPzYhrGgrXVPbyid
p/33K9sH0T+2U1nfzLYScHawHnAe5ljWSPRlZGE4B8jD8BuezI19XqF2LizN
xxgCTgUmq/zg0jb6bZQ/uTJv5xbuXfmLSvORWIf6xsaBN1E+Zl6PjG/tGmwG
76OPVOY8vIMtrLJONF39Pb+w3Piuyt+svA6uDkZX2FbxHna9ynL4GbqXMalt
Cs0iyB6xMdmesTHqITq3v45d2rD811D56iq/Ss/pC+RpHR+l6z6Q2Ua/mfaH
5rbnvRebe/Rmw3PL+NIcjAvR4ZQG6HqXI9vW5vT8Af5cmie2mMqu1bHpkeej
txvmIK2Qeu2CM3Nu5XWONe5s5c+pzIMZpr7ck/l5jkX2r833Wgw7Gt+J2lg+
tUwBNwzuwxm5+Q8LF8ZwDsDGlrntqSq/TWW3VbZrX6373kTzwCW5cft+yl+u
/FWVZQvkiivBTlQ+VuVHpLaNvorcqL5s1/TaQBnfIjbTHrreeG3PUfsroqMn
5gshH8N7ekXly8XmRJwdBf6Fyl9WfnmVX6H8WOYKtf210mW67kpqZ63EXC9k
qXcbnuffic3xep1nru2jsflhu+p+H8zMX2JM7lubz7QW+ivYcuxrbhz7un/p
Grur/W3RJ3TepNzr6kc6N0Gnizw3x2F+Zj5Ow5w8S9tG5fUXPP333NjRwbrm
Ak3bmcDTb82N58CV+Q39TPnrtR1feL3BBnBjblv8Q5X1UMbnV7SN7qn8r7kx
HPDLV1X/ZuQD1Z+bG+fsH5t79If2O6j87sr8IubwzyrzdpjnsVU9n3mtY60o
w3oBlnVqba7ESDA6HR+k8kL5IcoPVv7LhvuIjX5VjaV1wUjVp10K62DoX/Pp
+o+AMateGRs/2C4yF5A1Chly/sp2HGzHyNvgxMjVAxuWO5E55zRsM8Ne9nBl
XZg55OvK+jj62q86eG9urOCLhm3G2Iu30na9huX8eVTwcG4Zvp22hfq5rfIT
dN0BrMeRcSbwJt4Rslu7IL+BaYGjsW5vhl2h8lpWqo249HPqV5ovhFwRq/0H
gpybBh1zR8al+nmLyhcK62Mzd/9u1xjp37J+VeXGzXkW+wbdD33nR9W/W8dW
aRh7BFcBX0nBEhvGf5CjkbmRpXkAU5Q2bFgPzQrPwUlsHYn1GjyzUXj9Z01e
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
wUvDuXwX/wcEOqqA
              "]], Polygon3DBox[CompressedData["
1:eJw1nHngFeMbxWfm3pk7c+cbEVnTopWiRJGiKFREC6K0l1DKLpEtCdm3bCkV
ZSdbslTIvq+R7GlRKWTJ8juf77m/P+b7nWfeZebO8r7Pc8553vpDxvQ6NQqC
4M84CIr6/3tZ+3kQLCvJ1oHuWRDsVBUE7yRBcEEYBE1Ufoi2LQpB0JV2Kj9O
5atV/zR1dJH6+Uf7R6jtgSrvngZBPfV3jOxDZB+msve1faf2k9TfwSovq787
1HYPlU9W+29VPlB2b9m7aX+jtlZq/6XqX6Xygtr0ld1f5ZvVto76P1x2pj6v
0/WM1LEW2n9M5f1U/xS136T+FsteIPs42UtlfyS7nfaP17ZcdqL+T9D+Em1v
qX0L2TNVv6/sj1U+VfWv0bne1vaejp0je5DOV0+//3PdnztV/0zV/0Nlh+h6
6qn8PpWfputpq/7ek32c7F1U/zPVv1n1u+v/tqrPQ5ig8i1Ut562d2SPk/2T
fmsD2R/J3iR7oNrXVfulaneH2v8uu6/sVepjjOocqvp/6/pKsgfIPk/X86f2
u+p6Wqr93eqricoHyh6j9tvJ3lXbJ6r7hOy56i+TPVX2d6rfTHZ91T9W9Y9V
+TSVNZY9QPZo2Ytlv6SttX7fItUfTH1dzxe6vrtU/rLKXtG2t8pfV/kUXc+/
up5ean+C7INVbxvZo3W+s2Wv1/Vvo/q3qu2fsssqn6Py89R+rexbde7vtNVU
vdPUx1r9r1X2u/S7ys+SvafKR6vsDtm91HaUtr/U/4eqU9T17av6gfrbUf/W
qN6HuqZtVcbhx/RnD7UfpeOzdewc3k/9njrq42z18ZDqruHZa/9h1X9K9laq
c4bqL5F9qa53gcqfUv+h2v+k49+rTmPt76Dy63X+vdT/6Tq+UMfuUtmxfBPq
7wqVhzp//yq/Q1dyPtk7qH571T9SfSZq/6vsL9Sujtqfr3M/ozoPqOyewNfb
UuWnqv5dsh+Q/SzvrOpvqfo11H5/1S+ofhOVbym7veyi7GayX+BZqf5Zav+a
6if6PYmu5QRdS7vK/U11fTvr2Fk61lR2M21nav9mlddWfweqj5L620f2+err
JW1jVX932an2d9d2ovrfVXVW6v8HurZaOpe6CbZX+45qn6qsLfdTZV+pbT/1
30X2OlXaXu33V7s/ZJ+nutvJbid7o+w+ar9nlb+pa9TnVNknq86e6m+Bymdo
/x7ayB4p+3L11yr3u/So7ANU/0iVb6/y0ZSr7FVt5/F9yf6a9032Pqr/A89f
9iLZX+o66+t8F2h/qbYasg9V+dHqr46u52Pdx2tDP79tVN5G7eurvJXOdRLv
nM43T/YqHf9ObRvybTK+qN2OOvcZ+v038j2q7hHaaqv+CO4Pz1f247IflL2L
9vfR+fqozWK12Ubt99L+1dpfr/IhOv9TqnO/6k+THcluK/s/lW8v+0z1t6Ou
r4Ou43bZB6m8p8p3VP3TZD/Ke6Q6Y1X+tOw7VXaXtm1UPlD2MJXtrnNuqXOe
yDutvr7SVlfthgV+X3NdX12Vn6vyx2S/oPKPVb6dfvME2fPV34Pqb5bq76nz
Hyp7S9k9Zc9U3XXahqn+O7JvpK22C9TfFH6Pji/Xfqzr21f2D8xHup7eOtdO
shuo7CdtzVT+HM9Lff+i9jcyZ+kcrXO//89q/1n6U/n72j6XfZLqV+l6rpY9
WnZjle+k691ZWx/1XyfwdW1QX3sUfX21c7+fh6n+KN4flW/W9fRU/dqyR1fG
z+dV/q76r6n9rbSdzNit8sbqa722FurvDZVvofNfo/JTVb+pyjeov//U3zGq
30j2fnwL2hbRn+wfVXeltj9kf8D51f5oxmf1ebjavKr2e2j/Cu1/q/LvVfcH
bZtU/yW+B5W9xvgku73OP059L9T2Ssm/F79hhvbHqnyN7GWy/9L1HMW7J/tb
XfciHVuh/a21naZ7db76P1z1b5W9MfPvfUD1f+X9LXl8baR2D+l843Wuxdqm
69huKp8X+/mdr/rPyz5C7R9Q+zvV38Wyf5F9B+dTnVNU55nY9+9i7b+p8t4q
v1D1e6r+bbITxio27r3si3R9l8o+WuVzZQ/gXdO2nHlC288qf1zlcwr+PvaV
fWXqb7et/r+i7SDd3x90ztqqv3XJ17K99ieEnp+vV/vz1f4gtXlR1/eL7tdh
ur4vZH+l8stVPlTltWT/i/8l+zmVR2r/r8ovkz1Q5Tn+hq7tG223lXzNC9Xf
r+qvq+p/qfb7q/25+Gwq2yD7KLV/T/ansrvLXsJ4r+tdrPYv6tgY2a+WvY+/
dZaOv4H/I/sw/Bf1v45nod/zouynGatkX8i7xPNQ/+/gr1Tqz9W17av++6ve
K7L30fVsL/tlXeNg9X+2yhdom6Y+tlV5TXxD9iv+SWvV3071X1L9QbJPrfgT
L6j/z/EHtb9e7e9Wm5N17Cbtf6rtwpLHy+103sHaX6nr6yv7D9ktZV8le7Xs
9tp/GZ9PbXdSf2t1vqnq83LZ/WT3kH2M7LqyL1H9EbJbVnlMvgf/AN9V2xUq
P1nlY/T7t5b9sPqfLPtwvjfZu6j8ItnFkuezVL/vYLVvlNufukrlg/GXK+Pp
lbJPUfnjKhus8+2i6x6q8i7qr7fKd1b5GbIb6b60Zq6L/HzvU9kGtXlUx25V
nR6V+e4a6qu/y9TPMfi3qn+E6h+i/Xe1fa3yc1XeX9c/Querr//DVKeN+n9A
5dcV/H32kr0d37vKLpP9Ce+Sti8ZH2VP1PUNl72b7Ptlz9G1tFV/vWPPF7eW
fX+Hq/0psq9S+ZvaHsGfwD8o2f+v0v3pHXp+25Lr0bHxapPp/K0Y67X/E/6U
2n6g7Xwdmxh43v1G+1nR8+/VKntL2/iS/cvDmZeIKSL7mP8QTxADyG6t8mtV
911tj+nYBbI3JR4rN+v3bK36H+Hf61gP1ddlBRfLjlR+nOyOfG/4aoxZqv++
7KG6HwPxuWXfLXt37TfXtg5/V/0dq/J+shsSuzDfqq8h2lap/DiVN1ZZR+Ih
bT9Gjr0GVb5JYrDP8O91PUeqbAu+L+0PV9la2b/wvWv/M22/qe7L6m+Jzjdb
fVwv+zeVX6L6bVV+A0GgyoerfLDKm6p8hg71lf2I7Jmyb+D69DxOl32A7Lqy
Y+1vxB/iHeEeqP4OujGvq99T1d+Fqr9MdX5S/dk8b9nfMufKfkL2SLX7VNuv
shdzfrVrI/t69bWZcvXXSv3tpGOzVH6i7Aayl6veTJ4f44n6mx/Z334hdrx4
mezP8Q9Ub1/Ggsr4eYXO/7Xq/6zzPY4/q/KnVf6o7H8Zj1XWRr/n7Mp8u0vm
8ZpYqmclXmupc1wY2L/cW/sj1H5D5DHiVtX/Qe2P1vH5qrNc9vf0p3bPqP5z
ZccvF8p+QfZ+Kl+We5xifBql8h9lX63yt1V+p/ZXaOur8hdUfrfqr5R9vOyF
vH/EAtpq810zPpTtf9bCJ1D7ffW/UWzfdbzsPbTfVsfGEY8Qw+jaO8q+KPSY
spfKj5R9Xegxa6HO96X62zbxeHih9j/XthX1AscHRe3vr/3DVL5a9/czlac6
1onvrWz/bw/VG6vye9TfT7IHqfwNlW9W/TXEo7Jfk/0CfqHqzg/tg30i+0zZ
82Rv5J2JfS+Y+5/XsUnM7YljKWLQycRNiZ/dPrInEjvKfjZ0DHApvrTsx0P7
3JfLnpQ41iFGvUfXslbbEJ3jLd4HxgFiOpUvUPl9sguyu4SOUabr96zKjTOA
L3wle7XsiaqzhPFW9rfgEyp/gOdV9ny9BL9N9vGqt7/2rwmMHzyr/k/Tsce0
/2TB420blU9S+U28L9o/TMemaL8Bz0/2UbFj0Yd17BCd72v1X1/HTtSxA2Uv
l72T7EH4s8TyuoZLVHdHveO/qfyD1PvE4L/Kfk/2DrJHMSbknr/wXfBhirI3
4QPj+8r+Ff9SdnP6ll1W+R+yb8KXk92XWDN33fr6Pf1lZ7nLGhUce27QFhYd
gxKbricQLzpG7c3cofrzZDfQdY3U9qHKlzFf46MQ25WNXawt+P7+qTrruHfa
vin7m+db3yB7I99XZl+Scy7n/eScBbchFmtZdl3ejxvwD2KPlfjwjNUlXU+d
osds4tnjGU8DH1uvvheDYRQd//yjsqPKxko49nfZ8SVzey3ZB2n/L20J945r
UPuFqctGqP2/Zcdf+EL4RK/revZT+SfEzar/luz9+eZkfyb7ONWNdU07c78K
xsc6lR27c44OjL1lP6tY5f9pv0/ZvsF2OrZB538t9f5JOn+vsn1afFnu9wGy
f+OZyk4KjvXBDMEKifn/ZKzPHHsRgx0DllH2PnHZJu2vVvnegfvopGt9Xf2f
K/ubyvuB/9ZT7/iNuqb5sb9FfPc3ZW+lPnZN/T6cKftG9XW46t9FnCF7isq6
y75T9lNq83rZ8dB5sr9R+Wuy95U9TvZX4CEl+zqP8bxkH6CyLtqmyN4k+42y
5/PxxOWyO2u/q7ZbZe+p+7NA11lX7R+R3ZXxUddTQ795dx1boGP/Jo4P79f+
bqHjmNqypxf9Dm4i7pU9Q3ZblfcjrpL9kOz9Qs974Cvzi57/PmA8l/2k7Imy
f5bdQvbzst8PjSs2kf100fhiL13rcPxVHZurYy2IRbXdov1bVN5R+4dou072
P7ILuv7nc+NW4FWh7Ody4xLgEW+WHf8t1XXvoPrn5cY/fgXPCfx+gfesVHkz
/OPc8f26ouPvs/V7aiSeS4npry07vluh+k117CKdr5vsqUWP+fsRi+DTq3x7
4pHceNb3RceXu4MPyL6BsYY5TfYrsgux38Ezdb6/td9RZbnO9ya+d+Jn9Qnj
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
              "]], 
             Polygon3DBox[CompressedData["
1:eJwt1nucV3Mex/EzaS6/maQU7U1UdFGLbvahsKhNWUpFa7ZHtiGT0sxUUtpM
d3LpTjfTTTczU6q1Cg/saOnyUMQjCcvax9Iq2drSRB672ufncfzxfpzzfp33
53s553u+5zS7q6xfaZ0kSSoom6YUJElhXpI0ALfnJMmFNAnrhxVgr/PnUzl2
M5aH1fCNaAb210ySNMZ28ZfSUP7u/CRpc5a2c51jL2HDZSfo8L91k+TbrCQp
xv6uvdXG0BMvktuCvYiN5zfxJ+U2Ypuw+7Eq7GusOXah9urEePTRHzvjvIpG
yu2ms7ExMtOM5VfGd1DtDnwgNhVbrG4h7TKeP2jvE7VLjaWbTGHcA5lRsmv5
G6iv+QzBymVH56RzizneGTnsPmwy1hJ7jn9Oe6PVVeJHjKWb3AV4PX6MXIFc
T6wD9nNsHNYAK8YewcZjU7G2WKFxvERdtHkVdTXO22QOOJ/tvKt+bpa/m39E
rk1O+jziuaznG8r2Ms/T2ltBE/SxW3aJunl8L31kYQkddPgYvxyvVFcpV8av
0d6/zGMz9gI2FluPHcMW6aM9leuvhbpJeGe5TtRfe41lm2Kz+Jm0EbsVm4g9
yI+jldiNWBm2ja/Rx5P8zlhr2r2Ln66PVnx9fRRjA7FpWPN4ttQQe1Ptm/hC
tW/F2sV+z0+Vu4ivF2sS649Nxppg+VgRVtf8z6JTxtID74Rfrb2/yM7XXkts
uPk+pG4rXhv3Azvk2lZ1o/Fnnf+Gqt3TS7BXf3xedbE7tVdPpoCWqf0J/xXl
8Nk0BzufP0y7tb831qS6d/XR1Pg2y/SP9Sb3hcxB+o/cG3IL5D7n75Xrgr2G
zcM6BpOfEvdE/bh4jnSV3ArsGexp/gTdiC3HVmKL+TZqp2MLsWXY7Hje1B1b
hC3H5vKt5aZhm/gj+r7SfMv1/Qm+TG4FvlDuOPWQ+8wcqrHhru+nY+7VGrk1
2HKZdtgMubXYWmwlVks3YVvUluljGL9VrkrtFpmJUa/fSx3b0otYH8ebsE6O
nalG7RK1j6mtUftKvKtyfbHH5ZYb82Z8h9xO6ux6EbYNe0dmf8yF36e+mbHc
x89U34HfTU1iv1S3jV5XUyhbo90n1L6CvYw1p1c9j9bq3lK/WCbfscj7mYW9
G2s6xowfkl3Hb8Uvc7ycHtXHYW0VY6NkvlT3AzbCtRfiXXBsQcOwarnSeL5y
7anCfEa69iGt4otz077myzUzxgbmUIWVy83Chql9UO5bfZRgVdGW2u+jP7m+
1Bm7siC9lwNkz3X9jLbuwUr5f6jNNd8J/JexH6j9X6xB18Zjn2N9sNPYR9g4
7J9Yb+w7bD+2CntGuz2xb7CltBpbjfXCTvLL6I/YF2pvxb7nP1U7my6gX8QR
G2wsS+WeUttN7ig2k+ZjtWpLsMbm1R0bwt+PV2ane1PsUQ/zRzPp/hP7UGu5
ddjAWB/YHXFP6HmsOC99H/Mcc2Ovxo5n0mfTUKaT2vH4n/H6jmfH+tLHo/wx
uaFy58j9Uq6IH5Sffl/iOzMo3hO+RHaRsbWjo/IL4j3VziTnF8uNlXsMG5qX
7oWxJ14WezG2PZOu2Vi7HekpbB/WEjvA9437z4/E12j/emrt2pOxTvEWzt+P
95LmYDuxn2F7Yn+hudiu+L5hb/NdaR62J77f2Hv8DfENwDZh//ZsqvkD8b2N
PYgm81/RNfJj+fVyh+XWYXvlhpvXDvra9TaxZp0/IFctd0hurdzbckuwpbH2
sQXYdBrNP4v3dp9uocXu/Ua+Av9A7rV4V2kAdju1wz/iT3kGg+M7mJ/uP7EP
DdReEntffvo+lmDv6XcD9aZbqERmg3Ybyc2VGxP7ntxR1854T5K4H/Evw//A
N5a7Vi5HblTs9fhvM+l7He/y89i1ak7JnnCtg9rjjrV8E7kRsS/yWdnpntwA
26N2r9qd8Z3Bx2KDsVZYD7409nfz3BDvl8wq+rXaSn4WXiv3IdaHKuK/R+0V
2O/UPqH2NP8dfep6Ft3hXjwkNyHWUU76rxf/fK0cr4n/SmO+2rElnxtrXj8P
OD9hDk1dm8gPzku/u/H9PS/WGv80/nD8W9F1+piLVWAz+Ev0OxnrmEn/seK/
qlHsAa4NwMpiP4n+aY6x3I4VyjWXm6i2t1wh9jF2CNuH3YZdFOuW6jvPqO2m
9l7+b3JH5N6XGxL/E1gXrA5Whn0mex3WNufHfSjeV+cXY93l6skVxN4ZazKT
/lPGe94dG4G1x66gnzo/F+un30H8B5n0fYz3ckDsJer+ZG7f6PONuIdypbGn
xX3NSf9t4x/3ZPz75Kf/tCdlt+Mt4ttBdV2rn51+N/8PORiNlw==
              "]], 
             Polygon3DBox[{{2955, 2154, 2153, 2954, 1584, 1585}, {2325, 2923, 
              1404, 1279, 1278, 1523}, {2441, 2440, 1659, 1357, 1358, 1660}, {
              2315, 2920, 1399, 1270, 1269, 1506}}]},
            Annotation[#, "Charting`Private`Tag$10356#1"]& ],
           Annotation[#, "Charting`Private`Tag$10370#1"]& ]],
         Lighting->{{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
       {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwl0s1LVGEYhvHH0tRSE1cSUQStIm0XlZpouGmKzHZjEkRfY6m4KG1RkiFa
tjaCWkSU/0DSToSxTcvMJj8mizCCKFtYRCX4OwQz3Nd1n+d9z7xnzq6zPW3d
BREx5ZvfEJHwtCwBTSURlbxhY0Qz3on36o/gWvzKXB1flg18e2nEcX4MX91s
zrp2fA234DPWdfI+MyvWdPPrfAaP6Hr4CE+Z7cX38U1rT/BneND+E+ZWzU/w
3a7lcFb3W07rHpuZ5f/4DJ+Xb/hfeb4I6xZxTneBz/I5fBG/xQs4J+8WRxxw
33f4kmtzclR3UJfh87xTLshDust4EV+ReVmney+7+JK8Z2297gN+sskzc58/
/GPyvGXKbxp35te8v1C6/oBnk/vyw66P8uf8Dt/PB/hTPszzzr1PN8YzPM3H
7DHM92yJOKcb4v28mQ/xavNd9sjobvMq3sHT/BYv5a08xU/yo9bX4wE8af81
XsNv8Bf8F9+RvAf2b9Ft4y+dbasuK7/zH/oK3sFXcDn+JsvkaZ2l8ZX7a+OR
Z9aus3V80fkp8VCX1n3mMJalxxmV9v6EPe6owIXJ+0nKsPH4abgxORNfci6f
OKWbAkUF/9/9df31ZAw=
         "]]}, {}, {}, 
       {GrayLevel[0.2], 
        Line3DBox[{270, 228, 2695, 867, 287, 2481, 496, 288, 3012, 1277, 319, 
         1288, 3032, 238, 900, 2710, 349, 788, 2635, 363, 2639, 792, 378, 
         3022, 1327, 395, 3028, 1338, 250, 2738, 936, 2739, 425, 810, 2661, 
         439, 1365, 3045, 455, 1375, 3051, 260, 475}], 
        Line3DBox[{1251, 1484, 1701, 1485, 3002, 1252, 1500, 1786, 1501, 3009,
          1268, 1517, 1713, 3092, 1518, 1956, 1531, 1718, 1532, 1908, 1548, 
         3067, 1724, 1549, 1910, 3135, 1559, 1802, 1560, 1307, 3038, 1575, 
         1806, 1576, 3014, 1317, 1592, 1740, 1593, 3023, 1969, 1609, 1748, 
         1610, 3029, 1917, 1624, 1753, 3103, 1625, 1347, 1639, 3080, 1820, 
         1640, 1356, 3042, 1655, 1766, 1656, 1982, 3152, 1669, 1771, 1670, 
         1927, 3141, 1686, 1777, 1687, 1930}], 
        Line3DBox[{1253, 1486, 1702, 1487, 3003, 1950, 1502, 1708, 3091, 1503,
          1903, 1519, 1714, 3093, 1520, 1905, 1533, 1795, 1534, 1289, 1550, 
         3068, 1799, 1551, 1298, 1561, 3071, 1729, 1562, 1962, 3149, 1577, 
         1736, 1578, 3015, 1914, 1594, 1741, 1595, 3024, 1328, 1611, 1813, 
         3119, 1612, 1339, 1626, 1754, 3104, 1627, 1974, 1641, 3081, 1760, 
         1642, 1922, 1657, 3086, 1767, 1658, 1924, 3139, 1671, 1829, 1672, 
         1376, 3052, 1688, 1833, 1689, 1384}], 
        Line3DBox[{1254, 1488, 1703, 3090, 1489, 1901, 1504, 1787, 3113, 1506,
          1269, 1521, 1791, 3115, 1523, 1278, 1535, 1719, 1537, 1961, 1552, 
         3069, 1725, 1553, 1911, 1563, 3072, 1730, 1565, 1308, 1579, 1807, 
         1581, 3016, 1318, 1596, 1742, 3099, 1598, 1970, 1613, 1749, 3101, 
         1614, 1918, 1628, 1755, 3105, 1629, 1920, 1643, 3082, 1821, 1645, 
         1357, 1659, 3087, 1825, 1661, 1983, 1673, 3088, 1772, 1674, 1928, 
         3142, 1690, 1778, 1691, 1931}], Line3DBox[CompressedData["
1:eJwVz61LQ3EUBuBXvLrBVGSImAaaltcNBrOwYhNcNCiYLCaTGEwmLQY/glos
DkSLf4HBNDAMRNElQVGLzw0P57zv3e/AZjsb7fWhJG1ei+RxJDkfTTbN21ry
puvbr3Rf8pb9W/dbSf4IP/qeue1bOLGfUvDMjq5G3Y3pseTO3JWnaNhndA/m
fplZlSvVpMqk930O9Av6pnkhX1LnhUNdiyU3nhj2u2N5nhW5R6E7kxcZd3eC
jq7h/Xt5r3zPjb2l75pzfHCtX2bPnaZvA7Mrdxj470fyJ/fyGv+bmi0e
         "]], 
        Line3DBox[CompressedData["
1:eJwVzTFLwmEUxeFrqRUmBEK0VUgILS3uRUtDkw5FUxDRFDk0NbUHQl+gpaVa
8hNILo1NghDxj0IjoZKCGoKGHocf5z3n3Pfe+Z1a9SAVEVW8pSPamYirbMQh
beYi3mU974bsiK5PRvzK/sYifvgUTbAhf6Qjsgs6aj5Dn/CMvPzevoL8Bif8
NB5ks/wtTvk53JmfGY9Ykk3QHv+CVTcW9dfeK7oCfcWmvE/Luj16Tjv2LtNt
cwmyZi75NdT4Bb5LG3wFU+50/TmWFe34wABbutbwjq6uK3l/4gu7uoH8TP6N
Fr+PfwfVMM4=
         "]], 
        Line3DBox[{860, 278, 2616, 768, 295, 2620, 772, 310, 3013, 1283, 326, 
         895, 1187, 2894, 343, 787, 2634, 356, 790, 2637, 748, 3018, 1323, 
         385, 3025, 1333, 402, 2735, 931, 417, 2657, 808, 2658, 432, 813, 
         2664, 447, 1370, 3048, 462, 961, 2761, 481, 827}], 
        Line3DBox[{1261, 1492, 1784, 1493, 3006, 1262, 1509, 1789, 1510, 3010,
          1952, 2070, 2071, 1526, 1717, 1527, 1907, 1540, 1722, 1541, 1909, 
         1994, 1888, 1912, 1889, 1303, 3036, 1568, 1804, 1569, 1313, 3040, 
         1584, 1585, 3019, 1967, 1601, 1745, 1602, 3026, 1916, 1616, 1751, 
         1617, 3031, 1919, 1632, 1818, 3120, 1633, 1352, 1648, 3083, 1823, 
         1649, 1978, 2073, 2074, 3173, 1664, 1770, 1665, 1926, 3140, 1678, 
         1775, 1679, 1929, 3143, 1694, 1836, 1695, 1389}], 
        Line3DBox[{1263, 1494, 1706, 1495, 3007, 1902, 1511, 1712, 1512, 3011,
          1904, 974, 1906, 3134, 1886, 1284, 1542, 1798, 1543, 1294, 2052, 
         3167, 2053, 2054, 3168, 1570, 1734, 1571, 1913, 3136, 1586, 1739, 
         1587, 3020, 1915, 1603, 1812, 1604, 3027, 1334, 1618, 1815, 1619, 
         1973, 1634, 1758, 3106, 1635, 1921, 1650, 3084, 1764, 1651, 1923, 
         1009, 3132, 1925, 1899, 1371, 3049, 1680, 1832, 1681, 1987, 3153, 
         1696, 1781, 1697, 1932}], Line3DBox[CompressedData["
1:eJwVzksug2EUh/EjcWmCgXGlenMrpYqWusxsgNqACEZMrMQSWIaJiYigkRJp
7cCsUxPxewdP/t95zuX9CidXh5dDEXGMwXBEbyTidzSiLx/GIx7HIrKZiGn8
8ZWJiB+9J36Nq6OGC74lt/Gsl5MzuLeTwQu3od5Md9xdl7vYwateXp65UZCT
6rKdjjziilwJU+kG/2b/Pc1ws+hyB+hyc+p59NQ5u235wS9wi8im/+ZP+U/f
FW4pvcnl1df8l2xyW2hgH3vo88vy3GxVDsze4JtvcyvcKqrqW/4O/1MSJ0E=

         "]], Line3DBox[CompressedData["
1:eJwV0LsrxXEYx/Gv3KMslMVA2eR+znErxyV3ynG/lDqcGMTArpRJnKQchclk
sZmsymJhUSb/AtPJ5PUb3r2f5/k832/f368+vZ/aKwghHCBTHMIzVkpD6MJl
SQgp3sVsNKsMYV3+hIT+WL7Dn9iS3RbZl91wTVkIH3wlu8aEPGmWU4/beUBc
nXFHXDajnkbS/B7L6hh+K0JYsDOl3sYkEvI7LKm7ne3kETtj/I5RNMlz6JFn
orvkW7yJBvOU+QV36BtlwzyEWrNTFHpru75aNshpDKBKdoJFdRvK5UneQD+K
ZUdoVed5jevc9ehf/CGLav0bn8my0Tn9Of+YHTqTV697Xwt/6fv4Bb34trNn
FpPP65vxGn0nr0b/A3P4B4OaMlU=
         "]], Line3DBox[CompressedData["
1:eJwV0D8oxHEcxvGP4k5HcYPBKGU7I0qUAbkUUSa3UFcMbrrFpJTJxClR5M8g
FhMDVjGZlJLBapF/wyV/Xr/h3ef5Ps/z/X7q2zZTmlioiYhZFOsiLlFJRVyl
aYw1RhR4Z8jWR1zwluXj5kOSo1tnUn6KJp1zXlmnlz9P32MOefkxirK0bMoc
cD7ER0PEus4GKujh7SRv0m+yYd08PYIcv9P9TTNj3wmvSz5k3mEQ7bKczprZ
IWvBk3danVfxqxPuFnT+6GbeCo7ojO4o/4DeR4q/hB96D1W637xBH75rIxZ5
VXoXr/a8OBfoa0zjXafM+5Q9mrd45mXtKSV/YOe23ha+8A8E1zcL
         "]], 
        Line3DBox[CompressedData["
1:eJwVzy1MgmEUhuGjQwhYLAZGcSNbndUE0+R0bLoZLDYlUUxubiQ30RlIJpPJ
xAhugIJOo43CdFDE4IaJEbwI957z3O97vp+Vw5Pt47mI2MLRQsQjbpIR5/hO
RxzodeRSEWVuwO3oDxjqXfnJ1Zxvmu/R5/cXIzrmP35D3mGeKzrLY13P6rfy
Q1/DqjnD1WTV3rO8kjlZ4K/li3tPcszvcRnzBZr8Mnq+ZUmvIK1PZApns/fb
+ZG7cpqIODX/uj+SbVzyYz7vueXZv9hvyS+u4V7J/I5XvOEfGi8tyA==
         "]], 
        Line3DBox[CompressedData["
1:eJwVzyFLQ3EUhvFzRedwSw6cggYRFGRlbHG2ZcPAoVGbIIrJYjItLS2JYcmk
xS2YBDUt+QFMszgtg8GmTX8LD+95n3M5/O/60VntNImIGo7nIp4wmo/YxgvK
2Yhnecg/YmjeRC4dUbJblHX+AYOUHXcpd/U79M0b3Ims6rc40L/dWEYXHVT4
NvbtvvQlZN3OoMhfI7F7c2cHW3oLPfMKX5BrehOv5jy3KnN6Ax/upTHjXsEu
kQv81fS/fBf4m/V2/TfjTfrIPOEu5Ji75/rmT+5c7rnz7uaE/5kmbvAPDQwr
9g==
         "]], 
        Line3DBox[{1387, 1074, 1835, 1145, 3171, 1379, 1466, 1774, 1676, 3046,
          1368, 1460, 1769, 3111, 1662, 1360, 1454, 1762, 3108, 1646, 1350, 
         1056, 3077, 1817, 930, 1342, 1053, 2859, 1127, 996, 1331, 3150, 1436,
          1744, 1599, 1321, 3017, 1430, 1738, 1582, 3039, 1311, 1040, 1803, 
         901, 1301, 1037, 1801, 3166, 1110, 1292, 1412, 1721, 1538, 1281, 
         1406, 3066, 1716, 1524, 1272, 1024, 3063, 1788, 869, 1258, 3133, 
         1020, 1783, 1089, 1949}]}, 
       {GrayLevel[0.2], 
        Line3DBox[{2113, 2566, 2567, 2300, 2559, 2917, 3125, 2590, 2568, 2569,
          2473, 3089, 2216, 2472, 2301, 3001, 2217, 2303, 2271, 2695, 2218, 
         2474, 2933, 3002, 2219, 2475, 2934, 3003, 2696, 2220, 2476, 3090, 
         2304, 2614, 2793, 2918, 3157, 2528, 2305, 3004, 2221, 2477, 2306, 
         2615, 2794, 3133, 2222, 2529, 2307, 3005, 2223, 2478, 2308, 2616, 
         2795, 2224, 2530, 2935, 3006, 2225, 2479, 2936, 3007, 2617, 2796, 
         2226, 2531, 2937, 3008, 2763, 2843, 2227, 2844}], 
        Line3DBox[CompressedData["
1:eJwNzTtOQmEUhdFDoSLgI8EJWMoQFChMTExojLWVjdJoIp1SIh0wFVAetmLr
IDQBtVFEUDvjKr7sx9n/vZvH54dniYg4wG4y4iIVkU1HPPF1PpDAUSZiYTmi
xl/jz31JPrGdY5HfoM/6ivu+fZdv65PooCeP6KXdPfryjZy1TdFt797xgbG8
pU/TU9tv3PIZNNzL8g+68gp2dBP86j7pi24VTb7kOwP/6slryOum+MKrfOXN
EC35zq6vq8oPKOhmmONNn/OtdfooF9z3UMRA9w8HCC6U
         "]], 
        Line3DBox[CompressedData["
1:eJwVzb0ug3EYhvFbQqJlQesrMRhMzqEtEjuDMEjEJAiLk/AxOA+Dta0ysRHn
gMVHwkKrFr8OV+77uZ7n/76z24erB31JVrA0mBSLyZM8kcdYH0ru+5Mj/VFu
mp/tXwvJKfdpvsCI+cz8YlfXd7kvjOoF3OoNu4ZeGk7G5Ln7JtfUy1xJVrhv
/ODNPM+X5Z73HVzp46jat/HLXeKdm8C+3kVLn0TNzZpvdHq3+OCmcNf7ln9f
6+2BZNGuixn+Ty6g4t2cbLnb4OvY4bbktHcPdlV9GTXccP/qwTCg
         "]], 
        Line3DBox[{330, 1169, 329, 1723, 516, 328, 1798, 605, 327, 1722, 515, 
         326, 604, 1797, 325, 514, 1721, 324, 603, 1796, 323, 513, 1720, 322, 
         1719, 512, 321, 1795, 602, 320, 1718, 511, 319, 601, 1794, 303, 316, 
         1529, 235, 313, 1528, 234, 715, 315}], Line3DBox[CompressedData["
1:eJwVzzlSglEQhdEmsEQhJlH5RRQcWARVTE6gRWjgtABdgYtQt2FO6A6UEBfg
xBIQLc8Lbn19b3e/oXJ9O7zJRcRpUj5ivBzRK0TsLUWc4S5e4R+N6MRMFTfo
ohgx4Ot2unS5GPGKfdkLVszs2B/gNvbxWO8O36hjpi4/kq3z586r8Y/yLTyU
l2Sb6rasigeyhixLb+Af0j34y++nc9QZzfkef69f5lu4hj/yrnxKE/U3dmi2
EPGsv5Lu4p/SW93zpS6rP7HojBo1/fODz9TvWMBVe/8KUyPA
         "]], 
        Line3DBox[{2141, 985, 1202, 1201, 3174, 2140, 1116, 2852, 3168, 2947, 
         2139, 2361, 3036, 2946, 2138, 902, 2634, 2360, 2137, 2945, 3035, 
         2359, 2136, 901, 2633, 2358, 2135, 3096, 2357, 2356, 2134, 3095, 
         2355, 2632, 2354, 3072, 2133, 2353, 2352, 3071, 2132, 2351, 2631, 
         3135, 2944, 2131, 1113, 2710, 2350, 2130, 2943, 3034, 2349, 2129, 
         3165, 1107, 1108, 678, 745, 1890, 677, 889, 888, 2677}], 
        Line3DBox[CompressedData["
1:eJwVzT1LgmEUxvFjENjLXLNr0BcwCXqooaX0sV1obMixaI+CqCkoaG/uC5T5
qKm9DG59Cc32rH4Of865/vd1cwr79fQwFxE7qOUjjuYj7nCMtbmIGXOAdDHi
0XuRu5FvMbSv8k98yb60ELGME2/bfINv8uvY5X7wzI3kU70XNOVMPrN3UdaZ
IOO/+HOuh+vZiJacoOL9FxtutPTG3Cb6em25bd9CVeeBS/Q6fCqv4HV6Wz7A
hf0N93xX7vh3Kb9jj/tDj//mr7gPfE5vm30+Mf8BmIoyLQ==
         "]], 
        Line3DBox[CompressedData["
1:eJwVzr8ug2EYhvGnC1U1GowdFKlTEJUmFlXCZhCt/0G7SSwmkWg61lBByxkQ
B+AELEVNqruT8DNcuZ/nut/3/b5MpbZWTURECSfJiF4q4gufWB9FOuJFHuse
uEeUkOcb/BG/OBIxMNdxaJ/RL+MD7zjguvJtOKIjV51bwT5/JX9Q5Ave2eOe
7WXvT8k2v8Dv8hNc3pwbitixT+qzuP//nu7SvM3PO9M3X6Biv9XfYQlzujI3
rttw50me8b/cFs7t33h17oZvYZMv+Pdp8xhmddeyiVP8AcnKKTk=
         "]], 
        Line3DBox[CompressedData["
1:eJwVzbsuRHEUhfF1JMQthpaGzi0eYHohmJFImF7veAAP4dIqUeA93OaOxmu4
9H6nWNnr+/57n7N0fHpQFkkaUo4nM5PJotRkeyJZM9flZCqpTydb3Cyek2/9
xtzg39wu27nFd/LkbZ5v82d4B/e8d/Czfq735d5bl3vhLvBAevgVL7jfNR/s
lHxR/QfvySEX7no0+cENeeSadvru27gpR1yLK6pv87/cvgzxEHf0S/1dWnZH
qs7/8Vf6RxXcxZtjyZedFe6TWzX/ARSKLEs=
         "]], Line3DBox[CompressedData["
1:eJwVzTtSQlEQhOGxQN6RpGAVpkoRuwMNrBIEvaiRC/C6F9kDJpauBEF5yRo0
MFFCvxv81T09Pee07tLe/U5EnCEtRexVIg7wxbdoDnkc1yLOyxF1/tvuiY7x
U414RtfuFG9o6C50JnwPc/uleco/8gsk2ds0j195x02frvRmtGke0KHerk4h
u5H9yS6RmnPmd/4KN3pF2SFKuDa3seTX3nxAovci++Q/+JHdCreyMq1gK78o
RLzKNnpz875/hnQjO9I5QTv7Q/YPQOQn1A==
         "]], Line3DBox[CompressedData["
1:eJwVzTtOQmEUReGjAaO8fMSCTnAEMgZpLGy0IgaQh2iloi3G2VhZGeJMiMoF
h6AGK9GCz2Jl773uyX/L7aujy6WIOER/NWKQiShmIz70Rz2Nmf2Ak7WIbfvT
t5F+zX3jjju272XfXs5FNOwvd09cIl/sHb4pJ/arLNmncuhmyr3pZa4l61zW
WznUuB+ujWf+hktxY7uDJpfn0lxBzrkubvUVLtHP0HK3zm3g197zrSff/Xsi
d+3z/zfdbbrZwp9d4S9kwu9zB6hiyi0AbMQpBQ==
         "]], 
        Line3DBox[CompressedData["
1:eJwV0DtOAmEYheHPiqsLwM4grVq5CDuMnUrIxE4FnQG5yG03VpAQQsSNWLkJ
xQX4THFyznnPl3+SOU66V52DiGjSvBjxXY64rEQsShHXfM4PqxFbeWb/tM+w
ez7lVdsUn8hvVNEn+s4+1hM+yjesYRvKAxrrJ/qr3HbT5yNs4zsJ3tM/8IwP
8TqWyi3shZf1AX7u/lnf4l1eyt/EO/ITFfW+fubuUd+4e+A97Ai7sf/JC3zP
Mypgd26+6JZO3a3tqe1dvrD/yivsh9ewZf5f6B8anSkr
         "]], 
        Line3DBox[CompressedData["
1:eJwVzT0yQ3EUhvGTjsRQWUAaaUllhhUYTVJoGGZCEAWNBZCb7yA+ZsgaLCGs
hSTW4KvL7xbvPOc877n/m69clM8zEbEj/bmIaTZiOxfxNB+xh49YwXVdT9b0
NVmVzYWICXb5MRbdPbgvY1U3xJJ09Pf8qZsBttN3+Bf5knf+jm/xBd/dmm+k
aS/a3/R9+wn2sMGv8F1zR5bMCTfSt+3H2MJFvs43zVP/eZZre8NedZPglT0x
X+omaW/+5z7wU165De/8cWfuf/GA25cjOZSt9D9ud80/+pq7b1zm6uYZopYw
+w==
         "]], Line3DBox[CompressedData["
1:eJwVzjlOQmEUhuFDp2BhpbYGCytNZHAB0tkQEl2AITFRkDXYC+KADIJaugon
1qEN4LAIE55bvDnne8/339z1o0blLBURFfQXIqbpiBkmOMxEHOB4KaLn9rQY
8Sc/oCt/6IxRR0lnxN/xj3q/Sc/syG/u7/jhauaIv+WH8jeG8o286Rv39lOd
gXnN5biCThGvfJ9f5q7cevYTbi95595O+mYeL3yZH9gv+a7uLPk/syV37FN8
yQXdPJr8M7fr3Zr875Yzd3Dhtu9WdduSP7GNc51VM4sVbGAOHmIvaw==
         "]], 
        Line3DBox[CompressedData["
1:eJwVyztOQgEQheGxw8cGRC3cg4kotmpJJCb22PPYixY+4XLvhdBQ0tmpoJuw
UyPIAjQxfhR/Zs5/ZrZrjWp9KSIq6BciPlYiPvGOs9WI07WIkdnTlc0DvOpO
+Nye8/3liBZ3zGVcxu2Z+3jhe/qUS+U5mlzOdbld+dxfyZzwGZ/wXfkbqdyR
d9w868do4EhO9O3FrZuZvYN7+VH/hDoO3bX5O/4XU/uPeYsr+xfe/F/ihhvK
FT8Pfi+4LXMT17qBrqTbkP90RXMdif0fUagycg==
         "]]}}},
     VertexNormals->CompressedData["
1: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
5qKfbm/SsYMgZcau0j95uBItNGTRQOr/XUU5968m4H22ziXOKg5XNRf+zJH9
q1yfqx/zcrH8/Olev1xHlPXJlbRtIfMuePFggFERpoo9vf4kxwIs6fQ5f+cR
sGY1eW1rZxlOK1yMvXjFFsx8XflUPxPAHRz26HVHP0a7SauW5HYDlcjkh2Th
KRDXsLtwvTMaHhbF7KFaz8XNk0vHn5B87rmsfbJjtxckXVXt42nOwESRPFNT
Mo8K8wosxvXmsMFjy5Y9DP44uHurwCky71eVRqR9NXuxpP8vW950DxxRyjsz
7TsFOiXDIa4HGpHxaVXJhx0DcC5LlPX40DR0uG7t1J9tx2uDsfnCvH3wrWB0
k9SnaaA/+Nw8b3MPMtjv3KXt2QMyiv06m7dNw82H1lyKsd9Qh8l7bNaoGapo
Jhls06aBq/ntJL3sEAo1LKzfZK0HwmeUo2d2Cj7deyQf7DmINxRXaAq7O4Cf
wusy9G0SNMc9lOMa2/D20EzVg94+OMT16+l7v2m4/nnbjpLLPXiXU1F296su
EAjMNvpiOQ1n+aQfXFL/hrYB0xV+dztAtsrMQKp3Ci5dvz1kLuYDAp4anMIb
YrBb3aV+iMyXcO7Pp5N23iDZTi2SoZCO/pylv06RffAUm2R7PnsZ2phdC0s/
HYvJe+em2EjOYTrQaHKQUoIFLo3aaguf0VRKuP1tBAF4vVWgS9AV5JvUNp+n
9kYLV9XtwmSclVW2f9m2yReI2Kc7ivfFI7X9xkuXyT5icNrL6+i1RuRO28lY
ZfcN+Gb8d1hSz0BzJ/NHgVetyP1sg8z03m/wuOXG3UfvpqF6jPu68dYO3EMX
Lj1yvh/GdnX80YBpaKBXj9471oUDpq9SWx/3Qo6qv+SdA9Ow0U99PvtrASTc
NWA/XFOFPxQ2r3nzkn3hnWat20ANfHxmsonpIOn7F3m20UjNAcNp+rVLo0VQ
LEbnev5qLbD5TTiq/KJAiWuOxcut9Wh8+WRORUEIFgS1eFNI3/GDt7Wy+0oZ
vla/pPySqwr3RU4afNlEwP7ol7/cx2twwEq3LNctCKvbb/UpXCbAMM1WKisp
FgZ57sQqzRqCGv3k2RCSVzn+zd98/z/zN//+5pPyEs2EurDC8IJMG/AUPcNd
Su5nN5ueM9bGUTi18n7HHsUofJN9LfPmPAFR/gMpF3xLsBE6CcmxEjTZbWj/
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
CMJmd7Mn74sTQdGN/9XqTLKOEtKWcj5QgCm7R7NA3haveOq9/kGu22vJCY/m
uSrEt4vupplOqGy0c7veUwIYPneqZ3uXwspEppofHSUYlGF+ZLcaASX8JZfY
tVKxTGtL4zGHHng6/vsm+81J2O673rpYqAIeF7xP+ObXBKg8o7nDgAr5K9iS
EymVKNRz6D53Ty2auC+1rS6nQoWX9tH8U2V46dSZYmO5Jnz5Sr6yyI0KAYtj
M8iRg7fuSuW7nE1EUa47T6gfCXj1snX6OMM9eHH6jd3+SR88+pHzF5XUZZvG
b3ur3iwGk1p27SKS99FLO17458OVTtN3i8v0nWo0fcjVulz40lTMXYWkHj33
rvYYA4kbM0ocrkluqJywUZR3QhtLA05H9JLr2WJz8FaHfzKWQ13maok0fJ39
3jiV5F0u7GHN9R6FsOVeCOeKLfmgyf93fiScgIJyOj8m5mwQLXg5/VAE4aJw
X9XmKAIy1DOrH9+6Q+LeX7qKT14YpXmT/Tr5+UceXHmtyBaL+HKgbx9PGl67
cjfjCqkXjs59GpR1z8DA+rpPQevL8Vlja4CnDQFTZy3Vt/hloeBDoftVTl0Q
Gsiqz1A6CeFOyrOvzlHww7DUlifHu8B/MeuVbcwksEQ8NdrJZomVl6s23HpT
ix581B+LN8j1HA/vFCiJhqdrznUob6lGFzOT4p3/eLgVx+05U2es9CvbplWS
Dms7zZrMSb0wKN47wPw4DOWk+jobhCvgrsBnCQ5HMt/UviW3bU+CuEPNMYJ9
9SDnV8MsQOKJ/P9Fz9bM/t5O8c7A62oR7ruz6+FrfmNB8JZ/57P1pu9/E4j+
K4+1jT+vwl97guePGvw7p2I/H2+lBegdDOi0qkkFk6XnO+ZJntPjflNVS8sN
nEXO9uz5lgTr7rdLdJL1W5Mh+6jZ2hJf+4vMKbwOh6273PJ/kDzcK/aM6KfD
b7Du0DOeJ+uK8NDpGscYkm+8uSXlfPOXP0QV6G+W2VCBWxulPue7/PMXWG82
tDYMFM2ksqlcBZh77jhLDdlPmwOcKvbyD6LKSceNOx42QuklZd5tKqOQueo2
Q+5MIypfDAjlVEI4+mnE7wfJt1npJXq+OrRDeZ37sxE6H8yUOvC0Aqcg/sfe
SzrrbEFG20Eh6nIEGj7J2aNBXud7Za6UJFMNNL5pkmjs4Q5Lya7R5WSe7FLU
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
VA==
      "]], {}}, {}},
  Axes->True,
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->NCache[{2, 2, GoldenRatio^(-1)}, {2, 2, 0.6180339887498948}],
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->All,
  ImageSize->{868.1872807367037, 511.},
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-19.94717866662527, 
   19.999998578566327`}, {-19.951671363874908`, 
   19.999898671146745`}, {-0.8454979732564548, 0.8459603700230575}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-2.4317224404534508`, -1.8508600606180226`, 1.4529428786446408`},
  ViewVertical->{-0.044711563913707335`, -0.03847236274692607, 
   0.9982588608958397}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.827920560580534*^9, 3.827920678551046*^9, 
  3.827920781312849*^9, 3.827921293856814*^9, 3.827921370019348*^9, 
  3.827921407285512*^9, 3.827942881295188*^9, 3.82794358398647*^9, 
  3.8279436577040854`*^9, 3.827943961438057*^9, 3.827944101980219*^9},
 CellLabel->
  "Out[135]=",ExpressionUUID->"0f20b169-9947-422b-9347-26a7014443cf"],

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", " ", 
    RowBox[{
     RowBox[{"\[Psi]", "[", 
      RowBox[{"R", ",", "T"}], "]"}], " ", "/.", " ", "psiSolution1"}], " ", 
    "]"}], "  ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"R", ",", "0.1", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"T", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.827920695607768*^9, 3.827920724110968*^9}, 
   3.8279207813129673`*^9, {3.827921297849469*^9, 3.827921299209161*^9}, 
   3.82792140728563*^9, {3.827942831539927*^9, 3.827942831968069*^9}, {
   3.8279436050709467`*^9, 3.827943605404641*^9}, 3.827943657704211*^9, {
   3.8279441120424*^9, 3.827944125913479*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"9248498c-f0cc-4e1f-a718-298eb2d69c0f"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
8eMavPf0XetChsq3JzoNh9Ygl/J5G/3zTD6e18D4Z42+oLrolC+eIwCf12M+
PLsvnaZyUVNo3R1Z9JPJx3LjwuJcbA/2S4NnljJXFo4rWEccW0yFZktlYbyF
daRYo0cnvbUB80noxziB+34HxdyxDgD275fM/OzcVoxxErhdrECxg0MVxjcY
/5zaXnxLV5H75NC/m1Y73v17MA3HM55/9SQ5vK9PxPoA9O+35sDHHIuq0T9w
5sjZzznjmvDcBPzwMTO9DHWPRE7O4zb37XROZcC8gP3vr4ZjXry62egf4kb7
GsWhxacrcV5D3ID1HXSAeOupa6R+zbUGnxfGScbO7gldRhvqDPGT+8eBE6El
nxhtl/8OOZaIYv9+dfmZb3koDeMA5F0s9KXahkdLcd2B/kq7o2GqF9FM6thU
fNCOFpqfkp2H4wH3sw1sa3ozTfAcH99z9JRd9LPXF+cXtPODxqVzf+MS8HmB
zx/fY1mypAT7C8aD2X0jXbNfYfi7wIea98TzCZbS1PdvGPG7UzXl776Czts8
3p3VYWqhTeaXb+tdDpMg9/qQr+nk2sK9Ysq+KX9xcVVBA4mHuTMTo7X29dA4
hguFaRLkfaVvBQ9UBeb20hx9v315U0D40gffaFXjbTTmo+LejwVZ0U8ak53i
8LcmmqwSy/cCTRLnu5iZW1ru9dAO3fE5L/CW3Ou+NjGUWObTSdM1P/lDZRWp
h6zQL3qtWtJBqxbyElFOJTxtSYB0etB/9jerErZrHyX7wf26qaWzeXtonyJK
TK9fJ/zyiUCxG7dbaVsb6Ek+z0md4eNovM6mkcIp72mammxYXdXfMiXP9HQ0
jUrc0T3l72qCnroRc6oNCn+jfeKveT5hs3unvP+1slB/p/fe1il/N/Kw59iF
A4+zpvydw8sRMhx3tOumvFeicOqAwMX2nil/Rw7/zqrNSauAG0Rn56yl+g+2
tE65V9+2eO+2A/dbptzvdb/41be+J2HKfdHLdruTfI/1TMmvJpz/sPqod035
ez5HLArnDl7tmXL/reX7n+2Wuyun3LfhvHCQU3Zpx5S/21bjIR5RM1495e+M
nbRX0/qj1Dzl79vMW1ndwySVTbN4YSu0VaEO+9dcrfhozN1SmuXP5TNrBf9g
v0hzhvOXynfT7HoS3q1zIv1Yl2UUQBfrorHypLFbhTChf7GxK0pnMjtpqXxZ
lxtDyHjY32Qk1RVaSFu40lHpgjbROWZRvu532R7apgUm4x3tpL+sYmm7N6X2
0F6s/sIsuYjUCa89+9GxXKuNJvZ2uVqhAdEh3zR+r/XeUtr8tllut9iXI5c4
Viwlmp5A4x+u1dkqTPpro2Gi4h6dBJqprYnO/JWEmzF5DK5l7aVxpYmzhV4n
/VjvWpK893sH7fgjdQm9UdJftmfLZkm6tdM+7K64lKVD+je0Oq3aY0MD7daa
V5s9thL9R388+255v4Em8NLprK4M4TE3nQuU86pog2o/n4mUEh52hj5YcKyc
pl1x12LuMjIeQnzkdMs9K2k7fLYxBaqQfq+0O79y4YIaWsBVHSWxEjJu69tk
94tf65xSX824bRHdcqt5Sr0R8p91vU+vLh4nPLPfuPenR+WU+mFh5L4IFrUK
2nOG6WX9rngcVwtV3BUbO/NppiwlHwI1K5Dz7dTVei7SRNswPNc20ZbEQxal
xxP7NlRPqYOFPhiu2m3RMKWudfbAFSPGxiKaUA+z86qzIlPiT0Ytf2Ka2Fzk
RUmj+400Gmh6zw5++ZglgHxTkNXN++plU/bj38fCZFvZGqbEPdCH5570yr4g
wk3CBAJuJvZMOZ/1+F2kwJXfPaWe2Tl3u+9Sq6Yp+f9cJtMnCxRraRv65H4P
Dc8k+7Xjdxp8blXTFEbuV36KJPvTPbm6YtbdrVP2y1dPy9IrbDNpd2x5VKwO
kPgpxMXT8aWojOagesxoq/ls5D9W1eanl6XRVv9aqeifQOx9TSOvL/WrmbIv
nlndMf7iwydau89h46cuJM85XpNeePTVJ9qq8eOGdu5LptT5F9ZddvxTSPRv
K5J3LbDrmlLP9LLoXsCh3z6l7rp4ju3ix7uypuxfGBurexNCPk3Ju+SqJaIy
j7ZNqbdPl1dMN56nGyfTjfPp1tPp8pbp4vN0+cx0cWy6dWq6eDhd/JxufZku
/kw3f6eLS9Ots9ONn+n6d7pxON26Od06Mt14my7vmi6uTpe/TbeuTZe3TLc+
Tpc3TpfPTJf/TLcuT5cnTxc/p5vX0+VF062z0+Wx0+VL0+W308WT6dbx6fK0
6db36eLJdHn1/3WdnS5PmG4dnC7fmC4PnC7fmG59ny4PmS5f/f+ty5P3WdPF
8+n2EdPlq//X9Xq6fc10ee906/t0+8Tp9jvT7R+nyxOmy7en239Nl4dPtz+d
Ln+Ybt86Xd4yXV433f5uujxnunxjuvxnuv3gdHnOdHnRdPvN6fKi6fJMo7rG
Pcx2v/DvIPV//G6s2d1GC6LqHsB3jecyXZ5dQfM6/KbxVOA85AI9LX9vlOQz
lNskHU/tJH9H6OtT7o1aPwgH+1Rr46zMt74MJaquCPY3orpLaVYMGi9nRnmh
F/lOjfjlK+0LFpfQXkz6To2g9j/fqQF78D90rM675mQW2gNPoL63wi1uaXDK
nXxvZaeE7SHP7YUMqK+C//VfdDxX5aYiB3vfB6/EPA86M+Yr8w9MPJJE+23Z
yzKbWsNpwMF+wGDRM7WPOeTvaFE86lN6xpU1SbR70p3JhSoy6Gdl33Ptm2yB
yMG+y7GX/dTlMAbUS8H+xMnjqut1MxisSYl3PdLId3N0tts1jD1IQw5+uGmr
vVL2+jGg3yGeCD7Sa1me3479DtxS0nB/dKAdA/od+LLsSnvF+hoG6Ax8gPre
CugMvFL9+Huz7WmoJ/Bgi0v3pRWSUDfgwyl79HI0yPsL+B0Z7dWHdZruYd0Y
uNKKHMmKX4n4XBBn1ETnJ55kqsbnAn5ffkdJRkUFPhdwn6yl5nZvqvE8Fzg9
VIn5TMITGoxb4P3WLoVOp9JwvOH3WajvoYAOwHteSG2VaXHHej7wA52uIVvE
8lEH4Cs3Xbd6Hx+DOgDn+XYxk4kzDscDcME+jYu8Z2+iDhDH/giGsX3dH88A
HYCHdKcxdVo2og7AOd5c+zkak4n9C3yQ+v4IPBfav2882tWXgc+F3yU542xw
ansuPhdwTf9d4fWGHgwY58CXxqbf5pOJxnGL3xlJGDzqyZSJ8Qri3oxffWwd
T5rxufDvokT+dDN5W4vPBZylcO+PhT8TaRCXgKvId55dHxuP8QT4+9+zFRf3
56MOwL2o74OADsDn2r5e9qK1EHUAXnY2jq1zVjTqAFzrqF38i1WpqAPwY+bc
cpmzn9NAB+BhX2Vmjl2LQh2g/r+pk/NW88cO1AH4B4WJtIw9DNQBuJH9gwnH
vkp8Xvwex+KukDVdkfi8wNWp73TA8wKfN1O1cM6SHHxe4F4f32l3moVhnAR+
IOGVpseWfLzPADzOj0U19tU7HM/Ad3vVKdbeS8PnhX2H8pMv7Q4/m/B5gf/w
kPz9+V0erlO4T3HddM/zVS2+l4ffs1ASuFYh9AHnNfDM88pXhTtzUAfgT6jv
aIAOwLOLZZvbZwejDsA5LupFlkjkoA7Ajbbt3WC/JBN1AJ7i9DLKnf4e4xtw
pZDH4zLWIagD7BOXHnJ8ne0ejToAf/OKWfmrYgPqALyF48KSS2ql+LzA7Qz3
/Apx9MfnBb6X+p4FPC9w/8Pvq87kJ2I8B270ITE9wC8fnxf4n1MPUlbmu+M4
B952VqbY+W0yPi/w2AOXhjL4P2AcAP6A84ITq1oWxjfY71s5e/G+LiBxHrhK
qNfcQY1PqAPwlvf7/pyNssM4AHx57E7ljXdJ3APuu+Kf702ADsA3WObUGqwp
QB2AK+UVBjHxpKEOwLXnJbvMVI3F9R14pVtRl1DgM5zvwKO2WS9aJZmCzwvv
hQnPnjvM9pms18At512tXsVTgs8L3LlxhqK9RinmY8BTTTO2CPeZYhwA3iXj
9eLkJ7KuAQ+kvgcBOgCPPd+65OV8ogNwXylGcIKXI8Y94DQvk12OC8n6DlzW
xXZ/QTbRB3jz8xON1deiMT4Aj95376hyMMl/8DsRD9s3tonao26wr5cv0d4n
NUzyW/yOg7VOiwY9EuMkcIs7UqVrfGoxH8DvOISevb4pNBXHCXAp6jsOoA/w
5Cqve5LmZL4AF85bYhwUlYr6AB+t7a3IZCN/Nw/4UpO2QO9H9qgDcOdZrLJm
ZrH4vFAfSKy717w/vBSfF7jAMNedztJqfF78+wBseVaHeyoxPwd+67Sz4wfm
RBwPwB2p7ynA8wJf9Y0v/A77O4yHwM1Wpkl1NpI8B/jyOYZ1ZbvCsd+BZ4Sc
WXy0JQ2fF/iB7oGUY3seYTyEusGQ/PhEskEuxkPglne03iuFkDwH+Al5hpVt
eyL2I3AF6vsF8FzAlS8IjiuezsbnAi69cVT3gWo2PhdwTQFJpe7EYIx7wGUl
PEtPrwzDcQt81o3nZaUx6fhccL/l5NPh3Y3H2vC5gKeqcLz9wkL6Efj6Hg8J
vZRMjG/A01X2VDQyheN8B25xJeOo/KFc1AH4Wer7AqAD8ObWA+EmDSTPAd4S
wta0l8cfdQDe6X5r4bXRNNQB+KFuy67NEYH4vC6HnfYxM3XQ1pQ9trUzI/N0
GfX+gtXcJ05j4lUY33ZKzm3e7fqJ9o2Vf+IbSwK2fySe2mdN2vfdpfzLCLJq
1PxnfwrtX0z5H9y2WatoTijGbXnKf4lhumCzOekXPrmS07Fmv2gGzV9Nz6l3
YDtPUvcBdKh7AtCecmqf0jlpf7SU8pPBdMHt0SeyP9Kj/AwoZ3+/zkbyRr/S
wlg11x+0O+pWHsfjc7E9f45+XhRrxkS/umnfQPGlWmyPAlWfadPlKRLpL8Bx
cu1Q9SUmpnGazu/t/XzbyD5uP7WPaJu0fxmi/DMlzb2lGyeP7VxH+d8lwBXf
fomMfxvKv8rLl7luX8g9Hy2qHjVz/IvFbUY0xqs2ge8XXEXZ6SZCB7v9G97j
OL9H1W3mUe+3QvvFB76+bIiZQW97o1xxqrMY278F9juT9iktlH+6p5ThysI0
HLdQF3qlNF/epz0H2y9G+b/680qo1Ewf1Lmw9VeFWcMc+kDC3UPb+xuxnRbU
/Z/n1Hu10M4F4YN/Y8xm0+k7tnwd/XwI2ylO5fOOk/YR+ZT/te+sRTK+5mM7
4X4Rv9+xQaHtidjO+ZT/sYY3BgbCCTi/Dtv9FGFimkU/vD5EPnRpEMYZn30/
dqu5zqS/iF8o+lCGjOej2mMeonlcdI1NNg2aRWQfsYa6R+qdGj/guJbEBwcq
P98+aV+gS/mxd3b0lu0hcRLuo/6x2iv9br8nzq+x+NE1agu56BMLTi1v98nB
8VAWOaHm6v+ffHj3ZXG3Ky3YHnh/p/RR46G+o2Q9GqfyZKdJ+XkJ5adw2GJ0
RuwHbM9rys/2oENffDzTsT1WvBONMV8W0iPWDV3rfU3+jjGcUzA5vO8XGDiO
61Evdc+Ki2+wJdcpEfXcyc0yMnGTh/7EXSe+Uj8V2w/nNY7Ue9CYl15ndhHN
46ZzGCkGM+dX4HNdmCYPV6H8a+6Yk2z0MgbnIw/lv3i9feGF8lx8rh7Kf5ub
+ee6lWTeJdrMCDE7uoyu/twtY8itEuMGnIuVUe9fQzuPN7FudfVfSs96cFtm
JCIB29lD5asGgv/Ok+Mp/+kcpyyvp+diO50o/9oat2MTu4n+xyj/Uibeh7P1
gzAfYNrJWh7zZQk96UDELOnxcNT5n/MFPrqyzxO9Tf4kH4b3oVIlriXbXSjH
9v9zDsJLv2uR9jjzdAaO5+NU3ugzKb+VpvzHz/fIsucj6wUT5d/0QYt41W9v
bH855b8lUMlQ1zcT8/ll/72ftpzOdP2CpssTUqcK2DhrttrCFfSawfhMNSPS
fnxPIe/hRJSjI1lHqHxPbFKe+YbyI/LYl/egcTK28yLlR+6KooSBdDzGjZ2v
OV6ZHRWga0cfUPe8S9aRh0VsxxuGBOm/eNlf12hXkPZQ51MG1HvxuL+4xRZk
9lKQXtisME/SsZoxOT98MCk/dKb8+8YofLwk74Pz8SLlP+2NQp17OonD4N/i
vrj2cdNUXEeWUff96O/dVs1cFIF67hpnl3c1Eqa/PcV69enqDJx3cA61lHpP
/9/7GmG60qR8T5Xy45n6KKzweSa2E/zMeMU6/i2YrHfLIthvis4Sppf2WV09
vMYQ9WRdyzFXrVyEnrctaTdHN4ljcH4kSv0dANCzsm2mToONCN3kaa1/mF0I
bXI+dmxSPsZC+U/dxbYpaEMBthP8f3YdHA0biiL7C8q/bkxbQOc3Bub5Q5n/
3BOo1IyJmBDOwPqAAJUX/V2wuibxSzHqv5a6V8A4/2z5kYsZGA+5KPt3xutd
ellJHv6Zeq8kpMtph8naYpyPJ5uezo8z+0qzEWy5JLqvAtvTTdl/zVes4lAs
wfYYUXnRn4YsZof55aiDHe/jj59iemnZGdd/eAQU4nw8S/kXPBt5x7IgH3+X
7VdFjqvoX9otqRvNs7vryDkFxcvjOFnvbSzC/PkGlc9kuyrIb+gsw/zZ2a1s
iZjaH9p6oacBzQFPGMBHqHxpYw/n9bClmdie2ZT/nBEz8zqVHIxv7BTP3SDm
9t0jG9fxq9TvVgTK1r0azMVxHuH8pd+sgZm+slFzS+Bcci5jljyQIarGSr99
5Y1S1/MKfK5zFDdKllR0WlpO6p9UnvP4hIBY7YUKfK4wyn96VHPpy/YsnC86
UMem8kOw76Dyqzv6MYGDbqUYf+A9R3bWcysT9xZiP/6hzstCuJfGKBjEYL9b
UnlOTesJr7+KZL2A8zXltu52g6JsHIej8L7kvB2nkq1JfDCl/NAvtTN9bs1G
fbZt/3OnIWYefY/9rq6LLQXYnjbq3rW3xiXWlHmF2B7If9L51fgl+MsxPtgv
/P1OVG0u/a1g5l7VGcU4v7ZT/vNzR49KmebivOa+M36+QWEh3avGYY1BVS3q
D9zmWgqnIXM29pc1lYds6enYtX1HEbani8o3TLmvCnTJlyCHvOiz/qKaoHtk
f5HQN8bGZLeAfo1nnaq4BolXPNTvBmldPN+nmo/jDThLenxPKn8Wjk/Ii4rP
fIh4e4GsF9IaTDFmRxfTl/OFe39eS/bXTh1MwmoLuelHQqTdndxr8HkdKX54
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
lhv4lCXx/b59uMdyA7eb6lnzeJjIcgNf6rLg3Dc7aRzmkp9B22hZtdWZnTwO
wddQPj7IE/ynn97nXgMiWZ7gL1NKnxjr5rM8wV+s6mn5clQCyxN88/360w19
0lie4BN7rckerJXM8gRPGnjpvEWfWNYn4D+C1G66bk1leYIrRWRpnom9xnoe
/L7L5Sg7zVSWJ7hpxw3NYvpuZnmCh/iE3uj2PYnlCb5xxaDMZu7XWJ6O5Icc
dXX2t9azH/C6DJ7TT/dr3R3JbgSPf1T1xfdpLK+/4NZfnPKTHCS7ETzv2iSl
77+e5HUW3LEiTl9PU7IbwdNv+U382ieY5Qke2Sqvw56/11/IE9xs3w/lsKv3
WJ7gJfs2qXd7K2N5glfX3XiTMiue5Qmu38Gqww5RshvBXeO/um2IlLE8wb0M
DYN3rrgmjq5qu1u1pxLvs/QSY4p3DM0SKtae7K8qqjDv61/58m1Ojth79eUu
F9arMt8breBy922GuHrZrZ8DtaT93VuDNUEXc+OFAn2bLWV12swn7jZK7nEw
Q1AlPwP4cIobM/ryx8KB66V9X6VayKR6jXnigl4uM97+qs98V5+Wk6PbpghO
vkpx4ZpDmD9evUn7UOA1IbPdVPWYL0OZf7bSmlHzI0G0zmhd5GdrwLzsrbPH
jS53xTceWV778oYzP1uye7dm3xihmPI6YR9n7Trt9J4NoqjhOvuioZ0684Cd
ep0rx2cIQyhfFXifA5cWL28pvXMHV5jcFH/m9rAsn0/PBjJ/Vh7seCs4ifM0
gc86qOyRWXBS/HryVcKkzKHMhwU2d+y0MZHzbYFrnFq2WHbCR9SkvEXggy/U
unXLjhe8rlYujFHsyvtBhYc1Fb8sMBEK/F6bTAvrwfyYW17un+dyhcPmP9We
DdVm7jVr7+Jt3cMEFTr/BR9OcWmGipdXJv42mHm7mzpzzly5K/bX8rZPPC+9
v75oe0Lf+Y5MjHq4sG9AG2nfmnZOPOmrfFmYcU6z2mObtG+9WLtlv+8NmeB/
zX74cQ1pH7RoTOSt8KhQYTfpB9h7u7o+DR9y4oEoI/0A/mDApPGLnxQKfUg/
gAeOzZxyLSRPsJOzz0vJPr9G+gFcIXf5stPrc8Vtcna4LtnhkXJ29YIuTXZ1
KekB8A6tV7oWfUwXv8rZz/FkP2vI2cmDyU72lbOHv8nZw/xdObsX/JhJvW5z
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
BPEq4hJTf41TqVacGZwupsj9bzb9bwyNQ5R/b7HSJ/1nDuthcPNj77elHg8U
r8i9i99P7+JRHvxThXmkhnaOIJL9I68/TxCXX6+hH/Bf0Td6tP/Lqkx8LXce
t4vs4atUD8ZtRKqdUbRfvZgd2GQPyOvzdWQnyJ87Z7rdae4598G/eJvxXj9n
ji76lz6/PU3J+oJR8b/qH2o7R2tLTf2/7LdvZm8P1sqq/2V3fdn65c7Yx0/+
JQdLo64ec53q/yU346L+t2WLq/+1fv1XO//ru//Vzv9qz39997/k8F/t/y85
r0QeSdLP+pTHGeee4LE2nR7fcg3l82WMt0czWvQ1XRsv4t4peNku5es+vyaJ
Xcn+QXsy9Uq0nnrGiOco/gP4QsprjPsP4K9qaqoa2/+9Lyb/NvgEV6f3O6fE
iLjfCz7TSXfD+z8SOE4Lv8envLq4B4Vx7iFEuVV7xombvn9MDZ8rvQvu8kfn
TzNr4oU5iMtH/djtVFN+2AaSD7jvwD42/dalCDNJPnyfv4P2tl9PxAibSD7g
7eNCVbo/SBCP0fsd8OWUX7UtyQ3r+I6XGmXuQonghTh4xMdQXtQgkht4RshJ
i/LHfkIGyQ389tplmdo+aeILkhu4u5r3/ROdw8V29O4GvIjyopqSvcH3Kk8c
E9d3WCo2am6Lau+hyeNkRO+vLQ4czRQgT/A2e9tNXK2aIuJdEvRwa6tgxRCt
VPGmjl32vlLpPbvKnJBUnwBv0V7uvYzC3Kb3Mu/puyjvY6pY9vhhjhgid77/
I6fpfF+N3oXxPQTKr4f3X3yfIcunWfOZKWLcbjutgHzpXfnH7KjtifFRgpbc
exkjei9zh9qP8dCr5MCimgEF4k/FNP0tXt2kdxYb41fFPMkRLyNuEs33W5Rn
bSLi2BPPoTxr+2g8g6+gPGh/kR8D+uG4y1v1FmczxQb6LtsbbYzWTriRK3jT
eAN3p3xkL0me0CfNjccEnNp2XdxA/Qje9Wb33zWtY4Qw+l/0r+6UASO2KshY
buDbPfedf7F4F8dTgn5woPxZihSXhscP5cn6Ru1nf2z7u0OiYyKEW+GetrPU
pHt018e9X3DDL17EezHMdx/Kt4LvYrwZUF4VQ3qXxPfY3RpvH3mwV8B3Ud47
7snzNVF3+bvgPtsXDv013E9wknuftYLeZ42h90ccP7AhaonCdFFMIPlgnMRF
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
y50DTqJzwP8D3Ao3lg==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxFnAkYFtP3x9+Zd3ZrIUIpSSn7kuSHEsmaKImkVXaSEoUSpSyJ7Ftlz77v
SiH7EmXPvit7WYr/99P3Ps//ed557nnv3Lkzc+fes3zPObf5gJMOOjGu1WpH
5bVaXeUrWa32v6hWuz5VWdRqw1T3osrTdX6g6BdEjxDdX3SptmeJPkr0ulWt
9pQ6eknXNtSxtzp7QWUDHeeozdFqs43aNNX1PdT3/aJHid5G9ReoPEzHnaLv
UNu1dbTW9Q1VrlXWareo/hbRa4q+WfTNomfq3pup7wvV14aqn6n621U/SccF
olP1l6j+LtEzVddH/y9R20W67+qqv0n1N6m+g+qHip6rcgP1uZb6HKl2Z+n/
oyofUPtOhfuk7+lq84baNFH5heonq/5C1Xemf9FfqtxDx6WiL1b97qLHqJ8X
1c/roker/gGeS/Rxop/kPhq3R9VnpWOYrjlS9Q3U/jjRvURvIfpenZumY7D+
H6P6nip30LWxnmO66n/VPXLRq4o+WfR9OneC2jyj8l6NZan6G1U2172PUrtP
1Ocmou9Xm3vV3yk6t5meY2u1+1HX7Kw289Vmc/V1udrck9Rq/+ncvzqm6v/+
anOezi1Tm+6ir1PddeonU5/dde1C1XdT/bWqv1b1E3VMEJ2obku1OY3xU5ud
dMxS/VM6f6rONRbdkecRvZ7o/6ntevp/oO47U/e7U8c3qt+X91X9waq/V/TB
an+96q9X3Ytco/e5U+UHOkaJflPlFbnnT0O1vVz0DNFriu7F91Ufi/UsHfjm
qn9e73tEYfo+tW2qo6XG5zg991c6Wok+XmV71W/FmOi6dXSPh/i+quuna58Q
/ajoNqp/UvRjor9V/Y667gfdawcd9zG2zB/VNVM/56qfPUX/I3oPlbvo+EX0
/1Q2ULtN9C5rqPxE/xervoPKk/QsTVkL6muV0u81Q22WqW4jHRfr/1KVv+u4
iHmT+RteojabiV5P9Wfqvq/p2Sap/iOVx+rcIaJvE/2gzt+vY4j+7575W49T
+0Z6/lNUnqHyeLU/VPVtRNcz84Qo83UPhGszPecmkdd5i8hrdpbG+Qf1cb7+
f6qyj/rpovpb+Sa5nzcT/b3Onas276vclm8gehuVn6v8TMfZancS61zlnfAT
0XuwxkUfrzG7Tm3+C+uNdbdY5wvV3adjkP5PTlw/XP1PTcwTzhC9pd5nFd2n
n8r19X+s6m/U+YF6lzmR+eOo3H3srL4HqH5W5OtHqn6Ayp0K81Da/s630/l1
GfPAd2i7pvq+V9/ubtU/orp1dL+hqhup8m+VB6nNWbrvX6n5wzKVVer+J6p+
heh+8AaVt6uPOyL/XzX1s12gNrnq7ol8zXDdY32Vu+ieYzU+ieqP0P9BrDWV
m+u+Q1hfordjbWkM7lSb5eqvf+znRB6MVdlRZTe1/Ujn/hLdT+XfKvfU0V31
vdV+QuTvsb36PU/l+arfVH0+z1iojPT/Q9GtRO+q+41SH8+r7W6Fx3y8zj8P
LxX9tsqP1e5jtW+t8iX9P0f1C1QerntNjDyHWujcXNFrqXxX58apbgLyQXV7
iT5I9FfMX/1/W+XnOk4X/ZbKu9TPFN5X7aaqHKPjANFXqFzB+zIvU8/5cRrb
GyMmvNdMi9TPM13196mfGaqv6zhB47yRjqY6HlD9LapLdUzWc1yGPIUv6WgP
f1Pdu+rnT9FHqLxD7c9S22X6/6f+Z5G/dSf1NUr0UtVfqmvbqdxH176hc7+L
7q2yGTxH9GWMpY4dWPvwWh0bM8+ZbzrWFb2brm2lcW/BWhd9gubHy+r/VZ1/
Admh5+iusoXuu47qT1G718N8RrY9qnarRZ7zj+lYPfK6eFbHKqJ/UZ8/qo+n
Y/fbOPU3vUFjdbrok0Wvpu+1s/rvoONoZFtiPeFoleNTy5QHRJ8dW79g3Z6m
+hNVFrq2m55vDcZK93qrsExfIXov9fekrnlc/5eovFjHItGLCj//UF33i66/
gOdTuan6vBr+r3uNTr1em6p+X/UzN1zbLLUOcIfanJWaDzVXm18L8+TVGGPV
T4Evqc0C1a0feU73V7s28Ged/5l2ovdT+Vth/niAyk8j94P+8U1kGcH9lhbm
7Wsw91PzyS3QiUTfKPph3aud3vlSPedzqp+iMtLRXNfsr+ffT8cS0e/p2CDy
2higdrnadGO9qG6hjuGqr6nuZ9G3ibxd59bQ/8NUbgPPUt0c3es7PcdOqntL
c+cD+LSO03TuF9XvpvofVd+1sNx4TfQ0Pds0nT9Edaeov1Vjy8JS5aa69m7R
j6vNU7xXaTmKPN1R136iNjfpOBRdR+/RSsemOuqxx+0Otftc/W6t+76u9vup
bKn6ibp3N7WLY4/13mpzA+tCfX9deNz+VPmNjumil6u8S+fuEd1Mz9BI79ma
ua6yifpYJfbzvaayUWx9FL4Gf4sLy3XeqYWuHaHz6+l4rGbddh3RjwR+xNjX
1P6t2DrGlupnSt262Dyd+qfwWE1lPTLuqr+Cda22q+l4Btmn9u+ofmOdP1rH
5qIvU5uhqj+4bn0FHsq8Q45tpHd4Q3XNEsseZBBy72fVXRJ7bhxSem7AlzZB
/qJXqM31Ot9Z9V/qf3u1mQ8PUN/HqV1D5J3qOmjcXxP9kuo31//heqb/VHdd
bPviC2QV78z4oR/q/J46dz7Pr/o3VP+K6gfrvnuL/lplF73H+Xx7ZInozjou
RW4xt1X2Rq4XXrMP6Z6r637riN4Vfqj/b4p+FT1U9+jMeKCnqP3Lqn9B9dup
zRzRs0RvI/pZ0c+I3lBtWiPPRG8gelPRY1h3OjaDT6pta92rjeguajMLec0c
Vrm+2nSDf+v8dhq7n5CBKs9X/Vai79K1fWLLDnT9e/RM24m+RtdcLLqL6Bmi
h+ldR6vd9vq/qa6Zq7azda9v1GYn1Y9V+Z2OM1lH8AG1eUltnlebk3WvW9TH
V3qGcdh3anOOyvdUdtSxo/qcrXKMjg1F31D4edoi9wvrTZuxjvUMu/IcOvd3
Yrk/TOUY1Y2P/S3OFn2e6LNFHx/kEu/5W2K5c5zKqwrL0JYqP1fbmaH9isRy
e4TKEZF1COTZ3YVto3YqD04tmx5Gz9F1JwaZ2Ff/t+f7IpNjy83ddfTU/5Yq
V9E4/JNYBzlVZR/0SNEvw7/V7y+iv0JfU3+/1fy9D039TWerXCW1vjMJuVN6
Ds5E1qW2yS5UfZlahxovekDq+6+qPm8prHuhRyWpbbexajNOY3WvnvVyvreO
f2vW8+6KLN/7iz4yto6AzreL2v8vjP8epeX7d+r/S/Sr0M9VQT9BhztebR7W
/6d03/tjn5su+mg9Q3ed/xE7vLTut5Xqn0ZXVv2S3LY99z9fz3mK/vdlbur8
B7pmO9HHqn5DvrWu7VyzHjgu6ILUjQ/1fyTWPU5Qea6ubyv6s9xjPDzyON8d
+9pOot9LXV6l+y9PrEMOTzwXJkX+/29i/e20xLoc+tJJoi+K/L9rzeWFgT5P
9x0Y+b6LUj/XNZnbXBR0wadVv4HK3urnw8w4RuPM6/oZnTtE5UF6zn6R1/9i
vk1knWmuzm+u8nJ4mMZziOp/0L3aJdZfdlT5e+K5fLzKiwuPIfPtqMTr47DU
8575P0j0j4nv0y/x3OyjfjZR2RkdDP6pa59VuyacSzwXBkce34GJ+VIvdPXI
en4v1T2GzcbcEP1I6v4uy4x1HKF2X+deD6wLMJo4tf5/duLve074RhuX5lED
dd0uavOK6t5Wm91S8/wFoh8vzasGqc0V2Bgau6NUXqlyFx3tdG6HwM/g9a1L
86HBan9lant5sJ6tU+BP7+r/tmqzk+ghyHb0Q9Gfqv4D5raOnRl3XXOO6PtV
dtVzNEA2ib4aHq36Viq31LXt0VF0brnqrgkyqafqrxDdQceZ2JCq+0hjMrrw
WEEzT8eGcTgt8jgPSjy/mef99exXoAuJ/lbt5+v/zqKvxJZPvHZ3DeOJTnuM
6DdTt78is+79IOOObc2YMrbYR6ltjtGJeSo6P/NmSWZ++zB2vI41I9uwQ9Vu
V53/R3Vx3bwS+6FLaVvmysK2A3yXduNFd9XxHP3WPc6LauajQyPP11cDjz0k
Nb6BHtK0tLymPd/nMR1tdf2rpeU732j70vKorZ6hf+lv3Ub0daXlL9+ibWkM
Bz1tWWHsDl20j8r1dawr+jKVCzQuB+qdUtHviD5AdF30Nbn1vwtFv6H6tnrG
VStjOOhCDUrPyc31bK+Xxmoaqv2RpbFH9PC4tGzdhHVeer4yb68sjWWhW6Kb
314Yi9tb9XcUxt/2EX2v6NtE74d8qDyP+6NXij4fnQA7LNhBD6i8VfVf6zst
U/vpoierzeHoI6Kbi05Vti+M6T3MWits1zzBOwUZjazesrD+cyProrC8gM9f
Uxgz2au0DgmmtELlQv0/T+PwnsptC8uaGYX1YeyLvwrLaeT1kXqOl/QcrVWW
Kl/V0Up0AR6iNmtpfDZQ+UzAKR4srDNiV6AvzitsI54BvpfbRvsZXCG3Xoe9
/Z+u3582Kofo2Fr0W/quvXXuhMg2Kvr+caKb18yDTwl8+KLC/OrL3PYha+pw
PcctQTegrzP0rseKbib6ocoy5mpkfrgX92yrYyPRm6vsob72rRkXANfYJsi3
ByvLs381bt/oeE393qjyU9Ufg40h+n3RvbGRRH8ouo/ohqI/Et1X9NqinxD9
Bfqd+lyi5/gVuaX691TfS21WE/0K+iR6R2Wcon2QaY9Xln9gHBMLj8kotb+v
8vv8jcyvLKeRwwNz4wwn6lkfqSxTwWIeqywLr1UfvdTmStWdqWt7i75a9Eui
dy2Ntb6vul90/T8a01/rXrvYJi8iywvjbzm2amGsEboNckX09Ynt1C8inztU
fX4vepXCWOgPolctbLtiw7bNbO9i94Jnbpn5uhkq2+kYL/pm9TkzMd4OXnqs
nufbyP8Zs2kqH9H57TPbYjeB7anNd5Fx+VsT45xr5p7X2IAPJV5z9EHfPMPK
71KzDQt2urrKXTM/1+3YTaJnq34NlVuij6JHqP6w0vbyD8z90njfx6JnBcxg
otrdix6s8lNd+6bOvar65Xqea1U/ClmTGSf4OrLNNifYZFeK/j2zjfYs+KeO
31R/v657XnV/iL6GNoVxWp75j8LYOFhB+4D93pzZZv8xMh6+SsA0wJRZ3/RB
nzwXfoRLE/Mw+gQDhv+B8V6UWN9Et0Q+ocMyf9BjqWdeoYv+GHTOgSpHJcbS
toFn638P0WNUd0hu/bFl4HVgxmNU1zAzDnGjypmR8c1+Nfs2eLaf1GZobt0b
G2H13BjPFPU5W/9Pqhl3Agd6MvL/u4K+DN8Znru/tbQmGuo4Uc/UV+VPme2a
RzLbn/CrL1WOLo0N3l4az8MWOBy+ltk+fUzl4bl1Vewm3o13PJb1prbXR9ar
kBPIC/TqI3LrodhcaWoc8ZzEMoaxBodHT7818ntODPhh38A3eY8Fum/P3DoD
8r1jYnutk8qbC98bPDwNdge45P2hH/jEeYnx83fBuPC1RcbSR8aW9diTbxTG
wZirYGZgf/w/MDa/hlf/J/pGHT2Rc3qXtXlX9T1S1zZFX8O3kFgv7a7zp6l+
Q9Hvqf4O5DZ8Ar0oM8ZzpOgz66bh/9PUdy/Ra9WMQYBFJIHeU7S6qO2T+Pz+
+tNO1x4Az2HuquwY2dd5j86tjrxQ2yMSy4cSHKN0/+Cid6V+tkvBm3Xfa3Xs
Fpl/d1D9yfDcwphVD5Unx9Zh8Dv+q/+tImNc26bGguYiV1PjQC8if1LjS8+K
7q6HOrBumfqrjld0JDpOKPwub4JFxNZVwMIu13M21v8mpXUH7tlDz/la5HWL
rJ0aW4fZIrIeBbbUV/0tZf7H1onbpcaxXtYz7AxmiG6dW5eDzx/J98m8bi5T
mxtTj/cNrInEmM9+ohtX9p0OVjm/MBb6LxiO+pnH8yDXIuP28LgPCvPzOmtU
52bh98IvqXIEfCSxjwn7erT6+RXeC97F+tIz7lM3Hj0kdr/0iS/rzciyJw94
L7bcusHXgP+xUWZscprK3Ss/Dz4vsGR81uDJB5bWhf/SfReHe32LH7Vu7Bpf
xXuFdZxI5U16bzWtHZAYs+mqI6sZg9pb5/ZX+SPzMrINdlBi/+aBqXVA7Mju
Kqennr/7iv5B5V6R189quf3qI5BRkXWHfXiHxL6Gsap/vzBmy/OAQTP++FHw
R82PjPGBs49ReXZqfwnX/pe7v8mhT/o4FZ6e2McFrojvamZlu/RP7D+Nw7Y6
duEa9bWazh+GLZsau50t+obcspV1gZ6O3+9WlUeUxk6L0vOVeXsQmCXzNDYe
x/X0g88efR/59SA2lv4/LfoV0X1L45+rqlxT5eqx/bXoUDNUPq42O6X2L7+W
WC/D7/+E6MMz+74PVTksM28bmllfu1n0k2ozXP01iO3TBZ+m/XOJfUqDYs9R
7OuD4//3pVEuRH9U/X6qL2u2sbEfwQFX+rNFv6M2a1T2Y3evjBceENueh1ft
H5tfgYN0qtkHhI3ePTae1V/P0UrlU6nxR+zQT3JjDz0Yx5rtSexKfEDo2T1j
8yx8Sb1iywkwC7CLOaltVGzV51LrvodgF9estz7IdSr3z+y3nZDal5vG/q7w
CfRC8OotY39LvuPeerdvdc3flfFt+M3zqt9IZfPY33IO+J7azFWbHXPzpXmZ
+yQmAT3zEWQ61xG/oXk3PzamPbk09j6vNKaOnQiujg0K3s41e+maL9Xfn9hT
qfHyVxPbghurzWz9bxxsGWyau3P7NZhXzSpjsedWbtsitCdmgvnQpKqt/MjM
qwZ6j/8Kx0hA44PBpzAptT06XfSjifXQ5UEXvai03Yr9yjnaEIvQJbNP8O7E
chX5Cu6J/wKZgK6Jb4dr8Xdgf8xReSffKvcYwOdfSEw3Ud1psW1esON+xHvU
7RP6InOfz6jt1bnxc/xQNzF5wVZUd6ja/iu6W2zMtyPzHGyjND97G2wcO0vH
r/rfurAueE9pPnGMjnWD/xM/aBzZJ49vHt2oEb6+uu2NJnXXgzu3yt3npirX
CW2Q2dit6JjELYEPgWODET2Xe760q4zpMwfbV8YYdo+N+bwfG1daKHpt9TdE
x9c1y1J8Ofhxfgv0ozXbTui26Egtc7ffRGXjMOc+UtlF5XDVf6x2I1SepuOT
mv0N+B02rlw3MtRvHWjwkacS+9bWyq2rnB70FeJWsF2b1YzZ76ZjQXieIRr7
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
9+RyEtfOXpLsSYuvlb30/g95U+mI
            "]], Polygon3DBox[CompressedData["
1:eJwtnHccVuMbxs/7vmdnpxRCZaRCIrJLaZERUoiGsiuyE0qKKKEkkZkRlWwq
LWWUVSKFyMgqkaJfye/6dp0/zud97vOMs57nHtd9PW/t7n069C4HQXBQFASh
fs/R79/67V0Kgot04h7JDVTeQ416xkHwRhoEUyUHKl+TB8EI1deXvLvqe+jc
Q1kQLFX5cJ2rp/KJOs6TPERjXav2l+j3UHW/TfXL1HeD+qxT/Ws6d6jkeTou
Ud0NFfVT29Mkr1HdKTrXUfJ/Gq+N5OtUvlLjnaX6dZK7q76Hzv2t8f7ReJ/q
XHPV/U9yWWPdpPpFKk9V/70k10uCoJ/6n6vfM9U2VNtRkl/X872gtndprBsk
b6c+MyV315ijda6L5B1VvlrHsypv1PGfymeqzUcqX61xdlD5FR13q/3Zktdr
/Isk92JMyTur/JaOUZL/1L1sUv+VarNO5am6/jOq26B2V+n6nTTmdqrfQcc5
Kp+rPnuobS+1mc3YOven6kId36k8Rs/3qcpNuJ7KndV+d7XvIXkG70ptVqv+
Dp2rJfkfyZslH636BSrfp/Z9VfcR31Tya7qfySoP0/nrdD/T1aer5A7q003n
/lKb31V+QH32Ud0WyZGe43G1+UzlxXq/1VXXTvIVGmtf9Vlc3N9+fK/IzztR
x0aVL9YRq/y8jn9V7sGY6v+g5N+4X43xiOT9VX5Y9/O35H9U97DOna5yV12v
ncqJ6s9V/aDQ33e82kQ691Tke/lN505WeUfd4xzmju5pjNruKnmB5AslPyS5
l9qUJHdBVt05Gv8hyWt0fprG78I9aaxOvAPVn6T6BpL/Vt9zVL888lzfXe9k
G9U9p29SQ+U9mZ+SP0h9vT2Z92r/Xur72V3yhZIralNF7Vfr3AqNP0D9x/Bu
1H9ftf1bclvJT/Jsal+KvT5f0lFhPuo+WqrtUMmbVf5e7UaoPFLHjyrfqXM9
VD9J8jaSX9J4dXW9K3XuHY1/repbqXyH6reo3FVtNko+W8/7oMY/UefaqK6V
jsdUd5n6fKf673X+Sd3P+EKvtFD9oyo31fPco/Hv1XGEyv+gH1Q3TXUT1b6q
+k9Q+2nq1Efyw4m/7am61hLJ3VTfWO2vlPyE5HGqH6f6Ieo/XvIb+t1F8vnF
mOPU/naVf1X5ddWPlTxY8i+SX5Y8Wv3vU/tWGu9jyU9KflLyuZKX537eFoyv
Pl+q/LjqH5d8luqX8r10/2NLnqP1NPY5qfUlevMx1ec69pLcIvZ8/Uj9d1Lb
tsX7uZE+qn9Z7Z+VfI3k9pJ/Vv0zkntLbib5B8kTJPeT/KP6r5L8tOQTNW5F
3+JeHXNVfoV5r/Z/sB5UXqHr7R9YN05S+1PVf2/VDy3eV3v9VuV5dG6qyp+q
fQ3JHYrxu+i3o+pu1fi/qNxB/feRfJKu9Yjqy2qf6Vsu17mSyqGO7STvp/Y/
qM3LvB/mqsZ+SO3PVv3pksuSX5P8n9okav+e+i9XuWVx/TW61hmqX6Nz32qs
43Ruo87dpuv3VNtZ6t9R9atVv0L1nXTuY9ZH6ufnPZyu+g91/YYaf5b6f6By
S50bpfqfVP+XysdrzE2qO15tWqh8f2b9tLfKP6m8UEcD1b2hNgsy62h09Vi1
Wa/y7rrfevp9VecO0ZjHqs3JfA/dy2ka/w/9rpKc65rTVT6/WD/9JF+qa3TD
Rkm+RvLlku9T/4/V/kDJu6p8vsbvhLmNbO/6qs1Rgdfwdzr3u67dpbAha/X7
u67xncrt1eY/bKTex4k8r8onq/9jFduns/X7q461av+D2p+r9ilrR+3qqf40
1dUIrbPRl+jN9upfXfc0jOdW3WqVH9axo/p+J/kP1b+qul4ar51+V+l4Tcct
kmfpmKPy26lt37a6ble1P1TPN1jnb9PRROWDNc4RPIfGbKzyKRr/AvV9RO27
M38l95T8qOQLWFup7f8Gte0sOdIY26Nb1GaV2sxW/TRdL1X5PNXfzfXUfm89
z+WS66vfjmq/GBuj3+GqH6RyXXSZ6j9R/4/xf9S/p+RE9dXUbju1maw2r+p+
9pdcVee3qL6Gfpug61X/bGQbh63jGvUo8/0q9gcOU/loHcdIvlHyMSrPyFxP
u99U3kO/B+Bb6Hn2VLlO6PJAHXVV3kHHvqw3HTsydmh/gzEZu3ZazG/Oa7xd
dX9HV9zmU91fo2J988559wv1+1PZ34xv1zL02rhXbU7gXkLbLmzYgSp/oTGH
q1xN7Wtmth+z1HYnjf2v3scyySNU/7P67KJ7Gavrl5kfep+LVH+hfveS/Jbq
m6pPoPb/qX8bnf8E/ZLZvxyuusWS79Dvc2oWla2DLtBRS+XpOneY6v7Ebqr8
ovqUVfds4vYnq/yp+u+R2Vd9U+e66n5a6vy9Km/m+WL7ffh/KXNUY1XUPlH7
7kX/8eg7yadL/kzy9qrfXvIzkr+QPEv9c8lp2T41/nB9ld/VNcapvI3abCqu
9ZHKO6KfJN+rtsskz1f/qmp/asX6ZDfVP6u+M3X+ZtXvlNn/7FLYp50l7yT5
fMlfMv8zX7tDYS+/y7weWZe/Z/bj8OcSHVU0/pt6B9ur3E/lWWrfX20mqH0j
bL7qauPDqb6mjpvU5jOdq6bybirPz+3vXqq283WuRux1zfrGx71eddfpfc3A
t9D5uWo/Dx+z7DnTVeU7db15+BLofHSDzr8kOVOfKRX7y1eobpHkvZgzavMJ
/pLK8zTeter/UNk+B77H9egkyd9L7iP5FR3bqH0fjTNT7S/jHah+O8mzc+sF
9ENVHdfi/6j9c/iTPIfqD8v97Z6XvCa3/zVJ/ZtjM/VsL6p9FXS3+k5X/eWq
v0v1u0h+O7feQH/U0HFj4d92RTdI/gffUN/jCZVvL1v/viN5l7LfEfHQ4bnn
6ns6f6vK22aOBzoV/kcu+THVv676m4r1Epc958/WvZ0Se/5OK8Y4SW1O0u/O
6Lhi/hFbvCi5S2od31bX/SGw7sdmnBHaJmNLzo4931+SPA/9TAyG3yz5atWf
mjvm2A0dy/vFBqLb1G9h7nXD+plUxJwdcsc0tfARctv87pL3C+wLVNPRVP2v
0lyojy+TuHygjuqJbfxLGufskm3/1Zlt85c6LpHcPHOssq/G2y21z/BW5HgI
X+IsyT1D++z7qHymjgtC+0yDUtvwE9V+VWDbPkV1a/Cfy453/lWbf/FtVb9J
5aOZ0yr/WTzzfB37qO08nTsKH1/y3pIXSV6qsb6U3F/lr9T+K5UPwH4zv3UM
UvtM1/9e5YN0/j2VD9bvQLX/UecaqzxYbUbiGxU+Zl3d4wuS39bYA9EHOn4o
2r5PfJt4LoyJ7D+jZ9G3o9C/Kj+lfl9LHqF73ENtdgptW0qSq4bWl+ive1gT
kjfqmf8neTw+rcqbU8/HBpH123piFNU3V78PJffRbwONtVRtvlT/h4inVL49
sj85J8Y5lO+pnwMi2wnsxTOSD5T8jcZbqfEa6vy7al9Fx0+SDyFuU/kv1W+Q
3EzyB9gLvY85xHbqf6+u1QF9yXrUWL/k9iPwJ+bpXPXY179Hcm3JbVWelNg+
YadWqP1CbCq2uGx71Q97orZHqn5cbryCtXC66kfpXF/VV1d9PZUfoD/+Ou9K
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
qXMceeyYn9xHn8T98e0/13G15DdLft7Dub/EvjU2FFsKpkVMhv/dPDemBbYF
n4jcBTkGeDLwZcg9TNbxdMljMNYRqa9NjgfuztzU+RcwA/T3DpF5R28V77dn
4lwEHBy4R0cxZwLnwOBCXZY4lwanBO7Xq6m5ItgAsAkwDbANciYvp86xwNuB
v0PuZYaO10qeU7eynlPfK/fM9/lTx/qSc0CtVX4Pv1Ty3oHxrXfxeyXXDcxn
GJkaj1mnZxiZG3OdHRuPB4t9UPLAyP4C9nis5Jsj+x93SR6TF3kkjbk4NSY7
KzbeDVZ7S+pcwW+h+ShwNsDVwdfhHj3OfIzsM7+RGEMH5wDvAFsfljrWOUj1
t6fmgMAFAXOfmDgGIBbA9h0t+VHVD4vMaXoEXzv12v1T9XfnxsTJc5Lv3IqV
546picfhVpCjwz/9A98+N6eDGGBiYG7M8sTvDhuMLS6p/We6v8+ZkyovwQaW
zDnCv+Kd8G7gvOGvcT/EUp1L1ic/aLxDNN4Vku+W/CKYa+RzIyRPlXwGMQ7v
X/KU3LgR+NHQ1POTucicZH0w38CvZjN+Ef8Tz18l+d7U3/vKkjlnA1XupPrT
AnN48BeuwP6ovIL5T24PjCHwueasDR2Poot1XKK651KvZdYka/MmMNPAObib
yZ2lztXhj94JtqyjV+Ax8J+eSs0lg1MGd/CQ1HwWfOYJqTlhqyPH4HDFnkjt
S9MG7suY1NgHHJQz0T1q/6HaXy35PtXtkzqeulXyA8X8xEaTHzqetZX43j4u
/NMtibl65ETJjW6WPAD/Fh9Acjk1loj9uD1xzrS/rndz4PYVHV+ofhlH6vmB
L7lU8hepc7yPam4tKTn3OzSxLt46h7APqb8d3xD/a2NiW9NG83Om3meYOrdy
nfrcobqfdFyLrOP+1M/Ms68r7NGJiXNvtMEe0oa2H0W2l4eljo2f0rlJKg9J
zFUjJ32c5PdT56LxqWZlfh8LJX/AGKkxefwe/B9ytbxPfH0w7NPx7SVfFBiz
xj/+IPJcZE6Sl2R+o5PgV+2h+t1zrzVibfgJm2PjTOBNz2i8N3Nz7tqivxJj
Lt9GtvdgMXvmzofAnSV/AsaLj01+/tDUORF8ejh+fVPnV+ALzC5imFqqnxqY
Gwp/AEwXbBc88iy+Z2ZspJra/qHy7bnjcuLzY3JjZmAe5HfB0nZOHX8RL4EP
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
uDSp3x17nM7OzBfl3tD56P7/A6ritJM=
            "]], Polygon3DBox[CompressedData["
1:eJwt13eUVdUVx/ELzJthHlVKIlKHItKSuIQIKoh0JaggiBKCgoBDlyUldHSU
ZoMEAyrJKKBGWHSFCFIDFpTEtRgSs1YE0UhRkCICGpF8dq5//NY9+3t+e59z
z333nPsKBo3pNbp0kiSvUIaG5yXJmlJJclkwgipnk+Qg9lVOkvSmGjydxRXw
a/XvwlZjxVhT7AxWOjdJ1qsxEqtaNkmaY6v5/sC3CJuI9dS/Eu9OleS9jP0R
m8k3HGsp/oq3knZGvU36tmJfYBd4hlBz9XqIp+cnyQY3sa1MklTED4uf4/1I
7mK59+jrivWjuNm1PDfiJ3hO09dqfyp+nL+H+KD+j2kC9nP+Tvh2/Kj2GWwr
3WLOvzF2sdzT+k9RE+wodl5u34jNr3t4jLvP3NbSO/zvx73SPO0JvIN5m4q7
xRyNMQ47hC3BMlRX+ypjTlVvnnqFfMe01+Lr8WHiFsZOtEvRUM0RfM2x8zwX
6D5sMPYd7xn1H6SRxp+n/n+xs+JCGo09iZWT21TeRqxY7hHshPw8bBLWHRso
fiHWC3s+N5173EMJfpRnPvYr7KZY9/z03htj22mM+DxfNblTjDVde0bMj36K
neX5Uu6LfG9hfzNe+xgbb8N/GntVvTXGf1h7HLXGx8VzpA5y38auxx4Sj6X3
1NiE/TvWXruOejvCy/NLGq39GLWXu5vvNqy+awN6IJ6dueQGk7cyfqd8fbCO
1Fv7Wbm79M1SP4evnvZrfMP09ebJw67OpL+/+B3ei5XGfhLrhw2NOWPdsWbx
/Oigeb7v+piag93vdt5V1Ijn79g+rKZxf4vVwD7C/ok1wKrSL7DJ8ifR2/p2
6HvHdYp4p3ZlnkrxO+c7iVVUZ4v4dX1b+O4yn0LzegmrTdfxrcJqWo9y/Jv5
Z/Cdxz5zD92ordwHxe/FWpt/F57Jcm+Q+z3+Nc8IephvgdyzfOW1W2tPiP2B
8vnn8MylbKyrvvZye5rL78V3xDuBlaUG2i/xFRnrabkXqTo21XiPahdRlq8h
tpTvcb75WLu8/78ySTf8VqoYa4r9h+cpHbcaq40xf6BvsFGxJ5jnwpgL7zye
J+gTNfbJS/Ba6lyBjRPOxs5RlUy6zrHe7/LcKHeKeE2808bYylMGq8H3J2Ps
5yvhKzHudfHssX7qHRDfxDdN3nT6ENumf3jsf+J18vvKHZGfruGEH9exHP1M
3oXYT/W3VXum9iPUGf+X/pFys/pW6VuNb1e7DXa3vlY8ddWsY657zWUxPohv
hvZ0+kQ8R25p17l8u/021lEtrDNfNWyAOq/ReDXuE2+mVjxXGmuFvIbGaIQN
41lJE/nuF++MOfNlXI/g3fi+UPOU/nOxptQRW8FbnS8vzi/1rsZq0VPaA3mu
4v+zvgxWgK0w76Pm97laA2kRNiQ3vce413hf471dis3U14HngPxj8l6NtYr9
SLyRr1o8Y7pGvXv45sTa628otxG1ZC5LjeWty0nPm1N8W/gmG2M1z/P66vFc
gS+T+yZfV/yy+DB9JqeFuBkdEneRW5Nvq7xtdI3cXjF2zJXnIv8F8a/pGaw3
ljVWnvnW5v0dVog1wNaoVR9bgrWI9886fuDalhZpf0PPxbkU73g8E/GX1I96
it/gW6Dd2nWhGnXUqmLc5ea32X20Mc5x8Q28t6nztHgpXwO+v8Z7iBVhj1Jb
7F2sEzZbPIvaYXuxLtjc2BfoZuwZNce6z71xfzFunGV8V2pXcC0wp/XGnE8T
5K6Q96S+mnIr8i4xv/XmdzN+RvwxHVKviXha7C985cum3y3x/XI9fkz8odqf
i1/k6cg/Crscz0Ncn6cEO4AVyH8Bq66vhbnsca2LPYuN4mtiThvz0nc93vkC
bIq+duIjeMv4HjPOJmw61pgGaZfXV0u91e7rkPYpnoVy71KvA/YP7Di2AOuB
tcWqUH/xFvxldauKr1WvUL0Tcf4Yf6n49TgD1M6JfZC/q/n+gF/Sv0nuE7HH
iL8LYW9g87A+4kpq3pubPvN49pXFF+mE+P6c9MyIs+NO3lmZdO3jGfQU78Gr
xvmH1Tb2bnEF6pubvgvxTlSM75z4HogzEZsY+5p4mfxO2HjspLrLxd/iJ8UD
qZe6t4gH0STt/dh4uc3jG6Rs+q7EO1Mkt1uckbQZy8MewqpZgzK8t4tfCaZG
f/Gb+gbw/cX1TjV7/nhexbn1fXwj6Mu6TnM/U+N8yKbfOwOz6d4be3CpbHpW
PeC6SzxN7ePxO4vzJ5uej3FOfhB7MdUV18tPv7nj23soX4G4Q3xLxe+ZZwM1
jt9ufEdk0ucWz+9SrBNWImd/vEP8feRdkn8uvgepFfYIXwsaIvcIzZdbLO7M
d7f5LZK7G5+NZdVrkkl/B/F7+DbehfhOworiO1i9AcZYHmes/mWut+N3UBe5
h+P8pMV8i+P/AjYmk659PIPxcV+xd2B75GzgW5eX7mOxn+2I70x9/WMvyEv/
J8T/hXNYs/hG5xvLt5OvD54v/pS2+y0WUz7/W3L/B7ueohc=
            "]], 
           Polygon3DBox[{{2551, 1254, 1105, 1104, 1445, 2160}, {1908, 1907, 
            2577, 1389, 1390, 2578}, {2035, 1297, 1393, 2581, 1913, 1914}, {
            2037, 1299, 1394, 2582, 1916, 1917}, {2309, 1616, 1203, 1204, 
            1617, 2310}, {2569, 1320, 1204, 1203, 1584, 2274}, {2227, 1530, 
            1150, 1151, 1531, 2228}, {1919, 1918, 2583, 1395, 1396, 2584}, {
            1923, 1922, 2609, 1556, 1557, 2610}}]},
          Annotation[#, "Charting`Private`Tag$10404#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, 
      {GrayLevel[1], EdgeForm[None], 
       StyleBox[
        GraphicsGroup3DBox[{
          Polygon3DBox[{{1014, 495, 1015}, {1029, 697, 1030}, {696, 746, 
           456}, {1018, 136, 1019}, {1035, 693, 1036}, {978, 1, 918}, {696, 
           745, 106}, {953, 318, 933}, {1022, 476, 1023}, {1032, 696, 1033}, {
           1015, 495, 1016}, {1012, 318, 953}, {746, 697, 456}, {1023, 476, 
           1024}, {1028, 697, 1029}, {2437, 121, 1925}, {933, 318, 979}, {
           1026, 121, 1027}, {1019, 136, 1020}, {1037, 438, 1039}, {1039, 438,
            942}, {1016, 495, 1017}, {697, 774, 456}, {2433, 106, 1904}, {745,
            696, 456}}], 
          Polygon3DBox[{{1024, 476, 904, 1025}, {1036, 693, 438, 1037}, {1904,
            438, 693, 2433}, {2473, 476, 1022, 2542}, {1030, 697, 746, 
           1031}, {2538, 1027, 121, 2437}, {986, 820, 1, 978}, {1033, 696, 
           106, 1034}, {1020, 136, 778, 1021}, {1031, 746, 696, 1032}, {2433, 
           693, 1035, 2537}, {1017, 495, 136, 1018}, {979, 318, 820, 986}, {
           1925, 774, 697, 2437}, {2542, 1021, 778, 2473}, {1025, 904, 121, 
           1026}, {2437, 697, 1028, 2538}, {2537, 1034, 106, 2433}}]}],
        Lighting->{{"Ambient", 
           GrayLevel[0.8]}}]}, 
      {GrayLevel[1], EdgeForm[None], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtkU0rRGEYht9zjoVTs1TWNspGdhZSs7ORhT+gZGPDXvkLCiv5iMFRWKlT
Cjv5GIWFkhhnZChDFoy96+m5F/dcb+95Pu73nq7x6dGpOITQhxK0x88wfIVl
FKHZKIQHmHG/BOs0ZLHfF6pZE8dU/wT70aPVo0F6d+EWuqb3G75pl+1cSEM4
hz+wBjeoOYJVWIIdsRuswF6ODc6L7NmHv/RUYQN+oorthENtPt/23KMBenNY
8G0FtmArdj/daC71PZ3wkO+n9F7AM/lomme+vcD31N8a6W13Ohd6359mWr35
XG8P4Vj+ny1L5WM53SZefwMP0Aj6QNv05syehz28ZYK7r8SzLytnO9eVSZa6
Z8uhKc+bytY82ZwdNEnfDFzVrBO4rMxr2n8Z+/9d0hzzYbmZf+u1rKzGcs6V
7RX8BwPmXLY=
           "]], Polygon3DBox[CompressedData["
1:eJwtkL9LgmEQgF89l29wC5ocXBpdHURwcQsH/wRpacm9PyKwxkgwK0ua0iAq
t4wsKANJQjDpF0ThYDq4+Rz3Dg/33Pe9d/feGy8U8xth51wMIvAjzuXgCH8l
fgbO3eAX+D/+QozCCkUdYkvP4gnO1PASZx7Jp3CI//FtDVLkfbEarZ1BV6xG
a/fJr/EPWCXfCTEbb2tN2O50BpdQIV/n/zF+5fOk3gMe/Kw5PON1SNMvROzB
ndg+uoPuMhCr1R7a+x0yfqc94onYLP2/iz+J3V13PMAbcE6/e/JbvCw2K+N7
TXiDsdj5bXwKQ7F93/DlwN5ad9zCv+FUbP8vfBTYP32HX7wqNmsJmvhmYL2c
vqXWE7N+5xFxAc66TNM=
           "]], 
          Polygon3DBox[{{2449, 181, 947, 967, 2450}, {2528, 930, 948, 532, 
           2446}, {2426, 361, 937, 924, 2527}, {2532, 970, 977, 761, 2470}, {
           2208, 837, 998, 993, 2533}}]}],
        Lighting->{{"Ambient", 
           GrayLevel[0.8]}}]}, {}, {}}, {
      {GrayLevel[0], 
       Line3DBox[{918, 1, 820, 318, 1012, 953, 933, 979, 986, 978, 918}], 
       Line3DBox[CompressedData["
1:eJwl00tsjFEYh/FDGfcqrdZ1qi4l6MWtaDvGlMokjTZxCWmRkFjY1LYrK4lI
bFgYsSmLLsUlLjsttaQL1GXa6YWFhjaUdCOR+H2RzJPn/77nfOec7+SbsrMX
DrdPCyF8QWJWCAVckhdCSi6VN88IYQsqUIkqVGMrtmE7dmB8Tgg7uQa7sBt7
UIs61COBvUhiH1KY8lwD78cBNOIgPjrDfWNxbnOOUTlf/5n6HjrRjZ/6d7kH
t9GHO/iO5/hh/Al/xQTGonXxOuoZ6+dXeIoX6MUDvMRNXHcPGfs/NrdcXeAM
i7AYhSjCpLElXIwSLMUyLMcKTBhfyasQRylWowxrsBZj5qzj9SjHBmzEJtyy
71tnOMq1052BP+m/0/ujTiCr7lcn5QH5vZySP/BgdJ9c7F0qo2flnN4QsvJx
vWF5QB7hwei+OcdVxob4s3o4+jasUa03Il+NhZC2xzn1qPokX1T3mfNG3cO9
/JAfcRd3cYZv8DW+zFe4g7vdQdoal9Tn1e3cyme4KXp/rudmruA0x7ljtjEf
8WnPLlSf4BbnaHPm/Oi91a3ygmiM53ON3jw+pp7LR9j2IWbNImOWDC16zdAK
hXqH5Fi0r72a5JlyoyyGTkWDbFoYNyln/6T6L/uFb3pZoU7vVPRdRt8uJvEL
vzGFTN7//+E/iLZrAA==
        "]], 
       Line3DBox[{768, 46, 736, 381, 863, 61, 837, 2208, 403, 76, 1095, 997, 
        939, 995, 996, 940, 2534, 993, 998, 992, 938, 980, 991, 926, 994, 925,
         957, 935, 956, 990, 2548, 924, 937, 923, 989, 955, 934, 988, 987, 
        954, 936, 361, 2471, 768}], 
       Line3DBox[{1904, 106, 745, 456, 774, 1925, 121, 904, 476, 2473, 778, 
        136, 495, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 2542, 1022, 
        1023, 1024, 1025, 1026, 1027, 2538, 1028, 1029, 1030, 1031, 1032, 
        1033, 1034, 2537, 1035, 1036, 1037, 1039, 942, 438, 1904}], 
       Line3DBox[{921, 166, 2327, 532, 780, 181, 2469, 756, 550, 781, 196, 
        2470, 761, 571, 868, 1065, 1004, 983, 949, 971, 977, 970, 2547, 952, 
        968, 982, 969, 976, 975, 932, 1006, 2546, 967, 947, 966, 1002, 931, 
        948, 930, 2539, 965, 946, 1001, 985, 921}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1853, 2420, 2421, 2154, 2407, 2550, 2801, 2461, 2422, 2423, 
        2156, 2724, 1999, 2361, 2155, 2158, 2725, 2000, 2157, 2424, 2425, 
        2159, 2001, 2362, 2595, 2636, 2002, 1854, 2574, 2637, 2161, 2003, 
        2363, 2789, 2160, 2551, 2726, 1855, 2069, 2163, 2727, 2004, 2364, 
        2162, 2638, 2005, 1856, 2164, 2166, 2728, 2006, 2365, 2165, 2639, 
        2007, 2490, 2596, 2640, 2008, 2167, 2575, 2641, 2366, 2009, 2474, 
        2598, 2642, 2010, 2168}], 
       Line3DBox[{1857, 2475, 2504, 2070, 2491, 2408, 2409, 2802, 2169, 2512, 
        2522, 2071, 2526, 2525, 1852, 2513, 2514, 2072, 2515, 2803, 2410, 
        2411, 2170, 2073, 2367, 2011, 1858, 2599, 2643, 2173, 2012, 2172, 
        2729, 2074, 2368, 2013, 1859, 2731, 2175, 2477, 2552, 2730, 2176, 
        2075, 2369, 2553, 2702, 1860, 2644, 2014, 1861, 2076, 2179, 2733, 
        2015, 2370, 2178, 2645, 2016, 1862, 2600, 2646, 2181, 2017, 2180, 
        2597, 2647, 2018, 1863, 2734, 2182, 2371, 2019, 1864}], 
       Line3DBox[{1870, 2027, 2373, 2183, 2735, 1869, 2026, 2651, 1868, 2025, 
        2372, 1369, 2198, 2024, 2650, 2197, 1867, 2023, 2649, 2080, 2195, 
        2739, 2558, 2196, 2194, 1866, 2732, 2557, 2177, 2192, 2704, 2556, 
        2193, 2079, 2705, 1865, 2022, 2174, 2738, 2190, 2021, 2191, 2078, 
        2737, 2189, 2020, 2648, 2171, 2187, 2703, 2555, 2188, 2077, 2427, 
        2185, 2736, 2554, 2186, 2184, 2476, 1817, 2492, 2493, 2540}], 
       Line3DBox[{1876, 378, 1509, 399, 398, 2746, 1875, 377, 1506, 396, 395, 
        1874, 2745, 393, 603, 1691, 250, 1873, 2742, 391, 601, 1689, 249, 
        1500, 390, 389, 2741, 1872, 248, 1495, 386, 385, 1871, 2706, 247, 382,
         1493, 246, 379, 1492, 245, 1082}], 
       Line3DBox[{1889, 2028, 2652, 1888, 2094, 2207, 2093, 2709, 1887, 2674, 
        2559, 1886, 2092, 2206, 2091, 1885, 2601, 2673, 2214, 1884, 2708, 
        2090, 2205, 2089, 1883, 2747, 2212, 2211, 1882, 2743, 2204, 2376, 
        2203, 2744, 1881, 2505, 2088, 2478, 2087, 2707, 1880, 2202, 2375, 
        2201, 2740, 1879, 2429, 2086, 2200, 2085, 1878, 1494, 2374, 2199, 
        1877, 2628, 2804, 2084, 2462, 2083, 2428, 2472, 1788, 2082, 2494, 
        2081, 2549}], 
       Line3DBox[{1902, 2517, 2516, 2818, 1901, 2217, 2378, 2790, 2602, 1900, 
        2233, 2678, 2605, 1899, 2216, 2377, 2215, 1898, 2576, 2677, 2101, 
        1897, 1534, 2479, 2230, 1896, 2791, 2100, 2213, 2099, 1895, 2749, 
        2228, 2227, 2750, 1894, 2098, 2210, 2097, 2710, 1893, 2225, 2676, 
        2604, 1892, 2096, 2209, 689, 1891, 878, 2675, 2481, 2095, 1890, 2817, 
        898, 899, 687, 773, 1790, 686, 836, 835, 2480}], 
       Line3DBox[{1924, 2519, 2520, 2518, 2819, 2609, 1922, 2684, 2561, 1920, 
        2109, 2234, 2752, 2583, 1918, 2683, 2560, 1916, 2582, 2682, 2232, 
        2107, 1915, 2607, 2681, 2246, 1913, 2581, 2680, 2231, 2105, 1912, 
        2755, 2242, 1545, 1910, 2104, 2229, 2751, 2579, 1909, 2103, 2226, 
        2748, 2577, 1907, 2223, 2380, 2222, 1906, 2434, 2805, 2629, 2221, 
        2102, 1905, 2603, 2679, 2379, 2219, 1903, 1751, 2432, 2218, 2431, 
        2430, 2529}], 
       Line3DBox[{1929, 2052, 1559, 2266, 2051, 2665, 2612, 1928, 2050, 2664, 
        2608, 2264, 2049, 2265, 2263, 1927, 2048, 2663, 2249, 2261, 2047, 
        2758, 2262, 2111, 1926, 1306, 2245, 2259, 2711, 2563, 2260, 2110, 
        2757, 2258, 2046, 2662, 2611, 2387, 2045, 2257, 2661, 2585, 2255, 
        2044, 2256, 2254, 2482, 2043, 2794, 2386, 2439, 2438, 2464, 2042, 
        2756, 2413, 2252, 2497, 2496, 2250, 2816, 2562, 2502, 2385, 2531, 
        2543}], Line3DBox[{1937, 2060, 2280, 2795, 2391, 2059, 2392, 1589, 
        1936, 2058, 2669, 1935, 2057, 2390, 2116, 1934, 2056, 2668, 1933, 
        2714, 2566, 2389, 2115, 2276, 2762, 2565, 2277, 2275, 1932, 2713, 
        2564, 2388, 2114, 2760, 2272, 2055, 2273, 2271, 2759, 1931, 2054, 
        2667, 2586, 2269, 2418, 2417, 2270, 2113, 1930, 2053, 2666, 2253, 
        2268, 2626, 2712, 2416, 2465, 2112, 2440, 2267, 2811, 2415, 2414, 
        2405, 2251, 2463, 2535}], 
       Line3DBox[{1938, 2441, 2117, 2466, 2419, 2715, 2627, 2282, 2442, 2118, 
        2393, 2567, 2716, 2484, 2285, 2287, 2568, 2764, 2286, 2443, 2119, 
        2290, 2061, 2395, 2796, 2289, 2062, 2292, 2765, 2120, 2294, 2063, 
        2293, 2766, 2274, 2569, 2761, 1939, 2121, 2297, 2570, 2717, 2296, 
        2278, 2571, 2763, 1940, 2299, 2301, 2572, 2767, 2300, 2279, 2670, 
        2064, 1941, 2768, 2303, 2065, 2304, 2769, 2281, 2066, 1942, 2671, 
        2067, 1943}], 
       Line3DBox[{1957, 2323, 2322, 2779, 1956, 2320, 2319, 2777, 1955, 2318, 
        2317, 2776, 1954, 2315, 2686, 2314, 1953, 2797, 2135, 2302, 2134, 
        1952, 2685, 2573, 1951, 2720, 2133, 2298, 2132, 1950, 2774, 2310, 
        2309, 2773, 1949, 2131, 2295, 2130, 2719, 1948, 2129, 2128, 2718, 
        1947, 2127, 2291, 2126, 2445, 1946, 2444, 2807, 2125, 2288, 2124, 
        1945, 2770, 2284, 2394, 2283, 2467, 1944, 2630, 2806, 2123, 2499, 
        2122, 2506, 2498, 2485}], 
       Line3DBox[{1970, 2325, 2399, 2324, 2780, 1969, 2068, 2672, 1968, 2141, 
        2321, 2778, 2589, 1967, 2340, 2689, 2339, 1966, 2613, 2688, 2398, 
        2316, 1965, 2783, 2337, 2336, 1964, 2775, 2313, 2397, 2312, 1963, 
        2782, 2140, 2311, 2139, 2721, 1962, 2308, 2396, 2307, 2772, 1961, 
        2138, 2306, 2771, 2588, 1960, 2332, 2687, 2331, 1959, 2448, 2587, 
        2812, 2468, 2137, 2447, 2503, 2634, 2820, 2521, 2329, 2524, 2328, 
        2523, 1958, 2814, 2486, 2136, 2305, 2545}], 
       Line3DBox[{1984, 2342, 2400, 2341, 2784, 1983, 2355, 2695, 2620, 1982, 
        2353, 2694, 2619, 1981, 2509, 2510, 2489, 2148, 1980, 2617, 2693, 
        2351, 1979, 2592, 2692, 2338, 2147, 1978, 2787, 2350, 2349, 1977, 
        2722, 2146, 2335, 2145, 2723, 1976, 2346, 2691, 2615, 1975, 2144, 
        2334, 2781, 2591, 1974, 2507, 2508, 2488, 2143, 1973, 2590, 2690, 
        2333, 2453, 2452, 1972, 2631, 2808, 2451, 2330, 2142, 1971, 2785, 
        2500, 2501, 2326, 2541}], 
       Line3DBox[{1998, 2360, 2701, 2624, 1997, 2153, 2356, 2788, 2594, 1996, 
        2511, 2700, 2635, 1995, 2152, 2354, 2151, 1994, 2623, 2699, 2359, 
        1993, 2618, 2698, 2403, 2352, 1992, 2622, 2697, 2358, 1991, 2815, 
        2348, 2402, 2799, 2616, 1990, 2150, 2347, 2786, 2593, 1989, 2345, 
        2401, 2798, 2614, 1988, 2459, 2460, 2344, 2149, 1987, 2621, 2696, 
        2487, 2357, 1986, 2633, 2810, 2458, 2343, 2457, 2456, 1985, 2632, 
        2809, 2455, 2406, 2454, 2536}], 
       Line3DBox[{2495, 2041, 2384, 2660, 2610, 1923, 2040, 2659, 1921, 2039, 
        2383, 2658, 2584, 1919, 2038, 2657, 1917, 2037, 2793, 2382, 2108, 
        2248, 2036, 2813, 2483, 2247, 1914, 2035, 2792, 2381, 2106, 2243, 
        1296, 2244, 2656, 2606, 1911, 2034, 2655, 2580, 2240, 2033, 2241, 
        2654, 2578, 1908, 2032, 2653, 2224, 2238, 2031, 2754, 2625, 2239, 
        2436, 2435, 2237, 2030, 2800, 2404, 2220, 2235, 2029, 2753, 2412, 
        2236, 2530, 2544}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{325, 228, 2159, 327, 235, 2367, 592, 345, 2648, 1129, 385, 
        387, 2200, 253, 408, 2209, 261, 607, 2380, 423, 2653, 1170, 460, 2256,
         462, 279, 2270, 480, 286, 2290, 501, 2291, 291, 1215, 2687, 536, 811,
         2488, 304, 554, 2344, 311, 577}], 
       Line3DBox[{1099, 1441, 1678, 1442, 2636, 1100, 1458, 1459, 2643, 1461, 
        1363, 1480, 2737, 1364, 1482, 1372, 1495, 1373, 1688, 1496, 2740, 
        1514, 1497, 1149, 2676, 1526, 1527, 1529, 2748, 1389, 1390, 2654, 
        1544, 1399, 1563, 1400, 2661, 1566, 1404, 1577, 1405, 2667, 1192, 
        1598, 1701, 2796, 1599, 1202, 1414, 2718, 1415, 1613, 2771, 1421, 
        1633, 1422, 1635, 2781, 1429, 1645, 1430, 1708, 2798, 1646, 1668, 
        1647, 1244}], 
       Line3DBox[{1101, 1352, 1353, 2637, 1446, 1358, 1460, 2729, 1359, 1683, 
        1462, 1481, 2738, 1463, 1130, 1498, 2741, 1499, 1804, 1378, 2707, 
        1379, 1516, 1384, 2710, 1528, 1385, 1533, 2751, 1391, 1543, 1392, 
        2655, 1171, 1564, 1697, 1565, 2662, 1181, 1578, 2759, 1579, 1581, 
        1410, 1600, 2765, 1411, 1602, 1416, 2719, 1612, 1417, 1702, 1614, 
        2772, 1634, 1615, 1225, 2691, 1648, 1649, 1651, 2786, 1435, 1813, 
        1834, 1833, 1814}], 
       Line3DBox[{1102, 1443, 1679, 2789, 1445, 1104, 1464, 2731, 1466, 1803, 
        1365, 2705, 1366, 1484, 1374, 1500, 1376, 1690, 1502, 2744, 1515, 
        1504, 1150, 1530, 2750, 1693, 1532, 1160, 1545, 1547, 2656, 1549, 
        1401, 1567, 2757, 1403, 1569, 1406, 1580, 2760, 1408, 1698, 1582, 
        1601, 2766, 1584, 1203, 1616, 2773, 1618, 1620, 1423, 2721, 1425, 
        1637, 1431, 2723, 1650, 1433, 1709, 2799, 1652, 1669, 1654, 1245}], 
       Line3DBox[{1107, 1447, 1256, 2638, 1108, 1262, 2644, 1122, 1485, 1486, 
        2739, 1269, 1133, 1377, 1691, 1277, 1142, 1380, 2708, 1284, 1153, 
        1534, 1292, 1163, 2681, 1551, 1552, 1298, 2813, 1174, 879, 1570, 1307,
         2758, 1184, 1409, 2714, 1314, 1195, 1587, 2763, 1322, 1206, 2685, 
        1329, 1218, 1638, 2783, 1639, 1336, 1228, 2692, 1434, 1710, 1343, 
        1237, 2698, 1658, 1350, 1248}], 
       Line3DBox[{1109, 1448, 1681, 1257, 2728, 1110, 1361, 1684, 1263, 2733, 
        1123, 1367, 1270, 2649, 1134, 1505, 2745, 1278, 1143, 2673, 1519, 
        1520, 1285, 1154, 2677, 1387, 1535, 1293, 1164, 2682, 1394, 1299, 
        2793, 1175, 1553, 1308, 2663, 1185, 1315, 2668, 1196, 1604, 1605, 
        2767, 1323, 1207, 1419, 2797, 1703, 1330, 1219, 2688, 1622, 1337, 
        1229, 2693, 1657, 1344, 1238, 2699, 1672, 1673, 1351, 1249}], 
       Line3DBox[{822, 334, 2639, 1111, 353, 2645, 1124, 375, 2650, 1135, 395,
         397, 2206, 256, 604, 2377, 416, 1165, 2683, 1300, 2657, 1176, 470, 
        2265, 472, 283, 2390, 619, 489, 2670, 1208, 2686, 524, 1220, 2689, 
        546, 812, 2489, 308, 565, 2354, 313, 815}], 
       Line3DBox[{1112, 1449, 1816, 1450, 2640, 1113, 1469, 1470, 2646, 1472, 
        1368, 1487, 1369, 1686, 1488, 1506, 1489, 1144, 2674, 1286, 1155, 
        2678, 1536, 1537, 1539, 2752, 1395, 1396, 2658, 1695, 1554, 1571, 
        1555, 2664, 1186, 1316, 2669, 1197, 1606, 2768, 1607, 1209, 1623, 
        2776, 1624, 1627, 2778, 1426, 1640, 1427, 1230, 2694, 1659, 1711, 
        1660, 1239, 2700, 1835, 1836, 1250}], 
       Line3DBox[{1114, 1354, 1451, 1355, 2641, 1682, 1452, 1471, 1453, 2647, 
        1125, 1271, 2651, 1136, 1507, 2746, 1508, 1510, 1381, 2709, 1382, 
        1692, 2790, 1521, 1538, 1522, 1166, 2684, 1301, 2659, 1177, 1572, 
        1573, 2665, 1187, 1588, 1589, 1700, 1592, 1608, 2769, 1593, 1210, 
        1625, 2777, 1704, 1626, 1221, 1338, 2672, 1231, 2695, 1661, 1662, 
        1664, 2788, 1436, 1837, 888, 1815}], 
       Line3DBox[{1115, 1454, 1799, 1455, 2642, 1116, 1473, 2734, 1474, 1685, 
        1475, 2735, 1476, 1687, 1490, 1509, 1491, 1145, 1287, 2652, 1156, 
        1843, 2818, 1844, 1845, 2819, 1556, 1557, 2660, 1696, 1558, 1574, 
        1559, 1188, 1590, 1699, 2795, 1591, 1198, 1324, 2671, 1211, 1628, 
        2779, 1629, 1705, 1630, 2780, 1631, 1707, 1641, 2784, 1663, 1642, 
        1240, 2701, 1674, 1675, 1676}], Line3DBox[CompressedData["
1:eJwV0D0oxXEUh/FzudfLVQYk5IpBJpONycZqVBaDgSKDxWYw28lo9jJIUWK4
icLgdcFNUQwuV17y+rnD0/ec85zT/9e/bXhiYDwREaO4TEb0piLeyyL2MIN7
pMoj7uRnOuLYTo+drH4MLVzOPCOzXBfXrK5BHX65WrnFdXK7bvrxZp6TN1jm
2rlX9Q4WuG55jVK3V3LJTsZOQf3Fb8sOJPgSBObt1NuJqohWfQM/pZ8z33FT
rd40S+IC55jlKszz6g0U1GfyF6eY5v/wpF4v/g/+W/4U34FJ7gNNvnfCDWJE
n0ejWQXSqMSQ2QNevGXN7Yrdo+J/xSH6uFs884/6VSzaOZAf2McD/gHh9EH0

        "]], Line3DBox[CompressedData["
1:eJwV0L8rxHEcx/H31R1hwCSLOkqmCykDk41u8gfoslhEWQx2mzIqRplvkYkM
zqUY7rActlNEQpew8PgMz96f14/P5/P9fvKLq/MrmYgooZGNmMlFXLRFlPGM
J/x2RtRk07LJ9ogqbxmPyNJN81unqjOh80VXUEp5V8SgzhDyONYp6MzJ6vZM
pbt4w7w9ulunFz044A/wT3V2ZCPmA+6xKzvj9ck/6RP04w5/aGBb5z2dqZOj
W+Y6vcnvsB51xzgyvnHM3OAH/yj9t9nSvbG+xprsB2/Wh7iV19PboIYl2QfK
9pzLKligX9K7ObuAIm+W3tdpmlv2XeESr/gHUH46Hw==
        "]], 
       Line3DBox[CompressedData["
1:eJwVzz8ohHEcx/HvlTul3CwGmdhMp/NvspHlFsMNykK6GNRNptPFoERGOYuU
TSzkDCgGgwxKNjJQhqNLyeD1DO8+38+f51dPz8xiYSEVEVN4bokYS0esZCIq
WGuLeJANtUYMYxB5bNtUdLe6nPvQdp3+yZruV1zorumA/RWdwI++avfiPtL3
uu9ko/wIDmTzfLe8k9/hP/gOvt07ZdpFs9jUXerqdg2cI4OSzRNt6lZtztyn
iZfPYkne5/tlXYp/x2OS87/Y0hf5OfcXNvgbvoBP79xjWn5C+73zrT9O/kc/
iXHdvuyN7vG7qOEfa240TQ==
        "]], 
       Line3DBox[{1246, 1348, 1823, 2815, 1653, 1235, 1341, 2722, 1432, 1226, 
        1334, 1636, 2782, 1424, 1216, 1327, 1619, 2774, 1617, 1204, 1320, 
        2761, 1583, 1193, 1312, 2713, 1407, 1182, 1305, 2711, 1568, 1402, 
        1172, 1296, 1548, 2755, 1546, 1161, 1290, 2749, 1531, 1151, 1282, 
        2743, 1503, 1140, 1275, 1689, 1375, 1131, 1267, 2704, 1483, 1831, 
        1830, 1120, 1260, 2730, 1467, 1465, 1105, 1254, 2726, 1444, 1103}], 
       Line3DBox[{1247, 1349, 1671, 1670, 2697, 1236, 1342, 1656, 2787, 1655, 
        1227, 1335, 2775, 1621, 1217, 1328, 2720, 1418, 1205, 1321, 2717, 
        1603, 1412, 1194, 1313, 2762, 1586, 1585, 1183, 1306, 1550, 1173, 
        2792, 1297, 1393, 2680, 1162, 1291, 1694, 2791, 1386, 1152, 1283, 
        1518, 2747, 1517, 1141, 1276, 2742, 1501, 1132, 1268, 2732, 1468, 
        1121, 1261, 2702, 1360, 1106, 2727, 1255, 1680, 1829, 1828, 
        1798}]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
kG2eF/duxtS3Y1IyRlSY/HleXfZ2E8puTF3HqlWK4/f87t1spYF9qvxCmFcb
+lrnlH8PaMdItpkQGUYqlMiX88uplIGEbOrYEzLvUM2Mz9aTfDhQpmtGbA8B
yy6hEfpaK0wob1vxIrnrF+VQ2NvzIdjZLGT7VNcLo6dYNy6T+/VX1mo6654B
H2sO9PU0fYFp/XZ+ahMB9BYjA6LV1ZjteSV23LsGt+wJVfLvooHqDmeJOtN4
pH18p15nnYLtw+oJ7GRePukiGBIsXIoiT8NaWW6UofWmKlFr0tfKjpZfT1yr
gWi2y9vb5Wvh/HHLosxiGjg+cAqlsBWAfiyzjnJUIVxLNH6pHEMAR5F0G6t2
JeY2XT9zvKUCB4trOj6IE8Aqn6Zk9rQQtKR3bX+iWgBXWTyvbyHv38VZWTZv
XIxRO29lCUhmwWKjVpoByYe5G2ZFEs2SIUH4qrhfbA+4JAp1yL6kwjz3VqmV
IwPo9qNxo+CZPqy99zVrwG8G2NUEHE+fy8djssriMv5lmLWxh/+IFwH6mnez
N+U2YJJzFStdbgue1B8NFCZzxFv91FcZTO1wHSoaM3+0whDhkRF1ggpbGMLp
ExpaofDbeUY7xjY42kwT2KFHBfXmp8uihZVgfUJ2X0MaBfwmuOt02QlQmJVR
eeXZBK991M/Z/2yGaVYDh+0baKDZdeLnmn4zGjr2dR4Wa8aOd6eMekh+498k
+UJOkqzztZSc04pFKKkucefEa5KHvz90kVerA37FhKuXh2vhV//ksakoGjy8
cFeKOyUK2uU27vQa/AQCXM4RM79JzuG58pNxIQY5VvNH7M5FosbX2syL5Fya
0yth15QNJ3X8WNzifDT8vZ7S8pzsI4WwLjrX3jKMW98xE3G7HH3ppre8VSfA
z7UmV+DOO/TsdHcaZfqAbyI9T20n9ZboEz0TXPcFd67svCy/JxfnVBQNY0sJ
oCXpmjMnD2CqZ30Yk3A7RhdaPZn5OQsXmup/xM6PILe7Lm9mWRkqnrxt+bdu
9j/76LLGlR+hMp14mqlmSx2tC+WCzLUy5uagsbFMIHNbFazf7lqkVofw63Bv
YMM1Agq3tn3vfhcPVSH2ek0cDnhlLCpfiazDyPpVPRGtSOTWuKv8zcYXu7wP
R5f/JWD4Qfnt+4yZ8FSxeWl7eS6oFGpwnK8hYG9p7ehX4Vq8bqHOUMlXh1+l
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
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{509.96403988164286`, 498.},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{0.1, 20}, {0, 10}, {-0.855453414357785, 0.8575519384638478}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.10864953522309072`, -2.9051383152836876`, 
   1.7315792351395478`},
  ViewVertical->{0.01912481199477935, 0.5113710241332223, 
   0.859147203477439}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.827920725342346*^9, 3.8279207813130913`*^9, 
  3.827921301321766*^9, 3.827921407285784*^9, 3.82794288164736*^9, 
  3.8279436089927397`*^9, 3.827943657704378*^9, 3.827943961529915*^9, 
  3.827944127530282*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"7117709d-fdb1-4e55-aaf9-39d97ebd7cd1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{"psiSolution1", ",", "R"}], "]"}], " ", "//", " ", 
  "pdConv"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{"psiSolution1", ",", "T"}], "]"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellChangeTimes->{{3.827944216787176*^9, 3.8279442704327173`*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"1c077e9c-86dd-44a4-a849-fac74d28e8f3"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", 
     RowBox[{"\[Psi]", "(", 
      RowBox[{"R", ",", "T"}], ")"}]}], 
    RowBox[{"\[PartialD]", "R"}],
    MultilineFunction->None], "\[Rule]", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      TemplateBox[{"1", "R"},
       "BesselJ"], " ", 
      RowBox[{"sin", "(", "T", ")"}]}]}], "-", 
    RowBox[{
     TemplateBox[{"1", "R"},
      "BesselY"], " ", 
     RowBox[{"cos", "(", "T", ")"}]}]}]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.827944214127624*^9, 3.827944270945689*^9}},
 CellLabel->
  "Out[154]//TraditionalForm=",ExpressionUUID->"60fb508a-eb28-49c3-802c-\
6ed94e76b505"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", 
     RowBox[{"\[Psi]", "(", 
      RowBox[{"R", ",", "T"}], ")"}]}], 
    RowBox[{"\[PartialD]", "T"}],
    MultilineFunction->None], "\[Rule]", 
   RowBox[{
    RowBox[{
     RowBox[{"cos", "(", "T", ")"}], " ", 
     TemplateBox[{"0", "T"},
      "BesselJ"]}], "-", 
    RowBox[{
     RowBox[{"sin", "(", "T", ")"}], " ", 
     TemplateBox[{"0", "T"},
      "BesselY"]}]}]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.827944214127624*^9, 3.827944270948358*^9}},
 CellLabel->
  "Out[155]//TraditionalForm=",ExpressionUUID->"9881b68c-1fe9-4211-9a20-\
7a1121b82c56"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{"DSolve", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"vacuumEquations", "[", 
        RowBox[{"[", "2", "]"}], "]"}], " ", "/.", " ", 
       RowBox[{"D", "[", 
        RowBox[{"psiSolution1", ",", "R"}], "]"}]}], " ", "/.", " ", 
      RowBox[{"D", "[", 
       RowBox[{"psiSolution1", ",", "T"}], "]"}]}], "  ", ",", " ", 
     RowBox[{"\[Gamma]", "[", 
      RowBox[{"R", ",", "T"}], "]"}], " ", ",", " ", 
     RowBox[{"{", 
      RowBox[{"R", ",", "T"}], "}"}]}], "]"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.827944196977333*^9, 3.827944197579237*^9}, {
  3.827944273841646*^9, 3.827944335494125*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"15958b28-4674-45e5-90b6-d80cce5b3a31"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Gamma]", "[", 
   RowBox[{"R", ",", "T"}], "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"1"},
     "C"], "[", "R", "]"}], "+", 
   TemplateBox[{
     RowBox[{"(", 
       RowBox[{
         RowBox[{"R", " ", 
           RowBox[{"BesselJ", "[", 
             RowBox[{"1", ",", "R"}], "]"}], " ", 
           RowBox[{"BesselY", "[", 
             RowBox[{"0", ",", 
               RowBox[{"K", "[", "1", "]"}]}], "]"}]}], "-", 
         RowBox[{"R", " ", 
           RowBox[{"BesselJ", "[", 
             RowBox[{"0", ",", 
               RowBox[{"K", "[", "1", "]"}]}], "]"}], " ", 
           RowBox[{"BesselY", "[", 
             RowBox[{"1", ",", "R"}], "]"}]}], "-", 
         RowBox[{"R", " ", 
           RowBox[{"BesselJ", "[", 
             RowBox[{"1", ",", "R"}], "]"}], " ", 
           RowBox[{"BesselY", "[", 
             RowBox[{"0", ",", 
               RowBox[{"K", "[", "1", "]"}]}], "]"}], " ", 
           RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
               RowBox[{"K", "[", "1", "]"}]}], "]"}]}], "-", 
         RowBox[{"R", " ", 
           RowBox[{"BesselJ", "[", 
             RowBox[{"0", ",", 
               RowBox[{"K", "[", "1", "]"}]}], "]"}], " ", 
           RowBox[{"BesselY", "[", 
             RowBox[{"1", ",", "R"}], "]"}], " ", 
           RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
               RowBox[{"K", "[", "1", "]"}]}], "]"}]}], "-", 
         RowBox[{"R", " ", 
           RowBox[{"BesselJ", "[", 
             RowBox[{"0", ",", 
               RowBox[{"K", "[", "1", "]"}]}], "]"}], " ", 
           RowBox[{"BesselJ", "[", 
             RowBox[{"1", ",", "R"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
               RowBox[{"K", "[", "1", "]"}]}], "]"}]}], "+", 
         RowBox[{"R", " ", 
           RowBox[{"BesselY", "[", 
             RowBox[{"0", ",", 
               RowBox[{"K", "[", "1", "]"}]}], "]"}], " ", 
           RowBox[{"BesselY", "[", 
             RowBox[{"1", ",", "R"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
               RowBox[{"K", "[", "1", "]"}]}], "]"}]}]}], ")"}], 
     RowBox[{"K", "[", "1", "]"}], "1", "T"},
    "InactiveIntegrate",
    DisplayFunction->(RowBox[{
       SubsuperscriptBox[
        StyleBox["\[Integral]", "Inactive"], #3, #4], 
       RowBox[{#, 
         RowBox[{
           StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
    InterpretationFunction->(RowBox[{
       RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
       RowBox[{#, ",", 
         RowBox[{"{", 
           RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]}]}]], "Output",
 CellChangeTimes->{
  3.827944197869773*^9, 3.827944288186077*^9, {3.8279443193986387`*^9, 
   3.827944336331648*^9}},
 CellLabel->
  "Out[159]=",ExpressionUUID->"0d919c49-29a9-4393-865b-26a07700b0bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "gammaSolution2", "]"}], "\[IndentingNewLine]", 
 RowBox[{"gammaSolution2", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"DSolve", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"vacuumEquations", "[", 
          RowBox[{"[", "3", "]"}], "]"}], " ", "/.", " ", 
         RowBox[{"D", "[", 
          RowBox[{"psiSolution1", ",", "R"}], "]"}]}], " ", "/.", " ", 
        RowBox[{"D", "[", 
         RowBox[{"psiSolution1", ",", "T"}], "]"}]}], "  ", ",", " ", 
       RowBox[{"\[Gamma]", "[", 
        RowBox[{"R", ",", "T"}], "]"}], " ", ",", " ", 
       RowBox[{"{", 
        RowBox[{"R", ",", "T"}], "}"}]}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], " ", "/.", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"C", "[", "1", "]"}], "[", "T", "]"}], "\[Rule]", " ", "0", 
    " "}]}]}]}], "Input",
 CellChangeTimes->{{3.827944346508643*^9, 3.827944388036079*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"905fe767-9a8a-4722-a44d-34100dbc20bc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Gamma]", "[", 
   RowBox[{"R", ",", "T"}], "]"}], "\[Rule]", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"MeijerG", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             FractionBox["3", "2"]}], "}"}], ",", 
           RowBox[{"{", 
            FractionBox["1", "2"], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             FractionBox["1", "2"]}], "}"}]}], "}"}], ",", "R", ",", 
         FractionBox["1", "2"]}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "T"}], "]"}]}], 
      SqrtBox["\[Pi]"]], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["R", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"BesselJ", "[", 
           RowBox[{"0", ",", "T"}], "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "T", "]"}], "2"]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"BesselY", "[", 
           RowBox[{"1", ",", "R"}], "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "T", "]"}], "2"]}], "-", 
        RowBox[{
         RowBox[{"BesselY", "[", 
          RowBox[{"0", ",", "R"}], "]"}], " ", 
         RowBox[{"BesselY", "[", 
          RowBox[{"2", ",", "R"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "T", "]"}], "2"]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"BesselJ", "[", 
           RowBox[{"1", ",", "R"}], "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "T", "]"}], "2"]}], "-", 
        RowBox[{
         RowBox[{"BesselJ", "[", 
          RowBox[{"0", ",", "R"}], "]"}], " ", 
         RowBox[{"BesselJ", "[", 
          RowBox[{"2", ",", "R"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "T", "]"}], "2"]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"BesselY", "[", 
           RowBox[{"0", ",", "T"}], "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "T", "]"}], "2"]}], "-", 
        RowBox[{
         RowBox[{"BesselJ", "[", 
          RowBox[{"0", ",", "T"}], "]"}], " ", 
         RowBox[{"BesselY", "[", 
          RowBox[{"0", ",", "T"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "T"}], "]"}]}]}], ")"}]}]}], ")"}]}]}]], "Output",\

 CellChangeTimes->{{3.827944349186775*^9, 3.827944389819511*^9}},
 CellLabel->
  "Out[163]=",ExpressionUUID->"afecc180-0523-467b-af69-02fc1f671ce2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RevolutionPlot3D", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", " ", 
     RowBox[{
      RowBox[{"\[Gamma]", "[", 
       RowBox[{"R", ",", "T"}], "]"}], " ", "/.", " ", "gammaSolution2"}], 
     "  ", "]"}], "  ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"R", ",", "0.1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"T", ",", "0", ",", "5"}], "}"}]}], "]"}], " ", "//", " ", 
  "Timing", " "}]], "Input",
 CellChangeTimes->{{3.827944523320219*^9, 3.827944527461396*^9}, {
  3.827944568871647*^9, 3.8279445717108107`*^9}, {3.8279456778941402`*^9, 
  3.8279456802845993`*^9}},ExpressionUUID->"90209109-11a1-4b65-832c-\
47ad4ce520fc"],

Cell[BoxData[
 Graphics3DBox[{{GraphicsComplex3DBox[CompressedData["
1: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
NpSJoK9Pmc6Yp0DnKWv62HIqokFtWt1Igplol5Q2p7FdgCd6ZEuetEnsI9Eg
4XKclegTmV+7MjULXVnNp3iVZjDTk0iBsxvsxK9kR5fDR+fA6smexw5XaIik
KaETlfasRKxskEcBLIL7jwzrXZEUrH/nIx3fRU7ijrDcXPiHOZjI7J3VXaQl
nBKOm6Hv7MQnoNC+kV+CnbW+vvsXZjGLMAvZ+ysXMbSyduHvxDzo0QYWyieV
YoXPorvVrvfj/zpIqewrz/G5wXe7vZ+HY52Ykrq8Z3V4yJu/z323CX6VkWBz
fU8M/s+oSH2uNh8rqrzvb5D8gP0nz/aH7CuE1z+VdH9ST+Pcy1QbrH8IaOPZ
P08f3oxV4ptau7SWME00k1CnVg60nzRiab1fAjmZb4WWuRbwuqVMumvSP5gV
X0oeN6kA4ScJnGzbuttybpkuau0BxpVYzU3Favix15gmTIhEvNMZ0vmxYwwS
drhxzAWO4iNCWYryioxE3gvrMQoLBX65l87kfuuAVb3P86M3OIjbw8UWLswk
VKP3ammPziyW/tnuXU3PRaSNWoVW7Z2H5lE+DUK6GyLV7R3kqjiJR2+avp5M
I6M7pve45ZPm8NQ9dXfV69yEYdnxLiOqRbgn/bXMsqYH5LYx7L4cN1F40VRZ
ZJkanVHbOaeznA1TIatDAT21+OjXtfP0kc9wyLLvjLu+H3wb4I3PdijA3LOW
lcFMntie/5Oeq34uKC7KG2U4jGL73VfRH7UcMFK887JwthMqS0KzWQQ5iQMC
xmdky0ko47SFwzX5HriaayR/9jEXYZff+dWokAop0jIJ3rTuhfVUzs8ve7kJ
5djcph2XaJHqE/1CjqEFiEiqvNPmyUXEXVtY/N5Nj+zYaa4oHpkE3SRe/ve1
jbCvz1N5qG0MZOiXvxZ3zIGyelmBRVInKCmutn1SXoL3dFPqvcIrEG6tJste
3AfLj2qtj5wiI0G6gVKaS5vArBS2dSdlCPI2ls4KSzCgSqo7e3hqyMiLNFZb
/WIMWjd7g+Y0OJA31chIki0NWq3STNjvNgUhrw62GRjzIg2q658Os9Cjgqpq
VR0FCogf9mWxNxVGK+Suu78+MiKnLy4J96XmYMq5X2FYUAzlkM0ULp1gQfIv
dzMn7lyAI2lMeygdu5EduWFxYowNTbjVOtZzLcFaK/Mc6pBCkR6Sl6GMA6Ve
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
qfhzasT/9/AUyX8DPM5w8yv4MhJPT2nPsPtyoKyDjtLTuRTkVecgvteJg4jg
jE0SeMOAVPIa/x5UpkevpEsqlAP/4vqjWq6F0wRYvnnRRND9xiLWax88NJqw
/fdkpk7mHDjknzaWS/zBwjtj3rkH0BHanVO16er/YNef78V2CZOwZbDy/p0W
I2GzKZP+361x2Du5ce288jR0+er4uG3zQdDu+59m3KfgvXg+13n1WUguqjx3
vINC7P5P0TuTfRHMmJgcTbW2gF3Mescb0WZ8f9Tzdu5CED4Xu6umLKgUUxy/
vckKyMaGDXTJCrJXYM32006aqBHMbFDLLLxdXylOlrRPhkZwbrEsY/UWE7p5
k5K3msdFEEcSGuKr/uGCC/z6T4VYENOaj2R1B5mo/flS1tOURDRnupypjGRB
qU7p8kfFOvDO1pfc3+cm8fIxz72yC5/xgXThR2kZfdgnk//Y8Id5TNqX+ikl
WxdH5xcKVE7P4/PcySYijAxEsck/31nWcTgTq1s7r7iJZRpTe0VDOYmC9wGI
XD4DPsay/55mMBKzV8ulvb+xETqczBk5lHW4/OCae2cgE0G/s6Z/KpedcJAc
MTpB3oB2n+zn4SdIRMotSy/LfjKhcKnP87fPLCik+c3TGjyD3zGvelkONeP3
0cp7f3A+ha8aH1KFywOxFv7xvk2sGZtax1wAOwqIChC1OWcWwTrOrvVPM4Wg
Hf1zUiCDEVkSXYdbZ0gEg83u+0ySnEj7vwDJqZ8UdJB32vA+YiOEaBgqKxgn
schYRYqcHDWqxy9FSoXYiQxlXn3K+zo8wibuUBa2BdEjeW+pWrd1TS2Yymsg
FWysUuPHP2znUdVzrStAIUKj9N1EzNKBudjnxYU1GvTuCF2Z5zILMeWVmMP5
kIEwKtNViRmnRj4WIvfd3Gthnu3vlmD/dh3xqrnIPTQDH49YsvwT+oNl/5AP
wDw18a1QmiNRZxRC6h/n+q7Wg8TChbXYeDrCjevNtTDVRTgy2lP3U7UUyxl5
uOlhOqLxsVLTec0ZSP8meOFrWzN4/7o8m3+UhaBjbDIuXF4DV+36q4aPq7H8
8+cnHhqyENX8eUN1KYuAuayjEk+3QVFcx4QWHTtxzOFL2M+eDfjsFE2hlNVi
BfJyhIswO/Fkt8PovYUluGHW4NwZ/Qc8nAzc9bMzYPXwAVayaCteGE6kix9s
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
Wjr8/I410wJOY7X79nnX+v9flnZbSwIH0jw2F3R9Xb9ERR1ktT7Iib4rvnk2
386FIk7eLtcvXcZzZVJKG3S5UKSz7wNGtAEZ+NyJ3zTBQJzlwwwl0UwopIxr
9eZHJvTG4SpDXxATsbw7Z8vd+yyomX6NSp+WDY3/nk2/xEEhFtQa+IcZx8FI
+UauveQEGJPcySCSOylHcidrXVZyY61oCfjieO3xzWkIvvwqPCJ6AtIRbfla
DSPxcn7XN9aSefA7betqcnIKAheYGzRl2Yiyc5WTQXtWQKlFcXvfmXlgv8De
8vAGB2H5SGRTj/4aHI+ZEn4VtASoyXVcs4yTcNf6EeSXT0EOdRuDm/NXgfJW
aLZUnpMIzq1l9wn4A6p5absyj62AlLzZ0lcbLuJSaYZr/bdWyH3JpGb5lYIM
u+Moj2O4iU21n6h58V/YlKuweE6bGtG1utunr3ESsyYz5mL3JrC0owNfyTQD
+nGiVtBeipvYozOayPRtEn8ldsiKGTIjp7I/AX8r2ImkhmtuZ2zpiMY2w+JT
KvRIUY/1lL5HJ15+FLvMWzGIpeX26pbec/qfOnc8WeaZdPII1k0ei0+0ncFG
LkPWL22+gaaLuAGN+TSOj3TtqHuxgjWZTx0ILKqClX84ksMkRzLqgKK9BWUR
01R4Mz0poSZm9e5cGFbsBRqbVIEn8zREIpW36q1WVoJl1uyDLucs6PFn9eoa
0BEMMKu1v4Od+FGY2DCXPwtzBoaOYNOGmekzs9dY1/VUgvfdSrkqeOt6Qzr5
Swfm3U/v63CdijD21S6aM20FMZIjKU1yJNVIjuRP+UauZqtefMLnItXjnfTE
jlDUSDQPwcDoySmK0hC+OxVtbt/LTIhnxn533TEJLFWXB3mYxnGA1kqTbTgH
oXpv85iE7BTUr6SHbFeYwI3HeIqO0HARyxKUQ7GOU2BitIPBq2QMopiog9Na
y4C33lSN1XgcnlL3M5jRjYHM3Z+bX7LUAnVe1syvmNH/ni9s/5wvUmQ+ZR+Z
TzlM5lM0GH8u25+kRxt5VYY/yHcDv9gEi9f+raiF9AFuJn2AbqQP8Gojx6Mc
DhZkOsdwXOttP0joX5W2+74DfezT5Rq/wYxSxi/t3sw5Ab8jX1sX7dyB7tVn
se77WQdQ9dpL9XkZiAUhC0f2KLzmJ9C8reA37Bk83KE6Uwtqs/w9QuJxOOOd
+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
EPw/4LqrGQ==
     "], {{
       {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
         GrayLevel[1], 3], 
        StyleBox[GraphicsGroup3DBox[
          TagBox[
           TagBox[{Polygon3DBox[CompressedData["
1:eJxFnXn8FdP/x+femXtn7sx8kq0oW2WpkCyFkLJmD5EtWbMlUUn5SglF9n0J
0UKW7FvZ932JkCUUkT1Ldn6vZ6/j8fvjPOY9Z86cOTNzlvf6Om0OO2GvQdUo
in7LoyjWMasrZVE0X3SbJIpOV+ZOlSj6WvQ40XuK3kFlNkyVRB8q+ivRe4ju
ouNtSoNV4TIqe4KOmyq/FM1Duoquiz6u6nt/1r1nqXyh87wRRX3LKLpWz81V
5njldVGZn9SualMUfanzz9SGBUpbKH8rpS9VtqPS1qIX6biu0mtq+7OqaxvR
b4h+UfR2ojvrvgtUb1+V7avnnqprO4vOdRyp9IaufaBn7MC7qvxKOj9J5z10
3kL0iaK7i35X9Rwr+iueJ/o8XdtH+Q3lbaPj+srfQ/V3UZ2b63wf0Z31jtuJ
fl15z6s926rMQL1rqve6W9dKldmz7nfYWceOyttE5Y9TmbrKXK3z63XvQ0r1
WhTdX+ioa4P0/G+U2if+L5uqXOvQ7kLPaaFvN1F1HqM6N9e1firzvOrYvvR3
66a8+5WGqfy6uu8UHQ9TmbVEnyy6v+hnVP5W1bWOyj8r+nbR7UU/J3qG6A6i
v9Tz2ybuJ1/puFbi/pCpnoGqZ2PRF6nNvyutlvh/8z26696HlLeK3nG48leM
3Xe66drGatfNqftNH7W/a+p/sYmOd6TuW+vreIPS0aJ3V5mNUvexC1XnEqVV
VWcn5V2ndIzK/K50lFIHlSl07RDRq4n+n77pAqVT1Z7N1Iaxyj9D+VuIPlP0
maJH6frnSqepzLbKH6f8K+iDos/X8XTl9xR9tvIv1/l1Sr8rb7TSDnrWFF27
iny182f+p+hWom9Q+ktlrtfxV95H+deK/lH0NaJP0zM/U/qfynRRHWeo/jHK
v1P0jTperdRN//NGpR9U7mad/6OyFyqdqfNvlCaI3lTXJyl9rfP36fui91D+
0TpW9P3P0fN2UzsnqP7bVMf2qn+86CtFj2fsK22m84bK/Un/FL2r8s7VcbrK
bKR6N1R6XnlD1f5xfHPl78oz9bz+elZv9ZcXMo/TtVRmFZVppjJril5N+aXo
dUSvqvzmov9SGw5U/SvwLUUfIHo50W11vaPK99P5v8o/SMcWyt9M966pa6uI
bqZ2HKr8NUS3U976Kn+wzpdV/mE6tlV+T5Ufo2vriF5e+f9TXWuJ3l1t/lDl
91Q7/6q6f3VU/i5q/5PKX5Mx3vBYYhwxJtvp+qqid1X+U8pfS/TuDY8Txshu
op8WvbbonUQ/Lrot4130E6LbiW6lNgyoeuxvp7aNVds60QfUrvV1XJsxpWd9
ovO/Re+oMh1UZiP+l+j2ojuLPktlvlU6T3Xuonf5QPX3Fn2CynRXmSNU5jE9
d8fCc2cHPbce5reHVXaWUg/dP1L5q+hZua5NDHNdJvqUxOMVekLsuTIVfV2Y
Yyl/l+q4R6mL6tlX89BOhefIn9SG4zKXPyf23MqzL1DevczDqqOb2rap7nmD
OUr3b640m3lf+Zsp/03lbyT6YL3bC6K3FL258meLHqTn3KTzZUX/qHrnMBfq
vU5R3d/q3WusPbreT/c+rzLLKX+c0ntqxyZ6zsZKrzCfqZ0LWAuZc1S+q+p/
SeWP1bUXVHYBc5Tyuyj/ReVvobJrpe5vo1TfaUpNeta+yu+vOnuozGD+m/Kq
zC+x10joE1l4lWLRv6h8N93bTPQS0ZNV5zL0CeXtW/Pcu5zy/1baX/S1uq+j
0soqM1bH5UI9f+r68bqnFX2eOUZpP5W/jr4UO/8knq+UMKfEXqcroq/RO54V
8ocknkf5bqNjr82R6KGJ53L+HWt6qePWked15vcNIs//fAPefbja8oXe5V9d
X6jjJKV/RP+odl2e+rknqr7BicssVv6NqZ91QuK1jvJ5zX2/jS51V5m1U4/l
dXQ8NvPYvkX/5A79m1aR3/14pe/Ddxus9IPoZqqnSam37m2uvIFK3yn/ND1n
iOrYm3xdv0Xne1U87rctPfZfUB97UekyXftEZY+jvcp/W3VMU7l3Kx7T25Qe
14z1qQ2P9zX0TT7SPQdUzHN8y9ygdKDOezH3iN5HZc/Uve+w5qjMW0o/K39f
5Z+l/HeVv6rqGKjy/ZR/op67td5/gM6X0/XllVZn3dB985V+Upnjdf5mzfPw
QRXzPsz/Q3RvD9ZQne8v+n9q6y6iP616/v5RZY5Ufs/MfE4b0a8pJfBFuu98
pd4q+6zy+sJ7Kf9IPfNa5c0WPU3/YrravZLqOVz51yj/TeU/rfITdO9T8EWi
DxL9OvyG6N6inxG9ho4Xp14DOrJGpJ7/Y73Hc6rrU9GdlL966jXiZj3rNj1r
ZT3rJ92zX9XryE8quzj2WtNex+HKP0T0PfBduvde0cvCy+j+m/gXyvtA6SqV
66fyV+r4ksp8oPKx3vFj+Dpdn610CWuQ+sHD8I/Kn6J+MVVpH+UdoLwrdP1F
5Z+kf9JS6+xBrHO0Uc+6Ts/aX2UuV5kXVKZJ+a2Vf73yH1O5KQ338+V0zJU/
WfQ0lZuqdIHo1dSenDElennR/9T9v7qpvrtV5hbRl9XMF9wo+rya1/9rWLNU
5yeF8xep/J0qX+Ed4SnVpq/hwdXmhtr8gp7xWeR1knl1qO69tDRv8QDrc1g7
zlX+Rw331S11/TmlFdWmYcq7rPSaNFrvkSrdQJt1bDTcnpkqt4ye86DqmS76
SaVb4Q1UplnD5duLbt5wm1dWfcuIniR6Lx0vLrw+ztB9e6ieGfAMepe+Ss+L
/ihxX4uVPhT9HWOPeVBtWrnm/vaA7t0Lnph3YS2rum/cofynlG4XvYHKpkq/
seaqPecWprcR/YrSzxWv+2vpuz2hcj/qvHXF/b+56lwm8XxFudUrnqO+Vt1b
KrWGt1Qdryr9omuJysZKrSqe+x8P8/82euaeKrNexXzIb4Xr+kB5vZXWFZ0y
NyfmhXoq70h9r58qTqtWPEbO0LvuqTrXEP0Pa0bF937DfAJ/pvxflf8r/4H6
9b3a027lf6y6l0vML81V/Xvk5pHe1XH33Dx2ruuNxDz2n6rnj4rLVFTPXxW3
f0+1f0Rh/mk73fea0hLRe6ttryldpPt+VF4LlVnI2qRjC33b7VTvR8rfJ7cs
tlDnnyeWCeey/lQsx63AOlw3z7mD7u2TW87aT+9d1M2/baf8vXPfe4Lac1Fp
Xv8EHfdS/hfK76P8z3Q+R/kH6jmvVDwH9lEb32aeoq+onttVfqHKN1U8Zhgv
e+meWTWP5XMaHquM04d1z7Fh7ThO11+veT7/SmVOUl0jde190d8XLne86AtK
yypv6hvuz7/iHdWem6v+N+8kPn6u/LuUt334Dm+qXQ81nP8p61bi9/pY9XwY
u81/6fqPSucwB+qZ1yndg/yv93sytSy0DbIX/A38gK5/rfIjVX6Bjj8o/3DG
tdq3nNLJtIM6lX8E8gj8tujhyt9I9Y5WHafz31Xn00qn0wd1/aeG5Z3DaIve
9yPVdbHuranMBJW/QvS2oi8QfanouujzRK8QeBbkx57KGwNPj5yCLJVZnumq
MmOCDNVKeRdlluH+1fFy1XW+nttL5bcMcuAgteHC0jLYAp2P132/qsw1Krtz
ahkw0re9mDlI5C965tZKl9DPlf+78i9h7lX5HVPLlf/Sx0jKn6j8SzLLi7OU
N6i03uB++DalzZhzA08H3U11HsHcW3FahjU/yBQdNC4eUTvn6fk/hPWuofq3
q7nMaNHnKA1hPtJxvNIS2sw30P0DoOE1Yq+bS5S/SPlHKb8FMp3SL6Jv0vWz
dH2E0la6fr/a86CesVhtfDvw29N1XlX5OSq/Nbyz0mK+idoWKa0k+h/44diy
G3LTDiqzouhveWel5ZmjVMdNasewimWoHVWmpeju8N1KP1Sss2pXX8oqRovQ
TSm14H31vbepeQwiZy2v7/OozufqmZ8zR1bcN/co3T/pv6fX3Yd/Ff297jla
dGddvy7wXfDOI6uWoeC7RwSdSSddv6o0j7Ul61hqPgM5cl7DsuQGuj4x8HVN
ym+Rmbc7V8/cQeVHq54vlLdF6Xlge+XtnnmcdNE3ux4djcp01vHUqvm9rfQN
XlD6nndB9lb+YNFbwNek1uNslnhsMV5GVT1WBqv+Q9WuPzLrPVrquLLSQtX9
nY4TdO1Q5beJrR9Cd9Sp6vF3AnxjzeNyIHOX2r9Vap7qQnhD0eeKvor1NPNY
+F7H81TnYSr/LTyU6ENEj0rMcyO/bKn3eF7pu4pl7fM1vywvugW6ocRy7gB9
m11yy7kP8n+CjDxHebvllp3T2DIEeqceyns59zq8j9r7WM26rF1U385Kkyue
A6mDdXAP5b2M/MraJLp3YvpK5PrcPNK82OtLJ+Y0PX//muUdZJNGzW1bk/Ux
zEWPoPMrrLdk7mV8s47fB39atY60WZAFoS9RHd/VzPM8qnu3L6zvXBh0n+gT
ktjyEHrUtYN8tmXFvNADDesh761adkQndk/VMiU61VX0/VetW0d0JTxKzbzi
K7r+tK5XlU5iPtO3/lLXtlH9l1Wsp9pS9MWi/0DuUJkzCuu5Pte91yr/b3ha
5f0NXyJ6vO7/oua5cZyOC2ue977U8zdQWlF0T9V5KTwCa5/yNlFqKbqjvvev
udu0oY5/Kr3HGGE9V1oBGRA5Ht5a5/OrXjOZn6/X8/9VO2o6vw6+uvR6/bS+
2y5V57fWd2hdNy99rco8m5s/3F/05YXnxuvV3t+VHmSO1b0vVN1nFqvMGyoz
TvRw+OGG9W6fVZ3Hu78Yu711+o+es3LdekLGb+uq5XfG9CrIg/AKNcucK+n8
ah1/VrqV9V3tGp+bF91S1+7T8TblX6XrPylNF32BjvfWrT/fn/+mdL/OX4UH
UHpI91ykMg/XLXesoPb+kpsn3rpqvvsO+HC1Z7uqeeBV4G9z37uajhOUHhZ9
sep5tB7kFJ0/rnS36Nd1345Ks3TeVmXPy03Dw6+l9AhlVX8vlXlU9LWqZ4nS
nfxH5T2gvNtZW5X3i9KMwPNPLv0c5IEn6MvKX1v55+euB17/SaX7lP+a6tmh
6nb+kfg+2jaMfqc2DxJ9If+zbt345arjTv3HnXTPpaLbF36HlfR9phWWHS5Q
/jJqwzbKX0v3vppYHrxE+WsWft5spT5B1rtY+SeX/u7IUswf0/Ssybr3n5r1
TufCO6CvFb13kP/QIy2re5fLLb9dqOOTqn/bqv8LbZkJL4FOG9lL9GXIAYW/
6RvwOhyZ/3W9E20VvareJVJ7XuM7xT4+HlkGYmzdL/oK5tTCY2N90cNEv8Xc
Al/KnCj6TV3brer8VVTnKqX54LeUt0+Q99ur/FuJZfzDVeZclZnH/Ki8K4L9
5QfR6yntJ/pS5e2rY0/mX+WtngQ7SmI94raiWwW9I2Ue5DtXbAvopTb2zV2e
uqmP8vD/O4T5eZ1gG9kxsm5qx4rtDs30/w+uWWd1eNXXmMOfUpv3y62LuSi2
TaOn8n+jfN22pGdUZv/cOpR2we6xkfIHqL6Xa9a1bqz8XZmPmTf0DT5R2g99
P+t4Yr4c/d4BdduqjtR9L9WCTh4dpFIf+BB0I3XbjNYOdpVNRa/IvxC9N/M2
utDcuqxVgx2L+nm/Z8M7Tte9Lasuc03QF6LjeoN1ODd9hJ5zZ+rv+5ry++fW
fU2Bn42dz72H6tg38r9DJ7Sz6HeQU3Lrtaap/JXhf3yf2CbFP14t6L6QW6ay
poT8m0V/HPK3Fz0j2Erehnco/LzHdL1t4LVm6bi60sGMcbX52Lq/wyPKW6Nq
u1WH8N83U/4c1XOp6jlc50cim4b3n6l0UsW8Df/0lcy6yomxy6Iv/V11H133
f6RvvJyFPqN6/he+6RGi1449b2+n40ZV203m65lDCssILfX/Py1sG3q/9Hz4
BLaO0uOTMbmC6GdV5iLV+3bpeeAulXlL9DClk/Tsx3W9n9J9rC3Ka6Myj6nM
H+hbRB+m//eh6Okqc7Dq+Uv0G8o/Cn1r4TltP2SUwnPdwapn88Jr6/dV66+Y
+5hrZouez/qr/NeRkZUmq3xvHT+m/Yx70Z+JfrZqW23WsP6peem5a4Ke9a3y
v8mti99Debsr3aB6uheePw9Cx4lsrnQz85OOryrdwTxSeJ29O7EeIFL9U9S2
V1nP0deht+VfKP+9qvUElzSsK1hW9A+55bYqOlHWadGtld+qYZm9JTwmvGbQ
LTye27Z3tejHctvzbhW9Bjos0SuLXrlhvQS88bzM/DFr+meZ+fKVVKYlcqPo
ddBTZratIjssyCw/IDvMzyw/7Kvyn+tZz1XNw3+UmY9Hl7ua6tkZwUayywKV
ORU7aOE5/xB4QGxVyj9e+fNU7gOV3zUyPadh3cIzhde4I1X3A3xXZEi+Cfm5
bU7PFZ7/D0OGRu7PbTPtKXozpaOx0+g4A12S8l/in5CvOq/KXYa1oS96Gvh4
0SuIPj23rfBnteVT0Rfq352sOemSuuWIkcr7RGmDqvlIro/mN9MnC+sJusEz
K13EvB9k6yHIqg33T/jRVO9/meochf5B9/2h1EP3HqUyS+BT4Yd177TY5Qc3
grzPfKr8ronlI3QLVwY+7SrV8VdheX6Iyk8sbG/dQXVsXDV9lq51rnpcf6br
QwuPfXjjfxrmsXeMzRdOZM1KrFOBV0amSJWuUpkHlX93yL9P9C2xeeJzKrYD
o2MZq37xW2pe/Cu999jcttp+iXkj+KJC12+pW499csNjBH0xdC0377cw8LBX
ij5L9E0V63wm6L98pXR1ZJ4fWzTf7Wz0x0E3snNsXp8x+HFpveIAPXM8Ml/N
7/JRaR3FIannbHwLmLfxW9g5t/1mDvNQ4bkeWQNdCXoSvnNV9BWim+N7oOde
Bvuium6vWwd+qZ7zfc263y9VdkxuG/QyKj9NZS6N/F8mKW9skC+wt48RfUhi
fhFeEb69npuPfVn578bW8T4senelHdHXMh/kvucgtfds0XdUPLbmhTUL29KR
FfPzyA7fKZ0ouhU2cNY45gTRc1LziFeo3mOVvwfzCeM2Nf90vOr/qLB98VL0
1jrurvy63uvD1DzqcOqLzaN2VlvaNMwHdmR8K/XXtQE6zlV6An0B63Dgubvr
m+3JWFf5Pti1quZFW6ruwzPzoe3RRdQsWyF7I4sjox2n8q+qnq/gCVVm+5r1
M/NFL1T6BP5EzzyisM3kGP3/WHPWhap747rlOmQ67C9tqta3dFHeLjXrxvE5
Ye1G94J+B70O5dEHodtAn4Pcd0HqNl2QWA/LNzlOz3y/sE3obn2T93Pb7Jnb
3gnz2w76Trfm1mnfhRyZ2xfkt6qvY9dDP4/PQBPTbWL/EL1G9Gds3wM9Plo5
8fzXjn7FWpS7bejNsDeh3tpG+VNztx/dBXNtW+YB5d+W20+AtQq+E55zRb3T
0My8+0bMqYVtZV11PKawPY11AN6AtWAE81rs+RZ5lrwnVM/FetZBiXn47thJ
cv8jfJAOQC9BP0XmTW1DZx2YHdaCtjyzsM2KOf7tMM8fXtruTvlNVc+uNdsO
Nhe9W832i35180nwSKyJ8KbwY4fUzZ9BT0ZvENtWxBxwX+F5YEBiOx71H4qN
iPWs7ud+D88k+p7UPDH8cE3HYxLb32eojg5q22PKP0xlv1P6WOXLmn2ieNYy
Ndt64dMO17XDapYFPtR9czPbW39Q/Q+l5t+Gq8y/ddtJ0QUOqrlP3octOrX+
amNkpYbH0a16zpqx68d/CZ3P9rRH9x6qe3eI7A+1fNX0tNQ8Pfx8fx0Pqbn8
7allDOSL42PzYgv1jgNF/1C1vpLx9zXrTMW+KthlluGbV2wvom9PTK3nQsf1
ifK+ZJ5mnOq4qOJxelhiWyW+E9iNsEVhe8LPBFvWapF9pX6v2I8F2ww2Gfrt
Rmrj93Xnd9Xxh7p9WvCTwb4D3UPfZnLueeN2eDydPyz6NrUrUfl3mU/QM1at
H7lJ+X/X/D2X6L6Ncsukh6DnVppb9//FLwSfkE10/VqlDyueA88ubHO/OjdP
wrzaH78jdLZ195e+yntHZW7Vc2LlvQOPBB+r9HTif3oNc4fK/IZtReVVNNpa
z7wp93y4vejpub/VYvSRSkdV7ItxUt3z/5565nylsTp/Ttdnx9bTHgWPE/Q+
76jfnVh6zdiE/lO1/X2gHviG0sGR/XauVjq5blv88aw/ke1H72X2GcD3ALvQ
gZH9rD5VOqVuW8xxet5QrmHz4Ruq3hMr1g0fGtnHaQVNdCNV/lSl/9Wtj32C
OTDxOsnYZO16u2K+kvUOXwf8CU+ru57VlDeo4nux9QzMratnrIyqe7wcBD+u
572vNhwgekU99z30gqKPz20nWlHvdGzN7zgkN//fXnUPzS0vdGAN5bupzHHw
NrnlkXWVv5bSqRXn/5T4m6In76v6v2mYzzw1t5wCr7YXNjSls+q2U6OPpv0b
6v+sXbVNCt34F8xFet6vDcsmlwb+c52qdfX7Kf/bhnXpz4f1fI7yF+eWPZA7
0EliMzpWZYbllps6Mj+q7mX1Hc5XG7rFzsPP8HHWlqrtC4dgU1M6Rffeo+dO
ja1b/F9ueWFDldsq9jc4W/nrVc0vwiuelpsPRxY9Q+8wX+lcxk7s74r9a1Ru
HgxeFj0qen/+6UoquxtyYdX6KGQ6eMIbY/tE0lb4Znh2+ORCdTSVtq1Niu1D
yf+6PbYfIW3Az6Sa2p5S0XFm6veckdivkTbdGtuHkn80QvWtq+8zOTP/CB95
JLwoYy3YHTLV8Wjq73BbbL9M6FlqzyOF7X/bNuwXwpqFPR2fQdRh2MfxB0Sk
xE7dX7RuibZr2H+Ida2hNuSl7Zknq+69Y+v6jlCZEblljUeRE5XGst5gC8is
97srsc8n/wY92Cm5fUcvYLzVbHMZgV04dX/aExmxZrlmGdW3ZWEb5G11877w
vTfXzd/D2z+Q2AeUf4fedKuqdaf3qUyz1HpjfBvQWaK7vkVlulSte0cmO6q0
XHaP8reoWoeMHEAessBZufUM+HzuqudsCs8fWS/9Yup7ZqkN94d+cqbav1/m
552V8XOst9wrtn55qW5ZbVs2dTvfTK3nRcfbHPuGUnd4QGTQwn4xq9bsh0E9
vWPriLn3cdWzXOo6l9fxpdQ664eU3zy1bvzAzPpldMvonXtW/Sz8ctChU+ag
3P7h6NFG6/hEw/Z05mh4euZz5AJ0A/eKPljX72O+ijy3I+vTn3upbedULfs8
wdgsbGtGF4Qu4azIeoUFhc+fFr0ot+8sNmt8nrtGlr/wc6eubWLrHs6MrIdY
qfQ5/jb4ovdSfsvY9OaRbUn4RMM/vKV3f7iwHxu6U/zBu0XWQ6D7QheB7mG9
2PoHdGscsf+uUbdNCHsQ9iP8r+FVsKnhy71hZB0sde4U2a6Er/42zAOx6Y1F
3111+R6RbVX4/MN/Mr+h/8CmjN/ReVXrwCfVPU8xR7Gmsbahu8AHjfWPdeH4
QOM7cVwow9qHLPZxKI/9hzmX+fb3zPqfEaJ3SiyDL7VJhTLYiZDHkWfHhzrn
hXp2CXIu9izeiffEdkbcwwmp7W7MpfgSDI28pmAzpj/0xyau5w4XfSTyWe55
kjkfmzrvPkD5D+bWdTyj49e5fa9Zg7D3nqT8o+Gbcsuwx4iembs/HCf6Efge
0ZvG9gkfFnkdwWeB/nmsyszK3ffQOcF78N0frfr/M5c+VHUf2Teybh/91lOR
bRH4pGGPeFr9aK2G7Q7oz9ArokPDJ++Gqv3u8L+eVLUd/8HYflMPRbbJIn/d
VrVtgvuejOxHelvoJ3ODvHZH1b5DyGW3V21PwXfuJcajnrtaYV+7h2Lr1eAn
8R/vn9rPAZ4T2/H1Vdto8Nl7WWU2hkdoWD7aFL1Zw224Gp1J1Xp7ZDvuw7cQ
3/NDU/s/YEdDj8dcCh+IfvW6qm1q6P9mRZYBsb/zLbA9oVN8JLJf9nGpbdb4
1vJOm0T2++Vdu0T2VZ1WtT8Y8il+X1OrlhPxg+Ia/lkza7ZNv55bl4uvD3Iq
ZfE3xj7YouE5HJkW3h3+/JPMemn8ENBxokNmLvs4s+4a3wB04OgvD4vMG6J3
hAfYOuisGDv4DtX07W6pWl5/KMjs+ITfqbwtIvtizct93k/Xn6nZzoK9/hGl
Y1L7p6GrnFE1L42/3BT6kso+VfMciC39yWBPZ+2ep3sf1vkotWd6mH/w8T8y
tW8bsjZ+IPQ/5HXqw99sXfhHXXs08tzwbOmYBPRUxDp8Efo7/R571qWhj2I7
eyT2P54VxuDbqusZnT+euDxjZGRsXxdYXXQ32MCQTS4K/QOb6cWhT2CLvCL0
aeyD14by2Mv6hHz6+aOxy9N/btA7/1Fz+5+N3Tb6LXI0awDz/7Dw/7BfIEc+
F2RJbP73hnl7UKDxAcBm+FuwGzJ/M49jR7s69lzAPIAfysjgiwI//lrgyU/X
8eOadWib6fpJ6f/bhqiHtYD1h3UIHwZsm4uDfZO5CB03+m3sHOgosD9iO0SH
g/yOrXkd8XuztA48Ujcf1TfoMiiPvR67JLYN7BrLZj6i88Tn8+DMazTrPj62
+ye2YVAHc9ffifWklMe/tF9muzA25HVy25Erynu17nahV6Jt+Aww36LXRqeN
jnNR0HMy72L3gJdm3uX98O9irsYuwjV85rgP3h4e6qWq+agvAw/wIv8njJ2l
cWVhLaAc8RTn699sqfJdqy4LH4gtlFgM7KHNwzdn3YcXoG/gi0vsA/1zfmT5
9Z8gwyKXw+gim+MPwrq2TWRd0V9BX8R93I8f15xAU8+/8LCldXDr4ltVt5/n
DarvCphq0Rel9tleUrVvNvq/X6rWX6DHwOdqxWCjYW29MLa9cqvINkvoryP7
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
              "]], 
             Polygon3DBox[CompressedData["
1:eJwtnXXcFVUXhWfuvTP3TryoYGBhgKKUAdiJKB9gY2AjAqKioigGioSgotiJ
iohBWliYCKI0YiGiKCAmdhf4rYc1f5zfe/acmLgz5+y99tr73ab7+UefVwqC
oGscBBX9Pb0WBPep/Cehu8rIahBsrBKHQfCdOt4ZBcEIyd+o/qSORXkQ7FgX
BF10PFFpkQXBASqXloPgf+qzXRoES9Xnd7W9rP5/6u/9Kq+rPl/tO6jv/iqX
qH8HyVfr3Gs0//OSX9b5r5FcX6Wq/q9LXqu+TXW+e3XsL8mddd13qP6V6o1V
Hk90DvX5XPUddT9/6vzf5L4Prp/ruFflwJKv5y71/VflD/Ufov7nq//Rksfq
/Jep/R/Je0o+R/ISyc0k/5V6Lp7JBJ37ZM19j+SmmneOrqer5Dskj9Scw3iW
kqdq/CuSH9T1fafx76t9pc5X0tyR7ucgjftbx5pI3k+lv/ofIvk/zfmIylsa
u73+fqaxgfpfrjlnqv00Heur+lOqH6CmPzR2e7XfrvOu0phHdL4bdGwj1bdV
+2R+X415UvUW+ltT+y+a8yuNv0fHvlDfxho/Qv0WaMwZ6jNc83+q9nH8Hqpf
pGv9KfCxXP0ukNxLz+IdXfPTmi/W+Bbq10zHXtTf89XeQ/XG6j9Y8oGSP9P4
xZJbS35EpZ7G7q4+V6rtLJVTVL9Q5U7NF2q+J3QskFzT9f2j8ruuZbAOfaOx
p6vta5615hih671Wx77U3A+p/1aqt1L7b5JP5EXX2LLm+0rHNpI4UPP/pWNf
avxXgd+1Bioflv3OlfXu7KD+z+tYC7U34r409lfNdYLKvzrfgyozNX6OxuSa
a2+Vfqpfrf71VN9H5SLJwyS30fgJKhtI3kPz363zlzR/nY6Fkhdo7lDnmqb2
EzXnLTq+Nd+g2n7X+Wap/X61BzpnD7X3Uv0Tvl3JZ0oOda6K5ru56v7N1L6t
6g01vqT2vup3qeRX1NZT0zyg9jEqsY5vKTnWu/CW7nkrzTla8lpd3zzJt6jP
TZJ/1dhfqn72ozXn5Wrbqc7v6Hwdq6lfovJW2e/30aofpdJP9VvV/zxd33OR
+yxUn0mSG2r8aZJP1/VFOv9CzbkF96kxd+r4kapfo76r1b6N2rbN/W7OU/vj
mus69ZkveSnvP/dd9bf8gM43RvUvVAZqfKTydeR3hHdjtp7BbNUzjV+ktsM0
pq36XqDybMm/T0XXs0Dne1DX8IjkN9T2mcrFfJ8q9+h4J8nD1b+d5P6a61PJ
Z6t+p65pUz2/TXWPR0qerPn/krxC8my13corHft9W6L29wI/h1NVulX8PNKa
r+9ttX+r9vGaeyXXWPY7tFz141XeD31Ovs2LJL9Q8jd6heQBKn3VfoHKw2pb
odK37G9uF93fJ5nXVt73PqovU5kh+XWN/1l9f1K5XPVRar9H/c/l+jV2cei9
oVrzu896eIfkn3W+88tezy7h96rzN/KG5thE999Q4w9X+0T2HbU/ojKn6mN7
qO1Alcv4PTR+G51vidp/0/gXNf8qzb1c5VON/UryExrXQ/J3PGuNeYe1Q8dG
aWwPyf+qfqTKjSXvKQfqWnuqz/fq30LlcJ3rCJUxatux5O+pJ89b86/Q/J/q
/Eeq/UG1N1P7hrr+j3LvgeNYL9V+vNonq31Xtc/Q3I+pTFHba1yv2o9V+0S1
76z2hxPvmeyV26jPM3yvkmuS16j/5+p/nI5N4rdR/31r/gZ495uqLFb9ULXf
rvZOGn+Cxl2ta1mqvjtp/HSde4LKU2qbJnkftfVXeZm9gvWUvUC/xyUat6fm
a6/57lL5UfVdVG5X+4ZqP0THWkv+QH8P07G7dL7Ogdea3jrWu+I1Z0/V/6dj
V6l9Gx2boWMnqQyV/LjO+b7aO2v8rZI7avzJavu66rV6VMVr2WyNP6PiNe2g
zHsYe9feut731N5J8i3oE+rymOqb1nkdZP3j+xmvcZ+HXrOPUP+7VX5V2z7M
wbeq8pKu5VT1eTSzDoHuMIv9W/WP9fyPU5/b1Gcr1mPJayr+DY/RXPeo/Cm5
A9eotlDlX9UXavwwjftV17A68G/wkMY/q/b2uqY6zif5Ocm7qM8mkh/R7/uj
5NbIgdfnHVkzVT9F459VfZnaPpG8p+YYja6h/pvqPMeqvSX7kApqwKmSf9PA
BuhcuvebNf9ANayPDiF5uOT6qv+m8a9X3WeM2n+QvDnrhsafqfrTvI+S20ie
Hvmd4l0aj06h4/34zXW+AZIf0Pjv1X8zHT9O8v5V7/9nqv1yyVeqfT32PPY/
zbGc30L9n+P61aej/k5T2be4vvvV/1u1N9SxYzR+qe5ngMZ/pvZf1P9HtW+A
jog+Jnmw5ruavVvXOFm/wduSm7F/6NjBar9P/Vdrvk00XxfNN0l/J6rspra+
kvesWr84XfJFPG/Jz6h0l3yx5Hc1388af4b6dGDP0rnXU70PY3S9f+j6Eh3b
VddzleS17CUqR2nsG+wX7Gux343p6rOZ5mqp6/tDfXZU2UDy1yr9atYPY/2N
au47Q+XTzOvl8JrX5Cbqu7PkcRq7UNezTWJ99gZd83OS56jfpRrzica2QieT
/Ivap/A8Jf9P4xrr2D+sz5Lf1PP5W+2nq/1+1sTU78cMyYPUfjjfu8qFqg9S
+xTVn+SedC27cQ+8y7qeF3XsQMnvady7rC/qf4v6d9Cxbfleyus+5+B5Xe/3
rOGsT5I3Rz/XHG9rzOOskWr7Pfc3dofk1yX/IXmSLvYh9h9NcpfKDSXrRwtV
P5sSeo97QuNuqHnvb63jRzCvxj4teST6qeZqrusto0OpfYn6vpFbp2W/X6i/
C1gfVL9Z/d9Sn3NUztX8PwfeX9nPZ6h+Ozqf6vM0/1x0E8krdD+zcuut6KvL
Jb+Ze99lv21c6EdP1fz8TtT4+bF1l7s0/nzJu6j0KVmHv0D9HlZpiF6jZ74D
+qnmWIrOpjGL9Hz+lfyi2sep/24166b7SN5K/V9S/QWVlpF/n400voXOvzXr
pMZ/rPFrc6/TrM8/SK7q/dkafVPXy0L0s459oba7eN903h00X1ixDvm06jeq
7KHxu0fWTbeTvLZsHfUnjf9J4z/T+D94n9RnZ7XXVdYtncEAtWU6327qP1j9
t9bBVrzfur6xaj8r8lrRBP1AY/ZV/Ry1NZV8Ke9r1Xsaexl9uqv/fjXvjXyv
PRlLO2sx75zqe6h9a7W305h2mqu5jvVS258q+xX2SSvWF46pPlnHGqBfYdOx
L6j8gW0W2n4ZhP6uczWVPEX3U9H9lMpeY9j7WG/ql70HttP9DVLZVdfQWO1D
1dZe5yir7QPNeaPGvqT2r3T86rJ/16NUdgj9+wbF+tRYbVtJfqxqGwLdlGtk
/dqr6r2NPi1j2zzYOnzz6Hp3q6wpWefrHXlt2JbfS8fG6/eaqvO30bhNeT6R
7w/bLA19LUOqvlauiUXkUR1rpbI360FsmwhbiG/+Fd1nf93TR1yvuvdh/VD7
FpIv12/wdNV7MtfLNTzG9xh77dxZ8+3GuhVbl7ug5HVqy2J+1qv9Uts42Da8
by3Vdq/KWsnNJU/T/VTr/Lvze5/GuVW6qv2+4vnx+7bH1i9Zlx6tEpStU/M7
tVbZtOLf6ymd76fcfdpKvl9/71NpyrvKM1H94Ni2dQ/Jm6q+GXgE+4OObVGz
7bRU832jY7/p2rfT9R2ve12uYzuzL2rMzup7Du8s9ovkdpj56r85dhf2qPp+
Lbmvrucq8A3Vf1Wf21R/Qtd3LjoU74zGP6pykNoAdgbxbet8QzTHFxrzjZ7P
lehXxf66t+Zbo/KL+q6PjaC5nlTpq/l6ht63wAuaFfsXuEKK/V6xjvaS5rtJ
822p+u4808K+4z3i/XlC7S9qvv01pnHote6Q2LYYa95tNT8LsBrm5Pm2qvq3
/E/tx0Z+3tT/CY0r3KXyT8n4wl6aazvJ3UpeY87L/T0doeN7qn10Yd9WNc++
kfWBtsX3wzfK8wKDAHtYHwxKY4di7+lYgg6rZxNnru+KfRn7+dJ3fTAk3d/N
am+kc++h9u/VfnvVa0uT4nvn+9la9VY6x67YObF/23NZfzW+b2bsBB1rM8mb
Sz6ab0Pywep/mcrrJet336l+qe7n3opt4lGR99JjVT9AfU5SfXzNWNE81ivN
d3nNdiT24zhsG53/JmzpYv8+hv1PfY/THI1V76EyVnNtBuYWWWdHV2d9+lJt
l6ATV6zzo5dMrBn7Qj9ZVeynXcoFhqX6CJ2vNet9ybryeTr2ZMk68/tV635z
WDvV5yXuV3NdFHjMq3r+9+h5HKTz3aZj67O26XxdJU9Ch1N9Ix27teJ7Gij5
B8k3a+zYirGPM1QeLHn/+rzQV7hXMMey+n+ka1qgttck36f6kTXbDn+jP6ne
gb2b91vlXHQp9RnE/aucomu9TMdGq/6AyhWqn8AcGjumYv3weB07GntDx17V
ufuiw1asA7/Kt6Pv8zwdG6pjW+r32jI3NgdG117yp5J7Vb2fzWVvUrlBfY8o
G2ucG/vZgTlO0/MapTnbY8vxPWredlVjmcx/nOa6VaVLzc/0ANUfzY0Lcs4/
db670bfVNkhj3lV9G13fILU9U7G9g72JLpfpfL/o3I9L3oTfu2J9qovKC6Hf
gaa6nnGZsaxXQuNBd2vMftw/+Iba6tDXsRk1Zz/1TyQ3kNxf/bdQe6bzv8V7
qvm2TowXdatZH8ty63jodhcHfjf7qO/Ekt/RdjXvQew9LSv+vphvUdX6ajfN
vyQzNvtC4H3wG/DN0Pthz9zP/zDN/4vkKwr9lz1wgfqv0d9HNf/m+vtmYHzo
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
              "]], 
             Polygon3DBox[CompressedData["
1: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

              "]], 
             Polygon3DBox[{{2452, 3128, 1518, 1426, 1425, 1567}, {2593, 2592, 
              1725, 1425, 1426, 1726}, {2280, 2388, 1493, 1556, 3131, 2279}, {
              2291, 2395, 1497, 1665, 3151, 2290}, {3149, 2284, 2283, 3148, 
              1656, 1657}}]},
            Annotation[#, "Charting`Private`Tag$201043#1"]& ],
           Annotation[#, "Charting`Private`Tag$201113#1"]& ]],
         Lighting->{{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
       {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwl0stvTVEYxuGvPe3haKl/gBJhIj0SI5EaiVZLEAOSGkhMhCrTtqYOZgai
bcJEoqKtKnqJCJEGA5eRy6ne1CU6IJKKJkoi8axK9s77e9/1rfWttddee+TU
/pMlEfHI256JSPyjNKICnOYfLI1YKZvAD3E1nsbPcB7XqbvAb8PVtJiLaJJ1
4d2ySb6ZP5TWr4j4JJ819zh/Xv4bt+F6+RW+qOZemTFZo+xa2pA1OskZY99k
13EBf8fDePOyiHF1z/kn/FZjLamP7CV9LTtBv/A3yiPe8D30Le2lRdpHx+hN
+o7203F6i07QAXrbO4nv0Cl6l07TQfqeDtEZOkw/0Nms/er51Hk+8s30K1/r
PK/4cnWf+Rf2lpc9ll1Us8f3n3KGUTwkG1VzmB9R182flReceYu6+7hDVspf
VTeo5hx/Wf0OY12yflmrbE6PAj8gX/Ddj8l+4lZZH21Kd0+P8mPGd/Gb+IP8
JWvU8m38Ab1yetfwI9asSfctX83P6zuD18s6aZXsF97nrCtwlWwvXo4r01lx
ZbpibGrk9c1iLWIjzpQtXn9swIEb1Sf8az8NeAn+g3fibOqF67En1iiczyxO
i1V4Dntiu0Hbj3Um5Er+//f/AFibZ3Y=
         "]]}, {}, {}, 
       {GrayLevel[0.2], 
        Line3DBox[{1347, 1572, 2078, 1463, 3253, 1348, 1545, 3246, 1467, 1362,
          992, 1288, 3076, 1133, 1370, 1621, 1840, 1477, 1374, 1550, 3264, 
         1638, 1481, 1380, 1555, 1790, 1487, 1387, 3227, 1556, 1493, 3300, 
         1394, 1670, 1500, 3303, 1403, 1678, 3274, 1506, 1410, 1696, 3276, 
         1514, 1419, 744, 3330, 1805, 1522, 1431, 1568, 3372, 2213, 1529, 
         1438, 3239, 1748, 2214, 1533, 1442, 3243, 1570, 1763, 1538, 1449}], 
        Line3DBox[{1351, 2082, 1577, 1822, 1578, 3197, 1934, 1767, 1579, 1580,
          3200, 2098, 2099, 1609, 1834, 1610, 3203, 1953, 1777, 2107, 1611, 
         2197, 1612, 2106, 1781, 3296, 1624, 2172, 1625, 1383, 3225, 1654, 
         1655, 1791, 3297, 1656, 1657, 3206, 1397, 1680, 1797, 1681, 3211, 
         1406, 1509, 3216, 1413, 1517, 3220, 1422, 1715, 3285, 1716, 1806, 
         3304, 1717, 1874, 1718, 1994, 1811, 2148, 3353, 1735, 2205, 1736, 
         2147, 1815, 3307, 1751, 1752, 1452}], 
        Line3DBox[{1352, 2083, 1581, 1823, 1582, 1935, 3331, 1768, 1583, 1584,
          3201, 1774, 1940, 1602, 1835, 3333, 1603, 1941, 1778, 1954, 1613, 
         1842, 1614, 1955, 1782, 1626, 3261, 1627, 2118, 3348, 1658, 1659, 
         1660, 3270, 1557, 1671, 1558, 3207, 1398, 1682, 1798, 1683, 3212, 
         1799, 1684, 1685, 1414, 1697, 3277, 1698, 1423, 1719, 3286, 1720, 
         1808, 2138, 1723, 3367, 2203, 1724, 2137, 1812, 3305, 2163, 1737, 
         1880, 1738, 2005, 1816, 3308, 1753, 1754, 1453}], 
        Line3DBox[CompressedData["
1:eJwVzyFPglEUBuDjpugczmERkaBTm0VIZANSDJjcpJi06C+wo8XPApoVbEQ3
DQaKQSRKZqOYjMzm84Vn7z3n3nN37+bpZf1iJiIOqc1FbC9E7LAxH3FHwuxS
xE8mYo+XbERJ/tKy12aXjDMP8p4xT3Qo80yXqZkT3t3RkH+c0VdX7J9bX/Gh
XpVN8mmqq950QI19Z1v6bdYo6CWseMOtXE/pPzI0W5SJv73KkXrZ/Jt1Tn6y
aG4gjxjyxYRvsvZG8jg9a+bG3Vt6TXlNz73/7LwpNw==
         "]], 
        Line3DBox[CompressedData["
1:eJwNzzFLglEUBuDTkAnp4pyEEOTSpDQ0O6mQRFODRGND/YNojWrQKUxyaSgo
XApaQshFSDDIIdfApcmGIJp6hoeXe957D9+X2zvcOpiLiBrl+YjVZESe3ELE
LBVRSER8UeTJeV3OaOkvWaPDt+5KfnLDLUXuuePXmzo993blH/v0nTf0jzwQ
HJkPzE/kMWXfU6FKSd/nR/8iL8w2qdF2tylfdQ25RNbsmpHZsmz4x2c5ce7J
jB0jFtMRb3KbMe9M+SCtm8gdht6c23vKinlXntG19x8CQS/b
         "]], 
        Line3DBox[{1033, 286, 2626, 500, 287, 3064, 1253, 232, 2643, 518, 318,
          532, 2656, 339, 537, 2661, 354, 546, 2669, 374, 2675, 552, 385, 
         2683, 560, 405, 3041, 1224, 1223, 3221, 1429, 3235, 446, 1274, 3071, 
         261, 587, 2710, 465, 1235, 3052, 1234, 1459}], 
        Line3DBox[CompressedData["
1:eJwV0L8vQ2EUh/HTCJq01GKwSAwmiXQyUDU26SCpklgsYqO3C6vEjw2LjVWi
LCwMhEHiD9Ba1WBtTMYuPnd48pzznu973ps7tdlcSTIRsYblwYhiNmJ+KGJ6
OGKB9/MRPS5hEYf6dbmcuoY8tt354zt36jzHq3zPW7xkXuAdjKGh7/OTeXYk
IlGX1U1+5gx+vHOkP5A95iuekR0we8GJswqf8pnsa7oL77hwVuVLPjerp+/j
Ov1GnrWnpc7J3HBb5o1vsWG+h0mZD31L3eZdHpfvYtSsk2bVn/zNE/i150v/
KNvlB//pHwh8LCo=
         "]], 
        Line3DBox[{1359, 1040, 1830, 1598, 3199, 1772, 1599, 3258, 1600, 2068,
          1549, 1618, 3356, 1143, 1144, 794, 1847, 795, 1263, 1070, 3247, 
         1645, 1553, 1788, 815, 1855, 1649, 2060, 3345, 1677, 1857, 1153, 
         3004, 1154, 826, 1864, 828, 2876, 884, 836, 1867, 3350, 1092, 2064, 
         1706, 1869, 3319, 1707, 1804, 1708, 3282, 1730, 1709, 2065, 1118, 
         3292, 1878, 871, 889, 2881, 872, 1886, 873, 1818, 3310, 1759, 1764, 
         1760, 1461}], Line3DBox[CompressedData["
1:eJwV0D0vg1EYBuCHhJKwmIQYTLXZMFYxSASRYpAgEl9N01Yl/oE/wCAMGMxS
E5OPpMpu9xk2sdkkrne4cp9zn+ecN23vSmmm2BARC0w3ReylIvZJk2+J2KS7
PeK7OeLE+pRjrujTX8oBBhmi372U/kJWKeiyjLDqjWGZ4YBRxqi2RZSddfBH
hZou4/62daP8sN+1zlqX3CnS4ztlea27YZw7bpN57qkzwZG5X28cyhyzzDHp
rNU7j/KBM90WFZ7MT+nOfXfRfolOs8tyXv/KCzv263Q525DP5teS35v8d85/
vPOm++SdL/4B66Uxhg==
         "]], Line3DBox[CompressedData["
1:eJwV0D0vQ3EUx/FzB9qiJMTT5uGVEG+AzcDAQAwVSRcNokVLsXYRg81mkBhs
goTFZOtkZKsYUIPPHb75nfM9539yc8eX1ucKSUQs4rIjIumMGMhG9KOGKiby
ERdmf8johzIRp/joiTiR5/w3dtT33h/LplldNvgWttVXZolbR+pD1Pl3bKmv
7edkG78o82/os/+jP/P2U7ZQ4psYM6v4nmGMYgQb/LNbr7JXn0+/F4NY415Q
dKPoXk0+2q3KZf4J3fa6UMImFrgHFOx8eXMg9zHP3WFVPcPvyQpmudv0X7m7
op8yK8tdTPM3yLmbTTGbxD+hkjJt
         "]], 
        Line3DBox[{1450, 1539, 1749, 3244, 1443, 1534, 2135, 1733, 2221, 3240,
          2136, 2180, 2045, 2044, 1872, 1732, 3236, 1432, 1523, 3284, 1712, 
         1420, 1515, 3232, 1411, 3214, 1507, 1404, 3209, 1501, 1395, 3204, 
         1494, 3228, 1388, 1488, 1653, 3223, 1381, 1482, 1639, 3265, 1622, 
         1375, 1904, 1903, 1841, 1606, 1952, 2022, 1898, 1897, 3260, 1832, 
         1605, 1363, 3369, 1468, 1574, 1349, 3293, 1888, 1887, 1820, 1573, 
         2079, 2077}], 
        Line3DBox[{1451, 1540, 1750, 3245, 1444, 2146, 2145, 2204, 1734, 3241,
          2048, 2181, 2047, 2046, 1873, 1714, 3237, 1993, 1433, 1524, 1713, 
         3234, 1421, 3219, 1516, 1412, 3215, 1508, 1405, 3210, 1502, 1796, 
         1679, 1396, 3205, 1495, 3229, 1389, 1489, 3224, 1382, 1483, 2171, 
         1623, 3222, 2173, 2174, 2031, 2030, 2105, 1608, 2023, 2167, 1900, 
         3325, 1899, 1833, 1607, 2097, 1364, 3347, 1469, 1576, 1350, 1890, 
         3322, 1889, 1821, 1575, 2081, 2080}], Line3DBox[CompressedData["
1:eJwVzyFMQlEUh/FjQJ3DaHXT4CZBE8lMchhkJAJOCwWYwTkT0U50MkZgc1oE
2TQRDCaLJKbBZrSoG8qm/l74du7/O/fc897Kfn23NhMRBVynIlKz6nxEHz1s
LkZ0+T9cyKW5iBd8pyOe1Tb/g4ZzESNM9J7UM/4LY3no3abzOwbygv4ydyq/
oce15E/+Aw3uNdnLn8g57NifxzG/5LvGyV4zNXWEI3e2cJO8Ya6vVvhHdMxl
zJTd35MfcKifxRUuUeLu8Wu2Km+ghfPk3/ghbvWy3th2vsNUPtBfRcaOdazh
HwTJNB4=
         "]], Line3DBox[CompressedData["
1:eJwNzCFLg2EUhuEzxWlQsBllGNUgKCv7CQNxDIsrGxaLa2LzW1u3CINhmV3D
5HNBwbA0GJimIBZRVyw6w4pXuDnPc5/zvrlavXSciYgyrucistmIdCGihzts
LUVc8cF39Rdz1pzBst2l3RQZfWC3wlXkA7T4CZ4XIx7szuVvDPWO3pQ/cKO3
9b9590i4nH/ezF/9wq7kvz2ccu/uR2aDb8t1+Qknbgu4xQ/fNY/4ARJvz7Dq
35p3Va6PAlfVx26/UOEe8Sn3/LFrt+NmG/v8PVI+zxflVzk1D92vYdPdBtbx
D05dMe4=
         "]], Line3DBox[CompressedData["
1:eJwVzj1LAmAUxfEbpEbUF2gTtK2X0QYb24IQocVJqSWoqCGrraYagkgaQpAa
lKypGoKWPkHtEbSFkIG46Niv4c+595x77/Oky1uFzZGIKOIhEZFKRjyORZzh
CfOTES1+W32LUiri3Ux7IuJTneQlMIo3fhpN2b2+bm+AGTfu9DV1D9fyE3pO
O7RhZwpD947NHdKwc0CXcCp7oftmv+180BtzR/yGfltfle8hjw3+Ff9Z3cMu
dpBDn1+Rl+0supHHJVZ4v/Kqukt/MO0PNf247IKu2snyXukCb5l+ubdudg2Z
/zf4c2Zn8QfmdS7Y
         "]]}, 
       {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzrsyg1EUhuGVwYzjFai0LiHISYI6ZcoMBUVSqFE63EXiEJHRmJFK7cwd
4AaYUaicn128867vW//e/56qN6uNTETUcDEc8Toa8YbWSERzLKI/FNHgtryP
8/GIOd7W7WAXWd8v65+Qs2vJ3/jBDD71l5y3a/Mv/rChn+UrFNL9HO4bmIhY
Tf+Rr1G0O+A13aBdxjc5+QYlu0N+t+uY8+ZbTMtfODJ39QW+w7NuXu6Ye1zk
Fd0LyvKxfMolvkfF3OWy/WY6a37Agv4kWbeVzpofsajv8bpu0lvPvLUi7/GS
3Qf/A68kNQs=
         "]], 
        Line3DBox[{2237, 2934, 2425, 2955, 2767, 2768, 3324, 2481, 3053, 2426,
          2935, 3115, 3246, 2238, 2468, 3077, 3369, 2377, 2239, 2469, 2956, 
         3347, 2378, 2240, 3138, 3200, 2957, 2379, 2241, 3139, 3201, 2630, 
         2380, 2242, 3254, 2470, 2631, 2381, 2243, 3256, 2472, 2632, 3116, 
         3255, 2244, 2474, 2633, 3117, 3257, 2245, 2476, 3061, 3365, 2382, 
         2246, 2478, 3064, 2383, 2247, 3141, 3202, 2384, 2248, 3258, 2479, 
         2937, 2385, 3075, 3368, 3111, 3112, 2480, 2961, 2386, 2486}], 
        Line3DBox[CompressedData["
1:eJwV0LkyQ2Ech+E/IrHEHWg0LsS+L7H1CswwSWvGVuhxIXaJLUGttO8uwYyG
UTCeFO/8tu87Z85pmsxlshURMY3Lmoj5+oiF2ohjXNVFVMszqYgj+UNepJv0
QJ9IR+Rpj1ygSfnE3itP8SVc81s4tJ/a+vhf/Q29xTaStk7dKvrlO9xjB5W2
6oaIfXcH5Ac8YhezzidtB7ZB+QnP2MOnrcrdvG1IfsEr/vT7NGEr2Ib5Fn4N
RVsWRf26/IUlPuNMTt/sXd+6VpT0G/QHy/yIM218O87kI5pORozqO8rfh/Py
f6WNnrPCj9ne8F7+n5jzjpTtwjYhdznbjXH+HwV8PSU=
         "]], 
        Line3DBox[CompressedData["
1:eJwVzjlOQmEUhuFjg4oal2BoXYljgRU4hwVobK0c0VoTt4GthQpOyL2ATGLr
DkxYgQ/Fm+8777nnz82VDjcOJiIij5+piPWZiOvpiAGucD8bcYSh3Zpdmevj
EhX+lvu2W5UXXA/zmYgb84BfkV1uPxvRkQ/mPj9y+2Xe49vjO25hLqKl73JN
2eUWuVTf4RL57K7DN/Rt7lM+jd/i6voW9yEfuTb3rm9yv+ZltLjUPyzpdyja
vfmmydfMr3qBe5EpV+XO9RrOkHDHONWrOMGk9/7cDPV/y+836Q==
         "]], 
        Line3DBox[{1195, 926, 2664, 2521, 3268, 2276, 816, 2663, 815, 2275, 
         813, 2662, 3336, 812, 2274, 810, 2661, 809, 2273, 807, 3226, 2660, 
         806, 2272, 3316, 804, 2659, 1148, 2271, 3315, 802, 2658, 2520, 3267, 
         2270, 801, 2657, 2519, 3266, 2269, 1266, 2964, 3348, 3150, 2268, 
         2526, 3225, 3147, 2267, 3224, 3118, 2266, 3146, 3223, 2524, 2265, 
         1555, 2441, 2264, 3269, 735, 2517, 734, 2523}], 
        Line3DBox[CompressedData["
1:eJwVzjlOglEUhuFjo4ylpYW1azCuwCGg4oQYF6CoYGLiVCiyAV0JNk69icMS
aPAPIUI0bsDnL96c93z33HPv9O5+aW8sIkpIMhGn+YgzDLIRh+prIaLMD/g5
LlDPRfTky/K+O1d8hQ/4NV/l33yet1BJe8zyG6zxIeZ4G7d2rutHuByPuNNP
FiM29L/29NL3vflldpP/yZL0f7JEtsUn1AxyyOLI2bs9H6g6f1Pz8gJm7D5R
G2YW5IvYNtPRP/AnPKKp72KJ15zf84Z7U+6/yJ5xLCurn9gx84N/nrMwqA==

         "]], 
        Line3DBox[{2296, 2897, 2898, 2671, 3299, 3154, 2295, 2543, 2928, 3345,
          3155, 2294, 2537, 2670, 3298, 3153, 2293, 2536, 2669, 2535, 2292, 
         3152, 3231, 2668, 2533, 2290, 3151, 3230, 2667, 2531, 2288, 1663, 
         2666, 2530, 3272, 2287, 2444, 2529, 3271, 3134, 2286, 2443, 2528, 
         3270, 3132, 2285, 2527, 2665, 3297, 3148, 2283, 3229, 3120, 2281, 
         3228, 3119, 2279, 3131, 3227, 2525, 2442, 2277, 2069, 2939, 2522, 
         3055, 3054, 2938}], Line3DBox[CompressedData["
1:eJwVzrcyhAEUhuGjYaN4A/YSaHETZoXWymEoZaOVWsy4D7lwCWIvKzR2WGHX
DM8W73zvd875Q64w0z1dExEF/CQi3lIRTemIoiwmI875BdoyEa3ZiFX+aj5r
/2I2wMueW+MFXuHvcl0flHPu8nwDQ/q83sM3scBvMWy+L7drIz74HR+RB7Lk
rtk3y2hByfze/JK32/3hUE/oFSTx5SYvr5Dzz6P6J3b0X+ziWw+7B89e62P6
EU/xrHem5aL+WP1fPm5/zDO8o3qDLXdLZk/o1SfcnPB63okGLOvP6OOT9qf8
rC6iS2/Eit4vbzBlvyf/ARIHO88=
         "]], 
        Line3DBox[{2304, 2802, 2838, 2450, 2837, 2791, 3251, 3175, 2687, 2836,
          2563, 2753, 3126, 3276, 2305, 3127, 3232, 2306, 3219, 2420, 2307, 
         3220, 2421, 2308, 3277, 2564, 2422, 2565, 3278, 2451, 2423, 2566, 
         3279, 2452, 3128, 3252, 2688, 2567, 3129, 3280, 2309, 3130, 3233, 
         2310, 3040, 3221, 2424, 3104, 3374, 2568, 2689, 2792, 2793, 2755, 
         3319, 2571, 2691, 2794, 2795, 2756, 3181, 3337, 2574, 2694, 2908, 
         3007, 2909, 2693}], Line3DBox[CompressedData["
1:eJwVzbcyhFEYBuCjlFdJw7K77LLCipVwC2qFnFPFHSjl2FIII96BNMy4AWHG
BXAB2M6zxTPv95/vPeePDi/0z+eFEJZpzA9htjCET+Y4KAjhRr5wTUVxCGmd
afMHM+zrdMk+Ommwb5dTdLBnX+Jem/mZVup1WuQkGXZ1muUTTaTs03KCRs6K
QtjRuTI/cklSZ9F5xNvvvsfZ1mmQvbl/UKeT1Umax3LvsqVTJ3uopdj9Wr24
eZQEmzox2U0NRToJnah5hGo2dJa8/UUZD87iOpVymCrWdcrdvTDfc05MZ1C+
McSpu2t6d+aI+Tb3T51D+coRJ85XdUplCdX2A/KYFftmu6izb99/5iwpfvkh
wz/mfjdO
         "]], Line3DBox[CompressedData["
1:eJwVzj1OAlEYRuGPUtQtaBAwsYKR30EbV0BCLyr0UmKElQAqvbol7fAHhF4a
H4uT954zN7mT6w06t5mIaON8JyLNRsyx2Yvo40xr8ieseQ8trcEf8cNvkGpF
e4zVbsQSTa3Ay/sRI/utfaGhj3min9hDHKCu39uSnref7n6gwGu+5bQjLLS8
dudc1ev+4wErfo2KVuMzLPkVTrWufcVUryLRLvkLJryCsnbBnzF3LmH4/673
3r37hsS9LVLnX9uyf6F0J4Q=
         "]], 
        Line3DBox[{326, 235, 1780, 523, 324, 1840, 619, 305, 1841, 620, 307, 
         2105, 1057, 329, 1256, 2197, 309, 621, 1842, 310, 622, 1843, 311, 
         623, 1844, 312, 1845, 624, 314, 1257, 1633, 335, 1258, 316, 2198, 
         1259, 337, 1260, 318, 625, 1846, 320, 626, 1847, 321, 1067, 341, 
         1637, 1262, 323, 1072, 343}], 
        Line3DBox[{2562, 2419, 2972, 2555, 3069, 3318, 2752, 3045, 3044, 2932,
          2554, 3350, 2970, 2751, 3043, 3042, 2931, 3218, 3158, 2969, 2750, 
         3096, 3095, 3041, 2553, 2561, 2418, 3217, 2449, 2560, 3250, 3125, 
         2448, 2559, 3249, 3124, 2947, 2447, 3057, 3275, 2558, 2417, 2946, 
         2446, 3056, 3346, 2945, 2416, 1685, 2303, 2415, 3216, 2302, 2414, 
         3215, 2301, 2413, 3214, 2300, 3274, 3123, 2749, 2546, 2556, 3343, 
         2906, 2905, 2557, 2445, 2973, 2907, 3030}], 
        Line3DBox[{2911, 2910, 2576, 2695, 2575, 3283, 3189, 2323, 2839, 2573,
          2692, 2572, 3282, 2322, 2570, 2690, 2569, 3281, 2321, 2601, 3235, 
         2600, 2320, 3373, 3098, 3097, 2319, 3290, 2597, 2596, 2318, 3288, 
         2593, 2592, 3289, 2317, 2587, 2586, 3287, 2316, 2585, 2584, 3286, 
         2315, 2582, 2581, 3285, 2314, 3159, 3234, 2579, 2313, 3284, 2578, 
         2577, 2312, 2803, 3330, 2456, 2754, 2455, 2311, 3176, 3329, 2454, 
         2975, 2453, 3058, 2974, 2948}], Line3DBox[CompressedData["
1:eJwV0EkuRFEYxfGvzFQxofp69UqTqIHCFqzBSDMzMCSRWIJEuwA9SSndOiSs
gQWYIzHC7w7+Oed85373vrzJ9a2lzUJEbGC3FHGNT5wMR9zQU/pVjHgbiSjz
3/wZfabntDcaUaGzct+ZVVTlsryHW3kZdXfVzFf4D+zraqk376OuG9BfdN2Z
6Q7QRsOsoS+aN/nc7BAdtOSmrpR2+CmzI0ynXfnHWy19zs+YHaOLu/Q9drb1
mT6jF7RFB1hEO2EWtIBL/s/eFR2Xx5Cnf2FW5tdSdue93PPGkNzRP8jv/JzZ
Dj9PH+mEru78E7+Q/jGtOlfBK/+S9vAPJcosOA==
         "]]}}},
     VertexNormals->CompressedData["
1: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
6ssq4PrExbffJBHld91duzXDhPCVVuHJHXUwHcLTsdM7HDGnAj1fDDFBDpue
dJEPC8K+zdxZuz8jaU0Tk2QDClwjGfRWzTTDS5fTOo7PG8EXqRU52zKhyrp9
94mhfmRf+TlqLrwC3iddeDH8nQGJqkP+/yVOoIFUv3iPsE6w0Wh6hjtAh7MW
RcaLT2ZR0xh71T/ucfCf11jzfEKBskcF2rzs80jJ6apQmNk8fDy474rIJAkY
1JHc72/nkCU9XEnh/SI4ZGV2i54lQsjtU97DRxeQ/ttAtiWlXti5tnZBfCcV
7L426r2WwCBZsaw7iZzjcPuEyn4LMzJMHztZ+Gw/BhnhfRL3zsxDs7Rly8oK
ESZd2FYnvGgoytoJb2z5GZE7NAzd52Yhw1Vu2XgHHU0QKsIG/9agC+rfnGr3
TgN/3g/LeA86+piSbL30qQXNuc04vP03Dp6Pkz6QS+nozNSmuNjuHvT7CfcF
zcIR0F1B6VUddOSp67F6+/UgWtvJjpGKHIQLQzk52/vpKOS+3DaN1GG0zhuQ
s7a9F7wfZL1pG6aj+lNrJ0S/jqCeUzsPpdp1Asl1yeTvFB2lfvj0Ga89ijyP
3rXL/NkGSzfc9/Nj6SjL14C3y28UBf5+7vHfo1bA+jdwe7Pyqj5Gzf5X/Chq
dNE8dturBdQuetiQqXQ0tzu2KPvTKPLOqeTaLGuGK7qjPDv8+1DOS+NFVUo8
FO8K0FKSYEJH6rtzFkZE5GRs7vju4ChsXL079zQFD71xLsfU7ZaQw7WKCzNJ
w3DgwGHZjRAsnB0ti632pyAddlPpL7w9YOT1+bP1ewzY7X3V6ilOQy/oCewH
bjdCOGHFVs9+DvJa4O+EJB0dNLzy5umOSnD9r9g+izgFx9aO9Fxg1VPuiNJP
+21V8GrzBXnk+ATkx53+BWs01HJ7C/hIj8Md7QlMsOcAiBH0XQSiauFZwOo3
I7Fs9LvRfVWwnwlhqQ91SPytsH3JIvRgWiNyv33M/74xE84tpGRdHemFgzfp
cQEv5pHuiRdnwk6y+IXK9vLmVDfUsWkcKE3CImJ5wIOHR8jQLOd9NNqxE0LP
VysfCMahKPsXF6xZeWnJ43zUalwHYMxn3B6zY5H3/AOxnx1kaEwzDjSoHYCF
1y5vx6e/ois/1qlZ7QwQzojZWz4yCBejP6d3P6hDUyUCXORiBmCX684ZvyWB
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
nBFBh8h3QvaJuE+Qk7lqvqe8DqVkxQfbPaHD37g9MrjRQlBnkzgf3FmDeGc0
TES96NA1+zzdm3EfzB8M0DFsKUN5PdnSj15RIar3w5mW3jG4XW2kFKZRipoO
/HT4I0AFqorjyNOteNjmqX/oh20xytFjjyqZooA1lr/Xi+Xv9WL5e8uar99J
HMSD1F2i38dtBeiCzu/Y6kkK3Oi+MU5Nw8GJs69TEhe+ouMfQ5ZY5Gdh67Uy
55/Gw2DE/PzwF9YMdO6mrRsrw49cYVoKcbqEg72wscP80AzaaH4uU12D4TP2
KDgISuUine48ltOlLWg41JvFX4LOuK+39mxqSkUn7wwPNj5vQge7hqJPn6ND
7TThrM8qEeJDjhcKMtXCUFdm/upXEjTZyfzYeZsI6gVXVwc58OCgn3370Gsc
CIRPL10onYT79J8NnLJk0MldN25RHvh/3i/oxN4veJExKqJe3AMdqzRnr4lS
dNRnV/6OUzTwMrjzXm94CCJOkFJISe0wejW5fFmNClve/penF4vl6ZlieXpS
Nc3GXy6PQYDPmVyTjH44U7THZngXBZbE5j+eOjIO45PpUUxlA8Aq0RP5I24G
AMvB08Fy8NixHLw1o8A+gwc4YOlzL3gSMAA9EXkpOxqnwXphm/zzzXWowimb
3r08DBH6WS9qnlPBBuMJGI/B+OsoSfV4wRoUlr8q4/ERD746I47ipynwHuN+
GA/A+NMZpR+Bt6qQZvnira66SYhM0crcEDoDHhjXw3gYxlne/n4fZY6QNOuk
byajvz6Qea0Rc3IG9mJcCuPeGH/rqbRPS7MMBRt1kNQOE6CZiSh3+/oM+GP8
OcZbMK7/3qAhnVqMHvM+PsJhPwkatUKy5N8zcBXjTzF+CuONZ9WYm0KL0PUr
qSD5Fwep2WHq0vMUKMK4BcazMP7lxmjR3rgSJLLV6pQrczcoBxneLA+gQSrG
dTEuh/EVXMNS4LsydD36vaF2RwPcvKi9vUKVDhvw/3F+jN/GePnPLd1NSRVI
L20vm2JZKfB9+REV/YqhDzFeifHdGG/APUt5tqcSJZSV7l4+ng32T9MuBGfT
oRHjHBi/jfG/TMkRaQGVKJBp+a7MSDo8OB69k5hDhzWMf/mHa+XeljnrUInG
fApPC7B+g9tFeYJrH+gAGGd69H/z/ZnEYNFvTej1bU+BaVIiOP+Itj5nRofB
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
      "]], {}}, {}},
  Axes->True,
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->NCache[{2, 2, GoldenRatio^(-1)}, {2, 2, 0.6180339887498948}],
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->All,
  ImageSize->{377.60929527073034`, 272.9220069889544},
  ImageSizeRaw->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-4.986794801694183, 4.9999996499996815`}, {-4.987917722248736, 
   4.996697314958079}, {-0.7698989372398438, 6.689559041420794}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.021208343857414446`, -3.1908049839224333`, 
   1.1261943707578133`},
  ViewVertical->{-0.0654230409062576, -0.09713857870872634, 
   0.9931182821018987}]], "Output",
 CellChangeTimes->{3.827944913753819*^9},
 CellLabel->
  "Out[166]=",ExpressionUUID->"160bffeb-a3d2-40a1-8e13-7796c32b3bff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", " ", 
     RowBox[{
      RowBox[{"\[Gamma]", "[", 
       RowBox[{"R", ",", "T"}], "]"}], " ", "/.", " ", "gammaSolution2"}], 
     "  ", "]"}], "  ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"R", ",", "0.1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"T", ",", "0", ",", "1"}], "}"}]}], "]"}], " ", "//", " ", 
  "Timing"}]], "Input",
 CellChangeTimes->{{3.827944406676475*^9, 3.82794441737626*^9}, {
  3.827944471406867*^9, 3.827944473903194*^9}, {3.827945682800585*^9, 
  3.827945684245143*^9}},ExpressionUUID->"1bbd6039-443c-4d6e-8eff-\
e83316dc2c1c"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJx1vXdYjuH7+N8eSigZTSpEiiQj434SkpCRnZWQ0ZAoqURCWSmrFFGyd0Lr
aS/tvXfae++f9+99nef1+T6f4+Mfx/E6ruN+zud13895X9d5X/fZTGOL7cd4
uLi4ngpwcfH++59X2KHiqddv5sWe9z9vzj+3+rwT95K4y/VsR/Ghn9Uqacjl
axu01Cvz2asyitn2cfnIrzS5js5vDGc/EynNdNaqQP5807TQ0vgQRnZBio6e
Rw1yK61ZTndX5TA+20N/iDXWI5dTKjt6rKyCkb7wbk6Odgtypd2FHzV/1DGp
Kf/514589eIr995/amVuH4x1+dzfidxpbPsEx7pOZlN76GoPpR7kmfeSQ9fc
7mVEr37vs97ah/z0kv5zZrqDTIrE+y+77QeQS9Y/eL5WZpS5/erlSa03Q8h3
F3ss4BLiZm1a6q0gmzOCfJd1v3/PZF6WcNL94rGxMeT7w3Z9ebacnwWeT6mt
9pql943RzlK06t1FPQPPZCZeGz5EPQPP649+P2PwN3oG7mmv0JafE4megZfZ
a++90ZmHnoHffSu2JTGvCj0DvyFyh4f/TCN6Bm506ktmk0IHega+6fy3hKWa
PegZ+IYzNU83WgygZ+D1S+Tq1v/zBZ6Bv0/35jmzmJsFnoGfehEUEO/Fi56B
C295aGYpJ4CegV/jKtnnkCCEnj/UF44p6UUz2ydMdzrSXYeegW+8tfpNVmke
ekbeYKA1OuUXegau7LDMUbYrCj0Dv9Cdr+P6NR89A8/bFWa+e181egbeM2fV
R8MZTegZuOaiNVOcfKhn4DlfA0PX5lHPwNcHnb45SXsQPQNXnDMksq9yFD0D
j1jzZcLdMuoZuNIld5WJ5nzoGXhVkMvXLkVB9Aw8pLF823v+cehZKWSyxk+z
P4xyskOi1G7qGbjkGlXJ9JXUM/Cx5ODZRwR/omfgU8ed1v9ZSz0Dz1J7YxNl
Sj0D15BlfWmeSj0Dd9ibeF0vhl7PwNc0fvEfd5R6Bn7IUeruqofUMx7HbeJh
/hF6PQMPVn8ZP9WPegb+VKqsNDeaegYetarrsMF+6hn4ozuy+QFy1DNwe/cq
s9vi1HNa3JzvSnpZTM+pRer+V/6iZ+BbotTlLG1z0TPw75a1bXbOwegZeNyL
D2E8PTRv4PGZ/pZHO2jeAG4l/jXVaAXNG8C3X+D3M7rfgJ6BF14VXbTnWTt6
Bl4hxB77GdCNnoGHrirw/lnZj56BF3dOPbbciOYN4JYDdaXrxahn4F1ZPbdW
P6J5A7i2R1DOVX2aN4A7FpqktmsIo2c3tbgUs+I8pq9v4dNqm1r0DHxScb1A
zr0c9AzcM0p/rsMB6hn4tR+qa5cERqBn4MpTp67k8qH3QeDn6wuuJlbT+yBw
lQkPZ137H/dB4AXGU6zX59L7IPAgrl/uDspd6Bl4+ooI+43SfegZuMS7lbdG
Ng6hZzz+6Uze4sgxvA8Cb/fbm/xdhwc9A99V0WcglMuHnoG3fN33eZu3IHpe
/9j4b7BZMRPxXvNa4+oa9Az8UCFvUIRzNnoGXpQ1QSDYnHoGbp0dGOWzj843
gO8Z9S5yMs1Cz8B7tlifCNlfhp6Bz/h25umu3bXoGfg91dtn0mKa0DPwptsd
BZbaHegZeG3+o6nLs7rRM/Bzev7uir796Bm4H18E3+oPw+gZuM2UvYf1XbjQ
M8ap1dhTX8mDnoHzKjUYJp+l8w1urv/8q2DGu5/Qii+pQs/Anzxg/5qyKws9
Axe1na9l5kk9A5c5tXm8+6Ef6Bn4o5vX58yMSEfPwC8vck2tO12EnoE7Ox88
1edbhZ6Blyh/z/ddUY+egYu/26k7bkYregbe8fL065NqnegZeKviJ+V3V3vQ
M/B9VyfttJg6gJ6Bux66+F26f5gBz8Av5QruUH7ChZ4x/tUd597U8qDnQ0Fp
t5X0qphA8Y7bxnsq0TPwnlr+WeHCmegZ+NV1ji5n31HPwCeb7bx+XeQLegZ+
0L7grNnGZPQMfD9bV3Pdwjz0DNxnuZPEgcPl6BnjDE+44WpRg56BLzqX5PjW
tAE9A1cQyE969G++DZ6BK06afKB3Xid6Bm7gYHT3hFYPegYufGvAV+5+P3oG
fmFt0wcnrWEGPAOPvFpV6j2DCz2Hm/pO/48PC9aUriSrcvQM/CrruSLvunT0
DHwib82amofUM/DLU/qXLDZ+hZ6BJ37V0DwUEYuegRueGlZcVJ6JnoH7yD/Z
K3aiED0DD+SKnBjhXoGegcuf7NyZ4l2DnoErhIjcrKytR8/ALZ0uz3W80YKe
gUf6Pjs6Tb8DPQPPUr8aeWRyN3oGbiTnknRrXh96xu9rXOtl/niQAc/SsmcC
zYr/MpdS5faLTixBz8Bl5Hr0VmxMQc/A5UalJ5qvpJ6B36z91Nth+Qg9AzdO
WMR0h0SgZ+CBU3/rDe/6g56BfyxoNVz4KBs9Ay9jwjU3exeiZ+DuI1k+/hXl
6Bn4MsHc+ud61egZ+LfLTzSntv1Fz8A/LxdS1O1rRM/ASzSWG+6ybUPPwL+W
hPma6nSiZ+DJDyI1NKR60PPFTC0ND6V/86eNx59nehWgZ+B3l82tP6CWhJ6B
b3Rz4L/k9gM9A2+/VRO4uscSPQO/I6Kk8y0hCD0Dv5CUv0TFJQY9A3+fF7VD
YG8Kega+IKNm8q2nWegZOFu2ceOr5fnoGfjHC5KGleol6Bl4c8oXN72CCvQM
PGP/4Hfejmr0DDzzNZfBUts69Ax8i4ud+k+nJvQMvOWdonmzaDt6zncRjgw2
a2K+Ojh2FM/MRc/Ah6cs4t85GoeegTdy7bisey4IPQPvHpo59GnQhQ2ekeur
arRMeIOegVs9qRezUfmNnoHfFW4+pBIRjZ6Bi/XyWlXkJKJn4K/WnHsyppaO
noHXxMYOvp6UjZ6BZ0olMRF8+egZ+MyIvg6zp8XoGfjHb3PCLztWoGfgucKy
WRdeVaNn4IGVH5w3G9ShZ02tgk3FwS3Mzurh3gkhmegZ+NFiLrO7idHoGbiO
brH6045v6Bn4U8HrX1c9e4SegW/1q4xklD3RM/CDHxPdWRLv0TPw/hWHvtcf
+IGegV8QdWzW7w5Dz8DX8BRuf3opGj0Dj/VpSTginICegUuJcC94YZuCnoGf
m1vj3XY7Ez0DN1jl77fIOxc9AzcNDH6b4FSEnoHbeFhOmjOvAj3fbw0sHBtr
Y859n8mlXp+CnoErr/7aYLOcjZ6B6yUbPZUV+oqegW/J3n+7TfsZegYe+W6n
X/KDE2zwDJxL6s9O08r76Bm45bqm18EPXqBnHP8uc01S/Fv0DLzxzKve8NNf
0TPwxHIu/e0iP9Ez8A/TVUNsTSLQM/Bn8QutC/hj0TPwit0qbFUmGT0Dn9/I
bX1BIBM9A7+adfT6uLhcxumPTM4e+zjmjcrLi0p6jUzd7QUywlsy2MAFKiwF
9DyamcrVZ1s25/9BfvQB42lW3MpMVs65tnV+AvLa3wIps/VeMtd0BeabTatk
w3kELs/lUixuVc8uEnxZEWzWhnz1bNlp6//5BV45Zpvy0yyUOfJcUtv9byvz
4eGGuRFVHTielXS02elCJ3IYP+HCuzVxbl3MmTmsKj+xbhyfuuLIqYHTvchh
/DnhiXPyUvuY+b+XPnXW6sXxmZ9WqQg7DyKH8YOnH2yLZIaZ5o0LDI8f78fx
7Rt9E3MjRpHDeMO/zo1XrbhYH0pmj9fzGMTxohEBp5Q8uJHD+Iarvhpd/9Y7
Z8zl4lUihnG8x2TT+FmlvMhhPPf5s8dYVvyseVxTLos1juL4IMn8lcVraR0A
eE26W62kiyCOh+MYBcwtMVQWYoFP0202082L45ld3pN2Or6jPoG3vjnkUD1K
vQEXys/LsnGlfoAP/xH9xPeGegBuKzY2X1iVfi/gqx4sWHy4gB/jhzjfcJ+b
puMpjPHD+Hytpu69n2n8lpP2zubiymBsrST6W6bT+IFHSU6pTjCk8QP/8+LY
ZZmkIYwfuFfUUaZvNY0feKju+l314fR8AVdxvvnq5HEaP8TZb7f8ELfqOIwf
xtsbfi+bslqIBfHMt+tl9DxymD3Ceq/uaQ5iPMA1ZutZmXwZZSAe4M2SoYqr
QrkxHuBtu84/09Oj9Qr43FjRkIAL4dQnjA+PNh1WEBJkwe/6rtiS7GCzama2
mZt2oX4+O+JD8+afZtnI73XHz7q1Kw7zQHM03+Hi4FrmjqCfRYBwLo4HbhX7
J0+pPAbHb7TJbh4bq2MuLLjpu+FrFo4HPuG53GbhNdHIIV9t//nRZPOVSOSQ
r+4Ifjbl1wlHDvlqyssbRZd2/MbPhXyYHb8vXbA+FvMVjNf0kE2KmZTBBj/A
6/1XpGjm5TPA4ThuadFOBzdmY16F5yPNAhfExNUqMe9BPX/a3/jTNQY0vwHn
+yS0nzWHXrfAjf16/GU30+sWeEVJ1RMVH3rdAk8I2lcgL0qvW+Didyb/sT1K
r1vgtzuSy2ry+fB6gPjHxBdYcytRDuN7WhXWi5sL4u8O6udDCfslHL7T+IGv
q935YyN/P8YPvO6RWuNCN5o3gC/06Zf76E/jB1455hebPZPmDeBuH9dOrYqh
+RC4SbOSW/9dmh+g/hxwKKwi8jyNE/gkB3kL6WjqGev/J9+Hhq6ncQKXNo/5
LeBC4wQ+KGFaNn4cjRP4gTO6n9b9pHFiPdxi75U5HjQPQP3W/vKpnSlT6PkF
HqWdO0ny+xjmAeDSAiekujfR8wt8L0/zy6JGeh6BP3jop9HzS5AF8yv4XZuF
fbfU3JuB8y74/S79WiDulJKKHH6nYapG+96xk5HD77RojbQ915ME5PA7tXox
W0DzaCxy+H3Fqo9NPrIwig35CviVze4H/N2LcP4D97WHabty9gXROi3wK82h
Z6XG82MewzrD+3JPdbU8zAOwbtWe8SzWrTwbOayzcrn63fWdMpHDuuDcU6v0
gaVpyGEem5Zmd03CIYktE2USqi07xBjd0h77Zfae6TeXz5zmy8Mq2W5kraQ3
gtxJ7NFRbQF+1liryHq5nCTG3dF8V3FwA7O7QEYyICaFDbx10arqsbEmJqv/
YvJIRiLyTXUilkp6rUzS5SsPLtTFskOlCzIkD40yRRmP1efqeTDCYlvXCRbz
4fFzJDNXeijVMnsG9s7XW5mFx1mU/Dwp2KyOaT9/55zMrgw29xtVY0+lKDyO
lf/EYwWmNfh94b7sFXhk/XBJBdu7Zoeq4PkxHG8SpBejJSDAAr5lscg5Lq5I
ZtOogf8RGWHk43zf3NbziGWEnKY0zj4qjPcp4FkldivFFcbh+Kvm1ezi4FSm
qlnPT1JVmAVx2mmfC/5Pfg2UX8YbGpGE8QAX/BhXyfsrD/Mz5LEn06dGR4xW
sGE+D9fPW5an6+8b7cyB+rtyOdrteL7YKrMnpSS34TwfxgdHip1RM+tmZOyu
5webdeJ4D4tNfkwxfU4B47s3+u6ada6fKRFxdPfy6sbx8ipeyaPd9PkFjP/2
26d/ss8w4+N7Xs8+rhfHu7cKSczTHMb1AowflyUhNHyei2W0wIznUEc/jpfa
9GF5tgGtN8Lv9P29K4/bSvLwvEcW5PqYFTcyEdlSosl2WXh/hN/vBoknz7NP
ZeN4uTsBcz2UWhhBa7OfITrpyOFzP1eddzQ2rMHjwHUSeDolb5MdXRfAfSc9
JX2/tmoT3h+BL0j8c6BBpoNZ+XXcpbjdHXiceiWJXgfuDsznMF5txUTFpT+7
meE1PIvfOHfh+IrJYZPDUroxz8N4Ca60z5X/8mxYzkCz2+ceHF+UeFpBKqgf
8zCMV277YGKkNszYH+94ZVbch+Mbgm4kCYUMY36G8ap3bJNahbhYK/vrD24V
HMTxdWsWjTc4y4V5G8ab3TG9ny3Cwxp2rZiqoTGM45MV8970etHnI/D7Mj8W
7nk/j/6+Zj8u/mZeHMxwPwz8M3BdCDn8fgVkcnyPlVAez78+0EPpXx56t8hG
4Tg9DsxjvbU1dR6doc8T4X7hm1xkEXyrAs97YOjJ3rGxaub2g++KaoNFeN7h
PjIhU3BaV2wpjuezXOaspPeXceubsPK4ZgGOh/vLpvDRQ2t3FeF4YyXBiXoe
9YzrOQ2uK/tzkcN8LOh68ayKE4mYB8DnjvZrA50f6XwY8kPRZrcaa5ECBo4D
401PNc0Os6zB+xH4X3DC/0HyMwF8Pgs+kwuiNYNm8bEg/8N58ek1Oqb4gRfH
g8+XZ9XlvRzoeMh73l4BCanZvMhhPvPUttYhKZ4+/4XP3Vr74OeKRAG8v8Dn
ntpjKZFrIIDj4XPveX3rHb9aEMfD5w69dwz2cKHHgc/NXHCr7rEVzefAb6jN
NcjYQPM25GfXZfUxra30OgHPL0VH4tuupuF5gfNlwJv5oMAph4F5O+Sxz2Gr
dc086HwDeO8788i13vl4/4I8Y7wm1XCOfQnbqOabeYdkE46vd03ZVZhRi/Uc
4LNU3AoHrzQwg6tnX4vb3YrnN/+SRufHF41YP4Hfhb8zj7PLnHE4r1i478R6
D6VKhknPjTI0K8T7Izzf6Tj3S8bgSAHGeeEIzxez4ipmYNbcma0iOWzI23Ae
jz0faj8WyI35Ac7jwd8PVHtO8LBgPJzHuxqfG8b9pePhPK54y4z4u9K8AcdR
Xm6htWyADzmMn72cmew+hx85nN8XCuWiYVP5WTCvgOM8cHczCfwiiByO817N
ae2NVsrhOCL3zqqJFgjiPAQ8Ny/43LT0cwkb8iQcR9Ryc8U9VV4WXA/g597q
4/sSnGk9ELkQW3+hAr0eIO9NW5LzNU+7BNeD8Lu2qX3quc8sjT0q1fMgRzsT
49l6hsdRf2E2G3zCeZ8/Z84eYXse9Az+D8rOCT1ykwfjhHlFh86TRDXuVDw+
5uEGtTM17/+tc514x7i4UnD8u7CpsUaCRWyH1TUC3l65yBdWrLwnPxbLfhq2
/q6GRinGP7+sJffvpEcMcBgfNsy70/lJIHPAN8ft+PEqHP9oc1PrurZk5DBe
KTRra5dROnOmxGWLhsZfHO9TPiK1bnMhchiv0bIj651tCXNJeqk4F1cjji9r
N7ow/UEVchgvskbt0tSwGsZtX31uSgrd93i3e5fXMs96ZueZV2oa3+m+O3ve
m82/v3YzpWReBHy3QIv84oP9zLH3uzrHLtP1r8n3s2cWzRtmWjjWv4lk/Xu+
UTA4ZRO9/yaPl9pl82CMGSHXOfCjQQ4VDa7cLJe5vy96TafrXx4ZgSe/9vy7
Dsn5guv5x8jK7wvHCvF8AVdYNfL2pg09X8AL9DIn3Ep7h/6BX5tux317ZwZ6
Bl6/3PrAz+2l6BO4zC2jiDz9WvQJ/OqE2bKnFJvRJ/DDfZ6ZHpt70CfwxJQK
OTXFAfQJvD/kxaIh+RH0CVydrMfBA6xbjURf1wxtpB6Aq6pKD6hExaAH4H+d
rh6Ksn2PHoC3FH66m6ZKPeC6W2PA/FQXvd6Ar51fVRvDQz0AL7lZPPoypgk9
AP/WG218cDz1ADyJ98kJ93J6XQHfIn0yQryUXlfAZch6HzzAOrpK8dff5JMF
6AF4c6PY3Ouq1APwrMsx/o1X3qIH4DnuWzZNS0tDD8BTe8ZaY/yK0QPwkyrr
o0sm0t8X8JX1N6YlXG9ED8Bn/hISaFakvy/g19snBdlk9aEH4LtKdnrN+Tdf
aeGoP8SQ+gN4gH1QH0fyz2Ttz0cPwBXy2jv730WjB+CB21i9r1xfoQfg168p
pN5Zl4IecH+XzNcbu24XogfgMztvnF76pAo9AH++/JiFvRfNM8BTjleti/7S
iR6Aj/sYpv1Yrhc9AA9jpR6T+j2AHoD3j7uh2+wywkCeAT5BTKL0dRwXC/IM
8D8Lo5qE6nkwzwC/pVVz6asqP15XsN9JMcndkVsxD30CjynW9TmqQn0Cl3t3
zWyFnB/6BL7oO5+I8lgi+gR+3/6MRXB1HvrEz00OvLPiVwX6BH7nhfvDWqW/
6BO4spxPwOXcdvSJ3KVFULC1C30Cr3i22l9EvQ99Ahd5/SX5S8Ag+gTO9lyu
/9xgFPM2cOND4XFWMjRvAz84NXlmrQbN27CvSei6tqVLdA76BL7dZuF2w5dR
6BP4tNxRvdj7nugTeMazKY+7l8ShT+C+DmZ6ldnZ6BP48zm77jXIl6JP4KrT
hJd92FaNPnF/194jv+2PtqBP4LYWl65nHO9An8Dva2j2T9LpRp/AZ2eXR4hu
7kOfwDeft+3/fGsQfQI/3inXriwwyoBP/F48s3YXVNK8B/Nba9fOly/Ks9An
8PGb/82a+KhP4IdfHJZ7Ym2LPoFbeV3ZN005Cn0Cf3b37hwj1wz0CbyxNHe+
vn0B+gReP/FKw/QNFegT96GtbLjsklSPPoGbvpCwkT7Qgj6BlxXzsR5Jd6BP
4Fq6v3o+fetCn7i/y3jp4ma7XvQJ/PjAj5k2lwbQJ3Bv+/gtu0OHMX9CfXK8
/w4Ps3WZ6BP4hm0jRy7oRaJP4AtfXnY0fGLPBp/ATX52rGmeEoI+gRc9WyVz
5GAy+gT+avdR9blR2egTeIb0Q3Gjg0XoE7i4zKY7btNr0Cfw6mMuK2Sy69An
cMkp3Weqk5vQJ/ARtQVhpwXb0Sd+355zfz13daJP4L3N0WuaC7vRJ/Dm2fcV
lZ/0oU+o6wb/jS88OycdfQJ/fWeCumVWBPoEnvhxuHS8oSf6BH6YZXHwico3
9AlcRfdY27jiGPQJfNLq6CM7N6WhT+Aer4Q6vu/KQZ+4z2pde3rB1HL0ifvN
ZmkZbzpXhT6BX1+Ubjvufi36xP1dRlvnL+iqR5/Arz62y/3wuhl9Avd7x3dj
8EA7+kRvOxzatZ91ok+oh+c1ei9pfvkHfQLnil20TIQdhj6B+3kpRxx/64s+
gW8w9FAVyH+FPnG/08Fp2Z/9QtEn8OhN4qMzQ+LQJ/CK9KtbEq1T0SfwCdZz
+ape5aFP4NZ+yduyuorQJ/B3orVnJr4oR5/ADz3Y+TzQpAp9At/+S0bsp04t
+gS+SP657m67evQJ3Fg+53ixRDP6hOcIUsuil0aIJqJP4As2TVXw2xmCPoFL
uIf2+sW9RJ/AO1JMrLXve6BP4LWHH8at7/mCPvFzbZSGPjFh6BO4rOACHp4r
MegTuOTeV99Dj6ahT+DcwzPbZDWy0Cdwb7u62oeuuegT+KUzFdOmbC1En8AL
faa58PmVok/gtkLHrq7aUIk+cd8Xn8Gbr1I16BOev6zeU/7t8/lY9Al8VnXN
00teP9En8PzdZR9er3+FPoH7aSm6tH3ezwafuA8q5r5CiqIf+gTONWN9vMnI
J/QJXGCKs9SPrcHoE3hM9LrXZ4ai0Cfw2RfezGuvjUOfwMOi9po2mCejT+C8
n00WsZLS0SfwugyR8PpJ2egT+JOp9VX52XnoE/jK3mLbZSuK0SfU5fjmXmy6
2xaJPoGvqetQs34QhD6BR+sZT/yqFYg+ge9aq2G51tsdfQJ/UvlQzffcOfQJ
XLN384OTGo/QJ+6zEt8w1O/9En0Cbysc+fOt6Av6BC7B26hp5v8DfQIfdLbf
Os4/FH0CD3vrbzrOJwp9ApcK32K5Z388+gTOY3PE1XdRCnoTtbMQ5eb6wkhF
mTdPaqXr4n2kPnlPxj0tQjcOvXkrBNRaFAcyEfGtU+wC/HFeVEHqkzzugomr
A1Lxd637Mssk1Owp81nn5cZ7CfS+PJl8rpXV2PcVN+n6zox8rgJ5rgRxOty1
+u2hFMXEhh6aWfKAxon16ukJK/x1aR1jZZDu3pLgcGbhaIiWugldt5aT+ttB
ryDfwfF0/X5F/x3jqfSbmbsgb96uYrp+VyB1sNl6RcdUGmow/iskntqXJ0pN
dOg6fTuJp7wsPP+cIK1X6JJ4EqTUImfX03V6A4lnJ9l/Bd+359DHZiW9ZOZ1
6R2PzVb0+0J9LyHTP/rjJPp9H70vO8TFlcgsfJfuLvKR1m1OkLrftyXG0srq
9Psu65uQXRwcx3wSe7ylbgat2wiReqbjbna352Jaryhco73+p1kM4xJ+JVJU
ktZtBkicB9cVsO9IUQ/JJM6f03+Zd4/QesVTEuePj0np8hNo3eYMiXOE7L8C
D8HTuu8VB2cyn4bcUpSf03rF89ORZzyUMpmt728H/LhH6xU3Im7r6XlkMFL2
gYMjcvS8wz6i0diPnlbraf3wS+JGAfPiNGZq03iX0c30vDuR5wJ259Q/bAim
9Yptk+0v6nmkMDwWVsYXPGjd5jeJU1cxx4F/Db2eX5A42XP7Ihhp6sGNxDlx
SdavalV6PViROL3JPi7wYHXl/lslvTzmzL4929c8o/WK/TkHrhcH5zIsvYej
6+WpB5058456KP37fYhtfjHHjNYrYN+UkKmZ95Up9Hc6OTVahosrhzHIKw2e
/LwIPQzL3xsINstmnk965//Xqxo91FrtzzMrzmKqPG8UFS6ndRtrEuege1XN
snxarzhA4pxs4Vj6yoHWK9aTOG92xMk12Q2iBzUS52Kyfww8qDWqxZgVFzHq
PgaxzFlaZ5i6aui5kl4R42MUss78K60zjN1LsC8OLmQm/5wqMVuF1hnqqzz3
eigVMsGnA0+LiSejhwzNw0v0PAqYyaL7RP/qFKCHXzfnS3BxFTDlRSNCH7ho
3eZFcX9bsFk+09d5znzzUlq3WUjitI+aPOuxQAd6mE7ilFIo10w+0Y0eeNz/
G+cuE9W5VqL96KGRxLlv90iC79AQ5vlsEueMou0/WHK0bhNK4lyZsEpS+zSt
2wSQOFOEHrn71fPhddW4PaUk2Kyc6Rb9cVVMOhd9Zr968tusuIwJ9soyUF5O
fYb2mzxS0itjalLmTstPpHWGAH31c8XBpczsgfmxP8/Ho8/bz0YMPJRKmb/b
gs4nnMxFn9YdSfP1PEoY+9VHo6qFad3mwNpHwlxcJUyfU8/V8u+16LOZxOls
N/znag6tM+SSOC1lU8+pdNE6QwSJ8/SJddGXWT3oM5DEWXesyEqvqB993iNx
/lq/dvbXxGG8b9qQOJfF8/nyuHGhz8Mkzg9S72sPV/Ggz+zSxUNjY5XMhorl
ov4K2ehTV/DpyeLgSuagkkVrzztaZwhdyF0QbFbJzLDSr/o6SusM8Jwu6AkT
JuUQjT4DnFODzIorGMtOw63XVmWhz2kfNRT1PCqYdd0C8vxvi9Hn7Tyv+0p6
FUzCO5FPcwuq0GcOibP+7V9hIZ0G9KlH4pT7vORtl1srXReTODPqup9oz+9E
n+okzmdbXYpvHuxBn69InE9dTCdOqu1Hn1IkztiC3I6gf57B510Sp6LK0YAl
rjTvqXvw3lTSq2Eu7YhwyL9N6wyvyPN60Us+/hFbaZ1hem26SXFwNVOxUFYs
QMIB53Xw3N/A9KCtQmwY+uRZ5qPtoVTN2Poq8TTmpqJPeO55On+/Y99IHvps
dDOV0/OoYjwWsXqcnpSjz0Ukzi8SqsNHH9I6w2sS53HlUBdPgQa6LiZxemz3
OzantwV93iNxnt2997BgaAf65CVxcr2Yd2RWSjf6tCVxllqU1F9c2o8+m0mc
zE23U3ICtG5zb33WZD2Pv4xRke5nxzBaZ+Al+xmcYwrL9o/QOoON17OOsbFa
ZvEP5XlMEa0zwL6ILSd3qwoGB6HPw82n0oLNapnBn7Uy3ksT0Cfs42rkX/6l
Y1MW+tzALH1vVlzDBMTIaF4wK0Sf7iROPoOgXYf4KtAnP4nz6yEZvibfarou
JnE+/eE82f99HfpsIXGKleoEGjPN6PMIiXNbyXjzyz/a0WceidO1JMNG0a8L
fW4kcSrfSQl2qu9Fny2Dfi/MiuuZ2TzVYadWpKDPI2S/xxKT0vT1guHoM3ez
maOSXj1zUHfKlh1Bz9An7Btpjk2PbD36Dn1G+C3fXxxcxxQlbb1p1ByJPmH/
2wndFSmOj/+gz8Au/mUeSnWM7+OWD8UXstFnK4mT5+raDSEu+ejzKInTpGDt
3/uypXRdTOJMMB5tSYquRJ/6JM5IsyTr8Za16JNN4hw0dtF48boBfS4mcS69
6XrL3K4Vfb4hcdoEJ031Gu5An/qfLdQ8lJqYr7tHtsW+onUGNtnflbh0t1JH
CK0zaPCsFNHzaGSkbfY/FXzsjz5hn5hZqbDQQzVv9CmzU6h+bKyBMY68M0HG
LBh9wj5G+0IZ7dM7YtAn35uc2GCzBuaJlNvjK/V/0OcmEuc+sWeneNrT0WcU
iXO6dNqW19I5dF1M4tQOP3bifU8B+nxL4hx8/8GZK7AMfcqSOI8YnV4qHliF
Pj1InFsjExbccP6LPgVInHkZkUOug43o8+3R1aHBZi2MTrfM5tWicehTlux/
Ozln3eatUr/oujh43BOz4mZGUrH/b/0Jui6GfXTP1r64nrHTEn3aCedbK+k1
M5fcdS/MV3+LPmH/p6G2gK3Esl/o09jIf1txcBOjdDL42zvNaPT5jsT5+3BE
b8z6GPQpT+JcJjBhZZJ4Evr0JHHqy4YYbRPNQJ+CJE75l7ta8jbkoM9LJM6M
8bbf+/YVos92EudTzbnXOw6Uo08TEmednWCR6JJq9Mk/bfyG4uA2xvBK/rQX
TlHoE/YLLVzSGZKi+gN9tp4qVPJQamMc52hrp799jT5hn3BfmDt/vrsr1hny
w19x63m0Mp2qv/s/ffRAn7Bv1mTH/SnPvr9Bn5ETrcrGxloYaYsZ6k+2BKFP
ARJnvtPhH+kl39DnJRJnu/LHI/rXQ9BnO4kzZdGcY40K0ejThMRZUP8kcyWT
iD4LSZyR1pvfliSko8/NJM5r9XYPdc7nYJwTyHp/sXiH7s6ZTcjjqkRnb/QI
YuwXLsh67Ub5ZbK+Tl+n4VE9ia43r47+HlbVu8q0qz+OX/2nE3kkOY7jecvZ
T5Pp+us32SeTXispIWffi1yWrOvLteyOuD+j67KFpF7xc+uZVQrWg8gvkfrA
z7Le3soAul7LIXWPNvJeFfBCjnU9eLMmx7d3agr9zc2N3J3UVazXvNwabEf5
bfK50nlGJ+5f4EG+hNQTlOS8FnYH8OD8f5h83xSy3xL4JlJXGd13V/NCKC9y
NeJhqYiEC+91PuQbSR1jLtl/Bb8LLnIeu9nHZoooCyDPIf5fHNVybfATYGE9
ltQNek9zK+zQp/UBAVJn8PlUe3VQntZJNEldYlKT/BHL/7Gvw4SjPgAeVpHx
xfvlH+4qpn48SZ0hW8pzjWsO9SBGPncO2T8GPJrUK7hO3k/On86P36uN1Dfq
+93lsq4K4vcyIHUA09Anb0720uvNkdQNZm71fPH3Db2uPpI6Q2Lc4m3FjvT6
MedY70P8P8h465Xzfylept/LhdQN5gWp9Y9to9/rOvlcm4pVziUV9Dz6kvrD
JBX2NENHeh73kvi3jfHsvXJcEPl3UsfIWrM4f06iAAviFyf1gbCYlZJaY3Sd
Po+s05eQdTrEOZWMT9uy3mPsHr2etcl6v9Vh/QrXtdwY5xipM3Q+0JSMbaPX
515SN+i4dCLIcT0vxtlA6g9Hnr0oe2dHr0MLUn/omjZ5KO0IPwvysw2ZJ78V
0emu3Enrw7lkvjcct6p/yjw2cg0yb5nxbP5O1uFwWk8m919b+zN1butDkbeR
+8hKPm7r2cW/kEPe/mitfv2WQjAb4owmeTu2dvcixbxCvO/wkbwdsGfixuMh
WcihfquruMjG8nEm3o9g39cWi1NdLZeL2JA/YV/ZvKvFJcMmTXhegP+W7X3y
Yyq9fnA/WxI7KncZvU6Arw/+Vb3HSgDPI+yz8sow2c2TSY8D/CXZhwnjYT+S
/8N1ZcwvOh74xJ2+NzYK098dcPHrH664XBLE48B+no41un82jNDrB/jrRsvH
t1k0fuDTPC3OlAcK4LoS1oM+pg0mZZJ0fyOsa/asHVCYbpGBHObnwlqu4iam
qchhnvlk2fwmvsIk5DBfStswwKxgxSOH+/4ei+52o8/RbIgf3w86e2hz5AZ6
nQNPD74aMG4/3W/DT+Z754T8R7kGkvH4ML/1Gu+zIUuV8qMwnxHMO/H2RAJy
mL8pbN5qOt2bxhlFrs9HqlFOPAUxyGF+krAnMqdJJAav53lj/70vL9YOsB7t
o/HPIPe7tSMuxRO7ad1Jj6ynUlMmHzrWRj3j+lG52nvtfcpfk/XCKN/NaVqX
0pDD+ij9dqhfx49UNuRn8FbEoyTq3NZF15XkPjvriarAUiWat2G8sc7lw/cs
+pDrk/vmDPI8AvIhjL919qHcJuEh5F/J8YO2KD6fbkQ5H7lv/q7tyX1XT/en
wXE6yfwBrnN8/9qZa7uUPjcLxvcS3sUx3zDmeI8Svi/kh4/qHVUF1rQei/1C
j5m1hb3owTiBv79T4MdXTuuQwOeR90cgTpiPCZvubJJbReuQv8g8JIljHgL7
n+tme28e/EPvU7A/uePql7fD82gegPGSkiFca2bQ+xSMr45i9R72FsQ8X0Y+
d3mhdnWUDr2eweeQ4q7ZjUwR8pfkfH3o9R23RKSIDfPtZHIc7t07DzzfXY3z
8GPkegjxMsvK2EGfC8DxGxvU3qaebUQeRPzYnxTIOKvSgHwf+V04Zpcdy5lE
12t3SB1sjSL/ir/SORhnE6nn9LlM9c91o/kK6lcaZ1sT7y/KYsP5qvw/5p/A
hcf1VE3wpPMKeJ71okTqYk0sD15vpv/HvAvmdfcM2ytCc+n53c4xbwQuwDHv
gvNoQz43XEFIZPMpen71yfy2O2SC2NmVlFeSz03q4Lm0ypVyDTIPlDfx8t34
iHLcJ/xiqG3MQRDzTxI5L9fdNnku3kCvh63kvFi1iO2KUCpiw/eFff6vbse3
ev2bZ8L1BvvkL5cqFpyOjMXjgOdf07mMFBILkSeSeXKPVqd3QwblzmSeb/g8
yZH3G33eB7+7Z2aWrsu+xmM88Nztga/uU5EYeh7hfDVLSlj/KKL90OA57y9Z
+9vhB+qxDwlwlXzpJQq2IdiHBPifr20p747TvpTA73fLrq5/SvtSAq94ktge
+rgK+6LA81mxyKdhAuPp5wJX/fghL/4e7e8KnHfESur2e9p3FLj7rkVJiVdo
31Hg15rcA88tp31HgRfOuB/N6qJ9R4EzkbL80o607yjwby/fOnJ/on1Hga+v
0kt9Lkr7uwKf3BSzRvLZKAPvd8BzWNfwHWcWXszD98KAT+Pbs1nSow49AN+/
ZKLYSjPafxX4KknbZ+GN1APw9mlaJqLXqAfgGd8+/cxZSD0Ab5y9+IfqX+oB
j3/s9adHttQD8PeTFjB+H6kH4Mohi9pcp1APwNl3/P3cf1EPFmRd8+3KZ6/n
RbnoAfg9qYLhg81/0QPwQtktIuZxtF8Z8NZcEb4DZtQDcJOlGYvml9HrEHj2
4/6IgLe0Pyrw+rrjEjvmUQ/A7waXnfrKRT0A94tpjh+UoR6Ay5hYOxz8H32V
geuJlz5UHqX9UYELjKs+cNeU9kcFvu+mdW98P30/DnjzhIZciR8C+J67BFlP
9Z268FBzJvUJPK+8Y8+QLPUJXDD9dNyK89QncCWboCr9PfR3Dfxths7piE+5
6BN4EI+fuktIJfoEHmAgbdVUVo8+gW/jE93ZPY/2mwWecUxmisIU2m8WOK/D
3c9bltJ+s8Dv/zzWFf2Qvi8MXJ5lul/Slwt9Al/E2u+8cSr1Cdw1vaVqMpv2
OQH+ZtxMhZ3eQuj5J3l++sp7wbe0TTnoGXiDktXOV3Nr0TPw2jj7w3+OUM/A
eUZuVRt4hqNn4D0Tfx2dMYH2mwW+dNmkz5sv0H6z+Ll942L6ZWm/WeA3cjWs
6ifSfrPAY47GG4d8on3XgecZWysKuNK+68Cbtz0SvfGc9l0HLuIhGvt9iPZd
B77DsfDz9Bzadx140gXri6w99H1V4Oe2RBQsmEj7Nuwnz08Ttj4NEj6Yje/H
jf3//8oZL9IHFfzDeL36ocFX4vS9bBgvRvqpwnmB8U4nPJs3nQtGDuM5+6nC
+E2B0iorQn8zwGG8PEefVRg/TTAyc/vULOQYP0f/VRhv2rRkcmRpKXIYf5Wj
LyuM39K88cc8LvoeKIx34ejXCuOHRDv2Jm6n/cxhfBlHH1cY3/5jg7HOEP2d
wnhJjv6uMH7D2ftz2Q709wvjuzj6vsL42ICAoznL6e8axrdz9IOF8XutE9UC
ltPfO4w34ugTC+Nfurp8VlxL8wCMv83RPxbG32m5U/nlCe2/AePtOfrKwnjD
OcnT1s+geQP9k36zcN1mkefpydIOuzdoZOL1Cdyw6jlP281KvA6BZ4tMHnZ/
Ta9D4L/OLP4pGEz7zQKvX3W3vrqf9psFHt1icPP3T9pvFnhgQ/aruvEVeD0A
n6ASN0m0gfabBT5psOjxwzHabxa4rJjNvoMmbXgegTvuuJHX/JD2mwXeKatx
QyiY9psF7uPyljUqO4DnBbhe5oQPWoW03yxwrX0B7isv0v4PAeR5+umeb0F3
FCrQJ/CPnm6egk+pT+CWCSZnTk14gz6Bn60xijWeGY8+gXsxBvUXurLQJ/AZ
s8WFjGuL0Cfw+rYrrZY3K9En8Ncqyn46abXoE/jsO44FYnsa0SfwxjdvU6ev
aEOfwAMlt6g1r+9En8AVhSr63DV60Cfwv68P8ria96NP4Hb6B4wruIdxfn6B
PDdXdU81/b27FH0CHxibfXTwf/RRB25y+MTR1ROfoU/go6zvghlHotAn8Duj
E/ViHNLQJ3D9HZ8eOcfmok/gZhtmp42eKUGfwD/krYxivlSiT+CGbq7XlpnU
ok+MR35C5irTBvQJ/KiUT2RZVgv6BF737epL5kAH+gS+s2dOmqRUN/oELmYs
Zjd3bh/OezeQOiGb9BcCn8A1Y1PcrKtpn1jgAUKmftqf3NAncKeTKto7on6j
T+APLTdESpgnoE/gAlUn2HsrM9An8PFC22Y1S+WhT+Cf75SdU7pTjD6Bb6q0
0NvwtQJ9AjcMVDr8pboafQKP33jl9CzrOvQJvKzFJ3O9bRP6BP5lwirpKu52
9Am8Qr4z455nJ/qUIvXMjZFy+Y9HEtAn8IRHqt8TZlKfwCc/nLe13W039s8E
7sh/r/rP5a/oE/h1O/GdR5oi0Sfw5LfblnVHJKJP4OsjLXhm6mWgT+BybSdW
5BvloE/gIosfZ/2JK0CfwFmnNqxT/FKKPoGLtRS1xPtXok/gjfoGth5FNegT
uJDNz/GX79ajT+AGp8Y/rUltRp/N5DmFltEH/riFtL8u8KviPadLxGl/XeDv
nWQkFf7cQp/AJ6k6lg1YBqBP4GI3dQ9w6wSjT+DfWo2eHQiJRJ/AZ4WIZ6uv
jkefwL2/id6YzZOCPoFv0p2keUotE30Cd+sJzn2ZlYM+gXMVLjJKm1qIPoGb
7K/R2aRUhj6BL/ZJEV8kWoU+gVelytbxXq9FnxGkTj5myTXV2Zj20QUeaCNy
+XQQ7aMLXDiqovm7x2P0Cfy75NpnNSbu6BP4cT1Rvra0N+gTeJmQlaDNn+/o
E7jXMWneBZ0h6BN49rL6hOo1UegTuGbf8++NT+LQJ/DDoTEPctKT0Sfwn1+S
1T4/zUCfwOffuqJc7paDPoE3iXE5O2wrRJ/A5dtunz1aXcYcEDx89NbnPKwj
2acs8zihEMU22rJad8qhcuQeMu/XLP75m/m48e7DrYK0HvV6Qud+s8YcZr65
g+CUQ7QexatsMD+RXcm8v3/mYnFwM3L5Jp+pWusamIdFH89vvdGOXC5yZovy
tXZm8qhPnWR5N/KgP6u/K33rZ3LuPfDrH9eHPMxDwuEX3wjzYObtvcVLBpBX
3VF8Jh/NxTL87iweYTyEXF2oMcRCmpc1ed2lP353R5Cv/fSwfo8HPyszz+qa
c8gY8oy4fdk5s4VY9i7Rjf/Zz4r1rpGj4krmQcyq41vrdttXI29cH98eVZ7N
hLkye2Vz6pCHWWo6ihtXMis+qv2pUmlGvv/m2Ycd4xuwbxjwLqfj0jX/vED/
LuD3khLU7riPMNCnC7jrZCmHm8rcrNQr4ssPdVRhXSgk6JyV2Fgms+kV93sl
vTrkku4V71YdrmD+JLbLNPo1IXcsiAlvHapjNjaX3/3c34Y8TeLB+Ja6NkZp
1Zb3Ve/7kQfIcw/+auVi1aStM4nLH0S+UWr4t7ctLyvg8CrZN7wjyD3Fm4w6
5gqwiiNjhlUi/mK9pWCui2t4Wymzn/ThAR6dpPAmwPAv9vsF/uizZc/wv+u3
ccw6st+tEesJS+4H3lXRq2FOKposiqhqRc6Tfssgx62J6Sd9e2BdHJ23/eeU
3/VMCOk/A1xbfXHmsmE+1jmOdXEgWRcv5VjPLiTr2acc69axk/9dt0pxrE/d
yPrUi2MdakfWodM41ptXyHozhWNdWUTWlbc41o8TyfpRn2Od2E7WiSIc60H4
+yB/ONZ98PdBbnGs7+Dvg+hzrOPg74MIcazX4O+D7CV5BtYXmrpqX9W4wtl7
SJ4BHnLYTWarRSDznuQZ4Kd1rGKn7U5k5pE8A7x3wdQXcsdzmbckzwAP3hN1
Ki2qjHlA8gzwI4+k1u7WrGEkSJ4B7ld0fXmcTyuTTfIM8AO8h+JNVDoZT5Jn
gCt+C6y00OlhdpA8A7zLtSSo/kU/I0HyDPBCwfDxi7cPMxkkzwCfpnrj9u0F
XCxbkmdwPfKzyet35lVGi+QZ4G1WX5ctc49ifpM8A3zDoWV6379kMMtIngHu
JnhtopFXAWNE8gzwL4JcC7z3VDDeJM8ALz3ycNvazBZmP8kzuC4bHKqc4NzB
SJM+Y8C/xfZrVB/oZopIHzDgN5e/dFx4rY95Qvp3AV9cHCinwTXEJJN8BfP5
WFba2TVLfzJ6JF/hemSSoHFUaSKTSPIV8I1tnjz3O7IYXZKvgMftWOAveaOQ
USD5Cvjybuu4/S3/5hEkXwE/uP+jfOy2duYlyVfAn5fEj4vv6GSOdC7Oc1tA
1x3GGxpPG1b0MIUkj8H82f3Rsvfbz0Yxe0geA65sE76Fu+APk0/yGHCLnIag
0mnZzDvSzwp4jCXfcvbSBuYU6e8H3KukMPq6fQszl/RlBZ6p0+4yT7mDqSf5
EOafTkeY9be0YpgTJB8CP/dSSt5W8A+zyH7M/LPtMPLHm1RmLBD+y3SM75vj
ETCKvOvEZvcFrQ1ML8mfMB8LT3Tin/fx33VI8idw7uaOypfxVczn5bOkL2yN
weOcXTmycuhwFtvgwOQ7K94kIOcfCJ9d/DmN3fr6v/304Dh+d6Wto65nso3m
n9l+pCMc5y3uCwqEp6hnsG+R57lwv9Yk+xuHSJxwf/xwdK6NFW8Lw89uUtQT
78DxkmsOTMu06WBWkf6QMF7B8MKHl//WQbFbq0tUVnfh+ObZBxfW/8uT0B8S
xgcc2H92fFYvc62q6KHYqR4c3xgWwmgFDWB/SBg/YyJXiylriFlrnbWl4yGd
zzQOOTxvFBvF/pAw/u/FK+0Lqsdw/gbjjYJuOFRfEGJZ+8/N0vbtwPvsdvPf
pi+mdTGLNWfeUkrqQq5/8C63nUkf0x0/ba1gD32u9Fdn1pL9f4eYoD0TRxpm
0Pv74vIDlwS2c7EWk+sE+DPHw2PSF/lZXeQ6AX4j3ebjfH3aPxnu1zakvzon
v8jRdx14JOm7zsmjOfqxA08m/dg5eQpHn3YLjj7tnNybo3+7BUf/dk4extHX
HTj0defk8zn6vYO3LWOyZ3Xm0X7vMB76vXNyB8K7yHmEeY5l3oeXXhV0Pyfw
ULJv8Ds5v8CNCoc/7d0/ytSSfAh8QVySw4g6D0uDnHfg7edzC6/L8LFekTwJ
PG4Wf3N+Eh+rk1wPwH2DL3UOFgiwjEn+BG6R+NpyiqcgayLpnwn3hcuk/yef
9H/74AG3l/qulLA5mZ1B8gnkYaex/J0uz/PYtdWWHXG7s5BnSD061zgQxz5L
+itCnrxO+sbf4+DmhAeTvnzAZ5B+8vEcnIfwPPK5kMe+Pb7tcv9DNPv1edN3
b5xzkJ/vOVrgoRTB7iH9/SC/nU2NLWkyiGZLbr+4rFolA/Nb0ZNJm4tYUVjH
Bj5pgkvTsEEmO4fMH4CzY5eOT1xchvNkyA8KF0ryVorSvvHAs60PXZ441Im/
L+Crbrg/zJlMf1+YZ+5fHKnaSX9HwP8e+bykNor2FQe+1av/m+IC+rsAvkXr
2zRNL9pXHPir/nTnWEXaHx7yHr88r8rM5zQ/ADfqW2Tu3kDjBG55pdK334T2
XQe+RjuCb9ot+rsGfkxb3r6am/ZdB75u0v7Vk57SvuvAD2+Y8z1wP81v8Pt9
pz/ct8X3f+c3zr8rAeP7fNMvfm373/mN8+9NwHj3IZHUxH+/Q878xvl3KGD8
NevBheue/+/8xvn3KWB8ocHevRuVeP/PvAd+YPw6tx8e0zP+d36DvAfeYDxX
osCe8W/+dx7j/HsWkB+qjm/LLDOjf88C+FTV+d4TO+jfswDeP+l45bty+vcs
gCdze5Z/PEuvN+Dnfi5x272YPg/F+bCRM8/PoXR8Hgr55FzK84rW06lsqLfA
dftjvu+X04fp826sh/Q8a5Uqov3k4fibRH+c4g+n/eTh+GF3yvnk2DnIIc/Y
krwEHPJJ7dsjv7286d/fgXyyoOVsmb9gKnLID7Nm3Y+tqk9kwzod4uQfnZ62
wYkH1+nABZwWzpRo42N9Jvuj4HPfk32tYm3/7ZsKn5tI+sy3t/6/vJbw+WS+
h3WtOY6i6xYlYB9m+H317FtV/cmU9k+G6wT+/gh8L4hTotbDaB5/JfZjB94m
/5aRH27HOgbO325eWL1nPO3HDnz2zSRLTd4epubGCSctZcr/3H03wlyh/diB
d/l7bNReOMAETD+0XNaQ5s/IY7pLxV7QfuzAvfMdTmtdp/tSgOtMHODN4ONm
QV0FuKUTr+uAKn3uBv5tIuymK2/Kp/2xiWenDbcSd6/PYV8l82Q4jm3RJtsP
O/+yI8l9E7iS43o/97dVbLgvw+/0e6fYkohxwqwscn8BHiu+pOl+Eu3vjXWk
Xo0DRieFWZ2v/9/7+EtyHzch8cB1frhG5N38EdrfG65zA9KvG35fcD30vX27
sEqPD58vY76tefFZ4Dz9+9EwfvrmO0FTe2n/ahh/f1fqJ40l9O9Kc15X8uT+
C36sBLtF9LXo38XD81g0x/OueT6bRa5n4EkhDmeyVpazoT4M3HzHJtur6o3M
Q+IB1vvlN9qudC+owN8p8PjkMZetAQXY5xm+16SOnVx20dzYzxm+17aWkMBV
pdysMTKvgPEbcn/NK76XhfEDb0kavcjNlc/mE0gWzImixzmg2jRjnDrtV4x5
XuG1q+ZV2q8YvteMKm1Tx1mpbEOyzxmvW9JPZpTkAfjc1c1O3rX6JWz4ewfA
Oz2Vx6596ca/awC8lPRvWUU8Qzypkw3ubCwtZ/uQ+RXwFsEN+z7s+ZffyO8X
+J7sHYpqs7rxd4reKkV6Tzv2MyZknozXP+mL4kDOC1wnJ3f+Of1WuJIdRjwA
1382O/Nj6R92SFey+hrZElrPbF/7akPcQ8aIvG8IvJ/0Pwklv0ecV6uIRI40
VbKLyXwS72vH7H0lhNLZRfMMcrcKFiO/KdFZFfPsGrv516MSs+JKOv9fMlI1
UyyZOU3eZwS+ifQVgXUicJGs25qzPToYDbJOBD4Q+qxV7X4PM0h+11AXnadZ
62bsVsUeJNcb8Csv7h1LzspgDxzJtj3UUYg8fZncgZaDAWz7nD1q57dWIl/k
Xxb/4FssM9Sn66f1phb51GOt8a0i+Ywd2e8NvIz0/YC/4wD8kburzsfINmaI
rMeBOwVbWDV7dDGhZN2N+7su/4yKvNTHXCLra+DBXL5vN/sPMSvI9Q9cLO3a
QIAwF2uI7KMGvoL097Akv2vYr/KoTeu5eUkVW4rkE9wXFGWoW5WQyZ7mtVvG
vLiA7m9RCdBp6f7CFmmXcrKPo/ugpjzdcS5zNIJxkxjXqS1bi7wwtv9Xi2k2
M27pwFHB8w3Iu4/J9kQuLWduknoI8F7Sx4OP1D2Ayx2ords5oZmJIfUN4O/T
IzsnHOpgnEkdA/jxqN/Ldeu7GR1SrwDuPlFd2OxDP8NL8gnwEYuHIb9/DDMx
j6Mig1vofqHdrZ9GA29wsZzJ/vD9HH08gsl8A/KhAenjsYPkGeB1pG9GN8kz
cN8JF/h4UtUmm32R7N8GLkn6VEiT/ANcO+LEy6F7NUwRyT/AT5B+ERok/8D9
y+Ztb9jVrdnsJyT/AJ+1Q+Zow6co9mPy3jHu0yB9G6pJXgJu36Z3wm5+BfOS
5CXg7SKR9ycmVjPGJC8Bf0b6KgSTPAP3zas/Ps6SUn3F3kvyDPAs0sfgPVmP
YJ3w0w7WwMkC5hRZdwBX0LK2XSNcxswj83Dgkxujf3dPrGIayTwceCzpP5BL
8hLMT3xkTNW8hz+wG0heAh746fwXnW8PGFOSl4AfJH0AzpG8BPz5s4BCAbtM
ZhHJS1g/lCnZFPgul+kkdQ98jp9jO7+bVcR8I/UN4HZ105VfmZYzVmR/PvDj
5L3+bpKvYB617MUju72RX9gXSb4Cvj3opcWd56fZ/SRfAddXejAuOuMNY0Py
FfDd5L17LZKvgCssXz7v3uoEZoDkK+BLCrcpPZmVyoSQfAV88o+umdtLMhk7
kq+AXy679yg5MJfRIvkKeJfvS1l56SJmgOQr4IHk/frJJP/APJw7nGeDjctX
tjDJP8BP+ubNSlJ+wL5J8g/wG+mO2SZjHowgyT/AT3N93GFR/Za5TvIPcAXy
XjwvyT/A7/dHq2o5hzLRJP8AH21THV/qE8VcJfkHeHqIh5SDWDyzhuQf4A94
Xk/dcOoPw03yD/DEvXbOa8cymGiSf4C3i0+QDhXMZWD+g/NwfV+ZIn1uViwZ
D3yx40yzZ+94WddIvgIO719bk+sK5g9Z5H3nWWQ+D/fTw4XvYs1vjTHnyHjg
qeT93JskX+F+DPIe63HyvAzibzwgYCThFsS+QuIBnkreY82F9/IIv0XeH7Tg
2B+VSfZHwfwH308h78eJkvOL9ZmZq903PazGvx8BXJy1neXkQ/ubYb2o/bla
fCvtS4/1IpOFP0UUaJ83fF7fkjq7+0YNvtcGvH9ukdPhavqeKdapxF8PzRqk
7zkC7yXnBeKE+aRE9NT8gRLajw742b2PDWL+R18+4Dw+aVW9CrQvH/BkefXe
znm07wpw45FCw+Yg+h4WcHgPCz4XrpMrhzR/bVtIPxfn27K39v8Qo58LvDJq
a8t7adoPELjeLl3VG3/p+8XA4b17OD7MP1e25GvsVaH+sX7+5c53pcv0fTrg
WXsbboXLN+F4vJ5FDaS6zWk/OuDT7JpCq6Ppe3YwX9pVpxZ+o6kO36cGLmho
+GrlO/peKjwvHsfRdx24IUffdeCcfdeBZ3H0XQf+nKPvOvCXHH3XgS/g6LuO
z9M5+q4Dv8jRdx24J0ffdeDKHH3XgRtw9F0HfpKj7zrwZ6TvOniD+dLPX06u
5bupN+D6K/l++L2kfc+Ar53e0bnHgfZXB37UosH4cQXtrw58m2jZZTZvIXoD
Hln6gD/7Fe0fBVxXeZa7YDftow68uNxQyO4C7aMO/KGrisUr2W70A3w6r5jq
nV7aRx14f9ex2F1Cg+gH+Bnhps2T9o1gHoP53tD7+puujbQvOj4Hn/DmwA2z
UNr/jXDnzOPvTaL+oAd8Xj8/uMcsl/ZdAW6oMCHqc0kxfl/g0xuOh09cRfuP
AdfSWXt3eSXtcw5czUzx64ntXfh9gevGzLCTHujB7wv8wpdTRrNK+vH8wnxy
yiHfi6claN8w4LZKl/MPl8fRPmwwXxW/s/Du7wz8XsAXzkhcJOiSh/Hjvt/h
+ISdZ2heAr7EVuzcWuc2jB+4V8ypMbGxDowf+N4z9TParLsxTrh/zSy7Z6q8
mfbjwv2rXVdvjPNPov3NCPc7mBimZZGJ8QDXfe0fVxBfj/EAZx1bkXzcrhnj
AR5S0qBprd+OnwvzyaKTC/Udzkfj5wLf8/pBUfKVJNp/j/CfL26v2hpQi8cH
zmfVUP2bl+ZPmA/8Km7NjNGIov3lCJdde8ju1MkqfH8Z8n/3gu02d73pe6zA
Pxwt9XytQN+ThTw/oD/3ZEo97e+Kz0Pzjp9e5Ef7mgLX+cK/Zs9jej8FDv1d
4fhwX7iVOnzAXZweH/gUqSzP47Pp8fH9tdyqFRMmvMbjA1/5rXb9iWu0byrw
raS+AfkZ+CTJ4zK7HnZh/gGetiAxUUyZ/j0R4NPJ8wWIH/eDhctNS51G+74C
19/jKjbjI+3PCfxlxfDiwqO0PzPwGbYmMmkqfzB+4IZhMysOf6X9ToFXkLoH
fC/gxUntU8eW0H4CwCflWNVvv037CQB/WD+7zn88/Xs0wFXUowXjImk/AeBn
mzyix++i/QSAryZ1D/AD6/dbLOXLm0Zo/1KsYwS6TvisSv0Af/q8xKk9whf9
AP8Wu2XgjxH9uzPA+acvkAk7Rv/uDPBtfC6vJxyh/UuBD3D0LwWuqtuluv0e
/bszGL9c/fQ7XvTvzgBX/5e6wlJ70Ru+VzUltHvKIvp3Z4BL2nk0GKSO4O8d
eLr4ka9a2bR/KfDPpO6xk6O+0UzqG8Ahn/d1676QX1CL8QM3J/WKpxz1h/mk
/gDHwX1Nro/6R9Qq8Th4X1jCu+zcthr0ADyA1B/g+Pgc/J4NX7mZD943gY+S
+gN8LvCh3KHAvbFF+LnATUbfujT8KMfPxX1Te/f7+7tUoX/gSaT+APFA/uxb
ZBX87fMLjAfzsHtGidXdZ3hdATcn9QeIE/m6190SSdkYJ/CsA5sywm7kY5zA
xUv/+Pj5FWOcwJ/NWlJ4cmoFXifAT5H6gwPHum8tWffB9wKura4VHr48gPb/
JHyP3PhHPwKv4/cCzvOifs7L6R/w9wLcmNQlsK8v4eOSVr+sWvIHvy/wk47m
cysMMvD7At+xM/eS3e5s/L7A992Qdr6QkoffF/fte3zcsi2hCH8XwL+SugR4
gHVrm4rIfd6yYPQA/G7QreSqSPr3F4BPH4g4bTpwFvv4AdeJeKfSE/EUPQBP
+33a/ErBe8wbwOdy9PEDbjhgKPMjOhL9AH+UsW/KxfOxtO8x4bxWMmky8Yno
B7hbuPo+9t9U9AM8Tq5x7UOeLPQDXMpJPexOQC7e94EXkPU+xA/rTe01pT57
h2hfdOCG0g2rdRbQ/m/AoU8+jId5wortK26lz6Pjse+BY0zXeQG6vwg49JOH
48B8YI/FEs+lPrTPD/D2lesWShjT/mz43r0Dr8uhXbQ/G+e+LPAG3MBWteC+
KV1343M9l9HNTz7TPlTAxV9IPzGcKsji3B8FfdXgOMC/ifGEW8XROgPw+rNW
q0RlaT8ryMM39tmcvxZC+yQDhz7JMB7yam9miWvG6gwcD3xm7KJXbkK0Hxrk
vfncLh4xGrQfGuSTzSqvLwQohrLBM74fMU3nvNdc6hl4CKnzAIfr4eorw7/R
g9Q/cB2yf6aFY5+JC9lncp6jrpVO6loRHPsHfDj6YkEeuDlPwrSSi/bFguvc
h6P/FXgQ4egDBnFKFjNuXa8K8X4H3/cseS7ZwrF/qZ7sX4LzDt+rv2eG1ikF
2icHjl/Qekv00A7a3wbG1zru/3TdQ5DlxrEfFfptRnA819Dj6E8O4w85/lWz
UIxj/38LR+TB
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
/QOV39s82M7q7xLncED5lvqOlwR/297BPJdy7W2Cv3PXsh6mlzWhflfJ9hW9
5nhymeeHKvNmynHEZSh/3zo4P9LaUhx8UXDfQ+W3K/uNbYNjZvmk5snv7VLG
NqOsFa2T1mU88sWS+hvkC5/XuGrOg3pG28WkGCM6/s3y2yWPUD4xqYxZa7VH
st85nr6dwFfVzC8pXlbcLH+jeFx2WTZ5D/rcXjO3o5zpmMp5U8fSXzG24mLF
x3pWq5LbKsftUPQaR9/yTD1La1xrXfmVvqe+6zdlTQ0oa0P5hdbRTTxnBIo+
tGX5fWrJy5Sf7a49j/4kxnZSyR+VR3ZM/i7SDynP15rZH/15NedW8vMnVPb1
m5ac9L/cdGTlHFm2akz1//mMvqtiqjEFS//fb9m0ziXHUayl7zW2fLu/yvs2
TyUvKt/6j+hYZbOyl8eXPai1fGpZz9p/p5T9qD2uXL1L8lxpL4nX0zOUL8if
aX1OLN9a92o/ixe4uqwBxYuTgudSue2w8i1kcy4v9+n5Wu+Xcf08DOcVwXZx
bjC/Pb9yfDK3zIFyvivBV5T755b+un9e2T+ty/VJpY/eJQ7mreR9qH12afC+
k53V/a3KHlScOqXo5R+mFb36HJhs8xXH7hDcd2rw868s7zo7mEe5r7J9Edcq
m9MmeD5ulM+q21+dF2yLZJvETQwsWP1PD7Zh4ismBK8pcSzi2mXjdG1CmX/5
t4nB8ypOo2fpI15GcfqlZQ93TfahiuEvKbpe6B4o49G4tKYuKDZB3PWcyuNU
P/WfzL2HJvvuM6O5Ntn8E8szxUu9mRwbzynr5UflNLJFej7XO2tNB+/XDmUv
i9PTfImLFld0M+2aytygpHgecYay+crlF5Q+stfiJ2cprkrmmq6rbMNvrcwX
XR3sL6TX/e8E85aj6L9UdMw5TblCdCx6ZnIsp9hCfMVG4PHozwG3jI73zgUv
Hx0TztAcgI8BzwI3io4PzwI3jI7fpoNTdAw8NXns15bxXx/MrU2XbQ/m9IbS
52nwpuDB+kbBvu8o8EPBHJG4ogeDedQB6N8I5jyPSeZjZQ+Ukz0VzA0OSZ5H
3fsY734T/c7g4ejfDuZ7RybHFIonFEto/dxU1tD1RV8v61jreXvkI8nyfeRb
wfzwCPCzwVzrsGTOqzm4WTBHqr2jvPB9fu8GHg3+PDguHQt+IjnHGUjfPxUH
g9sh/1DOAG6LfDw59zmEPsODeZmBsuHBnPvRmletA/rsTv86+Bb5E/AS7b2a
OYoVwQ9rf6NfTJsF3hD5Pm2axoz8gHamxox8jzYV3BQ5NDhnOAr5Ib+no18f
2YDf98pOgz+hzZYNRH5KOxvcEvlFcIx9PGP4ITiHFe/xC/iQmrmLD4Lz0DHK
g/k7+8o+JZ/h6SxvX65/GnzOchz6r4JjfnEgP1T+G/dB92Vw/D8O/WfgfcDH
gr8PzoXFpXxfeQx7ofs2OL8Qr/K/4JxC/M9vwbmG+J8qOu9TXvBdcO4gfuaf
4BxQvM034ANq5lv+Cs4HxfP8EZzf/csvlZx6SDAnpnxAvOLCsn60zg+M5uLE
nxwenXuKR9K31xoQT9I7OqcTl9IrOk8Uh3NANCc2v8TS8k//xknReag4H/k2
+RrFmd2i80FxOH3A99XMUw2P5kPuAw+K5vfEvQyLzkPvBQ+J5k/EsQwFPwO+
B9w9mj8UD9M3Op8VJzYiOk98ADw4mpe7K/kcqpP8tM4IouMjndGNqswpKy4S
h7BPZX/fpPAPo4PPgZR/ycbq/E8x2zDwJsk50MnR8ZFiL8VIJyLbV45XxNvr
vYpNNk3OjTQGxV+KwxSztUl+3ozsvbYX+mOCzxc0Ho1BZ8S7V37XyOAY5xF+
j6s8bsVCTyXfNzP7b1J/xXNbRPNRF3D96GjuVFxW/+gcX9zXT9G8TYtiQ7TG
zo5eb9oj54DfCz7jnq05Dj4Xm6kYNphXPxX8fDAPP6OcxcgWzQJ/okOQyrzU
ncE8/2nKEYLP1I4DPxzMvZ8BfiSYk58CfjSYq58afZ6k851pWmvBNnCC1kLw
2cex0edqOq8ZqzUbfB5xur5RNHch3u+L6FxO3NhX0XmguLFtwWfR50L5xmge
WDzkdtE89kXgNtHcsvjPruAbauZ420WfBYi/7RfNmYg/lM2V7RU3+Fk0Xyfe
bpdoflsc777RXPTc4ssWFH89MprfeFDfNppHuh/cMZqLFne6m2KFmjnVztGc
mHjUTtGctvjP3aP5anGn7Vgfd9Zt9y4CH1P3mdQe2by5fPHq2eccT4pLifYX
jyLXzPYfTysuzra/C8ErZ5/tqc9K2Wd4j4BXyT7bewy8Tva52oAyZs2b9O2j
fZD6r5bNiTwBXjU71nlc+uiahKuQTbJ9zPPgxtm+4TnNZXbsNZPnP5989qZ1
9VzyeZvWxgvJZ3VjS9wlP6wzQcVjF1eOub4D302fy+izVrafewa8Rra/fAq8
drYvfBb8Pf3vQX+58izwvYrPwOtmnykqxmiafYaq2KNVNjckH/RXco3CjfT/
I7kG4nr56OTaixvAvyXXT1wL/ju57uEm8O/JtRfXaWzRtQ1XI39Efz/6ueAl
4PvEMYF/Sq7JmAf+NbkO4xrwctl++kHFaNn+9SHw6tE1FfPlQ7L5qYfBzbLP
rRX/bJzNkcn3VXXXe5yr/Rdd16F3tczm10aXOORArh+JbqNsTk1xY4tsjkxx
zgbZtQ6KozbM5toUR62ffUau+Kd5Nu+m2Gy97PN1xXj/S65T0ToZEH3GrXWi
vEj5hOL7LtGxhL7ju8lnlrItm2bzpIqX3kk+j5T9eS/5rFE2RznPJSVHeTv5
TFH26tXk81TZwM2yuVrFIa8ln8vK1v0bxwevsQ+Tzx1lP19Pri2Qjdo8m/Md
V2yLfKX22jHZtSOyAyPA3YLrRoZn1zfI311RcrYrkT1kQ2tenwdHx2Naw4rx
DlA8pLNEft9W8x4Xhy670VX+JzrG0x7sU3yu9tee0fGe9uMbyefisr0fJZ+n
ys5vks2fKnbSWbY4ghOCz4uVRx2v+Cr5LOm86NoR5YXKD1WvsqjmmPPkuuuv
xH2Js/uP21ONyJLyHT9LPkc7v3xf5W/6LsrZ5YP3Q7d5NFcgrDocxcsjtcaT
67fORbcouc5D/u6L5HO6C8Hfgu8CXyo/mGwzLwF/nczfXgz+KvlMbU50jZDi
CsWuXyafwV2E/uPk82n5zcXJtWLyp58nn/1dEF2Ts7jmGHt2cA3BOcG1aMof
ZiCHZtevKF76JbkGS/v9n+QaqQXgnWnzat6nsuvKOZQHiUPW2efTyVzkOeWZ
4ldVq6B8T2fY8l9dgvPu88sYHq7Mq5yh2Dyar5Z9EPcyqugXVuaXJgfzSCMK
Hl93LYFqCvakNagcDyveEL87XudvdduK/YJrrsRLqK5DdURaG6r7kI8Wt30C
/beJrhW5P9pfy/c9EH2WJL5qgHKX6DN6+SadZ+ncSry5zob0903iOVtH16Lc
p7mJzqllA7eKrj+5N/oMT7HT/tyzYXQ+clt0DKaap1HBtVWaT82rYss9wNsl
c0aKJXV2L47rMMVvwXHaYzVzfgtLDKlYcgz3H1r2i7hx8WDiwxQf7ln5nF18
kzgAnXeLe29S4krxaadx3znZNYHaI6pt2SQ6P7oL2SI657oVuUF0znVzNJei
vFTnkOJhxPWIz1Gerljo9uhao13K39s8Oo+7Bdk6Or+7A7lxdF52J/IQxnNh
ZV+8afS5xt2yjbRzFcPLnmSf8Ssu/Tm5dlC+RuduskOTud40unZI/m4l2nE1
+7V1omv25B/FFYyv2T82ia7rkw9dMbneTHURKyXXQKqeoXF0baH8puyoeHSd
360ZXTf4r0+Mri2UHxdXrBpQze8K0bWI8qeqTzukck1Fyq5Z1DyE7FpDrZOG
2Xmv1liVXVupedOhhmofNf8NsnNgrbdls3Njre16dl2jvlej7HxY6zxn1y9q
nmN2vaO+0VLZtYz61stk111pnpfOrqfR/Ks2VWtwimoHomsjFbf8HlzbKVt6
ZjBPJz9Sj67blH37O7jmU7axQXRdqGIkFTipnlO2bunoGk7ZTMW6OvM5Xmfv
0TWisp/KBXS+MRZ9jOZ5ZEun1n0+q1ohxec6pxqXfT6r+hD5LZ0dq/ZPMcS6
0TVCip3ExYuTVy1NK3CjyrUoLcENK9fMiMdXnqpz9j+D61Rle5vRJtVsP9dP
Pp9Vfc5ayfWQquH5if4Da/YXPwfHOfJfzZLPcFWrs0Zyja7qfBon1+iqDmdY
dq2h4vYPkmuMlB+p1k48peobVSsoO7lKcg2hfN/K4DOy7YLOYlRfp/FoXOJt
xcuKx1WdksassU/N9p2q9Toze07FK07LtsXiG6dn22KdUaquSePX3yFOW/mk
aldmZXOL8heq5dPfpb9P9aPi/lQ7pLpE+Ze+yZyV6utUZ6caRe077b8h2bWb
yuVVJ6k9qL0oblo1fBq/6vE0V5qznsVuyH6oPlDrYZ1knk35kLjHwdn1neIB
zsrmjGRvd82O28U9qp5Za0BroVN2HZL4xt2y42FxiR2yY3Vxie2zY3hxlap7
1DlFI9nV7DNp8ZC7ZMcD4hv3zq4BUj7YMTveFm95dHYdqjgH1V7qXEN14Htl
1w8pr1Qdprhk1WarPlzrU+tU9eHyjxuB/w/B+sh7
            "]], 
           Polygon3DBox[CompressedData["
1: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
            "]], 
           Polygon3DBox[CompressedData["
1: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
VY71TCv4PNQ9K/kbbIaxeY29N84J7AHsf1x3EEA=
            "]]},
          Annotation[#, "Charting`Private`Tag$103093#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ksvXGEcwOFXjTulIiGaEKyrPkDZtgkLqQjanUsZt0nTTFLSCNpiiYWm
H6BWEhtERCKtrrqsa927KFuLBivxnFj8z/N7z8y855KpaE+8HEwJIcyZjyLq
bodzLqaGUMAllnOD1fzFWu6zgRd8zWvemF5dFAthiMP2qtRT+oOu0V90Y1oI
I9bz+rlu18v6he7UP3WGLtEzZst6lMWm40EI29ad3GEXd/mGe9H9c589/MM4
D9jLQ/bxiP085gBPOMhTJnjGFs9S6nqz5q/1OOtM0jP8jq7DTbZxifX8xtrY
/ft8yklW8D0L+cjE9X97v+I/1jPXvs2ed5rPrL/y0nfT2WSeOJfkLcvMsc+u
+Mm5fI6xymyah9bv+MPk6bf8bnL1pOsldI6e0AM6W3/WfTor2lPHdWb0Drlu
MvQa07lKtxpWGIv+H/STsOCwoL2+0Kofp9z/p+4AX0RImg==
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{943, 1353, 1354, 1341, 1368, 624, 1367, 1366, 1378, 1691, 
        1142, 944, 1485, 1143, 945, 1486, 1144, 946, 1487, 1145, 947, 1484, 
        1488, 1146, 1369, 1689, 1235, 1289, 1343, 1147, 1342, 1237, 1290, 
        1345, 1379, 1684, 1344, 1239, 1291, 1347, 1673, 1148, 1346, 1241, 
        1292, 1483, 1674, 1149, 1348, 1243, 1293, 1685, 1350, 1150, 1349, 
        1472, 1489, 1294, 1333, 1151, 1325, 1473, 1490, 1295, 1334, 1152, 
        1326, 1474, 1491, 1296, 1153, 1245}], 
       Line3DBox[{948, 1339, 1380, 1683, 1375, 1374, 632, 949, 1492, 1154, 
        950, 1493, 1155, 951, 1494, 1156, 952, 1495, 1157, 953, 1651, 1236, 
        1158, 954, 1238, 1297, 1381, 1652, 955, 1240, 1298, 1382, 1653, 956, 
        1242, 1299, 1675, 1159, 957, 1244, 1300, 1676, 1160, 1372, 414, 1496, 
        1301, 390, 1361, 417, 1497, 1302, 395, 1363, 1687, 420, 1303, 337, 
        373}], Line3DBox[{959, 1383, 1566, 958, 1384, 1567, 960, 643, 961, 
        1498, 1161, 962, 1499, 1162, 963, 1500, 1163, 964, 1501, 1164, 965, 
        1246, 1304, 1385, 1654, 966, 1247, 1306, 1386, 1655, 967, 1248, 1308, 
        1387, 1656, 968, 1249, 1310, 1677, 1165, 1373, 1376, 1377, 1475, 1502,
         1312, 1166, 1362, 1686, 1250, 1314, 1167, 1364, 1688, 1251, 1316, 
        1355, 1357, 1356, 1264}], 
       Line3DBox[{970, 1388, 1568, 969, 1389, 1569, 971, 1390, 1570, 972, 
        1391, 1571, 973, 1503, 1168, 974, 1504, 1169, 975, 1505, 1170, 976, 
        1252, 1305, 1253, 1657, 977, 1254, 1307, 1255, 1658, 978, 1256, 1309, 
        1257, 1659, 979, 1258, 1311, 1259, 1660, 980, 1661, 1260, 1313, 1261, 
        981, 1662, 1262, 1315, 1263, 982, 1663, 1265, 1317, 1266, 1340, 
        1365}], Line3DBox[{984, 1392, 1572, 983, 1393, 1573, 985, 1394, 1574, 
        986, 1395, 1575, 987, 1396, 1576, 988, 1506, 1171, 989, 1507, 1172, 
        990, 1397, 1577, 991, 1398, 1578, 992, 1267, 1318, 1268, 1664, 993, 
        1269, 1319, 1579, 1476, 994, 1477, 1678, 1320, 1270, 995, 1665, 1271, 
        1321, 1272, 996, 1666, 1273, 1322, 1274, 997}], 
       Line3DBox[{999, 1399, 1580, 998, 1400, 1581, 1000, 1401, 1582, 1001, 
        1402, 1583, 1002, 1403, 1584, 1003, 1404, 1585, 1004, 1508, 1173, 
        1005, 1405, 1586, 1006, 1406, 1587, 1007, 1407, 1588, 1008, 1408, 
        1589, 1009, 1409, 1590, 1010, 1410, 1591, 1011, 1509, 1174, 1012}], 
       Line3DBox[{1016, 1510, 1175, 1014, 1511, 1176, 1018, 1512, 1177, 1020, 
        1513, 1178, 1022, 1514, 1179, 1024, 1515, 1180, 1026, 1516, 1181, 
        1028, 1517, 1182, 1030, 1518, 1183, 1032, 1519, 1184, 1034, 1520, 
        1185, 1036, 1521, 1186, 1038, 1522, 1187, 1040, 1523, 1188, 1042}], 
       Line3DBox[{1041, 1605, 1424, 1039, 1604, 1423, 1037, 1603, 1422, 1035, 
        1602, 1421, 1033, 1601, 1420, 1031, 1600, 1419, 1029, 1599, 1418, 
        1027, 1598, 1417, 1025, 1597, 1416, 1023, 1596, 1415, 1021, 1595, 
        1414, 1019, 1594, 1413, 1017, 1593, 1412, 1013, 1592, 1411, 1015}], 
       Line3DBox[{1044, 1370, 1371, 1425, 1690, 1043, 1524, 1189, 1045, 1525, 
        1190, 1046, 1526, 1191, 1047, 1527, 1192, 1048, 1528, 1193, 1049, 
        1529, 1194, 1050, 1426, 1606, 1051, 1530, 1195, 1052, 1531, 1196, 
        1053, 1532, 1197, 1054, 1533, 1198, 1055, 1534, 1199, 1056, 1535, 
        1200, 1057}], 
       Line3DBox[{1058, 1358, 1275, 1327, 1427, 1667, 1323, 1276, 1428, 1668, 
        1059, 1536, 1201, 1060, 1537, 1202, 1061, 1538, 1203, 1062, 1539, 
        1204, 1063, 1540, 1205, 1064, 1429, 1607, 1065, 1430, 1608, 1066, 
        1541, 1206, 1067, 1542, 1207, 1068, 1543, 1208, 1069, 1544, 1209, 
        1070, 1545, 1210, 1071}], 
       Line3DBox[{1072, 1359, 1277, 1328, 1431, 1669, 1324, 1278, 1432, 1670, 
        1073, 1433, 1609, 1074, 1546, 1211, 1075, 1547, 1212, 1076, 1548, 
        1213, 1077, 1549, 1214, 1078, 1434, 1610, 1079, 1435, 1611, 1080, 
        1436, 1612, 1081, 1550, 1215, 1082, 1551, 1216, 1083, 1552, 1217, 
        1084, 1553, 1218, 1085}], 
       Line3DBox[{1099, 1224, 1559, 1098, 1223, 1558, 1097, 1222, 1557, 1096, 
        1618, 1442, 1095, 1617, 1441, 1094, 1616, 1440, 1093, 1615, 1439, 
        1092, 1221, 1556, 1091, 1220, 1555, 1090, 1219, 1554, 1089, 1614, 
        1438, 1088, 1613, 1437, 1087, 1671, 1282, 1281, 1086, 1482, 1682, 
        1280, 1329, 1279, 1360}], 
       Line3DBox[{1113, 1228, 1563, 1112, 1227, 1562, 1111, 1626, 1450, 1110, 
        1625, 1449, 1109, 1624, 1448, 1108, 1623, 1447, 1107, 1622, 1446, 
        1106, 1226, 1561, 1105, 1225, 1560, 1104, 1621, 1445, 1103, 1620, 
        1444, 1102, 1619, 1443, 1101, 1672, 1284, 1283, 1100, 1679, 1335, 
        1232, 1330, 1231, 1351}], 
       Line3DBox[{1127, 1230, 1565, 1126, 1637, 1460, 1125, 1636, 1459, 1124, 
        1635, 1458, 1123, 1634, 1457, 1122, 1633, 1456, 1121, 1632, 1455, 
        1120, 1229, 1564, 1119, 1631, 1454, 1118, 1630, 1453, 1117, 1629, 
        1452, 1116, 1628, 1451, 1115, 1478, 1627, 1285, 1114, 1680, 1336, 
        1337, 1331, 1233, 1352}], 
       Line3DBox[{1141, 1288, 1650, 1480, 1140, 1649, 1471, 1139, 1648, 1470, 
        1138, 1647, 1469, 1137, 1646, 1468, 1136, 1645, 1467, 1135, 1644, 
        1466, 1134, 1643, 1465, 1133, 1642, 1464, 1132, 1641, 1463, 1131, 
        1640, 1462, 1130, 1639, 1461, 1129, 1479, 1638, 1286, 1128, 1481, 
        1681, 1338, 1332, 1234, 1287}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{436, 626, 1485, 437, 633, 1492, 454, 643, 465, 1570, 654, 
        476, 1574, 665, 487, 1582, 676, 501, 1594, 690, 1512, 515, 704, 1525, 
        529, 718, 1536, 543, 1609, 732, 557, 1613, 746, 571, 1619, 760, 585, 
        1628, 774, 599, 1639, 788, 613}], 
       Line3DBox[{438, 627, 1486, 439, 634, 1493, 455, 644, 1498, 466, 1571, 
        655, 477, 1575, 666, 488, 1583, 677, 502, 1595, 691, 1513, 516, 705, 
        1526, 530, 719, 1537, 544, 733, 1546, 558, 1614, 747, 572, 1620, 761, 
        586, 1629, 775, 600, 1640, 789, 614}], 
       Line3DBox[{440, 628, 1487, 441, 635, 1494, 456, 645, 1499, 467, 656, 
        1503, 478, 1576, 667, 489, 1584, 678, 503, 1596, 692, 1514, 517, 706, 
        1527, 531, 720, 1538, 545, 734, 1547, 559, 748, 1554, 573, 1621, 762, 
        587, 1630, 776, 601, 1641, 790, 615}], 
       Line3DBox[{442, 913, 914, 1488, 443, 636, 1495, 457, 646, 1500, 468, 
        657, 1504, 479, 668, 1506, 490, 1585, 679, 504, 1597, 693, 1515, 518, 
        707, 1528, 532, 721, 1539, 546, 735, 1548, 560, 749, 1555, 574, 763, 
        1560, 588, 1631, 777, 602, 1642, 791, 616}], 
       Line3DBox[{444, 916, 917, 915, 1689, 799, 857, 800, 1651, 801, 458, 
        647, 1501, 469, 658, 1505, 480, 669, 1507, 491, 680, 1508, 505, 1598, 
        694, 1516, 519, 708, 1529, 533, 722, 1540, 547, 736, 1549, 561, 750, 
        1556, 575, 764, 1561, 589, 778, 1564, 603, 1643, 792, 617}], 
       Line3DBox[{8, 344, 1342, 23, 954, 38, 965, 53, 976, 68, 990, 83, 1005, 
        98, 1027, 1028, 113, 1050, 128, 1064, 143, 1078, 158, 1092, 173, 1106,
         188, 1120, 203, 1134, 218}], 
       Line3DBox[{449, 904, 810, 897, 811, 1489, 858, 812, 922, 813, 1496, 
        923, 861, 925, 935, 824, 942, 825, 1502, 941, 863, 833, 1661, 834, 
        866, 1678, 841, 842, 496, 1590, 685, 510, 1603, 699, 1521, 524, 713, 
        1533, 538, 727, 1543, 552, 741, 1551, 566, 755, 1557, 580, 1626, 769, 
        594, 1636, 783, 608, 1648, 797, 622}], 
       Line3DBox[{450, 905, 814, 875, 815, 1490, 859, 816, 906, 817, 1497, 
        926, 862, 927, 826, 907, 1686, 827, 864, 835, 1662, 836, 867, 843, 
        1665, 844, 497, 1591, 686, 511, 1604, 700, 1522, 525, 714, 1534, 539, 
        728, 1544, 553, 742, 1552, 567, 756, 1558, 581, 770, 1562, 595, 1637, 
        784, 609, 1649, 798, 623}], 
       Line3DBox[{451, 883, 884, 876, 818, 1491, 860, 819, 908, 929, 1687, 
        928, 932, 930, 931, 909, 1688, 828, 865, 837, 1663, 838, 868, 845, 
        1666, 846, 498, 687, 1509, 512, 1605, 701, 1523, 526, 715, 1535, 540, 
        729, 1545, 554, 743, 1553, 568, 757, 1559, 582, 771, 1563, 596, 785, 
        1565, 610, 1650, 853, 854, 855}], 
       Line3DBox[{611, 786, 874, 882, 881, 1681, 597, 772, 873, 880, 1680, 
        879, 583, 758, 872, 878, 1679, 877, 569, 744, 871, 1682, 888, 887, 
        555, 730, 1669, 870, 886, 885, 541, 716, 1667, 869, 920, 919, 527, 
        702, 1690, 918, 513, 1510, 688, 1592, 499, 674, 1580, 485, 663, 1572, 
        474, 652, 1568, 463, 641, 1566, 452, 631, 1683, 937, 939, 938, 434, 
        624, 912, 911, 934, 933, 856}], 
       Line3DBox[{612, 787, 852, 1638, 598, 773, 851, 1627, 584, 759, 1672, 
        850, 570, 745, 1671, 849, 556, 731, 1670, 848, 542, 717, 1668, 847, 
        528, 1524, 703, 514, 1511, 689, 1593, 500, 675, 1581, 486, 664, 1573, 
        475, 653, 1569, 464, 642, 1567, 453, 632, 936, 435, 1691, 625, 910, 
        940}], Line3DBox[{618, 793, 1644, 604, 779, 1632, 590, 765, 1622, 576,
         751, 1615, 562, 737, 1610, 548, 723, 1607, 534, 709, 1606, 520, 1517,
         695, 1599, 506, 681, 1586, 492, 670, 1577, 481, 659, 1657, 829, 470, 
        648, 1654, 820, 459, 637, 1652, 803, 445, 629, 1684, 890, 889, 802, 
        900}], Line3DBox[{619, 794, 1645, 605, 780, 1633, 591, 766, 1623, 577,
         752, 1616, 563, 738, 1611, 549, 724, 1608, 535, 1530, 710, 521, 1518,
         696, 1600, 507, 682, 1587, 493, 671, 1578, 482, 660, 1658, 830, 471, 
        649, 1655, 821, 460, 638, 1653, 805, 446, 1673, 630, 892, 891, 804, 
        901}], Line3DBox[{620, 795, 1646, 606, 781, 1634, 592, 767, 1624, 578,
         753, 1617, 564, 739, 1612, 550, 1541, 725, 536, 1531, 711, 522, 1519,
         697, 1601, 508, 683, 1588, 494, 672, 1664, 839, 483, 661, 1659, 831, 
        472, 650, 1656, 822, 461, 1675, 639, 807, 447, 1674, 895, 894, 893, 
        806, 902}], 
       Line3DBox[{621, 796, 1647, 607, 782, 1635, 593, 768, 1625, 579, 754, 
        1618, 565, 1550, 740, 551, 1542, 726, 537, 1532, 712, 523, 1520, 698, 
        1602, 509, 684, 1589, 495, 673, 840, 1579, 484, 662, 1660, 832, 473, 
        1677, 651, 924, 823, 462, 1676, 640, 921, 809, 448, 899, 1685, 898, 
        896, 808, 903}]}, {}, {}}},
    VertexNormals->CompressedData["
1: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

     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{401.9198490456213, 280.07525918401484`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{0.1, 2}, {0, 1}, {-0.765596967201431, 3.271975273076688}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.419753504364063, -1.8429151384751155`, 1.4827193835979617`},
  ViewVertical->{-0.34859428115688473`, 0.2654938516552376, 
   0.8988854442463632}]], "Output",
 CellChangeTimes->{3.82794446826048*^9, 3.827944557095256*^9},
 CellLabel->
  "Out[165]=",ExpressionUUID->"1c6d24f6-933b-46b1-9d3d-91f44df570c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Check of Equation 4 & 5 Vanishing of Riemann Tensor (Note:  I have \
\[Psi][R,T] instead of \[Psi][T,R] )\
\>", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.8254647577633667`*^9, 
  3.825464823201312*^9}},ExpressionUUID->"39b951ee-6c3a-4ba5-a886-\
583c7f56f5e0"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq4", "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq4", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[Psi]", "[", 
    RowBox[{"R", ",", "T"}], "]"}], "\[Rule]", " ", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"Log", "[", 
     RowBox[{"T", "+", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["T", "2"], "-", 
        SuperscriptBox["R", "2"]}]]}], "]"}]}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.8254643231390142`*^9, 3.825464335496723*^9}, {
   3.8254643791066713`*^9, 3.825464379494562*^9}, {3.825464711613984*^9, 
   3.825464716932666*^9}, 3.825464771133169*^9},
 CellLabel->
  "In[370]:=",ExpressionUUID->"8dc99f09-2fad-437e-be25-44093454b549"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"R", ",", "T"}], "]"}], "\[Rule]", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"Log", "[", 
    RowBox[{"T", "+", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["R", "2"]}], "+", 
       SuperscriptBox["T", "2"]}]]}], "]"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.825464382428837*^9, 3.825464717822146*^9, 
  3.825464771133719*^9},
 CellLabel->
  "Out[371]=",ExpressionUUID->"290a9bba-5021-4ec9-9511-818c99d98b62"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "psiDerivatives", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psiDerivatives", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"{", " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{"eq4", ",", "T"}], "]"}], " ", ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"D", "[", 
        RowBox[{"eq4", ",", "R"}], "]"}], " ", ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"D", "[", 
        RowBox[{"eq4", ",", 
         RowBox[{"{", 
          RowBox[{"T", ",", "2"}], "}"}]}], "]"}], " ", ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"eq4", ",", "R"}], "]"}], ",", "T"}], "]"}], " ", ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"D", "[", 
        RowBox[{"eq4", ",", 
         RowBox[{"{", 
          RowBox[{"R", ",", "2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
      "}"}], "  ", "//", " ", "Expand"}], " ", "//", " ", "Simplify"}]}], " ",
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psiDerivatives", "  ", "//", " ", "TableForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.825464463397792*^9, 3.825464563956678*^9}, 
   3.8254647711339293`*^9},
 CellLabel->
  "In[374]:=",ExpressionUUID->"0d6ec84b-4ba4-4962-a7bd-c1465eebfd67"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], "\[Rule]", 
        FractionBox["1", 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["T", "2"], "-", 
            SuperscriptBox["R", "2"]}]]}]]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], "\[Rule]", 
        FractionBox["R", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["R", "2"], "-", 
            RowBox[{"T", " ", 
             RowBox[{"(", 
              RowBox[{
               SqrtBox[
                RowBox[{
                 SuperscriptBox["T", "2"], "-", 
                 SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
           ")"}]}]]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], "\[Rule]", 
        RowBox[{"-", 
         FractionBox["T", 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["T", "2"], "-", 
              SuperscriptBox["R", "2"]}], ")"}], 
            RowBox[{"3", "/", "2"}]]}]]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{
          RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
          RowBox[{"\[PartialD]", "T"}]}],
         MultilineFunction->None], "\[Rule]", 
        FractionBox["R", 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["T", "2"], "-", 
             SuperscriptBox["R", "2"]}], ")"}], 
           RowBox[{"3", "/", "2"}]]}]]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{
            SuperscriptBox["T", "2"], " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["T", "2"], "-", 
              SuperscriptBox["R", "2"]}]]}], "+", 
           RowBox[{
            SuperscriptBox["R", "2"], " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["T", "2"], "-", 
              SuperscriptBox["R", "2"]}]]}], "+", 
           SuperscriptBox["T", "3"]}], 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["T", "2"], "-", 
              SuperscriptBox["R", "2"]}], ")"}], 
            RowBox[{"3", "/", "2"}]], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["T", "2"], "-", 
                SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], "2"]}]]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.825464471317479*^9, 3.825464521777182*^9}, {
   3.825464557261347*^9, 3.825464564626899*^9}, 3.825464732088052*^9, 
   3.8254647711342573`*^9},
 CellLabel->
  "Out[376]//TraditionalForm=",ExpressionUUID->"2d14626d-36c3-4691-a9df-\
ee4dfa422eb5"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq5", "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq5", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Gamma]", "[", 
     RowBox[{"R", ",", "T"}], "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"\[Psi]", "[", 
      RowBox[{"R", ",", "T"}], "]"}], "-", " ", 
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{"Log", "[", 
       RowBox[{"2", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["T", "2"], "-", 
          SuperscriptBox["R", "2"]}]]}], "]"}]}]}]}], " ", "/.", " ", "eq4", 
   " "}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.825464336970186*^9, 3.825464448746072*^9}, {
   3.825464722437457*^9, 3.825464727779887*^9}, 3.825464771134409*^9},
 CellLabel->
  "In[372]:=",ExpressionUUID->"fc3524c6-d4ac-4d16-8ee4-764f9be613ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Gamma]", "[", 
   RowBox[{"R", ",", "T"}], "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], " ", 
    RowBox[{"Log", "[", 
     RowBox[{"2", " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["R", "2"]}], "+", 
        SuperscriptBox["T", "2"]}]]}], "]"}]}], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"Log", "[", 
     RowBox[{"T", "+", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["R", "2"]}], "+", 
        SuperscriptBox["T", "2"]}]]}], "]"}]}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.825464429721035*^9, 3.825464450733625*^9}, 
   3.825464728959618*^9, 3.82546477113476*^9},
 CellLabel->
  "Out[373]=",ExpressionUUID->"393baadf-107c-4555-810e-7db6d62fa621"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "gammaDerivatives", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gammaDerivatives", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"{", " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{"eq5", ",", "T"}], "]"}], " ", ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"D", "[", 
        RowBox[{"eq5", ",", "R"}], "]"}], " ", ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"D", "[", 
        RowBox[{"eq5", ",", 
         RowBox[{"{", 
          RowBox[{"T", ",", "2"}], "}"}]}], "]"}], " ", ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"eq5", ",", "R"}], "]"}], ",", "T"}], "]"}], " ", ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"D", "[", 
        RowBox[{"eq5", ",", 
         RowBox[{"{", 
          RowBox[{"R", ",", "2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
      "}"}], "  ", "//", " ", "Expand"}], " ", "//", " ", "Simplify"}]}], " ",
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gammaDerivatives", "  ", "//", " ", "TableForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.8254645803088503`*^9, 3.825464601780377*^9}, 
   3.825464771134935*^9},
 CellLabel->
  "In[377]:=",ExpressionUUID->"0b24bbc9-493a-4730-98dd-66505e3bff14"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"T", " ", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["T", "2"], "-", 
                SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
           SuperscriptBox["R", "2"]}], 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["T", "2"], "-", 
              SuperscriptBox["R", "2"]}], ")"}], 
            RowBox[{"3", "/", "2"}]]}]]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"R", " ", "T"}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["R", "2"], "-", 
             SuperscriptBox["T", "2"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SqrtBox[
              RowBox[{
               SuperscriptBox["T", "2"], "-", 
               SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], "\[Rule]", 
        FractionBox[
         RowBox[{
          RowBox[{"3", " ", 
           SuperscriptBox["R", "2"], " ", 
           SuperscriptBox["T", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SqrtBox[
              RowBox[{
               SuperscriptBox["T", "2"], "-", 
               SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox["R", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             SqrtBox[
              RowBox[{
               SuperscriptBox["T", "2"], "-", 
               SuperscriptBox["R", "2"]}]], "+", 
             RowBox[{"3", " ", "T"}]}], ")"}]}]}], 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["T", "2"], "-", 
             SuperscriptBox["R", "2"]}], ")"}], 
           RowBox[{"5", "/", "2"}]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SqrtBox[
              RowBox[{
               SuperscriptBox["T", "2"], "-", 
               SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], "2"]}]]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{
          RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
          RowBox[{"\[PartialD]", "T"}]}],
         MultilineFunction->None], "\[Rule]", 
        FractionBox[
         RowBox[{
          RowBox[{
           SuperscriptBox["R", "3"], " ", 
           SuperscriptBox["T", "2"]}], "-", 
          RowBox[{"2", " ", "R", " ", 
           SuperscriptBox["T", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             SqrtBox[
              RowBox[{
               SuperscriptBox["T", "2"], "-", 
               SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}], "+", 
          SuperscriptBox["R", "5"]}], 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["T", "2"], "-", 
             SuperscriptBox["R", "2"]}], ")"}], 
           RowBox[{"5", "/", "2"}]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SqrtBox[
              RowBox[{
               SuperscriptBox["T", "2"], "-", 
               SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], "2"]}]]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], "\[Rule]", 
        FractionBox[
         RowBox[{"T", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["R", "2"], " ", "T", " ", 
             RowBox[{"(", 
              RowBox[{
               SqrtBox[
                RowBox[{
                 SuperscriptBox["T", "2"], "-", 
                 SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["T", "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               SqrtBox[
                RowBox[{
                 SuperscriptBox["T", "2"], "-", 
                 SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["R", "4"]}]}], ")"}]}], 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["T", "2"], "-", 
             SuperscriptBox["R", "2"]}], ")"}], 
           RowBox[{"5", "/", "2"}]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SqrtBox[
              RowBox[{
               SuperscriptBox["T", "2"], "-", 
               SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], "2"]}]]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.825464603745326*^9, 3.825464738032535*^9, 
  3.825464771135263*^9},
 CellLabel->
  "Out[379]//TraditionalForm=",ExpressionUUID->"2d4ce99a-0c41-4dc4-8129-\
1be6a337948c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "3", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"TensorValues", "[", 
        RowBox[{"tensorList", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "]"}], "  ", "/.", " ", 
       "psiDerivatives"}], " ", "/.", " ", "gammaDerivatives"}], " ", "//", 
     " ", "Expand"}], " ", "//", " ", "Simplify"}], " ", "//", " ", 
   "MatrixForm"}], " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.825464637804571*^9, 3.825464646260241*^9}, 
   3.825464771135427*^9},
 CellLabel->
  "In[380]:=",ExpressionUUID->"dc75b236-e67b-4bf4-99b1-098bb8ceab23"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["R", "\[Alpha]\[Beta]\[Gamma]\[Delta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.8254646483130817`*^9, {3.825464742270999*^9, 3.825464771135528*^9}},
 CellLabel->
  "Out[380]=",ExpressionUUID->"f1920b37-417c-4460-926e-87e7a37344d0"],

Cell[BoxData["\<\"RiemannTensorCylindrical\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.8254646483130817`*^9, {3.825464742276918*^9, 3.825464771135622*^9}},
 CellLabel->
  "Out[381]=",ExpressionUUID->"43997b51-3f4e-4d55-b669-1ab2a1e228a3"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.8254646483130817`*^9, {3.825464742610716*^9, 3.825464771135942*^9}},
 CellLabel->
  "Out[382]//TraditionalForm=",ExpressionUUID->"749778b2-5694-4472-b1b7-\
02c59c73aacc"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq6", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq6", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"T", " ", "\[Equal]", " ", 
      RowBox[{
       FractionBox["1", "4"], 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["r", "2"], "+", " ", 
         SuperscriptBox["t", "2"], "-", 
         SuperscriptBox["z", "2"]}], ")"}]}]}], " ", ",", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"I", " ", 
         RowBox[{"can", "'"}], "t", " ", "tell"}], "..."}], " ", "is", " ", 
       "it", " ", "a", " ", "typo", " ", "or", " ", "is", " ", "there", " ", 
       "a", " ", 
       RowBox[{"1", "/", "2"}], " ", "and", " ", "also", " ", "over", " ", 
       "2", " ", "to", " ", "make", " ", 
       RowBox[{"1", "/", 
        RowBox[{"4", "?"}]}]}], " ", "*)"}], " ", "\[IndentingNewLine]", 
     RowBox[{"R", " ", "\[Equal]", " ", 
      RowBox[{"r", " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["t", "2"], "-", 
         SuperscriptBox["z", "2"]}]]}]}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Z", " ", "\[Equal]", " ", 
      RowBox[{"ArcTanh", "[", 
       FractionBox["z", "t"], "]"}]}]}], " ", "\[IndentingNewLine]", "}"}]}], 
  " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", " ", 
   RowBox[{"eq6", " ", "/.", " ", 
    RowBox[{"Equal", "\[Rule]", " ", "Rule"}]}], " ", ")"}], "//", " ", 
  "TableForm"}]}], "Input",
 CellChangeTimes->{{3.825464160444803*^9, 3.825464231951208*^9}, {
  3.8254649612377367`*^9, 3.825464971444902*^9}, {3.825465148595254*^9, 
  3.8254651706977673`*^9}},
 CellLabel->
  "In[407]:=",ExpressionUUID->"df8e5383-34a2-4bf4-b6f8-5e1b9315ac3a"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"T", "\[Rule]", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["r", "2"], "+", 
          SuperscriptBox["t", "2"], "-", 
          SuperscriptBox["z", "2"]}], ")"}]}]}]},
     {
      RowBox[{"R", "\[Rule]", 
       RowBox[{"r", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["t", "2"], "-", 
          SuperscriptBox["z", "2"]}]]}]}]},
     {
      RowBox[{"Z", "\[Rule]", 
       RowBox[{"ArcTanh", "[", 
        FractionBox["z", "t"], "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8254642322471447`*^9, {3.825464966536327*^9, 3.8254649718661633`*^9}, {
   3.825465171263157*^9, 3.825465177040312*^9}},
 CellLabel->
  "Out[409]//TableForm=",ExpressionUUID->"ee71e993-7976-4f53-a993-\
d67126c0ce6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Dt", "[", " ", "eq6", " ", "]"}], "  ", "/.", " ", 
     "dtReplace"}], "  ", "/.", " ", 
    RowBox[{"Equal", "\[Rule]", " ", "Rule"}]}], " ", ")"}], "//", " ", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.8254642351852417`*^9, 3.825464244942313*^9}, {
  3.825464986743099*^9, 3.825464995428226*^9}},
 CellLabel->
  "In[410]:=",ExpressionUUID->"6067c52b-a05a-4f1b-bd85-9bb948f61808"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"dT", "\[Rule]", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "dr", " ", "r"}], "+", 
          RowBox[{"2", " ", "dt", " ", "t"}], "-", 
          RowBox[{"2", " ", "dz", " ", "z"}]}], ")"}]}]}]},
     {
      RowBox[{"dR", "\[Rule]", 
       RowBox[{
        FractionBox[
         RowBox[{"r", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "dt", " ", "t"}], "-", 
            RowBox[{"2", " ", "dz", " ", "z"}]}], ")"}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["t", "2"], "-", 
            SuperscriptBox["z", "2"]}]]}]], "+", 
        RowBox[{"dr", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["t", "2"], "-", 
           SuperscriptBox["z", "2"]}]]}]}]}]},
     {
      RowBox[{"dZ", "\[Rule]", 
       FractionBox[
        RowBox[{
         FractionBox["dz", "t"], "-", 
         FractionBox[
          RowBox[{"dt", " ", "z"}], 
          SuperscriptBox["t", "2"]]}], 
        RowBox[{"1", "-", 
         FractionBox[
          SuperscriptBox["z", "2"], 
          SuperscriptBox["t", "2"]]}]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.825464237684472*^9, 3.8254642452116003`*^9}, 
   3.825464275729702*^9, 3.8254649958958273`*^9, 3.825465179191931*^9},
 CellLabel->
  "Out[410]//TableForm=",ExpressionUUID->"3b1c2d8e-e3fd-4938-9050-\
baa7be3373f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Construction of Null Tetrad For Metric 1 and Check of Orthogonality\
\>", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.82546105660363*^9, {3.825461087825205*^9, 3.825461112194911*^9}, {
   3.825462038313486*^9, 
   3.825462045207341*^9}},ExpressionUUID->"625239a4-5b4e-4de5-af3b-\
30109802b935"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[ScriptL]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[ScriptL]", "=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"\[Psi]", "-", "\[Gamma]"}], "]"}], " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}]}], " ", "/.", " ", 
   "eq1a", " "}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.820933371686145*^9, 3.82093337715728*^9}, 
   3.8209374103413973`*^9, 3.820944472322248*^9, {3.825460845846662*^9, 
   3.825460872291072*^9}, {3.825461034932344*^9, 3.8254610370912457`*^9}, 
   3.8254610878253613`*^9},
 CellLabel->
  "In[207]:=",ExpressionUUID->"3716b802-0749-4437-9f5b-f4f15c6a7359"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"\[Gamma]", "[", 
       RowBox[{"R", ",", "T"}], "]"}]}], "+", 
     RowBox[{"\[Psi]", "[", 
      RowBox[{"R", ",", "T"}], "]"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"\[Gamma]", "[", 
       RowBox[{"R", ",", "T"}], "]"}]}], "+", 
     RowBox[{"\[Psi]", "[", 
      RowBox[{"R", ",", "T"}], "]"}]}]], ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.820933237654937*^9, 3.820933379685409*^9, 3.820933448095758*^9, 
   3.820937410341577*^9, 3.820944472322352*^9, 3.8243816284850473`*^9, 
   3.82438185652029*^9, 3.824511849396772*^9, 3.82451417433105*^9, 
   3.825460873690165*^9, {3.82546102353298*^9, 3.825461037411422*^9}, 
   3.8254610878257723`*^9, 3.8254620089444532`*^9},
 CellLabel->
  "Out[208]=",ExpressionUUID->"820b9ae6-e93f-4d0b-b1d2-f726108beac6"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[ScriptN]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[ScriptN]", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"Exp", "[", 
     RowBox[{"\[Psi]", "-", "\[Gamma]"}], "]"}], " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}]}], "/.", " ", "eq1a", 
   " "}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.820933298406392*^9, 3.820933313508857*^9}, 
   3.820937410341757*^9, 3.820944472322452*^9, {3.825460882091905*^9, 
   3.825460890731036*^9}, 3.825461042306086*^9, 3.8254610878259172`*^9},
 CellLabel->
  "In[209]:=",ExpressionUUID->"adbdec12-70f8-41d5-9ea2-6e717835f84e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"\[Gamma]", "[", 
        RowBox[{"R", ",", "T"}], "]"}]}], "+", 
      RowBox[{"\[Psi]", "[", 
       RowBox[{"R", ",", "T"}], "]"}]}]]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"\[Gamma]", "[", 
        RowBox[{"R", ",", "T"}], "]"}]}], "+", 
      RowBox[{"\[Psi]", "[", 
       RowBox[{"R", ",", "T"}], "]"}]}]]}], ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.820933313826449*^9, 3.820933381335147*^9, 3.820933448122315*^9, 
   3.820937410341963*^9, 3.820944472322535*^9, 3.8243816285060167`*^9, 
   3.824381856534606*^9, 3.824511849423729*^9, 3.8245141743647127`*^9, 
   3.8254608914335012`*^9, {3.825461023544611*^9, 3.82546104290088*^9}, 
   3.8254610878261843`*^9, 3.825462008955656*^9},
 CellLabel->
  "Out[210]=",ExpressionUUID->"246c9e78-6e4a-45e2-96dc-c5d30f876de6"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[ScriptM]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[ScriptM]", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     SqrtBox["2"]], 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", " ", 
      RowBox[{
       SuperscriptBox["R", 
        RowBox[{"-", "1"}]], " ", 
       RowBox[{"Exp", "[", "\[Psi]", "]"}]}], " ", ",", " ", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", "\[Psi]"}], "]"}]}]}], "}"}]}], "/.", " ", "eq1a", 
   " "}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.820933317854281*^9, 3.8209333396620893`*^9}, 
   3.820937410342205*^9, 3.820944472322617*^9, {3.825460901188136*^9, 
   3.825460931611164*^9}, 3.8254610453300047`*^9, 3.825461087826323*^9},
 CellLabel->
  "In[211]:=",ExpressionUUID->"65452466-46a6-4ae8-a0c3-d4d0e4aeac16"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", 
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[Psi]", "[", 
      RowBox[{"R", ",", "T"}], "]"}]], 
    RowBox[{
     SqrtBox["2"], " ", "R"}]], ",", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       RowBox[{"\[Psi]", "[", 
        RowBox[{"R", ",", "T"}], "]"}]}]]}], 
    SqrtBox["2"]]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.820933339966406*^9, 3.8209333835387917`*^9, 3.8209334481343927`*^9, 
   3.82093741034233*^9, 3.820944472322708*^9, 3.8243816285481443`*^9, 
   3.824381856569952*^9, 3.824511849437441*^9, 3.8245141743819103`*^9, 
   3.825460932601921*^9, {3.825461023561533*^9, 3.825461045986712*^9}, 
   3.8254610878265877`*^9, 3.8254620089916143`*^9},
 CellLabel->
  "Out[212]=",ExpressionUUID->"218d7ea3-23a2-46f5-95e0-e75db396a930"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[ScriptM]bar", "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[ScriptM]bar", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     SqrtBox["2"]], 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", " ", 
      RowBox[{
       SuperscriptBox["R", 
        RowBox[{"-", "1"}]], " ", 
       RowBox[{"Exp", "[", "\[Psi]", "]"}]}], " ", ",", " ", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", "\[Psi]"}], "]"}]}]}], "}"}]}], "/.", " ", "eq1a", 
   " "}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.820933342941945*^9, 3.8209333673030777`*^9}, 
   3.820937410342538*^9, 3.820944472322826*^9, {3.825460941204159*^9, 
   3.825460946091731*^9}, 3.825461048337532*^9, 3.8254610878267384`*^9},
 CellLabel->
  "In[213]:=",ExpressionUUID->"d1953b16-cf7e-4da1-ad19-cf12e9173be3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", 
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[Psi]", "[", 
      RowBox[{"R", ",", "T"}], "]"}]], 
    RowBox[{
     SqrtBox["2"], " ", "R"}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"R", ",", "T"}], "]"}]}]]}], 
     SqrtBox["2"]]}]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.820933367920988*^9, 3.820933385725149*^9}, 
   3.82093344816428*^9, 3.820937410342681*^9, 3.820944472322927*^9, 
   3.824381628567217*^9, 3.824381856586792*^9, 3.824511849465397*^9, 
   3.824514174420451*^9, 3.82546094653951*^9, {3.825461023572341*^9, 
   3.825461049046905*^9}, 3.825461087827017*^9, 3.8254620090029697`*^9},
 CellLabel->
  "Out[214]=",ExpressionUUID->"6a8c3935-ee27-445c-a914-c54de86352a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Always", " ", "check", " ", "if", " ", "indices", " ", "needed", " ", 
    "are", " ", "up", " ", "or", " ", "down"}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"l", " ", "=", " ", 
    RowBox[{"ToTensor", "[", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<NewTensor\>\"", " ", ",", " ", "\"\<l\>\""}], "}"}], " ", 
      ",", " ", 
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", "\[ScriptL]", " ", ",", 
      " ", 
      RowBox[{"{", "\[Mu]", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"n", " ", "=", " ", 
    RowBox[{"ToTensor", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<NewTensor\>\"", " ", ",", " ", "\"\<n\>\""}], " ", "}"}], 
      " ", ",", " ", 
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", "\[ScriptN]", " ", ",", 
      " ", 
      RowBox[{"{", "\[Mu]", "}"}]}], " ", "]"}]}], " ", "\[IndentingNewLine]", 
   RowBox[{"m", " ", "=", " ", 
    RowBox[{"ToTensor", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<NewTensor\>\"", " ", ",", " ", "\"\<m\>\""}], " ", "}"}], 
      " ", ",", " ", 
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", "\[ScriptM]", " ", ",", 
      " ", 
      RowBox[{"{", "\[Mu]", "}"}]}], " ", "]"}]}], " ", "\[IndentingNewLine]", 
   RowBox[{"mbar", " ", "=", " ", 
    RowBox[{"ToTensor", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<NewTensor\>\"", " ", ",", " ", "\"\<mbar\>\""}], " ", 
       "}"}], " ", ",", " ", 
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", "\[ScriptM]bar", " ", 
      ",", " ", 
      RowBox[{"{", "\[Mu]", "}"}]}], " ", "]"}], " "}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.820937410342936*^9, 3.8209444723230133`*^9, 
  3.825461087827265*^9},
 CellLabel->
  "In[215]:=",ExpressionUUID->"479aeacd-d7e9-4b38-b0f4-028355b81be9"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["l", "", "\[Mu]"],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.820932775640643*^9, 3.820933448175404*^9, 
  3.82093741034304*^9, 3.820944472323167*^9, 3.824381628607512*^9, 
  3.824381856622077*^9, 3.824511849476097*^9, 3.824514174436861*^9, 
  3.82546102361543*^9, 3.825461087827609*^9, 3.825462009043186*^9},
 CellLabel->
  "Out[215]=",ExpressionUUID->"87c061ca-b9ad-42fd-a942-283457751223"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["n", "", "\[Mu]"],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.820932775640643*^9, 3.820933448175404*^9, 
  3.82093741034304*^9, 3.820944472323167*^9, 3.824381628607512*^9, 
  3.824381856622077*^9, 3.824511849476097*^9, 3.824514174436861*^9, 
  3.82546102361543*^9, 3.825461087827609*^9, 3.825462009047917*^9},
 CellLabel->
  "Out[216]=",ExpressionUUID->"04b53da3-1864-444a-af7d-326233b4fcaa"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["m", "", "\[Mu]"],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.820932775640643*^9, 3.820933448175404*^9, 
  3.82093741034304*^9, 3.820944472323167*^9, 3.824381628607512*^9, 
  3.824381856622077*^9, 3.824511849476097*^9, 3.824514174436861*^9, 
  3.82546102361543*^9, 3.825461087827609*^9, 3.825462009050055*^9},
 CellLabel->
  "Out[217]=",ExpressionUUID->"be47843b-5e0d-499b-b4d8-7974732eecf2"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["mbar", "", "\[Mu]"],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.820932775640643*^9, 3.820933448175404*^9, 
  3.82093741034304*^9, 3.820944472323167*^9, 3.824381628607512*^9, 
  3.824381856622077*^9, 3.824511849476097*^9, 3.824514174436861*^9, 
  3.82546102361543*^9, 3.825461087827609*^9, 3.8254620090520144`*^9},
 CellLabel->
  "Out[218]=",ExpressionUUID->"0526e84b-eebe-423e-9799-188b221f4aba"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"l", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"l", "[", "\[Mu]", "]"}]}], "]"}], "]"}], " ", "\[Equal]", 
     " ", "0"}], "  ", "//", " ", "Expand"}], " ", "//", " ", "Simplify"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"n", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"n", "[", "\[Mu]", "]"}]}], "]"}], " ", "]"}], "\[Equal]", 
     " ", "0"}], "   ", "//", " ", "Expand"}], " ", "//", " ", "Simplify"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"m", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"m", "[", "\[Mu]", "]"}]}], "]"}], "]"}], " ", "\[Equal]", 
     " ", "0"}], "   ", "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"mbar", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"mbar", "[", "\[Mu]", "]"}]}], "]"}], "]"}], " ", "\[Equal]", 
     " ", "0"}], "  ", "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"l", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"n", "[", "\[Mu]", "]"}]}], "]"}], "]"}], " ", "\[Equal]", 
     " ", "1"}], "//", " ", "Expand"}], " ", "//", " ", "FullSimplify"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"l", "[", "\[Mu]", "]"}], 
        RowBox[{"n", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}]}], "]"}], "]"}], " ", "\[Equal]", " ", 
     "1"}], "  ", "//", " ", "Expand"}], " ", "//", " ", "FullSimplify"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"m", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"mbar", "[", "\[Mu]", "]"}]}], "]"}], "]"}], " ", "\[Equal]", 
     " ", 
     RowBox[{"-", " ", "1"}]}], " ", "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"m", "[", "\[Mu]", "]"}], 
        RowBox[{"mbar", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}]}], "]"}], "]"}], " ", "\[Equal]", " ", 
     
     RowBox[{"-", " ", "1"}]}], " ", "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "completenessDownIndices", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"completenessDownIndices", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"MergeTensors", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"l", "[", 
       RowBox[{"-", "\[Mu]"}], "]"}], 
      RowBox[{"n", "[", 
       RowBox[{"-", "\[Nu]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"n", "[", 
       RowBox[{"-", "\[Mu]"}], "]"}], 
      RowBox[{"l", "[", 
       RowBox[{"-", "\[Nu]"}], "]"}]}], " ", "-", " ", 
     RowBox[{
      RowBox[{"m", "[", 
       RowBox[{"-", "\[Mu]"}], "]"}], 
      RowBox[{"mbar", "[", 
       RowBox[{"-", "\[Nu]"}], "]"}]}], "-", " ", 
     RowBox[{
      RowBox[{"m", "[", 
       RowBox[{"-", "\[Nu]"}], "]"}], 
      RowBox[{"mbar", "[", 
       RowBox[{"-", "\[Mu]"}], "]"}]}]}], "]"}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", " ", "completenessDownIndices", " ", "]"}], 
     "   ", "//", " ", "Expand"}], " ", "//", " ", "FullSimplify"}], " ", "//",
    " ", "MatrixForm"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", "metric1", "]"}], " ", "\[Equal]", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"Flatten", "[", " ", 
        RowBox[{
        "TensorValues", "[", " ", "completenessDownIndices", " ", "]"}], 
        "]"}]}], " ", "]"}], " ", "//", " ", "Expand"}], " ", "//", " ", 
    "FullSimplify"}], "  ", "//", " ", "TableForm"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "completenessUpIndices", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"completenessUpIndices", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"MergeTensors", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"l", "[", "\[Mu]", "]"}], 
      RowBox[{"n", "[", "\[Nu]", "]"}]}], "+", 
     RowBox[{
      RowBox[{"n", "[", "\[Mu]", "]"}], 
      RowBox[{"l", "[", "\[Nu]", "]"}]}], " ", "-", " ", 
     RowBox[{
      RowBox[{"m", "[", "\[Mu]", "]"}], 
      RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "-", " ", 
     RowBox[{
      RowBox[{"m", "[", "\[Nu]", "]"}], 
      RowBox[{"mbar", "[", "\[Mu]", "]"}]}]}], "]"}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", " ", "completenessUpIndices", " ", "]"}], 
     "   ", "//", " ", "Expand"}], " ", "//", " ", "FullSimplify"}], " ", "//",
    " ", "MatrixForm"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", "inverse1", "]"}], " ", "\[Equal]", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", " ", 
       RowBox[{"TensorValues", "[", " ", "completenessUpIndices", " ", "]"}], 
       "]"}]}], " ", "]"}], "  ", "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], "  ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.820937410343767*^9, 3.820944472323543*^9, {3.8237794627048893`*^9, 
   3.823779471575405*^9}, 3.823780788700976*^9, 3.82546108782915*^9, {
   3.825462014676922*^9, 3.825462019234852*^9}},
 CellLabel->
  "In[235]:=",ExpressionUUID->"6750ac77-280a-4471-858c-ffbb942fc379"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.825461023676552*^9, 3.8254610878293533`*^9, {3.8254620090950623`*^9, 
   3.825462019863093*^9}},
 CellLabel->
  "Out[235]=",ExpressionUUID->"33dd9c56-0ece-47c1-af0c-16155c631133"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.825461023676552*^9, 3.8254610878293533`*^9, {3.8254620090950623`*^9, 
   3.825462019866028*^9}},
 CellLabel->
  "Out[236]=",ExpressionUUID->"69cf3893-488a-46f3-90a1-9cb5abc71d9a"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.825461023676552*^9, 3.8254610878293533`*^9, {3.8254620090950623`*^9, 
   3.825462019868454*^9}},
 CellLabel->
  "Out[237]=",ExpressionUUID->"d8049774-e9ef-40b5-ad0f-4253ea293840"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.825461023676552*^9, 3.8254610878293533`*^9, {3.8254620090950623`*^9, 
   3.825462019870912*^9}},
 CellLabel->
  "Out[238]=",ExpressionUUID->"611fe0f3-5f79-49af-ba1d-32a94d5e9b79"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.825461023676552*^9, 3.8254610878293533`*^9, {3.8254620090950623`*^9, 
   3.8254620198742237`*^9}},
 CellLabel->
  "Out[239]=",ExpressionUUID->"276b2a93-5895-4648-89ce-0ee6fbcd1bc8"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.825461023676552*^9, 3.8254610878293533`*^9, {3.8254620090950623`*^9, 
   3.825462019884033*^9}},
 CellLabel->
  "Out[240]=",ExpressionUUID->"4b3d9572-eb45-4d71-ab2d-9313cdce4f78"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.825461023676552*^9, 3.8254610878293533`*^9, {3.8254620090950623`*^9, 
   3.8254620199181547`*^9}},
 CellLabel->
  "Out[241]=",ExpressionUUID->"4e2efde4-ebf5-4af9-bda8-ded2caaf238e"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.825461023676552*^9, 3.8254610878293533`*^9, {3.8254620090950623`*^9, 
   3.825462019922688*^9}},
 CellLabel->
  "Out[242]=",ExpressionUUID->"00849ebe-dcd8-4bea-ba2f-65482341f911"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Gamma]", "[", 
           RowBox[{"R", ",", "T"}], "]"}], "-", 
          RowBox[{"\[Psi]", "[", 
           RowBox[{"R", ",", "T"}], "]"}]}], ")"}]}]], "0", "0", "0"},
     {"0", 
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Gamma]", "[", 
            RowBox[{"R", ",", "T"}], "]"}], "-", 
           RowBox[{"\[Psi]", "[", 
            RowBox[{"R", ",", "T"}], "]"}]}], ")"}]}]]}], "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"\[Psi]", "[", 
           RowBox[{"R", ",", "T"}], "]"}]}]]}], " ", 
       SuperscriptBox["R", "2"]}], "0"},
     {"0", "0", "0", 
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"\[Psi]", "[", 
          RowBox[{"R", ",", "T"}], "]"}]}]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.825461023676552*^9, 3.8254610878293533`*^9, {3.8254620090950623`*^9, 
   3.825462019972723*^9}},
 CellLabel->
  "Out[245]//MatrixForm=",ExpressionUUID->"61990783-7f92-40b8-ac99-\
18cbb8bbd603"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.825461023676552*^9, 3.8254610878293533`*^9, {3.8254620090950623`*^9, 
   3.825462019977498*^9}},
 CellLabel->
  "Out[246]//TableForm=",ExpressionUUID->"e2254084-3fef-41c7-9134-\
1f783f304a6c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"\[Gamma]", "[", 
          RowBox[{"R", ",", "T"}], "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"\[Psi]", "[", 
          RowBox[{"R", ",", "T"}], "]"}]}]}]], "0", "0", "0"},
     {"0", 
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"\[Gamma]", "[", 
           RowBox[{"R", ",", "T"}], "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"\[Psi]", "[", 
           RowBox[{"R", ",", "T"}], "]"}]}]}]]}], "0", "0"},
     {"0", "0", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"\[Psi]", "[", 
           RowBox[{"R", ",", "T"}], "]"}]}]], 
        SuperscriptBox["R", "2"]]}], "0"},
     {"0", "0", "0", 
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"\[Psi]", "[", 
          RowBox[{"R", ",", "T"}], "]"}]}]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.825461023676552*^9, 3.8254610878293533`*^9, {3.8254620090950623`*^9, 
   3.825462020014146*^9}},
 CellLabel->
  "Out[249]//MatrixForm=",ExpressionUUID->"74434143-f362-49a8-9dfb-\
998b3a4e5cf6"],

Cell[BoxData[
 TagBox["True",
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.825461023676552*^9, 3.8254610878293533`*^9, {3.8254620090950623`*^9, 
   3.825462020018091*^9}},
 CellLabel->
  "Out[250]//TableForm=",ExpressionUUID->"9cb6eb98-c0ca-4716-ba31-\
a7b5a677947a"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Calculation of Newman Penrose Quantities : Spin Coefficients, Ricci Scalars, \
Weyl Scalars For Metric 1\
\>", "Section",
 CellChangeTimes->{{3.825462703232397*^9, 
  3.825462723615986*^9}},ExpressionUUID->"40ff97dc-650d-4362-9207-\
4ae9426275d5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "spinCoefficientReplace", "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spinCoefficientReplace", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Alpha]", "\[Rule]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "/", "2"}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MergeTensors", "[", 
               RowBox[{
                RowBox[{"CovariantD", "[", " ", 
                 RowBox[{
                  RowBox[{"l", "[", 
                   RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                  RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                RowBox[{"n", "[", "\[Mu]", "]"}], " ", 
                RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
              "TensorValues"}], " ", ")"}], "-", "\[IndentingNewLine]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MergeTensors", "[", 
               RowBox[{
                RowBox[{"CovariantD", "[", " ", 
                 RowBox[{
                  RowBox[{"m", "[", 
                   RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                  RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
                RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
              "TensorValues"}], ")"}]}], ")"}]}], " ", ")"}]}], " ", "//", 
       "Expand"}], " ", "//", " ", "Simplify"}], "  ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Beta]", " ", "\[Rule]", " ", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "/", "2"}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MergeTensors", "[", " ", 
               RowBox[{
                RowBox[{"CovariantD", "[", " ", 
                 RowBox[{
                  RowBox[{"l", "[", 
                   RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                  RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                RowBox[{"n", "[", "\[Mu]", "]"}], 
                RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
              "TensorValues"}], ")"}], "-", " ", "\[IndentingNewLine]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MergeTensors", "[", 
               RowBox[{
                RowBox[{"CovariantD", "[", " ", 
                 RowBox[{
                  RowBox[{"m", "[", 
                   RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                  RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
                RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
              "TensorValues"}], " ", ")"}]}], ")"}]}], ")"}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "Simplify"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Gamma]", " ", "\[Rule]", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "something", " ", "weird", " ", "here", " ", "correct", " ", 
          "definition", " ", "off", " ", "by", " ", "minus", " ", "sign"}], 
         " ", "*)"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            FractionBox["1", "2"], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"MergeTensors", "[", 
                 RowBox[{
                  RowBox[{"CovariantD", "[", " ", 
                   RowBox[{
                    RowBox[{"l", "[", 
                    RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                    RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                  RowBox[{"n", "[", "\[Mu]", "]"}], 
                  RowBox[{"n", "[", "\[Nu]", "]"}]}], " ", "]"}], " ", "//", 
                " ", "TensorValues"}], "  ", "//", " ", "Expand"}], "  ", 
              ")"}], "-", "\[IndentingNewLine]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"MergeTensors", "[", 
                  RowBox[{
                   RowBox[{"CovariantD", "[", " ", 
                    RowBox[{
                    RowBox[{"m", "[", 
                    RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                    RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                   RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
                   RowBox[{"n", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
                 "TensorValues"}], " ", "//", " ", "Expand"}], "  ", "//", 
               " ", "FullSimplify"}], " ", ")"}]}], ")"}]}], " ", "//", " ", 
          "Expand"}], " ", ")"}]}], "  ", "//", " ", "Expand"}], " ", "//", 
      " ", "Simplify"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CurlyEpsilon]", " ", "\[Rule]", " ", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", "2"}], ")"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"MergeTensors", "[", 
                   RowBox[{
                    RowBox[{"CovariantD", "[", 
                    RowBox[{
                    RowBox[{"l", "[", 
                    RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                    RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                    RowBox[{"n", "[", "\[Mu]", "]"}], " ", 
                    RowBox[{"l", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ",
                   "TensorValues"}], "  ", "//", " ", "Expand"}], "  ", "//", 
                " ", "FullSimplify"}], "  ", ")"}], "  ", "-", " ", 
              "\[IndentingNewLine]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"MergeTensors", "[", " ", 
                   RowBox[{
                    RowBox[{"CovariantD", "[", " ", 
                    RowBox[{
                    RowBox[{"m", "[", 
                    RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                    RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                    RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
                    RowBox[{"l", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ",
                   "TensorValues"}], " ", "//", " ", "Expand"}], " ", "//", 
                " ", "FullSimplify"}], ")"}]}], " ", ")"}]}], " ", "//", " ", 
           "Expand"}], "  ", "//", " ", "FullSimplify"}], " ", ")"}]}], " ", "//",
        " ", "Expand"}], " ", "//", " ", "Simplify"}], "  ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Kappa]", "\[Rule]", 
        RowBox[{"(", "  ", 
         RowBox[{
          RowBox[{"MergeTensors", "[", " ", 
           RowBox[{
            RowBox[{"CovariantD", "[", " ", 
             RowBox[{
              RowBox[{"l", "[", 
               RowBox[{"-", "\[Mu]"}], "]"}], " ", ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
            RowBox[{"m", "[", "\[Mu]", "]"}], " ", 
            RowBox[{"l", "[", "\[Nu]", "]"}]}], "  ", "]"}], "  ", "//", " ", 
          "TensorValues"}], " ", ")"}]}], "  ", "//", " ", "Expand"}], " ", "//",
       " ", "Simplify"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]", "\[Rule]", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"note", " ", "minus", " ", "sign"}], " ", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "*", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"MergeTensors", "[", " ", 
            RowBox[{
             RowBox[{"CovariantD", "[", " ", 
              RowBox[{
               RowBox[{"n", "[", 
                RowBox[{"-", "\[Mu]"}], "]"}], ",", 
               RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
             RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
             RowBox[{"mbar", "[", "\[Nu]", "]"}]}], " ", "]"}], "  ", "//", 
           " ", "TensorValues"}], " ", "//", " ", "Expand"}], " ", "//", " ", 
         "FullSimplify"}], ")"}]}]}], "  ", ",", "\[IndentingNewLine]", 
     RowBox[{"\[Mu]", "\[Rule]", " ", 
      RowBox[{"(*", 
       RowBox[{"note", " ", "minus", " ", "sign"}], " ", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "*", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"MergeTensors", " ", "[", " ", 
            RowBox[{
             RowBox[{"CovariantD", "[", " ", 
              RowBox[{
               RowBox[{"n", "[", 
                RowBox[{"-", "\[Mu]"}], "]"}], " ", ",", " ", 
               RowBox[{"-", "\[Nu]"}]}], " ", "]"}], " ", 
             RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
             RowBox[{"m", "[", "\[Nu]", "]"}]}], " ", "]"}], " ", "//", " ", 
           "TensorValues"}], "  ", "//", " ", "Expand"}], "  ", "//", " ", 
         "FullSimplify"}], " ", ")"}]}]}], "  ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Nu]", "\[Rule]", " ", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"MergeTensors", "[", " ", 
           RowBox[{
            RowBox[{"CovariantD", "[", " ", 
             RowBox[{
              RowBox[{"n", "[", 
               RowBox[{"-", "\[Mu]"}], "]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"m", "[", "\[Mu]", "]"}], " ", 
            RowBox[{"n", "[", "\[Nu]", "]"}]}], " ", "]"}], " ", "//", " ", 
          "TensorValues"}], " ", ")"}]}], " ", "//", " ", "Expand"}], " ", "//",
       " ", "Simplify"}], "  ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"\[Pi]", "\[Rule]", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"Note", " ", "minus", " ", "sign"}], " ", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "*", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"MergeTensors", "[", 
            RowBox[{
             RowBox[{"CovariantD", "[", " ", 
              RowBox[{
               RowBox[{"n", "[", 
                RowBox[{"-", "\[Mu]"}], "]"}], ",", 
               RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
             RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
             RowBox[{"l", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
           "TensorValues"}], "  ", "//", " ", "Expand"}], "  ", "//", " ", 
         "Simplify"}], " ", ")"}]}]}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"\[Rho]", " ", "\[Rule]", 
      RowBox[{"(", "  ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"MergeTensors", "[", " ", 
           RowBox[{
            RowBox[{"CovariantD", "[", " ", 
             RowBox[{
              RowBox[{"l", "[", 
               RowBox[{"-", "\[Mu]"}], "]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
            RowBox[{"m", "[", "\[Mu]", "]"}], " ", 
            RowBox[{"mbar", "[", "\[Nu]", "]"}]}], " ", "]"}], " ", "//", " ",
           "TensorValues"}], "  ", "//", " ", "Expand"}], " ", "//", " ", 
        "FullSimplify"}], " ", ")"}]}], "  ", ",", " ", 
     RowBox[{"\[Sigma]", "\[Rule]", 
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"MergeTensors", "[", " ", 
           RowBox[{
            RowBox[{"CovariantD", "[", 
             RowBox[{
              RowBox[{"l", "[", 
               RowBox[{"-", "\[Mu]"}], "]"}], " ", ",", " ", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
            RowBox[{"m", "[", "\[Mu]", "]"}], " ", 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
          "TensorValues"}], "  ", "//", " ", "Expand"}], " ", "//", " ", 
        "FullSimplify"}], ")"}]}], "  ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"\[Tau]", "\[Rule]", 
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"MergeTensors", "[", " ", 
           RowBox[{
            RowBox[{"CovariantD", "[", " ", 
             RowBox[{
              RowBox[{"l", "[", 
               RowBox[{"-", "\[Mu]"}], "]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
            RowBox[{"m", "[", "\[Mu]", "]"}], " ", 
            RowBox[{"n", "[", "\[Nu]", " ", "]"}]}], "]"}], "//", " ", 
          "TensorValues"}], " ", "//", " ", "Expand"}], " ", "//", " ", 
        "Simplify"}], "  ", ")"}]}]}], "   ", "\[IndentingNewLine]", "}"}]}], 
  " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spinCoefficientReplace", "   ", "//", " ", "TableForm"}], " ", "//",
   " ", "pdConv"}]}], "Input",
 CellChangeTimes->{
  3.820667112307205*^9, {3.820691856877*^9, 3.8206918635710173`*^9}, {
   3.820692627802567*^9, 3.820692798874284*^9}, {3.820793246159666*^9, 
   3.8207932735596313`*^9}, {3.820933088885683*^9, 3.820933089524383*^9}, 
   3.820934520109788*^9, 3.8209373342691517`*^9, {3.82100327861626*^9, 
   3.8210032838458157`*^9}, {3.821003386912135*^9, 3.821003405643714*^9}, {
   3.8210037363804407`*^9, 3.8210037487041388`*^9}, {3.82437982699832*^9, 
   3.824379841631565*^9}, {3.824382108710671*^9, 3.8243821568691874`*^9}, 
   3.825462738803863*^9},
 CellLabel->
  "In[251]:=",ExpressionUUID->"dafc1e34-8f32-4056-8c31-094c2674a9aa"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{"\[Alpha]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Beta]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Gamma]", "\[Rule]", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}], "-", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "R"}],
            MultilineFunction->None], "-", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "T"}],
            MultilineFunction->None], "-", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "R"}],
            MultilineFunction->None], "+", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "T"}],
            MultilineFunction->None]}], ")"}]}]}]},
      {
       RowBox[{"\[CurlyEpsilon]", "\[Rule]", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}], "-", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "R"}],
            MultilineFunction->None], "+", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "T"}],
            MultilineFunction->None], "-", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "R"}],
            MultilineFunction->None], "-", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "T"}],
            MultilineFunction->None]}], ")"}]}]}]},
      {
       RowBox[{"\[Kappa]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Lambda]", "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}], "-", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}]}], "+", 
             RowBox[{"2", " ", "R", " ", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "T"}],
               MultilineFunction->None]}], "+", "1"}], ")"}]}], 
          RowBox[{"4", " ", "R"}]]}]}]},
      {
       RowBox[{"\[Mu]", "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}], "-", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}]], 
          RowBox[{"4", " ", "R"}]]}]}]},
      {
       RowBox[{"\[Nu]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Pi]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Rho]", "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}], "-", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}]], 
          RowBox[{"2", " ", "R"}]]}]}]},
      {
       RowBox[{"\[Sigma]", "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}], "-", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "R", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], "+", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], ")"}]}], "-", "1"}], ")"}]}], 
         RowBox[{"2", " ", "R"}]]}]},
      {
       RowBox[{"\[Tau]", "\[Rule]", "0"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{3.8254620686311893`*^9},
 CellLabel->
  "Out[253]//TraditionalForm=",ExpressionUUID->"5f696214-9b33-4380-91f5-\
0374856f32e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "ricciScalarsReplace", "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ricciScalarsReplace", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "OO"], "\[Rule]", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"could", " ", "use", " ", "invisible", " ", "comma"}], ",", 
          " ", 
          RowBox[{
          "but", " ", "shows", " ", "up", " ", "in", " ", "output", " ", "so",
            " ", "use", " ", "letter", " ", "O"}]}], "  ", "*)"}], " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Mu]", "]"}], 
            RowBox[{"l", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "O1"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Mu]", "]"}], 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "O2"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"m", "[", "\[Mu]", "]"}], 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "10"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Mu]", "]"}], 
            RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "  ", "//",
        " ", "Expand"}], " ", "//", " ", "Simplify"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "11"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "4"], ")"}], "*", 
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{"TensorValues", "[", 
             RowBox[{"MergeTensors", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"tensorList", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], "[", 
                RowBox[{
                 RowBox[{"-", "\[Mu]"}], ",", 
                 RowBox[{"-", "\[Nu]"}]}], "]"}], 
               RowBox[{"l", "[", "\[Mu]", "]"}], 
               RowBox[{"n", "[", "\[Nu]", "]"}]}], "]"}], "]"}], ")"}], "+", 
           " ", 
           RowBox[{"(", 
            RowBox[{"TensorValues", "[", 
             RowBox[{"MergeTensors", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"tensorList", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], "[", 
                RowBox[{
                 RowBox[{"-", "\[Mu]"}], ",", 
                 RowBox[{"-", "\[Nu]"}]}], "]"}], 
               RowBox[{"m", "[", "\[Mu]", "]"}], 
               RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], "]"}], ")"}]}], 
          ")"}]}]}], " ", "//", " ", "Expand"}], " ", "//", " ", 
      "FullSimplify"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "12"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"n", "[", "\[Mu]", "]"}], 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "20"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"mbar", "[", "\[Mu]", "]"}], 
            RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", 
       " ", "Expand"}], " ", "//", " ", "Simplify"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "21"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"n", "[", "\[Mu]", "]"}], 
            RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "  ", "//",
        " ", "Expand"}], " ", "//", " ", "Simplify"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "22"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"n", "[", "\[Mu]", "]"}], 
            RowBox[{"n", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", " ", 
       "Expand"}], " ", "//", " ", "FullSimplify"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalLambda]", "\[Rule]", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox["1", "24"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"tensorList", "[", 
           RowBox[{"[", "5", "]"}], "]"}], "]"}]}]}], "//", " ", "Expand"}], 
      " ", "//", " ", "FullSimplify"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ricciScalarsReplace", "   ", "//", " ", "TableForm"}], " ", "//", 
  " ", "pdConv"}]}], "Input",
 CellChangeTimes->{{3.8207941683808823`*^9, 3.820794170188884*^9}, {
   3.820794210004217*^9, 3.820794295371916*^9}, {3.820794355374641*^9, 
   3.8207944173021507`*^9}, {3.8209358220143003`*^9, 3.820935854138783*^9}, 
   3.820937334270711*^9, {3.821003405651829*^9, 3.821003467622817*^9}, {
   3.821003736380765*^9, 3.821003748704556*^9}, {3.824235099273512*^9, 
   3.824235208081946*^9}, 3.825462738804455*^9},
 CellLabel->
  "In[254]:=",ExpressionUUID->"20f87851-1f96-4105-bda7-cc335632574b"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "OO"], "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None]}], "-", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None], "+", 
            RowBox[{"R", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], "+", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], ")"}], "2"]}]}], ")"}]}], "R"]}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "O1"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "O2"], "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"R", " ", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["R", "2"]}],
               MultilineFunction->None]}]}], "+", 
            RowBox[{"R", " ", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[PartialD]", "2"], 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", 
               SuperscriptBox["T", "2"]}],
              MultilineFunction->None]}], "-", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None]}], ")"}]}], 
         RowBox[{"2", " ", "R"}]]}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "10"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "11"], "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"R", " ", 
              RowBox[{"(", 
               RowBox[{
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None], "-", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None], "+", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], ")"}]}]}], "+", 
            RowBox[{"R", " ", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[PartialD]", "2"], 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", 
               SuperscriptBox["T", "2"]}],
              MultilineFunction->None]}], "+", 
            RowBox[{"R", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], ")"}], "2"]}], "+", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None]}], ")"}]}], 
         RowBox[{"4", " ", "R"}]]}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "12"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "20"], "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"R", " ", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["R", "2"]}],
               MultilineFunction->None]}]}], "+", 
            RowBox[{"R", " ", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[PartialD]", "2"], 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", 
               SuperscriptBox["T", "2"]}],
              MultilineFunction->None]}], "-", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None]}], ")"}]}], 
         RowBox[{"2", " ", "R"}]]}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "21"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "22"], "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None]}], "+", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None], "+", 
            RowBox[{"R", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], "-", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], ")"}], "2"]}]}], ")"}]}], 
         RowBox[{"4", " ", "R"}]]}]},
      {
       RowBox[{"\[CapitalLambda]", "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"R", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None], "-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None], "-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None], "+", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"], "-", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}], ")"}]}], "-", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None]}], ")"}]}], 
         RowBox[{"12", " ", "R"}]]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{3.82546208610192*^9},
 CellLabel->
  "Out[256]//TraditionalForm=",ExpressionUUID->"9d9502e5-5d11-4239-a9f6-\
09344c3dfc29"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "weylScalarsReplace", "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Definitions", " ", "from", " ", "Griffiths"}], " ", "*)"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"weylScalarsReplace", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", "   ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "0"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], ",", 
              RowBox[{"-", "\[Lambda]"}], ",", 
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Kappa]", "]"}], 
            RowBox[{"m", "[", "\[Lambda]", "]"}], 
            RowBox[{"l", "[", "\[Mu]", "]"}], 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", " ", 
       "Expand"}], " ", "//", " ", "FullSimplify"}], " ", ",", " ", "\n", 
     "\t ", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "1"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], ",", 
              RowBox[{"-", "\[Lambda]"}], ",", 
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Kappa]", "]"}], 
            RowBox[{"n", "[", "\[Lambda]", "]"}], 
            RowBox[{"l", "[", "\[Mu]", "]"}], 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", " ", 
       "Expand"}], " ", "//", " ", "FullSimplify"}], " ", ",", " ", "\n", 
     "\t ", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "2"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], ",", 
              RowBox[{"-", "\[Lambda]"}], ",", 
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Kappa]", "]"}], 
            RowBox[{"m", "[", "\[Lambda]", "]"}], 
            RowBox[{"mbar", "[", "\[Mu]", "]"}], 
            RowBox[{"n", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], ",", " ", "\n", 
     "\t ", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "3"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], ",", 
              RowBox[{"-", "\[Lambda]"}], ",", 
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"n", "[", "\[Kappa]", "]"}], 
            RowBox[{"l", "[", "\[Lambda]", "]"}], 
            RowBox[{"n", "[", "\[Mu]", "]"}], 
            RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], " ", ",", " ", "\n",
      "\t ", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "4"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], ",", 
              RowBox[{"-", "\[Lambda]"}], ",", 
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"n", "[", "\[Kappa]", "]"}], 
            RowBox[{"mbar", "[", "\[Lambda]", "]"}], 
            RowBox[{"n", "[", "\[Mu]", "]"}], 
            RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}]}], 
    "\[IndentingNewLine]", "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"weylScalarsReplace", "  ", "//", " ", "TableForm"}], " ", "//", 
  " ", "pdConv"}]}], "Input",
 CellChangeTimes->{
  3.820667112308317*^9, {3.8206919186046867`*^9, 3.820691920188485*^9}, {
   3.820794507895151*^9, 3.820794582921618*^9}, 3.820937334271385*^9, 
   3.821003405651976*^9, 3.825462738804851*^9},
 CellLabel->
  "In[257]:=",ExpressionUUID->"9ffb2104-6519-4d35-8cec-488cbb436b3e"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "0"], "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"R", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}], "+", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None], "+", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None], "+", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], "+", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "+", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], "+", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], "+", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], ")"}]}]}], ")"}]}], "+", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None]}], ")"}]}], "R"]}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "1"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "2"], "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"R", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None], "-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None], "-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None], "+", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
            RowBox[{"2", " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None]}]}], ")"}]}], 
         RowBox[{"6", " ", "R"}]]}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "3"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "4"], "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"R", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"2", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None]}]}], "+", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None], "+", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None], "+", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], "-", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], "-", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], "+", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None]}], ")"}]}], 
         RowBox[{"4", " ", "R"}]]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{3.825462104707143*^9},
 CellLabel->
  "Out[259]//TraditionalForm=",ExpressionUUID->"c4cc0578-73d8-4576-a864-\
a729a513a873"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Reduction of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalPsi]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "e7036566-e9bf-4ab7-9c75-89aaa671178b"],
 " and Equation 41"
}], "Section",
 CellChangeTimes->{{3.825462658849497*^9, 3.825462688656942*^9}, 
   3.825462738804996*^9, {3.8254629322795057`*^9, 
   3.8254629362628317`*^9}},ExpressionUUID->"c2faef1a-8d0c-48ec-8397-\
7a24c6c02d23"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{"eq2", " ", ",", 
      RowBox[{
       SuperscriptBox["\[Psi]", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "2"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"R", ",", "T"}], "]"}]}], "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], " ", "//", " ", "pdConv"}]], "Input",
 CellChangeTimes->{{3.825462176524868*^9, 3.8254622027624817`*^9}, {
   3.8254624028284483`*^9, 3.825462424539657*^9}, 3.8254626721664553`*^9, 
   3.825462738805188*^9},
 CellLabel->
  "In[282]:=",ExpressionUUID->"2c2c26ee-fd41-4e4a-bcfe-5826ad45e2eb"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[PartialD]", "2"], 
     RowBox[{"\[Psi]", "(", 
      RowBox[{"R", ",", "T"}], ")"}]}], 
    RowBox[{"\[PartialD]", 
     SuperscriptBox["T", "2"]}],
    MultilineFunction->None], "\[Rule]", 
   FractionBox[
    RowBox[{
     RowBox[{"R", " ", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[PartialD]", "2"], 
        RowBox[{"\[Psi]", "(", 
         RowBox[{"R", ",", "T"}], ")"}]}], 
       RowBox[{"\[PartialD]", 
        SuperscriptBox["R", "2"]}],
       MultilineFunction->None]}], "+", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"R", ",", "T"}], ")"}]}], 
      RowBox[{"\[PartialD]", "R"}],
      MultilineFunction->None]}], "R"]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.825462178254059*^9, 3.825462203143939*^9}, {
   3.825462403244219*^9, 3.8254624250863113`*^9}, 3.82546267216691*^9, 
   3.825462738805294*^9},
 CellLabel->
  "Out[282]//TraditionalForm=",ExpressionUUID->"41a92e72-c25a-4c3d-b1fb-\
6b04591bb922"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", " ", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"eq3a", " ", ",", "T"}], "]"}], " ", "/.", " ", 
    RowBox[{"Equal", "\[Rule]", " ", "Rule"}]}], " ", ")"}], "//", " ", 
  "pdConv"}]], "Input",
 CellChangeTimes->{{3.8254622046543503`*^9, 3.825462207026293*^9}, {
   3.825462275335662*^9, 3.8254622901662703`*^9}, {3.8254624305731573`*^9, 
   3.825462432675447*^9}, 3.8254626721670837`*^9, 3.825462738805435*^9},
 CellLabel->
  "In[283]:=",ExpressionUUID->"4851d932-9550-459f-9fc4-840e857595fd"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[PartialD]", "2"], 
     RowBox[{"\[Gamma]", "(", 
      RowBox[{"R", ",", "T"}], ")"}]}], 
    RowBox[{"\[PartialD]", 
     SuperscriptBox["T", "2"]}],
    MultilineFunction->None], "\[Rule]", 
   RowBox[{
    RowBox[{"2", " ", "R", " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"R", ",", "T"}], ")"}]}], 
      RowBox[{"\[PartialD]", "T"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"R", ",", "T"}], ")"}]}], 
      RowBox[{
       RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
       RowBox[{"\[PartialD]", "T"}]}],
      MultilineFunction->None]}], "+", 
    RowBox[{"2", " ", "R", " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"R", ",", "T"}], ")"}]}], 
      RowBox[{"\[PartialD]", "R"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"R", ",", "T"}], ")"}]}], 
      RowBox[{"\[PartialD]", 
       SuperscriptBox["T", "2"]}],
      MultilineFunction->None]}]}]}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.825462207546995*^9, {3.825462276519022*^9, 3.82546229055133*^9}, 
   3.825462432963876*^9, 3.8254626721673927`*^9, 3.8254627388055267`*^9},
 CellLabel->
  "Out[283]//TraditionalForm=",ExpressionUUID->"3694deab-d9e4-4906-a433-\
acd993ea4020"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"eq3b", " ", ",", "R"}], "]"}], " ", "/.", " ", 
   RowBox[{"Equal", "\[Rule]", " ", "Rule"}]}], "  ", "//", " ", 
  "pdConv"}]], "Input",
 CellChangeTimes->{{3.825462209814724*^9, 3.8254622122743683`*^9}, {
   3.825462312628833*^9, 3.825462328051405*^9}, 3.825462672167515*^9, 
   3.825462738805647*^9},
 CellLabel->
  "In[275]:=",ExpressionUUID->"c384cc67-8a86-4b71-87d4-070961c5350d"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[PartialD]", "2"], 
     RowBox[{"\[Gamma]", "(", 
      RowBox[{"R", ",", "T"}], ")"}]}], 
    RowBox[{"\[PartialD]", 
     SuperscriptBox["R", "2"]}],
    MultilineFunction->None], "\[Rule]", 
   RowBox[{
    RowBox[{"R", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{
          RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
          RowBox[{"\[PartialD]", "T"}]}],
         MultilineFunction->None]}], "+", 
       RowBox[{"2", " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None]}]}], ")"}]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{"\[Psi]", "(", 
         RowBox[{"R", ",", "T"}], ")"}]}], 
       RowBox[{"\[PartialD]", "R"}],
       MultilineFunction->None], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{"\[Psi]", "(", 
         RowBox[{"R", ",", "T"}], ")"}]}], 
       RowBox[{"\[PartialD]", "T"}],
       MultilineFunction->None], ")"}], "2"]}]}], TraditionalForm]], "Output",\

 CellChangeTimes->{
  3.825462212710001*^9, {3.8254623185612907`*^9, 3.8254623284998903`*^9}, 
   3.8254626721679077`*^9, 3.825462738805715*^9},
 CellLabel->
  "Out[275]//TraditionalForm=",ExpressionUUID->"085c135a-3f80-497d-b38a-\
636ae08feb31"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "psiTwoReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psiTwoReplace", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"Collect", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"weylScalarsReplace", "[", 
              RowBox[{"[", "3", "]"}], "]"}], " ", "/.", " ", 
             RowBox[{"(", " ", 
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{"eq3a", " ", ",", "T"}], "]"}], " ", "/.", " ", 
               RowBox[{"Equal", "\[Rule]", " ", "Rule"}]}], "  ", ")"}]}], 
            " ", "/.", " ", 
            RowBox[{"(", " ", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{"eq3b", " ", ",", "R"}], "]"}], " ", "/.", " ", 
              RowBox[{"Equal", "\[Rule]", " ", "Rule"}]}], " ", ")"}]}], 
           ")"}], "/.", " ", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"Solve", "[", 
             RowBox[{"eq2", " ", ",", 
              RowBox[{
               SuperscriptBox["\[Psi]", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "2"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"R", ",", "T"}], "]"}]}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], " ", "//", " ", "Expand"}], " ", 
        "//", " ", "Apart"}], " ", "//", " ", "Expand"}], ")"}], " ", ",", 
     " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], 
        RowBox[{"\[Gamma]", "[", 
         RowBox[{"R", ",", "T"}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"R", ",", "T"}], "]"}]}]}], "]"}]}], "]"}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"psiTwoReplace", " ", "//", " ", "pdConv"}]}], "Input",
 CellChangeTimes->{{3.825462342217317*^9, 3.8254623725292187`*^9}, {
   3.8254624522618933`*^9, 3.825462615760624*^9}, 3.825462672168117*^9, 
   3.825462738805942*^9, {3.825462799145067*^9, 3.825462821904162*^9}},
 CellLabel->
  "In[300]:=",ExpressionUUID->"32c95341-f7a8-4db3-bd60-8a0c7f2a793d"],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["\[CapitalPsi]", "2"], "\[Rule]", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"R", ",", "T"}], ")"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"\[Gamma]", "(", 
        RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "2"]}]}], "+", 
      FractionBox[
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"R", ",", "T"}], ")"}]}], 
        RowBox[{"\[PartialD]", "R"}],
        MultilineFunction->None], 
       RowBox[{"2", " ", "R"}]], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.825462595883966*^9, 3.825462616885048*^9}, 
   3.825462672168436*^9, 3.825462738806032*^9, 3.8254628224142303`*^9},
 CellLabel->
  "Out[302]//TraditionalForm=",ExpressionUUID->"9d31ecdd-a982-43de-b9f9-\
1f8588e19fdd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "eq41", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Might", " ", "be", " ", "able", " ", "to", " ", "simplify", " ", "psi0",
       " ", "and", " ", "psi4"}], " ", "..."}], " ", "too", " ", "lazy"}], 
   " ", "*)"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq41", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"weylScalarsReplace", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "2"}], "]"}], "]"}], " ", ",", " ", 
      "\[IndentingNewLine]", "psiTwoReplace", " ", ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"weylScalarsReplace", "[", 
       RowBox[{"[", 
        RowBox[{"4", ";;", "5"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
     "}"}], "  ", "//", " ", "Flatten"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq41", "  ", "//", " ", "TableForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellChangeTimes->{{3.8254627612675047`*^9, 3.825462794783399*^9}, {
  3.825462828785522*^9, 3.825462923775414*^9}},
 CellLabel->
  "In[321]:=",ExpressionUUID->"49fedb31-84e5-4cf3-8269-716fc7fbfc0b"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "0"], "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"R", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}], "+", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None], "+", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None], "+", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], "+", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "+", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], "+", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], "+", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], ")"}]}]}], ")"}]}], "+", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None]}], ")"}]}], "R"]}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "1"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "2"], "\[Rule]", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], ")"}], "2"]}]}], "+", 
           FractionBox[
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None], 
            RowBox[{"2", " ", "R"}]], "+", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "T"}],
               MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "3"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "4"], "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"R", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"2", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None]}]}], "+", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None], "+", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None], "+", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], "-", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], "-", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], "+", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None]}], ")"}]}], 
         RowBox[{"4", " ", "R"}]]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.8254627825615587`*^9, 3.825462795771963*^9}, {
  3.825462849095605*^9, 3.825462924308918*^9}},
 CellLabel->
  "Out[323]//TraditionalForm=",ExpressionUUID->"c09d4566-7627-4b01-9d1c-\
77d486ed5969"]
}, Open  ]]
}, Closed]]
},
WindowSize->{1280, 675},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.3 for Mac OS X x86 (64-bit) (May 11, 2021)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"e006058c-eeac-419a-a38b-f0443095bcb6"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 398, 7, 159, "Title",ExpressionUUID->"4b5a6a66-8170-4e8d-9d37-4ea58f5a1110",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[981, 31, 322, 8, 76, "Author",ExpressionUUID->"841c20d4-c2a7-4aa5-869a-7026081419db",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[1340, 44, 228, 4, 69, "Section",ExpressionUUID->"71c2b6d1-a128-4719-9e57-3a5008d47bb6",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1571, 50, 433, 9, 63, "Input",ExpressionUUID->"177d740a-8648-40f9-9f10-0e36912718dc",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[2007, 61, 1534, 24, 43, "Output",ExpressionUUID->"63e6a3c7-5b58-48fc-b8bc-c9f7e5a87e86",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Closed]],
Cell[CellGroupData[{
Cell[3578, 90, 624, 10, 55, "Section",ExpressionUUID->"80d70a4f-b9f1-4374-b487-da5e2727238c",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[4205, 102, 847, 15, 84, "Input",ExpressionUUID->"244d5d54-4f80-4132-a261-169cdef558a1",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[5055, 119, 1545, 25, 43, "Output",ExpressionUUID->"493fd71d-bb0c-4178-aa72-05c8db607f1e",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[6603, 146, 527, 10, 63, "Input",ExpressionUUID->"1d2a64f8-8a51-4462-8147-758db00bffd8",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[7133, 158, 494, 9, 43, "Output",ExpressionUUID->"43039e88-15f6-48ed-80ed-9b28c9482d12",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[7630, 169, 555, 10, 63, "Input",ExpressionUUID->"2b22d001-4936-40c6-bac5-46dd585ed301",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[8188, 181, 524, 9, 43, "Output",ExpressionUUID->"21681a78-5e34-4f47-ac6e-43e67478d739",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[8715, 192, 543, 10, 63, "Input",ExpressionUUID->"7eb76c33-588f-4c47-bd25-b7a6f3245907",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[9261, 204, 508, 9, 43, "Output",ExpressionUUID->"766c9234-f265-45ac-9af0-c1293850bc66",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[9772, 215, 560, 10, 63, "Input",ExpressionUUID->"4c3de8df-465a-45c4-9826-972af9cf6767",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[10335, 227, 525, 9, 43, "Output",ExpressionUUID->"254ed773-b5d2-4b05-85d7-3789ccf1542e",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[10863, 238, 528, 10, 63, "Input",ExpressionUUID->"444207c8-d3d0-4ebd-92af-47259d96bf27",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[11394, 250, 491, 9, 43, "Output",ExpressionUUID->"e1bc35a1-dc4b-4bef-b621-338ae61b13f6",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[11888, 261, 536, 10, 63, "Input",ExpressionUUID->"122725d0-6cb1-4a20-b262-837076b9296a",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[12427, 273, 498, 9, 43, "Output",ExpressionUUID->"44a2d44f-3416-4316-9181-afc6e92d19bb",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[12928, 284, 538, 10, 63, "Input",ExpressionUUID->"54deca47-2efb-406c-b45b-5104a486572b",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[13469, 296, 499, 9, 43, "Output",ExpressionUUID->"eb3a63ee-c7d0-461b-a8d8-b1709b8ffaef",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[13971, 307, 513, 10, 63, "Input",ExpressionUUID->"0ae58561-f66a-423e-b9bb-4590799861e2",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[14487, 319, 476, 8, 43, "Output",ExpressionUUID->"832f3298-5356-4b8d-9a81-27fde7c1b920",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[14966, 329, 546, 10, 63, "Input",ExpressionUUID->"faa13332-c7c8-432b-9635-d1bdb02a7ab2",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[15515, 341, 511, 9, 43, "Output",ExpressionUUID->"3c9e61af-23f8-4b97-bb93-dd9466ffa7b1",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[16029, 352, 523, 10, 63, "Input",ExpressionUUID->"a9f9b439-29e5-4163-8d02-0a788137075b",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[16555, 364, 482, 8, 43, "Output",ExpressionUUID->"d2b81f4a-7f32-455c-822a-c594d2925716",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[17040, 374, 547, 10, 63, "Input",ExpressionUUID->"466bb97c-e94c-44f6-85b6-c3ea69618b1d",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[17590, 386, 512, 9, 43, "Output",ExpressionUUID->"88822376-5257-4f56-82ed-9be348f8928e",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[18105, 397, 529, 10, 63, "Input",ExpressionUUID->"7871f32c-57c4-4f22-8dae-14e3b1432f3a",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[18637, 409, 496, 9, 43, "Output",ExpressionUUID->"d3e266c0-b7c9-4cc1-aa8b-99f4f6814bf0",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[19136, 420, 508, 9, 63, "Input",ExpressionUUID->"6c4e956d-545c-47a8-a455-8c68deb7d344",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[19647, 431, 471, 8, 43, "Output",ExpressionUUID->"7679e4d1-d22e-484d-93aa-e74f4ed5f5d6",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[20121, 441, 514, 10, 63, "Input",ExpressionUUID->"93f75265-ade5-46ce-a794-0e33812ae485",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[20638, 453, 473, 8, 43, "Output",ExpressionUUID->"710a792d-3922-4b5c-a970-a20040d82747",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[21114, 463, 517, 10, 63, "Input",ExpressionUUID->"28c3d8d2-2d3c-4b89-98c5-736ad78b5cb3",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[21634, 475, 476, 8, 43, "Output",ExpressionUUID->"05c15c37-71f5-43e4-9595-3a77292d01ae",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[22113, 485, 250, 4, 69, "Section",ExpressionUUID->"a39fd035-af76-487a-9aec-2350964d5a56",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[22366, 491, 1666, 45, 189, "Input",ExpressionUUID->"a67c28b3-e4fa-467d-8477-02d241f26806",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[24035, 538, 1809, 30, 24, "Print",ExpressionUUID->"2fa01d9c-cce1-4b70-867a-168ddc2f95bd",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[25847, 570, 1826, 31, 24, "Print",ExpressionUUID->"33629b5e-8ed5-45a6-b9f5-4234ee5f071a",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[27676, 603, 1685, 26, 41, "Output",ExpressionUUID->"8491ec75-84b8-4d30-93be-a83f27edf6e4",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[29364, 631, 268, 4, 41, "Input",ExpressionUUID->"1cfc1cbc-082e-4984-9e16-aef2e7e27581",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[29635, 637, 310, 5, 41, "Input",ExpressionUUID->"b3b85a1d-9770-4862-ad35-b81cc74e9e4d",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Closed]],
Cell[CellGroupData[{
Cell[29982, 647, 266, 5, 55, "Section",ExpressionUUID->"32067aaa-f3bd-4d47-92cc-e407e444c96d",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[30251, 654, 4951, 111, 777, "Input",ExpressionUUID->"434e21e1-c12c-43ce-b5f8-2adc9da6ba36",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[35205, 767, 3917, 121, 609, "Output",ExpressionUUID->"b145affd-70d2-4620-9b42-6a738aa0fb18",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[39125, 890, 723, 16, 63, "Input",ExpressionUUID->"5a0745f2-cb18-49e4-8b8c-b083fddb30bb",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}]
}, Closed]],
Cell[CellGroupData[{
Cell[39885, 911, 362, 6, 55, "Section",ExpressionUUID->"82d6e648-30e5-4355-8a17-3f1f83f2c309",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[40250, 919, 1659, 41, 126, "Input",ExpressionUUID->"d9ebaf10-237f-4130-a5fb-0d1daa112573",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[41912, 962, 1056, 26, 84, "Input",ExpressionUUID->"42e20412-9be8-4388-8cfe-943ddfe130e7",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Closed]],
Cell[CellGroupData[{
Cell[43005, 993, 223, 4, 55, "Section",ExpressionUUID->"566df22b-755e-43ec-b11d-274a61a10680",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[43231, 999, 1065, 27, 86, "Input",ExpressionUUID->"91dbd946-618f-4a9b-9948-0934d8670091",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[44299, 1028, 909, 25, 44, "Output",ExpressionUUID->"851ce4b4-3548-4913-beb0-1541ea428da5",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[45211, 1055, 462, 10, 41, "Input",ExpressionUUID->"27a9e42e-e6b3-4456-9a9c-0892ee1a5191",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[45676, 1067, 1416, 41, 113, "Output",ExpressionUUID->"d6cada9c-c281-4a3e-b535-85f894b54d72",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[47095, 1110, 947, 19, 147, "Input",ExpressionUUID->"da4a47a7-da52-4c89-bc33-25ed731be190",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[48045, 1131, 956, 28, 69, "Output",ExpressionUUID->"4fa2bce8-42d7-4e73-a071-1e32fa84ccde",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[49004, 1161, 694, 14, 105, "Input",ExpressionUUID->"b332d15e-d557-4a6d-826a-87bef117d5ba",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[49701, 1177, 1844, 53, 113, "Output",ExpressionUUID->"8f6709e8-9c43-447d-8b30-cafdeed4c3bf",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[51548, 1232, 617, 12, 105, "Input",ExpressionUUID->"60ab4b93-743c-467f-9d3f-6426e61e1b7c",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[52168, 1246, 1860, 55, 123, "Output",ExpressionUUID->"bdfed53c-4a5e-4f0c-bc7e-8e00d002a4df",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[54031, 1303, 406, 9, 41, "Input",ExpressionUUID->"bdc6de77-62dc-445a-a6f6-639c3d1d867f",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[54440, 1314, 821, 23, 101, "Output",ExpressionUUID->"4d50546f-71c2-4fbd-8d0c-f097ecd8ad04",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[55264, 1339, 407, 9, 41, "Input",ExpressionUUID->"e2019552-e56d-4d0e-9e0d-1682c78e966a",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[55674, 1350, 823, 23, 101, "Output",ExpressionUUID->"03f59306-5513-40f7-a868-5755aa0d4e72",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}]
}, Closed]],
Cell[CellGroupData[{
Cell[56534, 1378, 258, 5, 55, "Section",ExpressionUUID->"a1cd9c87-b348-4e88-9203-ce404066f7bb",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[56795, 1385, 5726, 130, 714, "Input",ExpressionUUID->"3926158a-274e-4b9e-b299-12cb7734e6f5",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[62524, 1517, 1036, 21, 65, "Input",ExpressionUUID->"ab98a04c-d49f-473d-9c35-1b8c005834f9",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[63563, 1540, 331, 6, 41, "Output",ExpressionUUID->"f155103b-f255-4368-a25a-35168125aaad",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[63897, 1548, 812, 18, 84, "Input",ExpressionUUID->"931850c3-fd09-4e67-9eb8-d4999c3b8c58",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[64712, 1568, 617, 11, 45, "Output",ExpressionUUID->"5b68e725-5b31-4f63-b6c1-728fc4550477",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[65332, 1581, 528, 7, 41, "Output",ExpressionUUID->"42d78e6e-988d-49ab-8a77-591275236de7",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[65863, 1590, 2171, 58, 114, "Output",ExpressionUUID->"f72cadeb-5d28-4a2d-92f7-639fec9b8569",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[68037, 1650, 815, 18, 84, "Input",ExpressionUUID->"31442022-9c1c-4542-8029-3399ae4297a4",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[68855, 1670, 728, 14, 45, "Output",ExpressionUUID->"344dbade-ad70-4585-a292-7683ea008ce2",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[69586, 1686, 627, 9, 41, "Output",ExpressionUUID->"c3aca5fc-1244-42c4-ba79-8ed066cf198a",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[70216, 1697, 18442, 520, 382, "Output",ExpressionUUID->"d6598982-d1ef-4c64-bbc3-2bacde0729fe",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[88661, 2219, 810, 18, 84, "Input",ExpressionUUID->"fa8ba01f-d62e-4dca-99de-facc102b9e5e",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[89474, 2239, 594, 10, 45, "Output",ExpressionUUID->"8c183352-5642-4a77-ad1c-40f13fcd5cf5",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[90071, 2251, 539, 7, 41, "Output",ExpressionUUID->"b9e4648c-8f16-4394-b5e2-53856a8980a0",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[90613, 2260, 97163, 2403, 488, "Output",ExpressionUUID->"101553e9-fb5a-4662-b7b2-bc4239489ae0",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[187779, 4665, 808, 18, 84, "Input",ExpressionUUID->"5581a3fc-e7c0-48ae-93b4-3816c94a26a8",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[188590, 4685, 577, 10, 45, "Output",ExpressionUUID->"284de5bb-547a-4c13-adb1-251854f38e61",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[189170, 4697, 538, 7, 41, "Output",ExpressionUUID->"f5138afa-741b-414a-b704-6acca80df005",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[189711, 4706, 8962, 251, 182, "Output",ExpressionUUID->"5a4b63a3-1dee-4738-b7c0-a69b3b3454a3",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[198676, 4959, 812, 18, 84, "Input",ExpressionUUID->"b6025cbd-4b46-42eb-baca-5375352e0907",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[199491, 4979, 543, 9, 41, "Output",ExpressionUUID->"0ff009c7-6c1b-4339-bea5-c3d202c37c2d",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[200037, 4990, 541, 7, 41, "Output",ExpressionUUID->"3329c924-14e1-4674-ace5-651eeb83e6c7",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[200581, 4999, 3167, 87, 81, "Output",ExpressionUUID->"97275ac7-8456-4794-8971-ddfd42bf6db7",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[203751, 5088, 741, 17, 84, "Input",ExpressionUUID->"b788313c-d4f8-4b28-9c19-53dbdf83f09c",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[204495, 5107, 376, 7, 41, "Output",ExpressionUUID->"59de3f1a-f6e9-4d90-80b2-3d4c89da0d4f",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[204874, 5116, 378, 5, 41, "Output",ExpressionUUID->"d751b6f6-7927-40e7-a898-6c2ddcd47d70",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[205255, 5123, 23970, 668, 305, "Output",ExpressionUUID->"0153a708-33eb-4411-9632-de51cb5fd820",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[229228, 5793, 792, 18, 84, "Input",ExpressionUUID->"3b422bb1-347e-4075-b7d9-df21555823a1",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[230023, 5813, 513, 10, 45, "Output",ExpressionUUID->"8eef0df0-a2eb-43d2-99b3-4c0396f2d20f",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[230539, 5825, 475, 7, 41, "Output",ExpressionUUID->"b626c575-c241-4046-b894-971f90bfed53",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[231017, 5834, 8478, 234, 180, "Output",ExpressionUUID->"37921ae8-a574-40e2-a969-ae0c4abe935a",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[239498, 6070, 859, 19, 84, "Input",ExpressionUUID->"be2db789-7f63-4097-988b-0807f6c55413",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[240360, 6091, 599, 11, 45, "Output",ExpressionUUID->"3612f5ed-a4c6-4c72-8ede-ba5cf40e35e7",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[240962, 6104, 541, 8, 41, "Output",ExpressionUUID->"3ae53278-02f9-4560-878f-3fd97a59f2e3",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[241506, 6114, 143452, 3442, 596, "Output",ExpressionUUID->"92b9e7f3-711d-4ba5-96f2-8380a0ec00b7",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[384961, 9558, 719, 17, 84, "Input",ExpressionUUID->"269745b9-3b9d-40ee-bb40-97c459ac8ae4",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[385683, 9577, 353, 7, 45, "Output",ExpressionUUID->"1c53a8fa-1c3d-4572-8318-24e32411cad0",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[386039, 9586, 304, 4, 41, "Output",ExpressionUUID->"9d4e6cab-6553-45dc-a5fa-5da8aa2f4807",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[386346, 9592, 146771, 3434, 450, "Output",ExpressionUUID->"64acc3ad-a3e1-4108-8d17-8f4e50f844ca",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}]
}, Closed]],
Cell[CellGroupData[{
Cell[533154, 13031, 242, 4, 55, "Section",ExpressionUUID->"2dd92ea5-1ac2-44ad-9de8-e46becee731f",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[533399, 13037, 1804, 47, 210, "Input",ExpressionUUID->"430b3bdf-8e5c-405a-8966-e77ce4351081",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[535206, 13086, 7964, 229, 218, "Output",ExpressionUUID->"6da63780-0c6e-44bf-a9c8-a9ac6e3597a8",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[543173, 13317, 1813, 47, 210, "Input",ExpressionUUID->"da56504d-fd36-427a-8686-8f4ae895fa6d",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[544989, 13366, 7497, 212, 216, "Output",ExpressionUUID->"25b38f48-0d9f-45dd-98c4-a489eb89883e",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[552489, 13580, 1329, 34, 122, "Input",ExpressionUUID->"01e3afa6-3bbc-4a29-abf8-cf14b88715ce",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[553821, 13616, 1080, 33, 78, "Output",ExpressionUUID->"68d5d3d7-be68-43a3-ae11-7bad6b0dc8c7",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[554904, 13651, 1117, 27, 107, "Input",ExpressionUUID->"8784da7d-261b-4fe0-b86b-3ff78a94d123",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[556024, 13680, 963, 27, 69, "Output",ExpressionUUID->"41d8df1c-fe46-4de1-bb59-db37b85bb87d",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[556990, 13709, 1111, 27, 107, "Input",ExpressionUUID->"b68757b2-2217-4405-8d0f-ee8b81a0d33e",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[558104, 13738, 1134, 34, 71, "Output",ExpressionUUID->"ff25d424-4274-4985-8743-bd7b15349592",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[559241, 13774, 594, 12, 147, "Input",ExpressionUUID->"c60045ec-8672-49e2-9807-56d9d2ad410f",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[559838, 13788, 2396, 69, 86, "Output",ExpressionUUID->"4e756ba6-dfd9-4874-98e0-debd5cc7e682",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}]
}, Closed]],
Cell[CellGroupData[{
Cell[562271, 13862, 403, 8, 55, "Section",ExpressionUUID->"658d25f4-3452-4b31-bb16-f73f8017618c",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[562677, 13872, 788, 15, 126, "Input",ExpressionUUID->"c4e0191a-81a1-42fe-a7d2-75628c777e11",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[563468, 13889, 3328, 95, 124, "Output",ExpressionUUID->"b264722a-9ea5-442a-a109-3e127c8813d5",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[566799, 13986, 881, 17, 84, "Input",ExpressionUUID->"e6f7b808-6e71-4c01-a87a-bcaf54c56be6",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[567683, 14005, 691, 15, 41, "Output",ExpressionUUID->"6ce32bfa-9541-465a-a802-5f745ead1cd7",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[568377, 14022, 1391, 29, 189, "Input",ExpressionUUID->"ff803a79-bcfe-44b2-90ce-d890d22e6d93",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[569771, 14053, 2871, 84, 138, "Output",ExpressionUUID->"77f9896a-0023-4f87-81d9-ccfb3c86bb4d",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[572645, 14139, 1091, 22, 41, "Input",ExpressionUUID->"59446fb0-4bbc-44f3-a5b3-00fabaa254dd",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[573739, 14163, 1141, 27, 58, "Output",ExpressionUUID->"a02a4d21-f5e9-4bdb-aef5-6a41049a341f",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[574883, 14192, 1450, 33, 104, "Input",ExpressionUUID->"b44f7dbd-a7b6-4479-b76f-32a43ac5fbe8",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[576336, 14227, 1089, 26, 61, "Output",ExpressionUUID->"84d8dbf2-81eb-41cd-8643-1c518df1ae85",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[577428, 14255, 987, 22, 84, "Input",ExpressionUUID->"3c2203c8-d087-4d76-b3e7-670e251e9817",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[578418, 14279, 1078, 25, 60, "Output",ExpressionUUID->"6ea2e523-b413-433a-9f9d-1eb05cb74142",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[579499, 14306, 1052, 20, 84, "Input",ExpressionUUID->"51d68246-4cfd-4cbb-a0df-391f950dd94c",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[580554, 14328, 973, 24, 41, "Output",ExpressionUUID->"507505a4-10b9-4c2a-958a-89f43b0d4ce4",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[581530, 14354, 935, 20, 84, "Input",ExpressionUUID->"e9a756a4-0206-4a05-97e1-3ea83cb7caa2",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[582468, 14376, 805, 17, 61, "Output",ExpressionUUID->"6278f5a3-029b-42a8-9137-cb2367ad795b",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[583276, 14395, 1359, 29, 84, "Input",ExpressionUUID->"15cfc988-0ada-4e1a-b04d-411f12b51abb",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[584638, 14426, 622, 18, 41, "Output",ExpressionUUID->"0983c25b-cdcf-408d-b090-07c976e75628",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[585263, 14446, 1847, 43, 189, "Input",ExpressionUUID->"85b97414-7494-4c88-98c1-5b890a008c84",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[587113, 14491, 719, 12, 41, "Output",ExpressionUUID->"7dddbe15-cad4-4ea1-8d74-b1f29b344f07",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[587835, 14505, 742, 13, 41, "Output",ExpressionUUID->"f4f7a971-8a6e-41b5-99ab-60202b39c62b",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[588580, 14520, 1073, 26, 41, "Output",ExpressionUUID->"0f1a5d33-9679-496f-ab72-537709a44a83",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[589656, 14548, 1340, 37, 41, "Output",ExpressionUUID->"c968a9f3-1b42-48bf-bc5a-f03f25892139",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[590999, 14587, 1454, 40, 41, "Output",ExpressionUUID->"37b0fe8e-2daf-470a-8017-806cf7198fcd",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[592456, 14629, 2011, 48, 84, "Input",ExpressionUUID->"f75463c2-f2a2-4951-a74e-d01ecb2c49a4",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[594470, 14679, 719, 18, 41, "Output",ExpressionUUID->"fb506b66-9214-423c-8323-7ea0226b99cb",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[595192, 14699, 940, 20, 63, "Input",ExpressionUUID->"a32bb711-7a6c-4d43-b1b2-828d765d5f25",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[596135, 14721, 245534, 4055, 535, "Output",ExpressionUUID->"0f20b169-9947-422b-9347-26a7014443cf",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[841672, 18778, 857, 19, 41, "Input",ExpressionUUID->"9248498c-f0cc-4e1f-a718-298eb2d69c0f",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[842532, 18799, 174613, 2860, 522, "Output",ExpressionUUID->"7117709d-fdb1-4e55-aaf9-39d97ebd7cd1",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[1017182, 21664, 416, 11, 63, "Input",ExpressionUUID->"1c077e9c-86dd-44a4-a849-fac74d28e8f3"],
Cell[1017601, 21677, 677, 22, 69, "Output",ExpressionUUID->"60fb508a-eb28-49c3-802c-6ed94e76b505"],
Cell[1018281, 21701, 653, 21, 69, "Output",ExpressionUUID->"9881b68c-1fe9-4211-9a20-7a1121b82c56"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1018971, 21727, 817, 21, 41, "Input",ExpressionUUID->"15958b28-4674-45e5-90b6-d80cce5b3a31"],
Cell[1019791, 21750, 2909, 76, 79, "Output",ExpressionUUID->"0d919c49-29a9-4393-865b-26a07700b0bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1022737, 21831, 1084, 27, 84, "Input",ExpressionUUID->"905fe767-9a8a-4722-a44d-34100dbc20bc"],
Cell[1023824, 21860, 2811, 82, 147, "Output",ExpressionUUID->"afecc180-0523-467b-af69-02fc1f671ce2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1026672, 21947, 683, 17, 41, "Input",ExpressionUUID->"90209109-11a1-4b65-832c-47ad4ce520fc"],
Cell[1027358, 21966, 259260, 4275, 325, "Output",ExpressionUUID->"160bffeb-a3d2-40a1-8e13-7796c32b3bff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1286655, 26246, 661, 17, 41, "Input",ExpressionUUID->"1bbd6039-443c-4d6e-8eff-e83316dc2c1c"],
Cell[1287319, 26265, 108890, 1783, 304, "Output",ExpressionUUID->"1c6d24f6-933b-46b1-9d3d-91f44df570c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1396246, 28053, 315, 7, 69, "Section",ExpressionUUID->"39b951ee-6c3a-4ba5-a886-583c7f56f5e0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1396564, 28062, 774, 19, 100, "Input",ExpressionUUID->"8dc99f09-2fad-437e-be25-44093454b549",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1397341, 28083, 565, 17, 57, "Output",ExpressionUUID->"290a9bba-5021-4ec9-9511-818c99d98b62",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1397909, 28102, 1426, 37, 210, "Input",ExpressionUUID->"0d6ec84b-4ba4-4962-a7bd-c1465eebfd67",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1399338, 28141, 4414, 135, 210, "Output",ExpressionUUID->"2d14626d-36c3-4691-a9df-ee4dfa422eb5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1403755, 28278, 869, 23, 100, "Input",ExpressionUUID->"fc3524c6-d4ac-4d16-8ee4-764f9be613ae",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1404627, 28303, 878, 28, 57, "Output",ExpressionUUID->"393baadf-107c-4555-810e-7db6d62fa621",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1405508, 28333, 1432, 37, 210, "Input",ExpressionUUID->"0b24bbc9-493a-4730-98dd-66505e3bff14",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1406943, 28372, 6574, 198, 242, "Output",ExpressionUUID->"2d4ce99a-0c41-4dc4-8129-1be6a337948c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1413520, 28572, 913, 24, 84, "Input",ExpressionUUID->"dc75b236-e67b-4bf4-99b1-098bb8ceab23",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1414436, 28598, 345, 8, 45, "Output",ExpressionUUID->"f1920b37-417c-4460-926e-87e7a37344d0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1414784, 28608, 290, 5, 41, "Output",ExpressionUUID->"43997b51-3f4e-4d55-b669-1ab2a1e228a3",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1415077, 28615, 9427, 248, 308, "Output",ExpressionUUID->"749778b2-5694-4472-b1b7-02c59c73aacc",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Closed]],
Cell[CellGroupData[{
Cell[1424541, 28868, 1760, 45, 216, "Input",ExpressionUUID->"df8e5383-34a2-4bf4-b6f8-5e1b9315ac3a"],
Cell[1426304, 28915, 1233, 40, 105, "Output",ExpressionUUID->"ee71e993-7976-4f53-a993-d67126c0ce6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1427574, 28960, 473, 12, 41, "Input",ExpressionUUID->"6067c52b-a05a-4f1b-bd85-9bb948f61808"],
Cell[1428050, 28974, 1884, 59, 143, "Output",ExpressionUUID->"3b1c2d8e-e3fd-4938-9050-baa7be3373f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1429971, 29038, 350, 8, 69, "Section",ExpressionUUID->"625239a4-5b4e-4de5-af3b-30109802b935",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1430324, 29048, 741, 16, 84, "Input",ExpressionUUID->"3716b802-0749-4437-9f5b-f4f15c6a7359",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1431068, 29066, 1016, 26, 44, "Output",ExpressionUUID->"820b9ae6-e93f-4d0b-b1d2-f726108beac6",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1432087, 29094, 765, 17, 100, "Input",ExpressionUUID->"adbdec12-70f8-41d5-9ea2-6e717835f84e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1432855, 29113, 1149, 31, 57, "Output",ExpressionUUID->"246c9e78-6e4a-45e2-96dc-c5d30f876de6",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1434007, 29146, 918, 22, 107, "Input",ExpressionUUID->"65452466-46a6-4ae8-a0c3-d4d0e4aeac16",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1434928, 29170, 959, 24, 64, "Output",ExpressionUUID->"218d7ea3-23a2-46f5-95e0-e75db396a930",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1435890, 29196, 947, 23, 107, "Input",ExpressionUUID->"d1953b16-cf7e-4da1-ad19-cf12e9173be3",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1436840, 29221, 973, 24, 64, "Output",ExpressionUUID->"6a8c3935-ee27-445c-a914-c54de86352a5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1437816, 29247, 2063, 52, 126, "Input",ExpressionUUID->"479aeacd-d7e9-4b38-b0f4-028355b81be9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1439882, 29301, 495, 10, 43, "Output",ExpressionUUID->"87c061ca-b9ad-42fd-a942-283457751223",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1440380, 29313, 495, 10, 43, "Output",ExpressionUUID->"04b53da3-1864-444a-af7d-326233b4fcaa",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1440878, 29325, 495, 10, 43, "Output",ExpressionUUID->"be47843b-5e0d-499b-b4d8-7974732eecf2",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1441376, 29337, 500, 10, 43, "Output",ExpressionUUID->"0526e84b-eebe-423e-9799-188b221f4aba",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1441879, 29349, 6625, 190, 504, "Input",ExpressionUUID->"6750ac77-280a-4471-858c-ffbb942fc379",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1448507, 29541, 290, 6, 41, "Output",ExpressionUUID->"33dd9c56-0ece-47c1-af0c-16155c631133",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1448800, 29549, 290, 6, 41, "Output",ExpressionUUID->"69cf3893-488a-46f3-90a1-9cb5abc71d9a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1449093, 29557, 290, 6, 41, "Output",ExpressionUUID->"d8049774-e9ef-40b5-ad0f-4253ea293840",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1449386, 29565, 290, 6, 41, "Output",ExpressionUUID->"611fe0f3-5f79-49af-ba1d-32a94d5e9b79",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1449679, 29573, 292, 6, 41, "Output",ExpressionUUID->"276b2a93-5895-4648-89ce-0ee6fbcd1bc8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1449974, 29581, 290, 6, 41, "Output",ExpressionUUID->"4b3d9572-eb45-4d71-ab2d-9313cdce4f78",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1450267, 29589, 292, 6, 41, "Output",ExpressionUUID->"4e2efde4-ebf5-4af9-bda8-ded2caaf238e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1450562, 29597, 290, 6, 41, "Output",ExpressionUUID->"00849ebe-dcd8-4bea-ba2f-65482341f911",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1450855, 29605, 1830, 54, 113, "Output",ExpressionUUID->"61990783-7f92-40b8-ac99-18cbb8bbd603",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1452688, 29661, 943, 37, 305, "Output",ExpressionUUID->"e2254084-3fef-41c7-9134-1f783f304a6c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1453634, 29700, 1869, 56, 123, "Output",ExpressionUUID->"74434143-f362-49a8-9dfb-998b3a4e5cf6",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1455506, 29758, 364, 10, 52, "Output",ExpressionUUID->"9cb6eb98-c0ca-4716-ba31-a7b5a677947a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Closed]],
Cell[CellGroupData[{
Cell[1455907, 29773, 257, 6, 55, "Section",ExpressionUUID->"40ff97dc-650d-4362-9207-4ae9426275d5"],
Cell[CellGroupData[{
Cell[1456189, 29783, 13651, 327, 551, "Input",ExpressionUUID->"dafc1e34-8f32-4056-8c31-094c2674a9aa"],
Cell[1469843, 30112, 6452, 182, 320, "Output",ExpressionUUID->"5f696214-9b33-4380-91f5-0374856f32e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1476332, 30299, 9468, 250, 751, "Input",ExpressionUUID->"20f87851-1f96-4105-bda7-cc335632574b"],
Cell[1485803, 30551, 13137, 350, 350, "Output",ExpressionUUID->"9d9502e5-5d11-4239-a9f6-09344c3dfc29"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1498977, 30906, 5596, 143, 336, "Input",ExpressionUUID->"9ffb2104-6519-4d35-8cec-488cbb436b3e"],
Cell[1504576, 31051, 12761, 321, 198, "Output",ExpressionUUID->"c4cc0578-73d8-4576-a864-a729a513a873"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1517386, 31378, 447, 12, 56, "Section",ExpressionUUID->"c2faef1a-8d0c-48ec-8397-7a24c6c02d23"],
Cell[CellGroupData[{
Cell[1517858, 31394, 698, 19, 44, "Input",ExpressionUUID->"2c2c26ee-fd41-4e4a-bcfe-5826ad45e2eb"],
Cell[1518559, 31415, 1091, 33, 82, "Output",ExpressionUUID->"41a92e72-c25a-4c3d-b1fb-6b04591bb922"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1519687, 31453, 539, 12, 41, "Input",ExpressionUUID->"4851d932-9550-459f-9fc4-840e857595fd"],
Cell[1520229, 31467, 1598, 48, 74, "Output",ExpressionUUID->"3694deab-d9e4-4906-a433-acd993ea4020"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1521864, 31520, 456, 11, 41, "Input",ExpressionUUID->"c384cc67-8a86-4b71-87d4-070961c5350d"],
Cell[1522323, 31533, 2230, 68, 74, "Output",ExpressionUUID->"085c135a-3f80-497d-b38a-636ae08feb31"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1524590, 31606, 2296, 58, 153, "Input",ExpressionUUID->"32c95341-f7a8-4db3-bd60-8a0c7f2a793d"],
Cell[1526889, 31666, 1629, 49, 83, "Output",ExpressionUUID->"9d31ecdd-a982-43de-b9f9-1f8588e19fdd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1528555, 31720, 1181, 30, 168, "Input",ExpressionUUID->"49fedb31-84e5-4cf3-8269-716fc7fbfc0b"],
Cell[1529739, 31752, 11389, 289, 196, "Output",ExpressionUUID->"c09d4566-7627-4b01-9d1c-77d486ed5969"]
}, Open  ]]
}, Closed]]
}
]
*)

