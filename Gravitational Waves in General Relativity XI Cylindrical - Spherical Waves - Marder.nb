(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1924738,      40216]
NotebookOptionsPosition[   1885901,      39671]
NotebookOutlinePosition[   1886367,      39688]
CellTagsIndexPosition[   1886324,      39685]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Notebook for : 
Gravitational Waves in General Relativity XI Cylindrical - Spherical Waves - \
Marder \
\>", "Title",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.821550422362884*^9, 3.821550438179384*^9}, {
   3.825370659797716*^9, 3.825370659996311*^9}, 3.828006285316635*^9, 
   3.8556991921707077`*^9, 3.8556993060173607`*^9},
 TextAlignment->Center,ExpressionUUID->"4b5a6a66-8170-4e8d-9d37-4ea58f5a1110"],

Cell["\<\
Geoff Cope
University of Utah
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\|01040f\|01042d\|01044c\|010432\|010442\|010432\
\|010449\|010445\|01042e\|01043b\|010428 \|010432\|010442 \|01040f\|01042d\
\|01043b\|01042b
February 5, 2021\
\>", "Author",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.821729507652328*^9, 3.821729529657844*^9}, 
   3.8220480097522783`*^9, {3.822048070235491*^9, 3.822048084689715*^9}, {
   3.8225654346519403`*^9, 3.8225654361641483`*^9}, {3.8231764728567343`*^9, 
   3.823176482313031*^9}, {3.8233640113399878`*^9, 3.823364023347041*^9}, {
   3.8234229506702557`*^9, 3.823422956381791*^9}, {3.827953252419902*^9, 
   3.827953254868108*^9}, {3.851065213363542*^9, 3.8510652255731983`*^9}, {
   3.8510652620952*^9, 3.851065307413348*^9}, {3.85109882342251*^9, 
   3.851098834342609*^9}, {3.854710867172308*^9, 3.854710872740449*^9}, {
   3.854891173086644*^9, 3.8548911762146053`*^9}, {3.855697355652019*^9, 
   3.855697361844831*^9}, {3.855699192170816*^9, 3.855699199309759*^9}, {
   3.95572738542535*^9, 3.955727385953434*^9}},
 TextAlignment->Center,ExpressionUUID->"6dd20526-c048-462d-9d19-20a180063fd3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"For", " ", "transformation", " ", "that", " ", 
   RowBox[{"doesn", "'"}], "t", " ", "work", " ", "compare", " ", "with", " ",
    "next", " ", "paper"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.956073409314575*^9, 
  3.956073416902318*^9}},ExpressionUUID->"1292124f-1e21-49ee-a04d-\
a23efb3faf51"],

Cell[CellGroupData[{

Cell["Hyperlink To Documentation", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.820944675605734*^9, 3.8209446931410646`*^9}, 
   3.955727902284699*^9},ExpressionUUID->"71c2b6d1-a128-4719-9e57-\
3a5008d47bb6"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<GeneralRelativityTensors Documentation and Download\>\"", ",", 
   "\[IndentingNewLine]", 
   "\"\<https://github.com/BlackHolePerturbationToolkit\>\""}], 
  "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.820944619768764*^9, 3.820944681268063*^9}, 
   3.9557279022849693`*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"177d740a-8648-40f9-9f10-0e36912718dc"],

Cell[BoxData[
 TemplateBox[{
  "\"GeneralRelativityTensors Documentation and Download\"", 
   "https://github.com/BlackHolePerturbationToolkit"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.820944653562152*^9, 3.820944681268403*^9}, 
   3.821729905862431*^9, 3.821732641380642*^9, 3.8218069931429567`*^9, 
   3.821811425912986*^9, 3.822042652654992*^9, {3.822048793766124*^9, 
   3.8220488009116488`*^9}, 3.82250502887521*^9, 3.822505578829629*^9, 
   3.822565490613895*^9, 3.8225662097813597`*^9, 3.822606717894772*^9, 
   3.822739433713368*^9, 3.822822210464344*^9, 3.8233594284652433`*^9, 
   3.8233607803938913`*^9, 3.823360880234103*^9, 3.823361224481102*^9, 
   3.82336209870968*^9, 3.823364030542309*^9, 3.823597528606563*^9, 
   3.823618495251218*^9, 3.82368341365138*^9, 3.82368384184562*^9, 
   3.823684775269041*^9, 3.823688794270237*^9, 3.82369077711421*^9, 
   3.823704572306265*^9, 3.8239670360944*^9, 3.8239675178827963`*^9, 
   3.823970038559888*^9, 3.824025681964837*^9, 3.824032150329472*^9, 
   3.824050435315671*^9, 3.824050999906499*^9, 3.824051492117627*^9, 
   3.824054172450189*^9, 3.824054375215625*^9, 3.824111434931583*^9, 
   3.824117930025662*^9, 3.8241945834794397`*^9, 3.8242097150616713`*^9, 
   3.82421332410147*^9, 3.82429798682445*^9, 3.8242994580237417`*^9, 
   3.8243006859479227`*^9, 3.8243007605452642`*^9, 3.82546102301834*^9, 
   3.827943943286234*^9, 3.955727902285179*^9, 3.956071035711217*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"03ad33eb-aa99-456f-92ef-03006327abb1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "To", " ", "install", " ", "all", " ", "packages", " ", "uncomment", " ", 
    "following", " ", "block"}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PacletSiteRegister", "[", 
      RowBox[{
      "\"\<https://pacletserver.bhptoolkit.org\>\"", ",", 
       "\"\<Black Hole Perturbation Toolkit Paclet Server\>\""}], "]"}], 
     "\[IndentingNewLine]", 
     RowBox[{
     "PacletSiteUpdate", "[", "\"\<https://pacletserver.bhptoolkit.org\>\"", 
      "]"}], "\[IndentingNewLine]", 
     RowBox[{"PacletFindRemote", "[", 
      RowBox[{"\"\<*\>\"", ",", 
       RowBox[{"<|", 
        RowBox[{
        "\"\<Location\>\"", "->", 
         "\"\<https://pacletserver.bhptoolkit.org\>\""}], "|>"}]}], "]"}], 
     "\[IndentingNewLine]", 
     RowBox[{
     "PacletInstall", "[", "\"\<GeneralRelativityTensors\>\"", "]"}]}], ";", 
    "\n", 
    RowBox[{"PacletInstall", "[", "\"\<KerrGeodesics\>\"", "]"}], ";", "\n", 
    RowBox[{"PacletInstall", "[", "\"\<PostNewtonianSelfForce\>\"", "]"}], 
    ";", "\n", 
    RowBox[{"PacletInstall", "[", "\"\<ReggeWheeler\>\"", "]"}], ";", "\n", 
    RowBox[{
    "PacletInstall", "[", "\"\<SpinWeightedSpheroidalHarmonics\>\"", "]"}], 
    ";", "\n", 
    RowBox[{"PacletInstall", "[", "\"\<Teukolsky\>\"", "]"}], ";", "\n", 
    RowBox[{"PacletInstall", "[", "\"\<PerturbationEquations\>\"", "]"}], 
    ";"}], "\[IndentingNewLine]", "*)"}], " "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.955716583144101*^9, 3.955716670777807*^9}, {
   3.955716719820836*^9, 3.9557167235534897`*^9}, 3.955719170113936*^9, 
   3.955727902285331*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"53df7af8-2ba1-4284-8d1b-28ec2d112d9f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Hyperlink  To Article Series and Other References", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.820937794883616*^9, {3.820938266275806*^9, 3.82093829464357*^9}, 
   3.820943883376583*^9, {3.8210324492405148`*^9, 3.821032453951701*^9}, {
   3.8217297279218817`*^9, 3.8217297313782063`*^9}, {3.822593613363134*^9, 
   3.822593616181035*^9}, {3.822736144359599*^9, 3.8227361450547543`*^9}, {
   3.823359417697976*^9, 3.823359420672374*^9}, {3.825541581630826*^9, 
   3.825541589790456*^9}, 
   3.8280061655585737`*^9},ExpressionUUID->"80d70a4f-b9f1-4374-b487-\
da5e2727238c"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gravitational Waves in General Relativity I : Cylindrical Waves by L. \
Marder\>\"", ",", "\[IndentingNewLine]", 
   "\"\<https://www.jstor.org/stable/pdf/100266.pdf?casa_token=\
TrNPGDbJWhEAAAAA:nHeMW7zJ_0_07X0h11FLWJGitgk21sXIJ0ms5rt9T6I7YP04Hxm5K6_\
DGydbW-uCDzXCIbV6iqe69QkuDgDCxonOf4hKoSU1TBMr0-OOnLLqt1CVyLmw\>\""}], 
  "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8218867746254797`*^9, 3.821886810805148*^9}, 
   3.823176507207197*^9, {3.823472730005904*^9, 3.823472744739744*^9}, {
   3.823597507106205*^9, 3.823597507709626*^9}, {3.824218491076791*^9, 
   3.824218504482604*^9}, {3.825540567837326*^9, 3.825540582234589*^9}, 
   3.828006165558715*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"244d5d54-4f80-4132-a261-169cdef558a1"],

Cell[BoxData[
 TemplateBox[{
  "\"Gravitational Waves in General Relativity I : Cylindrical Waves by L. \
Marder\"", 
   "https://www.jstor.org/stable/pdf/100266.pdf?casa_token=TrNPGDbJWhEAAAAA:\
nHeMW7zJ_0_07X0h11FLWJGitgk21sXIJ0ms5rt9T6I7YP04Hxm5K6_DGydbW-\
uCDzXCIbV6iqe69QkuDgDCxonOf4hKoSU1TBMr0-OOnLLqt1CVyLmw"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.821886813557355*^9, 3.8231765072073307`*^9, 3.823359428608782*^9, 
   3.8233607804338617`*^9, 3.823360880363216*^9, 3.823361224626254*^9, 
   3.823362098931829*^9, 3.823364030688095*^9, 3.823472745219315*^9, {
   3.8235975109202147`*^9, 3.823597528650549*^9}, 3.823618495400096*^9, 
   3.823683413880138*^9, 3.823683841884781*^9, 3.823684775280538*^9, 
   3.823688794413259*^9, 3.8236907771492443`*^9, 3.823704572455369*^9, 
   3.8239670361077127`*^9, 3.8239675178933*^9, 3.823970038708452*^9, 
   3.824025682120349*^9, 3.824032150367559*^9, 3.824050435367694*^9, 
   3.824050999946439*^9, 3.8240514922362757`*^9, 3.8240541725938663`*^9, 
   3.82405437525069*^9, 3.824111435079376*^9, 3.824117930144135*^9, 
   3.8241945835176497`*^9, 3.824209715204199*^9, 3.8242133242608747`*^9, 
   3.824218504809145*^9, 3.824297986947625*^9, 3.8242994581502113`*^9, 
   3.824300686126027*^9, 3.82430076064056*^9, 3.825374007480864*^9, 
   3.825374265555047*^9, 3.825540587654729*^9, 3.827827027863346*^9, 
   3.827842378149345*^9, 3.828006165558824*^9, 3.956071035762939*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"6bdac6f6-b1c9-4049-99e8-74ada0cfb4db"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gravitational Waves in General Relativity. II. The Reflexion of \
Cylindrical Waves\>\"", ",", "\[IndentingNewLine]", 
   "\"\<https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1958.0111\>\"\
"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.82554062706092*^9, 3.8255406491978817`*^9}, 
   3.825541578422616*^9, 3.828006165558926*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"1d2a64f8-8a51-4462-8147-758db00bffd8"],

Cell[BoxData[
 TemplateBox[{
  "\"Gravitational Waves in General Relativity. II. The Reflexion of \
Cylindrical Waves\"", 
   "https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1958.0111"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.825540651265662*^9, 3.8255415784230347`*^9, 
  3.827827027900567*^9, 3.8278423781660423`*^9, 3.82800616555902*^9, 
  3.956071035791191*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"08148197-9370-4a41-87ae-aa6b0c9ad6b3"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gravitational Waves in General Relativity. III. Exact Plane Waves\>\"",
    ",", "\[IndentingNewLine]", 
   "\"\<http://newt.phys.unsw.edu.au/~jkw/phys3550/GWs/Gravitational_waves_in_\
general_relativity_exact_plane_waves.pdf\>\""}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.82554069320828*^9, 3.825540717254922*^9}, 
   3.82554157842317*^9, 3.828006165559114*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"2b22d001-4936-40c6-bac5-46dd585ed301"],

Cell[BoxData[
 TemplateBox[{
  "\"Gravitational Waves in General Relativity. III. Exact Plane Waves\"", 
   "http://newt.phys.unsw.edu.au/~jkw/phys3550/GWs/Gravitational_waves_in_\
general_relativity_exact_plane_waves.pdf"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8255407202328453`*^9, 3.8255415784233847`*^9, 
  3.827827027916807*^9, 3.827842378175069*^9, 3.828006165559206*^9, 
  3.956071035806135*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"58093fbd-dcae-4b47-95aa-0f99c997e37a"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gravitational waves in general relativity. IV. The gravitational field \
of a fast-moving particle\>\"", ",", "\[IndentingNewLine]", 
   "\"\<https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1959.0139\>\"\
"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.825540750864812*^9, 3.8255407724224977`*^9}, 
   3.825541578423504*^9, 3.828006165559279*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"7eb76c33-588f-4c47-bd25-b7a6f3245907"],

Cell[BoxData[
 TemplateBox[{
  "\"Gravitational waves in general relativity. IV. The gravitational field \
of a fast-moving particle\"", 
   "https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1959.0139"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.825540775367878*^9, 3.825541578423728*^9, 
  3.8278270279518433`*^9, 3.827842378191126*^9, 3.828006165559353*^9, 
  3.9560710358341713`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"d1e24cef-777c-4724-81cc-9efa6505bdd1"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gravitational Waves in General Relativity V. An Exact Spherical Wave\>\
\"", ",", "\[IndentingNewLine]", 
   "\"\<http://newt.phys.unsw.edu.au/~jkw/phys3550/GWs/Gravitational_waves_in_\
general_relativity_exact_plane_waves.pdf\>\""}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8255408143765717`*^9, 3.825540856358446*^9}, 
   3.825541578423868*^9, 3.828006165559424*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"4c3de8df-465a-45c4-9826-972af9cf6767"],

Cell[BoxData[
 TemplateBox[{
  "\"Gravitational Waves in General Relativity V. An Exact Spherical Wave\"", 
   "http://newt.phys.unsw.edu.au/~jkw/phys3550/GWs/Gravitational_waves_in_\
general_relativity_exact_plane_waves.pdf"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8255408568205214`*^9, 3.825541578424076*^9, 
  3.827827027969742*^9, 3.827842378201785*^9, 3.828006165559499*^9, 
  3.956071035848238*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"769ac62b-a7c3-4eac-b404-014a1d0b3218"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gravitational waves in general relativity. VI. The outgoing radiation \
condition\>\"", ",", "\[IndentingNewLine]", 
   "\"\<https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1961.0202\>\"\
"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8255408905695457`*^9, 3.825540911766217*^9}, 
   3.825541578424193*^9, 3.8280061655595713`*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"444207c8-d3d0-4ebd-92af-47259d96bf27"],

Cell[BoxData[
 TemplateBox[{
  "\"Gravitational waves in general relativity. VI. The outgoing radiation \
condition\"", 
   "https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1961.0202"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8255409122121153`*^9, 3.825541578424399*^9, 
  3.827827028009102*^9, 3.827842378216729*^9, 3.828006165559647*^9, 
  3.956071035876102*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"741b621f-4f08-4cd0-9d71-2a8f0899ee5d"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gravitational waves in general relativity, VII. Waves from \
axi-symmetric isolated system\>\"", ",", "\[IndentingNewLine]", 
   "\"\<https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1962.0161\>\"\
"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8255409438245907`*^9, 3.8255409648377953`*^9}, 
   3.82554157842451*^9, 3.828006165559719*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"122725d0-6cb1-4a20-b262-837076b9296a"],

Cell[BoxData[
 TemplateBox[{
  "\"Gravitational waves in general relativity, VII. Waves from axi-symmetric \
isolated system\"", 
   "https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1962.0161"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.825540965889183*^9, 3.825541578424714*^9, 
  3.827827028025394*^9, 3.827842378225857*^9, 3.828006165559794*^9, 
  3.956071035890461*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"60c7f559-a861-44f9-9f4c-bfeea09c94af"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gravitational Waves in General Relativity. VIII. Waves in \
Asymptotically Flat Space- Time\>\"", ",", "\[IndentingNewLine]", 
   "\"\<https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1962.0206\>\"\
"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8255409698877487`*^9, 3.825541006902647*^9}, 
   3.8255415784248323`*^9, 3.828006165559868*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"54deca47-2efb-406c-b45b-5104a486572b"],

Cell[BoxData[
 TemplateBox[{
  "\"Gravitational Waves in General Relativity. VIII. Waves in Asymptotically \
Flat Space- Time\"", 
   "https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1962.0206"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.825541007489829*^9, 3.825541578425042*^9, 
  3.827827028063736*^9, 3.827842378242198*^9, 3.828006165559944*^9, 
  3.956071035917842*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"26d266f1-9ada-4015-954a-90d340723082"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gravitational Waves in General Relativity. IX. Conserved \
Quantities\>\"", ",", "\[IndentingNewLine]", 
   "\"\<https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1966.0197\>\"\
"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.825541034648574*^9, 3.825541058022374*^9}, 
   3.825541578425152*^9, 3.828006165560019*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"0ae58561-f66a-423e-b9bb-4590799861e2"],

Cell[BoxData[
 TemplateBox[{
  "\"Gravitational Waves in General Relativity. IX. Conserved Quantities\"", 
   "https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1966.0197"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.825541058667922*^9, 3.825541578425355*^9, 
  3.827827028081127*^9, 3.827842378253251*^9, 3.828006165560095*^9, 
  3.9560710359319277`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"86b108c3-f979-444f-aacc-6483380815d5"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gravitational Waves in General Relativity X. Asymptotic Expansions for \
the Einstein- Maxwell Field\>\"", ",", "\[IndentingNewLine]", 
   "\"\<https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1969.0072\>\"\
"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8255410772409143`*^9, 3.825541102150763*^9}, 
   3.825541578425478*^9, 3.828006165560169*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"faa13332-c7c8-432b-9635-d1bdb02a7ab2"],

Cell[BoxData[
 TemplateBox[{
  "\"Gravitational Waves in General Relativity X. Asymptotic Expansions for \
the Einstein- Maxwell Field\"", 
   "https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1969.0072"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8255411036012993`*^9, 3.825541578425684*^9, 
  3.827827028118291*^9, 3.827842378268004*^9, 3.828006165560245*^9, 
  3.956071035959715*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"4861aa07-25ea-43cc-9cd4-ed9721a323cc"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gravitational Waves in General Relativity XI. Cylindrical-Spherical \
Waves\>\"", ",", "\[IndentingNewLine]", 
   "\"\<https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1969.0181\>\"\
"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.825541129401309*^9, 3.825541155342548*^9}, 
   3.8255415784257927`*^9, 3.8280061655603333`*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"a9f9b439-29e5-4163-8d02-0a788137075b"],

Cell[BoxData[
 TemplateBox[{
  "\"Gravitational Waves in General Relativity XI. Cylindrical-Spherical \
Waves\"", "https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1969.0181"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.825541156169825*^9, 3.825541578426003*^9, 
  3.8278270281345387`*^9, 3.827842378276972*^9, 3.828006165560419*^9, 
  3.956071035974681*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"0936fce1-8f7c-48ed-9ee2-73ec231920f6"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gravitational waves in general relativity. XII. Correspondence between \
toroidal and cylindrical waves\>\"", ",", "\[IndentingNewLine]", 
   "\"\<https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1972.0034\>\"\
"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8255411598566*^9, 3.8255412091260767`*^9}, 
   3.825541578426115*^9, 3.828006165560491*^9},
 CellLabel->"In[17]:=",ExpressionUUID->"466bb97c-e94c-44f6-85b6-c3ea69618b1d"],

Cell[BoxData[
 TemplateBox[{
  "\"Gravitational waves in general relativity. XII. Correspondence between \
toroidal and cylindrical waves\"", 
   "https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1972.0034"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.825541209583974*^9, 3.825541578426325*^9, 
  3.827827028802347*^9, 3.827842378292616*^9, 3.828006165560568*^9, 
  3.956071036002269*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"4b8970c5-19e5-413e-b10a-ee71058977fa"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gravitational waves in general relativity - XIII. Caustic property of \
plane waves\>\"", ",", "\[IndentingNewLine]", 
   "\"\<https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1989.0016\>\"\
"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.825541244929132*^9, 3.825541266141914*^9}, 
   3.825541578426436*^9, 3.8280061655606413`*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"7871f32c-57c4-4f22-8dae-14e3b1432f3a"],

Cell[BoxData[
 TemplateBox[{
  "\"Gravitational waves in general relativity - XIII. Caustic property of \
plane waves\"", 
   "https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1989.0016"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.825541266538377*^9, 3.8255415784268427`*^9, 
  3.8278270289216433`*^9, 3.827842378303368*^9, 3.828006165560718*^9, 
  3.9560710360151653`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"6cc3b414-7702-480a-bedf-1e6d298fc342"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gravitational Waves in General Relativity XIV. Bondi Expansions and \
the `Polyhomogeneity' of I\>\"", ",", "\[IndentingNewLine]", 
   "\"\<https://arxiv.org/abs/gr-qc/9305021\>\""}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.825541318073634*^9, 3.825541340774472*^9}, 
   3.825541578426999*^9, 3.828006165560791*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"6c4e956d-545c-47a8-a455-8c68deb7d344"],

Cell[BoxData[
 TemplateBox[{
  "\"Gravitational Waves in General Relativity XIV. Bondi Expansions and the \
`Polyhomogeneity' of I\"", "https://arxiv.org/abs/gr-qc/9305021"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.825541341115554*^9, 3.825541578427224*^9, 
  3.827827028957911*^9, 3.827842378318151*^9, 3.828006165560883*^9, 
  3.956071036043939*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"e3e10c0f-253e-4bd3-84e6-b53e76f04752"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gravitational Waves in General Relativity XV. The Loss-Free Case\>\"", 
   ",", "\[IndentingNewLine]", 
   "\"\<https://royalsocietypublishing.org/doi/abs/10.1098/rspa.2000.0630\>\"\
"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.825541367432994*^9, 3.8255413932545757`*^9}, 
   3.825541578427346*^9, 3.828006165560957*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"93f75265-ade5-46ce-a794-0e33812ae485"],

Cell[BoxData[
 TemplateBox[{
  "\"Gravitational Waves in General Relativity XV. The Loss-Free Case\"", 
   "https://royalsocietypublishing.org/doi/abs/10.1098/rspa.2000.0630"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.825541394393671*^9, 3.825541578427586*^9, 
  3.827827028973041*^9, 3.827842378327112*^9, 3.828006165561038*^9, 
  3.956071036059376*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"8b45b178-b87e-44e6-b642-7332aee91d0d"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Gravitational Waves in General Relativity XVI. Standing Waves\>\"", 
   ",", "\[IndentingNewLine]", 
   "\"\<https://royalsocietypublishing.org/doi/abs/10.1098/rspa.2003.1176\>\"\
"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8255414122570143`*^9, 3.8255414391104803`*^9}, 
   3.8255415784277143`*^9, 3.8280061655611143`*^9},
 CellLabel->"In[21]:=",ExpressionUUID->"28c3d8d2-2d3c-4b89-98c5-736ad78b5cb3"],

Cell[BoxData[
 TemplateBox[{
  "\"Gravitational Waves in General Relativity XVI. Standing Waves\"", 
   "https://royalsocietypublishing.org/doi/abs/10.1098/rspa.2003.1176"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.825541439624946*^9, 3.8255415784279203`*^9, 
  3.827827029011183*^9, 3.8278423783436604`*^9, 3.8280061655611973`*^9, 
  3.956071036086005*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"219d995d-60e1-4a36-a390-c6d7b4f57a3d"],

Cell["Utilities and Package Load", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.820937646765551*^9, 3.8209376725449123`*^9}, 
   3.82536927604027*^9},ExpressionUUID->"a39fd035-af76-487a-9aec-\
2350964d5a56"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "Utilities`CleanSlate`"}], "\[IndentingNewLine]", 
 RowBox[{"CleanSlate", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearInOut", "[", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pdConv", "[", "f_", "]"}], ":=", 
  RowBox[{"TraditionalForm", "[", 
   RowBox[{"f", "/.", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Derivative", "[", "inds__", "]"}], "[", "g_", "]"}], "[", 
      "vars__", "]"}], "\[RuleDelayed]", 
     RowBox[{"Apply", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Defer", "[", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"g", "[", "vars", "]"}], ",", "##"}], "]"}], "]"}], "&"}], 
       ",", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "vars", "}"}], ",", 
           RowBox[{"{", "inds", "}"}]}], "}"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"var_", ",", "0"}], "}"}], "\[RuleDelayed]", 
           RowBox[{"Sequence", "[", "]"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"var_", ",", "1"}], "}"}], "\[RuleDelayed]", 
           RowBox[{"{", "var", "}"}]}]}], "}"}]}]}], "]"}]}]}], 
   "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.8209376549030037`*^9, {3.821032517164062*^9, 3.821032518258361*^9}, 
   3.825369276040393*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"a67c28b3-e4fa-467d-8477-02d241f26806"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  (CleanSlate) Contexts purged: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"Global`\"\>", "}"}]}],
  SequenceForm["  (CleanSlate) Contexts purged: ", {"Global`"}],
  Editable->False]], "Print",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.820932754769992*^9, 3.820933427630714*^9, 3.820937654903143*^9, 
   3.821729906190301*^9, 3.821732641685704*^9, 3.8218069933778133`*^9, 
   3.82181142618342*^9, 3.8220426528487463`*^9, {3.822048793940605*^9, 
   3.822048801089246*^9}, 3.822505029191699*^9, 3.822505579049889*^9, 
   3.822565490838564*^9, 3.822566210008327*^9, 3.822606718180009*^9, 
   3.8226371008270607`*^9, 3.822739433887854*^9, 3.822761800089258*^9, 
   3.8228172997642097`*^9, 3.822822210725956*^9, 3.822988687208267*^9, 
   3.823359428732101*^9, 3.823360780582996*^9, 3.823360880477087*^9, 
   3.823361224742215*^9, 3.8233620990886593`*^9, 3.8233640308219624`*^9, 
   3.8235320061137466`*^9, 3.823597528753026*^9, 3.823618495521882*^9, 
   3.823683414021819*^9, 3.823683842015107*^9, 3.823684775412067*^9, 
   3.823688794547976*^9, 3.823690777270031*^9, 3.8237045725706463`*^9, 
   3.823967036254635*^9, 3.823967518049459*^9, 3.823970038788274*^9, 
   3.824025682258999*^9, 3.8240321504830923`*^9, 3.8240504354973917`*^9, 
   3.824051000133101*^9, 3.824051492357512*^9, 3.824054172748905*^9, 
   3.824054375453238*^9, 3.824111435226822*^9, 3.824117930311021*^9, 
   3.8241945836859083`*^9, 3.824209715330535*^9, 3.824213324408888*^9, 
   3.824297987129281*^9, 3.824299458342237*^9, 3.824300686301352*^9, 
   3.824300760843173*^9, 3.8253692760404663`*^9, 3.825461023276972*^9, 
   3.8279439436082497`*^9, 3.956071036316502*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"22311b7b-1bc0-42a2-a360-489fd1b2897e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  (CleanSlate) Approximate kernel memory recovered: \"\>", 
   "\[InvisibleSpace]", "\<\"34 Kb\"\>"}],
  SequenceForm[
  "  (CleanSlate) Approximate kernel memory recovered: ", "34 Kb"],
  Editable->False]], "Print",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.820932754769992*^9, 3.820933427630714*^9, 3.820937654903143*^9, 
   3.821729906190301*^9, 3.821732641685704*^9, 3.8218069933778133`*^9, 
   3.82181142618342*^9, 3.8220426528487463`*^9, {3.822048793940605*^9, 
   3.822048801089246*^9}, 3.822505029191699*^9, 3.822505579049889*^9, 
   3.822565490838564*^9, 3.822566210008327*^9, 3.822606718180009*^9, 
   3.8226371008270607`*^9, 3.822739433887854*^9, 3.822761800089258*^9, 
   3.8228172997642097`*^9, 3.822822210725956*^9, 3.822988687208267*^9, 
   3.823359428732101*^9, 3.823360780582996*^9, 3.823360880477087*^9, 
   3.823361224742215*^9, 3.8233620990886593`*^9, 3.8233640308219624`*^9, 
   3.8235320061137466`*^9, 3.823597528753026*^9, 3.823618495521882*^9, 
   3.823683414021819*^9, 3.823683842015107*^9, 3.823684775412067*^9, 
   3.823688794547976*^9, 3.823690777270031*^9, 3.8237045725706463`*^9, 
   3.823967036254635*^9, 3.823967518049459*^9, 3.823970038788274*^9, 
   3.824025682258999*^9, 3.8240321504830923`*^9, 3.8240504354973917`*^9, 
   3.824051000133101*^9, 3.824051492357512*^9, 3.824054172748905*^9, 
   3.824054375453238*^9, 3.824111435226822*^9, 3.824117930311021*^9, 
   3.8241945836859083`*^9, 3.824209715330535*^9, 3.824213324408888*^9, 
   3.824297987129281*^9, 3.824299458342237*^9, 3.824300686301352*^9, 
   3.824300760843173*^9, 3.8253692760404663`*^9, 3.825461023276972*^9, 
   3.8279439436082497`*^9, 3.9560710363230553`*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"64de6c89-f9e4-4a34-90ec-578b86da9803"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Utilities`CleanSlate`\"\>", 
   ",", "\<\"DocumentationSearch`\"\>", ",", "\<\"ResourceLocator`\"\>", 
   ",", "\<\"HighlightingCompatibility`\"\>", 
   ",", "\<\"NaturalLanguageProcessingLoader`\"\>", ",", "\<\"System`\"\>", 
   ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.820932754773623*^9, 3.820933427635436*^9, 3.8209376549033947`*^9, 
   3.821729906193787*^9, 3.821732641691049*^9, 3.821806993386058*^9, 
   3.821811426187071*^9, 3.822042652852829*^9, {3.822048793944077*^9, 
   3.822048801092909*^9}, 3.822505029195156*^9, 3.8225055790570173`*^9, 
   3.8225654908422747`*^9, 3.8225662100125237`*^9, 3.8226067181902227`*^9, 
   3.822637100839163*^9, 3.8227394339100733`*^9, 3.822761800103311*^9, 
   3.822817299776285*^9, 3.822822210739685*^9, 3.822988687217742*^9, 
   3.823359428736412*^9, 3.823360780587545*^9, 3.8233608804810534`*^9, 
   3.823361224746982*^9, 3.823362099093968*^9, 3.823364030838743*^9, 
   3.8235320061191893`*^9, 3.823597528756508*^9, 3.8236184955254183`*^9, 
   3.823683414029439*^9, 3.823683842020509*^9, 3.823684775416593*^9, 
   3.823688794552709*^9, 3.823690777273932*^9, 3.8237045725743713`*^9, 
   3.823967036258197*^9, 3.823967518053287*^9, 3.8239700387921047`*^9, 
   3.824025682265245*^9, 3.824032150486408*^9, 3.8240504355005302`*^9, 
   3.824051000137991*^9, 3.824051492360982*^9, 3.82405417275224*^9, 
   3.82405437545785*^9, 3.8241114352302933`*^9, 3.824117930315586*^9, 
   3.8241945836899357`*^9, 3.8242097153340693`*^9, 3.8242133244138002`*^9, 
   3.824297987134589*^9, 3.824299458346477*^9, 3.824300686304398*^9, 
   3.8243007608477297`*^9, 3.825369276040627*^9, 3.825461023281296*^9, 
   3.827943943614663*^9, 3.956071036326111*^9},
 CellLabel->"Out[0]=",ExpressionUUID->"0ee01b00-84ca-4e0a-8ce8-ae22e99cc886"],

Cell[BoxData[
 RowBox[{"<<", "GeneralRelativityTensors`"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8209376549035053`*^9, 3.825369276040707*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"1cfc1cbc-082e-4984-9e16-aef2e7e27581"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<VariationalMethods`\>\"", "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.82282432548825*^9, 3.822824327819418*^9}, 
   3.8253692760407763`*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"b3b85a1d-9770-4862-ad35-b81cc74e9e4d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Custom Notation", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.8225114042235403`*^9, 3.822511435665856*^9}, 
   3.823176577809782*^9, 
   3.825369287523677*^9},ExpressionUUID->"32067aaa-f3bd-4d47-92cc-\
e407e444c96d"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "dtReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dtReplace", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Dt", "[", "r", "]"}], "\[Rule]", " ", "dr"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "t", "]"}], "\[Rule]", " ", "dt"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "u", "]"}], "\[Rule]", " ", "du"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "v", "]"}], "\[Rule]", " ", "dv"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "x", "]"}], "\[Rule]", " ", "dx"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "y", "]"}], " ", "\[Rule]", " ", "dy"}], " ", ",", 
     " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "z", "]"}], "\[Rule]", " ", "dz"}], " ", ",", " ", 
     "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Theta]", "]"}], " ", "\[Rule]", " ", 
      "d\[Theta]"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Phi]", "]"}], " ", "\[Rule]", " ", "d\[Phi]"}], 
     "  ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Eta]", "]"}], " ", "\[Rule]", " ", "d\[Eta]"}], 
     "  ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Chi]", "]"}], "\[Rule]", " ", "d\[Chi]"}], " ", 
     ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Rho]", "]"}], " ", "\[Rule]", " ", "d\[Rho]"}], 
     " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[CurlyRho]", "]"}], "\[Rule]", " ", 
      "d\[CurlyRho]"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[CurlyPhi]", "]"}], " ", "\[Rule]", " ", 
      "d\[CurlyPhi]"}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Xi]", "]"}], "\[Rule]", " ", "d\[Xi]"}], " ", ",",
      "  ", "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptT]", "]"}], " ", "\[Rule]", " ", 
      "d\[ScriptT]"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptV]", "]"}], "\[Rule]", " ", "d\[ScriptV]"}],
      " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptU]", "]"}], "\[Rule]", " ", "d\[ScriptU]"}],
      " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptX]", "]"}], "\[Rule]", " ", "d\[ScriptX]"}],
      " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptY]", "]"}], "\[Rule]", " ", "d\[ScriptY]"}],
      ",", "   ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptZ]", "]"}], " ", "\[Rule]", " ", 
      "d\[ScriptZ]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "R", "]"}], "\[Rule]", " ", "dR"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "T", "]"}], "\[Rule]", " ", "dT"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "X", "]"}], "\[Rule]", " ", "dX"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "Y", "]"}], "\[Rule]", " ", "dY"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "Z", "]"}], "\[Rule]", " ", "dZ"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "U", "]"}], "\[Rule]", " ", "dU"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "V", "]"}], "\[Rule]", " ", "dV"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptR]", "]"}], "\[Rule]", " ", "d\[ScriptR]"}],
      "  ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[CapitalPhi]", "]"}], "\[Rule]", " ", 
      "d\[CapitalPhi]"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Zeta]", "]"}], "\[Rule]", " ", "d\[Zeta]"}], " ", 
     ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Zeta]bar", "]"}], "\[Rule]", " ", 
      "d\[Zeta]bar"}]}], " ", "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"dtReplace", " ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.82317656063256*^9, 3.823176577809904*^9}, {
   3.823598236175474*^9, 3.823598253654046*^9}, {3.823598849383689*^9, 
   3.82359891091936*^9}, {3.8236913141384983`*^9, 3.823691322585009*^9}, {
   3.8237047861092253`*^9, 3.823704790612156*^9}, {3.824032529537923*^9, 
   3.8240325755969877`*^9}, {3.824111980853726*^9, 3.82411200435644*^9}, 
   3.825369287523849*^9, {3.8254642639057493`*^9, 3.8254642682568827`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"434e21e1-c12c-43ce-b5f8-2adc9da6ba36"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"Dt", "[", "r", "]"}], "\[Rule]", "dr"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "t", "]"}], "\[Rule]", "dt"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "u", "]"}], "\[Rule]", "du"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "v", "]"}], "\[Rule]", "dv"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "x", "]"}], "\[Rule]", "dx"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "y", "]"}], "\[Rule]", "dy"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "z", "]"}], "\[Rule]", "dz"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Theta]", "]"}], "\[Rule]", "d\[Theta]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Phi]", "]"}], "\[Rule]", "d\[Phi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Eta]", "]"}], "\[Rule]", "d\[Eta]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Chi]", "]"}], "\[Rule]", "d\[Chi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Rho]", "]"}], "\[Rule]", "d\[Rho]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[CurlyRho]", "]"}], "\[Rule]", "d\[CurlyRho]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[CurlyPhi]", "]"}], "\[Rule]", "d\[CurlyPhi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Xi]", "]"}], "\[Rule]", "d\[Xi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptT]", "]"}], "\[Rule]", "d\[ScriptT]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptV]", "]"}], "\[Rule]", "d\[ScriptV]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptU]", "]"}], "\[Rule]", "d\[ScriptU]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptX]", "]"}], "\[Rule]", "d\[ScriptX]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptY]", "]"}], "\[Rule]", "d\[ScriptY]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptZ]", "]"}], "\[Rule]", "d\[ScriptZ]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "R", "]"}], "\[Rule]", "dR"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "T", "]"}], "\[Rule]", "dT"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "X", "]"}], "\[Rule]", "dX"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "Y", "]"}], "\[Rule]", "dY"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "Z", "]"}], "\[Rule]", "dZ"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "U", "]"}], "\[Rule]", "dU"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "V", "]"}], "\[Rule]", "dV"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptR]", "]"}], "\[Rule]", "d\[ScriptR]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[CapitalPhi]", "]"}], "\[Rule]", 
       "d\[CapitalPhi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Zeta]", "]"}], "\[Rule]", "d\[Zeta]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Zeta]bar", "]"}], "\[Rule]", "d\[Zeta]bar"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{3.82403258232056*^9, 3.8240504355846977`*^9, 
  3.824051000170314*^9, 3.8240514924468307`*^9, 3.8240541728467197`*^9, 
  3.824054375493238*^9, 3.824111435338122*^9, 3.824112005137067*^9, 
  3.824117930406502*^9, 3.824194583721236*^9, 3.8242097154291267`*^9, 
  3.824213324509409*^9, 3.824297987264646*^9, 3.8242994584334517`*^9, 
  3.824300686394885*^9, 3.8243007608839197`*^9, 3.825369287523972*^9, 
  3.825461023326212*^9, 3.825464268916922*^9, 3.827943943730851*^9, 
  3.956071036404752*^9},
 CellLabel->
  "Out[6]//TableForm=",ExpressionUUID->"1bcf7aae-1e67-43e5-bd91-eff6d2225e32"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a", "/:", 
    RowBox[{"Dt", "[", "a", "]"}], "=", "0"}], "  ", ";"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"M", " ", "/:", " ", 
    RowBox[{"Dt", "[", "M", "]"}], " ", "=", " ", "0"}], " ", ";"}], 
  "  "}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.823598195430221*^9, 3.823598210501268*^9}, {
   3.823602495092556*^9, 3.823602530987715*^9}, {3.8236188964036007`*^9, 
   3.8236189207008657`*^9}, {3.8237047330364532`*^9, 3.823704739867001*^9}, {
   3.824112239153829*^9, 3.824112246801137*^9}, 3.8253692875240507`*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"5a0745f2-cb18-49e4-8b8c-b083fddb30bb"]
}, Closed]],

Cell[CellGroupData[{

Cell["Line Element and Metric Functions", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.820937548919169*^9, 3.8209375728447866`*^9}, 
   3.8209383129401073`*^9, 3.8220481344968433`*^9, {3.8225115057038183`*^9, 
   3.822511507783984*^9}, 
   3.822763734568725*^9},ExpressionUUID->"82d6e648-30e5-4355-8a17-\
3f1f83f2c309"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "lineToMetric", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lineToMetric", "[", 
    RowBox[{"lineelement_", " ", ",", " ", "differentials_"}], "]"}], ":=", 
   " ", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"i", "\[Equal]", "j"}], " ", ",", 
       RowBox[{"Coefficient", "[", 
        RowBox[{"lineelement", ",", " ", 
         RowBox[{
          RowBox[{"differentials", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", 
          RowBox[{"differentials", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}], "*", 
        RowBox[{"Coefficient", "[", 
         RowBox[{"lineelement", ",", " ", 
          RowBox[{
           RowBox[{"differentials", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", 
           RowBox[{"differentials", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}]}], "]"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "differentials", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "differentials", "]"}]}], "}"}]}], "]"}]}], 
  "  ", ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{3.821567412203915*^9, 3.821641945174967*^9, 
  3.821641981470141*^9, 3.8220481344970007`*^9, 3.822763734569355*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"d9ebaf10-237f-4130-a5fb-0d1daa112573"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "metricToLine", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metricToLine", "[", 
   RowBox[{"metric_", ",", " ", "differentials_"}], "]"}], ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"metric", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "j"}], "]"}], "]"}], " ", 
     RowBox[{"differentials", "[", 
      RowBox[{"[", "i", "]"}], "]"}], " ", 
     RowBox[{"differentials", "[", 
      RowBox[{"[", "j", "]"}], "]"}]}], " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "differentials", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", 
      RowBox[{"Length", "[", "differentials", "]"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.822762557092309*^9, 3.8227626322008677`*^9}, 
   3.8227637345698223`*^9, 3.822988709740047*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"42e20412-9be8-4388-8cfe-943ddfe130e7"]
}, Closed]],

Cell[CellGroupData[{

Cell["Line Element and Metic 1:  Einstein Rosen Metric (1937)", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.82537091784543*^9, 3.825370932349051*^9}, {
  3.9560707864764433`*^9, 
  3.956070794501626*^9}},ExpressionUUID->"566df22b-755e-43ec-b11d-\
274a61a10680"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq1", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"\[Gamma]", "-", "\[Psi]"}], ")"}]}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["dT", "2"], "-", " ", 
      SuperscriptBox["dR", "2"]}], ")"}]}], " ", "-", " ", 
   RowBox[{
    SuperscriptBox["R", "2"], " ", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[Psi]"}], "]"}], " ", 
    SuperscriptBox["d\[Phi]", "2"]}], "-", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"2", "\[Psi]"}], "]"}], " ", 
    SuperscriptBox["dZ", "2"]}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.821528889680224*^9, 3.8215289723633833`*^9}, {
   3.821550510999731*^9, 3.821550513797514*^9}, 3.8253709234231358`*^9, {
   3.825461140916339*^9, 3.825461141707259*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"91dbd946-618f-4a9b-9948-0934d8670091"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["dR", "2"]}], "+", 
     SuperscriptBox["dT", "2"]}], ")"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"\[Gamma]", "-", "\[Psi]"}], ")"}]}]]}], "-", 
  RowBox[{
   SuperscriptBox["dZ", "2"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", "\[Psi]"}]]}], "-", 
  RowBox[{
   SuperscriptBox["d\[Phi]", "2"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", "\[Psi]"}]], " ", 
   SuperscriptBox["R", "2"]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{3.8215505338075533`*^9, 3.825370923423236*^9, 
  3.8254610233659067`*^9, 3.825461142485173*^9, 3.8279439438017073`*^9, 
  3.956071036451742*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"6cc6cc64-5100-4c3d-a490-215d1b53d35a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lineToMetric", "[", " ", 
   RowBox[{"eq1", " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"dT", ",", "dR", ",", "d\[Phi]", ",", "dZ"}], "}"}]}], "]"}], 
  " ", "//", " ", "MatrixForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.825461119791029*^9, 3.8254611511071367`*^9}, 
   3.8254613458267403`*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"27a9e42e-e6b3-4456-9a9c-0892ee1a5191"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"\[Gamma]", "-", "\[Psi]"}], ")"}]}]], "0", "0", "0"},
     {"0", 
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]", "-", "\[Psi]"}], ")"}]}]]}], "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Psi]"}]]}], " ", 
       SuperscriptBox["R", "2"]}], "0"},
     {"0", "0", "0", 
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "\[Psi]"}]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.8254611469822817`*^9, 3.825461151359169*^9}, 
   3.825461345827297*^9, 3.8279439438171673`*^9, 3.956071036465077*^9},
 CellLabel->
  "Out[15]//MatrixForm=",ExpressionUUID->"908e5ee6-158d-4301-b1d1-\
703c9107e3df"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq1a", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq1a", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Psi]", "\[Rule]", " ", 
      RowBox[{"\[Psi]", "[", 
       RowBox[{"R", ",", "T"}], "]"}]}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]", "\[Rule]", " ", 
      RowBox[{"\[Gamma]", "[", 
       RowBox[{"R", ",", "T"}], "]"}]}]}], "\[IndentingNewLine]", "}"}]}], 
  " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq1a", " ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.821528985540362*^9, 3.8215290254353952`*^9}, {
   3.821550521285809*^9, 3.8215505283656797`*^9}, 3.825370923423324*^9, {
   3.825461399052953*^9, 3.825461399515839*^9}, {3.82546469115804*^9, 
   3.8254647049004507`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"da4a47a7-da52-4c89-bc33-25ed731be190"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"\[Psi]", "\[Rule]", 
       RowBox[{"\[Psi]", "[", 
        RowBox[{"R", ",", "T"}], "]"}]}]},
     {
      RowBox[{"\[Gamma]", "\[Rule]", 
       RowBox[{"\[Gamma]", "[", 
        RowBox[{"R", ",", "T"}], "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{3.8215505370859833`*^9, 3.8253709234234056`*^9, 
  3.825461023384284*^9, 3.825461399969735*^9, 3.827943943856512*^9, 
  3.956071036491921*^9},
 CellLabel->
  "Out[18]//TableForm=",ExpressionUUID->"ad9830e4-f173-43b3-aa4c-\
ccca9044d5f8"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric1", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lineToMetric", "[", " ", 
     RowBox[{"eq1", " ", ",", " ", 
      RowBox[{"{", 
       RowBox[{"dT", ",", "dR", ",", "d\[Phi]", ",", "dZ"}], "}"}]}], "]"}], 
    " ", "/.", " ", "eq1a"}]}], "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"metric1", " ", "//", " ", "MatrixForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.825461160507687*^9, 3.8254611769788113`*^9}, 
   3.825461345827512*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"b332d15e-d557-4a6d-826a-87bef117d5ba"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Gamma]", "[", 
           RowBox[{"R", ",", "T"}], "]"}], "-", 
          RowBox[{"\[Psi]", "[", 
           RowBox[{"R", ",", "T"}], "]"}]}], ")"}]}]], "0", "0", "0"},
     {"0", 
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Gamma]", "[", 
            RowBox[{"R", ",", "T"}], "]"}], "-", 
           RowBox[{"\[Psi]", "[", 
            RowBox[{"R", ",", "T"}], "]"}]}], ")"}]}]]}], "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"\[Psi]", "[", 
           RowBox[{"R", ",", "T"}], "]"}]}]]}], " ", 
       SuperscriptBox["R", "2"]}], "0"},
     {"0", "0", "0", 
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"\[Psi]", "[", 
          RowBox[{"R", ",", "T"}], "]"}]}]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.825461162310535*^9, 3.825461177371427*^9}, 
   3.825461345827956*^9, 3.825461401717615*^9, 3.827943943874065*^9, 
   3.956071036509562*^9},
 CellLabel->
  "Out[21]//MatrixForm=",ExpressionUUID->"9b72f1af-dc1f-47a8-890a-\
1876ffa3ef9b"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "inverse1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inverse1", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Inverse", "[", "metric1", "]"}], " ", "//", " ", "Expand"}], 
    " ", "//", " ", "Simplify"}]}], "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"inverse1", " ", "//", " ", "MatrixForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.825461268340797*^9, 3.825461290763137*^9}, 
   3.8254613458281116`*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"60ab4b93-743c-467f-9d3f-6426e61e1b7c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"\[Gamma]", "[", 
          RowBox[{"R", ",", "T"}], "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"\[Psi]", "[", 
          RowBox[{"R", ",", "T"}], "]"}]}]}]], "0", "0", "0"},
     {"0", 
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"\[Gamma]", "[", 
           RowBox[{"R", ",", "T"}], "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"\[Psi]", "[", 
           RowBox[{"R", ",", "T"}], "]"}]}]}]]}], "0", "0"},
     {"0", "0", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"\[Psi]", "[", 
           RowBox[{"R", ",", "T"}], "]"}]}]], 
        SuperscriptBox["R", "2"]]}], "0"},
     {"0", "0", "0", 
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"\[Psi]", "[", 
          RowBox[{"R", ",", "T"}], "]"}]}]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{3.825461291132869*^9, 3.825461345828547*^9, 
  3.8254614037350817`*^9, 3.827943943962126*^9, 3.956071036550294*^9},
 CellLabel->
  "Out[24]//MatrixForm=",ExpressionUUID->"152169da-abb3-48a7-bc04-\
5541465ad683"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"metric1", " ", ".", " ", "inverse1"}], " ", "//", " ", 
    "Expand"}], " ", "//", " ", "Simplify"}], " ", "//", " ", 
  "MatrixForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.825461300299472*^9, 3.825461345828676*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"bdc6de77-62dc-445a-a6f6-639c3d1d867f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0"},
     {"0", "1", "0", "0"},
     {"0", "0", "1", "0"},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.825461316500252*^9, 3.825461345829109*^9}, 
   3.825461407383836*^9, 3.827943943978322*^9, 3.956071036567278*^9},
 CellLabel->
  "Out[25]//MatrixForm=",ExpressionUUID->"87a44d79-7a72-4dfe-9af6-\
6f638c1f6cf5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"inverse1", " ", ".", " ", "metric1"}], "  ", "//", " ", 
    "Expand"}], " ", "//", " ", "Simplify"}], " ", "//", " ", 
  "MatrixForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.825461326601246*^9, 3.825461345829241*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"e2019552-e56d-4d0e-9e0d-1682c78e966a"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0"},
     {"0", "1", "0", "0"},
     {"0", "0", "1", "0"},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.8254613306493177`*^9, 3.825461345829555*^9}, 
   3.825461408931019*^9, 3.827943944012888*^9, 3.956071036596542*^9},
 CellLabel->
  "Out[26]//MatrixForm=",ExpressionUUID->"5b941e1a-0a07-44de-9483-\
307359c66bdc"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Tensors Calculated For Metric 1:  Einstein Rosen Metric (1937)\
\>", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.82546134755589*^9, {3.825461880106778*^9, 3.8254619075382843`*^9}, {
   3.956070799151742*^9, 
   3.9560707998894567`*^9}},ExpressionUUID->"a1cd9c87-b348-4e88-9203-\
ce404066f7bb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "input", "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"input", "[", 
    RowBox[{
    "equationNumber_", ",", "equation_", ",", "metricName_", ",", 
     "displayName_", ",", "variables_", ",", "indices_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", "tensorList", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"tensorList", " ", "=", " ", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<g\>\"", "<>", "equationNumber"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<christoffel\>\"", "<>", "equationNumber"}], " ", ",", 
         " ", "\[IndentingNewLine]", 
         RowBox[{"\"\<riemann\>\"", "<>", "equationNumber"}], "  ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<ricci\>\"", "<>", "equationNumber"}], " ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<ricciscalar\>\"", "<>", "equationNumber"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<kretschmannscalar\>\"", "<>", "equationNumber"}], "  ", 
         ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<einstein\>\"", "<>", "equationNumber"}], "  ", ",", " ",
          "\[IndentingNewLine]", 
         RowBox[{"\"\<weyl\>\"", "<>", "equationNumber"}], "  ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<cotton\>\"", "<>", "equationNumber"}]}], "  ", 
        "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"ToMetric", "[", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{"metricName", ",", " ", "displayName"}], " ", "}"}], " ", 
         ",", " ", "variables", ",", " ", "equation", ",", " ", "indices"}], 
        " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "  ", "=", " ", "\[IndentingNewLine]", 
       RowBox[{"ChristoffelSymbol", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], "]"}]}], " ", ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "3", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"RiemannTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWithNested", "\[Rule]", " ", "Simplify"}]}], " ", 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "4", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"RicciTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}]}], " ",
       ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "5", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"RicciScalar", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}]}], " ",
       ";", "\[IndentingNewLine]", " ", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "6", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"KretschmannScalar", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], "]"}]}], " ", ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "7", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"EinsteinTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], "]"}]}], " ", ";",
       "  ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "8", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"WeylTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}]}], " ",
       ";", "\[IndentingNewLine]", " ", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "9", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"CottonTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}]}], " ",
       ";"}]}], " ", "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820937492203251*^9, 3.821110229350912*^9, {3.824381686137444*^9, 
   3.824381701791286*^9}, {3.824382212611581*^9, 3.824382216339905*^9}, {
   3.8243823186862707`*^9, 3.824382322501081*^9}, {3.825461202181799*^9, 
   3.825461211011776*^9}, 3.825461896249504*^9},
 CellLabel->"In[27]:=",ExpressionUUID->"3926158a-274e-4b9e-b299-12cb7734e6f5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Last", " ", "timing", " ", "took", " ", "10.54", " ", "for", " ", "all", 
    " ", "tensors"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"input", "[", " ", 
    RowBox[{
    "\"\<metric1\>\"", ",", " ", "metric1", ",", " ", "\"\<Cylindrical\>\"", 
     ",", "\"\<\!\(\*SuperscriptBox[\(g\), \(cylindrical\)]\)\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"T", ",", "R", ",", "\[Phi]", ",", "Z"}], "}"}], ",", " ", 
     "\"\<Greek\>\""}], "]"}], " ", "//", " ", "Timing"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820937492203436*^9, 3.821110229350998*^9, {3.822307281934704*^9, 
   3.822307303605431*^9}, {3.8243818575378323`*^9, 3.82438186818433*^9}, {
   3.824513580589107*^9, 3.824513589908223*^9}, {3.825461223316697*^9, 
   3.825461262770912*^9}, {3.8254613704925823`*^9, 3.825461379275358*^9}, 
   3.825461896249675*^9, {3.9560712017457*^9, 
   3.956071204970771*^9}},ExpressionUUID->"ab98a04c-d49f-473d-9c35-\
1b8c005834f9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10.543541`", ",", "Null"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.8254612745082827`*^9, 3.825461428592732*^9, 
  3.825461896249813*^9, 3.82794395782463*^9, 3.956071047073215*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"5ba90693-ccc9-40c1-bccd-8190cb611725"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "1", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.82093459847665*^9, 3.820934601699522*^9}, 
   3.8209374922041063`*^9, 3.821110229351385*^9, 3.824373536864387*^9, 
   3.824381939541588*^9, 3.824751170474918*^9, 3.8254618962499523`*^9},
 CellLabel->"In[30]:=",ExpressionUUID->"931850c3-fd09-4e67-9eb8-d4999c3b8c58"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox[
   SuperscriptBox["g", "cylindrical"], "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.820934602303184*^9, 3.820937492204216*^9, 
  3.821110229351462*^9, 3.824373536864538*^9, 3.824381620924634*^9, 
  3.8243818501805983`*^9, 3.824381939541747*^9, 3.824511842173975*^9, 
  3.824514167840876*^9, 3.8247511704751453`*^9, 3.8254613672343473`*^9, 
  3.825461428652072*^9, 3.8254618962500553`*^9, 3.8279439579205647`*^9, 
  3.95607104723006*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"57d59d30-8089-428b-be77-33029fb53bc6"],

Cell[BoxData["\<\"Cylindrical\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.820934602303184*^9, 3.820937492204216*^9, 
  3.821110229351462*^9, 3.824373536864538*^9, 3.824381620924634*^9, 
  3.8243818501805983`*^9, 3.824381939541747*^9, 3.824511842173975*^9, 
  3.824514167840876*^9, 3.8247511704751453`*^9, 3.8254613672343473`*^9, 
  3.825461428652072*^9, 3.8254618962500553`*^9, 3.8279439579205647`*^9, 
  3.9560710472359447`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"96620102-7d2b-48c6-9c38-b8c3a3229ad7"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}], "-", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], ")"}]}]], "0", "0", "0"},
      {"0", 
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}], "-", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], ")"}]}]]}], "0", "0"},
      {"0", "0", 
       RowBox[{
        SuperscriptBox["R", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}]}], "0"},
      {"0", "0", "0", 
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}]]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.820934602303184*^9, 3.820937492204216*^9, 
  3.821110229351462*^9, 3.824373536864538*^9, 3.824381620924634*^9, 
  3.8243818501805983`*^9, 3.824381939541747*^9, 3.824511842173975*^9, 
  3.824514167840876*^9, 3.8247511704751453`*^9, 3.8254613672343473`*^9, 
  3.825461428652072*^9, 3.8254618962500553`*^9, 3.8279439579205647`*^9, 
  3.956071047240274*^9},
 CellLabel->
  "Out[32]//TraditionalForm=",ExpressionUUID->"9aa10304-5656-4be5-bbca-\
60df61024db9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "2", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.820934553796588*^9, 3.820934587380786*^9}, 
   3.8209374922046547`*^9, 3.821110229351994*^9, 3.824373536864839*^9, 
   3.824381939542098*^9, 3.8247511704755993`*^9, 3.8254618962503843`*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"31442022-9c1c-4542-8029-3399ae4297a4"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["\[CapitalGamma]", 
   RowBox[{"  ", "\[Beta]\[Gamma]"}], 
   RowBox[{"\[Alpha]", "    "}]],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820932775595148*^9, 3.8209334480804567`*^9, {3.8209345574198027`*^9, 
   3.820934588189248*^9}, 3.82093749220476*^9, 3.821110229352072*^9, 
   3.824373536864976*^9, 3.8243816209856853`*^9, 3.824381850238319*^9, 
   3.8243819395421953`*^9, 3.8245118422163897`*^9, 3.8245141678935013`*^9, 
   3.82475117047574*^9, 3.825461367326404*^9, 3.82546142867092*^9, 
   3.8254618962504683`*^9, 3.8279439579518127`*^9, 3.956071047252529*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"487ee171-5b27-4dc1-9b6c-274c8bb28575"],

Cell[BoxData["\<\"ChristoffelSymbolCylindrical\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820932775595148*^9, 3.8209334480804567`*^9, {3.8209345574198027`*^9, 
   3.820934588189248*^9}, 3.82093749220476*^9, 3.821110229352072*^9, 
   3.824373536864976*^9, 3.8243816209856853`*^9, 3.824381850238319*^9, 
   3.8243819395421953`*^9, 3.8245118422163897`*^9, 3.8245141678935013`*^9, 
   3.82475117047574*^9, 3.825461367326404*^9, 3.82546142867092*^9, 
   3.8254618962504683`*^9, 3.8279439579518127`*^9, 3.956071047258318*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"53e25727-c42f-43dd-aa8e-ba32de1467c2"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], "-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None]}]},
           {
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None], "-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None], "-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None]}]},
           {
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], "-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{
             SuperscriptBox["R", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"-", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "2"}], " ", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"4", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None], "-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None]}]},
           {
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], "-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], "-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None]}]},
           {
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None], "-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{"R", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", "1"}], ")"}]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"4", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}]}]]}], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{
             FractionBox["1", "R"], "-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None]}]},
           {
            RowBox[{
             FractionBox["1", "R"], "-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None]},
           {
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820932775595148*^9, 3.8209334480804567`*^9, {3.8209345574198027`*^9, 
   3.820934588189248*^9}, 3.82093749220476*^9, 3.821110229352072*^9, 
   3.824373536864976*^9, 3.8243816209856853`*^9, 3.824381850238319*^9, 
   3.8243819395421953`*^9, 3.8245118422163897`*^9, 3.8245141678935013`*^9, 
   3.82475117047574*^9, 3.825461367326404*^9, 3.82546142867092*^9, 
   3.8254618962504683`*^9, 3.8279439579518127`*^9, 3.95607104731028*^9},
 CellLabel->
  "Out[35]//TraditionalForm=",ExpressionUUID->"b48095c2-8941-4c92-9ac8-\
524fd547f056"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "3", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.82093461950063*^9, 3.820934623299252*^9}, 
   3.820937492205227*^9, 3.821110229352274*^9, 3.8243735368652897`*^9, 
   3.824381939542493*^9, 3.824751170476118*^9, 3.825461896250736*^9},
 CellLabel->"In[36]:=",ExpressionUUID->"fa8ba01f-d62e-4dca-99de-facc102b9e5e"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["R", "\[Alpha]\[Beta]\[Gamma]\[Delta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.820934623837241*^9, 3.820937492205323*^9, 
  3.821110229352366*^9, 3.824373536865405*^9, 3.824381621264045*^9, 
  3.824381850457645*^9, 3.824381939542604*^9, 3.8245118424513693`*^9, 
  3.8245141681144238`*^9, 3.8247511704762497`*^9, 3.825461367387659*^9, 
  3.825461428746798*^9, 3.825461896250822*^9, 3.827943958056542*^9, 
  3.956071047327426*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"a7b6e57b-bef1-4ee1-9d88-e69f4c987977"],

Cell[BoxData["\<\"RiemannTensorCylindrical\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.820934623837241*^9, 3.820937492205323*^9, 
  3.821110229352366*^9, 3.824373536865405*^9, 3.824381621264045*^9, 
  3.824381850457645*^9, 3.824381939542604*^9, 3.8245118424513693`*^9, 
  3.8245141681144238`*^9, 3.8247511704762497`*^9, 3.825461367387659*^9, 
  3.825461428746798*^9, 3.825461896250822*^9, 3.827943958056542*^9, 
  3.956071047333057*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"42fee0b3-44a1-43d7-9906-47087734d0e9"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["R", "2"]}],
               MultilineFunction->None], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None]}], ")"}]}], "0", "0"},
          {
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]}]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["R", "2"]}],
               MultilineFunction->None], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None]}], ")"}]}], "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{"R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}]}], ")"}]}], "0"},
          {"0", "0", 
           RowBox[{"R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], ")"}]}]}], ")"}]}], "0"},
          {
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}]}], ")"}]}], 
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], ")"}]}]}], ")"}]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], ")"}], "2"], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]},
          {"0", "0", "0", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{
                RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                RowBox[{"\[PartialD]", "T"}]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}]},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], ")"}], "2"], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{
                RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                RowBox[{"\[PartialD]", "T"}]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], "0", 
           "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]}]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["R", "2"]}],
               MultilineFunction->None], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None]}], ")"}]}], "0", "0"},
          {
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["R", "2"]}],
               MultilineFunction->None], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None]}], ")"}]}], "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{"R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], ")"}]}]}], ")"}]}], "0"},
          {"0", "0", 
           RowBox[{"R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None], "-", 
              RowBox[{"R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None]}], ")"}]}], "0"},
          {
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], ")"}]}]}], ")"}]}], 
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None], "-", 
              RowBox[{"R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None]}], ")"}]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{
                RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                RowBox[{"\[PartialD]", "T"}]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}]},
          {"0", "0", "0", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["R", "2"]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], ")"}], "2"]}], ")"}]}]},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{
                RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                RowBox[{"\[PartialD]", "T"}]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["R", "2"]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], ")"}], "2"]}], ")"}]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}]}], ")"}]}], "0"},
          {"0", "0", 
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], ")"}]}]}], ")"}]}], "0"},
          {
           RowBox[{"R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}]}], ")"}]}], 
           RowBox[{"R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], ")"}]}]}], ")"}]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], ")"}]}]}], ")"}]}], "0"},
          {"0", "0", 
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None], "-", 
              RowBox[{"R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None]}], ")"}]}], "0"},
          {
           RowBox[{"R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], ")"}]}]}], ")"}]}], 
           RowBox[{"R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None], "-", 
              RowBox[{"R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None]}], ")"}]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{"R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}]}], "+", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None], "+", 
              RowBox[{"R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]},
          {"0", "0", 
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}]}], "+", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None], "+", 
              RowBox[{"R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], ")"}], "2"], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]},
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{
                RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                RowBox[{"\[PartialD]", "T"}]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}]},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], ")"}], "2"], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{
                RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                RowBox[{"\[PartialD]", "T"}]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], "0", 
           "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{
                RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                RowBox[{"\[PartialD]", "T"}]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}]},
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["R", "2"]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], ")"}], "2"]}], ")"}]}]},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{
                RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                RowBox[{"\[PartialD]", "T"}]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["R", "2"]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], ")"}], "2"]}], ")"}]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}]}], "+", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None], "+", 
              RowBox[{"R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]},
          {"0", "0", 
           RowBox[{"R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}]}], "+", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None], "+", 
              RowBox[{"R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.820934623837241*^9, 3.820937492205323*^9, 
  3.821110229352366*^9, 3.824373536865405*^9, 3.824381621264045*^9, 
  3.824381850457645*^9, 3.824381939542604*^9, 3.8245118424513693`*^9, 
  3.8245141681144238`*^9, 3.8247511704762497`*^9, 3.825461367387659*^9, 
  3.825461428746798*^9, 3.825461896250822*^9, 3.827943958056542*^9, 
  3.956071047853763*^9},
 CellLabel->
  "Out[38]//TraditionalForm=",ExpressionUUID->"9931ea44-1acf-4f0f-aa5b-\
f9de451db4d5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "4", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "4", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.820934641180434*^9, 3.820934644683545*^9}, 
   3.820937492205658*^9, 3.821110229352577*^9, 3.8243735368657513`*^9, 
   3.8243819395429*^9, 3.82475117047663*^9, 3.825461896251109*^9},
 CellLabel->"In[39]:=",ExpressionUUID->"5581a3fc-e7c0-48ae-93b4-3816c94a26a8"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["R", "\[Beta]\[Gamma]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.820934645395719*^9, 3.8209374922057543`*^9, 
  3.82111022935266*^9, 3.8243735368658533`*^9, 3.824381626124463*^9, 
  3.824381854371036*^9, 3.824381939543002*^9, 3.824511846625956*^9, 
  3.8245141719213133`*^9, 3.824751170476756*^9, 3.825461367874867*^9, 
  3.825461429357312*^9, 3.825461896251197*^9, 3.827943958599661*^9, 
  3.9560710478980923`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"a1d63950-7331-42c4-aed3-0e0cd3edb75c"],

Cell[BoxData["\<\"RicciTensorCylindrical\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.820934645395719*^9, 3.8209374922057543`*^9, 
  3.82111022935266*^9, 3.8243735368658533`*^9, 3.824381626124463*^9, 
  3.824381854371036*^9, 3.824381939543002*^9, 3.824511846625956*^9, 
  3.8245141719213133`*^9, 3.824751170476756*^9, 3.825461367874867*^9, 
  3.825461429357312*^9, 3.825461896251197*^9, 3.827943958599661*^9, 
  3.956071047903881*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"eceda6f0-e963-4009-84ee-ce8e6e973c2e"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], "+", 
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], "R"], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "T"}],
            MultilineFunction->None], ")"}], "2"]}], "-", 
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], "R"]}], 
       RowBox[{
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None], "R"], "-", 
        RowBox[{"2", " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None]}]}], "0", "0"},
      {
       RowBox[{
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None], "R"], "-", 
        RowBox[{"2", " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None]}]}], 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["R", "2"]}],
          MultilineFunction->None]}], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], "+", 
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], "R"], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "R"}],
            MultilineFunction->None], ")"}], "2"]}], "+", 
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], "R"]}], "0", "0"},
      {"0", "0", 
       RowBox[{"R", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"R", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["R", "2"]}],
            MultilineFunction->None]}], "-", 
          RowBox[{"R", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["T", "2"]}],
            MultilineFunction->None]}], "+", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None]}], ")"}]}], "0"},
      {"0", "0", "0", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"4", " ", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"R", " ", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[PartialD]", "2"], 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", 
               SuperscriptBox["R", "2"]}],
              MultilineFunction->None]}]}], "+", 
           RowBox[{"R", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["T", "2"]}],
             MultilineFunction->None]}], "-", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "R"}],
            MultilineFunction->None]}], ")"}]}], "R"]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.820934645395719*^9, 3.8209374922057543`*^9, 
  3.82111022935266*^9, 3.8243735368658533`*^9, 3.824381626124463*^9, 
  3.824381854371036*^9, 3.824381939543002*^9, 3.824511846625956*^9, 
  3.8245141719213133`*^9, 3.824751170476756*^9, 3.825461367874867*^9, 
  3.825461429357312*^9, 3.825461896251197*^9, 3.827943958599661*^9, 
  3.95607104794005*^9},
 CellLabel->
  "Out[41]//TraditionalForm=",ExpressionUUID->"8016fc39-79da-4138-8eb1-\
79bf66581d79"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "5", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "5", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "5", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.820934650372052*^9, 3.820934653739538*^9}, 
   3.820937492206099*^9, 3.821110229352878*^9, 3.824373536866138*^9, 
   3.82438193954329*^9, 3.8247511704771013`*^9, 3.8254618962515163`*^9},
 CellLabel->"In[42]:=",ExpressionUUID->"b6025cbd-4b46-42eb-baca-5375352e0907"],

Cell[BoxData[
 TagBox["\<\"R\"\>",
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.8209346543102093`*^9, 3.820937492206188*^9, 
  3.821110229352955*^9, 3.82437353686622*^9, 3.8243816263835297`*^9, 
  3.824381854615872*^9, 3.8243819395433826`*^9, 3.824511846864684*^9, 
  3.824514172146737*^9, 3.8247511704772167`*^9, 3.825461367953107*^9, 
  3.8254614294213552`*^9, 3.82546189625161*^9, 3.827943958655676*^9, 
  3.956071047958898*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"ffff8d51-d78c-4936-891d-f1224669e6bf"],

Cell[BoxData["\<\"RicciScalarCylindrical\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.8209346543102093`*^9, 3.820937492206188*^9, 
  3.821110229352955*^9, 3.82437353686622*^9, 3.8243816263835297`*^9, 
  3.824381854615872*^9, 3.8243819395433826`*^9, 3.824511846864684*^9, 
  3.824514172146737*^9, 3.8247511704772167`*^9, 3.825461367953107*^9, 
  3.8254614294213552`*^9, 3.82546189625161*^9, 3.827943958655676*^9, 
  3.956071047965761*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"d896e14b-4c8c-4b5a-8eab-581fd9e0d70e"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"R", ",", "T"}], ")"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"\[Gamma]", "(", 
          RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"R", " ", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["R", "2"]}],
           MultilineFunction->None]}]}], "+", 
        RowBox[{"R", " ", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["R", "2"]}],
          MultilineFunction->None]}], "+", 
        RowBox[{"R", " ", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["T", "2"]}],
          MultilineFunction->None]}], "-", 
        RowBox[{"R", " ", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["T", "2"]}],
          MultilineFunction->None]}], "-", 
        RowBox[{"R", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "R"}],
            MultilineFunction->None], ")"}], "2"]}], "+", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], "+", 
        RowBox[{"R", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "T"}],
            MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "R"]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.8209346543102093`*^9, 3.820937492206188*^9, 
  3.821110229352955*^9, 3.82437353686622*^9, 3.8243816263835297`*^9, 
  3.824381854615872*^9, 3.8243819395433826`*^9, 3.824511846864684*^9, 
  3.824514172146737*^9, 3.8247511704772167`*^9, 3.825461367953107*^9, 
  3.8254614294213552`*^9, 3.82546189625161*^9, 3.827943958655676*^9, 
  3.9560710479891577`*^9},
 CellLabel->
  "Out[44]//TraditionalForm=",ExpressionUUID->"4c63a025-9c7c-426a-9be7-\
4d4a09f11ad5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "6", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "6", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "6", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.824382031881773*^9, 3.824382035720847*^9}, 
   3.824382068120364*^9, 3.8247511704775753`*^9, 3.825461896251915*^9},
 CellLabel->"In[45]:=",ExpressionUUID->"b788313c-d4f8-4b28-9c19-53dbdf83f09c"],

Cell[BoxData[
 TagBox["\<\"K\"\>",
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.82451184692048*^9, 3.824514172191423*^9, 
  3.824751170477703*^9, 3.825461367971528*^9, 3.825461429482603*^9, 
  3.8254618962520027`*^9, 3.827943958708651*^9, 3.956071048003955*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"31089704-ca2a-4831-8b6b-ca6a58f5a12c"],

Cell[BoxData["\<\"KretschmannScalarCylindrical\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.82451184692048*^9, 3.824514172191423*^9, 
  3.824751170477703*^9, 3.825461367971528*^9, 3.825461429482603*^9, 
  3.8254618962520027`*^9, 3.827943958708651*^9, 3.956071048011516*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"fd70dec3-0ea2-4eda-b8b7-14c36b72bff5"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["R", "2"]], 
    RowBox[{"4", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"4", " ", 
        RowBox[{"\[Psi]", "(", 
         RowBox[{"R", ",", "T"}], ")"}]}], "-", 
       RowBox[{"4", " ", 
        RowBox[{"\[Gamma]", "(", 
         RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"7", " ", 
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "4"]}], "-", 
       RowBox[{"4", " ", "R", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "3"]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["R", "2"], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "3"]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "2"]}], "+", 
       RowBox[{"2", " ", "R", " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "2"]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["R", "2"], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "2"]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["R", "2"], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "2"]}], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "2"]}], "-", 
       RowBox[{"4", " ", "R", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "2"], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None]}], "+", 
       RowBox[{"2", " ", "R", " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["R", "2"], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None]}], "-", 
       RowBox[{"2", " ", "R", " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["R", "2"], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None]}], "+", 
       RowBox[{"7", " ", 
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], ")"}], "4"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["R", "2"]}],
           MultilineFunction->None], ")"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["T", "2"]}],
           MultilineFunction->None], ")"}], "2"]}], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["R", "2"]}],
           MultilineFunction->None], ")"}], "2"]}], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["T", "2"]}],
           MultilineFunction->None], ")"}], "2"]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{
            RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
            RowBox[{"\[PartialD]", "T"}]}],
           MultilineFunction->None], ")"}], "2"]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["R", "2"], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           SuperscriptBox["R", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None], ")"}], "2"]}], "+", 
          RowBox[{"4", " ", "R", " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "R"}],
            MultilineFunction->None]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["R", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], ")"}], "2"]}], "-", "2"}], ")"}]}], 
       "+", 
       RowBox[{"2", " ", "R", " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["R", "2"], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["R", "2"], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None]}], "+", 
       RowBox[{"2", " ", "R", " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["R", "2"], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["R", "2"], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["R", "2"], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None]}], "+", 
       RowBox[{"2", " ", "R", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "R", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None], ")"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", "R", " ", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None]}], "+", "1"}], ")"}], " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "R"}],
            MultilineFunction->None]}], "-", 
          RowBox[{"7", " ", "R", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None], ")"}], "2"]}], "+", 
          RowBox[{"2", " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "R"}],
            MultilineFunction->None]}], "+", 
          RowBox[{"2", " ", "R", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["R", "2"]}],
            MultilineFunction->None]}], "+", 
          RowBox[{"2", " ", "R", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["T", "2"]}],
            MultilineFunction->None]}]}], ")"}]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["R", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], "-", 
          RowBox[{"2", " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "R"}],
            MultilineFunction->None]}]}], ")"}], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{
          RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
          RowBox[{"\[PartialD]", "T"}]}],
         MultilineFunction->None]}], "-", 
       RowBox[{"4", " ", "R", " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "R", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], ")"}], "3"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "R", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], ")"}], "2"]}], "+", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None], "+", 
             RowBox[{"R", " ", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["R", "2"]}],
               MultilineFunction->None]}], "+", 
             RowBox[{"R", " ", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None]}]}], ")"}], " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "T"}],
            MultilineFunction->None]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", "R", " ", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None]}]}], ")"}], " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{
             RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
             RowBox[{"\[PartialD]", "T"}]}],
            MultilineFunction->None]}]}], ")"}]}]}], ")"}]}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.82451184692048*^9, 3.824514172191423*^9, 
  3.824751170477703*^9, 3.825461367971528*^9, 3.825461429482603*^9, 
  3.8254618962520027`*^9, 3.827943958708651*^9, 3.956071048042411*^9},
 CellLabel->
  "Out[47]//TraditionalForm=",ExpressionUUID->"70a868af-5d00-4e8b-970c-\
0707eef0a861"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "7", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "7", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "7", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.8243818880356607`*^9, 3.824381891296851*^9}, 
   3.82438193954393*^9, {3.824382052340536*^9, 3.824382068120544*^9}, 
   3.8247511704783077`*^9, 3.825461896252305*^9},
 CellLabel->"In[48]:=",ExpressionUUID->"3b422bb1-347e-4075-b7d9-df21555823a1"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["G", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.824381892203912*^9, 3.824381939544029*^9, {3.824382052340662*^9, 
   3.8243820681206617`*^9}, 3.82451184696933*^9, 3.824514172248722*^9, 
   3.8247511704784727`*^9, 3.825461368098164*^9, 3.825461429545022*^9, 
   3.82546189625239*^9, 3.827943958759293*^9, 3.956071048080927*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"af0bc7d6-eec1-4aff-9d67-222db8b3ea21"],

Cell[BoxData["\<\"EinsteinTensorCylindrical\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.824381892203912*^9, 3.824381939544029*^9, {3.824382052340662*^9, 
   3.8243820681206617`*^9}, 3.82451184696933*^9, 3.824514172248722*^9, 
   3.8247511704784727`*^9, 3.825461368098164*^9, 3.825461429545022*^9, 
   3.82546189625239*^9, 3.827943958759293*^9, 3.956071048086775*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"d7955618-f1a9-4899-b8de-844fbb2f8507"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], "R"], "-", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "2"], "-", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], ")"}], "2"]}], 
       RowBox[{
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None], "R"], "-", 
        RowBox[{"2", " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None]}]}], "0", "0"},
      {
       RowBox[{
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None], "R"], "-", 
        RowBox[{"2", " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None]}]}], 
       RowBox[{
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], "R"], "-", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "2"], "-", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], ")"}], "2"]}], "0", "0"},
      {"0", "0", 
       RowBox[{
        SuperscriptBox["R", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["R", "2"]}],
            MultilineFunction->None]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["T", "2"]}],
           MultilineFunction->None], "-", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None], ")"}], "2"]}], ")"}]}], "0"},
      {"0", "0", "0", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"4", " ", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"R", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["R", "2"]}],
             MultilineFunction->None]}], "-", 
           RowBox[{"2", " ", "R", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["R", "2"]}],
             MultilineFunction->None]}], "-", 
           RowBox[{"R", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["T", "2"]}],
             MultilineFunction->None]}], "+", 
           RowBox[{"2", " ", "R", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["T", "2"]}],
             MultilineFunction->None]}], "+", 
           RowBox[{"R", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None], ")"}], "2"]}], "-", 
           RowBox[{"2", " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None]}], "-", 
           RowBox[{"R", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "T"}],
               MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "R"]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.824381892203912*^9, 3.824381939544029*^9, {3.824382052340662*^9, 
   3.8243820681206617`*^9}, 3.82451184696933*^9, 3.824514172248722*^9, 
   3.8247511704784727`*^9, 3.825461368098164*^9, 3.825461429545022*^9, 
   3.82546189625239*^9, 3.827943958759293*^9, 3.956071048125746*^9},
 CellLabel->
  "Out[50]//TraditionalForm=",ExpressionUUID->"9665ee5e-eeaa-4830-a0e0-\
5a02daf77ef7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "8", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "8", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "8", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.82093465870828*^9, 3.820934665723707*^9}, 
   3.820937492206532*^9, 3.821110229353163*^9, 3.824373536866439*^9, 
   3.82438193954467*^9, {3.824382052340996*^9, 3.824382068120945*^9}, 
   3.824751170478986*^9, 3.8254618962526617`*^9},
 CellLabel->"In[51]:=",ExpressionUUID->"be2db789-7f63-4097-988b-0807f6c55413"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["C", "\[Alpha]\[Beta]\[Gamma]\[Delta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934666611442*^9, 3.820937492206628*^9, 3.821110229353245*^9, 
   3.824381626454548*^9, 3.824381854687508*^9, {3.824382052341096*^9, 
   3.8243820681210527`*^9}, 3.824511847219433*^9, 3.824514172561551*^9, 
   3.824751170479109*^9, 3.825461368170291*^9, 3.825461429613463*^9, 
   3.825461896252749*^9, 3.827943958855624*^9, 3.956071048192968*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"d03ae23e-25bd-40c8-86bb-29122979f1a0"],

Cell[BoxData["\<\"WeylTensorCylindrical\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934666611442*^9, 3.820937492206628*^9, 3.821110229353245*^9, 
   3.824381626454548*^9, 3.824381854687508*^9, {3.824382052341096*^9, 
   3.8243820681210527`*^9}, 3.824511847219433*^9, 3.824514172561551*^9, 
   3.824751170479109*^9, 3.825461368170291*^9, 3.825461429613463*^9, 
   3.825461896252749*^9, 3.827943958855624*^9, 3.956071048200177*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"3ab45490-5402-4887-86a8-26f94b2bc1ac"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"2", " ", "R", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                RowBox[{"2", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"2", " ", "R", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
             RowBox[{"3", " ", "R"}]]}], "0", "0"},
          {
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
            RowBox[{"3", " ", "R"}]], "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{
            FractionBox["1", "6"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"3", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"8", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "0"},
          {"0", "0", 
           RowBox[{
            FractionBox["1", "2"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], "0"},
          {
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "6"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"3", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"8", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"4", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"6", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"6", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"3", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"4", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"8", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
            RowBox[{"6", " ", "R"}]]},
          {"0", "0", "0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                   MultilineFunction->None]}]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
                RowBox[{"2", " ", "R", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], "-", 
                   RowBox[{"2", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
             RowBox[{"2", " ", "R"}]]}]},
          {"0", "0", "0", "0"},
          {
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None]}]}], "-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"6", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"6", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"3", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"8", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
            RowBox[{"6", " ", "R"}]], 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"2", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None]}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], "-", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
            RowBox[{"2", " ", "R"}]], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
            RowBox[{"3", " ", "R"}]], "0", "0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"2", " ", "R", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                RowBox[{"2", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"2", " ", "R", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
             RowBox[{"3", " ", "R"}]]}], "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{
            FractionBox["1", "2"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], "0"},
          {"0", "0", 
           RowBox[{
            FractionBox["1", "6"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}]}], "-", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"3", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"8", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "0"},
          {
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "6"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}]}], "-", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"3", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"8", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "0", 
           "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                   MultilineFunction->None]}]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
                RowBox[{"2", " ", "R", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], "-", 
                   RowBox[{"2", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
             RowBox[{"2", " ", "R"}]]}]},
          {"0", "0", "0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None]}]}], "+", 
               RowBox[{"4", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"6", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"6", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"3", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"8", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"4", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
            RowBox[{"6", " ", "R"}]]},
          {"0", "0", "0", "0"},
          {
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"2", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None]}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], "-", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
            RowBox[{"2", " ", "R"}]], 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"6", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"6", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"3", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"8", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
            RowBox[{"6", " ", "R"}]], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "6"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"3", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"8", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "0"},
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], "0"},
          {
           RowBox[{
            FractionBox["1", "6"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"3", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"8", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
           RowBox[{
            FractionBox["1", "2"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], "0"},
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "6"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}]}], "-", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"3", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"8", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "0"},
          {
           RowBox[{
            FractionBox["1", "2"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
           RowBox[{
            FractionBox["1", "6"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}]}], "-", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"3", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"8", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "0", 
           "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{
            FractionBox["1", "3"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]},
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "3"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None]}]}], "-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"6", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"6", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"3", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"8", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
            RowBox[{"6", " ", "R"}]]},
          {"0", "0", "0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"2", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None]}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], "-", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
            RowBox[{"2", " ", "R"}]]},
          {"0", "0", "0", "0"},
          {
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"4", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"6", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"6", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"3", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"4", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"8", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
            RowBox[{"6", " ", "R"}]], 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                   MultilineFunction->None]}]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
                RowBox[{"2", " ", "R", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], "-", 
                   RowBox[{"2", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
             RowBox[{"2", " ", "R"}]]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"2", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None]}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], "-", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
            RowBox[{"2", " ", "R"}]]},
          {"0", "0", "0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"6", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"6", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"3", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"8", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
            RowBox[{"6", " ", "R"}]]},
          {"0", "0", "0", "0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                   MultilineFunction->None]}]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
                RowBox[{"2", " ", "R", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], "-", 
                   RowBox[{"2", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
             RowBox[{"2", " ", "R"}]]}], 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None]}]}], "+", 
               RowBox[{"4", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"6", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"6", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"3", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"8", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"4", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
            RowBox[{"6", " ", "R"}]], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "3"]}], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]},
          {"0", "0", 
           RowBox[{
            FractionBox["1", "3"], " ", "R", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934666611442*^9, 3.820937492206628*^9, 3.821110229353245*^9, 
   3.824381626454548*^9, 3.824381854687508*^9, {3.824382052341096*^9, 
   3.8243820681210527`*^9}, 3.824511847219433*^9, 3.824514172561551*^9, 
   3.824751170479109*^9, 3.825461368170291*^9, 3.825461429613463*^9, 
   3.825461896252749*^9, 3.827943958855624*^9, 3.956071049023971*^9},
 CellLabel->
  "Out[53]//TraditionalForm=",ExpressionUUID->"366cf094-1e7a-4290-8eec-\
571ef0b2d888"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "9", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "9", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "9", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.824382043442072*^9, 3.824382068121275*^9}, 
   3.824751170479444*^9, 3.8254618962530327`*^9},
 CellLabel->"In[54]:=",ExpressionUUID->"269745b9-3b9d-40ee-bb40-97c459ac8ae4"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["C", "\[Alpha]\[Beta]\[Gamma]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.825461368931572*^9, 3.825461430647333*^9, 
  3.8254618962531223`*^9, 3.827943959777948*^9, 3.956071049078382*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"7f801ea3-43f4-4c9b-b61f-4d6a51161aa5"],

Cell[BoxData["\<\"CottonTensorCylindrical\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.825461368931572*^9, 3.825461430647333*^9, 
  3.8254618962531223`*^9, 3.827943959777948*^9, 3.95607104908599*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"8d120b6d-81b0-42f8-9542-c625d25bb86d"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {
            FractionBox[
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "3"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["R", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "3"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{
                 RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["R", "2"], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{
                 RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                 RowBox[{"\[PartialD]", "T"}]}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}]}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                 RowBox[{"4", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "3"}], ")"}]}], "+", 
              RowBox[{"10", " ", 
               SuperscriptBox["R", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["R", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"3", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["R", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["R", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "3"]}], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["R", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["R", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "3"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "3"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["R", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "3"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "3"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"4", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "3"}], ")"}]}], "-", 
              RowBox[{"4", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}]}], 
             RowBox[{"3", " ", 
              SuperscriptBox["R", "2"]}]]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox["R", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "3"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{
                 RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["R", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "3"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{
                 RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["R", "2"], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{
                 RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                 RowBox[{"\[PartialD]", "T"}]}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                 RowBox[{"4", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "+", "3"}], ")"}]}], "-", 
              RowBox[{"10", " ", 
               SuperscriptBox["R", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["R", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"3", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["R", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["R", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "3"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["R", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["R", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "3"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "3"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["R", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "3"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "3"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"R", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"4", " ", "R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], "+", 
                 RowBox[{"4", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "+", "3"}], ")"}]}], "+", 
              RowBox[{"4", " ", "R", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}]}], 
             RowBox[{"3", " ", 
              SuperscriptBox["R", "2"]}]]},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {
            FractionBox[
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                 RowBox[{"4", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "-", "3"}], ")"}]}], "-", 
              RowBox[{"2", " ", "R", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                    MultilineFunction->None]}]}], "+", 
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                   MultilineFunction->None]}], "+", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}]}], "+", 
                    RowBox[{"5", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                    RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"3", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"2", " ", "R", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                    RowBox[{"2", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "3"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "3"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"2", " ", "R", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "3"]}]}], ")"}]}]}], 
             RowBox[{"3", " ", 
              SuperscriptBox["R", "2"]}]]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{
              RowBox[{"2", " ", "R", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                    MultilineFunction->None]}]}], "+", 
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                   MultilineFunction->None]}], "+", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}]}], "+", 
                    RowBox[{"5", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                    RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"3", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"2", " ", "R", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                    RowBox[{"2", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "3"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "3"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"2", " ", "R", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "3"]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["R", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                 RowBox[{"4", " ", "R", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], "+", "3"}], ")"}]}]}], 
             RowBox[{"3", " ", 
              SuperscriptBox["R", "2"]}]]},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{
             FractionBox["1", "3"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"2", " ", 
                    SuperscriptBox["R", "2"], " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}]}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "+", "3"}], ")"}]}], "-", 
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}]}], "+", 
                    RowBox[{"4", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                    RowBox[{"R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"6", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"3", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"4", " ", "R", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                    RowBox[{"10", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}], "-", 
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "3"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "3"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", "R", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "3"]}]}], ")"}]}]}], 
              ")"}]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{
             FractionBox["1", "3"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "3"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "3"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}], "-", 
               RowBox[{"3", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"6", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["R", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "3"]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["R", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "3"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "3"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "3"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "3"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "3"}], ")"}]}], "+", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"3", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"3", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"10", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}]}], ")"}]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{
             FractionBox["1", "3"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}]}], "+", 
                    RowBox[{"4", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                    RowBox[{"R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"6", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"3", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"4", " ", "R", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                    RowBox[{"10", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}], "-", 
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "3"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "3"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", "R", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "3"]}]}], ")"}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["R", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "3"}], ")"}]}]}], 
              ")"}]}]},
           {
            RowBox[{
             FractionBox["1", "3"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}]}],
                  MultilineFunction->None]}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "3"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"3", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"6", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["R", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "3"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["R", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "3"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "3"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["R", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "3"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "3"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"R", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", "3"}], ")"}]}], "-", 
               RowBox[{"R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"3", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"3", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"10", " ", "R", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}]}], ")"}]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"4", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"R", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "T"}]}],
                   MultilineFunction->None]}]}], "+", 
                RowBox[{"4", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"2", " ", "R", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"4", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"5", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}]}], "+", 
                   RowBox[{"14", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"5", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"12", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"3", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"8", " ", "R", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                   RowBox[{"14", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"8", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"8", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"2", " ", "R", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                   RowBox[{"5", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"2", " ", "R", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "3"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"4", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "3"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"8", " ", "R", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "3"]}]}], ")"}]}], 
             RowBox[{"3", " ", "R"}]]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"4", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"5", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"8", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"14", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"5", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"8", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], "-", 
                   RowBox[{"4", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"12", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"4", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"8", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "3"]}], "-", 
                RowBox[{
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "3"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"4", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "3"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"5", " ", "R", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"3", " ", "R", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"14", " ", "R", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                RowBox[{"4", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             RowBox[{"3", " ", 
              SuperscriptBox["R", "2"]}]]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"4", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"4", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"2", " ", "R", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"4", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"5", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"14", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"5", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"12", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"3", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"8", " ", "R", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                   RowBox[{"14", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}]}], "+", 
                   RowBox[{"8", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["R", "2"]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"2", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"8", " ", "R", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"2", " ", "R", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                   RowBox[{"5", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"2", " ", "R", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "-", 
                RowBox[{"R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "3"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"4", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "3"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"8", " ", "R", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "3"]}]}], ")"}]}], 
             RowBox[{"3", " ", "R"}]]},
           {
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"4", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{
                  SuperscriptBox["R", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}]}],
                   MultilineFunction->None]}]}], "+", 
                RowBox[{"4", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"5", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"8", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"14", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"5", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"8", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], "-", 
                   RowBox[{"4", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}]}], ")"}]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"12", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"4", " ", "R", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "2"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"8", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "3"]}], "+", 
                RowBox[{
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "3"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["R", "3"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"5", " ", "R", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"3", " ", "R", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"14", " ", "R", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                RowBox[{"4", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             RowBox[{"3", " ", 
              SuperscriptBox["R", "2"]}]]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.825461368931572*^9, 3.825461430647333*^9, 
  3.8254618962531223`*^9, 3.827943959777948*^9, 3.956071049846416*^9},
 CellLabel->
  "Out[56]//TraditionalForm=",ExpressionUUID->"a34f30a1-ba58-4f67-9ad1-\
fb7a3bffb335"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Derivation of Field Equations For Metric 1:  Einstein Rosen Metric (1937)\
\>", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.825461911218462*^9, 3.825461934714126*^9}, {
  3.95607080197125*^9, 
  3.956070803190303*^9}},ExpressionUUID->"2dd92ea5-1ac2-44ad-9de8-\
e46becee731f"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "nonzeroRicci", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nonzeroRicci", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"TensorValues", "[", 
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TensorValues", "[", 
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TensorValues", "[", 
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TensorValues", "[", 
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"3", ",", "3"}], "]"}], "]"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TensorValues", "[", 
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"4", ",", "4"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
    "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nonzeroRicci", " ", "//", " ", "TableForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.825461440924431*^9, 3.825461492667721*^9}, 
   3.825461922885262*^9},
 CellLabel->"In[57]:=",ExpressionUUID->"430b3bdf-8e5c-405a-8966-e77ce4351081"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], "+", 
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], "R"], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "T"}],
            MultilineFunction->None], ")"}], "2"]}], "-", 
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], "R"]}]},
      {
       RowBox[{
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None], "R"], "-", 
        RowBox[{"2", " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None]}]}]},
      {
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["R", "2"]}],
          MultilineFunction->None]}], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], "+", 
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], "R"], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "R"}],
            MultilineFunction->None], ")"}], "2"]}], "+", 
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], "R"]}]},
      {
       RowBox[{"R", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"R", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["R", "2"]}],
            MultilineFunction->None]}], "-", 
          RowBox[{"R", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["T", "2"]}],
            MultilineFunction->None]}], "+", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None]}], ")"}]}]},
      {
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"4", " ", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"R", " ", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[PartialD]", "2"], 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", 
               SuperscriptBox["R", "2"]}],
              MultilineFunction->None]}]}], "+", 
           RowBox[{"R", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["T", "2"]}],
             MultilineFunction->None]}], "-", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "R"}],
            MultilineFunction->None]}], ")"}]}], "R"]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.825461442269538*^9, 3.8254614625694227`*^9}, 
   3.825461493177374*^9, 3.825461922885829*^9, 3.827943960585627*^9, 
   3.95607104996784*^9},
 CellLabel->
  "Out[59]//TraditionalForm=",ExpressionUUID->"107d914f-b222-45c4-85fa-\
ba5f9bc3f4df"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "nonzeroEinstein", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nonzeroEinstein", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"TensorValues", "[", 
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "7", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TensorValues", "[", 
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "7", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TensorValues", "[", 
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "7", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TensorValues", "[", 
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "7", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"3", ",", "3"}], "]"}], "]"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TensorValues", "[", 
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "7", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"4", ",", "4"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
    "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nonzeroEinstein", " ", "//", " ", "TableForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.825461502973064*^9, 3.825461523500526*^9}, 
   3.825461922886047*^9},
 CellLabel->"In[60]:=",ExpressionUUID->"da56504d-fd36-427a-8686-8f4ae895fa6d"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], "R"], "-", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "2"], "-", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], ")"}], "2"]}]},
      {
       RowBox[{
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None], "R"], "-", 
        RowBox[{"2", " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None]}]}]},
      {
       RowBox[{
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], "R"], "-", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "2"], "-", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], ")"}], "2"]}]},
      {
       RowBox[{
        SuperscriptBox["R", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["R", "2"]}],
            MultilineFunction->None]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["T", "2"]}],
           MultilineFunction->None], "-", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None], ")"}], "2"]}], ")"}]}]},
      {
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"4", " ", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"R", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["R", "2"]}],
             MultilineFunction->None]}], "-", 
           RowBox[{"2", " ", "R", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["R", "2"]}],
             MultilineFunction->None]}], "-", 
           RowBox[{"R", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["T", "2"]}],
             MultilineFunction->None]}], "+", 
           RowBox[{"2", " ", "R", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["T", "2"]}],
             MultilineFunction->None]}], "+", 
           RowBox[{"R", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "R"}],
               MultilineFunction->None], ")"}], "2"]}], "-", 
           RowBox[{"2", " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None]}], "-", 
           RowBox[{"R", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "T"}],
               MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "R"]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{3.825461524516405*^9, 3.825461922886528*^9, 
  3.827943960639937*^9, 3.956071050024358*^9},
 CellLabel->
  "Out[62]//TraditionalForm=",ExpressionUUID->"30e4cbdb-ef91-4dc6-8e37-\
98f441aa3383"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq2", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Simplify", "[", 
        RowBox[{
         RowBox[{"Expand", "[", 
          RowBox[{
           RowBox[{"(", 
            FractionBox[
             RowBox[{"-", "1"}], 
             RowBox[{"2", "R"}]], ")"}], "*", 
           RowBox[{
            RowBox[{"nonzeroEinstein", "[", 
             RowBox[{"[", "5", "]"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "]"}], " ", "+", 
         RowBox[{
          RowBox[{"(", 
           FractionBox[
            RowBox[{"-", "1"}], "2"], ")"}], "*", 
          RowBox[{
           RowBox[{"nonzeroEinstein", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], " ", "]"}], "  ", "//", " ", 
       "Apart"}], " ", "//", " ", "Expand"}], "  ", ")"}], "\[Equal]", " ", 
    "0"}]}], "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq2", " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.8254616098607273`*^9, 3.82546181881036*^9}, 
   3.825461922886698*^9},
 CellLabel->"In[63]:=",ExpressionUUID->"01e3afa6-3bbc-4a29-abf8-cf14b88715ce"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["\[PartialD]", "2"], 
      RowBox[{"\[Psi]", "(", 
       RowBox[{"R", ",", "T"}], ")"}]}], 
     RowBox[{"\[PartialD]", 
      SuperscriptBox["R", "2"]}],
     MultilineFunction->None], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[PartialD]", "2"], 
      RowBox[{"\[Psi]", "(", 
       RowBox[{"R", ",", "T"}], ")"}]}], 
     RowBox[{"\[PartialD]", 
      SuperscriptBox["T", "2"]}],
     MultilineFunction->None], "+", 
    FractionBox[
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"R", ",", "T"}], ")"}]}], 
      RowBox[{"\[PartialD]", "R"}],
      MultilineFunction->None], "R"]}], "\[LongEqual]", "0"}], 
  TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.825461610657627*^9, 3.825461819261469*^9}, 
   3.825461922887032*^9, 3.8279439606683283`*^9, 3.956071050054563*^9},
 CellLabel->
  "Out[65]//TraditionalForm=",ExpressionUUID->"9b373e22-0652-4c1d-b1b8-\
a7cf2e896ec8"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq3a", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3a", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"nonzeroEinstein", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         SuperscriptBox["\[Gamma]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"R", ",", "T"}], "]"}]}], "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], " ", "/.", " ", 
    RowBox[{"Rule", "\[Rule]", " ", "Equal"}]}]}], "   ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq3a", " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.825461533764393*^9, 3.825461557859779*^9}, {
   3.8254618254678087`*^9, 3.8254618368266487`*^9}, 3.825461922887203*^9},
 CellLabel->"In[66]:=",ExpressionUUID->"8784da7d-261b-4fe0-b86b-3ff78a94d123"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", 
     RowBox[{"\[Gamma]", "(", 
      RowBox[{"R", ",", "T"}], ")"}]}], 
    RowBox[{"\[PartialD]", "T"}],
    MultilineFunction->None], "\[LongEqual]", 
   RowBox[{"2", " ", "R", " ", 
    FractionBox[
     RowBox[{"\[PartialD]", 
      RowBox[{"\[Psi]", "(", 
       RowBox[{"R", ",", "T"}], ")"}]}], 
     RowBox[{"\[PartialD]", "R"}],
     MultilineFunction->None], " ", 
    FractionBox[
     RowBox[{"\[PartialD]", 
      RowBox[{"\[Psi]", "(", 
       RowBox[{"R", ",", "T"}], ")"}]}], 
     RowBox[{"\[PartialD]", "T"}],
     MultilineFunction->None]}]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.825461535317956*^9, 3.825461558113735*^9}, 
   3.825461837267799*^9, 3.82546192288748*^9, 3.8279439606981573`*^9, 
   3.956071050086625*^9},
 CellLabel->
  "Out[68]//TraditionalForm=",ExpressionUUID->"e632b9d8-952c-494d-9a3b-\
9038fbe9fc21"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq3b", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3b", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"nonzeroEinstein", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         SuperscriptBox["\[Gamma]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"R", ",", "T"}], "]"}]}], "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], " ", "/.", " ", 
    RowBox[{"Rule", "\[Rule]", " ", "Equal"}]}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq3b", " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.82546158841282*^9, 3.825461596980156*^9}, {
   3.825461842827737*^9, 3.825461853330367*^9}, 3.825461922887642*^9},
 CellLabel->"In[69]:=",ExpressionUUID->"b68757b2-2217-4405-8d0f-ee8b81a0d33e"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", 
     RowBox[{"\[Gamma]", "(", 
      RowBox[{"R", ",", "T"}], ")"}]}], 
    RowBox[{"\[PartialD]", "R"}],
    MultilineFunction->None], "\[LongEqual]", 
   RowBox[{"R", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], ")"}], "2"]}], ")"}]}]}], 
  TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{3.8254615978375387`*^9, 3.8254618538633833`*^9, 
  3.82546192288791*^9, 3.827943960758854*^9, 3.956071050117979*^9},
 CellLabel->
  "Out[71]//TraditionalForm=",ExpressionUUID->"21188e44-1693-4310-a4fd-\
21ef91f15a7d"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq3", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"eq3a", " ", ",", "\[IndentingNewLine]", "eq3b"}], 
    "\[IndentingNewLine]", "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3", " ", "//", " ", "TableForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.825461948154889*^9, 3.825461976928235*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"c60045ec-8672-49e2-9807-56d9d2ad410f"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], "\[LongEqual]", 
        RowBox[{"2", " ", "R", " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], "\[LongEqual]", 
        RowBox[{"R", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], ")"}], "2"]}], ")"}]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.825461966266095*^9, 3.825461976928664*^9}, 
   3.827943960787938*^9, 3.9560710501471643`*^9},
 CellLabel->
  "Out[74]//TraditionalForm=",ExpressionUUID->"ac2fb541-6a62-48b5-9132-\
6af35ff41cbf"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Solution of Vacuum Field Equations For Metric 3 Using Separation of Variables \
and Including Plots\
\>", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.827921392329904*^9, 3.8279214362326403`*^9}, {
  3.827943637373761*^9, 3.827943657700137*^9}, {3.82794386685361*^9, 
  3.827943870092927*^9}},ExpressionUUID->"658d25f4-3452-4b31-bb16-\
f73f8017618c"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "vacuumEquations", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vacuumEquations", " ", "=", "  ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{"eq2", ",", "eq3a", ",", "eq3b"}], "\[IndentingNewLine]", "}"}]}],
   " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vacuumEquations", "//", " ", "TableForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.827920961741544*^9, 3.8279210391547213`*^9}, 
   3.827921407281905*^9, {3.827942528500132*^9, 3.8279425482823133`*^9}, 
   3.827942650973143*^9, 3.8279436577003727`*^9, {3.827943894357924*^9, 
   3.82794389902917*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"c4e0191a-81a1-42fe-a7d2-75628c777e11"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["R", "2"]}],
          MultilineFunction->None], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["T", "2"]}],
          MultilineFunction->None], "+", 
         FractionBox[
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], "R"]}], "\[LongEqual]", "0"}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], "\[LongEqual]", 
        RowBox[{"2", " ", "R", " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], "\[LongEqual]", 
        RowBox[{"R", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], ")"}], "2"]}], ")"}]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.827921065621176*^9, 3.827921407282098*^9, 
  3.827942880634273*^9, 3.8279436577004766`*^9, 3.8279439609673243`*^9, 
  3.956071050177504*^9},
 CellLabel->
  "Out[77]//TraditionalForm=",ExpressionUUID->"efb0ae23-b41c-4053-ab9e-\
6fbb04506fe0"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "psiReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{"psiReplace", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[Psi]", "[", 
    RowBox[{"R", ",", "T"}], "]"}], "\[Rule]", " ", 
   RowBox[{
    RowBox[{"f", "[", "R", "]"}], " ", 
    RowBox[{"g", "[", "T", "]"}]}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.825412706274982*^9, 3.825412750387109*^9}, 
   3.825413315971154*^9, 3.8254141934242373`*^9, {3.827921101908229*^9, 
   3.827921103866809*^9}, 3.8279214072822313`*^9, {3.82794255858971*^9, 
   3.8279425820580883`*^9}, {3.827943151539765*^9, 3.827943153386166*^9}, {
   3.827943379267694*^9, 3.827943389750992*^9}, 3.827943657700636*^9, {
   3.8279440017629232`*^9, 3.82794401692872*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"e6f7b808-6e71-4c01-a87a-bcaf54c56be6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"R", ",", "T"}], "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{"f", "[", "R", "]"}], " ", 
   RowBox[{"g", "[", "T", "]"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.8254127508483543`*^9, 3.8254133159715633`*^9, 3.825414193424425*^9, 
   3.827827047403206*^9, 3.827920157295438*^9, 3.827921111955909*^9, 
   3.8279214072823763`*^9, 3.827942880671772*^9, 3.827943154272378*^9, 
   3.8279434609370813`*^9, 3.8279436577007504`*^9, 3.827943960998288*^9, {
   3.827944005227058*^9, 3.827944017317567*^9}, 3.9560710501917467`*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"4e816e68-3644-4261-8b65-f22e14da610a"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "psiDerivatives", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psiDerivatives", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{"psiReplace", "  ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"D", "[", " ", 
      RowBox[{"psiReplace", ",", " ", "R"}], "]"}], "  ", ",", " ", "\n", 
     "       ", 
     RowBox[{"D", "[", " ", 
      RowBox[{"psiReplace", " ", ",", " ", 
       RowBox[{"{", 
        RowBox[{"R", ",", "2"}], "}"}]}], "]"}], "  ", ",", " ", "\n", 
     "       ", 
     RowBox[{"D", "[", " ", 
      RowBox[{"psiReplace", " ", ",", " ", 
       RowBox[{"{", 
        RowBox[{"T", ",", "2"}], "}"}]}], "]"}]}], " ", "\[IndentingNewLine]",
     "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psiDerivatives", "  ", "//", " ", "TableForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.825412766564385*^9, 3.825412782963142*^9}, 
   3.8254133159716873`*^9, 3.8254141934245443`*^9, {3.827920177372521*^9, 
   3.8279202277018843`*^9}, 3.8279214072825336`*^9, {3.827942584786292*^9, 
   3.827942616114748*^9}, {3.827943393907599*^9, 3.827943423606689*^9}, 
   3.8279436577009163`*^9, {3.82794400889848*^9, 3.827944010617445*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"ff803a79-bcfe-44b2-90ce-d890d22e6d93"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{"\[Psi]", "(", 
         RowBox[{"R", ",", "T"}], ")"}], "\[Rule]", 
        RowBox[{
         RowBox[{"f", "(", "R", ")"}], " ", 
         RowBox[{"g", "(", "T", ")"}]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], "\[Rule]", 
        RowBox[{
         RowBox[{"g", "(", "T", ")"}], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"f", "(", "R", ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], "\[Rule]", 
        RowBox[{
         RowBox[{"g", "(", "T", ")"}], " ", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"f", "(", "R", ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["R", "2"]}],
          MultilineFunction->None]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], "\[Rule]", 
        RowBox[{
         RowBox[{"f", "(", "R", ")"}], " ", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"g", "(", "T", ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["T", "2"]}],
          MultilineFunction->None]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.8279202191464977`*^9, 3.827920228632128*^9}, 
   3.827920781312194*^9, 3.827921114851995*^9, 3.82792140728267*^9, 
   3.827942880692836*^9, 3.827943157504965*^9, 3.827943463543189*^9, 
   3.827943657700982*^9, 3.827943961030016*^9, {3.827944011138204*^9, 
   3.827944019743332*^9}, 3.956071050218355*^9},
 CellLabel->
  "Out[82]//TraditionalForm=",ExpressionUUID->"bb6278d6-5d26-4d0f-923a-\
085cbdfac787"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "the", " ", "subtraction", " ", "just", " ", "moves", " ", "everything", 
    " ", "in", " ", "the", " ", "equation", " ", "over", " ", "to", " ", 
    "the", " ", "LHS"}], " ", "*)"}], " ", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"vacuumEquations", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1"}], "]"}], "]"}], "/.", "psiDerivatives"}], " ", 
   ")"}], " "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.825412752732791*^9, 3.825412762404532*^9}, {
   3.825412806547402*^9, 3.825412858147223*^9}, 3.825413315972768*^9, 
   3.825414193425153*^9, {3.8279202400152407`*^9, 3.8279202715739527`*^9}, {
   3.827921128875271*^9, 3.8279211292472563`*^9}, {3.8279211643886147`*^9, 
   3.8279212154409847`*^9}, 3.827921407282813*^9, {3.827942643258754*^9, 
   3.827942666413204*^9}, {3.8279427012345743`*^9, 3.827942702378598*^9}, {
   3.827943427004528*^9, 3.827943427510572*^9}, 3.827943657701119*^9, {
   3.956071229465579*^9, 
   3.9560712351385517`*^9}},ExpressionUUID->"59446fb0-4bbc-44f3-a5b3-\
00fabaa254dd"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"g", "[", "T", "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", "\[Prime]",
      MultilineFunction->None], "[", "R", "]"}]}], "R"], "+", 
  RowBox[{
   RowBox[{"g", "[", "T", "]"}], " ", 
   RowBox[{
    SuperscriptBox["f", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "R", "]"}]}], "-", 
  RowBox[{
   RowBox[{"f", "[", "R", "]"}], " ", 
   RowBox[{
    SuperscriptBox["g", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "T", "]"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.825412758840003*^9, 3.825412762689143*^9}, {
   3.82541280862001*^9, 3.825412858963379*^9}, 3.825413315972866*^9, 
   3.825414193425218*^9, 3.827827047504136*^9, {3.827920243809523*^9, 
   3.827920254745767*^9}, 3.827921131400004*^9, {3.8279211653089647`*^9, 
   3.82792119368594*^9}, 3.82792140728295*^9, 3.827942880703382*^9, 
   3.827943161165738*^9, 3.827943466568276*^9, 3.827943657701209*^9, 
   3.827943961042323*^9, 3.827944024259267*^9, 3.956071050230915*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"036c6a78-69e6-4c0c-9f02-077843acfdd7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"separation", " ", "of", " ", "variables"}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "sov", "]"}], " ", "\[IndentingNewLine]", 
   RowBox[{"sov", " ", "=", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"\[Psi]", "[", 
            RowBox[{"R", ",", "T"}], "]"}]], "/.", "psiReplace"}], ")"}], "*",
         " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"vacuumEquations", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "/.", " ", 
          "psiDerivatives"}], " ", ")"}]}], " ", "//", " ", "Expand"}], " ", "//",
       " ", "Apart"}], " ", "//", " ", "Expand", " "}]}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.8254128669720993`*^9, 3.825412915755105*^9}, {
   3.825413066694908*^9, 3.825413069534131*^9}, 3.825413315973387*^9, 
   3.8254141934255667`*^9, {3.8279202646712217`*^9, 3.827920285349825*^9}, {
   3.8279212241140413`*^9, 3.827921242889999*^9}, 3.827921407283106*^9, {
   3.8279426724116077`*^9, 3.8279426990906353`*^9}, {3.827943167251685*^9, 
   3.8279431832332087`*^9}, {3.8279434306997433`*^9, 3.8279434370468273`*^9}, 
   3.827943657701357*^9, {3.827944028321361*^9, 3.8279440290485992`*^9}, {
   3.956071238301003*^9, 
   3.956071241919051*^9}},ExpressionUUID->"b44f7dbd-a7b6-4479-b76f-\
32a43ac5fbe8"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["f", "\[Prime]",
     MultilineFunction->None], "[", "R", "]"}], 
   RowBox[{"R", " ", 
    RowBox[{"f", "[", "R", "]"}]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["f", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "R", "]"}], 
   RowBox[{"f", "[", "R", "]"}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["g", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "T", "]"}], 
   RowBox[{"g", "[", "T", "]"}]]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.825412895596088*^9, 3.825412916723487*^9}, 
   3.825413070421996*^9, 3.825413315973586*^9, 3.825414193425667*^9, 
   3.827827047560388*^9, {3.827920278136441*^9, 3.827920285654067*^9}, 
   3.827921243244876*^9, 3.827921407283242*^9, 3.827942880724093*^9, {
   3.827943169662047*^9, 3.827943183442697*^9}, 3.827943469181529*^9, 
   3.827943657701445*^9, 3.8279439610747557`*^9, 3.8279440304373627`*^9, 
   3.956071050259151*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"e6b9047c-b34c-4ccc-978f-059419f9aa8f"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "fODE", "]"}], "\[IndentingNewLine]", 
 RowBox[{"fODE", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Select", "[", " ", 
    RowBox[{"sov", " ", ",", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"!", 
        RowBox[{"FreeQ", "[", 
         RowBox[{"#", ",", "R"}], "]"}]}], ")"}], "&"}]}], "]"}], " ", 
   "\[Equal]", " ", 
   RowBox[{"-", " ", 
    SuperscriptBox["\[Omega]", "2"]}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.825413025268491*^9, 3.825413049469462*^9}, {
   3.825413100925441*^9, 3.825413128885972*^9}, 3.825413315973723*^9, 
   3.82541419342579*^9, {3.827920295519658*^9, 3.8279202957099123`*^9}, 
   3.827921407283367*^9, {3.827942707635375*^9, 3.827942708682526*^9}, {
   3.82794323566756*^9, 3.8279432664899683`*^9}, 3.8279432976835413`*^9, 
   3.827943657701571*^9},
 CellLabel->"In[86]:=",ExpressionUUID->"3c2203c8-d087-4d76-b3e7-670e251e9817"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["f", "\[Prime]",
      MultilineFunction->None], "[", "R", "]"}], 
    RowBox[{"R", " ", 
     RowBox[{"f", "[", "R", "]"}]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["f", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "R", "]"}], 
    RowBox[{"f", "[", "R", "]"}]]}], "\[Equal]", 
  RowBox[{"-", 
   SuperscriptBox["\[Omega]", "2"]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.825413050363896*^9, 3.8254130725328627`*^9}, {
   3.825413105821751*^9, 3.825413129160074*^9}, 3.825413315973977*^9, 
   3.825414193425879*^9, 3.827827047595553*^9, {3.827920292934746*^9, 
   3.827920296432672*^9}, 3.8279212473714647`*^9, 3.827921407283502*^9, 
   3.827942880734736*^9, 3.8279431962676163`*^9, {3.8279432673768463`*^9, 
   3.8279432982999897`*^9}, 3.827943471565741*^9, 3.827943657701659*^9, 
   3.827943961088438*^9, 3.8279440346498947`*^9, 3.956071050273719*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"c6835a6e-bc50-467e-87ac-dd9c3dc10fd1"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "fReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{"fReplace", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"DSolve", "[", " ", 
     RowBox[{"fODE", " ", ",", " ", 
      RowBox[{"f", "[", "R", "]"}], ",", "R"}], "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Fix", " ", "these", " ", "constants", " ", "later"}], " ", "*)"}],
   " "}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.825413142416278*^9, 3.825413215309819*^9}, 
   3.8254133159741364`*^9, {3.825413931790369*^9, 3.825413948188295*^9}, 
   3.8254141934260073`*^9, 3.82541536266064*^9, {3.825415641187039*^9, 
   3.82541564171554*^9}, 3.827921407283628*^9, {3.8279427114036007`*^9, 
   3.8279427142667513`*^9}, {3.827943225843668*^9, 3.8279432423219357`*^9}, {
   3.827943292435772*^9, 3.827943292602024*^9}, 3.827943657701787*^9},
 CellLabel->"In[88]:=",ExpressionUUID->"51d68246-4cfd-4cbb-a0df-391f950dd94c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "R", "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{
    RowBox[{"BesselJ", "[", 
     RowBox[{"0", ",", 
      RowBox[{"R", " ", "\[Omega]"}]}], "]"}], " ", 
    TemplateBox[{"1"},
     "C"]}], "+", 
   RowBox[{
    RowBox[{"BesselY", "[", 
     RowBox[{"0", ",", 
      RowBox[{"R", " ", "\[Omega]"}]}], "]"}], " ", 
    TemplateBox[{"2"},
     "C"]}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.825413939379508*^9, 3.82541394858248*^9}, 
   3.8254141934261017`*^9, 3.8254153634181843`*^9, 3.825415641974312*^9, 
   3.8278270476353407`*^9, 3.8279203015276937`*^9, 3.827921250023563*^9, 
   3.827921407283763*^9, 3.82794288077346*^9, 3.8279432271927423`*^9, {
   3.827943270315446*^9, 3.827943301118185*^9}, 3.827943473538048*^9, 
   3.827943657701872*^9, 3.827943961129208*^9, 3.8279440396596403`*^9, 
   3.956071050356035*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"0e3e4ed8-6d2c-4d77-989d-ed45e5e40f59"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "gODE", "]"}], "\[IndentingNewLine]", 
 RowBox[{"gODE", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Select", "[", " ", 
    RowBox[{"sov", " ", ",", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"!", 
        RowBox[{"FreeQ", "[", 
         RowBox[{"#", ",", "T"}], "]"}]}], ")"}], "&"}]}], "]"}], " ", 
   "\[Equal]", " ", 
   SuperscriptBox["\[Omega]", "2"]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.8254131147261047`*^9, 3.825413138836771*^9}, 
   3.825413315974481*^9, 3.8254141934262342`*^9, 3.827920304711067*^9, 
   3.82792140728388*^9, {3.827942716891342*^9, 3.827942717554788*^9}, {
   3.827943244218913*^9, 3.8279432636906233`*^9}, 3.827943305851907*^9, 
   3.827943657701993*^9, {3.827944044929607*^9, 3.827944045809116*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"e9a756a4-0206-4a05-97e1-3ea83cb7caa2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["g", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "T", "]"}], 
    RowBox[{"g", "[", "T", "]"}]]}], "\[Equal]", 
  SuperscriptBox["\[Omega]", "2"]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.8254131176300173`*^9, 3.825413139222302*^9}, 
   3.8254133159747267`*^9, 3.825414193426375*^9, 3.827827047650991*^9, 
   3.827920305198897*^9, 3.8279212524220247`*^9, 3.827921407284013*^9, 
   3.827942880784375*^9, {3.827943260087674*^9, 3.827943264382143*^9}, 
   3.827943306280838*^9, 3.8279434753661537`*^9, 3.8279436577020817`*^9, 
   3.827943961144549*^9, 3.827944046598865*^9, 3.956071050371028*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"c24c3c1f-e8c2-4ddb-9b02-857123a3fb7c"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "gReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{"gReplace", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"DSolve", "[", " ", 
       RowBox[{"gODE", " ", ",", " ", 
        RowBox[{"g", "[", "T", "]"}], ",", "T"}], "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "  ", "/.", " ", 
    RowBox[{
     RowBox[{"C", "[", "1", "]"}], "\[Rule]", " ", 
     RowBox[{"C", "[", "3", "]"}]}]}], " ", "/.", " ", 
   RowBox[{
    RowBox[{"C", "[", "2", "]"}], "\[Rule]", " ", 
    RowBox[{"C", "[", "4", "]"}], " ", 
    RowBox[{"(*", " ", 
     RowBox[{"Fix", " ", "these", " ", "constants", " ", "later"}], " ", 
     "*)"}], " "}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.82541316824539*^9, 3.8254132265737867`*^9}, 
   3.8254133159748917`*^9, {3.8254138844063263`*^9, 3.8254138914518013`*^9}, 
   3.825414193426602*^9, {3.825415367770537*^9, 3.82541537696286*^9}, {
   3.825415633587708*^9, 3.825415634100494*^9}, 3.827921407284154*^9, {
   3.827942720899975*^9, 3.827942723602512*^9}, {3.827943248962739*^9, 
   3.827943258322061*^9}, 3.827943657702227*^9, {3.82794405097889*^9, 
   3.827944053609047*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"15cfc988-0ada-4e1a-b04d-411f12b51abb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "T", "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"3"},
     "C"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"T", " ", "\[Omega]"}], "]"}]}], "+", 
   RowBox[{
    TemplateBox[{"4"},
     "C"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"T", " ", "\[Omega]"}], "]"}]}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.827943319560709*^9, 3.827943477522936*^9, 
  3.8279436577023163`*^9, 3.8279439611846724`*^9, 3.8279440552381372`*^9, 
  3.956071050397599*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"a0567c31-f965-471f-b24b-54223d6b3c84"],

Cell[BoxData[{
 RowBox[{"\[Psi]", "[", 
  RowBox[{"R", ",", "T"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"R", ",", "T"}], "]"}], "/.", " ", 
  "psiReplace"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]", "[", 
    RowBox[{"R", ",", "T"}], "]"}], "/.", " ", "psiReplace"}], " ", "/.", " ",
   "fReplace"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", 
      RowBox[{"R", ",", "T"}], "]"}], " ", "/.", " ", "psiReplace"}], " ", "/.",
     " ", "fReplace"}], " ", "/.", " ", "gReplace"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "psiSolution", "]"}], "\[IndentingNewLine]", 
 RowBox[{"psiSolution", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[Psi]", "[", 
    RowBox[{"R", ",", "T"}], "]"}], "\[Rule]", " ", 
   RowBox[{"(", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", 
        RowBox[{"R", ",", "T"}], "]"}], " ", "/.", " ", "psiReplace"}], " ", "/.",
       " ", "fReplace"}], " ", "/.", " ", "gReplace"}], "  ", ")"}], 
   " "}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.8254132293502197`*^9, 3.825413258133724*^9}, 
   3.825413315975254*^9, {3.825413377445665*^9, 3.8254133868450203`*^9}, {
   3.825413443220189*^9, 3.8254134527067423`*^9}, 3.8254141934270144`*^9, {
   3.8279203219031143`*^9, 3.8279203256777678`*^9}, {3.827921262403627*^9, 
   3.827921278625524*^9}, 3.82792140728445*^9, {3.8279427265554*^9, 
   3.827942770735528*^9}, {3.827943335615018*^9, 3.827943357437359*^9}, {
   3.82794344777201*^9, 3.827943452538888*^9}, 3.827943657702484*^9, {
   3.827944060386964*^9, 3.827944071697317*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"85b97414-7494-4c88-98c1-5b890a008c84"],

Cell[BoxData[
 RowBox[{"\[Psi]", "[", 
  RowBox[{"R", ",", "T"}], "]"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.825413232498124*^9, 3.8254132583547697`*^9}, 
   3.825413315975355*^9, 3.825413389009687*^9, 3.825413453263356*^9, 
   3.8254138987882977`*^9, 3.8254139540393248`*^9, 3.825414193427183*^9, 
   3.8254153804141912`*^9, 3.82541564616749*^9, 3.8278270477005043`*^9, 
   3.82792032620221*^9, {3.827921259136561*^9, 3.827921279191937*^9}, 
   3.827921407284536*^9, 3.8279428808231153`*^9, 3.827943358974313*^9, 
   3.827943657702593*^9, 3.827943961198539*^9, 3.827944072717128*^9, 
   3.956071050412743*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"2a771823-5517-443b-8ce8-ca663e759bc7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "R", "]"}], " ", 
  RowBox[{"g", "[", "T", "]"}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.825413232498124*^9, 3.8254132583547697`*^9}, 
   3.825413315975355*^9, 3.825413389009687*^9, 3.825413453263356*^9, 
   3.8254138987882977`*^9, 3.8254139540393248`*^9, 3.825414193427183*^9, 
   3.8254153804141912`*^9, 3.82541564616749*^9, 3.8278270477005043`*^9, 
   3.82792032620221*^9, {3.827921259136561*^9, 3.827921279191937*^9}, 
   3.827921407284536*^9, 3.8279428808231153`*^9, 3.827943358974313*^9, 
   3.827943657702593*^9, 3.827943961198539*^9, 3.827944072717128*^9, 
   3.9560710504180098`*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"d4158d64-eaa5-4fda-ad4c-436548e1aa5c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"BesselJ", "[", 
      RowBox[{"0", ",", 
       RowBox[{"R", " ", "\[Omega]"}]}], "]"}], " ", 
     TemplateBox[{"1"},
      "C"]}], "+", 
    RowBox[{
     RowBox[{"BesselY", "[", 
      RowBox[{"0", ",", 
       RowBox[{"R", " ", "\[Omega]"}]}], "]"}], " ", 
     TemplateBox[{"2"},
      "C"]}]}], ")"}], " ", 
  RowBox[{"g", "[", "T", "]"}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.825413232498124*^9, 3.8254132583547697`*^9}, 
   3.825413315975355*^9, 3.825413389009687*^9, 3.825413453263356*^9, 
   3.8254138987882977`*^9, 3.8254139540393248`*^9, 3.825414193427183*^9, 
   3.8254153804141912`*^9, 3.82541564616749*^9, 3.8278270477005043`*^9, 
   3.82792032620221*^9, {3.827921259136561*^9, 3.827921279191937*^9}, 
   3.827921407284536*^9, 3.8279428808231153`*^9, 3.827943358974313*^9, 
   3.827943657702593*^9, 3.827943961198539*^9, 3.827944072717128*^9, 
   3.956071050421276*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"88f8a375-af4f-4611-97a1-02f0e92529e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"BesselJ", "[", 
      RowBox[{"0", ",", 
       RowBox[{"R", " ", "\[Omega]"}]}], "]"}], " ", 
     TemplateBox[{"1"},
      "C"]}], "+", 
    RowBox[{
     RowBox[{"BesselY", "[", 
      RowBox[{"0", ",", 
       RowBox[{"R", " ", "\[Omega]"}]}], "]"}], " ", 
     TemplateBox[{"2"},
      "C"]}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     TemplateBox[{"3"},
      "C"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"T", " ", "\[Omega]"}], "]"}]}], "+", 
    RowBox[{
     TemplateBox[{"4"},
      "C"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"T", " ", "\[Omega]"}], "]"}]}]}], ")"}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.825413232498124*^9, 3.8254132583547697`*^9}, 
   3.825413315975355*^9, 3.825413389009687*^9, 3.825413453263356*^9, 
   3.8254138987882977`*^9, 3.8254139540393248`*^9, 3.825414193427183*^9, 
   3.8254153804141912`*^9, 3.82541564616749*^9, 3.8278270477005043`*^9, 
   3.82792032620221*^9, {3.827921259136561*^9, 3.827921279191937*^9}, 
   3.827921407284536*^9, 3.8279428808231153`*^9, 3.827943358974313*^9, 
   3.827943657702593*^9, 3.827943961198539*^9, 3.827944072717128*^9, 
   3.9560710504254436`*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"278704dd-4806-4bca-8302-0bbc73124620"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"R", ",", "T"}], "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"BesselJ", "[", 
       RowBox[{"0", ",", 
        RowBox[{"R", " ", "\[Omega]"}]}], "]"}], " ", 
      TemplateBox[{"1"},
       "C"]}], "+", 
     RowBox[{
      RowBox[{"BesselY", "[", 
       RowBox[{"0", ",", 
        RowBox[{"R", " ", "\[Omega]"}]}], "]"}], " ", 
      TemplateBox[{"2"},
       "C"]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      TemplateBox[{"3"},
       "C"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"T", " ", "\[Omega]"}], "]"}]}], "+", 
     RowBox[{
      TemplateBox[{"4"},
       "C"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"T", " ", "\[Omega]"}], "]"}]}]}], ")"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.825413232498124*^9, 3.8254132583547697`*^9}, 
   3.825413315975355*^9, 3.825413389009687*^9, 3.825413453263356*^9, 
   3.8254138987882977`*^9, 3.8254139540393248`*^9, 3.825414193427183*^9, 
   3.8254153804141912`*^9, 3.82541564616749*^9, 3.8278270477005043`*^9, 
   3.82792032620221*^9, {3.827921259136561*^9, 3.827921279191937*^9}, 
   3.827921407284536*^9, 3.8279428808231153`*^9, 3.827943358974313*^9, 
   3.827943657702593*^9, 3.827943961198539*^9, 3.827944072717128*^9, 
   3.9560710504304323`*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"36ccbf4a-0973-4325-8360-94d6c1180314"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "psiSolution1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"psiSolution1", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", 
      RowBox[{"R", ",", "T"}], "]"}], "\[Rule]", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Expand", "[", "psiSolution", "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], " ", "/.", " ", 
         RowBox[{
          RowBox[{"C", "[", "1", "]"}], "\[Rule]", " ", "A"}]}], "  ", "/.", 
        " ", 
        RowBox[{
         RowBox[{"C", "[", "4", "]"}], "\[Rule]", " ", "1"}]}], " ", ")"}], 
      " ", "+", 
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Expand", "[", "psiSolution", "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], " ", "/.", " ", 
         RowBox[{
          RowBox[{"C", "[", "2", "]"}], "\[Rule]", " ", "A"}]}], "  ", "/.", 
        " ", 
        RowBox[{
         RowBox[{"C", "[", "3", "]"}], "\[Rule]", " ", "1"}]}], " ", 
       ")"}]}]}], "  ", "/.", " ", 
    RowBox[{"A", "\[Rule]", " ", "1"}]}], "  ", "/.", " ", 
   RowBox[{"\[Omega]", "\[Rule]", " ", "1", " "}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.8279203496923943`*^9, 3.8279204343537893`*^9}, {
   3.827920474600013*^9, 3.827920518053524*^9}, {3.82792067036033*^9, 
   3.82792067463905*^9}, 3.827920781312446*^9, {3.827921284491097*^9, 
   3.8279212859211473`*^9}, 3.827921407285124*^9, {3.827942778116398*^9, 
   3.827942799195005*^9}, {3.827943486499897*^9, 3.827943572181735*^9}, 
   3.827943657703714*^9, {3.827944084509617*^9, 3.827944085625252*^9}, {
   3.8279442509381104`*^9, 3.8279442575051394`*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"f75463c2-f2a2-4951-a74e-d01ecb2c49a4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"R", ",", "T"}], "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{
    RowBox[{"BesselY", "[", 
     RowBox[{"0", ",", "R"}], "]"}], " ", 
    RowBox[{"Cos", "[", "T", "]"}]}], "+", 
   RowBox[{
    RowBox[{"BesselJ", "[", 
     RowBox[{"0", ",", "R"}], "]"}], " ", 
    RowBox[{"Sin", "[", "T", "]"}]}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.827943501652095*^9, 3.82794353088015*^9}, 
   3.827943573384959*^9, 3.827943657703805*^9, 3.8279439612606697`*^9, 
   3.827944087332983*^9, {3.827944245020158*^9, 3.827944257793984*^9}, 
   3.956071050455771*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"0c744b00-8666-4b64-a0a9-acd680fc2db9"],

Cell[BoxData[
 RowBox[{"RevolutionPlot3D", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", " ", 
    RowBox[{
     RowBox[{"\[Psi]", "[", 
      RowBox[{"R", ",", "T"}], "]"}], " ", "/.", " ", "psiSolution1"}], " ", 
    "]"}], "  ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"R", ",", "0.1", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"T", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.827920524400783*^9, 3.827920559927422*^9}, 
   3.827920781312705*^9, {3.827921290593889*^9, 3.82792129216125*^9}, {
   3.8279213654349623`*^9, 3.827921367233612*^9}, 3.827921407285377*^9, {
   3.827942802667502*^9, 3.827942817498477*^9}, {3.827943518759141*^9, 
   3.827943526704852*^9}, 3.827943657703919*^9, {3.827944095802149*^9, 
   3.827944099209304*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"a32bb711-7a6c-4d43-b1b2-828d765d5f25"],

Cell[BoxData[
 Graphics3DBox[{{GraphicsComplex3DBox[CompressedData["
1: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
FsJxuHAhe68NtBWbpaiQU0K/Q8szvASimIAxW+VP8mOg63PTbfckDbT8Qbdx
WCSOuSkd/Hu3mtBI0imuX5r08Lh7zdtfd6Rwhvj1GdZ7uYjdt52gYpABMoj6
6mMZWaw1SNjaO1gLTK2sp1O9meCmO7tP+x15vOTWKPZ7rhREnphvesLMAqcM
11pwuwJ22uItS5nHqJHdO9cplxV2i7YK5soo4SidWWFitUo09WN8wPPFd9Dz
4NUuycsvCKokHN7UO0DMmcZmGoHrQJDGulNWbR6lbKbwpQ5+A9ZxAaU5PcTQ
yDIkM9h6B5Us7ka+ixkBOV1W50+50kBi1pWN3VYi3C13D77Y+QYCKThXXB8z
Qbuj5FeKy+Q46NxsMY96N5L+HKxWYMAO0ayhqisdHX6p2NlodxujHv21oAMm
Hkg7t/enPZ4R31eWcHvQ0AzAeraT0DI/LLU2LV1IZ8GnO65SeJTXAGYdJyp9
cyHo1pkRTl7Ijl8b3/J9uV+JZmO5c24UiUAOvaMrwvVcWO7VI8UR33pUOtFp
/oJXHNaVXJCB/bxYOEy2rPZUAXihFLrzPUgSqrP3Hsqs8+N1x+OPBMkagGMQ
eDs4Kw1jTAln1B8K4vtPq4xPnXyB1Lo2tI/OysG5cOk2AxJh/JBIttDwYx0K
ZehdezEgD7XrLH5ahIvgMCNLA13qNDThWGsZYV4ENkYuOuZ+iQBZ+gcNezsb
SFzrNxs56zbw2mIdj1dpBmZjLA8knEfADiVTlsOZYzAYLlxUMxgCzs9+kDXU
9wKPEs7037oM8HOgk02c+iTYH3l3If9LA7Jf+eLNMM0K6aYuvgjrnAe6rzTc
Gdy6kLmYpv7JYG5YnCZkX1HwF/BXc4onkBeAD7LO4f8xCcDF7qQ9DYJ18ECZ
vSxWqwO8aci+azwhBPnJmF8WntkCOTwRr9j2fcHLa9tXrueLQlPVcFnl+F3w
2Jir/VdWC4o8grr+QRLw6XWS+uzxAyD6IsDGki4PPXsdKpNgJg2HjMpzWOIJ
4AfjlbtqlPXA/3gnS46QHLzn+MCvS4MIUnOQsWr8KQMa12mOJnbkIe0jFcMX
48Tw6QTLLZOfFajou8Lasp0izHi1yno+hBRqcb1Gae2VSJX44sxegxI8lf1t
glr2GKx0bxrNp/sBUENgTMD3HKB/QsLwlGM+kBZ5Nb57qw0d/KfwsLF2GcT8
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
7J5Pdwbq/51b1kI8Ye+0A/ZOXzVx9k6fw15ZNeyVecJeWUTw/CaRdgkqWK+w
m/VTk3LX2k/KPyCEOTXJUpeaS4tp1gZ7QQO67n2yfF99KZoD3Im5wJ2wAO7E
/DPNkj++ytCTUTbRkZuNqNOOoSS5uEpkCfur47C/2rjn/+dRqC0/ndr7Rgor
UJdzIQaiVGmYaaLo3UYMizaXbdsmi+29S/PiJaVoWfoJnt7Nj4iZq/qTdH1t
vKcmSazqTzW6LU1ssuX3amSRcLZ1+z5dLBzrZfHZRJ32NA0ETBikEeMrnk0z
MXJ4Wpglcp9ZS3hvSfO5yzUTv61zqoXnGuHpPWWZGXPfksjCxwPCzwuRFH/h
1D9zhGiElu0dHSE+LM/D8PbOaiDuv3iuL4PnWhb80XzzOP7oRvBHP1nG8Uev
A3+0FvijK7W6Cp4+lKCpmx4+ZmXXogAu4+bR3rvo/ANhJQcDabrRcIng/Lti
mM/FJKMqug19MeT4ncfA77zrMcfvfBv8y2LXOf7lY+BfVua2M5BT0aa9rbb6
3fIsHL0wk1Ua9pQ4gE9Z8DnHp3ypkuNT7hot3vG1RZaG7RoUujDdghzX2/5w
s2xFW8s7SH6oIl17USt+W0QHYl/Qc90VW0D8wFMsU87xFEeDpzgHfMTqNRwf
sdAwx0ds+H2d3ISZHh3955S4S/jfiBG0bPY/STl56IYOnqsxpKda7d5ddP2A
6HnP0MqAUjKduituiYMx3Tc4rD2Z9BFlVC3K3LC+DFn84qXaC14qBPPwtTAP
D4J5uD3sX3XC/pUI8LeHwB/UvYrjD9oP/iDPpz7bHfIHyJgOY9LDgYGteBLZ
P9RaSENO7Ev1sEEy2uOkKjWfgZeHXY+88rmFbLwyNWynxE/NlH+v33fsJkp5
JSnkfOMVUYTvEWPwPaIOvkeE3wnKk5Ljp0I/zbKjr5ahAKmehOmJV6QDON7V
wPHOXsvhePvA3oIt7C3wwt6CDfCcrYDnLAg85zHgABcBB1i3hcMBpsBbkwbe
2gvgranJcXitucBr9QRe628wn4+H+fw34KSlAL/UiTv2//ildnc4/NJ/eaGx
ZRxeqC7wQlcDz/N34HnOAZ7nJuukUrWXgjic5Rf9YYQbh5yLn5z7rJo435uc
xMeZuO4S17rr8aLYz8blyB232d/BbP0ZuSg5/Kdvv+vPAkmc2NDI2BvbhByB
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
     "], {{
       {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
         GrayLevel[1], 3], 
        StyleBox[GraphicsGroup3DBox[
          TagBox[
           TagBox[{Polygon3DBox[CompressedData["
1:eJxFnXX4FsXXxvfZ3n0eBbuDRkTsQlExsEBRQFARFBW742d3YGEHYmIHqFjY
KNiFgR2oqNiNre/9+d7j9f4x187Ozs7O7s7OnHOf+5ztMOqAbfePoyhat46i
RNunsyjqXURR3oiiVXRgorYTVb5fHkVLqfx27f9P5ZO0naTyfdMoukEn3qD9
lVR+i7a3qHxP1V9S9W/V/nqqc5O2f6n8EJXPVpqs/fN1zU3LKBqh8w5V2bKq
f7fKN9P+h9q+q/qj1Pbl2l9S+2NUp4vqPKv88Sp7WtunVWc15e9U/k7lV2qq
f2rzcJUdpPrLqP5dOraq9u/Q9g7V2Vvls5Ru0/6Kqn+Y6h+m4/cp3auyv1Xn
fl13uvJTlB5U+RPaNpRO1HlfKk1V/liVP6btYzw/5R9V/lHl31J+itI07R+l
up8rPaj8Edp+pvSA8h/r3s/SdddTvdN0rR2U31X54XpWw5XfjXLV/UrpGdWf
qfLXlcYpralj99M3XWsN2lB6VuXbKw1Sfhcd30f3farSXOWX1T1uqfKdlT9V
1xqm/Cjlj1XbHVTnIbX1uPYvUsqUP1l9O6H0dd7Sfqr0hq41TvWXU/33uGcd
e03bROlSlf+g9A7PSueerHOP1vELVPa90isqf0T7M7WNaUvpKe6J56Y+D1Sf
tlbqwb0q7adjq2k7n651KO9O+eeVDlF+WhVFGyodpHO/13ZjpYOVn67tJkqH
KP+A+nCc+nCkrnmm7n0v5UerfFuV91A6VPnz1V53tT+Dd6p6z2v7vMo3VP4F
5V9Q/madN18rig7QNzFF5x2j/SN0fHv19VJtK8a0yv7VdQvlN1fZR9q+r3N3
UZ0zw7i9Vtf6RekT5a/Wtqeu+7HyE5RfQfnZyg9V/e0St3Or2jxd15utdjZS
Gy+q7EXlT1L+JeVfUv5cnfud0svaH6/tj0rvK3+mtl8rPaf8vA23oUccnaZz
Z2n/PeVPVf4D5d9Rfh3lH1b+YeWP1zUH6V7O1v4xKn+E96bytVSeqnxh7d+l
bam0jPK3qXyA8sc3/O1MUv/vUf5+vjUmE+Wf0cUnJv6mVlT9EyvX2U75rZQ/
QflX9I62Vv5E7kX1v0l8zsN6No8oPZB43G6uc+bT9l3VP1Fpmdzf5hSVPdnw
OZPCtR7X8aOU3s/8fW2hcxdI/H11VvmO2u7GOKk8F52jfEv5zsrvr2O3qO6V
3Lvav0v5f5XfSW3dp/QU81jqOYI87+rD0s/6QeYTpRdVr1L5LWrzc7W5fuz6
zCf3Je4z88mhqe+P72iQzrlT6X7mPZ17VOV5jbm5nfLdlF9H+XmU76L8WOXn
Vb4r8w7zntJMnT9E5f1VfpzK/1D7k5Se0zXmUR830fGr1f6aqhOrzoKMA513
vNLCueeQS3TsFNXfVNsVVWeE6rys7eZKRzJXqPxz1Z+qd/OathcobaxzL1X7
T+jY45HnlseYW5R/Xce31bln6dz5VWe7zOPtYuWn1p4/GdePJx7ba6n+rvru
jlRf3lL+S9X7VuUjVXdXtXM1z1D5Ucpf1fD7ua/hd7SLyndX+bXav55t6W95
ssq/V/6PyN/31MTlV6lsuo49q/wM1i+l/7FOqGyYzr+g4bliGnOF6sxiXte5
7ZT/W/npyn8Uyp9UfnHV76o+X8X8zhjSdkulBamnOk9pO1/kteBRxrby/XS8
m9IcHd9R26G67vkNzx9PJ55DJvC9KC2i/WeVnlFaWufOr7IDdA9jVGduw8co
H6Dy5ZS+Vht7Jn7/yzNmdM0f9FyXVZ3bUtfvofJu6vPVqn+29r9Xuldpsuqs
rX6+oHQ0Y0/bF5WOUX7XxHPAAqpzb+l5gf3hav9HtduB+Vn7yyp1VP7f2GN2
UeVH0MeG+/AAz7/peotre2hpOWK22nhP42RB3pHa/ED5hZRvqV7dsKxyi+o+
oHMOzPxs+c6aSvup/iyVLaw63+ieeit1VPl3tb8f+vGr2j9Cdbqpzlzl/6d8
V9Z9tbklYy/zM/s49nN7UtvxIZ/p+Lz0WedtzthXOk35F1Pf1xy185nSUoz3
yO+wb3iP+6tvn6vtJVX+qeq/pLweaXQ775D5TXUGq/xGXWtr1niVn6vy7sr/
UHsuYB5AJuqp7TKMZ7X9vNIKrC9q/3elvbXfR/16ofb75V3fmnrcfKvtp7ru
EjqXB0l7iyv7k+r2Ydxo/zPVmaE6BeugrrWXyn5S/ivWVdX5UfkXVX62Un8d
O1rtHJW4z1vp3OtU3kf5Gao7UOdU2v+i9PfMt/ys9q9R6t3wXEPZQKXLWFtZ
O1V+Fe8ltfxwicouVjqdd682hqndc5TfUH28QelynXuXOru5HuaxyneMvY6d
ybqTee45RvmD1caBift2lbbnqd5lyCSl5ynq3a5rDlH5V6p/lq7zReV3+rbq
76R68+vY90p7K/2q8le1PTd2335U3etqH9td6Wcd30dpM5Uvr/LDmUtVfnvs
/Doqj2s/357KX6z8DshXus7mGmcXqu8f6rqbKf2idhbT/tlKO0V+5+srfaH8
X+rz0SpfWfkrwjj9UvlnlD8rPOcjVfeIxO/rebW/uNofp3NOVNk5sa+7vtoZ
lli2WYN7V/pHx9ppv33DY/UT1XlB52XM80FmGEd/Kq/pJym/LGtT7fn0p8py
wokq76wG5tF72kNtdVL+KaXRyj9Xec06QXXm03ntlW7TuQto+436eqfyHZnP
lJ+k/IjK8znvvVb5x6W/T9bcUuky5Qttc6VLlB+k6yyi616ka62s93x6afn9
GB1fVPv9dc8b6PhnKr9W5WvpHvupbBOl3srv3fCY30n501W2p/afUt290R1U
vrPOfVltzdSx7rrWvNrfV3VWUL6d8vuzjvD8G36Pj6v/6yntp/zROm+LyuOT
ez6s4XHzh8p2U7pG+XYqH8W8q/y8yu+i/CjlO6j9ltrfnfej8t203T2yfL+r
8rspv6jq1IXX8cWVf1xpJLKgrnu8+r+G6i6o/HfK3638Ujr+hNLOqvNuFdZT
tfNOFdZf5X+vwvqrfC89v7t0/o2MU+VXUNoz9VrHvLyE2vmetVwDZl7WFN6j
UkPHd1ZaL8yN82g83qtzl1c/vlP9N1R/HtW/Q/uPqPwQ7T+v85Zoeh7bMbH8
om60rTmHZV53nmHuziz3skb8W3qdQj6bp+Fy8sjHjOFNVLBx6rV7ouo+rPYP
1oHltS2VltKxddW3j3TtH5AhE8vCTdYX9DLVbaE7oOsoncTYZq2uLQtvorJX
lU5pWE5aUO/iZOV30PEVlM7XuT9XloFPVn4b1XlT6ULVObAMckiQw7+qPWez
7vM98C28WllmOC/IdV/WXm+vZU3X+c+pfK/EcgDzwj0q20wdPlz93kLXeT33
XLpNkPGYM3/Vdjulc5HNqiC/KX+R+r5W5jqs21XltXsblbVXu/foGqPV9l3I
AOiZSleoPyMjj71bdf7Oyo9T2eVKYxKvL2ckngP35ftT+Z7hW+P4jg2P5XMS
j+dlda0XC+/zHSCz8C101nZCYvlwZ/VtcfXtDbXxA3OG2vwzct+vCv3fTXVG
KH2oOg9pe7jSy5nLd1X6QOV3xV57mNvb1Z7HmbdH6dhFKj888jHWpjHMgawh
Siujg+m6vfQsLlOb3VV2vc4/mrVefZ+odIHOmaryI5XeVp2Z2l7Y9Dt5TNsj
lN5U+TRtj1Gao/zLuu5Oyp/DeE3cBnL+vurnhYl125d1/NymZTf6Rf9/Y71W
2dimdesXaKNp3Xqd1PWo86bKLmp6DG6gNKlwu6+q7Pymx/gT2h6t9Fnoz6G6
rw1Up6PStci86s8/On6/0up6BstSlng8r6pzZit/ReI5lzWY9Zd5lOfGXLq8
rrEbOIbymdq+vXbfDozdzqnK99Z7uLT22opuh47H3DdA/TmIdZE5Svm/mHuZ
h5AtlZ5i7Gj/AL4F1cm1f0Lm+k1dc+XMaxB4DG0OZR4uLC8iK16UGYMAf1gP
HEvHjo+8Pl0W5BbwjJuUblT58MrzI3PjPmrjeuQYZAmVHau0QO616V7WJpV3
j133MuXvVtk9hZ/p3shUPENkmNjjnHkD3A387Sbl70GmCs9zsvLjlP898rrW
FT0E2SxxOf3cXW1ezviJfM7VyF7Ie6HNcQ1/O4s1fewmtXFzbZnnG2SexDLh
YB0/oTJ2hw6O/o6Ov21i7A/cby7PUGkDrqntL4Vl+AFqp6/KmNZ2SHx8/obx
Qs69WeU76hv6Wf14Us9+XXAIXW9fle+isoX4hpUfxHfBJKyyfVRvldRYx+lq
f9XUuMw6ifMfqHyMyldLjcn8rrSSUufI1/hZfesDDqf2GujAhdvmGv8qPz6z
TIM8s5rKn0LnLfwN8S1tqe145kHlz2XMq87qTeu+jP09Uut3PZteL1kr5yTe
XhJ5u1fIMyZbpdu6W9fZtzLGunzhewQnPST2+GBs8N7AZMeFcQi+xrw3jT7r
nLVT6xfcy/eR9YzBIT8oHEOGvy6MOfToQ2OPXcbt9WEcX6fydRM/w1mRsavV
le8TZMw1ld9I27vV9yWb1knJs3az1u6nY1tou6raGab2t1R+OdXZWs9qUtPY
D+sxdRdDPlf9gTxb1fkl83fNOeenLt8cPULPJ6ssbwxUm5um1h+fRt5rGl/c
VudeETCmbVRns9R6Ivos9dFhd0tcjs64k/IbKb9ow/PAn4X7fTa6WmWdi7Xo
mtrrEX3ZJvTzUPQh5Tfgu9O1NkwtJyC3MOaRXZAb+wXd/xBtPyqtO24cnuF3
zDM6qYuOjSgskyKb/sD4V/lk3Vehc1ZQX7bRdqvI8gnXQkb5XGVLq843fF+x
+7MqMpjOTdXmaqznyt/CnK/8msrfDB6n/CGJdTl0pa1jPwfkN+ZX5tl1G55L
+yu/ZsN4+4Pg7arzodo4Q6lXbn0LveurIP+/VHh9X0Jl7yXGKKaojc+ZG9XO
a+rX67WPTUcP5Z7RSVXvFeVX0rkrqp1FdW/vsr41fO7pQRfYqLRuvImuvx5r
p9pYEf0z8TfFdk7ID1Y7rxUe251U9qnSD//JbCo/TeWvsf7xLSEXqb3vmaxC
fz8L110bDF7111H+74b7vILyPWvrfcyXk1PrkOg+6JHkd+B7V/7V2nL7rmqj
Y+Z1jeNvhTpb6brLIecxj4Fpqd72Kn+ltv44FtkfWU7l17Mepe4338UWDefp
P/16OfTtC13nadXvGVmXBEdAfq4Sv1fWx2tT53m/jHXqoW8erPNeUn62rntg
yFN/B+R39XOY6n7NO1e6QeUPpn7u16v8GdUZ07RudGBq/A7Mc5va2P4B6KHK
L1x5fkDHfT707Umdt5jK11D5jjr/Pl37CmTUpnWoo1i7dO5Tyi8W2+aDTIrd
57mm8X/G26Da9oKDdHy08qdXttE8pPwq+gYeKKyHos+jy2+Anqj86qqzB9he
Zdx8hto8r2ls7GPkDOY/XesplZ3atC64CFh0bR1+P727N9D3I++j27OW3cO6
lNjewThknUCPvil1nvWin9rZQOk45j316UtkDJUvE8Yt9S8FA8ksDyylun+i
A6fWO7kWuufWtXXPfVR2GWOzMlZxRG08Ajn81Ibvh3u5L3Ue/eV3tXmH0nuF
25sV+g8e8onyRyl/ROF5jTmtxHbDnKnyBXVeXhkXK1T3MOZW3peO31h4fzi4
CN+76v+p6x6V+Xv/Tufe1jS+tbnK9wnzwAvgFSp/nPlI2+d0D08kxpCfqY3z
JurDTYXbHaZ6J3AdnfsjchkyKpiothOV7lS+jl2HNbG3yp6tjU1vp/J9te0S
GS8BN2F+PkjHb6ps05mi7ezS3wh4BHoXOtcZqnOm0ucqn602L0bfUL+ujj03
Msd+orJLlY7HlsN7Vloo9/w9p/QcPkH9uy7Mzd/q2VyPHBB5Xme9YW5/Xdvj
WcMi20ywnYwKfeBZoQd+qe04pVPU/rmpsU7KB6k/o5P/xwbJgw8OVvkeyi+l
4jjxc1hZ5d+qjeuUrsytz1MH/LBfw33YNKxlPCvwpYtqY1wnab89tpnMa9YS
4EzYLJDL1N6j2n+Q+SI2tohMspHKlmadaxhrpJxnsrvKT6lsE11U+b+ZB3Re
Q326Rc9nI9X5im+htC1zmursp7Sqzn8zsWzBev0pz7+yXfkz5a9QOht7JHKo
6oxXnTVU9pjOfUj798ZBzlf9OYzNynaMvcGfKtup/2l4vVyxYbnoyDBmboid
B4ubpzb2x/NB1p5YW97mGZ2ceK0HHwUn3Tqy/ZZ3OkT5lp7fdurfcUEuOCnU
x45DfTDVnbBpKN8buV3tT+DedF8bN3zeJqybietsqrK9dP2Va9uOkUGOCH3e
U2XnVbZ59w/30x/5SuUHKK2u/Se13R+5QvmG+lmrfxtHthud0bD+OylgpWOC
3oQuckZkrPu+yusIeOYQdIaGx9/PDWPU2AseqDzm5w969D7Y1iqv9dhAmBs4
j/kBPP/eyrJlH+yl4MM6tmRsO8aBKl8mtu0R3fNB1X+w8nd0n/KTK+sF6MIL
FLZXYj/4qWFbBjYm5hnkcGyHPyotwniObTM5QPm99Qwey8xnWF/tzMhtM+0U
G28Grx6Zedw9o/zluo+BWoNOVb2fuZfY/IMz9Uzmav9x5VdWfu3ENt+eqZ83
PIHllF8p8dr0PN+10o+J8Yr9YmNT6H2QPsB8Lqk87rn24rHXz/0j21WxqT6J
vK3zf4/Nh3iIdbG0DfPN2PgWPIfxamMj9fl09XkP3csjmTkDF6v9Dyvb+8+s
vHbSt/WV/lXqqzqb6pwtCo+PrUrbwjaPbOf5rGE98SWVdWh6bkOHQ5dDp9tX
15ma2eZ+g9o/sLad+8bK8zZ1sKffWlkXuEv5OyrbX5CPv24Yx3tcbdyWW/YG
A5xY+f0io3/VMMYIDjmp8jjEBojN79uG9bDeiccA+vxjSts1jLPdWdn+db0u
sqmez1VgMmE9ZY29Ablb5dfkli3+VOqu+v20vxnyZ8My0B8N26cerSwD/B3m
FeYXsIuHwEh1bG3l10Smzf3N/YENR2kDlfdtMHl7PrwGvVz7PSLPs3BSHozM
Sbgut04H/+HmyjYsbJ2fNsxVQOdD90N3/kzPeKj685v2l42Na/4vMiaI/a9T
ZJ3qu4YxWGy/k4P9d4C2R+tatyvfHRk9sQx2pK55dGnM+X/M5aUx8LdK46Fg
oV1j22ZPiayjrhC7/Ea10yW2bg5WBGYE7gQHaPXYNs09gkyFnHWI2j+iNI79
gbbvYb9R/pIg36NbwGFaWefepvJ9KtsosTt0i21PQEforPzYhrGgrXVPbyid
p/33K9sH0T+2U1nfzLYScHawHnAe5ljWSPRlZGE4B8jD8BuezI19XqF2LizN
xxgCTgUmq/zg0jb6bZQ/uTJv5xbuXfmLSvORWIf6xsaBN1E+Zl6PjG/tGmwG
76OPVOY8vIMtrLJONF39Pb+w3Piuyt+svA6uDkZX2FbxHna9ynL4GbqXMalt
Cs0iyB6xMdmesTHqITq3v45d2rD811D56iq/Ss/pC+RpHR+l6z6Q2Ua/mfaH
5rbnvRebe/Rmw3PL+NIcjAvR4ZQG6HqXI9vW5vT8Af5cmie2mMqu1bHpkeej
txvmIK2Qeu2CM3Nu5XWONe5s5c+pzIMZpr7ck/l5jkX2r833Wgw7Gt+J2lg+
tUwBNwzuwxm5+Q8LF8ZwDsDGlrntqSq/TWW3VbZrX6373kTzwCW5cft+yl+u
/FWVZQvkiivBTlQ+VuVHpLaNvorcqL5s1/TaQBnfIjbTHrreeG3PUfsroqMn
5gshH8N7ekXly8XmRJwdBf6Fyl9WfnmVX6H8WOYKtf210mW67kpqZ63EXC9k
qXcbnuffic3xep1nru2jsflhu+p+H8zMX2JM7lubz7QW+ivYcuxrbhz7un/p
Grur/W3RJ3TepNzr6kc6N0Gnizw3x2F+Zj5Ow5w8S9tG5fUXPP333NjRwbrm
Ak3bmcDTb82N58CV+Q39TPnrtR1feL3BBnBjblv8Q5X1UMbnV7SN7qn8r7kx
HPDLV1X/ZuQD1Z+bG+fsH5t79If2O6j87sr8IubwzyrzdpjnsVU9n3mtY60o
w3oBlnVqba7ESDA6HR+k8kL5IcoPVv7LhvuIjX5VjaV1wUjVp10K62DoX/Pp
+o+AMateGRs/2C4yF5A1Chly/sp2HGzHyNvgxMjVAxuWO5E55zRsM8Ne9nBl
XZg55OvK+jj62q86eG9urOCLhm3G2Iu30na9huX8eVTwcG4Zvp22hfq5rfIT
dN0BrMeRcSbwJt4Rslu7IL+BaYGjsW5vhl2h8lpWqo249HPqV5ovhFwRq/0H
gpybBh1zR8al+nmLyhcK62Mzd/9u1xjp37J+VeXGzXkW+wbdD33nR9W/W8dW
aRh7BFcBX0nBEhvGf5CjkbmRpXkAU5Q2bFgPzQrPwUlsHYn1GjyzUXj9Z01e
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
wUvDuXwX/wcEOqqA
              "]], Polygon3DBox[CompressedData["
1:eJw1nHngFeMbxWfm3pk7c+cbEVnTopWiRJGiKFREC6K0l1DKLpEtCdm3bCkV
ZSdbslTIvq+R7GlRKWTJ8juf77m/P+b7nWfeZebO8r7Pc8553vpDxvQ6NQqC
4M84CIr6/3tZ+3kQLCvJ1oHuWRDsVBUE7yRBcEEYBE1Ufoi2LQpB0JV2Kj9O
5atV/zR1dJH6+Uf7R6jtgSrvngZBPfV3jOxDZB+msve1faf2k9TfwSovq787
1HYPlU9W+29VPlB2b9m7aX+jtlZq/6XqX6Xygtr0ld1f5ZvVto76P1x2pj6v
0/WM1LEW2n9M5f1U/xS136T+FsteIPs42UtlfyS7nfaP17ZcdqL+T9D+Em1v
qX0L2TNVv6/sj1U+VfWv0bne1vaejp0je5DOV0+//3PdnztV/0zV/0Nlh+h6
6qn8PpWfputpq/7ek32c7F1U/zPVv1n1u+v/tqrPQ5ig8i1Ut562d2SPk/2T
fmsD2R/J3iR7oNrXVfulaneH2v8uu6/sVepjjOocqvp/6/pKsgfIPk/X86f2
u+p6Wqr93eqricoHyh6j9tvJ3lXbJ6r7hOy56i+TPVX2d6rfTHZ91T9W9Y9V
+TSVNZY9QPZo2Ytlv6SttX7fItUfTH1dzxe6vrtU/rLKXtG2t8pfV/kUXc+/
up5ean+C7INVbxvZo3W+s2Wv1/Vvo/q3qu2fsssqn6Py89R+rexbde7vtNVU
vdPUx1r9r1X2u/S7ys+SvafKR6vsDtm91HaUtr/U/4eqU9T17av6gfrbUf/W
qN6HuqZtVcbhx/RnD7UfpeOzdewc3k/9njrq42z18ZDqruHZa/9h1X9K9laq
c4bqL5F9qa53gcqfUv+h2v+k49+rTmPt76Dy63X+vdT/6Tq+UMfuUtmxfBPq
7wqVhzp//yq/Q1dyPtk7qH571T9SfSZq/6vsL9Sujtqfr3M/ozoPqOyewNfb
UuWnqv5dsh+Q/SzvrOpvqfo11H5/1S+ofhOVbym7veyi7GayX+BZqf5Zav+a
6if6PYmu5QRdS7vK/U11fTvr2Fk61lR2M21nav9mlddWfweqj5L620f2+err
JW1jVX932an2d9d2ovrfVXVW6v8HurZaOpe6CbZX+45qn6qsLfdTZV+pbT/1
30X2OlXaXu33V7s/ZJ+nutvJbid7o+w+ar9nlb+pa9TnVNknq86e6m+Bymdo
/x7ayB4p+3L11yr3u/So7ANU/0iVb6/y0ZSr7FVt5/F9yf6a9032Pqr/A89f
9iLZX+o66+t8F2h/qbYasg9V+dHqr46u52Pdx2tDP79tVN5G7eurvJXOdRLv
nM43T/YqHf9ObRvybTK+qN2OOvcZ+v038j2q7hHaaqv+CO4Pz1f247IflL2L
9vfR+fqozWK12Ubt99L+1dpfr/IhOv9TqnO/6k+THcluK/s/lW8v+0z1t6Ou
r4Ou43bZB6m8p8p3VP3TZD/Ke6Q6Y1X+tOw7VXaXtm1UPlD2MJXtrnNuqXOe
yDutvr7SVlfthgV+X3NdX12Vn6vyx2S/oPKPVb6dfvME2fPV34Pqb5bq76nz
Hyp7S9k9Zc9U3XXahqn+O7JvpK22C9TfFH6Pji/Xfqzr21f2D8xHup7eOtdO
shuo7CdtzVT+HM9Lff+i9jcyZ+kcrXO//89q/1n6U/n72j6XfZLqV+l6rpY9
WnZjle+k691ZWx/1XyfwdW1QX3sUfX21c7+fh6n+KN4flW/W9fRU/dqyR1fG
z+dV/q76r6n9rbSdzNit8sbqa722FurvDZVvofNfo/JTVb+pyjeov//U3zGq
30j2fnwL2hbRn+wfVXeltj9kf8D51f5oxmf1ebjavKr2e2j/Cu1/q/LvVfcH
bZtU/yW+B5W9xvgku73OP059L9T2Ssm/F79hhvbHqnyN7GWy/9L1HMW7J/tb
XfciHVuh/a21naZ7db76P1z1b5W9MfPvfUD1f+X9LXl8baR2D+l843Wuxdqm
69huKp8X+/mdr/rPyz5C7R9Q+zvV38Wyf5F9B+dTnVNU55nY9+9i7b+p8t4q
v1D1e6r+bbITxio27r3si3R9l8o+WuVzZQ/gXdO2nHlC288qf1zlcwr+PvaV
fWXqb7et/r+i7SDd3x90ztqqv3XJ17K99ieEnp+vV/vz1f4gtXlR1/eL7tdh
ur4vZH+l8stVPlTltWT/i/8l+zmVR2r/r8ovkz1Q5Tn+hq7tG223lXzNC9Xf
r+qvq+p/qfb7q/25+Gwq2yD7KLV/T/ansrvLXsJ4r+tdrPYv6tgY2a+WvY+/
dZaOv4H/I/sw/Bf1v45nod/zouynGatkX8i7xPNQ/+/gr1Tqz9W17av++6ve
K7L30fVsL/tlXeNg9X+2yhdom6Y+tlV5TXxD9iv+SWvV3071X1L9QbJPrfgT
L6j/z/EHtb9e7e9Wm5N17Cbtf6rtwpLHy+103sHaX6nr6yv7D9ktZV8le7Xs
9tp/GZ9PbXdSf2t1vqnq83LZ/WT3kH2M7LqyL1H9EbJbVnlMvgf/AN9V2xUq
P1nlY/T7t5b9sPqfLPtwvjfZu6j8ItnFkuezVL/vYLVvlNufukrlg/GXK+Pp
lbJPUfnjKhus8+2i6x6q8i7qr7fKd1b5GbIb6b60Zq6L/HzvU9kGtXlUx25V
nR6V+e4a6qu/y9TPMfi3qn+E6h+i/Xe1fa3yc1XeX9c/Querr//DVKeN+n9A
5dcV/H32kr0d37vKLpP9Ce+Sti8ZH2VP1PUNl72b7Ptlz9G1tFV/vWPPF7eW
fX+Hq/0psq9S+ZvaHsGfwD8o2f+v0v3pHXp+25Lr0bHxapPp/K0Y67X/E/6U
2n6g7Xwdmxh43v1G+1nR8+/VKntL2/iS/cvDmZeIKSL7mP8QTxADyG6t8mtV
911tj+nYBbI3JR4rN+v3bK36H+Hf61gP1ddlBRfLjlR+nOyOfG/4aoxZqv++
7KG6HwPxuWXfLXt37TfXtg5/V/0dq/J+shsSuzDfqq8h2lap/DiVN1ZZR+Ih
bT9Gjr0GVb5JYrDP8O91PUeqbAu+L+0PV9la2b/wvWv/M22/qe7L6m+Jzjdb
fVwv+zeVX6L6bVV+A0GgyoerfLDKm6p8hg71lf2I7Jmyb+D69DxOl32A7Lqy
Y+1vxB/iHeEeqP4OujGvq99T1d+Fqr9MdX5S/dk8b9nfMufKfkL2SLX7VNuv
shdzfrVrI/t69bWZcvXXSv3tpGOzVH6i7Aayl6veTJ4f44n6mx/Z334hdrx4
mezP8Q9Ub1/Ggsr4eYXO/7Xq/6zzPY4/q/KnVf6o7H8Zj1XWRr/n7Mp8u0vm
8ZpYqmclXmupc1wY2L/cW/sj1H5D5DHiVtX/Qe2P1vH5qrNc9vf0p3bPqP5z
ZccvF8p+QfZ+Kl+We5xifBql8h9lX63yt1V+p/ZXaOur8hdUfrfqr5R9vOyF
vH/EAtpq810zPpTtf9bCJ1D7ffW/UWzfdbzsPbTfVsfGEY8Qw+jaO8q+KPSY
spfKj5R9Xegxa6HO96X62zbxeHih9j/XthX1AscHRe3vr/3DVL5a9/czlac6
1onvrWz/bw/VG6vye9TfT7IHqfwNlW9W/TXEo7Jfk/0CfqHqzg/tg30i+0zZ
82Rv5J2JfS+Y+5/XsUnM7YljKWLQycRNiZ/dPrInEjvKfjZ0DHApvrTsx0P7
3JfLnpQ41iFGvUfXslbbEJ3jLd4HxgFiOpUvUPl9sguyu4SOUabr96zKjTOA
L3wle7XsiaqzhPFW9rfgEyp/gOdV9ny9BL9N9vGqt7/2rwmMHzyr/k/Tsce0
/2TB420blU9S+U28L9o/TMemaL8Bz0/2UbFj0Yd17BCd72v1X1/HTtSxA2Uv
l72T7EH4s8TyuoZLVHdHveO/qfyD1PvE4L/Kfk/2DrJHMSbknr/wXfBhirI3
4QPj+8r+Ff9SdnP6ll1W+R+yb8KXk92XWDN33fr6Pf1lZ7nLGhUce27QFhYd
gxKbricQLzpG7c3cofrzZDfQdY3U9qHKlzFf46MQ25WNXawt+P7+qTrruHfa
vin7m+db3yB7I99XZl+Scy7n/eScBbchFmtZdl3ejxvwD2KPlfjwjNUlXU+d
osds4tnjGU8DH1uvvheDYRQd//yjsqPKxko49nfZ8SVzey3ZB2n/L20J945r
UPuFqctGqP2/Zcdf+EL4RK/revZT+SfEzar/luz9+eZkfyb7ONWNdU07c78K
xsc6lR27c44OjL1lP6tY5f9pv0/ZvsF2OrZB538t9f5JOn+vsn1afFnu9wGy
f+OZyk4KjvXBDMEKifn/ZKzPHHsRgx0DllH2PnHZJu2vVvnegfvopGt9Xf2f
K/ubyvuB/9ZT7/iNuqb5sb9FfPc3ZW+lPnZN/T6cKftG9XW46t9FnCF7isq6
y75T9lNq83rZ8dB5sr9R+Wuy95U9TvZX4CEl+zqP8bxkH6CyLtqmyN4k+42y
5/PxxOWyO2u/q7ZbZe+p+7NA11lX7R+R3ZXxUddTQ795dx1boGP/Jo4P79f+
bqHjmNqypxf9Dm4i7pU9Q3ZblfcjrpL9kOz9Qs974Cvzi57/PmA8l/2k7Imy
f5bdQvbzst8PjSs2kf100fhiL13rcPxVHZurYy2IRbXdov1bVN5R+4dou072
P7ILuv7nc+NW4FWh7Ody4xLgEW+WHf8t1XXvoPrn5cY/fgXPCfx+gfesVHkz
/OPc8f26ouPvs/V7aiSeS4npry07vluh+k117CKdr5vsqUWP+fsRi+DTq3x7
4pHceNb3RceXu4MPyL6BsYY5TfYrsgux38Ezdb6/td9RZbnO9ya+d+Jn9Qnj
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
              "]], 
             Polygon3DBox[CompressedData["
1:eJwt1nucV3Mex/EzaS6/maQU7U1UdFGLbvahsKhNWUpFa7ZHtiGT0sxUUtpM
d3LpTjfTTTczU6q1Cg/saOnyUMQjCcvax9Iq2drSRB672ufncfzxfpzzfp33
53s553u+5zS7q6xfaZ0kSSoom6YUJElhXpI0ALfnJMmFNAnrhxVgr/PnUzl2
M5aH1fCNaAb210ySNMZ28ZfSUP7u/CRpc5a2c51jL2HDZSfo8L91k+TbrCQp
xv6uvdXG0BMvktuCvYiN5zfxJ+U2Ypuw+7Eq7GusOXah9urEePTRHzvjvIpG
yu2ms7ExMtOM5VfGd1DtDnwgNhVbrG4h7TKeP2jvE7VLjaWbTGHcA5lRsmv5
G6iv+QzBymVH56RzizneGTnsPmwy1hJ7jn9Oe6PVVeJHjKWb3AV4PX6MXIFc
T6wD9nNsHNYAK8YewcZjU7G2WKFxvERdtHkVdTXO22QOOJ/tvKt+bpa/m39E
rk1O+jziuaznG8r2Ms/T2ltBE/SxW3aJunl8L31kYQkddPgYvxyvVFcpV8av
0d6/zGMz9gI2FluPHcMW6aM9leuvhbpJeGe5TtRfe41lm2Kz+Jm0EbsVm4g9
yI+jldiNWBm2ja/Rx5P8zlhr2r2Ln66PVnx9fRRjA7FpWPN4ttQQe1Ptm/hC
tW/F2sV+z0+Vu4ivF2sS649Nxppg+VgRVtf8z6JTxtID74Rfrb2/yM7XXkts
uPk+pG4rXhv3Azvk2lZ1o/Fnnf+Gqt3TS7BXf3xedbE7tVdPpoCWqf0J/xXl
8Nk0BzufP0y7tb831qS6d/XR1Pg2y/SP9Sb3hcxB+o/cG3IL5D7n75Xrgr2G
zcM6BpOfEvdE/bh4jnSV3ArsGexp/gTdiC3HVmKL+TZqp2MLsWXY7Hje1B1b
hC3H5vKt5aZhm/gj+r7SfMv1/Qm+TG4FvlDuOPWQ+8wcqrHhru+nY+7VGrk1
2HKZdtgMubXYWmwlVks3YVvUluljGL9VrkrtFpmJUa/fSx3b0otYH8ebsE6O
nalG7RK1j6mtUftKvKtyfbHH5ZYb82Z8h9xO6ux6EbYNe0dmf8yF36e+mbHc
x89U34HfTU1iv1S3jV5XUyhbo90n1L6CvYw1p1c9j9bq3lK/WCbfscj7mYW9
G2s6xowfkl3Hb8Uvc7ycHtXHYW0VY6NkvlT3AzbCtRfiXXBsQcOwarnSeL5y
7anCfEa69iGt4otz077myzUzxgbmUIWVy83Chql9UO5bfZRgVdGW2u+jP7m+
1Bm7siC9lwNkz3X9jLbuwUr5f6jNNd8J/JexH6j9X6xB18Zjn2N9sNPYR9g4
7J9Yb+w7bD+2CntGuz2xb7CltBpbjfXCTvLL6I/YF2pvxb7nP1U7my6gX8QR
G2wsS+WeUttN7ig2k+ZjtWpLsMbm1R0bwt+PV2ane1PsUQ/zRzPp/hP7UGu5
ddjAWB/YHXFP6HmsOC99H/Mcc2Ovxo5n0mfTUKaT2vH4n/H6jmfH+tLHo/wx
uaFy58j9Uq6IH5Sffl/iOzMo3hO+RHaRsbWjo/IL4j3VziTnF8uNlXsMG5qX
7oWxJ14WezG2PZOu2Vi7HekpbB/WEjvA9437z4/E12j/emrt2pOxTvEWzt+P
95LmYDuxn2F7Yn+hudiu+L5hb/NdaR62J77f2Hv8DfENwDZh//ZsqvkD8b2N
PYgm81/RNfJj+fVyh+XWYXvlhpvXDvra9TaxZp0/IFctd0hurdzbckuwpbH2
sQXYdBrNP4v3dp9uocXu/Ua+Av9A7rV4V2kAdju1wz/iT3kGg+M7mJ/uP7EP
DdReEntffvo+lmDv6XcD9aZbqERmg3Ybyc2VGxP7ntxR1854T5K4H/Evw//A
N5a7Vi5HblTs9fhvM+l7He/y89i1ak7JnnCtg9rjjrV8E7kRsS/yWdnpntwA
26N2r9qd8Z3Bx2KDsVZYD7409nfz3BDvl8wq+rXaSn4WXiv3IdaHKuK/R+0V
2O/UPqH2NP8dfep6Ft3hXjwkNyHWUU76rxf/fK0cr4n/SmO+2rElnxtrXj8P
OD9hDk1dm8gPzku/u/H9PS/WGv80/nD8W9F1+piLVWAz+Ev0OxnrmEn/seK/
qlHsAa4NwMpiP4n+aY6x3I4VyjWXm6i2t1wh9jF2CNuH3YZdFOuW6jvPqO2m
9l7+b3JH5N6XGxL/E1gXrA5Whn0mex3WNufHfSjeV+cXY93l6skVxN4ZazKT
/lPGe94dG4G1x66gnzo/F+un30H8B5n0fYz3ckDsJer+ZG7f6PONuIdypbGn
xX3NSf9t4x/3ZPz75Kf/tCdlt+Mt4ttBdV2rn51+N/8PORiNlw==
              "]], 
             Polygon3DBox[{{2955, 2154, 2153, 2954, 1584, 1585}, {2325, 2923, 
              1404, 1279, 1278, 1523}, {2441, 2440, 1659, 1357, 1358, 1660}, {
              2315, 2920, 1399, 1270, 1269, 1506}}]},
            Annotation[#, "Charting`Private`Tag$13753#1"]& ],
           Annotation[#, "Charting`Private`Tag$13771#1"]& ]],
         Lighting->{{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
       {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwl0s1LVGEYhvHH0tRSE1cSUQStIm0XlZpouGmKzHZjEkRfY6m4KG1RkiFa
tjaCWkSU/0DSToSxTcvMJj8mizCCKFtYRCX4OwQz3Nd1n+d9z7xnzq6zPW3d
BREx5ZvfEJHwtCwBTSURlbxhY0Qz3on36o/gWvzKXB1flg18e2nEcX4MX91s
zrp2fA234DPWdfI+MyvWdPPrfAaP6Hr4CE+Z7cX38U1rT/BneND+E+ZWzU/w
3a7lcFb3W07rHpuZ5f/4DJ+Xb/hfeb4I6xZxTneBz/I5fBG/xQs4J+8WRxxw
33f4kmtzclR3UJfh87xTLshDust4EV+ReVmney+7+JK8Z2297gN+sskzc58/
/GPyvGXKbxp35te8v1C6/oBnk/vyw66P8uf8Dt/PB/hTPszzzr1PN8YzPM3H
7DHM92yJOKcb4v28mQ/xavNd9sjobvMq3sHT/BYv5a08xU/yo9bX4wE8af81
XsNv8Bf8F9+RvAf2b9Ft4y+dbasuK7/zH/oK3sFXcDn+JsvkaZ2l8ZX7a+OR
Z9aus3V80fkp8VCX1n3mMJalxxmV9v6EPe6owIXJ+0nKsPH4abgxORNfci6f
OKWbAkUF/9/9df31ZAw=
         "]]}, {}, {}, 
       {GrayLevel[0.2], 
        Line3DBox[{270, 228, 2695, 867, 287, 2481, 496, 288, 3012, 1277, 319, 
         1288, 3032, 238, 900, 2710, 349, 788, 2635, 363, 2639, 792, 378, 
         3022, 1327, 395, 3028, 1338, 250, 2738, 936, 2739, 425, 810, 2661, 
         439, 1365, 3045, 455, 1375, 3051, 260, 475}], 
        Line3DBox[{1251, 1484, 1701, 1485, 3002, 1252, 1500, 1786, 1501, 3009,
          1268, 1517, 1713, 3092, 1518, 1956, 1531, 1718, 1532, 1908, 1548, 
         3067, 1724, 1549, 1910, 3135, 1559, 1802, 1560, 1307, 3038, 1575, 
         1806, 1576, 3014, 1317, 1592, 1740, 1593, 3023, 1969, 1609, 1748, 
         1610, 3029, 1917, 1624, 1753, 3103, 1625, 1347, 1639, 3080, 1820, 
         1640, 1356, 3042, 1655, 1766, 1656, 1982, 3152, 1669, 1771, 1670, 
         1927, 3141, 1686, 1777, 1687, 1930}], 
        Line3DBox[{1253, 1486, 1702, 1487, 3003, 1950, 1502, 1708, 3091, 1503,
          1903, 1519, 1714, 3093, 1520, 1905, 1533, 1795, 1534, 1289, 1550, 
         3068, 1799, 1551, 1298, 1561, 3071, 1729, 1562, 1962, 3149, 1577, 
         1736, 1578, 3015, 1914, 1594, 1741, 1595, 3024, 1328, 1611, 1813, 
         3119, 1612, 1339, 1626, 1754, 3104, 1627, 1974, 1641, 3081, 1760, 
         1642, 1922, 1657, 3086, 1767, 1658, 1924, 3139, 1671, 1829, 1672, 
         1376, 3052, 1688, 1833, 1689, 1384}], 
        Line3DBox[{1254, 1488, 1703, 3090, 1489, 1901, 1504, 1787, 3113, 1506,
          1269, 1521, 1791, 3115, 1523, 1278, 1535, 1719, 1537, 1961, 1552, 
         3069, 1725, 1553, 1911, 1563, 3072, 1730, 1565, 1308, 1579, 1807, 
         1581, 3016, 1318, 1596, 1742, 3099, 1598, 1970, 1613, 1749, 3101, 
         1614, 1918, 1628, 1755, 3105, 1629, 1920, 1643, 3082, 1821, 1645, 
         1357, 1659, 3087, 1825, 1661, 1983, 1673, 3088, 1772, 1674, 1928, 
         3142, 1690, 1778, 1691, 1931}], Line3DBox[CompressedData["
1:eJwVz61LQ3EUBuBXvLrBVGSImAaaltcNBrOwYhNcNCiYLCaTGEwmLQY/glos
DkSLf4HBNDAMRNElQVGLzw0P57zv3e/AZjsb7fWhJG1ei+RxJDkfTTbN21ry
puvbr3Rf8pb9W/dbSf4IP/qeue1bOLGfUvDMjq5G3Y3pseTO3JWnaNhndA/m
fplZlSvVpMqk930O9Av6pnkhX1LnhUNdiyU3nhj2u2N5nhW5R6E7kxcZd3eC
jq7h/Xt5r3zPjb2l75pzfHCtX2bPnaZvA7Mrdxj470fyJ/fyGv+bmi0e
         "]], 
        Line3DBox[CompressedData["
1:eJwVzTFLwmEUxeFrqRUmBEK0VUgILS3uRUtDkw5FUxDRFDk0NbUHQl+gpaVa
8hNILo1NghDxj0IjoZKCGoKGHocf5z3n3Pfe+Z1a9SAVEVW8pSPamYirbMQh
beYi3mU974bsiK5PRvzK/sYifvgUTbAhf6Qjsgs6aj5Dn/CMvPzevoL8Bif8
NB5ks/wtTvk53JmfGY9Ykk3QHv+CVTcW9dfeK7oCfcWmvE/Luj16Tjv2LtNt
cwmyZi75NdT4Bb5LG3wFU+50/TmWFe34wABbutbwjq6uK3l/4gu7uoH8TP6N
Fr+PfwfVMM4=
         "]], 
        Line3DBox[{860, 278, 2616, 768, 295, 2620, 772, 310, 3013, 1283, 326, 
         895, 1187, 2894, 343, 787, 2634, 356, 790, 2637, 748, 3018, 1323, 
         385, 3025, 1333, 402, 2735, 931, 417, 2657, 808, 2658, 432, 813, 
         2664, 447, 1370, 3048, 462, 961, 2761, 481, 827}], 
        Line3DBox[{1261, 1492, 1784, 1493, 3006, 1262, 1509, 1789, 1510, 3010,
          1952, 2070, 2071, 1526, 1717, 1527, 1907, 1540, 1722, 1541, 1909, 
         1994, 1888, 1912, 1889, 1303, 3036, 1568, 1804, 1569, 1313, 3040, 
         1584, 1585, 3019, 1967, 1601, 1745, 1602, 3026, 1916, 1616, 1751, 
         1617, 3031, 1919, 1632, 1818, 3120, 1633, 1352, 1648, 3083, 1823, 
         1649, 1978, 2073, 2074, 3173, 1664, 1770, 1665, 1926, 3140, 1678, 
         1775, 1679, 1929, 3143, 1694, 1836, 1695, 1389}], 
        Line3DBox[{1263, 1494, 1706, 1495, 3007, 1902, 1511, 1712, 1512, 3011,
          1904, 974, 1906, 3134, 1886, 1284, 1542, 1798, 1543, 1294, 2052, 
         3167, 2053, 2054, 3168, 1570, 1734, 1571, 1913, 3136, 1586, 1739, 
         1587, 3020, 1915, 1603, 1812, 1604, 3027, 1334, 1618, 1815, 1619, 
         1973, 1634, 1758, 3106, 1635, 1921, 1650, 3084, 1764, 1651, 1923, 
         1009, 3132, 1925, 1899, 1371, 3049, 1680, 1832, 1681, 1987, 3153, 
         1696, 1781, 1697, 1932}], Line3DBox[CompressedData["
1:eJwVzksug2EUh/EjcWmCgXGlenMrpYqWusxsgNqACEZMrMQSWIaJiYigkRJp
7cCsUxPxewdP/t95zuX9CidXh5dDEXGMwXBEbyTidzSiLx/GIx7HIrKZiGn8
8ZWJiB+9J36Nq6OGC74lt/Gsl5MzuLeTwQu3od5Md9xdl7vYwateXp65UZCT
6rKdjjziilwJU+kG/2b/Pc1ws+hyB+hyc+p59NQ5u235wS9wi8im/+ZP+U/f
FW4pvcnl1df8l2xyW2hgH3vo88vy3GxVDsze4JtvcyvcKqrqW/4O/1MSJ0E=

         "]], Line3DBox[CompressedData["
1:eJwV0LsrxXEYx/Gv3KMslMVA2eR+znErxyV3ynG/lDqcGMTArpRJnKQchclk
sZmsymJhUSb/AtPJ5PUb3r2f5/k832/f368+vZ/aKwghHCBTHMIzVkpD6MJl
SQgp3sVsNKsMYV3+hIT+WL7Dn9iS3RbZl91wTVkIH3wlu8aEPGmWU4/beUBc
nXFHXDajnkbS/B7L6hh+K0JYsDOl3sYkEvI7LKm7ne3kETtj/I5RNMlz6JFn
orvkW7yJBvOU+QV36BtlwzyEWrNTFHpru75aNshpDKBKdoJFdRvK5UneQD+K
ZUdoVed5jevc9ehf/CGLav0bn8my0Tn9Of+YHTqTV697Xwt/6fv4Bb34trNn
FpPP65vxGn0nr0b/A3P4B4OaMlU=
         "]], Line3DBox[CompressedData["
1:eJwV0D8oxHEcxvGP4k5HcYPBKGU7I0qUAbkUUSa3UFcMbrrFpJTJxClR5M8g
FhMDVjGZlJLBapF/wyV/Xr/h3ef5Ps/z/X7q2zZTmlioiYhZFOsiLlFJRVyl
aYw1RhR4Z8jWR1zwluXj5kOSo1tnUn6KJp1zXlmnlz9P32MOefkxirK0bMoc
cD7ER0PEus4GKujh7SRv0m+yYd08PYIcv9P9TTNj3wmvSz5k3mEQ7bKczprZ
IWvBk3danVfxqxPuFnT+6GbeCo7ojO4o/4DeR4q/hB96D1W637xBH75rIxZ5
VXoXr/a8OBfoa0zjXafM+5Q9mrd45mXtKSV/YOe23ha+8A8E1zcL
         "]], 
        Line3DBox[CompressedData["
1:eJwVzy1MgmEUhuGjQwhYLAZGcSNbndUE0+R0bLoZLDYlUUxubiQ30RlIJpPJ
xAhugIJOo43CdFDE4IaJEbwI957z3O97vp+Vw5Pt47mI2MLRQsQjbpIR5/hO
RxzodeRSEWVuwO3oDxjqXfnJ1Zxvmu/R5/cXIzrmP35D3mGeKzrLY13P6rfy
Q1/DqjnD1WTV3rO8kjlZ4K/li3tPcszvcRnzBZr8Mnq+ZUmvIK1PZApns/fb
+ZG7cpqIODX/uj+SbVzyYz7vueXZv9hvyS+u4V7J/I5XvOEfGi8tyA==
         "]], 
        Line3DBox[CompressedData["
1:eJwVzyFLQ3EUhvFzRedwSw6cggYRFGRlbHG2ZcPAoVGbIIrJYjItLS2JYcmk
xS2YBDUt+QFMszgtg8GmTX8LD+95n3M5/O/60VntNImIGo7nIp4wmo/YxgvK
2Yhnecg/YmjeRC4dUbJblHX+AYOUHXcpd/U79M0b3Ims6rc40L/dWEYXHVT4
NvbtvvQlZN3OoMhfI7F7c2cHW3oLPfMKX5BrehOv5jy3KnN6Ax/upTHjXsEu
kQv81fS/fBf4m/V2/TfjTfrIPOEu5Ji75/rmT+5c7rnz7uaE/5kmbvAPDQwr
9g==
         "]], 
        Line3DBox[{1387, 1074, 1835, 1145, 3171, 1379, 1466, 1774, 1676, 3046,
          1368, 1460, 1769, 3111, 1662, 1360, 1454, 1762, 3108, 1646, 1350, 
         1056, 3077, 1817, 930, 1342, 1053, 2859, 1127, 996, 1331, 3150, 1436,
          1744, 1599, 1321, 3017, 1430, 1738, 1582, 3039, 1311, 1040, 1803, 
         901, 1301, 1037, 1801, 3166, 1110, 1292, 1412, 1721, 1538, 1281, 
         1406, 3066, 1716, 1524, 1272, 1024, 3063, 1788, 869, 1258, 3133, 
         1020, 1783, 1089, 1949}]}, 
       {GrayLevel[0.2], 
        Line3DBox[{2113, 2566, 2567, 2300, 2559, 2917, 3125, 2590, 2568, 2569,
          2473, 3089, 2216, 2472, 2301, 3001, 2217, 2303, 2271, 2695, 2218, 
         2474, 2933, 3002, 2219, 2475, 2934, 3003, 2696, 2220, 2476, 3090, 
         2304, 2614, 2793, 2918, 3157, 2528, 2305, 3004, 2221, 2477, 2306, 
         2615, 2794, 3133, 2222, 2529, 2307, 3005, 2223, 2478, 2308, 2616, 
         2795, 2224, 2530, 2935, 3006, 2225, 2479, 2936, 3007, 2617, 2796, 
         2226, 2531, 2937, 3008, 2763, 2843, 2227, 2844}], 
        Line3DBox[CompressedData["
1:eJwNzTtOQmEUhdFDoSLgI8EJWMoQFChMTExojLWVjdJoIp1SIh0wFVAetmLr
IDQBtVFEUDvjKr7sx9n/vZvH54dniYg4wG4y4iIVkU1HPPF1PpDAUSZiYTmi
xl/jz31JPrGdY5HfoM/6ivu+fZdv65PooCeP6KXdPfryjZy1TdFt797xgbG8
pU/TU9tv3PIZNNzL8g+68gp2dBP86j7pi24VTb7kOwP/6slryOum+MKrfOXN
EC35zq6vq8oPKOhmmONNn/OtdfooF9z3UMRA9w8HCC6U
         "]], 
        Line3DBox[CompressedData["
1:eJwVzb0ug3EYhvFbQqJlQesrMRhMzqEtEjuDMEjEJAiLk/AxOA+Dta0ysRHn
gMVHwkKrFr8OV+77uZ7n/76z24erB31JVrA0mBSLyZM8kcdYH0ru+5Mj/VFu
mp/tXwvJKfdpvsCI+cz8YlfXd7kvjOoF3OoNu4ZeGk7G5Ln7JtfUy1xJVrhv
/ODNPM+X5Z73HVzp46jat/HLXeKdm8C+3kVLn0TNzZpvdHq3+OCmcNf7ln9f
6+2BZNGuixn+Ty6g4t2cbLnb4OvY4bbktHcPdlV9GTXccP/qwTCg
         "]], 
        Line3DBox[{330, 1169, 329, 1723, 516, 328, 1798, 605, 327, 1722, 515, 
         326, 604, 1797, 325, 514, 1721, 324, 603, 1796, 323, 513, 1720, 322, 
         1719, 512, 321, 1795, 602, 320, 1718, 511, 319, 601, 1794, 303, 316, 
         1529, 235, 313, 1528, 234, 715, 315}], Line3DBox[CompressedData["
1:eJwVzzlSglEQhdEmsEQhJlH5RRQcWARVTE6gRWjgtABdgYtQt2FO6A6UEBfg
xBIQLc8Lbn19b3e/oXJ9O7zJRcRpUj5ivBzRK0TsLUWc4S5e4R+N6MRMFTfo
ohgx4Ot2unS5GPGKfdkLVszs2B/gNvbxWO8O36hjpi4/kq3z586r8Y/yLTyU
l2Sb6rasigeyhixLb+Af0j34y++nc9QZzfkef69f5lu4hj/yrnxKE/U3dmi2
EPGsv5Lu4p/SW93zpS6rP7HojBo1/fODz9TvWMBVe/8KUyPA
         "]], 
        Line3DBox[{2141, 985, 1202, 1201, 3174, 2140, 1116, 2852, 3168, 2947, 
         2139, 2361, 3036, 2946, 2138, 902, 2634, 2360, 2137, 2945, 3035, 
         2359, 2136, 901, 2633, 2358, 2135, 3096, 2357, 2356, 2134, 3095, 
         2355, 2632, 2354, 3072, 2133, 2353, 2352, 3071, 2132, 2351, 2631, 
         3135, 2944, 2131, 1113, 2710, 2350, 2130, 2943, 3034, 2349, 2129, 
         3165, 1107, 1108, 678, 745, 1890, 677, 889, 888, 2677}], 
        Line3DBox[CompressedData["
1:eJwVzT1LgmEUxvFjENjLXLNr0BcwCXqooaX0sV1obMixaI+CqCkoaG/uC5T5
qKm9DG59Cc32rH4Of865/vd1cwr79fQwFxE7qOUjjuYj7nCMtbmIGXOAdDHi
0XuRu5FvMbSv8k98yb60ELGME2/bfINv8uvY5X7wzI3kU70XNOVMPrN3UdaZ
IOO/+HOuh+vZiJacoOL9FxtutPTG3Cb6em25bd9CVeeBS/Q6fCqv4HV6Wz7A
hf0N93xX7vh3Kb9jj/tDj//mr7gPfE5vm30+Mf8BmIoyLQ==
         "]], 
        Line3DBox[CompressedData["
1:eJwVzr8ug2EYhvGnC1U1GowdFKlTEJUmFlXCZhCt/0G7SSwmkWg61lBByxkQ
B+AELEVNqruT8DNcuZ/nut/3/b5MpbZWTURECSfJiF4q4gufWB9FOuJFHuse
uEeUkOcb/BG/OBIxMNdxaJ/RL+MD7zjguvJtOKIjV51bwT5/JX9Q5Ave2eOe
7WXvT8k2v8Dv8hNc3pwbitixT+qzuP//nu7SvM3PO9M3X6Biv9XfYQlzujI3
rttw50me8b/cFs7t33h17oZvYZMv+Pdp8xhmddeyiVP8AcnKKTk=
         "]], 
        Line3DBox[CompressedData["
1:eJwVzbsuRHEUhfF1JMQthpaGzi0eYHohmJFImF7veAAP4dIqUeA93OaOxmu4
9H6nWNnr+/57n7N0fHpQFkkaUo4nM5PJotRkeyJZM9flZCqpTydb3Cyek2/9
xtzg39wu27nFd/LkbZ5v82d4B/e8d/Czfq735d5bl3vhLvBAevgVL7jfNR/s
lHxR/QfvySEX7no0+cENeeSadvru27gpR1yLK6pv87/cvgzxEHf0S/1dWnZH
qs7/8Vf6RxXcxZtjyZedFe6TWzX/ARSKLEs=
         "]], Line3DBox[CompressedData["
1:eJwVzTtSQlEQhOGxQN6RpGAVpkoRuwMNrBIEvaiRC/C6F9kDJpauBEF5yRo0
MFFCvxv81T09Pee07tLe/U5EnCEtRexVIg7wxbdoDnkc1yLOyxF1/tvuiY7x
U414RtfuFG9o6C50JnwPc/uleco/8gsk2ds0j195x02frvRmtGke0KHerk4h
u5H9yS6RmnPmd/4KN3pF2SFKuDa3seTX3nxAovci++Q/+JHdCreyMq1gK78o
RLzKNnpz875/hnQjO9I5QTv7Q/YPQOQn1A==
         "]], Line3DBox[CompressedData["
1:eJwVzTtOQmEUReGjAaO8fMSCTnAEMgZpLGy0IgaQh2iloi3G2VhZGeJMiMoF
h6AGK9GCz2Jl773uyX/L7aujy6WIOER/NWKQiShmIz70Rz2Nmf2Ak7WIbfvT
t5F+zX3jjju272XfXs5FNOwvd09cIl/sHb4pJ/arLNmncuhmyr3pZa4l61zW
WznUuB+ujWf+hktxY7uDJpfn0lxBzrkubvUVLtHP0HK3zm3g197zrSff/Xsi
d+3z/zfdbbrZwp9d4S9kwu9zB6hiyi0AbMQpBQ==
         "]], 
        Line3DBox[CompressedData["
1:eJwV0DtOAmEYheHPiqsLwM4grVq5CDuMnUrIxE4FnQG5yG03VpAQQsSNWLkJ
xQX4THFyznnPl3+SOU66V52DiGjSvBjxXY64rEQsShHXfM4PqxFbeWb/tM+w
ez7lVdsUn8hvVNEn+s4+1hM+yjesYRvKAxrrJ/qr3HbT5yNs4zsJ3tM/8IwP
8TqWyi3shZf1AX7u/lnf4l1eyt/EO/ITFfW+fubuUd+4e+A97Ai7sf/JC3zP
Mypgd26+6JZO3a3tqe1dvrD/yivsh9ewZf5f6B8anSkr
         "]], 
        Line3DBox[CompressedData["
1:eJwVzT0yQ3EUhvGTjsRQWUAaaUllhhUYTVJoGGZCEAWNBZCb7yA+ZsgaLCGs
hSTW4KvL7xbvPOc877n/m69clM8zEbEj/bmIaTZiOxfxNB+xh49YwXVdT9b0
NVmVzYWICXb5MRbdPbgvY1U3xJJ09Pf8qZsBttN3+Bf5knf+jm/xBd/dmm+k
aS/a3/R9+wn2sMGv8F1zR5bMCTfSt+3H2MJFvs43zVP/eZZre8NedZPglT0x
X+omaW/+5z7wU165De/8cWfuf/GA25cjOZSt9D9ud80/+pq7b1zm6uYZopYw
+w==
         "]], Line3DBox[CompressedData["
1:eJwVzjlOQmEUhuFDp2BhpbYGCytNZHAB0tkQEl2AITFRkDXYC+KADIJaugon
1qEN4LAIE55bvDnne8/339z1o0blLBURFfQXIqbpiBkmOMxEHOB4KaLn9rQY
8Sc/oCt/6IxRR0lnxN/xj3q/Sc/syG/u7/jhauaIv+WH8jeG8o286Rv39lOd
gXnN5biCThGvfJ9f5q7cevYTbi95595O+mYeL3yZH9gv+a7uLPk/syV37FN8
yQXdPJr8M7fr3Zr875Yzd3Dhtu9WdduSP7GNc51VM4sVbGAOHmIvaw==
         "]], 
        Line3DBox[CompressedData["
1:eJwVyztOQgEQheGxw8cGRC3cg4kotmpJJCb22PPYixY+4XLvhdBQ0tmpoJuw
UyPIAjQxfhR/Zs5/ZrZrjWp9KSIq6BciPlYiPvGOs9WI07WIkdnTlc0DvOpO
+Nye8/3liBZ3zGVcxu2Z+3jhe/qUS+U5mlzOdbld+dxfyZzwGZ/wXfkbqdyR
d9w868do4EhO9O3FrZuZvYN7+VH/hDoO3bX5O/4XU/uPeYsr+xfe/F/ihhvK
FT8Pfi+4LXMT17qBrqTbkP90RXMdif0fUagycg==
         "]]}}},
     VertexNormals->CompressedData["
1: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
5qKfbm/SsYMgZcau0j95uBItNGTRQOr/XUU5968m4H22ziXOKg5XNRf+zJH9
q1yfqx/zcrH8/Olev1xHlPXJlbRtIfMuePFggFERpoo9vf4kxwIs6fQ5f+cR
sGY1eW1rZxlOK1yMvXjFFsx8XflUPxPAHRz26HVHP0a7SauW5HYDlcjkh2Th
KRDXsLtwvTMaHhbF7KFaz8XNk0vHn5B87rmsfbJjtxckXVXt42nOwESRPFNT
Mo8K8wosxvXmsMFjy5Y9DP44uHurwCky71eVRqR9NXuxpP8vW950DxxRyjsz
7TsFOiXDIa4HGpHxaVXJhx0DcC5LlPX40DR0uG7t1J9tx2uDsfnCvH3wrWB0
k9SnaaA/+Nw8b3MPMtjv3KXt2QMyiv06m7dNw82H1lyKsd9Qh8l7bNaoGapo
Jhls06aBq/ntJL3sEAo1LKzfZK0HwmeUo2d2Cj7deyQf7DmINxRXaAq7O4Cf
wusy9G0SNMc9lOMa2/D20EzVg94+OMT16+l7v2m4/nnbjpLLPXiXU1F296su
EAjMNvpiOQ1n+aQfXFL/hrYB0xV+dztAtsrMQKp3Ci5dvz1kLuYDAp4anMIb
YrBb3aV+iMyXcO7Pp5N23iDZTi2SoZCO/pylv06RffAUm2R7PnsZ2phdC0s/
HYvJe+em2EjOYTrQaHKQUoIFLo3aaguf0VRKuP1tBAF4vVWgS9AV5JvUNp+n
9kYLV9XtwmSclVW2f9m2yReI2Kc7ivfFI7X9xkuXyT5icNrL6+i1RuRO28lY
ZfcN+Gb8d1hSz0BzJ/NHgVetyP1sg8z03m/wuOXG3UfvpqF6jPu68dYO3EMX
Lj1yvh/GdnX80YBpaKBXj9471oUDpq9SWx/3Qo6qv+SdA9Ow0U99PvtrASTc
NWA/XFOFPxQ2r3nzkn3hnWat20ANfHxmsonpIOn7F3m20UjNAcNp+rVLo0VQ
LEbnev5qLbD5TTiq/KJAiWuOxcut9Wh8+WRORUEIFgS1eFNI3/GDt7Wy+0oZ
vla/pPySqwr3RU4afNlEwP7ol7/cx2twwEq3LNctCKvbb/UpXCbAMM1WKisp
FgZ57sQqzRqCGv3k2RCSVzn+zd98/z/zN//+5pPyEs2EurDC8IJMG/AUPcNd
Su5nN5ueM9bGUTi18n7HHsUofJN9LfPmPAFR/gMpF3xLsBE6CcmxEjTZbWj/
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
CMJmd7Mn74sTQdGN/9XqTLKOEtKWcj5QgCm7R7NA3haveOq9/kGu22vJCY/m
uSrEt4vupplOqGy0c7veUwIYPneqZ3uXwspEppofHSUYlGF+ZLcaASX8JZfY
tVKxTGtL4zGHHng6/vsm+81J2O673rpYqAIeF7xP+ObXBKg8o7nDgAr5K9iS
EymVKNRz6D53Ty2auC+1rS6nQoWX9tH8U2V46dSZYmO5Jnz5Sr6yyI0KAYtj
M8iRg7fuSuW7nE1EUa47T6gfCXj1snX6OMM9eHH6jd3+SR88+pHzF5XUZZvG
b3ur3iwGk1p27SKS99FLO17458OVTtN3i8v0nWo0fcjVulz40lTMXYWkHj33
rvYYA4kbM0ocrkluqJywUZR3QhtLA05H9JLr2WJz8FaHfzKWQ13maok0fJ39
3jiV5F0u7GHN9R6FsOVeCOeKLfmgyf93fiScgIJyOj8m5mwQLXg5/VAE4aJw
X9XmKAIy1DOrH9+6Q+LeX7qKT14YpXmT/Tr5+UceXHmtyBaL+HKgbx9PGl67
cjfjCqkXjs59GpR1z8DA+rpPQevL8Vlja4CnDQFTZy3Vt/hloeBDoftVTl0Q
Gsiqz1A6CeFOyrOvzlHww7DUlifHu8B/MeuVbcwksEQ8NdrJZomVl6s23HpT
ix581B+LN8j1HA/vFCiJhqdrznUob6lGFzOT4p3/eLgVx+05U2es9CvbplWS
Dms7zZrMSb0wKN47wPw4DOWk+jobhCvgrsBnCQ5HMt/UviW3bU+CuEPNMYJ9
9SDnV8MsQOKJ/P9Fz9bM/t5O8c7A62oR7ruz6+FrfmNB8JZ/57P1pu9/E4j+
K4+1jT+vwl97guePGvw7p2I/H2+lBegdDOi0qkkFk6XnO+ZJntPjflNVS8sN
nEXO9uz5lgTr7rdLdJL1W5Mh+6jZ2hJf+4vMKbwOh6273PJ/kDzcK/aM6KfD
b7Du0DOeJ+uK8NDpGscYkm+8uSXlfPOXP0QV6G+W2VCBWxulPue7/PMXWG82
tDYMFM2ksqlcBZh77jhLDdlPmwOcKvbyD6LKSceNOx42QuklZd5tKqOQueo2
Q+5MIypfDAjlVEI4+mnE7wfJt1npJXq+OrRDeZ37sxE6H8yUOvC0Aqcg/sfe
SzrrbEFG20Eh6nIEGj7J2aNBXud7Za6UJFMNNL5pkmjs4Q5Lya7R5WSe7FLU
XiBvC+qdED34sbwcFgIfqh66TcCnCxCdOVGH+dy5L17MlcFeztzva1qpUJ2t
fB9vZqFuvCnH3NMq0BjXPOGrQIA/TdcfX/Y8yOiWpda0bD4O85edsbyTCCcF
Lk61V5P19XLOUjAkGho3v2Q8fDgJefXW3ZGcJPuX3PFMg+B83PHn06Ud7qXA
aXz01Stzgsw3/ip+mzh4oX/hd+SGWOS1teuTpBLgOFUe3bI7HaLTp9I9Vd/j
tbWaPuafCcgcu8Fj65YJ1X+7rAIjKPggXPjzAV8C7u0Z89bRpMAf1rAbJ1gL
cdfLhOxDZP5f99CcW1NkiPZbJSI1Zq1hS9nSel+yjzjp8weVmPfj2dTHjsUf
mjFq1co5RvExiKOXkLlM6hE/fzFdSdswHJeJ3GVAXs+73mcrdUKbgVk8mi7r
8QfQCSgSZuybgiHTu5qSrOVYrGQqsv+mKeRcX8fuFUD2zahn2ydX1uEdraa0
Kyk3YMnVNdNdnABj86aPC5YfcMSM1e/khzQ4vIrJSnYjuZ4/K549TmlA/dHL
IT9dQ3C/0LMInfVkvvkfrnfLTkVTnS3GAezRcMwo+7X0GAF/As4sdWukw+GI
9bZ52s/g9RUuryVynafHu2L+fK+AB8pVEUZ703Einy+CwYjEf2BJeqFZBick
BNHZJwgPpa3gPkb2taYrOwYfslbBEP9zznPCjlib8ZDjvCkB2iyMfLMcxeDY
MUq3qJqAbduf3ecvJPXXF6+Zc/x5cF32SnxRiyVcNbcunmknYItVkHGhB+Kb
TT+fL561wyv3uN1+lhCQfTbqYmGUE+6oWfRz8v2EddoPmMd3U8GQ6Wr5n/lM
GJU+/17tbzdsEuzv+ftwEhTETANwXyOwJDaVJCs1QH/cB8XGbVTwXenVbMFU
j9mLW8vGTpZhGatq9L5OKnQFXxjiOliPiiPBtVE/azBwZvf5VHsqzDmw50lo
leHOiu4LRysS0dfz1ppj3gQ8KrH1nV+fgirBP8ZsNmfiqVLuPC8yryzmo9ba
N2fBqPCRLwkt0eDCsv5rTicBwzFdmfPpFEhRZ9/2a6ocGhKFxFeKEhBGp1Ff
8DIWup87c/h6+oBXAmvSA5JHdb2Wfx6xqRi9qG5SCsLpqLnue5QT2U/DP5ze
xcddBi5a8vcYhzNAVkBM3oDEw2Gup+7UGgrc2woWzwoL4CljmkyDJYm3X6xs
Gc9FQoWo7DnKjBZmOLN5nSTr3SVeJPX9Gn/se+90pdPYGfkfv2QoI3l+Qd/4
eo+0YrwQOc3DElaCj9SGmujJz1mScf3CHF0IntFXVRgzm6BmZ/ipqhQq8Ejy
xBnw70c1sQNPZ2R6oPlmdQq9wSQE1O+7+6LiPV5yntiV69KAS8d/m5r/oULz
jNbeZ/u8sT6+xvzQ50YUi9PgjyDj8fptm5m8fdB3lcXVdG0reMSe6FNM9lkn
PQXmLabvIP5ArhyzTR6o747lu0nyyb+8n7vpVPKhxnHrz+q+KtC8uO3+KMlz
RmnP7ziX7Ud186Aak5YNhr5p1o6SaILTRx7Es3ynQoTVxgvthdm46Nojzs9c
jUY/9giJkn3qHEYVLha/gHiqTXDGY358eehLbDdZ70dtYr5rcsbCkYauHEbd
HHgcd/7nuU8EHGw9d0Z9qxOMH4zjjx3JAsOAFgkg+zWx+nkqLvjgMaH2I26Q
gXPahWuKR8j838jDGRzqhRuVLozSR1MwbYN/5q40ArQ+Mh+00lRC+a+bJoZd
S/FTRlylRjwBzN0Rz8veNeFgPP/23sImoFYWZjpTpoBvfoVjz4sW0D0a2zFg
XITn6dg2RYpSQSy51WLieTgUTc6anThZgBKJZ2f76sk+W6G8K70nAfaEqRu7
uyahxy77mW9k379+au1pHo00dFU3HZxILAVRprWrHpB4mHH+2DHHoVLc5z5p
S2RWw56KBxtfMhNAUVzjcW0xAkV1RL+nhtVDtxhlOOMoAT9pzxNvL3ueGLe5
KX8hCJFpMJO7ir4Enlk40WtaEVAb8yxPOSwS7lw5wVpyqBhnJhZdv5L1fjvU
oNfXOhaPfPjpBkwU+GghyfEw5d9znOTDDq1WYGnthoPsdpjIu0ccyPti6hH5
6NZzT1A5xOsw5xiDghysezx/kLqg/xe3f8YQchfFWEbvz0Lmx5/ntouOgmL7
7rYY5lzM6rO2TpAMRI3+t6Z9ZP3eYpldWxfYBmPuirGKLaVwPutRlZ3bFKgn
Xe8f7MzClW0HmP+e9YLw71pbXn0hIJVnuLTkBAUvUhbpVRZjIECUucA5mYA1
N7mziu7UYsmqTPVsOYSYJRuvChKf5xhWavh0N6HrGU9t2aRYoCo/3/fqExVM
GMYbZZ1ykWH9dCTU5cAEy+OqiGySH5pfuv1+oyVGv6uRZ5J8haulLFnfkb/3
73r5Rw2vKuD5hOqNk2Ml2ED/5HuH6D+fmsvRMy9cMbHz7McN3F5gVT6+/RlZ
R7LfSiYCuarw4fFoO+e9+bAiQ8PTgcxzzeQ3Yb6iRXD1znPWQd5E9Op2LUos
JsD1cK7PQlUplJj+7hFLTcJo3Rtqt8l+dOGA6tuVd4pBzeGXu4FJDn58ocfu
HEmAoZ+xYt9RClgNvJtrYQrDSJXC8Kl/fkwHrpq7FmRi2dSUc4auB2zbCPql
gwTsv3FYI3ldIx4Pbb3DYdiJOjahs/u2TMInuY+jYXwf4EtPWdUD/wI4s1vo
6cQPKsTufn/5z95PYOPITnehqQJaKtiPhmdNwfA75akZk3qc3cE2Sz+Zgbpe
dgZi2wmQ5J5X9DvYhFd0Vf++5yVlhrq5TnEOFRyD1yu/YanF1VkMjnef+KDe
wIo3j24SIJfMLLSpjIKFz8YOVoXloPja4xx6JB8b/zqRN5wUBE6D55zyz7gB
C7+/bulvko/tl36VP0mBz2G1cxLj2VCjYuPG+o4AngTtRjOrQigpDo6cPmQL
GyjG7/7NKciYfXU5FF+BdPpK04UBkRh8W1iL8poAlST7IeeYCujICUrybo0A
ee6ELjlbAvTCK1zp3CvBvrbqQ6x1OjhxCj7m0yH15qehmC+fMkC/WFh4Y4AF
tgTYpO0n69frZNaJqWNewDy+Jz/wjxsEZx14JkHe94H66ZqWs6X4oja3ttw+
CzMMT3455Ured+yVe0rydjfDY7t46fNwayK97iD5e304NPfKtDRCqh/T6gSb
SqDktNH1mFFB63KCtvKRRhQsrpSMvknBiNU32z8UUKFQhDH1FWsZrtm+8Dhu
KBPP375/d9Ge1Ncpl0seUYvhqd4xX1HzFJg73ewqn0WAX42RbMpDT2D4+VuY
edgWLqzgEOYgeeb1azf4tdRL8MqejZuyJVIwZ6/v110p/+Z3NPOCrgaD+tfs
osV3jnDsjpv2HLn+n3Wa5i7XRQCHZKqGya4aEOeMPMl5l8S3ttnMi6MmEHDw
uZFMkQWYctcfDSHrxZ/mw2i7zIcxpaPUfdv2RBxd/6u9xboYHcROq7Pkk7qV
7vldsT962BiUcaUhzxZnRleH2pKfEyBzse4BRxSadB1Zw8qYhQGD30/+7CH7
clHEW6+SRNAqcP/ublGC0mfDJ11InSseG0lpb0hBOzXD7/UnKyFkqPFbP8mj
VtJ8FR3a/uOr+JHmq6icmVR+QDocNF8eoTszVYCiPvbyWqReSFTdyanFeQFC
q7et3uP/GEVVR1zmyOtxFGBXamJLxUVD67af3yLgWsLq32KkbuKh57ao9stF
tvn2g61ZiVDb3mPD1EDqJppPog7NJ9GM5pMYxJ7epPLVDydUvS7ZZrjBwju7
ZHMStwes804fSM+H7h9JK1r80nEWHw/3ILme/kkpfpttkGHkl6Wmtyko/56+
9Ya8nvN3H9pWnW3AUmnlkaa8BDS+fXD9p3UERGyuL4uTToexuhABgZ12kFnv
yV1B8kyLA7plNruzoC7i1bZrWi4gSV2bcI7Eh+nwiI56oUoMOZOme0U2ADM+
mKUmk/1ChDF0dYwgBRp0rdayZDSCrdh6k7EMKhyO5KjDrkjkYzjmxXc/CRmG
je8ITRGg3393cN9ACVwOFZwSWl8BtRvubf5C8mdHmu9hzzLfw41PzqZ/KopD
va8rj5W3JOGegAadJyRPjpsRZpvUisGV6c9fpRsnYMthXX9e8vMHj8KeDaEh
OD2JOgnTYfj4gMjI53mSh9wVUI/l98GELDYHPp8IaLt3gD+J1DsVKw4c2Jli
iK9E3z5t3oRwfcVb8TtlBDyg+Rv+WeZveGxEQuzlDTW4xqV4L+RyOVocF/AO
9yPAfft8LX3SfezaNHlUIK4Uv6QdfG0RR4AuB6PF7XvO8GVq/FR9zCs8ASLt
f8n6cio59yjybwU+VCnLWRNZCRY964NXrCIgsPcV+xHWYizv/eI7JoKwYNdV
GuhAxml+hXw0v8JVNL/CzW/eDbxQ8gaF0lPlmh0++OV8e84JMk+G9p9Z21ST
AMZLmqYeuanIptwhsXqYgCwn047XFH+w1eBl+3UhBNt7LY0+/TuPrufrw5yQ
dhgw3ae9V/MtCJwVDN1RNAWfBoIWPiZUIZNeZaa7lTOca2cN+PaMgF6X5xu6
5vTx/t42y/Pcipjk9szp37ySSOeqfdQQCvT+/r5/63s3DF1BUL+SPOr2SA/F
2bcC2K7EnLG7F4AiwzyaHW8JYL/Ves5oJBNTrSqqpC45QXbVifJJMt849Xvi
ORU+oH+5j5mHYyX6ru+aOx9BBYcdzte/7CnE+Vclyg8MSfwcnvfRJfvavd3F
vZfEKGDA6gf88zmQH7NvuNiN1K0xcjLM3raoq13U0ajxHKXNmPE5eZ2/9xl9
C3ySh0nbOY99CEvD/ti46L2VBAi9Psixu8YAri558mqwP4GOeGnzf+etNdl1
1xxvvQsTsHWW50AZGLjIhnwi++ywTkWIUacT0MVTOmYnY4FB/s+nq2SeiNN8
BoWW+QwG81/Ly+ZKwPU+ObNLylVYeM7hje0TAvhsji9IbjGBXXV7ml+ZecDH
tr9gR+bJ7BuJWDZqGFrqKNddflyA5bEFo5pk/7o3krvvjUoadHw2K8+wKcKG
fQur3+QScOBUE+dx+kS4wNq0wyU+C408zO8cJXWcnHbTws6+XIw9utZnuLgK
jH893aJ8ldSP8//xDSyg+QYK0XwDS4119S8bR8L3kr39ZwUzsVnnT7wJya+6
q+S/P0u0hww69YqV74JQaDj8oiCZbxk3/twwbc1Hvcstw67i0fD3zJB9eR0B
nsedozlPvkcl36jAnBuB8PacNHF/lOSHRn4VLvcrwP3zbIParfd4tzSJN/wF
AQ0Za3vdHBLxcXCwLlXSH5x+ajFEkdcjxSOpwRdZAgGSbU8+biLxle/hj3/n
iuS/UzpNFxGGmm/1PpftcIOrMrIv4kk91beFKyLMuBH36rl7nNuRi4VBPzuP
9FGh48rBQ79580A7bP3azcph8P7WCdFVrST/OS+o9MAsHnh+3lBd5HWH0NHV
CemzBLTse1N1+V0ZKv96bC/vG4vKswY31/j+O1/xbY0CJAJLlXPfZitXeKa2
s/zJzP/f7+8zze9vtEPuYt1MBWqZMxdqq2diS/fTQQGSP1CZJ34JPq8Ae9HV
u+M5MsDub+GKLrIfBX5izOj8REGuMJFsuR8p6P26G6fDyH49UpTyTC0H6Y0/
XrQIakLdwLHmujIqiEbFOPJK54D3wmX18mf1cPug1b1LrATc6WeabKzNRO2x
G4Pcd6vwgkCM5Tcl8nuNE27dWZUAOuHfv7HMFUCYyoH5u+UEeHiM6m4veY9j
P8tDGkPK8NSx0b4Jkj+8O2Giepw7AwPiefewj9ZBh887VXkuApKkSx9Fa6cB
lX38EK9qLdaPvgxYBQSkSd922j8djjLUmuFdjcXQw3V2Tp3EqwxRkTc/O5qh
Md5fRr0C8ZOI8IavJlQweHdgrbblBzwrbuFp7FkCf7L2Tvl1k/o040HRlYAK
6NqYuum+Wz6+3MTiH6JC9jv2WKub8hVo+HaG6qxQADZFEh/qyPiPx65iodoU
kFxQGZCgy0EL6drDCh4EqH8fdB10q0O38ZS+v4GxqHSmJqXjNEHq2P/4+hnT
fP2maL5+B+sfXt02W4Z7mj96/Prqiy1jfxx9/Qk4dbPLdufqSpRn49BOUGvA
kHh/yi4/Ui+XOt4cPk3B7HAf94SL5SjQpLxVneTzvaFtjp+E8wF3xjr87CoC
DVCRCg0i+9dGm6x6xyI826yz3fNlCbJuN8sLIHnm8Zpfa020veF0603ORoNa
dKwKMlIjP+dO7x/l8/Z26B7w6nh4QyNoxtj22C9R4af+cFvK2CNwffY5cSqn
Gqu3XXlYqknA8xHXfQlX1NCM3mzk3iwFDePpby+S/C3oUIQLc2ophDI8L1qf
X465bW/z586ROlrm9oI1dzFK341jNFOmgKOXd14YyUPebmqamftdCMEH7mbu
5aKgpB315FZrAhYu3XBO2NuEqu86tXet8gK16m3B9KQuGKH59I0v8+mr8nU8
ucO0GFY+qAj2K/LA0BE6G1Uy3/hoPn2yy3z6hLiVxpPJ+/s8pjYlflUhcgsY
Nj0h+eTLuHi3Gd4y8BS7tvWuTC7Q8bVy974ideVJhsqz8RRsnMhSvDqahTzr
PNikPAkw4vc/fmU2Dr+JJAuN8DThLMMVT+8JKjDmlPQQz1OgSs5S6kZjA9T6
3Eo7tYLkG0efGssKR2PU87Bq/z1l2HRORmqSvF+ufEoGHBVB8HaNU1MOdy64
jP8p2U3qUzbbYaOBtDj8JDA88fZ7Gfp+NKi5ROZbYsxuwxKBPNyxTmATylfD
nEG4KvUiAc57Z5S2vsqFpw6trkdf1WBS1vSEnwDJ00YkbvoopSLKeispclDg
95f0xwwkH24I6OB9GNIKer3iTSW62XiOiSnu2xEqhAQRl4cojZjBX2vlfyUX
qieCLpR1UMGY5rt3kea795Hmu5d7sqD4lmUVblcy/FwhkAV2on2FnAoEKGw6
8CTUmwIjAhej35ikIV/cDelT4QRQzj6xX3CpQnvd3b25SelY+lHmxun7ZF3T
fPc+0Hz3OGi+e9845dPYLSrw6kxKlePuBOxWOnu+j+SHbJMfOQc7KuFR/fa0
JMEEKLM4dd6U5A+q549p1HBSkO/exV67nxHo+sw8IZjkCScrImV1RtPQdDa3
7uF8G/LzCFXy102BpNpQ8WxgNjxa4zqw5NUE83c7pndWUUGAp7cvjmEY40LZ
dYMux+DlO3ncl9hHwYX+LdsZ+hZcLWshy3StE9cV3Ouc95qAdUKcJu8dSsFS
rldYUdgN2WHbL5+4f8+/3k30XK7D4KfzlEGfHhgaXxu9x2kCxpX5J54yfkF6
MRWbui+tuJgjJxYVMwYqHgNcm0MjoMvzr0egcTOysFhYRpE4rNgQxszO+wyO
edo3FSm2w2HP4xUC5PXvULjfxrNnCIVG1ydqKJehkEjyCo5Ho/CeZTGZq6IS
baOrLwp97MDxpDcro3MnYb/ZodtnU9owl15L0DOyA+9vmJovYZoAt4s9TjPW
9dj7pnE44+NnHDzNKfsrZBKeTS3tziV59ULR5jee2dlokbBfsInsU8e29hdz
lCG03e9tG76WBj+sf9ybI3UQB83nbmyZzx0bLf5lWVzpQGy4kGI/8lWdsHmi
9xHXqe9+ai86Bi8TmqwkKF04tr7T4ZV6G0bM/k338hgHYeva2/uG7fHHrLZ1
15tWnPqy0I1SVIjucnlsN5AGRwMnxI8pV5PXuTNhB5mHFfvY20/bxcPPJZ3r
HBdaoXMnx44+GSpwSFmEfz2VinJygfobic9w4P4hAf5HU7BnmQ9dJc2Hbhct
rkiLV9HiLYsBVuIpQ5hhoj4icTAPCxX9beTOjIIKd8Qq+uoB1Lhw39LKsBZ/
8jKxz60bAy6a39zqZX5zIwr/if/1+0+8ihavcugwfGfYgM8vvGwdUOlEFfnM
Eu8Dk+CSOqlRqFGIIV30hCy2oWTfKPff91NgeUy88GJhKcz3eveebk2G514d
1plkfxE6cmuQWSgXIj33atNtqgGvLYFHms4T4EvzgzOl+cE10fzgXGlxDVq8
mRaPThJvtdrRg+5uJryK022Ysz79oe+WcVhQ+71NavcnDPn72vF75Gd8yTkf
SiHrwmT6e0P3ti4c5Xru2pvbjp0HlSgThuMgVbL3B8dqa0x81RevPNaCIiwp
sfsfU4HrN1+uclkV5KzbsWHfljL8THe4QoWd7COsVlzpah8w75DoONvfDqx7
8tol+8YkaApXZOe860bN+K0CtT/aULuBc4FHaBxCM6s4HLdnwszar/d8bGvx
nktU8BN+As7lXTb1iSvEKdeNIte3fcbe+q5dMbpToJtNV//e8CPWR86He67u
RK6vt526isi6GNy57kvIEBoWmYdHKeUDO5XrvgKMwvllvlqnab5a//XbyqHF
z9Dihy+71Q3+yYB7B1mGeRrL0blYfm2SKcmfb2274ezch3oGrV8vL7ai89j7
UUrNGHylMvHlq1ZB2rGXulMKNhB8Z+W+SWMC+pOd2abyq4Dvy0Y++5vRIF5b
F0rRJsBA5tELxqpIWOsmQpfX0YSCzF/7Qz9TYd36L0FP3vRiiI/iut3Tn4H3
bk78ksAYhNsuyd7s6cdPKVkcXr8/wpOU/axP6kaB7/YFqcsqQ3hM2WT9QYZK
ECGMHzawjJJ/Re/rmtVgK13PTq7WGFBmLxouvUX28c05G3TrK3AHwaShr9yB
Ca/FbT73TsJNJybY2DyEe3gHA8SHXuDdgCwbpxujkETzt3pJ87cCmr9VMi3+
Ylmcz+D9lvLz+ZBEB2YsomUYn1B+ay/J5/n8K35vv9qBEXI3dc0tP2NVpr18
b+44pGUm6vG8pICK8POGjupSSF//bOq9IgGnJ/aye+b64oJ46TdRJx9s8OFt
bPpNwGR58ZpTTPrgzlEd+9o2H1rEuBx7WwiIIEzbLF3tcSArgul+KAXXyHod
1iT1oPGp6qacyDKsubrDY0mvCvyH7S83biL1lGpdgMGKWBgxbjAcSC7Hv/P0
m1Y6k3krve/bpogoyFpf40h5loSnk2OnUybJuqYY3RKXrEBZha9r/Ib9YWfp
SM0VJwIk15ziqfAqh9zu73ptNRHo8L6d8aMr2fc3PtYW1G/AbW+znRuXyhDz
RI/oJlMhRaWbqmNfAs3Ha/QEzDLggTJd1FNSP/r5T3/Zr1YFgXQmTmsO+sNp
HkPbZEMCrnvHacX+jkA5fvbGLRK5aCzEkfHoE9k3i6SO/1qTibGWmS+y91dB
65+10kaqpL5oyRnY4Z4MofcF5SvCyvFuazBlI6mvu0KLTfRZimGh7mVHQUMa
vtccMH+bReruV7pWmUyN2PXgJD9H9HtMfrj2xJY5Kvy5scibYZwFnMfsVv0t
9gKRX6oZZv1kX1g0bu8RqoKdLaYJR00jgS/Rqrmd7OPt/g6rLCYRwnrngov4
q6CdZ3P16TME4Lcml2/D4XgQGf0618ViIfuoX8p3Ui/sE5v1f+CGRemdIaEh
FJCWd2ecI/v+wmZqD/sjG1ihueZuvUUZ7oxIk9xK6p1D8/Qu2wSr0Tw9/IGM
dQXIzXXtekhe5601rvxh9O/h3Itt3Q/ky9GLcVZF9jUBr1zjwyYS08Dz3YDz
B4Z0jH4k7qHTTcCZ/Tfu1tXX4FPpkYPtTYvFuVuoWj0kLzrYbWL+dPc74Oh1
PqBEr44ntxc5byX1frzBatu1GpWwUuJ85J8zziiaS70wQvKZ4IBva3+P1GEo
OOz4OVqNmcnBt/QCqLA6/C//gWQKXOLtm+UPKoRtUkcX00heuoqxN37FNlP8
ddaNU8lWHxP3JPv+Oz9nb2z+O6OhNvzOc+ZkybtuqF2S6eMWGYelKd9Fi9oy
rN7CeWTLWDfU5LAFzuyahMqnyQ4Nfc2otf+w1d2Ibgg3+F09zTMBz6oc8y1r
bdD9bvdTdY5A2BGu+6ea1ONLhT3M2YsVMHC4ap7VpgxdONXaGQ6Q/NlKTWTK
KBPq0k65H2crxh2JeU+HkggYPvVU80FFI0h4jyfKfW6EfVX79xrPTcFpmh+N
7jI/mv/GjZbFKz7q1k7p9iBPa1iU37sOcDj9YcJCbQzYKL2aIXebUbS5Sm57
Yg8kZ4u4nF4aB/WR8QSdts8Ye+Gt/a9dXZBr2zpacnIcBlKzZE2lX8LXl94r
vsqEYvQ1Mf0/JA781y9miOYXo0zzi/lOi8/R4iq0uLrzHal7rI0gcpwNdcz9
4PT2luIURgKm7gz2rmsqxZGWFx5yxXZoXM3yxS6GAHrpmJmr0kl40/KFezdj
Om7rD4qSIPPfizZ3k0Wbu3lCm7tpCj636RS/IXxhP2cgtD4NEofsbtcSJJ+k
zcWML5uLCaP5jEyc+F+fkRhaPO/k/8Y3c+7i3xoWBLuKU6OPKvhj5IugIskF
so9cDc9Up5TBq8ds1nrbK5BdcdUfreME2B92UWs/VgFStRyTW7lKsIpn1mXg
OgFinzU2+qUj7ticSrgKU6Basykzi+xT47R5mdu0eZlftHkZ21X2NY/4fXFc
m+2PyJ77MC9Y86h/kYANd0/dGt/8Fv4eOpYuYhkIxjbS5nZkvr2gzXF0L/Oh
+HM8+ESqSj7cFr3h3321Fq06syfr9hNwP8mbk2CgwLGbRUIZrZXoH9340J+X
AEdbwaISo3T0Ngxi2SVOgf7P3S+qST1C7M/N3zhsDHGMAwNxMm4ovG5lW/sS
iT+0eY3+Zb4Sr6L72iQPZWHzheG/r6ejYONjoTmOHgKOHB+a2BKXhb/eZyuN
C0bBrbzKrYIkPvTS5jjoi/53jkOQpk+vLdOn/CjLWjuWBktpTbGmJs7AIvDi
l9QUuT5PBPiLgvww77jpSneLaPRWOVb26Aep72hzCuK0OYV42pwC9/M1bxZM
IuH6rpPOfBfqcOOM9K5rwgRo33a540fNgCpp5ZoVt2qxtGu/mimJq6y/Lf9u
SdBC/y5prcjYCFDlcLd4S+bDDM13gG6Z70AQzUcgb5mPQBgt/mlZfGdnt5ZU
vCYeuh619qKZFaRoHavN/Pdcg4cb10YXYaez3L09HvkgoiBWLk/q4kBVlbPf
uctQ5qrJUq4Ggr710/uEBgHWtLkGmWXzj//1bcdl+rH866MIN9FCoMv1rhFf
ZYOOeWKHgz/8O0fi9hVv7lL4cX6j4ILqG5QWVtF5SeLV94dCbj/8ET1SDcRO
mRXj7yYTz3A7AoRpvC5vGd9TWJt6pdvMEWV6728xrSrFL0I/BuLJet9K0zuD
y/TOSbOeoO9dIcCxe5N12p5ojAiuYL0xR8Dh4P3GiRGVEJUZH5nP5I/XZuDG
Q3MCZDXYb7dS0lH4czpvzQp36OLtZ+Qi6z0x6X6xfg8Fj66wpKdmvkc3nYuX
M0ier3L4K+Xu0H2QnzJR1N7oD9ru55jfkvWlXZcgK70/FQ8Wz3nCSBl2NS/s
XetCwG6arlFZpneMjA/oxr4Jg71X/9T5bM/B70kV+693knXtk/2uc34QD3bt
3yi+rRz5bOzl+ixGYW6+pjvwgxdaxnHaO1yxB8HE+t4C8nuDU3b0euqXoG6u
ecvUlQBMfeA2/jSP5Dm3VlXXHSjA3QJXqZvcKSgma+DZQfbZ//JA02U8cOi1
XK+JpiUUeR9zXyBKcCnZMT03h+QP+uovr7IPo29wz/Mt8Umw6xCn/VO6UfCk
6ZfHy3QNu8SaIoNZDwg97rB29VZPXCcdc+T4v/c8769h/NCfg1NS5xRip63A
YbFafqmL7O+0fdeuZfuuZ2UNHegvZoOOpei+kF+1uJuHXezaYQKuPj/xuHsx
Ect/L/CuJeta0efM4MEUsi+8WbKVTM/GFxu3vBT2KQWJeelMT3uSh8grvGh8
VwmyWheGfnJlo2/fj1G/+wS4faAK8M1WYpB9cP/r5hxw0g6MYSfrqDstKH3J
muQbFhyuJm6pYBnGP1RD4mEibb/Rl7bfOEnbb/zNxFT0hssH/C2HJaPya7Fl
OrJMX5KAgT3CZh5eDjguptmyvj8H6COUlKPI39vwvcNSsj0MN/Bp5cvNIxQc
Ko7TLiCg2S8q6s1QOYjObDWeu1iGcl2ePEF8BMi7tReye1BQ+n1iprZvCeje
/hqYpEPADX8le5vuCnx62GjCfWcRfDzimPZeluyztH283GX7eDw0PFRYhofX
wvxeugWGoUTUDsvudZXYoHQt85A1AWkW+5gShYthdenFQv1bNWik/SDIhosA
z416msdZs5D58v5zfnEU4BLd1R3qTeLYyQIxiVfFuH9oqoz/UikMf93YJEby
zFe0fS0h2r5WM21fa1XhEXo+y2qcXhnvJ7cnHQbZFRsG7hDgMZL9qrG5Bm1f
PdmY0RcKBca5NS63/r/9q14a/myn4c+L8yWKq/qsgVFf4WFVAQV0zq6VSv3H
S38Y5UafyoJ1Lx/zUI7Wg8YOtzJlDgISaOchr112HvIjGt+wXsY3LtDys2hZ
fr72PrikbRELPMGe38YEWyFvxYODp29R/1++kbFszre/7dcjNi0TeHo6fHzf
ZA32Z8QGbJcjQEIvPnIhLBYsPMxXLZnW4ha7dL6xKySPvR+/TqrnOUo7rb+X
458JDqJ1nFLDBJjR+MnUMn7iKDNeObC2Guw/bcbqqXZ4tY6RXpV1CgaXnQ/8
iXY+cC8tvrQszk2b85Vcdk5OHC3/lZbttzNPjKq9v14Kwa2K963aU8HLZb1v
SyABQmYfDq65lwusd72lZpM9MPlqTqBeBwECnLs5LzDEwYnkS20n+r3hXFXk
0nYSn598KrNjinSD3eEZD/SMbaD+kt8KH5InhCytfT8QEo0xubHKjyXKca0g
f+U2dwL0ehTphylv0N4gZeGTZRXukz4VeNWIxAHHI4LBwgLwjP9d55RyJmiN
XqUyjxBgROM5LcvmVf/S5lIVl82lDtDqaKP1f+rIjFZHZukLwj+2pKBJau3F
ucu5WBOr7tlfT0DHx0RXfcNYPPb3YMahDRRUoXYpipO4dI7GHy4tm3M0/0Z9
25zijSzZ+hXmXfnAzPTyyPcmEm9pc4hLy+YQjWnzj/7L5h91afUlumzfOI86
rTpT2YsP+8YEv4V9hmud0T3VAmMw5UZn93i2H3ljrreIp7TA7CZvofe+o7A5
ZEK+d+wBxuuumO64Hw/e16a8/s2hsIkIhXmP6uDT3fz3qnXCIPusqFMByecZ
PI/YnqiwgkpP4fgj49HQKyuaf+YnAVGPi6rZFI1Rt148SsPCG1x1Isw2k/ex
6E5Nq6OsHDL6jw0JFOlBZ4qazL/zdg6fGvSQ5y/CR17GDYtfSpDQW3fEhuwj
AXslV7Jdz0Hb/deilDP/7VOt4P3+koz3cZ46pzmE0spZSRb7KoCnxm3sy+ZR
kLjT/GWrghfUMYqsrEsLxoMjajzfyHXTuuR60l5dD7IHfbmJ8utIL8hcT5Df
W510+9SrGAoK1MneH9yVg5pNpUYzrgSpa89tU40vQU55S/5gRsQW5do5ZVIP
yuy5kFW0Kw4/i6/mip0rwyNhnTPe/55Pzcl9ybzjiho/BZ9dDy5DtQqGZrEQ
Eh9aj6ptiw2F5OmNCfeNM1Bu9tPa+0Mkj3VLPXonMwz2zT4uPGceg8Wd8QcK
ZgjI2SV2+nZWJI6dT5x+u+AIXucYY878IqAtlWm+YDEd7eSLfn9s8QQWtb3O
/OMEfHnI6OuhSkFLR7GU3xXR+NzUbUU2ya+k9G4K6SeVojXf2I6EkPfYGfHk
kg55nZLHTkzc3ZSL7RPRCr8KStFcQL9yC8kH2l+zUl40pOGDz8kb7IPKsWvT
i5UnyXjCEvsKNkMDsDdvLbOfsMHWyV3n3cl1e2EWKZal64kqP05Gxow6wuOO
bL1msr83K1XDhYQC1H6c+3z+qQ62p0a9/9VIQMtAu1k3EwVlg9UkHH77YtEW
pojWTPJ6ZLqAEhUMkY3fdzmW5SMvdWYklvz/JqFuvUvT6lg4e4bNp5KCC3dn
K/1IPO9kfeCSZeYLYhu9xir9ijH9hdWJnWUE1EydvEF3qATTWbd0Kxx2Q6OE
IWHzIvL+bvXpEzqSjc4cdF92nbIBP5FOpckvBHTZeAY+aSjCqvzMtX6Fj7Cx
z+0U/POVrpLYIksNBwXXlEUF8Uzct2Bkc4bUj9zcgseHNN5B/FGluAAyH66F
L04llRKgeNRsxelT4bDI9lnj26NcXM2tk8r4733ay/vMfK9EQE3itgKO/clI
ZQ56ZEHqi8+FHjxCq0Og5fVKe5uQbJT6qvDj3/5Gz7mhNa4BpSgapSjFa5mC
W4rr26QDCGg8fm7AvqQEHUXyt/kPhqIDS/jcv/2fU8e3f09XDgJxk88s87vC
8OxmpeI6su5yR34ExeuEQk+pgLrI5TQM5hlS+NcX+ozfU40+1WH507CKRv0e
2BDSNiPhPAF/g2aZtkh8wkZGmY6Jn92QLnZmytd0HDR8B47xu7eCDp9O5Lgw
FYPGjWW5UpKhVaa725x5ClzL/ni/D+5EXopE38yqFNhw5dLeha2TEKQ3RnnI
1gtld5VCw01yYCJW6A/372Z4JdVjMT+TAaPe+2tYgqjQrCUZxsXcCmJxufRb
V6bDqU7ByytlqdDjHTlK5S1AprXMMR78Xii7N1uEgcRDy2vE780JzRipkPE3
5nA4Rly5CiuKqEDcTdK4/OkZPBt36DVkNIaajcqm/87RFdgulWWv2ACr08f7
19zwBtGOChV3dpLnD1hWVM+mwe5h9QH1y+fg1eUWTzoqAakHfvk0RFbj3NdF
iy+DzjigK5I8q0niqm7rB0OzIhRiEP/55vZDrBOofGVaQ4AOF3sbB5RCQkDB
4xwtW8jju5M8lUj+/3ulLGlRCjRKhfyxM32Nly5XTDSReV4hL2H4cCwbBzJl
D57Y+QpPJTypHO8lgLPlarGMczlePzK4teeoAV6OYVRIInnUm45uBtN7TUCf
VC8eYvAJ/M/OhL6gnwL96ydePLIrBF0701B+3mJ41OuyR9+T5LcdDYxcMlXo
eGYsO8S8Cl96qja8HKPC64ir2if3leFXq7S1HSSu+rlrRQfeJYDvmLqmLUcR
HD0SwyNuVQBfBT4PHyP7tc3pS383fikHuhWGkgaKFCge/FSRSvKQRXdRl1OH
ErFG6UfqrcoENPSq5YcxAvwfMFR1pZXjL035b/fIPH1W1yjffZ2sO42lsX5/
XsjbX5NmkW0FO//4bs4n70um/7Zz/SvK4JELj0ysYTHIlivPaWiTOq7ZXGDV
lRiI7Hmivac1EKaOr6P/N1d++t6sdyhHCX65uS8eWvOQpXRRtdyLAIvGgVDh
igz87idSujE1EW8l/ox7TfLqCCuBoklhA+TLzksLrGqHxZV17c+ySD4j275a
t3YS/D+c7Hum2wXffD6uGeHPglQBO6GUGWOI3WRRYuneCcmpepWRO6fgmqia
aLSnFaomvHtL5iey9jPnRJL1m8JnostxLRGdzhctvaxqQbNzodE5D6jAf3qr
dfCAIzKbhuZxUKJRqfPb5eF5AnhZsg5FRCVCvsPFW1e6G+DI3u/cjHQEKFyc
DeHaFAr3wkbLnrAUgIz8yknpBgL0y9JvnrCLQfe85l2iDFXYpLr7yhUDAsR9
v7xldIzGvUp3NtrplKJ3sNgPlUgCuBy5Bc1fhMC3sRjK+5JiuG+ybu8aCgGX
TfA0658ECCpX6T90rxy0GWe5tzoTcF2WoyVmMAR/BsvYsX4keVHwqdX//LxW
/tpzS/2dM0oy9GjTt6eiWVBRigJBwM2nP7uN0+Lx4id9vodGFRguWioRSeqC
E98eaqz4ooRLFy89PnPAGqbjUlMz/r2v2JSXGRo3gFo2mRv4xMag9gUxpU32
hKj6uCJjh0G8xcUmdPjwGILm9VkJr1zIb994x1WnANfsDh/VfWsFk4Yj0r5k
vVeb3Umvx2bYd5TVkCONiqOfw1vPjSaDqGLumwcpztB8xu9K/InP4Ls5+cba
sCmwzn5odCDPGjYOt3s/F+mCs0JWQoMzk7C+w5pvkdMDBfQFJ/fFpGK01snN
68jfJa68c+WOfSno/xBMB460YvwJO+92aSqc5K4vlr5ihduKLm0LXBWPl7ft
05kj8zCt3WI/a10KCJxr0zkr1gjxW/SkdH5SIYz2nhjfsvfE1m8V/pUdFY/b
iUAi60gV6kms9L3+lABRdbWSaKdonL/evU6Puwzjji2cOBxE5q2JL9HCFgG3
SiMaD7gUA3/J5yvSJaQuUHOI0MmKhxzDxVk7jwp4G3h4m5wVAXIfhUzfrPHE
tuhKm5HEFByLjlzZR/6umJpenT+HyXrIO6t5eqYCU1vmeKbNCOiflhXZ4aAC
p9L2MRx/ZQQJ8u1KA+T9qvG7p7BiRQnktW3O7M39gIXD9ez0vSQv9Wev8mEr
BI+5mZiZVQ1YW1f4pmiUxGcBVYqzQhKu0u6XNttRDMK3VstZ5pN8g9M+pjc9
B3WOx91QU/oAodov296tJGD0+pmCX+IewFGkcOFuTRi2Bm/mukryMdfeqigZ
xUxYzZEyMLxQiyZSX1qeniBAo4GxxeGGBVyzWSdpty4ctUQ2+p4neWaT8BR9
9Fwa7r7E05EgWAUvphxelJH4nE3XHyrV4I8HipaYhhSzYDS6ffYz2d97r/Cz
iPkmQGrba/H5u6U4GNO1a28YASfXbm9qXRcJA7MxjD7SxejRyP8+nlzn+e9s
27ZWR2DcvI6DrVkevDNYyVHTTMAIzT/O/tH/+setFFnD8c8/7v6G//WPY25R
7ym51QpbPZly5yvL8EZpa+7Kb1PgFuImYeeSDYFp495qp5PwLy+jbmwLyUt5
xJL7Aupw6NJxru3rS2BV12mvP3+oIPDuEnsEyT9vKM+fazDPhi28eveVSD4Q
yJSkZqFTCqLuPFYNr7OxhuMlS4gjASqmqyIVJMugtGD9hYuf8vF0s/+eFlIH
TWctBDKdz8LXvEI6oo/jYUfasEQMqb/KVjxcKbKyHFtP77I5KlQItwkB83xS
7xw54TIo8CkYdOcb0jh2OuFd94jFD+T6S4cKF/fwlAE9a86Fg4IFyH+c092E
/HxNZnmnaR932Ha99jS4eGLQOU3B6+Q6nF60ImuAgiyN2W013LlgeMjTJo3U
a/o2arxz2Z/xjRsd/86wZsx+/oRh5NgkrKEIOt+41wx6bY1vKrelwTYrXZH8
AipIhCiLe7u0wmtH8/ffziaBYuKM2j9frZ3U9zbeV3ORfp51S1KHM4pepbcW
7CSv5/zK4vHWZuyPHzkvEeqL5XMhj+XyqKAw/S2mTdUEd6jdnL0X/QzCiNmH
/57jXG21sFa/2ADNseOKJVNvSVwQT5bcSsD7pUmGw1wZIFV2uPlwzj3MeEFc
YyX7ndNPvZIrQtVolth+W/LiSzxYNt4c8YS872VZb+c4EaPNO+c9dylAiPHT
TSdJXprMzZLIFUoBzynlKqujBhA0YZg+nk5Arc5W2czzZbDC5/hRVg4lnGFU
M/0dQeLwwQW6jZpZeDFq+G3Nd12sT9WVlhwk+0VyR+vR9nLkPbffMyHzLmzf
tqCaTPL5a9lBRnS/6uCthVCUyYpWsNjgazDuNQUP7hhrtglSIGZi5fWOE6Ww
93GmRYYaqX9Zj0X/yKXgL8WWGqaJchSUiL3Wf5GA1W/Hj8x2leGAQrGC2oZS
PP/SWbxPkuSxInpHxxgyYEAulNi3Mwd8njJibRWpK2nnsBUuO4ctsuiuRHhI
OfLP92leNaSg94O0G1biBNxSTK3rqfLDsuB9D2wTdXE0ftNGZzJPpn7b+l1g
KQX/xAvbskg8eWBgshBC5lVIge2IvEEK+Ll/uEUYR4C230Ti0UkCznwd/P52
phBX+AiqR7Hl4p3a7dtGYghgP4wZ+51y8C3x+97RkXRMZ6GePEjiMJ3K6UbP
2iC42KUx/EArFR7sFKm9Q/ZxrXYttd91Yfg0viO1nrMZS25a8z9vokK+2u1K
w8ZofCI//zxqoQiv/z4edIDEBzatPTVH3Z9iMvMRvVtTSdCzLz2g6zsBRz3E
Irt63WD37yaf+2ZG6B/DfKiG1LmbOjmoUhcpkPaH56OoTDOyOext/WxFBX0H
5ljFLCPccpvdIGkqAN1iH0yykOtwa6VYT+PPGHzJ6PQ4w6wUcjtswv4fut47
HOv3Dx8uLRokSihCGUkiUZRXKSQhEYmEkpmsUEayMxrKiMzsvTeXvffI3nvd
b0JFyvP+PN7P8Xu+juP37/nH7Xbd1/U6z/Ma56szDAPRiuGAOaVYsJZ33Xn/
fhnK/bw2XeSHAev+U0PWij1Iy8KVQuRSL2iV03gH103D8Uczd+rsKpC75d9P
f6pqQXqVtiOhjQSmOurXPB4Uw4Owi/6v1xoR1+kQ36tVJCi/riemJFkE23Y0
zan/bUAHzwXtbx0iwaILE5tjWjxaC+I+snK4GAr3uX36mYbBD9e9bPGauchl
jj+6NLwBLgVaN0/9IsGBPj7H8Y+ZIOtLyXrXrA7td5Fv9WbDAMg/LnnquEHz
93mopQpGqdgI6yheT5S5Dh+rzUtFBhyqFC0NVaBZoO5B8xCf54Q+2RX8v/qE
7u/Xa3Ni8cBYI7VrYb0UhRs5uH/9goG4IY1x9PtIuBA4NUR7vgj5fk8WsUYY
tA6OXxWICkfcn9ze783Ig9P+Q1ZdDRgokh2Lo+VLRwkqRo92utlAu805ZzSF
/47Tl8euTLcCddA7x8tCxeiBQbHVERkSsGjx/FASKYTn9j1zb2rTUITDNo8z
uJ6XcI92WdetRoal23bkzWWDG9NXexZcJ9upiZ1fuFiKmLpM+rvYc2Co0vdU
pCuGr/+shb8SuP6oD7o1IugHQy2OEn6472BNKSoOPViBmqtbOH9LF8AX+cJK
XXwcQmS9Td/pu8Alr8B0aw97+O4Vil3B69XT7a/X1fnLwFR9u4gUTR4KuEEt
fdUKA6PQdzQv50JAOPhctM2zMOR2tbLmBq4/m/U8P2YKFqMJXeM79ymzYOXI
QqNMCAbriYWtQ/3twMxuq5d7IAXEKdgbbvGSYHu0SHTOtc8g9lY3ksPXF2X1
RMnprGOwM5nHtK8rE31aPJVhQ+MFgYuRXFL476L/S43Bm6IMSbhx3lfbbg6l
x7A/NRE4L9/0737hkwYNe5wP/fHxhlNxiT7keP20G2t0nDzni4r30SXUX/qI
KJUDk2bwz7ceoi5LnkpDu1HAFfObWSh13+Uxk1oMYgp5BK8l1yCnqyKaT2or
ENkx8mzJQRIs7JmlvO0rBg3ae6dveH+G2b9KxvfxdefGupzdgvOZyw4FNrJd
aeBa0mHyMRcD3SL+d2ROcbDtTSjW4pMJL8YOx9V14r6yuu/C27dTcEPqkovu
oR60ly/xtzsahG26m30A3bf0ASSLGm1rhFJ0Jo1yvbdiGJgot0WbCs1A+cWn
vG85OpFfZUC/WkcXnLfwpmA5MYvz+0wF7YEQtDP9igrXcUd4T60jPITP/+2D
Eldyy0ZQpDj/357pMVQ6o5GFQgcgbJ/Jv84Dw8j8+omJbVlDKLGuq4JGdhzq
dF4ljXPlIJRPfmUWspBPebmFVAGuw/fp1H13yIGgf3tbdEwdUYLbBO8/nN9F
wzTt7xfhuj/pUktQ8ifw17x/mgfnCyWeFO7B6RSQoLI+VpUTAAp/xDhlZ3Ef
V8Td3ZvqB3VIS/B81HfI/hnn5Dg7Dw56r1/Jc48iz39CownjEyj2osUT0W2d
QPVvR9zbYzVIKMs5jrG4DNGm6BzNx3WL1aGFy+GOaVD21c3m15VZpEv2eWMp
dAjezyo3nRGrBDVRrYNXLKpg7WL5V8H/3iG+oje/NReIMgT/5TgvGiPeowcF
R/D5oDLSkigy0AWx5Ss7spyK0apq3vNRvnlYHd7EE8o2cTq1Tbzl4NFrx1Lt
wTl5QGo/zofdw+7XMi9h8IFqExcn8D4CfzYrfnvMMRyu8N6epeAbAnEyeaW8
T7NwWofCgEywEylRpOTwPO+D1wYFVzsFZ+CEuDH3v7cdyIpdIvyGbTd8+PH+
iKDsLOzO0muYftGKCnuFPupZf8f9f/iJXvs5iFlK3FUvGYg01xbeCceFwCmy
vZpnVjE4vtigMnenBUZ7m1YQfQiYamopudaSwHXefXAxJxJRqMv7zu58A1ns
8oLKOJ/et1xpYE2MAhN99fpl2km0uhiXe5NpAvwPST3CzRZ8dFK++qGvA+BI
B1/4yhz422lp9PYFoSfdC3FsxwaAzStCo/niHGTS69zc4ZgH8geaM+9LFEHT
cCCJHdeThkTOGOWWnLEqkZ7XapEloFBJ07xiUAz3LpxdNXyG8/6L8UWXqiz0
vqe/kPMf7otvmjOcrsOA74DsrbsnylDSKQOP3LBixHYp2KQGr2O1PX7XRSfD
oYI5tux1gz8kTXHakuH/1wmiz2PElj6PRmSeOQFDaqiEW6LE5mIPNOwahMlz
89C+foSBKyoYIfTrOpY1AK68WUpVlHOwk1m44fWHcOQlNCj6SaIKvdaNjl40
wWBUwDv5vlg5WGzrXrPNbUUiJ1xKXvOQQIPIAVvYkgM2VMxJ3cYUBztprrX7
v26CBMVnnIdXScAeIhnxoscI6e+vs1B56g8O0j3JQThfhzGTU7DIxyH2GSo6
Hr9aRBaWdktIDK/bPArl9D/dEU3j2GLVeAZSzdgZ/gPXb/GDn4M2FKPBJX7i
YO2vcuh8fF8iyw0DdoGv231fhKOFuDEn7uelyL9BLEIoEgNeflGNmY1yJOYR
f/N7UQ34b2/nuDxJgmv7REgncV2X0zRzN2FPI1r/uuBQ0EiCKiJ3a5bI3XpB
5G6ZaRWo6rLlINU6DuFb7nUQ0c5cVcqAQb+CoeAOpTQk7bdN5fSxMlh4Gv9q
6h1eT+ot6h7qJYD8naEnMoGlaNBG5I4w7k/3C4kLKo+kQfZOPXHRk5VIOVHA
vgufD/WvBXwfFQagJ27h6L5LBiSmkuu3jWBwoUW4hOZkGnIJNnRjmquEo3k3
r357itfnL+76+xY9wYwxRUnvTyh6fmrUNwH3g+MBshyhDzrA+a7ZZZ7lbDgr
2W5rsJME5v3KGJPPCNI0z9z3fngaPREkC1ppygY2IpeplshlSiJymeS7b0nz
lrWgX0rOUoxTYWhyvwLjSg4JPjSYXiUJVCOKk94MQmpeaHg+44w8rturdBJd
90MJ0nSny1XZ74dmby91CKTjvnW1xOqqGAIDPh7XxbeBQLORJ5qN64rBL4Gi
F2RrIH6KWUMy6T1IlYmsyOHzXHfHoG8ISw0EPlh5/+22B+z6k6zU9AgDn3my
wjsLFVAnlGmk9NAbcl9xKxg7435fpa/0gXQc8qsQ/Z2V442mrm98bVnCYI17
h5T7Bj7NQcTgeZgVEjjVyhKI/90cyuynEmerUd8tCQ5ffg8Ufm3yTin+/cnf
UCvW3fREXEmf3asvG0G9amo6F64ThrBBx1dOidCfPnuo/IAMVFDWnHyE69X6
460NRqJlqD3t59LjMFs0GCtxPAH3HRGeEfwBipWoc8n+h9U2KzR7kkxYxAGf
t52RukL9nXCzyEPwtW0e0vcWbq5+Mw99q0FfJrgbwfXVw6zzYq0gVCQ5qp03
Dypu245P3oyCJSmutGYHZxi80NxSjeuQSY7WP03DVUgtMwqZWlWhJ3+VX+WN
kMCMyIk6TuREXSdyomiwZaphxhSoeBTy0rY7Enzqy6OkcJ2W4LWUMEMqhjOa
YZEtEcXwe91hZzu+3mOncwf1+apAmnGh/4l0Ocyd+aJBRoX7hagfi17ThZC7
lipZypYBDw++P3o3CYPfSqxlsuPS6EYD5ZW8h85gTY4xeuHjdsRtR1OJbyaS
Z7kp/fl7FhIy0HxMUYr7rFntUA6vYlwZrMoPl2Sj/WxvFLxxHU4bmnHNiiMC
2Pp3XHThjIeGPrFFRlzXBd05+EPudSacvzfQNJqSBpUGL8uYcf15itDtmoRu
1yR0e9ZY8nrhtnbER+W1J12gH+7MuxQ3x8wAHaHnbQk9f5vQ88K9PwZI8wao
79j5gRjzPKTHJn6Rrh0DS0Ln2xM6n4PQ+XeL7ocXSzmgGqYn3udEcpByg6Lp
GO6XNyLZWPiCg0B6+dj7hyalUOf5V4EyGterPPIl98+FQgj90e3t6imQ35Ow
mwXXCQ1E7pD2ltyhifb06wcDolBH/+y4WG0lKuQzH/6L+zgqwhfIb/EFlwlf
wLDFFyTEy/rODnog7gSru/nvgpFb7FySH44/TGXV8hYdRS0MUTIKGwngK8x8
2c9+GkKotkVajU2hyX+jZm7Hb4Gn24pmL+MYtKhY2OQLfYdjwQ/FlLrTQfRm
fZXw1DzEOHFf/+TUDkN7W0t/0JYh4cFpNEGaBwUiN6mdyE3iI3KTnm9/Hnzg
XAVcf8qfJPsiH6nGtF6mxte1bktbibZACchx6/8kC8pAFjUPn7XgfMrLftqD
xTAfxb1WjNgnmA7HtE6UheH6s8+wrWXpUBmqom1WKrLPgbnt+yRf22HwSyew
9i5zF6r1PkFZLdiKkoKEPtQKzEGzqVPCL6sWSFxPzIh0SwORvIBPZmkkKNY5
2DDxswH06UTMdnAnQrL6ol4yJQZSkP3RhdQErs6vL2GubbCj23awWnceDIn8
ounJzfyiU0R+Ud4PzsaRgiy4p97+L+WfJjrwZeZJwCAGtnurfhtqN8CI/wmO
Q4c+wjbm6PwB/PeSOGwVZTzqiBj0VS/HXnkNY6kajBr4eml7+32iLy8OHWv5
rsrd/gYxsrE7OS1jEOBpYcVIXoL4uuMNDWzvwBjLiX0c2RjMEH1pTY5u9qVl
IfrSSpHYxIvPxQFz267y9qwCFP5okcuxBNf/Bd8yEh44oCjd80pcyoMgp/te
mWdiFt4SeCqByxC48fVf8UU7i4DFMPjR2wAEbcNWq5o4zy4SeUTiW/KIchpW
A67MxKC3+84YXFiKRzfE/MMPzuD81RVfP9VVCVRsgU9si0qhpbG8JYEVA4aG
3ok/YTkQcWKUqW1HFj5PzBpe52NQIWO8+oSsBBlLObsOd+cia+fh4aNeuP+1
0zKz2lGMHnadzq64nofue1g1H/yMrxeH69JnmzNhLFoy53JpEjz890hHtQ0f
HyJ3SHJL7pCa7FsfzPIbalSbYqA190P5pLm2ObyuGurznxKbKUFkQU/NvBby
0PDn2RXDNzjvdC+dYXZsRaUKV7LCNXqBLo//xjWdWVixdzmlsdiGZkXS1E9w
d8G6XQXf9slZcJY1V+85FINuVbpZBpY3I6RL5WnaRYK9cpu4LoHnE/hT5THa
cwLRaMG9/y9PagOiPuteO0aHwVkC7yJwGgKXslFcNp4PA8XTDfmJnKUQGLYy
Qh2Dzx8C9yTwLwR++uL3t8MvE8FSxsOmW68BsvNDbrYcwYCZwM224DP1WiwG
X9+jB9waNOqO8ehBalcuL86no42bOMOZ/8UjuzT6+tKTkGyMgLS1Ux162OHm
o8aHQRmB3ydwNQIfWtbvtWI3Rhrb9m0LPfkBLfJV0v6X02i6uImLbOz9f/Ef
BL7+VFb7cFoCLND6NP/Xp8NFsZuZDq8bl3U28d2HN3FnAhe9bGv97qwPdLpN
9gq3p8IXbc1dD/B5+EVkEw8j8AACny15cFlMNgYxKHfKJWeWobcU1t+W8Hl1
pXQTFyJwNwL3ilS7zSAahvtGhWP7mvPRwIb0eAfur5UIXIPABwmc2UyXtnR6
Cs2cDGOnavOGktQ3bgw0Y9Ce5CwSiM3B8bcmKnvLe/D6tn94N3UWdJt9F1HX
KAWD9e7tPBQtqCqhtv6RPQkyp+522i2WgmXZip0BakVG6+8uiQqTYI/iWSfb
+E/Q3jTLksf9ER23nTulhOtqh2uOHJnd2ejQAZYATYlqOMRo+nmvJAbUSQfs
XhXnIiM76qQ715rglbKqLHc/CY7ZxP9KXYtBN1ke7v/9vhSKLk40uIfg+qH6
ueOQfSSa1SgIG+bOAl8hwdifuC/uzM4v1CdPAZ49vYwpfQgddnNQPJqCgbjj
RoEqRRp4bNc0sLlZjQ62aO55rYSBDtVdw93jCXDj0vNfUhPliGZZPKndCYO0
DVOvu1rxMJZXebW8sBjlrNH4NCRiYJ54cFYv7BtSKml5sBGWAgvPT0RH47pl
t98h3nvnklBcjXJHJFTAuQPfm4fxdT0U5kxirkpE7yWdbVMWy6DZhztiCq8b
JpJr64Iz/tAbfaTbwTQdOfNaPh8fx/WDx30GzVoH6I15M8n7MAL9mXIS/s9X
Bk8IMQmQXqDzIzwSk/k+0GPt60iBz0PHtWqJdksPxB+z/Y+gYgza82L+ItlP
vF5xpab7TrdAAH+xyd3SFJB5nP1VOooEjU/FPzQeboFpJ656K/5SVHoufVIB
/x3pLek7Pj2qhlqWojGha1noXtssu/MtDH7YydBvRFSjsOvRtj3fCgDI2R7d
4cegFUiXZRaiEC9r7zM/x3igFFAcmcP1gw7T3zbnl+WgYpnzjPV+Dmo4cZVp
yhiD7zO/4k6FVYGj+KKjuV0Rov++9qRbCAPjr4tTNpcyQczY/vfkvXTEzcWZ
c6ce500jIx3ejULksDYdwZGYAsF1cb/3ZWHQbji1sV85H1HxeQbm2WfB1dlh
/WupGCxfsj2iviMcVSUXt4vlfQDB5j9p/+VmWFFWv4wqTQNFrrWTzQrR6Gaa
oKvJMF5X+6M/CTKOIa2RbUXFmVOIKni8TU4gB4KuUZTKq+O+b981rW5wQ9M+
98q9cL5TP7DnyNm5OqD57bAo3mIBO2Op3n0SxuDAI9b+m63fQOhSJjMrtQf6
rMb67iT+d/feebpOYVaF1Fn5xY7eMEOiTIjvxgtcJ3tGhZTKZaGlmECqZ9Ru
cIhsv6fY0H9+YdTumFEFqKtpBHjpGUA85y4eBU+8frIEXyznaoZTLCL0aX86
IE2p2Zj3xxzUS0+TB/ysgorOhVI00QzI9VD2lAQJWHm3bwhaVCG2EFefSulq
VKb5ZTQOX0c2XtXuFualiMFgbshLoATZ2Eu4iuN1KXVfo6DrQCHQdGR2JsYU
gPHf6Xv8eD3ZXqabIsuciA6bmZcqXk5Apcai/FcnMHgZZ5c6OGIC/yLF22/p
OcJD3WcN/+nqnj8Ut/bcjADm6zz2V3sD4fxxdPMtPg/lJ8/MHb1pgtrrZu37
2tOQ/vbzvvnTGJyhLLWwZQxFrUrJhuONzeiZ8mGhy30kvK4K87Y3eKCTlgPr
NAHhiFu4atd3fDy9dLKEZUOCgOJR1FPfxlx419MQ0or7iKHTluvUDyLQ+vjw
+naJKiRRdU+wH59vQ4aHP3rdCQTSgYNNXdYIXBkX1weLMGg6sMf6H3JDwj61
1zhrU1CuMtmjsnkMbhD91se29FuvvfrSS6bfD9jJq/Y+b4pCNNbJ3t9WMLC3
HcmJoC+EMzPfTw9TNqArVlSnfZZIUJBed0pGJxlJLpy8qHcPAY343Pv+NNyP
sFqcpC3zgTfUNyguR35D9LSc8cdxXZ16US8vjOIlcNQWWI0qf0XLvAGymes4
Px6OVHKSDkDPJnptPfZkwFSSYgDPGAZ39m8XZZKOQOHdAu3elXmgq+z5zB9f
L0/90ocurnfCn/Q1h5rZbEi5RHlE0mkexHoMSOGJn5D3537ttZYBiDbbndhK
MQcWhI8wJ3wEJ+EjfhHnAvuD//dcoOb/kkd6hdD5Tlt0/hFiP5+d2M8PI/bz
1f69HZM+3gzd1u4X7uTno3/6mneuVpKgbo+ssOefTCDPPn0qAtdrcTnfxjc6
MUgs4bqhr1CPZCQfNVO2IGDfWJQqxseZpWD/nqnUYjQVx0O1nTET/KpZtMaC
MHDmvjjYv78Mnm5kvVUszEJJ2+y378Tr+cllv0E24SzUry/+6KhnHJT4v83Y
9h33U8EhUjvvhIJk7kGjqfgP6BiNhEjJGgYe2ejOz70foEtG1Ulw3wckNHON
6y/OX3ZriRajnO1AR/1nhF4iCWrpGZgH5EjA9z5iBjo6ITf2bbLIz0yIFci1
BO95sDU89NTUKBdxNGtTbs/6hOrcn+UtdWCgukKrsK9EDjnkiL+Sp7SB03QB
LQ34fNNfow0rmE0Fpcq/gw9fP0HoTcSXIbyurvLnXk7DdeO5pzHuU632EJEy
mSCC89odLWaurF+ZqAz78yuGxhqxxXk6BeD17UYdxYVl2Wo48IVKqf1gEyxJ
CPjLmOD+gtDVSVt0dcDdQLnpyiqk0fjGVAH3d8+3bbhxz5GgJe2gj2pnGRro
pG58c6IEnb69EPJf/lvqpR1WNx4XwlSTVKrfqTz4GEP1IDsY552CswnuDXHo
20/12uWHMSi37Ei7Ff79xQWsmffqq6Llzn8Dgg0m4HyeWmwa/3/ptC64pqRE
Q+1CZ6LZt2CYn5b66YXrt/PTI2ZkzzPQ7I3YnKDpRHTUtO98Gz4fHF/J8Rmw
N8HjY+7lAd/yEfXnPlslXK+K92vf5SPvgvmjNKyUuzOA/Im9hokXPv6DP6vJ
n5XD+6xZdoH6EhizO62hI4Hrxh59+6PPy1Hp2r3P2VCCvK6eGbksjeu0+yt7
/syUwnlb97UDZghsnxbWSeng3wfVLr7nLkYZJCHqjuI85GpQ03fqI673jNLW
n9HHoLAzli9Zk9uQfc1BTXU9Eqj59SYJkWLgnn1zxd/5RlhrZnsgvAP/fx8c
pf56OQLZKL+RifxZgvbYdly3wPXwp+nLcsIXo+HfvGClXHg5KI++NZPH63/Z
BdOkG7PR6IhM+6FHshXo1Th3fwQ+n0UXp+QfO7YjtvPs4nHanVCl+XPhy89Z
iNx1xpXsQC5i8ewdp6qox9dnodje3Rh8k7pKvVybCWly2RMcKbVo8dWfTk8e
DBQ0kzwq76ehLpkzTx6fqYKqCaqOC48xYDzsmzdT3o68389/zuTogszU7Gyq
klkoIs4Tf5NtnidSE+eJ/9+5odOWc8P/2/4AEOd6XFvO9XS9uW5Y7elAnNlV
nxlYkuG2lCEdPRdeVwcFY+PelMHys+NXYnJzkahyHbOqBc6zaor/cpTLkZre
419LuvkwwlFz4awuBu+talSb/cpgW7vr0MHkPJSaRXtExhQDv71/eiOCW1Bt
vXwszbOvaPjXXoFTxSQ4KWaZl3OoEfgyL48k1n+Azt+nBt7RYyCoJJx4uqkU
6oTbyhwM+OH21QMYdTTOL1/V3ry1r4BDjy1o15RKIE2rRm1VFAPf26ISakIV
yFXfS9HkYzG6o7yfpu4mBrtmkJuUXhnk2d/45t9ViPuikpr/7mPsjM0yrNQs
RuMdwzRsh3KR5Rvd93M4/1bsEGEdYelAhza0H1i9TIO14xLkU8fx7/lq2jvz
+wiyMy+5at0+jCq7OGqsC0egKs369i7haDhwjsouznMENZK/Pj5JPgM9I19s
Ur1yYDb62Yu7sw3g02i1++JPvA4Q+I6YTfwTgVcQ+1RCxD6VDLFPZSX2UeC1
9BAq3yuTMPS4F12sU1nqHpsEbQIPJvA7BM613HfyqYgjWqURbPtqM4Lr5e3C
Akwz8CCrsoVJvgkaHpz+ekeGhLZpyhlIJNVCxz1fm1r7bEh/n5L4IWwGLQQc
DpR6PQy0Wj0H19sLoJy6xSWR/SscELx9t6wag6+7OabmT5fDh0nhgqyBanjB
aPjL4w8JOpd8JgIZRsBrdN/yzPgoaI51GKsqDkNhsOIZt4MjyGH4A1+/5jTq
bX4iGS/SAEyKsXtyP7QgO0rz6AfMDSg6TJIfjc/D3xKbQ7W/GwCVSL2xOR0K
Cp8Pc1IexeBhxUGj0AezyLcouUtu6jvcQ7P32fd3wewdXYUs0jRiHqfotYqM
gcesO4eeJI9Ari2P5EbVMEql+Xvl7I9E6MQWH+xwn4G2UJ92tqM96M94/o/p
tFR47D3OnsI6D++I8zhf4jxOiTiP8yXO454T53H7iPM4Fqc41lCZDGi8FGl5
fEIfOaRezGHHddq330G7BXwnwIwu4cOA6TDo9x0wjl3oA90Hbr43786i3b+/
VpN/T4MDr/jJye2GwJjARZc28cMELuC2+f7r6frm+68a4v3XWdsDu37ajyGB
f0xsWqaTiFnuxdC4SgOwxT1++fzKKPKScOQUjR5D0dplxl7sA9D3sYzx1eIw
Cjq+y1xtZgANamA79jmPww2LISFOnjZUvNCoyk9Wi9T2ZfrItuPj0ENlFPUo
Hzl01H25pJeP/FNOU8WFYeDNpOSTUJICFgVDAYdvZCFOmRiGu00YIKlTgRkc
I8gpq+Scdf4IumGV8fuz2wg8djH8YYr/XjdXW8jNW2JhwssjSsZ1CJIsuOJG
AkbQ2gWF2utGI+i4tUFH6OMRcCbG/xMx/k7E+JsT40O/vDk+e4nxmbj94Nf1
gCE0nC/mYJI7AxpYiuk/jSogo3j8g0U1BZrS+Y5q9lWg1j+hntF4vZqjLN/7
Q7IT3ej9e0uFpRWx5h97oqA9B6N+F8Rv9lXB7X3sZV8sHCHIal8LOa5juXsn
9umfyAU63hSKiYt1YO0smMh4DPdT/5zIP/fEAGtsuwlnfSU8D8xdEzDDdQVx
78KcuHehQdy7SBF8LIkGJhGvejYXp8xL+Gh3orlAbhxkzf68vPR8AjH8Lm6X
0A4Cl2latr76CXB2fxYi5ViLQqV5mGrE3yDtYI5d+2QxMBCLXFq3nUB7qzO/
f12MBM6jD7rMcybAnsAnqjZxGgJPjXdo+RCYCIF1Q5FiaRWIJEsV52mNwd9R
qcHCj4lQImTL63G4Ap3QHuq4jM8rSkerbU0xg0ixTTR/biwdLGh0q5bSZqHU
YRNnJnAvAo8+rloo5VcKuUoFrVmL6Ui9+kTgr/f4ODBt4h+UN/F7BG6dvUMv
/lgVcLPKpe3eVgFB9+a6LMkx+LDB+M7XrBTpsc7ayV4oRtUN+eZ1OO9vb1+6
sVMnDzrSBW8X7sqGrCZB+UVcD7fF8v+RyE9CI0f+npK2i0eV/ndTHuP+vfpw
d5AfvT+0aD9f3d5eCu+n1pL9/+srIeXf6fo6Dq2X716TaKlFWcpVJSs4XyxL
8UqK3oiBM8cOs7qNVMFbH1u5oqcY5AprXS4jj0B/D9S8Dc0rQ41/s0tK/DCI
Urzs3LszH31e67t3/nYDlG6b3OWE8+z3h357JF3SwOZuQ6zcwwrUQaksLGOJ
6y5B2Qpt9WhkytF/W5U9H3bxpo8L1mBgRMWrOLUvEVhPqB/0cixFUo27cpy/
4vzbJhJKv+IL5qM3yB0NYtD51jC/INz/Ri8z0UY9akZVqfc75ci/Ic1Hl5DD
NAm2XXtm9ZezBvbyCrB/73EHhyOt2y1xX0nHkpJhF1yDqmOfNlaxuSBycakh
pILBnsCyI/Nc1XCTt1bwuKUDLKwOqD00xIC62t3hnGgdikg5V+xYX4OoBTXY
Of1JMHvOs/osfxVIMIpaaqiWg5cd9aA8JT5/Asn277lXiuI9eFiXpRHyXbbX
NX+GgYo3vCrvywVOwad6tCeywM3zNr1kNgZkChJifqbf0If5I7Y7I5uRd5Y+
3fogCazDGe9K5iSgvfDvQuRyLeJJVSA/KoL7DpX0n5XKcTCncPZidE8VcOhN
lpto4/PK1r+Opj0SYePJH+69L0P/3M04rvpjwGGYsNfscDnoWbor6j9sQxxf
OT+/PEyCttnOLz4seSjjBWfI4+ON8OTNv587SCTYsNIOPXEvFdbJzLxW5irQ
o5YUm87/3/o12bJ+A2Y06PTTItARD+vniZX5oOnRujCB8+AS49WLff3JsIPp
nW7A9Uqk3eAiv4HrnK+uVfvzjtWAsQjZy4uBCO0R524fOIHrugexDZG15Yip
W/YF3Wge8M+cLb+J/1+FophMfxWCYAZnl/XkDPRqcG94aCQGJ6TX/gzSNyMN
SqqXne2h6ABT2ctF3H8thvabl6NyGLmvJux5/SOc+MJIsvLGwCyjQxeJViNr
ivTfWJALumXmJstngPOmxeOdWYOZSCi+xaf2mxNioRULCcF9ip/gYd9nv6rg
9+C9x23qFpD6kuzPPyMMhFU7OvXTqyD6eauC80IZJH7WrfXaj4EIsT9st2V/
uIz/B5NgRClqPqYuMy5fhGTuasY8wj+nhtjvVd2y3+u7KtlGx5QHt5Yzhkdx
/3iLTF9SMBeDM8T+7bYt+7c3Pc/R/mJMRJZ/k4/03IpBa6/kLzlMY8BC7Mee
2bIfe6tJq03rdBn0XtRKUaNsQ8MKc/6R3CQIjUn//YsjF12t9VaGew0QsWJj
du0vCVLunNiVQZYKQaFaRwqYKlAQfdOiqi0+b88q/F15koR2xz2UVjtSCb9p
X3wzxXmEJ7Bmd1B1IsgUn3t6eroCMcSzx29/iUFC5bPhOqN6dLDefHB/aAns
3qnXdHOUBPsU5w9p+lYDxSVP423HipFKLekr1Smcx+cztleLlaPD85Xb2Rjz
4cLe9BFafQzuLmYLltYWwXm22NwjHzOQ981tdd2xGPzwOmwtf7QZde0+f7VS
NRDtOpm6lLZCApu3D6Q53pTDRvWyYmmsGxiKiF0J9MGg9mTnksdYDWpREDZS
VdJHY1Xv5vyV8Doc7v/1GVs1XD4ir0PT9hA+KTa6bsPXryNxX+sWcV/r97nN
+1rLXFf4h6ddwJJC/tFFyxqQrxwby1LFQIDajf5XVw8yC+NJ8g7qAdulHzpH
Wqch0f3qn9vH2yCM9WSjsDUJXf+iGF1/IglUap4WeGXPAR/ZNsNX/3rRjln6
h5c/JQI78X4kkXg/0um3+X7EkdDDooQeVib0MGXB7bBXDu7Qm9VX7OxdC5+Z
7v1uv42Bc6Wsp3C8K2hWLfSYDEej8uR9uv/tg207Es63L7Mdpm3UdqFLZYjP
45o8La4zX1NyWUzS10Be9/GAE2EkJCXov7v8eh1Y1nzTnB5qhnFTjaKT7B1w
neYMc8vGHCj2ybfo43rhrMGDPUm3+lGFduS+T88SYH0gRuluRCPcfxQoqhPa
AlQ7DDWP1s2DMXFvyoi4H9VD3I9i6bL59KP/A6Su55SFnwlHg7k0sbmr+HgS
eS95RN4LIvJeShcvr+Yu5cIzQU2P5zer0UsXh1XRqzhvEveRNIj7SCeJ+0hf
CPzxFrxAKI2PTrwLvrz+cSLmXzpqKi/Oo34zD+W0tuPpMilovXIqfVEgDUVa
zj736cG/j15Rshy9O0od42qnfGmJ9uqw3zi/gX9/6+uXSfXf0TbRe9uY7vfC
WL67jqHfDJA/jqJU5e1An9MiJy7a9oF3+b7cbaEzcNHI4YMGRytKpLn0LlKr
A8SCw+J5yuYgnmbqKBNvATKZr5Xw5yyF7fvnnL6/wvk9+4mescVr1HIwxdfB
KhldMhMOv7GAQfbV7LGWPnuk0q2518/YBrU+KlV1wb9PClk6eYC2L4Tl9fkN
nEwGXbJz//pJGMgJBJ2nYQwAuw9UhzXvJCNlsXKujXkMlLn3qxwaakGLT8MS
NELCkNQX6lBSBgliAn7tnFGtAJK7Kud5lU+gesipIcYDg4XCLk87ymw0vMDI
9ErAGbXLaB++MYCB3QF6DjuuWdB48YtyoKYXyc9SkNPItgFrvG21fd0oDA3f
mtzR1IKoXPZd0XachOg7feO8AYloRCqZrZYsFR3R37ufa+j/3Ft4vOXeAhOx
D/CZ2AdIJ/YB7m3fdk2W2hmR8UkffKPRAx/NzO8YcszDqlSmZparD2LcgfHy
DAzA5T3LTid2z8FH/tgrQgl1UOt/40Q5xyjInN/eEZk0BcGKLUmmvXHIsEUr
o5+9HfUE7hA1VCBBNGvxPpefkSiJ2aqZYVcrusN4ZmdOAgmve0IqF0W+4v4j
90qxfCnoFJCzOsdgUMpQI/F01REt++VcjzubiBpMqCZu/cCAa16gfeiHCVqw
+e7dzeOGVlvd01Xw38vl1/WLyUux6BT1O6M9KpXIKb+mwBrXS3fvuKu0P4pG
TzomPwbkliM/vyeTgI//0hnF5dwHzWibWnyIjUkYPHfUe00/S4II6Uu0psyZ
ICC3GD9xMBEpllapN33HwP24/sqJkBoImz/Dohebha4Gmfdp4Osuf7+B4sTn
j7Ag0GT8vSAGRYVL3Li0gvMmkZMzp7KZk8NA5ORsp1LNM7+sjiIuSX5TYI1F
RQx5ZMfwejJ/illuXjgfWd6S/rn7Rzy0XN3wEK3AoDiRj8ZCxQew8W222UG2
iL8pSn77Pwwa715p+XY4ArSWQpjTDELQ8RRr7w787zYNX6NT6HIGt5aVF8ZG
k0jqW0WmS+04yBF1RoSoM6M6m3XmOHFv8yJxb3MfcT9THC10ma96Q4sr48aU
lDX0DgU91sP/7oX2XWsjpt/Albt74+R5M5T+uVJjA68zL4h3XrPEOy9v4p1X
uPKJlLf476fqYuBceT0JRZcLzdwbw6CHOL9+SJxTFxDn1EPZwlUe5T4oS7t5
/Y3BW1TboeXi9BcDf+Lc2ZQ4dw4gzp1p9T28v/xOg8vfXv76PR0PJUaSP671
/9dfcvMcOW3L+bIc8T6rYMv7rAjiHdbdLe+w3nYYm6765KC2IZbd/rKNkKe7
Jk+7QAJpIi+ockte0B/3Lhu3o5HoJHo3pCKdBwID73cl/XeP/dPUyOEPKVAA
StUt3XbopmOJRwBeT45yi5JEGnKRrZrGS2apOGDZ/+75szp8nsS/O35v+iMY
39Woovuhi8rXBYwy8fF3mnout4u6Eq3Jka6EGRSB+hHPXv1bGFgS+BCBPyJw
ip4ap8jBUkjcxl7HmJuHeJQ4LAVwXTHTvYk/I3BeAs/35+FuNWtFnzgrg62X
AtC/pGJtzjASiHrvf8d0sAW59GrWrsQEovNUUSKP20nQoT5b/iWsARx3tHsK
3HKB8GPW46u4LpUScHHT6sZ9czBXuYKoO4i9r2Xpf47jvDfOJxzNRH7x1GKn
OK1RFWLPWB7F/cKi3/FM13fwbn8Q/+EqU/ia0TK3DV/X7UhWfa96JGj3p1LV
khkjTSv6mfrfGEjb/ZduVows/jJK70nNQ1DlxOOCr69MsY7Y1/ahqLz5308o
z0WzDye5mVsxWPcwtTC5r4VSrpCWBXstkOj8Mboe/PN9PjQ31TsXwtR4iS4T
pQN8+GE3vAv3Uy8YBoKHaCvAs/Tc0vnz1hBu1ji/iPtNn69OKuqPKpDe1AUZ
bNQMKesf2TmB/93s/g8McsI9yDWYq8NEpRdi4rCL5TXT0MoPpmxFgcAq8qLx
mls23Ai36JXGebCB4iWPk3c4zL8ukyIJlQJVp7sdezSuA9+xGYssxEJ3RILr
Gboq+Nfm1DWF615didq7nDqh6GHyQBfF4XwULSAu1YDPK3qXMYMd0eZIsDb7
2w89P5SRTU5Zgq8X3t/zSQGzAcggOXGvdlw6alCnplvG151oRLTdziPaoJFe
fNJo8BXaQbVrtg4fhw/Rkrt2n8tEf7ONYppPxUNIxIU6xS6cp+7SnHnRVo4G
aX9S/Vk1Q7q/428X4b7g7eRL9f3PS5DwEe4HMom5qC2WyWjlLQYl85vvFsMS
//fdogWxn9BA7CccI/YTjPkO0BtxFiMdBbEj4t/KQDLmL0eqGq4nOV58CV8p
Ryu8e9zvlNaBb/fF2vw6EuhJc8kX90dBGK99ft4phOjoGrQn83BderlCnrU6
HqIt00xOfytHt3q8xPzdMDjGzG30q+krKn9vmk/Wlgb8tMr03hMY8A92pWy/
mYE2fnBFfBdPhPP2kixN+P8rdsgDm/UtRGk1tzpt72dCQI7D0KMEDOaoN3Fl
Av9K4H0HJTZS+CvQ02+VEUfsb6L58RdpQ+9wPjpuOXXhbCWivMnww49TBLm4
+RpRO2Hg9vpyq7hLBXLdk1qjUCeLLt1fXVLC+YgxiTnt8GAVdBmqZoyoVMAU
g4PCsz8keKLaOPT4STmKsRCvERArQfyHFqJ9pf/brwvi3fiBYE09bx8/eR48
PvQDY8f1udoV7s8XhjPR2TB+lYvXUtG6bWqdQhMG9ieeTtb9ioLvIQVZOXp1
wJHiuWaN85cbgfduwUN4NPkzGWPQl0P++sxR1eicf1qmHu5bAwncbwt+9VIC
NbyPhVu+egynzKrBrSl+ukT9/47vLXsRkPw+Btks0DiUOFaiiUB7tjTcB+0n
cLstuCDGE81hlI96lITWfSgaoaJqx8GcGRJ8UlZN5gjPR49y7YVS3jVCYK6w
3/dh3M/+O3yQ5kQGMP9+xetlXYUUfktJc+P+wpjIoWrekkN1hHHXuZvXU9Hq
L76DjpcrgZmKtGpvjEHHn50kyo5QUD+8uINSJx35/tKj38DrVcRFe7O1zzGQ
sk55YcfXYpTkuL5PMBXXXcS+gf6WfYN2Yt8gf8u+wfaXm/sGu3b8777BIrEP
QLZlH2C4QOAQK3cN2I28eGqLIcTg4v6hngkDSSJXymVLrtRL6i9KKWklIP1a
VmPPoxyUHMPigPD5VnDFVHy3RSsSq5dJqqYPRSd3LU+9CyFBFYELEzgbgS+0
5tmaU9ZD5weLo6Z1XnAphKp3HOc72rZN3IfALxJ48T2WH6HvylBwkP5Z5c5X
aH972t5vIf/lQG7ifV838X0EvhCv7axiWQXXHnWcUT9kDlZqlojyBQbTBP5w
C85RpOR4qqkKylToj6HJMpjes6r3eR8GngNU9Ulnq8DV8N09Dt0yOFo6/urC
UZyXr92Sp5ksQ5HOlXSeNMWoU3vXZMoDDB7135bNbKlANIVKN9/IlqCQLLbd
xSIYrDr/uXNCqwiUTfnPfpXIAXORgEezoRhknHoiRktTBr3MRWEWfIXwST8t
1Bqvz1ri/hvSa+nodsvbQ0e5UpBl2+hkKK4bm+mmyYwdilDLqbsu1zOzUMLJ
xUN0kfh6JHyxFOGLNwhfvF1t8x3Tuy3vmG7VKbgzvvJEA0kO0q49Ev/dUygS
wOsqFXHfWJe4byxL3DcOr9j0rf8qN31rBeFb9Sn7n+w9UAg1U3t8BOPnkWUE
t1xAz3eYk+3P0V2ehEmm4i9UlP1oWOJnt+b8ABR3bb7HN3u++R4/iniPz+jD
lLKujhBPQLOHnnEu0vaoHXz6BQPs3281p5U0xPlEuFk3JRGtqRjaJvVisMGd
eVpFKBJGQ6L0h/jykaZz1uLHWrw+Hz9uwEL1CrjGsmnimiPQaLR3PhWuJ+0T
uvT0VupBN8aExy7uM1SIWP0d5sLg8sO0luC1CvTmFe1zsXR3pEovMR3sjOsW
6ofWe49nQ9qrxCHeMxaQ+odjxQD3U9ulQhKoZRNhD9vLWbW01+i3ZC2XAu4j
eK/HNxYm6oPx7vHPWm5mwHDPgrwfH88oxnMXfa4mol8ND5wbL8Uh/2t8pK5J
3O/3oheVwvHQ8LSxfcOuAVTGfDiC6DD4qRlzo486HK6cv7N/p04laJPHJz+y
wT9H5W/Y+7BPyCokjkmnPhudbB7W2oGPw+L06SAqZUeISbaRM+T4gh6p0EVw
4Xy9cDOhOKksF1lg29XDrqSBrJC21asSDKqdvY6ZppagqgWJcSOPHCi5W7h0
FV+/PcQ6Ohf0v+torkywyTurEk37OZ1HQXrocel8xLIt7ncIPGwLzjdvLD7B
4IJSFZ0MDrr3g0j9SEKq1hyIEnkLvkTeQhyRtxBA5CqwE7kKcUSuwvuTv3qp
VZIRq+YZfRPFCggvENwziH9+6Oq38fV34eCfb8V/UioP3b0cInIL56M8/YMt
lOcqEW/B7qsmRXmQ1ZolaqWEgQaB++Rv4gUELqcd30IhmQWeaYwP3pgnovv8
MjUybRgEP9nEIXUTVyVwjSVramORSnQadop7fX2G/q30fTJyxKC7mez7E6VC
FJ/CNq2WZIvKf5hSNeN67/iumS+aNwtBNnzDV0r8EBSeOMQlgs/PVfsPSvc4
Y4Em4MUHupvmkM5YxrQdX0fst/n5Sj0SkMrPD2+6opWA46LKKuD+wpSNe5Sc
xwF2KegV5CUYI7HwB3u+4vNqp9vTnS2jHqice7v+xZBYJDJvnL66jMGA6yae
sQXvbBl/dtXbHSXu4+V4e9Yf5DIk/Xfj86Th/JUJLosgFDPfSG09kwFHdVM/
XRjGgJzQdTvT/lfX9RDvaq9ueVebeuWVBuf+YuT8wppfxz4bnQ3uSrf7ikGa
2xEvU6ZcFDHFXNrBnY7CA57nPSj57x3x5vcs3PI9R5ccv6AeH2RGI0dn1RQP
fL7r0RT4+kqduZA26VKJftk/P9EWbIV6Tp9VXH/9f+bhly3zcA+too1hcCGa
MkVHzq9kotsmtpJ+cbh/N5FsJNf4iChVc54psCegHoFDAc/wz/9F5DxYEjkP
0UTOg+sfc+eNc96IozbNyv9ZLMyu5iX7499zOPJeiXtBJpKI0zykrvYKdcol
scIIBjn5SpEa+/0gJI962WlECxp3jbNM4uNcL15lrGQQhkrvPeJhHChAr26f
PLBWia/3uGRzZSsXVGda9KNBJRbRUKVrvcB9N3fLg29KUZ8Rg1t6eVhNHDB2
yiYfw+fDsNc20am9H4HxW4Li86kopMdBRxeLzx+6WMFU3cJw1Js0ZNfwphgp
XPv3kzIL93HE/V77Lfd72W/5HWI5H4pCgpKSPnr4gdfKGal8vE6ySW/icSGb
uCeBiwapUp92KkPjXLOzhqMiMJ9yuUsI5y/juieWE8s96K6MxxXZjB6w+2vJ
QSqfBtaN63PuOyMg5QMrdShfIZqYZhi7Wo5ByvSZbFaTCsSTHcpBkfUSqVOf
uU2L+51I7X6bRLFu5H8QzozL9ELEi4kDd/bOwFxkieuStwacGDmz1svphGbM
bjP44vPQXM3Nt/99F8o2nHml1d8N969xnS/5OANhlJrRh8e70IK5VVqbVi8U
Pwy4rsg4A+ZiL6zKP3WiD/ApZjW9B6QLHH9U+szAiNbHL7+GfSF9+JqLOWcK
ilJvqQ2ax3lkVl7aPLkEGZmd1uh0sUTkWPA5aVyP/UpGSec9fYFHZ/D+QFIq
2gclkiYzGHwX6RKAz91IZWiadUmtF77L7crU+zENScT3WSa+Tz7xfZ4GmeW2
HQyG0uFvK9HCTaijk8e3YScGt4eYX97sq4CSqX796RNlYKTyl/XGaXycbf1z
DgjaIvlWCcrw4/j/9Syx8/T6HFBEfLUnK46BwqstxwX+4L5vQ1+kKBCDKqMW
B/1ZZ1R5KGmO36cQPfCxyYusxsCdtKf92Id4mGlj5SFNpCGb4DzuvH5cl9Yu
eb67/RkxXVa/9OdHJlwvYJwXGsJ1jk2MyTXacDgQX52p7IEQ9f3bbw0L8PEv
k3qwq20MraUypy0uxEBT8zPHKzAF8lG12qpxRQC6tKGnJRMRr3EHt2M2Bpwy
bLwyjMVAoah8aczLAdXeL+nxKMLg+c9Ul4DVaqCROM/49m8TuIcsJ8upkMDh
5tenNbZ1MDd26+wjpXpwPaC846Mxjne8IO2nioPam0+O6Fr6AmUFt7suvi4c
bk8ESylloUv8e0yWeePQ2t07Qv86MAg3NctUjo6AO21LRxPI81CTX1J2WyMG
16y7Nr5316DGKTfKZb8aVM1n0nMhiQQv6RT52KfykcEtfu4110K05tFtxOWP
1421tZM9o6WQ0N0K1LoIgmvpn+fpYKD4T2KXSroj8LndfbGR4AkeZhuPWv5h
8LhG1zNIpASleDK0hsflo4qjdRr/cL82fPCTi8TKNyQaZrOja7kF+eW/qbZK
IUHWBMeXDzcCYf8eVanqpSKIlZHNXP0v/2e/M4OoXDjKeD8cI/ChEDVMBjTP
lGHwWmrWu2WlCj1x/fvxZYYHUjM/Rv8c143WGuS+5r2O6MLk2qm00D4Q0Xtp
ohg8B6/K6vZfi6iA0XWzs9eu1UPJWHbCcgEJrDSZmYoNqpCH+EBgqkYV6g6s
d7WfJsHGMquKpWMMCjLf+HzMIAY1uE+0i+Pr4pTp4Zcvw4thXs1hzWp3LrCn
2j9Zxv37Vf2Maj2Fe6DrsEFW0fEZRWjfpb2NjwNrB4o8IJKIxLyFF92/taDF
Q7QxbRkkyCPuic0R98QOEffEapqsI/ae+YCeZ2a8FVC/BGP7Um+t4Z+zStw7
ZSDunRYQ904XiXtldlvulenVhdvNPohEo7a5P5KKKpCU4N3+lDcYKJzT6PCr
iQGBuoDgv0vFsGyo/I4t6f/kToxtycUykr/+eYDBC6lWudy8rZ+B/p76qU07
jsFh4v7qmS33V/+/e2tHt9xbM9BmXKGSjYYTMfGRZw2c0VHRAz5UvzAYzNKk
rfVrQKbDR9X3i5UA/X1LI44OEv69dvO9lIyHGzpWQZy8kUhLMrxXCR9/34LB
QQ+hMpg83bSa1pyLTpukK01b4XXj0JXnNxyr0dul5HtOAV7o9m1T5zf4/KwF
F4pLtyoBxTB9paHSgR6hoYV6BwwSbLLkYldb4as75UsbVIpGd3erM+C+QIXo
c00/v9nnWpLoc81J9I++SvSPbiH6R8/e3ewffdL2f/tH0zp5uRy69B0aimu5
NFdTwd6WOjtnbh5ECtYqi2K9kIVpp2L63c9Il1p10gXnR0x+s7/zPNHfOZro
73yHYrP/snDv//ZfDp2z3q0tnw7lWXwf7zeFoebMvSXxuI9WIfopFxD9lFuI
fspt4lfuPmBDKPX0X/WsSX+ULRM4no+vryXVG/fnbJtQTBu1/csfzuhZEkVx
5g4MHoxv9imuHdnsU3yQ6FM8G7vZj3igYLMf8UGiHzHb+q1fuWRlyMnyjZoh
gzXSTQtJ/hmBARl1drceZynMS+s5WHRbQInH9Ve7EzFQFYpeMssqgn1GThLO
v50QtSmL8FOcHw8RfanyiL5Uh4m+VBmqm/vhscR+eAixH65E5G+rEvnbbcT9
qzCif5AE0T+ohugflEJO7XRBvwYdLeegK6VtgXJbyzMveUjQH/X7PG9iHfIz
5p+8zdAMNpp0T6jPkeDSiFRPjXI9qPg5HQi+nQDO67mZDRy47ybOI2K25PZ3
D3UbKpfVg05xkVw20zfwpVYdD+XE4AyR4/18S453EHFvgWfLvYVZIs/5LJHn
bEDkOTcTOcAJW3KASUc289Z2EXlrxkTe2jcir3VyS15rGLE/f2fL/vxflc38
Um2tzfzSHiK/tJbIC/1U8L95oTsKN/M86Zz+N8+T/Dv7gLlhJczO8AVljNbC
DxD2+lRFgoGJbaLOA1Wo/fs0kwF9FZI42HPy4SQJ7pwSv7SWl444yuqs8i9m
oI3+uKgVXFc/JXKWPhA5SxREzlJqgSTPT1IK2i514wC7czTKS9e49QSvS6E9
QR7dckXwyJCOef1gDrzrZDfqCMPgbMefO++HPVBcmtOuvE9vUPTjcp0FvK5q
ETyVvIWnFvq/DAWoR6Bn3WuxrysaUQr74YM0FBg8+8Jtx/rdH6LO5mroiWfD
i+8j1bG4D71F8FTRFp6id7Drf11WCj/SebmadrYi2qeTfir3SfBa1saiITIR
eR2Naz6bXg5WNKnCV1wwcM2v5W/7Gw8R/hhF5XQuuh05XRuI+ylZom9OxJa+
OYfYbrZFdmciFReWkCijGmjwr/p9WhQDv7Ynq67fg6Gz8eoznefpqL9lLi3s
v3OifJ1RertYlKLKPqvHWgKfWum/7UzAoJDoT2G1pT9FK9GXJ3RLXx4zIref
e0tufyulxXmbPfXwIVn9rlpgAXonKNjjg+u6R1ptTtLRCUji2Fcr88lQkDzy
XjiFhEG2733uezl1qLCUd+CdTjFc4g501cT9L5Mcq9Cz8lRETh7x3DM2Dp5Y
7EcMOB/x33/QfaokF8YuyqWH30tFJb+yDN3xcS5civAzzSgGUvfnWY5/WWhC
yirRHdct9bGrTbX3iqGRQe2C+itvoG9ePJKQj89zJ0825kf1qNrifOV9MX/E
2Hz44CAfXj8j2h3dp8vR3DDlnMoVFSj4s/x6Fl9fO2mF2+ZPVMFDfp3Qx4vG
oCOtNH34JQbiUk9/VN0oBMWd3mee0fuB7Sp2jRdfF06EPlHcok+6V5bedtZX
gX6g+q4wpUaYYSLLNXHEdVeqikmOdSrqN1GUPieQhL6wXmz0HsCA19Nw+36l
ImigkzTlNcXnW8BiTABez40epj7pMnJHpq9ffJtU6wdfffmu00Zz4Mot5+zI
EomSLpVYLsbVoaA3nz/yCuF8beHKX9AcjXT9+NScbarQiW/0ZuMGGFB3Xp/Y
sP8KBoN5h5KYM+DzMT01S5xHHhK6caF1Uzc2E7rxBsGPPXOb/HiT4McDBD8e
JvixjeDHcr5mqwNSLcB5cuXIlHQxem9aqXvbHddXCWknTW83gHj8L4E5zUKU
EneJYpREghN7NvnudM//8p3Xq3orodMV6J5bhc10WQHUHXEIDH3wX1+bIZbv
59IQuyFj9+X8OOCWEVWlw3U7F8GDHgQPthE8uJOV/YWKUSeQi9pYVaqkw50z
N6gOJM2D4Vrlq3znQhh1C1mUXfsElhJUKpVV+O8V7+mrbFCHxL+UGxgouKC7
3u/3KF/DQChukwfLCR6kJHiw4NyzJNHAKpS3JOwo2WyCbj00f/7UDINPsKdH
aWczEvWHy7lVrUB1ZPEduMzDJ8KPLG/xI6kEv1wj+IWO4Jemj5v8uETw4wGC
Hx2nj/MKLdZBwvsXbqkFLZAm/HeP+OI8aBC+6c4W3xRHvBdj2PJe7K/wMeHB
vi+IO+UGrfz+MvR0Eu6cDMd56v9yftFKvNsS3/Jui5PgO/0tfJd7cUz5m1AA
nKzeL/dHLxsVm2ZU/8LrBh2RZ4K25JkszQfSv1ioQxJvd0t+u+aD3ETbw2Mu
YjAku1Psn0wU5MW7TP3VfAu5HGc6/HA9OU3w1MHC/+Wpt0TOhtKWnI0O0xO/
OmwQGKf4zP59UgSNpwZ36OL1zZp4JyW/5Z2UJuHL6ghf5kH4sgAuet5m6lzw
+/Sx9368JWr6M9Vl04X7O2+l3HArb3SO6xj3C4Yv6HUpuZ7AOgYuBT2SEX3l
yIlz4iVnajFiNi194CWN6y7Cx+0kfNwfwsdtaz8bYypwEmlInDJautMPLXer
k3aazkEe0R92dkt/WEair3ddzGZfb3Kir/d5om9sPtE3to7oG7tI9Id13NIf
doLo361H9O+uIPp3ixN9Y7u39I19IG18z+pbBtpdPrvzplAFbBuI+hCJz39j
yqsK9n/S0fU9143Xq2vAQ+xcsjvOU90K0RdOGWch7fdxHDOn0mCli/dGdR2O
O/g82xNVC4yurE/O4zrd8eCQ2Ke2edAi8pootuQ1nSFyjRK35BoNErlAFNs3
c4HMiVyggZOzBs73M5HEnysPNwKrYM9tmTB9JZz3bcJVolZygdsX1MijXkI0
a7XBV3z8XYhc6P+nq3OPhjoN4/jpmLZ72QhtlC1TOhTTrmpRjxWKPScka5Uu
UkhqT4VERpKdJHKb5FJWUXaVVu7M9DIzwrQKU+SSIaHONjOrqVNb0b7OPP/4
/f875/398V6e7/c8z+f7FYMLHV/Nu7QlN5vonc07HhrOJ2PmJrfW0TrZA/nG
EQy+cUvqxaGls9tAX+bT/m6rkKQEz88x+V0JkcjfWG6l4W9YIn9jO7vPNHJn
B7zNina4olUKv4lf9gsGFfBFrheWEX0DUh+Yzzgyww8U9jPztem5W5Q/tr1z
qoAIZvHf6Cn8idPHxENCuu4Q8h9skf+Qg/yHA7Zbxx355eSEcvrw+vtlpL0o
WKeK3ns5PVPyrgfXQ42Pof/uN0KoTFbz39P68NLDsDZTz7OkrMkjLaEklDi1
cq0n5kCrkAPswuAAyzAvfh4jL56DefFl0sl58cXIy+0TTOblKufwLCUJ10Eq
91Kv5VSTTWBTYUvPr8eG8iT3sAZwXqtO+rpIQEor/20kXiowMT/m3hv3B5w/
VbNItfYRSNyNHFZN5E3vnPqrzLKABHkOhBrLxeT74paYVD6tY9dY+72WVRB5
pE97SUozfGvaa8H/gf4nctSnMTjq0zJObswRPyLbnjseSfynHZakPo3ixCnA
LcxtYTg0kKyt/EB5XzrEx7vOvErv7XDkkAwih8QEOSQK5F38xOBd2CawGopf
1BGO6HD0q5JqckJrSXdWEq0DsU9GyuiTSUYurhWDi7sF+a7bGHzX4+i/CdB/
60D/bdjtYv/MAgFEFbjsml7WCi2GeZzGYiVIUGcNfdTorIeosx6gzgpFnVWK
OisC81J3YF5qIOalBqNvpnNX45t1oG82lm30JvfHR2RXoMPixW0y2GsYEbci
UAFddsF+70tuQfPf9v+J6ftvMC9Ix5Suy77fui82RkKunR1NrttRT6ITrysu
OFO9+fMUa2vuHXh+0FDLkUhISNDFQXUs3f/lh8KeeTaTrpMrVmVmNJGQWcpT
ZiIljLFuOv7ldJnonlgesLKohgxetnlh2Eb1afHCxpbYMpjV+43YWEdKhH4G
QW50P0RuiPN3DSgk5h+50RV762A0e+rczaUq+IT6XYul0e83UL9zzUZYNvOr
4bywJP0G9zYJGGGtV09wHet40e3lUuK8p8VMnZlFdsW2sR9voft5RKO7BQzd
XZ/fOTd2+X3Y9M5r+JbFQXhtm7l6N32POsVrnhxkp0Pei55Xqlp6H8r1vfWr
VHAm7UOO+1A+bPQb9GWnVJHVDxIqPGV0X2H/qhD7VwXYv+o60OT8gRdOntqb
BGd7Z8K6uqybXrTuEjm83B/kLYEaZf/zLl4G8FtHeBM5R90dwd09KZ7E1zLl
6LJrhVC/6FlyDH1f0r+EyD955pAIcxePKFYIDFer+sT0vXNZQM5VZohAJ/fe
uQM+SSBdc4ZjVUjP6Y6xFKcrt4ljrUzhuDEZVpjdq7QbpfWP6WwX7TlV8Plm
e6qw8DS5W2WQzKU6K017cMB/czcZ51wY8HLugabRw+K70leQgDq3k6FzozCP
Y4qvRs92oZ49g3OvqYy5133Yz9DI6Gewx36ASOwHkGE/wFKci1zNmIscwvlH
A8b8YxHqej1GTtPRxN5m88c7QctO/60FWwzHEt2vPqH1ahrmK63CfKUazFfq
x9yiz4zcIuOHBS4XxkXEukbqbsyLJaxtZd2v81VgPXYk6ZBzOeir96tGF8SQ
SoeV7F9onT/9gMa3TGf4lnfQZ+CjzzAbfQYjzJe/zMiXP22V8yEgVETmsb/Y
6H0XRnRzvTl2f6pAG3PTjHMn56YVeWh8M4vTk32zZbpLSqJM60lxbe+Tpbq1
ZPH8oPE7tB4LPGkQ3n8tikhEvorz7/ZA5EuuUQP9vhPzRJSYJ+KK/sP/mrtO
VA==
      "]], {}}, {}},
  Axes->True,
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->NCache[{2, 2, GoldenRatio^(-1)}, {2, 2, 0.6180339887498948}],
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->All,
  ImageSize->{868.1872807367037, 511.},
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-19.94717866662527, 
   19.999998578566327`}, {-19.951671363874908`, 
   19.999898671146745`}, {-0.8454979732564548, 0.8459603700230575}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-2.4317224404534508`, -1.8508600606180226`, 1.4529428786446408`},
  ViewVertical->{-0.044711563913707335`, -0.03847236274692607, 
   0.9982588608958397}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.827920560580534*^9, 3.827920678551046*^9, 
  3.827920781312849*^9, 3.827921293856814*^9, 3.827921370019348*^9, 
  3.827921407285512*^9, 3.827942881295188*^9, 3.82794358398647*^9, 
  3.8279436577040854`*^9, 3.827943961438057*^9, 3.827944101980219*^9, 
  3.956071052748316*^9},
 CellLabel->"Out[102]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy8vQeYVEXWP3zfe7tnhjAwick5k3XXNe66GBHEHBEVUBgMCCiooAKDICgi
igEYUQdJJhAZAQkigkhyVMTEYMDURtYN7q67+657vjqn8u3qYXTf/zfPUz23
b3fXvbfqnN+JdeqMoeOuGn7d0HFXXzm0tO8NQ8dcdfWVY0tPHX0DOxX8j+cF
wzzvf6DUi7Bj8LxWXkZ43v/zs9/RYdCHvdSL5vn0Gi3lX/OGsNYo/vMfXe/u
4ID8kk+vSaXGj/F4M2t95O/GGH3EeB+l4vM+1Ae9RsybwN8H9C4quzLvr9V+
ww8nf+yJjg7QZ7zzA8Zn8r7jO/+eDiN95BdEJ76+pjzNvz/aOKZB80vV15MP
iEvJoZK35b70QTpsL/s3rzXE6EROWoLf063XG98Xty5P4X8vXTzOiBEj+lx5
5ZW6j8uM/uglSu+j+M364cOHH2AN6urqNrP/CX7Br9cOfzFk2LBhm41f4Tn8
L3viP7g03IOXKi+HX8YvYkf0MXtv/sfz+Dk9BP32EqOzf9NhUvhO6sUPONEF
Vp9yno0b5X0NNPr9V/yYqJtM4h3Q+MhOA90pnm/Ec9TRxUan/+Cd4o01iqfG
//Rk7e075e/EtMqhVB1daHT6N/ed0mOlOjqN8HPxw3qB0ekPutO4O+3s6JST
UICf43kaJurofKPTP+lOw3PlZTg6TUo0pucZnX4f//jqTrMcnabwc42SwFVH
5xidcmh0UhWey3b02y7RsJ5t9PsNnwGT9LFvH+8m19Fp+0TDepbR6Zf8+olu
Fj/E8zR8rot0SDTMZxoX+SJ+mBU/GBTVKDvOcVwoNdHQDzAu9Kk99GHqS2rj
tTolmo7TjWsdcD8UEWS7Nl6oc6Ip6m9c6CN9oTh26qA7aPVCaYmmqZ9xof32
E1ksVuvoNCPRlPQ1Ot3Xyt13c3Sayc/JIdVjf6rR6bt0mJDFejj6zbKHWvd7
itHv23qYFG762Htv/sEBgy28LvaYalFwstHjHjpMSXSnkkJc/dM80tWpp5OM
Xt+wZ8qSggL3Ldrr5eg+N9FAn2Bc6LXEA40/MJBbSmDntfISDX4f41q77Iey
UOIYR6f5icb/90anO3inTql5nKPTQnvQjze62ua+P7ru8Y6uihIN8G+NTrfq
TuPur4+j0+JEI3mc0elm3WmcrDzJ0WlJopE81uh0U/zjqzs4xdFpmT2Sxxhd
baDD5ERMQXx7qqPL8kQjepTR+Tr7PqWYNHnDAoaTHReqSDTKRxoXWkOHCUEo
qvtt9VqViQb/N8a1no8ffMUbZzk6rbYH/wijq+fs2w5T3TmO3mrscafz1Nev
jH6fdd8iPc/5jk5r9Rjbk3m40ely3Wkce1zo6LSrHswD1mAeZnQ6WXzJM/6E
Xt/H04aYIDe3PBzouHg3eya1CdQ77uLRek8YzeKvnm6ikY+zeWPF9ghIqKcR
GOS4CSH74ueqZ+s3gU+92RgJaZrSXwG9OhlWvhdWmn0zPcWoxs1xD+NmbuZf
wosf8KRJjq9B/F32UUPFf9ToaYeAkDJx2jwxiZxfdgdKV3ENn5Be8QTUvfXh
G9LajXGVPyFSRPQ1W7233vb3NH11M+5tIt1EH+cNNho3uNm8wSx75CzMHO64
E86iDiKrNe5kEl2NaCpZ3gX+xfkvMhMPD87XCMcNcOBxEFaNcQN8mlKkP0T+
4fEBcW0coXT74S1svcZx7V/zc/EkUm1cey7v1Kl3jHR0eoTu1FbQq4xOH3Df
Kd3BaEenR9rTpDuqMDqdozuVd6pk3vWOTrmsdRhH5Uans+kwoYSnu7nB0fnR
ehhs90qZ0fms+GFQY2v4Z9Qju57imETjXWpc6C46PJSEVzyLf2Mc1zou0TQU
G9eaYT+UxYK3Ojr9baJpKDI6ndb6A0x09Ps7fi7eJC00+r09/mYVy9Q7Oj0+
0WgXGJ1Odt+snNrbHf324efiLdA8o9+J9s1aXHOHo9MTEo1srtEpnxKLv+XN
iqm0Oz0x0bDmGJ2O1yMQp3B46MNmB6LzzfLO8O+kRMObbXR+kx6GOEQK9Dgq
O26640KnJBrvLONCY/WF4qyPpDZe6NREc5BpXOj6+IlVT5TSxgv1TTQvGcaF
Rul5cbFRe0e/rmudlmia0o1rjbQfysKBuY5O+yeaks5Gp1e3/gDzHf1yV5fD
1upk9DsifgYUDixwdDrAHm3daarRKX+GpLBxIkfhEUe/Z9gjq8VGR6PfK9w3
S1/2HZ26HoBsLW1XdTC6H6K7j+OvSBu7PzvRoLczLnSZvlAcfyXrgfDkn+tC
5ySaiBTjQoNaeaInHJ2em2gWko1OeUgjISk+5ej3fHvQk4zeLoyfU8Xyyx1d
XZBogCNGp+e1fovPOvq9MNF4Bka/59g3C8KcI7Zd5ej0okTj6Rudnpn4ZrEj
khmuzgfag/o/RpcD4gdVcTU9T8JOL3EM73+MnjlYubVily/xOcc1BjmG+ifj
Gn3dd0+jt9HR36WOUf630d8pur+4e97k6O9yNbD/a/QinPKlnhGTrtU9xzHy
y46eB9ujS0z+T+Ma2foaaN/0oRtB66cqfkjUI2x1XGiIHmI1jf+IuxAF0+s9
/UeWO7cCLHqUmjye2+a43FA9A+r5f4y7XFK9ujP+h/YbPmsJvUt2SUw1TK86
LnuFvuxmoW15f2/7ZQvjH9RECSFRZFSb3rkenhO6Pal/jR/rIaGxJsOZa89u
RnW5H13XF+a9Ndc/GNfnhBsJG+259tOHOeMNx5Xq9Hiraf5L/JX6iCs0iqtl
ux+Sfv6W4zIj9GXUtP7ZuExv3V8cP7/t6O9qxwT90eivh31/Fhe/5+jvGseA
f2/0182+PyQgdX/7HP1d6xjWPxj91dgzZd4f9r3f0eVIewhJUT1odMnxJMUp
dXHWxK24uh5ljya9+9bo2gEfJlcZmRLq5y2OywhviGU/fGNcptSeNMuAdelQ
xsAr4TRGf0/5Kr42rlGU+FHwfnhQ3LZQrncM/FdGl60x/FeO/sY6Rjtm9Cc8
pk55/I2jv3GOYf3C6K81Xj3o6O9Gfs6yvj43+svSQ2jen7z2Hxxd3uQYws+M
Lg1vX5zQla7v4Ybh7rrt8frcZjmsnxjX6Bw/DGFT4JDXmOAY6gPGNTrqoXEx
ijC0rUiX6zK3OGbgY+My7e1HsczRFD3U6jquKbnVMSUfGddIbv1RRI6D9IIk
fJSJjln5wLiMI1NNMc9Pjv4mOWZgv9Gfb992mIHA0eVkx2i3GF3q7B55d1pD
9x391TtGlkOVeKIUp5hjfzIQkrDr2x2jycVZOL3NYiFXOo9hYNjXmKpnVo0w
T+2Q2W7O2zcI0+5vmj289OV3eH9/sycrTGMGS9ld3mGPMD0j1xLMNLc4KWjA
gN0fue9oUvfyXv7UhhtLd3R0p2PseLJJOKvNEm4GrNr93eUYuzd5fzyhzenM
b7Sc9F0c/c50DCDXDoWEcTMkkSTZmQl7nqWG8nXeH5eAbmkW0cOlOkg4Fvc4
xpZnwiRKZdNjUOzob7ZjbHfz/l6ghxjiSSaM4KGMTuFxhb6gmxFKHRe81zHo
u4wLxod+SbS4Qr9G/DlOXhqxJPv6c9TU7Ex41T6eHXBuND4TxpVbghoqqH3V
+/k5a9q2t3r9RuP65mdCMYqzYjebXFnjuAUeobNnmtueIl0kWQ5sa7fS6Bmx
WWEWhSWwz90xCpvxj26r2nFbD/JzFj1sM2+LEu43e5rsHDnxm+VddYkfHIfl
K+FB35lrwMilTZTyCr8Kn6kkeR/mxXHIyJ8RCle77F7LjZTw6vP0rSqFbAu/
4DrxkJ79VyoGIcM9BpbwP9xxxfn69hSNvsy7DiX1xUPLEY7+Gvg5y/oTtnoz
788Jh9TfkY7+Htb9Kev5Jd5fKD8vHgmOcfT3iGOEX+T97dBDGFbuFY8d6+jy
UccQcseeoOmE2Zb4IXld8eA4R9ePOUaTJ6uZiXpxiOSySvXtkxRb6BjX9bzn
zXocWtHkLXNUDzd1vsgxyJyPwll7lv6u3ZvUy2LHuK7lvWxIfIuK2vuqjpY4
RpHDTDg5z+Jc7SGmXpbaI0ZQspr3wu8qKpVMqeBoyh6gennCHhp618R74Tl1
yS5+k9ox7+0M1duTvDfLJOB+cPHPLaddyUeh+3xKP61yJnDvt5lYFyeBo/qG
bKzVPT/tGMeVvOfWsuuSVQehMVjuGNEVvL+nEpMJnmuXqMsVjmHllxFxJot+
bSV7kOrlWT3Kyrh6hveypPUb02E16milY8T4KHqLdEemai2tJOposOpIhEgs
G4qTEBf38esuXCaaF+q1yTFafJgENLrZK6KHxyaVy1XPzztGcBnvmQcRWxEm
I1Qvqx3Dx5lZSL9WRNw1qpe1jrHjCCVzqxKrxCNVLy84xorPoZlM5VZsubMt
Utq7t8jf5H8+nYj2+fWvfz3kV7/6Fbb6ww8/HP977fEoFQ874eft8av56mbW
OYb3cd6pkYRlShdyq2gzhS7t05UieKVGdo3N7B02H9gbpg+ywwPsiN75MKDv
4T7UDerlBVA/ugce4SmvPTRM7ZqKpzrhuQieTGIvh4leDoiOG6kXvBQbQ/Ye
H4oeP0091HrHbC/kDzW7lRH2SUjZ4QkdgOZjHJhjzDQ/1wOyV3pKrx09HD4k
toap3aBpfi3Uj+EPHdtcDvB2KRsGeKfMB3i3jB3KL8B7ZV4SvnYFeJ8flkJs
Szk0L69iX6rBwYKG27uykbykF78k3gFTUsXcy/mXw6Oxc6ODirmSwdmOoh06
FZn++3guFLKz5LZL3fhJD1skTJp85CLmyIlxO/VwdBFewsZtVA9sbECb5tZ4
EWh+qgqan66C2Ets3PaWshF7G4dNjx0bLWhqoPHz6Byd8mkAA/7J9Wxk95Xh
p/vwg33lKQAt5akA+8s7AHxQ3hHgw3J2LfigjJ0TrYW+WuaxD98vpYmAd9lk
vMwm4+lKdnPV0DCFTUY9639kd6gbyOj51MP0lETCU+I3Dho0iCuctmH4qDEL
XgraOY1GGyImxDI7eA7iz1LUeHyLMMScFZoRfzMxsjklcloO85Lp2fAZ66/r
Dk0P1EDTgzXQ/ASbko3lOP5vlrKXPfjyFpH1XjZSe8twnjw9UT7RdgRnBZqf
rYK6S3vhmQBPBDgl7LOmBThXPXFusEVxfpJxflJwfthvPypnHPExvhyoYBP3
SQX75YFyH8959DF+j7cP8Ir7y7xUnEicR2sWGQOyeyyB2Itl7CkY/TzAZnNy
LTRMYndwbXd233WD+3tRHIQDotkg5OMYrrZRlCbzEXMy1aJ0+pNeWs9YmC0+
x3OGeyNOYv6oecqCewm7bNjVfEXUfDVM7gpN91f70Lysko3U6zQ7b7Anf70E
G87O66V0imbRx1n0cRZ9nMAQp/EJDMQEVrMJ7I1jvq88wLmSs3dDT5w0bFGc
uChOho8zgy8V7Psf48uBiijOHnv5tIJN5mc4mZ9X+HgU4Dns+JMK1spxfvUc
ZxtzXKa51ZxgnNx3+OQ2LTgRmh4+kT1fMcTWs4l+gd354nJomMgm+rYaqL+6
G9Rd2BMGnJxY2NA8L9fspHwWXAsRiRBJcp77iDntI5mV/9LyouTbvBvWG/4q
yMDgUzXL4jZhwCmHQd1FbJKvQVJtureanWteVAGxNWwUdtLE7iphL7tL2HC+
VsJYGJrZlDfj1Iv2hvjfXOIRafh4ym+VDAKbDMohtrUSBpx2OOEqJwPkOcSE
5ucYgVzWG0kAv/sBfvAhHX5YgYSAzSOSCBRJ0JxHcPojSAiMOD6vZC9fVDIW
jlUiSXxRyVqFbIGiGR9/5CO5+EgrXjESCyeVjzSpNC08CZoaTwrhQAmRCuwp
ITKB11l7jbVdRRBbzdD++VJobiyHpllV0DCBkcwIRjIX9IS683uCgQtIKThZ
ZHWQC4k7L1QmnsdVilJxql7DgU0buW4MIIr7QQO4SRScJqKaJq5mID27GpoX
VuB4v1rMxmR7MQ7fDvZcO0qQQLBpGvGRRnwihUiYSCIO2sBvvcU+fauM47yg
kSAeKt4L0UiEoCIgiBAkgh98UE6EESiICGx68IggWKuULaKII4rEkQHwJSIc
J5NYhUkmviITj7CFtXIkFWScxSdzXMnXhKLwpDQOT+At1t4s4UTSzNruIjaQ
rG1nbVshxFaWQPOCMmi4iT3Z+T0kgeBESQIRngRL/M83JYZyykrqaTT+OxfM
GIFuCSUHpFvnT4cgmZMPg/qrmJyYUEsUHltJEnsrkswrxWy0tuGRpKDApB58
Z5IPvpcQ01zKJYuvJEuUyCYwycbzHYTD7gm1OUU3fQ9HnPFIP/AT0Q6hSjlH
lg9pkgWqaCoKJKoYhIOEUpmEhJMJ8BWe+7LSJxJKskioaenJ0LTkZAtsyr0C
LZwk1JgSyVQ33hEwY1LPbkE1rxQCvFwAsWeKoeFGpoKMrYYBJx0mKUcZc8Kr
Zika80yyaW+ShEIYTysfpeLYcJjHeU49YSl8Fy+BkGqkHXfyYWjCjWAoM5Np
5gto/DcXsWF5uQi5bwt7rC3FSEXYAqQkHymJgxFSElGTj9TkIym1gZICBUBB
GIB4CxySSpgGSEz8zhkpWZSkhNT+cgOFfJt+AkU/eNVPK90oRMREJJSMxNQZ
4OvKFDzy6CQ0LTuFGh4jiSGh4ZVMeOKElWcTlkVUkqAEMb0hZBVC0KuMkLay
9hIjpqeKoHluCRFT3blOGDK9y0qjmWsRFBKTzH0zo3BDPDsomBkPP2FntOXX
jmnikkZho7hDQVxRqK9jJvOdjLga2Ai8yJ7qxSIcsU1FbB5eQkqT5BZocttS
bECXR9jF6e1V+mB7casE91qpIrjAhi5l2pQRYAUOGiP6wv+cxnyLxlaGaIys
zAqJVokIzm+F4CJK7BFtRYnMAqQ41qqwob73dVUanvKR7CL4lQC/jF1+WcHx
jbdAEaGXw6XspyHy229o1m8LVUli2A4u+RDDYBNr6/MhtrQQGm5g6tIYZuSd
rciPq9NkHZGC9BAnJ2OdkcuQJacyOWg+4UfkjHHoxFHCzfphjHDuYIQzj937
ukIclfX0uoHd40YkpEKchReLiJp8pCYNXkhMxZKGhOTD8SLAKuHCbwcSj9Cd
AqQgIp4SSUDYeXOp7zCrWqMgQT0k6jQFeaRQcwK6lETd/vIEFEQiz3dRUGBS
EPbxGdKBoCENWgESCPv0q6p2SDnMGvumiknBb5B8njglioQUFV9JSEMoEj+v
4CQkEewjgV6oUElRSGJQKFC7DOTazH6/kSliLzASWlwIzfcxBBttkZCpacvo
paVJcT+qubwsLhsm1iYyupKR0bRKaH6Q3feaAhy3tQU4lmvZfb5ADd+tK/SR
vnwkL3xPBFaElOW56AvH7eViiVZKLnI6C0w6a104hrFKUxpeYU+ZKRdDFOcb
FIcKFmJWYFKcoDatanHrTRIc3pggtxBgKd26Ehu+E2gV2JTmCyj6qoowKgMp
jYiMyI0oLSIBDWUlEtqX1LuQlyggP0+AUvtcKFWsUWqLRilYy/ppyoVYYwE0
TWQ6+8hKqDuzu41W3O0rFW2Z1GFpYfycyG5NCGM8kTSxHs5oru7cnpzubmdP
3UQ093wBe+zVBT7SICfBiEmC2HwNcxzkNhDAbSzEr3JalE3LTtRJXi7ixLhV
tFdISjqocbugxlZw7zWBe5oauVcQcQ8J0nOBn0foRyp+bAsR1nvlgdb2IfaK
shtbyuNI8YPWSDFikiK2wIF7EUWNHpEjl51fVaH2/zXC4Df48i0S55MoQL+t
wu99W4lkig0H8RvsRRAs0msFqXXofkDbgcCw3AGGhl2wNwSG0iZAMHyRUek6
1lYzSn0uF2B5DsQa8qHhWotSTVCc49Dq+LnwAlUrEe+zECaayv6JpOwPZXRZ
X8EwmWb6uXwcilXs1lYVYMNzTUirzyOZrsYjBppRpFibXtcRcYYQc2MRtrBY
xkncXMTplAOm1u58yzBFemwTefo/kzwFaWo1zxfkKUhTC2nfQZ5BItXuZ5Cn
R8YEp07ZiPqqiB7b41EHRaSCXBmNJinSDEKkWchJ01Lzyg4BoEXxALpBAihr
zzLSfJqR5vx8aBpfCg1XVUDdAEWeLhzV2ZL38ROjNN1K9PR8iifZqdbcmE1B
SsVuJZ0ilUL9kK7QNJnR6Gyc6BX57OXZfPbkK/NdFBsgxfqKYv1DUSypkAgN
kmJfLNL4KmE1omE1McmSGVyisNVFvCjpSzXJ+pYmieT5VhnOPbremoUugBCO
99tUQIMRe5nIlrVy36LcrSHKDaRWWREkgtNAkWhInkekMmiTKNIdkiEqj4wg
2fe/k0TKjiSlfldFmIovlYSkgU2uXpF2wkhx/4kQ93FAWhKvVW43tEoHkMKT
rC3Jhtj9edAwogIahldwxCPhHyB1qWD7TIemyePJYnVSijNkgzay+PrHrdHt
4K7QPIvd/dN5bICeyWNPvzyfKDhACvaRggOkYCTgAkJaj6AW6Rabp/QDEvqc
amUz4DaiCZcrBH6bKDdolXJ925MctIFyk7FX9qT5ui3Ph7pzemKMWwdwy10x
hp+vDBD1RmyADTT1Bib1Yi+CfgOul6KcF1L/W465yUi6XoS//041IuvO/Cie
rLmagdepkBotb6aaIPHYtJmk2b23rXicq/AYlmUDLOoCsTm50FzPTPJhFaZb
EQHZlWfP883FykB3jo3w6ihewD++GCVZKriawk84DBquq4bmmaRGPok0/hS+
mNQeOPDa1zDNif15InQJ1W5F2LfMfade4UtzDGm6TXTuO+g8hNCBFR8RdB7g
t/F5WKN7fw4lDKr5mMvB0ZkQmuu+Jrn3dYXU4pSL1sE6pE8EicgdTS58+Ybr
t1WC2slZ8C2H8CRF4Vl4lIQfRBRxq04rsOHPGHqXavQ2aTusa4S9mYl8Auvy
QujNaHtxF4DHGH3fk0u0PeD3vU3anuFQhXmxpkSVQugrSZollNbxPr22s2gb
6brurB7MbKyC5jvZ3S9jd7YsD8fiiTwXoeMnAupY8zTJE8B7hPBIIlqfDmkn
BPC+dj1wk2896Scb8IONRS5Sj4f2IJ7kkZ4loqsAT+uo7qD23SVSLHFORWo/
7+dS+/8DhYQoHFVirnJEibqjFoJvX/87aJx/ppeL76I2fXPwLrPBW6km5YlV
k/cFcUsbrxWfKaxhxL0qRNyNmrjr+nfXXonpSn2+mxPocE3QcWB9QDgm4lQP
BOZrUVotzmUvS/BlaS5OC6dkpGOcFpOaA6RmIuQ8Scz4FUnOSM3YPIukVzlJ
Gj9dwz5ZU0h6i29DuIukg1bR26cIU0R4/BV4h7Abv4BUurtUWoYuqvai0jLU
nrTdpZzr0ARgfFc/nOf0MUNR0rXUWVTccl/5IXSWoLVo0y8j8BSlfLDet69j
RD3vTFJb8kltQV28UgF8EMLxSo3jcWReEe/KIBwvjbcZKSpVpKNSW34Gmffr
BoZLY5qteFM2G9dZzAJKcfmcH2u87iMkgkH2vaHhaobZd7A7fTwXZ2hRbtBG
JggUpIfQ3HegecH/Hem3huaaBfAzFfMqUaj+X7OAZAPuRhG3JCPAnAe41o68
8W45j2TYAfzW4d1vVWMPU38iFYboP1nQP9E6gfq8MzStkzLTRSnpxA5VkiVI
pzfYISBtpszNB23RZ978hXxwZQVMPr/a1NXlAmhrOQxfdGuW+opbC/SR0IEM
r7OnMsj69Ib6QbXQPI0cv4057GUhvjye6+IJZIm8kDjwSB5IK45LAuIEpB4U
BStF45oNfkEasFHTgJXs4GkVx29Vmw+IAiPIFdxJSI7CXyYSfKXOB23kgzeJ
3MXlkA+uap0PUM+hCJ+ZfdAGPog4VPlAxVEiDuAPhG0qtBmp3SQrDlAKj0eK
fKCkxc8g+08E2Sdywvwi+M+B5gn5MO/ycovs67UOr8Cd6/Wi8JzTY6gyDbRd
Gpi6Ow9/sWFCFmi6kT3CoznY2JM/ltMGVvBJ0Y8iLyAr6PYUyQqu7+f7h9KL
4lR9/EAxQ4GTGbRwwC9rT45HEgLPSZf5y8TVgh3wZtHlsq3YlBCeSzz40nmu
5YPhPPdd/pwUzhp255iZKrnCyRTvtZEptGrkS+f5J5Vtcp5rDklWHOKbooFz
CA4OFwjEI9+E9KMQ32RKA5ikxzdVKhoUkaYC3iczgEv+/+Oeu3Og/oIaOP13
vUFyzmTb+iX24GVARc26FOdqDsNl2aIZRypQFuM01FVCbDa7qwXZbCAeQXZ5
FF8eQz5qzMHxWMjuc2EushG2AFnJR1bCkVuSi6xE2pavDWfJS55/aE0LP/jZ
wgV/pB2kZjAqEnbr+7a9gb/UWW3eL5IwfiKHUUSksMm0SmiY1BXXDQl5Epis
g+fexxwQYp995bIlVK/axkFOS6NVXaud4IKD+3vCrBkXYsOohOAlX4TzW+Gg
iHQ6fS0tj0qvTcwjc+Kc+XCHYJ4VjFkG11K4H+ZlQmxqNjx4aZlkHPL5T3KY
HdwUOVTFUOEZ3Wx6RqnoiwiumqaI1sR+zzSxgUwTm0w43oD89HA2TtMCxuQL
cpC7XBwWDXMYMpjnK2GFI0sslkcM5ivlzSM7hutuT9MH/7W4MnU3vHPtnvqF
EiswJRZ+IGK9rfNWENLeAtOQ93zpqNorNDmZr4V3/HopNNQzppvWTQUgfCMb
QTCbETQLGfMRxW94+HEFxHZVyeZD8+qaAJrX0Este1lbG4HmF2qToHldLeuo
aVE3aFpMjd1R83o8F9tT7eA8EmXku2KXOdjSE52yMOGmy7GRh5b9csLNl0PL
7t8Qt3VQDBmImLBpBkWFP4yxYRnPf3D5t1qTXRSgKHHkMRSqPIaGm6uhflhX
zn7PMIpdysh6Pme9BwbZrDfRYejwykyu8roq1GZUGFNL3t5KZPwQx7HRq7+4
FpquZ88xLxsbG5X5yHoNeMT4L9D8tyAHZ8DkQJ84MDA5kLsSEgo4Yj/8gGuK
IW0RP0AJt4KadwgBFwkLON8V/DPTLJRkw24Y9yWFbCflUvB/sfnku8wnBwP6
dqa24MeGKd2Q97w4xsNcCz51zSurA1xjxj5omM6+PaM7rjZjH7DXAHNsA4wT
0hRH8CgZ6i7vnQp1g9kH9Tf1xGVxQ3rDgH6HG6sb++GS5CFEDTf3goZ7elBr
WtKNXW4jceHeGqHmERd+IzwHSWHeo+OWXb/xBWuitEMexIXTMjJoxle+IVF3
KAnJtUozZOjrPLiCeO48UOZwzZUI1xz3QDfdX0UrhYg7XxLC8XkMGzJKfoIR
fAPjzNu7wJxLyqQrjjjzNoctxt0S4RrVYRd0sv1Leserg7WX2uWBs/v04nLw
olqoO707d9Wx9w1Xsqd/sAt74IfwZS7y5jzk0vnZvpNVHxGsiufQrHuMGvdw
kE5qScs2CEs/kafDJSw5e6bw2KRMOV5j6aGHEpM+cWkgE0tISvrk+gtMt5/3
34jJVrh0j4NLYy+jTOML0GtpCXvdpb0Z243pyR4Vk0XRyydXDWN2Cf7H84wn
I8idPjIr491HuzLR11Tjo0z0SC1FrRQbXlQs1Ym2nhFFachMONZQa95QS0Iz
QL5FXwzjYuLy/od7ckE+O0yCkSOOhPpb+pGiOmTIEDjvvPNg1rRjGZu/WOu1
g9jbNTLCr1hR6rUoTtmxl27ysLD6glZ5WJ77uoKcKoHNwD7yLzrmLQ4OyVjB
xbGt5VgSgZYrUxxplxFD2ijU2+eEfH04C/59VzrcxzkYvSnoBg9VviSTcApn
4FAxeCsg6qp4yas5ReyA6PGMJCZfiAv26/p358x7RSU034Jk/QAy74NdgkOz
sdJ2PRK2KKiQhRtF0+L2v5K2SVzaonSVnIncSkYfXzyC3IdMLLMOkFvXiNyw
ta1m3haFM28dSbcyA9w2JKNhWStTwS3fTMRcbxA2KHFBfpQqJjQ9xDhjLjN0
bu+GVSg8XnojongV/7MW0OkkeouVErDh4m7MA2ei16dE8ChXf/mybt4+4KtZ
wmZmxFq3iZxhrlmJ2N7LJLlUhclXFKcNc/rC2DEXkTjFuNXmVUexizTMJsYe
zxh7aG9sBmP79D5Cnw657GQpbRlXbyLh/U6NYsgO0tdj5+0IaZ6AizuZXPyV
wcWBFsNsSr8o56I4ThwbzMxEct1lvZj+UhNvs+4WCvMWkav2gsjkWZFDDp4f
p6fBvQPL4LTjeh0Qy/FkHVvLRuVOH7EHozsavF9zLspdrQkN798dieP43jD5
ghp4bQK7m/uQVefgy/1dNA+TKMZBeCgbGRmb5yv9mbjZIwPWVp2d8jgw5THX
n3EuFudyhlZMnWcHH3AWTfZFIcttyVcxpYEnMmwWDCwz6ZFvXFI4iM+laM0X
RFJYcbHnt7biLKFvlfFubF05NC9DnbLpASYQ669DIsfqJwNOPVzXy8HSG7Ii
yugexM9N8xiDPoPVUEho2sn0vIpMT+4i8nVtBoOBP5DNTCKKxK+55ryr1+BH
lQhGCYyhg69JDd7XE7a/8DsuKAXftuz8TUQsIEKPK5OtTE9gchaalnaj1nBv
D2h86FfE7AMHDoTzzj5aWmZMWEeJ0ZGl8XvYmpaRWWzzNM/Fs/2wX+usfGHm
dpDpet+oDCVsYSYOTCbG4fuMFmJKRmateXUVz5w1dWvFyMXa+bSj0NatMW1p
ZQ6l4v39jjSYfbHNyEbRa2XxcgeU2E4lIiW29NSKkEYfsaQTTj++N3qR6HV4
v+6wcmQp/O/sLPYU/743i5376b4s+A9rjKG9xBwd0Rxt2MN4uiGbszNnaV8Z
wm2RzVy3jnIZjJoyZvNtKJKcZGY+S/GH605eFswrHU6JLF6HNxe/KjVvzsS+
m4Pbrkd77amuRmwtY7A51dTqr5UFf4Q0Zf/Ze87IEVUfB5vSsiPhrBLfuSBG
8nCgwiI+uZuEw1fzr0v0Bu4FBloOJyEvJyk57PLwmlw9XXM1e0+iOpWYjoIm
ZPQKmUt85iN7ck6NINcqDmbczGU1sbgUO54fZvjZ7OuzuyNIeFw1jzD4qDaX
3fhiwY0Q2L7KTyRbucJk8ojN5GhOlHPWzifWjr1WiS4CYm2X0g3vCdM5zN6m
4r1W+JWXdIF/MDm94Zpc6MvZGwXsBIfVPNHk7iTJ+CaH49ffteMvB5T7yieG
7wAPDa6AA1Ny4R/3ZME/WfsXttlZyPrI+PATNmJ9EtdxbE8c3yWO4/97CR7h
0hmTX5DbX7ATGVdRdgB+SBkCBWYimZ05IDNolAQP4uOjCXxe/s9xOKMY4Svg
FAjEmsqwfAoV1vGpyE57qLu4l1kai2p9yTpLTffXoDRPkCFZmmRb1IFbYocy
xTS3u9N9taSOOAqiJBN3t49bPnTwfSdnkzhP0ewdsSxg1lLUig0S6JI5SZoL
pq0f31Pq45LH8T8zx1GJ784eonljrVilTt4vk49NxZtfP45/Q0I6IE4OoGlh
LXExr+gCB8qwSNQv4eYXZZ4xI+ansuGfM9KgeUwGDDqxq+Tm8bYJTfUFbzO5
WZVVpY+olgb3Squqv4ZXulGjIA+rMr6GW8+vgW3jCuBvMzN9+PvdWYzRf5yV
Bf/A1gZG1/Idh/CBLsjovAnDG4cNuX1+NvG537r1HQlJeJTnj5M8X5Qb1tO5
4Y0/ecLKifC12Z1sOrnDjG6GlkxdvcDOg8DPtMVt58khvTvc2rGVjJsfY9w8
q5qKI9Vd1Ctq1kxijI3yHOV682KizIRmtn8ocU4MHtVZDxEK2zavEKuqHSn9
qFTGtlc6eTxQC/n9RIyedAhGb5x7JjE6Mjx7n6QYvbPB6OTI5lGjiFquFVFR
I1SA9lYT+xKj39zT4nB833BPd3TGRRRX+5Krv1aKN6kXBlcHIalchL56aF5T
bSjeZdypbVjR8EGpzdNhBdyK/gqeXoOusWz4993psHN0BozuX6mSjMbbljS9
u8Vi6nrTH+ZrpVymT+D/1+1ok1FRoDP0/11vuOXcGnj6qhL4y52Z8Je7MuEH
1v46MxP5HP52dyayOvyIzWZ21gdjdUaoitk5oyObe63yeUTzOW9csEdMwa5V
+eQwo0sPOTnYuBYf4db4sjyZGeuTMR4xg8k6lJxsesfNQJah1Se5EjW0aZ4U
dpBLrZ44Hq/ARHtsRSk1rEWEGalUz++Uw7jJi44txuGYi9RwG7ObH6+E2Oqy
RFa5q3qVFuJ+wgIeSarMEPH6s4fmdT+RPMfvadXdi0B8zZckvW49uTVOxzCE
YPUMmanRojM1OomEwW+xTNE3klNjb1VjQ7fbPd1FxIzYvJ8U5Pc4BDkZ3F+h
5/5LfAwpr5PiPGPNa6t5zI0xuE8SOzB5HPv6qMzr0jqfU5i5SK8TknyOXrPn
uQv8p/syYPt1GTCqn+bzmzmHWuWXJ5h8HpW7RDQaangift9lq+eGHE8hfr/v
0gr4fnom/HFGJvwJG+P7P3Pe95H52dhq9s9C9veR99mUmqLeFPFKvKP4vb9L
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
hQYzPBE4X0IYZ/XK4ArQxuHx3GO+dlK0ui9btlyhl4ylKk/Oj+OX8x2zkzhj
+kN9JvxZr3N+Oj9GVc1K4MTvJUOaqTn9Mlwo58kKZwPldxa5KyVRj8CBh9NI
1+t6gukn79Ptl4Nukax6VVNnoBDtEhgN76RDBAoJmwaKbxJrSpG1h88bcX4i
QxlPLUcpYxr0PH6g4ZVpess52q6J8wz4DHuIEcuLurtF7HKzctKuXBs4D4Hg
8Vauxe4V5oGzJI1EqAfmRPLD24R+QSW/UBytHilMUBvGSyF9e1aG+m5TnFo+
FnXBNtw75uPc9ibg3EHA+coklK+NRD6SLJEibLN2oqyDQGVscLJdXvdrLvNC
xFRRx6dYCQt3Tey0zWenfZwmytidVdY2rAyVM+UcsJlVcuWm9obLTqHaV8/F
8if8Rh/4FLOen+ITPsn0jZZfxCd9TL/3Iz9Gv2sz2q+E7QC6uQPomvt0M/mp
Zt7IkUCA9i9dH9JWr316QmqrnOGNUMaWE6QS3TsjUt0xPUp9uT5G3TSnOcP5
gYJ4+t5G8kEM33vcA1ePd4UySta7NJy3EZy3XCL3EBrJsJHM7x3HB8FFdQGa
3nrRGXQiCWYDaNzmoLAFaT1B1VL1OS9NXXzB2eqS85vyvT+jUzS/rHmjAr4+
RH/fqhvMUMr+hDZN5SO6hm3c1yhgLUwlQrfTSWl+jWQo5ZUyngIrF2rXuIeR
FB6M1Ry+jowdRs1mbUmjf09lTgbd863Vj3RN3y4jmTzXK5MPcnxGCE98Ai+w
+sI6A5nsT2es0EHNcF7nBt4CtiWTTZ3R0Bm6JiCdhwqdEdt5A0/4yIYKON1h
sVkxqqVkI+3FCkRG9L4YSOa9llTeKWgGliUIzUUyOsWwYOMafU0YPlOapNbn
D+dISVwnVLHRSTaV68qpafx34pH4uR5ofn6+bOiwpTK82LAMHdSxI7huW7Td
CyUGnGy66UHnUnf6yZlUrs1nv4iR8zliJLdrDF8yNBIRMQJVuZXosmJSJ1U8
Y7ianz1JVczsq66dlc7tZMR3QGbhy0X2Odhs5DIvDyVGow0MFn+n+fyjdrhB
0qHGCgjDdYk/AwfB/+gJMwNnvP9muQvo39a583gC5hj3/U69JzpZdpRtlicu
MmdNNfu7VVFcGME8F6KxLx8hZdqN9OUiIaSwezgp4vrM6HlWYcaYwApkUkoY
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
lrr06JPZqX6xIEMNbXujemVWnHpmcgw31GF4Q6Mb6hqHBXR6x9wT6dTGx+ja
+PDbK3M5f/CtlXTQI3GpXRbnNsPSw4NR9yfiSYTjTRrO6E9oUX1Ujx3u1uYW
3dtGHwwrOgu71uQux7mRYeo1+tb+CKidHDc9E25AjZgX9LkNrLGVZW0XN/KF
YB0CWhNPF7SNVk0b3KLmt42iR0TkDmHJHek6rDWpRzSRMFHgCVgKmJUKZVo3
cWht5iiwVww7rRDibPLJ/rQsxjGZf7fcZLdaN0Cs3qSDJuKq0Z9FQfwiPeSZ
3WpzARx97FeI0FcMoRFBkh/F2wSxBRg9bYfQup+9XxN6lyE0SWvTl72etMbD
n9UyktODjUHPInUIOByCCwKdXYXOorg2HjYH4TL2nMLaMqZZMs+MoqGIfaE7
eogTDavIzOKqyxMiOU0NTy9s7MT8+y8rYySwrabKp7vzlanJ7NtDH/vNieFq
Q0+pHaHNcm2enyd2357l562FBs2fWGh+ia7jJR77jlIzO1XnPQxreyWyBdb0
sTH2zYZ8a7zOLKrByWZ6Kz+EtawyqwSsGqTi9zOEwB797IXzNRvOfYPD2US2
NBIp7SSyLW1dRa3jqNWqPAyGRXMY7MYgwjeLJGYVyIBF+U6TAyzeCp+zMNwt
fON9e0HnfX7IEzxR7Vx1aySMWXKYa8WHE0LQh4Xaq0g0H9RR4PSX4P0Gl8Vx
xqJZjDPTEbP/CBy0p5N99+gZ5mQdSmKtTKa7+c5h4krYMyBBHeiNqc8IZnLP
O6QwPvbuCDW3mZ7+0kzGsQWqGftR4JKATwrRfZCAjugvjq8YzPpo8nNgJLod
sma7+7TfDPQqW69D1jYlO8Xu0hUZUNItb/Ulu2cUA2XHc5bi9Zw9qVVzRYoZ
6uiyx3yEH9DVDKzZeClDLaNDAFaAOUXv+l4qw20C2Qx7JSoOB+kVcBxL7/Mj
SQZLq7psaRLvk0BF4KXpKZxX8+6UCPXK+DAeaEXcLPJrENaAFjWzrVct15dn
jBRmcNYudB/SxW576usxSzqfs1rWz4rvrOzRbHFDo11N+llTGeEl1eFifDPb
1L0rIjOa1nZciyFzvk5XndU6itFylHBzdly0en22jHX/sDbBXZiyLd2xn12Z
KeQtmZQl29FB5uNM5pNpvq5E6TQJYBtcj65Asvptc5LaPKyGWk0q7PXCOPX8
lFh1Jj+a/z10rbf3kYiTbrprPcHS0abuPYzpXIlr31yvvyNDtWh4i9rZP5Ht
+uzww1U9rZ9dx/Vpd7/faznTx8/P58t5CtnfyADn8HuN5ivXQbOdon7EQjPi
WtC2NnhG7XtzAJ5hSQOiF7SL5mGnsS1TjbamuxTpR18462sbz/BdgU/wSxs8
FzQlJKM/29ixSJvBJ2hs7AWAeXWRjg5d30nqupcmRfKL/2cS0n9eKDvMnNO2
viwP0xMabry/LYpSVyfGqgntazKW34IlfAZhGRYz2MJxSWwsj4jk9J0jls0M
6wTRn95l+tPAsq54VySe79XiGa37AY0l/Bg1hPHNcDsn3vraO0IaFLbFdFDV
3ErT2SIzlorAZgb1XNA6nuveOLrgiH6on6yWLBkewTeFqxjqJkIj+BODSf9Z
ric+6OZYtkCeQrDooU+Nm8Ojw8Q/vqF/dVnFpVNnEScPPH/BeI7x4BnpT+et
RvU6wjN72LsmcN17V2+39r01YGYO6nlB26hrzerfxEtSYoKo5+n/E9AeK1ov
F9DBMtWa8oeTnQQWDCybcS5koWNbIkJpscgUCEJEGAIzcbPg43r/OkHM2/F2
TRrrE4jP6fJ+c3C0aty/4e88oAUOsEsv9PzON7JZKiia9WwSauHQio4hnGQx
0Fw0oq6P2ezL0sXcZO+v9nYPE/eNzSD6RrioW3X1YP9qvNwVmOb6ZIMkXn8G
Hx4WmAPRGN1CaC/yfz7SW9ovTU2RBDY88Ai3OW/CaIJQGskAiOwPxYVBG94O
tNFkxtZiLiYUi4eseGwNOyXWadHjtIJLwlNrU2u6dDZyObCmfZ7JjMt1MQ3J
mM965LLXFnxVR2m97OZxQDffTezpf2esM7oFOuPGNZ/ojK0/GzvLntcH6aiM
CUgck2d0raXm96otphuUBOipgEUvaDZhuhLxUYiOhYkMehn1fzSm8KPAWhxP
As19Ol4lsKj9gNbLJjrNFLaf0Gay82muXtZ0Lr0/1xnZQjua6Ixr8zqjmavc
5fAsnrKMcp4yk7wy4DbBM9q+KISaya0jejy7dGYsj2djpLp0QWZ5PBcE4PkI
41nonMNdaQ5Sgw+tOFn9viVJjep4o3p8cjpr8svTYjmwDZViJJZAO2NKG7RC
VxrOZ9tXBjO7ITTojEo3fsqoI+HbWEAvjn8gS90Eijgn8zpyE9iqOzn8Qqfb
6iI/16UQbongtGfHhKs36UQCOr8cQOenK6BzYJgaRrRxwsFj2aFD1bbyvpPy
hEbATO8mNejVRawOITqF0csSmF6pOWWSxMCpkU2TGc9mtos45NMN2YImuit7
Dz+5C/XIMT4bR9BVHeSJjpotqPMjPTF/osuDdfX/wlzhave+J/lp0aozSYI3
p8WpjX1S6b6RYFE5xqHyk0Tlx+Ea031oOMccKrNrjKhshracPjQdVqyS9lp9
KUxuml3WxrMRJRQQFX1p0Hl+q6qazqEunVvgfcRkX4vgdezWWi+3ESrjmuDF
P7Z5Mh+OAmvamOBCJupTo+SGgA0jiEIpW+DoZr4p4BSD6KlRdIpB+f8DukE8
kRetJrarwRugMOmFrNi3DZUH5HAuk6Hy6xVQWcawI9SWXuKPubdLAmc6mrq2
7bwz2bH0ONATjvMK54taOE/Fezn7XM9htxAae4are1yfxi0DatnTW8TxuBYc
39jNdYGu1muoY8+R7JTf9W3QyGVUVT0U9naHeWN1Jd7/WVXet8E7qvUrkCPD
0A/wjme97wrI4WUa+wMorAvXQA5+NVEgQE9+z5skjfsmr53ZgBh340ctIKOm
/ZDWzaTJYUxC8gb6PPv7RfMWElRnUcfGPDX08oq2VXjOH5cGDXlk9qCSADP8
f/QW1pLC7HKrz/jyBNJYV7PonhXCw13+8lnk91kxZ0XpbFA3m8QcT1hg5Bk9
pNJ1WLtLSPZ1R9nACgcJUrt+Wktksz7KgPiynslxQJzpghix1a9lqeIldVWH
29P5Mo3R8XG4bDMD8t33aRcnalalU6K4D3RybCY/XhiHMAmJnQssken1hsQI
FK4xY47ZcmS2sySn27on2nVLnOsH22O8g/pcd0TL5BOWTDbFa1smP5PhtJmL
F9R128wP1sCz8tXqcG+/Vr0iGAdqZYxs2XkpvYhiGIMarWGMca2tPa0xaiLS
xwTjf6x2YVy6srrAeFeietGG8R4N4xOslR9Ow1LwE2lsjeQItF3JPK6Fz39t
brJ6Z1480+78hBjJSyGasV7uLZVsfN5kEn2m74xKNvTyCF3NRn+iq66GIPVu
dotI1YlurQNa1lOfzo7io7kzIceVnVidsBDr2qEmZKgxdI5CNxUD1C9PI+FC
NH51Vuwfo7EVbWoCU6CXPUTubRM5zCHyhFapqlmDW3yVwGZfHIvF1dbbKmhn
A+R2gifYpVDOZiBrYQj0orU6q2kVgbOvEb8PSAKOp7SIZxxDCMK0vEefPT+n
6/PDhjiuL7CMWRXrrF9EftKnc+K5DvvgkAR1aRpwHKteDcDxU2NtHMPuTjge
Ijg+5OA4wrWF9RIcM0600AOOPUJZP14cQoznHTNsEM2mXtC/USawHKJ3uRCM
WzKWTdnaiGOnbN3GFcdYwLWCXvrAP1Bc2MbPJWwUERBP/sAAic1+fAQSoSM5
JQVyDyKZm6Xa9mmmW3EOvzA+iefNL4wWFL82NY7T0WCFemeWpKH8/6IYTm7U
sIFi1IIWd/J7gmXMyhbUsce2SOFN4QnCWHvCSqeIe/NMb/cg2bMFvGvFSMaf
2/KHE7iCjaYKx5l1EXGMXSLYyPa+Fsff0c0Rr7LSubqXhR22wY1fjOJQRnG4
3Cj3+93NXXj1WgL594MsikOZylH8KTAzgbqlK9xArrId4vGCLjbl6pKFOUwe
GbK62fUmm5KtjeMzQQK7nMJbAvNv00DxBoxuU1N11+VrTFNAG2OSAsmt++jS
YLD81cmS2GoGy5HY6mzbNOtM9gVBspEPa5wx642xvurlesj4/OIxudI73qAD
ypZmBCnl23Hi7rg02utFI0WtFRfUUiXLct0pq3M2j435tovw+HKAMLZZ/Irm
MWdSZ6mmd8iKFkxdgcfYlooBUtQRYIXBi/BAX9mSij0rT4+XHSuXp6UwayGA
wV/kAqMihV0JiF1HyRr5JahKjdHCuJTg5OaIx3lHpPfZo+OaxXB8nbTWf12n
bI3AMtNM5pPmUwTXV5C/Xb0CHlssznBYjDdjAUNnuafmMWJJkReGmjH8SmZ8
GjxCfChiRMtWpVXM48nVeZGI5rHguCbjuGiYji7bnazKVqepzs1uVV8v97MV
HMjD8jGgH3p8vxbIGPqCKhpwd7JXIOvF1iNIIHe7QywDOHHhV4T+rO1A6G6V
yVvgS0Yn8WYHnKj4mbs1TnKJavAPp2xpAptF4W/CD3hvP796ZmpiUBo/G4zG
JpFUx5dh4OrQdYkcrjZ2C+cO6pKO0SAxfiWJR3ym/6/VZKI3erLj/66GNp1W
CEdMY0EkLpTJavrcOSwKUa6dbUaKNI1ntpCyLOy8XJbtrsuy/aUs+/S4SLoO
sdwwxabOn1fqpt0KCSGF1XhQy7pq++AM9VZhbDlx/NTYaB6pemw0/F50OskT
z5dDY/Z7YRW66/fCXlSHxvp0ssY6feBxGpE8p00U4jrUaBLJOI1wBV9X8dlq
1CyebXHzWwqZCcrBKtUGyIDx0ray+g8jSbgsM1v7+UcBIJuq9cF+4vlCbBnv
DEG+OKJIZ0tf+V8S6yzxYwTkz+b6VUeSSfB7IXv9HB0usZ7h24XidnpX59av
DwByRRVrNORhlzuos9hNZmtR5wTVnMBsfF+bjO+LfrSL2rFbG3VkX6IrfI1A
9k3+Q1B2GN7JC+XAnNEO0lZ2qtao1MKdvaObBJBh2c7rWPBFOhlHEqNQUFWW
4cs0A2SfmLMqWY1gfqsEhISAJahf75dgDNNU/W0X/z2DZPF0IhtT7k8ZfJt1
3FxuVomMR23IdPdSBcPxo5zcgXrwmRTcLR7TKR2PaJV8yHhISSUXJaqhreup
ZoQZLANpeVcdNe0eGaFCqjj67LggGBM3PXacfUsmZUoyKh70Yb0+44CF450B
vmypSes8olHldpKaTR7ICUX6N8eIeUr2iS6GH7TkYECkWNmBdEYxrmOX1rep
4lm1VdnRDNfWdTHNW58OJottDL+m10O8SfJ4qaC+xx2y+gModtLU6diys4d4
1VGWQj7Bw6PkePP0xGRGLZALDxcwjGFPdI5hukZaOlB9Te+EQd6DB8P2kHOw
+rTBsD3sXJGnyww8o4N8uAZ8XfiZvJJlZDH7uwJkse3AzhAMf5RbLs0Ei02B
YqSM9WiYyeNTGD6GTIVFGoVkDD9/uyqBB5cZu3Nzg6N4n43iU2m+DlynNigu
25iuShdmqtGdblTfrJSAcHi8np8ay0HkYBqmj6COwa4hzbJ4ostWx8iiYYVM
OO7OKM7lnaz4+oPvCOf1OHvoJ7q5l59xvL5/tvggNunUIfxEtsszGOWz4qE5
3GlA4WMMHW53DsvysPhFYvGlP8BiTE8duR6PLcPX0s4xnGYwqXVqKGAUCr0c
gppjCFM5nL1OazpJsdoQGJp4ZLNkQ2Agh+u0vluYPpCAgxpnql6NarDtx6EK
ySvTC70wJpLkmDiVjIsY7k1MR745PY5ti4u6Vy8H3acNdPMDoDvche4BDV2P
yZqhG+6FruNwqxbC3fKqDnsHN8nk6TEoYl2o9nEGG92KsZAHiniBXvohxWpC
rq+5KGC7EN1WQ7edXD2cY9BiRUEXIYJz2/n58uCVj4SIIwPDeTcSNhnDC/va
1Cj23pghn/+a3UjLJU7svkHZakanmrx5/NXxYepDAjBqjzjLvDdbVDCg++UC
ZITG8DKgYNB9WEPXLEAxSniP0y4OVws7+hm+rqMrTC1uHwVFj3KxL0Uo6hmT
muiS1QkN80C3svFsGcDyNFXb4PA1CaBd+MMxXKSGMQFVWHBmD0ajBofx+i0o
4r/wlYjmV5wZAdbuJYGuNElDXeren4A2m/zfSOLt0hz8HTfSI5LFLdXpaEdH
lm1LkdCQYXU9/WATMlKyKMeFzEkEbTycjH/CTsp61ImyDOUsy/quGjZjlmaF
AG7jW+LVhgHZjF2jgGdoBQx7Gy4FigOo1SMt32wvYqU5Jtcxl10Xu6YFbMJQ
TZKLjhriTbqEWmcj5taU8suuH7RU71GzXCM6IGPErUaXbiN0j5GbdJc2hN85
tQW5zzru6QyEYQUTvjZt3xDiYv0illC1uUMK0khRmk3iF5mx6ztVVbvoMqEQ
jcrTZXq9nR4jheVnJydzkCmqlNBGSDcsmy0zIN/okFMIX/i0GDkTMt1CvZkr
CSxCP6BPHcfM3uuAxRsVCt8MJFdKV1gXox3h+7oWvoFFaHshh8Htx/IrFnM0
vr0Ou7d6ALn0FIJf2QxAYSkHr88cEcW8eY9kKhgZDLkvzLCQuz9Jlmud1Mht
z+rXxI2UFObSM6+W2jGipvpulYR3A28v6oI08AVkGQU8obV86amNq3oUcH6D
yqyCh9wpXe282xFDks4nh7z6EWoO/XixN/apMXGc0gnTKz9zTWjgThnOw+ET
xEF94+o4us3lZalpXWs7rWHXuBXrGLfOj4/h48GZfBe5yA6Deeu62NVGrjXd
Y9WIlllqRIssuuuQGK5E/yPUbgR5CUs+Ww0KMZBzyfFL7popOLGJNjcxaUAX
rqm29XPyxC6WbxZo8yN5DQeGbnETQDglhvSwXQdtlmF0dp/Yvqa6OCWBQfsi
ThgA7YRodW5coCmLHu5wMWY5oO2vQdvH8kqj/dvN2/5dY3rflZ2+N9702BfG
tttVowfmALetAW4oHzfg3VrIoMUFaO4qW6vMDMjayhamTHR9Z9OlaU4K14AW
JWcEK54YLFNNz+hlG1hchMkmSJQfdYbIzxq0KM1jVOLEsASO/8Ih7a90X/2e
Pm/zoBw2eh4amaG+uA5oH7VAizlkW+Ga3BW7AzyKnimdGtV1vFnDmslEU1oQ
dTshSF3ZBi23hfUKLTOv3Ko8Ze1kEekUx3LdecA9GYyVYmRS9pXiKurOn9Px
7RpJXCkvxXPaFCvQJemmzize6FDDV6ZrqF49aX4rH3ggQTKwLcRGOBNKpatE
26K8bErLGCUuyqtrdCz3wJJ5TEnMV5UDycpgrcQh0dnyPqNojyR64n5fIilh
AhWnccG0MkenoO6OWSVEpqCw/Bd2jMe6yntpurs36nAAWk1SqbiqZC47zjaY
q5KCLCffg0NKTa06OE1NHVnX1m9y55NsqrLhSmrKELLFs2szWZmwJOKK59dx
ReyLAb1dFrFZglWD1Ldkq3HJTqnDDr0znG3R8KQsIayaWPHjg6V2hLwUvFLw
uR/P8fMJH8tASMiGQL3Stw2qGqLCRysa9tbyRDUrUuxSst3WddZTWuXkQJ+V
WT79QqYqXuhp75YvJXvbuoaonJAdCp76RquyF2s6Zqvut8ZyuR390iENZWXh
7DbRand/WVsJ5YZl1IjIDkbTkzo6r2QK8tkcmtJjou//kXT4rVTJAheniNh+
eV4mG7ew4Bpf2xSUsS8KBWXT492qC8rjGkfy3A12NI5vKEoWG5cRz4lnPE4C
WFHaSSd7YXvzCrq5YgcM1goWD8txxuZ4Pn9DkrQ9ZqVwvAXqE+cm+Fmo4+/D
AQaP9iszYzki/AUS8c9PieHv8QJhH2ljj+fLfqtHtNvKIPUhg9TBMlsM5xXi
vOCNXt8zVo1pXV2NpJskV5WRugSgbu4eHgLzUSVoPZJ0NoRMwxNzNIOawBNB
WA0FSHw3MkIWtIniYqgh6QFD0jyx74Kkr06J4h0OCAD6iw6+R6DH3kHSHdgy
MOP6JB1lkXSYS9L9TNIItjfv6G2RFEYqS7ZKfXx1pzBfD5avq7SVbGyLFDOd
ZcLMnDFqk37CE0qtZGM8dCyGtbx6VbrAy4LoVUh5RPKhXjCtTQrvjdiji8U4
QyPdEGZU7ADEaQOxXJjjhDkK8h7DawhBws6EE6PSeYE0NOsnMyPZcPXRvAQH
pa/PSuBC8cdzYtS7s2K4c3s1CErRuTVJpLwSpL8kiNu61Z5Ewvee1zxLzWrD
E0iZQSTrOJeuKnid2MhQ/pNO+7hulKY4oGOcYvGU5nGOvfnYwDD11EhpVWLD
F7q44imNc3Mb97Je3Qe9uh//uz+hCm6AgKdLB+DO7IqKdOzMZdtTeRAYkVio
BaP+WzS8Lv9q1T5Debg3zC0Bny4nS/VQDZeFn0j15UqkwBmtT0/q2zAPA4ub
+YlJKWyWQkkY2nRhCwm2lgSTMG7zQ5v+mR427LOYuGWPl3FTH7Egutfvxn3r
1VDa1iwgvZErwHwnWpbBPGYhbqSoJ7U7ybvP+WSy+6vtEyspD1CZJ5JKcNlJ
Isi8OgxRltUL6hBRCKZXMwOqwLYmZXjip/lOdV+ayh98CyeZYOIX1WA0ZaFL
8cw4Sfcdjrij1xK2QnFTdmqy+qEomp3K0KM4xaMC/J1uxH5B9ITgEU2WZS4V
7LF+WHUD5agp/uJhP5zinhuMN+o6vVjseYYk1UVgAagpAJvsrMAdE2a/RCWm
511KfeK6oww984hAY/QkEcyhO/vKgkikZ0GcoXUKVxNeGTY9TwTS86hFz9Pp
aMiqst3yOfAq8yuLKPyDDrMGsSD8LpHgw8ZF1FLhyjKCtGfjGmrQPcmOIEWa
1nhNURCUTfekTH23cq99BGlRwBPtx7GtstQ3JLpg8UPknTkqoklR1L82r/CD
GHtqVLQq6F5HfUjfCmdCoR1L8Hx1ZvAS8FN6OaQpASPL2gvQSA7mgFHqoAbo
5l6xqmsT0sVtqjvhHKYtS5ihuwhBJwTFUvwPknRzgHVIz4iIa7UtFznpp0oq
zFef/4zkt+HNMlX/pjV4FBQQPWogOhYQjVKvTo1ivfVBQSQnvaFbiAzLy6Sw
B7esp9o3piMGQfQFXfe96EAUj9YL0WPDYIGKdCHaTyC604Koqf3yacAFKdeA
jQ0MMB3aLIshisfHzdgO0KGYcm5fDqbGvQx96mpRAajRogaiRotiaeKmrnQK
6RzFmhRu5D29xZF8ZECYenioLNLFCx97JYwNCjlZWAH3XwuiHxfGM0TPjYxW
70+P5E3XgOi8nrXVxoE56k+LYuk4Ldvf3yGIvjo9msegn9XbMQWikgNqir+H
LRuUrUkdiFrPhY731HXmhLJcajrLJDRJPcNAt5UjqTPI29yVo8GSLPuJHOWi
b5sGddTKtlXUjm5VOcvxEaLJM2Nk3ROSQLn5RXIUGdF8S5hV3QyrhIKeLDoh
BI0PSGZ+KoERlfTvCKjhjCSevdX8gJmJfVWu6nQ0J76el54h4Af6Yl6AekOU
n0S17AneXmsEqV3r3el3vNUjGsayEMUI85bO8sjPjwrng9bfimJkUPSATsee
ny37pFJ0RofW2HssoxN+3WOZn7AfehDdkIbU4VIum7tIdbtG4qDslGJ2hncM
NxCfZzRCz3oRqr1N3FAtK8lihIIpLACJKRiAKXsq24tQ0Z9C0Kaq9ERNZzp3
QgPpOyOifI8mKKoU2C2CuheHUvWqxbM8yAlAgO7fF8l2DLwPXRXoGyZEJ9mA
4Wzs2qWruaZ3+qAYzaVvaka6kr2bH/6H/jRrlcueyJF8jGAVXS8+eTlTCNMz
lOmpK7t43ye5Pvq+h93Ka5u636JpSlputDX4A18sdOF5wgd0GZKfMbHDq5Yn
1ipP06n0vRzATx1rFxBPoWl6Kp07qvyjanmb0HSbmyaNgSJoPyDrHN3U4dvF
fC5Ko3sHRHJ5F9M/05tUZT0KoqKzanQpbiqh6LH6bmbbGsoLC9pEqm6N63Lm
QOnsVPEfbE7mZyobrNbHqu8X0w1zVoR6p1CmhbCSanq3Omrn8KwKS7ummwot
ejZfoqSD4nSoi9P7+sZxKPm4ttV5TncLKzUHpfTzIMxwkTeMIURv9L77eoaH
wo5LN4Wt9vSlCZUgSvSiY8bgJpmhwIfvBoYHwNG5UV1V1MnPxcKH6Hl9GrVd
wHRSFHcJ39YwBQg+LsAuJglO3N4vlWH64MgU9cIUF6bn6bE+OVZganuJDUyh
uQNhur1XhUCVdnEVh6mL20fz4BPE9MJ20SFQqPRhjVTWp8tcfRoCpvpaOoZr
pEgGSlGu6nYU862RopuJpJDqA5rVUPl0xtqrSYrqLupP2NCE9TlXjX+pUGyy
/7S2MxmSYhbqyGA/SdJw9a/lserj+QlqZPsb1EaSpGWLsBg2Rn0wO0a9NVOW
Wb2gt1Mi7gvpkiDpCb1e8YjeN33QSNK+IkndbrS16IEu4L0do0FTjofOCaJJ
hZ/etEkvST0fauIlaWC65CD+cLSnsItGGM4fj+eFqxfHR/BKDGyqY6Zsi3cS
iI3+ZIKy/MR9CPgUdQUR+pCAVJRolLNRwdZgJrwZHBVHUpbtQvJJpkUla06H
QRLChqQqwUF6DiB9MhWDRfjjWX0fPpnsVHfLNiTrJJ5INaNRZTWvWWVeaYGt
kScR7TwRpcpo9QMyZ+heX3afZKOQdpYHc7M81IO6M7xH90v3WsZpQgVKY/yA
6fOKJ9bwHCBs92850flIwO9Pp7iBFjZBPY86zXYJuxM7l6WaW/Y4xGbxorq+
qg5VsaOg+N66qvRojQBB2oQFKaZ3uKJLmh259NDr6JVcGi87s4FSWPAxq/5v
vVLmJ73nFb9HzwRDl6aMW7YqSa7VPt27xnUy5duH9LV42KpYB5ZyjfgOVKIa
o1CipYdyZZnS1tpuqEVgGdfedCjYZGqGOL/z3a7Up/QDKxBTUjfNUN5vXF/y
ieAP3kz3QChDcO1V4smflv4BhuJ9YOgpehAleNMMPQFPnq4gjENGZDJnRP51
hdR035sXz7yC+gWTMEVrVClquvh7BU2rkirVC/8aYSaFaOprwB/jpb4N3blo
hPkinBdVu8PDkvgHxPPcE8TOj81fRXRGgtfsnakR6qt7JVvsyswktXtElprW
rbanpns1oKZrs/TxfHctwymbpcOEpTv6x6nuTeupCe2qq/16TcNWzdFN3cKZ
nfb8Dn7dBoISiEIwaBrCWK3q5B5v1ByFLYVHhTmoihDqq8sdNCzlxmAHQ3RQ
uHrEhug0DVHSEB8SSN+eEsGzZxgZhp+Vm7C9ctRlhmiMQHS8QNQZyBkp+ycA
0YeGuhDdqyFarEu727UN2H2wBFCcGqpwqXqdfivqEK2GN8/C/mop+FbmYi8o
aHqorj4NdfTpvdw7BVGbSQe9pZ9hW66gy1pUCqPbiEZrusjV2dsHmj2MrYhH
9ZQshhthkHhdr0z6SreSsbgY9wAslcPrf173Whw3B4r+SBQ9np/JBd0HRmWq
rxbGqk/nIbM5Rr1REKNenoooqWjeSwET0iM2RQN2UziGpL5BCrtaky51KVrD
2w7l5ueYiiHaPEjNt5EXooGhj0Olpgvx69R0IcqQenhiEDxIOvCRk95inS3D
AKn2poJvBxJkJUJlkWimRCmGXbz3aFIoczVOFh9sS3V1mdGkC3KYpwYpcPfy
3WRarcAhG58o0hwXKbYqDbbe54Jee27+jI+d0TL1uMzKlt4rnaJW9euoWU3E
goTq9sE+1biyjacL/GispvYJEkmi6hHfAS5S7WEcZ3sTUXiLhDJi0AjVbM+o
b7ClB7ar6nSKNxuqIkFqo9TJikr3IvWS7fTNdJqkEKgQqsAqI6/9bYzR4qX1
VOnJmqrsWa0oSaHCE4rrAysCDPYo8yAKHd6+Lxcm8Oe9OC2Z9x/C5o1SDwb1
gVPcqfnnis2VCAY0ZXFcM7MI4qilSKULKvo81VvbdZOVXWGqrUagqbqSyY1R
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
FRVo0Ra0cBlqRoKK0YRKsxfeyvreC5u7JJdUwWFPYRY+SgziUQKIhHYHyGR2
maxKB0g7Hx2LcSYJdCIt/Qj7mhg7oFYzyNcWTTWbaDMaHG0IjOAUietutGIV
XuRb42YAJ0dfe1B/Fyn9heAZHJUGRQqMtbzj6seZPZN6Zp5dZXB1F0M1cEXg
YdgotBtjnphpqLqmjzKrOwqL6wWdOubeDN9Fl46NVgyacXTWqwYiUoO1N1+R
E7gS9Thx1demldB7NS2Tmw7570rfHC6lv/uVer9YSt9Sdu0bavzbsWb/tHbH
lHSXUs4dSvlgsrr1HJqwwiR1+Iyx6YaFY9MX1BsmrjCJhTUeoLh7+4p903eV
gu+VCn79RNrmfPUUiiKAc0qhL/tyb7ruzPZ0z5KJ6R4l5/2rJ8TpnsUTlKkB
QQZ4C2AaW8L6D5ctpduhmbF8Et7y9esV5s4tpdWzZqRrz2hPl55aRgYySG82
74iZ6UmHzxzHsRawK+/zn+Bcp589FNyDFHtxjbKnVqrO9z6cUQ21a0vgiema
3YOVVhN9gM6CCi0lo1aV+0YY6faAsoKhvc6QDePSJi536owV97bx1qeC2MDe
9mEp8ErLpUnLA8XQ+MxrnWPMqiXwDdSuaksHT+tKFxwzW2uvnnm/aMdfE7k1
JV95r3KV11kqJMagTlDefu4fHOXFwfdazn8FU2eZv+bxNmt5a7eatzxInvnq
Lb0QJy+sbTtFxhj4R3uQf9vEjIaM7UJgnjvW0CjCALqxNx1+EnWXBuEEtBMt
chwICqC2bKCrLyJKOaizvMZ4TNAfV72dfHIJHCF7LDDMvtFtd+jExKdT2wBp
ZWu/UJB9tE+/E2Adi0rpXdf1pItO704vO6kDfZYXHtOeXjS3PV1yfFu6VJmh
d5w8Ob3zlMnp3QOT06dOn5BuPXccxsDtZnpK2HG+4eyJSMwG/0OmCFi7WqXM
2DcX/Un6zMIJ6U41mO+6fN/0FfV3t1LSXUpZNy8+IH38EmUtr7sI3BHVizrS
K08u4x7B446CCco8fHRwvS9Uj345rMJXb+wtpMN3gG37Q6jK4dvVMHl7Vzp8
G3RS6hhDqIE6/AAOt+ICrBu/HuO2noIlvyUC3Fhux2YVjlF7WzEWYa/Suj3K
bgWb831lk76n3u+vPCDdC1r4EIZUEYeZDlCQtOGJpA3/QIpcICPbKnJsks/E
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
XaScykMhq/Uzcoygvpe+r3etB4xon/8DMTEQlw==\
\>", "ImageResolution" -> \
72.],ExpressionUUID->"a4156d45-c965-48ad-b7ad-de666036b33d"],

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", " ", 
    RowBox[{
     RowBox[{"\[Psi]", "[", 
      RowBox[{"R", ",", "T"}], "]"}], " ", "/.", " ", "psiSolution1"}], " ", 
    "]"}], "  ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"R", ",", "0.1", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"T", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.827920695607768*^9, 3.827920724110968*^9}, 
   3.8279207813129673`*^9, {3.827921297849469*^9, 3.827921299209161*^9}, 
   3.82792140728563*^9, {3.827942831539927*^9, 3.827942831968069*^9}, {
   3.8279436050709467`*^9, 3.827943605404641*^9}, 3.827943657704211*^9, {
   3.8279441120424*^9, 3.827944125913479*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"9248498c-f0cc-4e1f-a718-298eb2d69c0f"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
8eMavPf0XetChsq3JzoNh9Ygl/J5G/3zTD6e18D4Z42+oLrolC+eIwCf12M+
PLsvnaZyUVNo3R1Z9JPJx3LjwuJcbA/2S4NnljJXFo4rWEccW0yFZktlYbyF
daRYo0cnvbUB80noxziB+34HxdyxDgD275fM/OzcVoxxErhdrECxg0MVxjcY
/5zaXnxLV5H75NC/m1Y73v17MA3HM55/9SQ5vK9PxPoA9O+35sDHHIuq0T9w
5sjZzznjmvDcBPzwMTO9DHWPRE7O4zb37XROZcC8gP3vr4ZjXry62egf4kb7
GsWhxacrcV5D3ID1HXSAeOupa6R+zbUGnxfGScbO7gldRhvqDPGT+8eBE6El
nxhtl/8OOZaIYv9+dfmZb3koDeMA5F0s9KXahkdLcd2B/kq7o2GqF9FM6thU
fNCOFpqfkp2H4wH3sw1sa3ozTfAcH99z9JRd9LPXF+cXtPODxqVzf+MS8HmB
zx/fY1mypAT7C8aD2X0jXbNfYfi7wIea98TzCZbS1PdvGPG7UzXl776Czts8
3p3VYWqhTeaXb+tdDpMg9/qQr+nk2sK9Ysq+KX9xcVVBA4mHuTMTo7X29dA4
hguFaRLkfaVvBQ9UBeb20hx9v315U0D40gffaFXjbTTmo+LejwVZ0U8ak53i
8LcmmqwSy/cCTRLnu5iZW1ru9dAO3fE5L/CW3Ou+NjGUWObTSdM1P/lDZRWp
h6zQL3qtWtJBqxbyElFOJTxtSYB0etB/9jerErZrHyX7wf26qaWzeXtonyJK
TK9fJ/zyiUCxG7dbaVsb6Ek+z0md4eNovM6mkcIp72mammxYXdXfMiXP9HQ0
jUrc0T3l72qCnroRc6oNCn+jfeKveT5hs3unvP+1slB/p/fe1il/N/Kw59iF
A4+zpvydw8sRMhx3tOumvFeicOqAwMX2nil/Rw7/zqrNSauAG0Rn56yl+g+2
tE65V9+2eO+2A/dbptzvdb/41be+J2HKfdHLdruTfI/1TMmvJpz/sPqod035
ez5HLArnDl7tmXL/reX7n+2Wuyun3LfhvHCQU3Zpx5S/21bjIR5RM1495e+M
nbRX0/qj1Dzl79vMW1ndwySVTbN4YSu0VaEO+9dcrfhozN1SmuXP5TNrBf9g
v0hzhvOXynfT7HoS3q1zIv1Yl2UUQBfrorHypLFbhTChf7GxK0pnMjtpqXxZ
lxtDyHjY32Qk1RVaSFu40lHpgjbROWZRvu532R7apgUm4x3tpL+sYmm7N6X2
0F6s/sIsuYjUCa89+9GxXKuNJvZ2uVqhAdEh3zR+r/XeUtr8tllut9iXI5c4
Viwlmp5A4x+u1dkqTPpro2Gi4h6dBJqprYnO/JWEmzF5DK5l7aVxpYmzhV4n
/VjvWpK893sH7fgjdQm9UdJftmfLZkm6tdM+7K64lKVD+je0Oq3aY0MD7daa
V5s9thL9R388+255v4Em8NLprK4M4TE3nQuU86pog2o/n4mUEh52hj5YcKyc
pl1x12LuMjIeQnzkdMs9K2k7fLYxBaqQfq+0O79y4YIaWsBVHSWxEjJu69tk
94tf65xSX824bRHdcqt5Sr0R8p91vU+vLh4nPLPfuPenR+WU+mFh5L4IFrUK
2nOG6WX9rngcVwtV3BUbO/NppiwlHwI1K5Dz7dTVei7SRNswPNc20ZbEQxal
xxP7NlRPqYOFPhiu2m3RMKWudfbAFSPGxiKaUA+z86qzIlPiT0Ytf2Ka2Fzk
RUmj+400Gmh6zw5++ZglgHxTkNXN++plU/bj38fCZFvZGqbEPdCH5570yr4g
wk3CBAJuJvZMOZ/1+F2kwJXfPaWe2Tl3u+9Sq6Yp+f9cJtMnCxRraRv65H4P
Dc8k+7Xjdxp8blXTFEbuV36KJPvTPbm6YtbdrVP2y1dPy9IrbDNpd2x5VKwO
kPgpxMXT8aWojOagesxoq/ls5D9W1eanl6XRVv9aqeifQOx9TSOvL/WrmbIv
nlndMf7iwydau89h46cuJM85XpNeePTVJ9qq8eOGdu5LptT5F9ZddvxTSPRv
K5J3LbDrmlLP9LLoXsCh3z6l7rp4ju3ix7uypuxfGBurexNCPk3Ju+SqJaIy
j7ZNqbdPl1dMN56nGyfTjfPp1tPp8pbp4vN0+cx0cWy6dWq6eDhd/JxufZku
/kw3f6eLS9Ots9ONn+n6d7pxON26Od06Mt14my7vmi6uTpe/TbeuTZe3TLc+
Tpc3TpfPTJf/TLcuT5cnTxc/p5vX0+VF062z0+Wx0+VL0+W308WT6dbx6fK0
6db36eLJdHn1/3WdnS5PmG4dnC7fmC4PnC7fmG59ny4PmS5f/f+ty5P3WdPF
8+n2EdPlq//X9Xq6fc10ee906/t0+8Tp9jvT7R+nyxOmy7en239Nl4dPtz+d
Ln+Ybt86Xd4yXV433f5uujxnunxjuvxnuv3gdHnOdHnRdPvN6fKi6fJMo7rG
Pcx2v/DvIPV//G6s2d1GC6LqHsB3jecyXZ5dQfM6/KbxVOA85AI9LX9vlOQz
lNskHU/tJH9H6OtT7o1aPwgH+1Rr46zMt74MJaquCPY3orpLaVYMGi9nRnmh
F/lOjfjlK+0LFpfQXkz6To2g9j/fqQF78D90rM675mQW2gNPoL63wi1uaXDK
nXxvZaeE7SHP7YUMqK+C//VfdDxX5aYiB3vfB6/EPA86M+Yr8w9MPJJE+23Z
yzKbWsNpwMF+wGDRM7WPOeTvaFE86lN6xpU1SbR70p3JhSoy6Gdl33Ptm2yB
yMG+y7GX/dTlMAbUS8H+xMnjqut1MxisSYl3PdLId3N0tts1jD1IQw5+uGmr
vVL2+jGg3yGeCD7Sa1me3479DtxS0nB/dKAdA/od+LLsSnvF+hoG6Ax8gPre
CugMvFL9+Huz7WmoJ/Bgi0v3pRWSUDfgwyl79HI0yPsL+B0Z7dWHdZruYd0Y
uNKKHMmKX4n4XBBn1ETnJ55kqsbnAn5ffkdJRkUFPhdwn6yl5nZvqvE8Fzg9
VIn5TMITGoxb4P3WLoVOp9JwvOH3WajvoYAOwHteSG2VaXHHej7wA52uIVvE
8lEH4Cs3Xbd6Hx+DOgDn+XYxk4kzDscDcME+jYu8Z2+iDhDH/giGsX3dH88A
HYCHdKcxdVo2og7AOd5c+zkak4n9C3yQ+v4IPBfav2882tWXgc+F3yU542xw
ansuPhdwTf9d4fWGHgwY58CXxqbf5pOJxnGL3xlJGDzqyZSJ8Qri3oxffWwd
T5rxufDvokT+dDN5W4vPBZylcO+PhT8TaRCXgKvId55dHxuP8QT4+9+zFRf3
56MOwL2o74OADsDn2r5e9qK1EHUAXnY2jq1zVjTqAFzrqF38i1WpqAPwY+bc
cpmzn9NAB+BhX2Vmjl2LQh2g/r+pk/NW88cO1AH4B4WJtIw9DNQBuJH9gwnH
vkp8Xvwex+KukDVdkfi8wNWp73TA8wKfN1O1cM6SHHxe4F4f32l3moVhnAR+
IOGVpseWfLzPADzOj0U19tU7HM/Ad3vVKdbeS8PnhX2H8pMv7Q4/m/B5gf/w
kPz9+V0erlO4T3HddM/zVS2+l4ffs1ASuFYh9AHnNfDM88pXhTtzUAfgT6jv
aIAOwLOLZZvbZwejDsA5LupFlkjkoA7Ajbbt3WC/JBN1AJ7i9DLKnf4e4xtw
pZDH4zLWIagD7BOXHnJ8ne0ejToAf/OKWfmrYgPqALyF48KSS2ql+LzA7Qz3
/Apx9MfnBb6X+p4FPC9w/8Pvq87kJ2I8B270ITE9wC8fnxf4n1MPUlbmu+M4
B952VqbY+W0yPi/w2AOXhjL4P2AcAP6A84ITq1oWxjfY71s5e/G+LiBxHrhK
qNfcQY1PqAPwlvf7/pyNssM4AHx57E7ljXdJ3APuu+Kf702ADsA3WObUGqwp
QB2AK+UVBjHxpKEOwLXnJbvMVI3F9R14pVtRl1DgM5zvwKO2WS9aJZmCzwvv
hQnPnjvM9pms18At512tXsVTgs8L3LlxhqK9RinmY8BTTTO2CPeZYhwA3iXj
9eLkJ7KuAQ+kvgcBOgCPPd+65OV8ogNwXylGcIKXI8Y94DQvk12OC8n6DlzW
xXZ/QTbRB3jz8xON1deiMT4Aj95376hyMMl/8DsRD9s3tonao26wr5cv0d4n
NUzyW/yOg7VOiwY9EuMkcIs7UqVrfGoxH8DvOISevb4pNBXHCXAp6jsOoA/w
5Cqve5LmZL4AF85bYhwUlYr6AB+t7a3IZCN/Nw/4UpO2QO9H9qgDcOdZrLJm
ZrH4vFAfSKy717w/vBSfF7jAMNedztJqfF78+wBseVaHeyoxPwd+67Sz4wfm
RBwPwB2p7ynA8wJf9Y0v/A77O4yHwM1Wpkl1NpI8B/jyOYZ1ZbvCsd+BZ4Sc
WXy0JQ2fF/iB7oGUY3seYTyEusGQ/PhEskEuxkPglne03iuFkDwH+Al5hpVt
eyL2I3AF6vsF8FzAlS8IjiuezsbnAi69cVT3gWo2PhdwTQFJpe7EYIx7wGUl
PEtPrwzDcQt81o3nZaUx6fhccL/l5NPh3Y3H2vC5gKeqcLz9wkL6Efj6Hg8J
vZRMjG/A01X2VDQyheN8B25xJeOo/KFc1AH4Wer7AqAD8ObWA+EmDSTPAd4S
wta0l8cfdQDe6X5r4bXRNNQB+KFuy67NEYH4vC6HnfYxM3XQ1pQ9trUzI/N0
GfX+gtXcJ05j4lUY33ZKzm3e7fqJ9o2Vf+IbSwK2fySe2mdN2vfdpfzLCLJq
1PxnfwrtX0z5H9y2WatoTijGbXnKf4lhumCzOekXPrmS07Fmv2gGzV9Nz6l3
YDtPUvcBdKh7AtCecmqf0jlpf7SU8pPBdMHt0SeyP9Kj/AwoZ3+/zkbyRr/S
wlg11x+0O+pWHsfjc7E9f45+XhRrxkS/umnfQPGlWmyPAlWfadPlKRLpL8Bx
cu1Q9SUmpnGazu/t/XzbyD5uP7WPaJu0fxmi/DMlzb2lGyeP7VxH+d8lwBXf
fomMfxvKv8rLl7luX8g9Hy2qHjVz/IvFbUY0xqs2ge8XXEXZ6SZCB7v9G97j
OL9H1W3mUe+3QvvFB76+bIiZQW97o1xxqrMY278F9juT9iktlH+6p5ThysI0
HLdQF3qlNF/epz0H2y9G+b/680qo1Ewf1Lmw9VeFWcMc+kDC3UPb+xuxnRbU
/Z/n1Hu10M4F4YN/Y8xm0+k7tnwd/XwI2ylO5fOOk/YR+ZT/te+sRTK+5mM7
4X4Rv9+xQaHtidjO+ZT/sYY3BgbCCTi/Dtv9FGFimkU/vD5EPnRpEMYZn30/
dqu5zqS/iF8o+lCGjOej2mMeonlcdI1NNg2aRWQfsYa6R+qdGj/guJbEBwcq
P98+aV+gS/mxd3b0lu0hcRLuo/6x2iv9br8nzq+x+NE1agu56BMLTi1v98nB
8VAWOaHm6v+ffHj3ZXG3Ky3YHnh/p/RR46G+o2Q9GqfyZKdJ+XkJ5adw2GJ0
RuwHbM9rys/2oENffDzTsT1WvBONMV8W0iPWDV3rfU3+jjGcUzA5vO8XGDiO
61Evdc+Ki2+wJdcpEfXcyc0yMnGTh/7EXSe+Uj8V2w/nNY7Ue9CYl15ndhHN
46ZzGCkGM+dX4HNdmCYPV6H8a+6Yk2z0MgbnIw/lv3i9feGF8lx8rh7Kf5ub
+ee6lWTeJdrMCDE7uoyu/twtY8itEuMGnIuVUe9fQzuPN7FudfVfSs96cFtm
JCIB29lD5asGgv/Ok+Mp/+kcpyyvp+diO50o/9oat2MTu4n+xyj/Uibeh7P1
gzAfYNrJWh7zZQk96UDELOnxcNT5n/MFPrqyzxO9Tf4kH4b3oVIlriXbXSjH
9v9zDsJLv2uR9jjzdAaO5+NU3ugzKb+VpvzHz/fIsucj6wUT5d/0QYt41W9v
bH855b8lUMlQ1zcT8/ll/72ftpzOdP2CpssTUqcK2DhrttrCFfSawfhMNSPS
fnxPIe/hRJSjI1lHqHxPbFKe+YbyI/LYl/egcTK28yLlR+6KooSBdDzGjZ2v
OV6ZHRWga0cfUPe8S9aRh0VsxxuGBOm/eNlf12hXkPZQ51MG1HvxuL+4xRZk
9lKQXtisME/SsZoxOT98MCk/dKb8+8YofLwk74Pz8SLlP+2NQp17OonD4N/i
vrj2cdNUXEeWUff96O/dVs1cFIF67hpnl3c1Eqa/PcV69enqDJx3cA61lHpP
/9/7GmG60qR8T5Xy45n6KKzweSa2E/zMeMU6/i2YrHfLIthvis4Sppf2WV09
vMYQ9WRdyzFXrVyEnrctaTdHN4ljcH4kSv0dANCzsm2mToONCN3kaa1/mF0I
bXI+dmxSPsZC+U/dxbYpaEMBthP8f3YdHA0biiL7C8q/bkxbQOc3Bub5Q5n/
3BOo1IyJmBDOwPqAAJUX/V2wuibxSzHqv5a6V8A4/2z5kYsZGA+5KPt3xutd
ellJHv6Zeq8kpMtph8naYpyPJ5uezo8z+0qzEWy5JLqvAtvTTdl/zVes4lAs
wfYYUXnRn4YsZof55aiDHe/jj59iemnZGdd/eAQU4nw8S/kXPBt5x7IgH3+X
7VdFjqvoX9otqRvNs7vryDkFxcvjOFnvbSzC/PkGlc9kuyrIb+gsw/zZ2a1s
iZjaH9p6oacBzQFPGMBHqHxpYw/n9bClmdie2ZT/nBEz8zqVHIxv7BTP3SDm
9t0jG9fxq9TvVgTK1r0azMVxHuH8pd+sgZm+slFzS+Bcci5jljyQIarGSr99
5Y1S1/MKfK5zFDdKllR0WlpO6p9UnvP4hIBY7YUKfK4wyn96VHPpy/YsnC86
UMem8kOw76Dyqzv6MYGDbqUYf+A9R3bWcysT9xZiP/6hzstCuJfGKBjEYL9b
UnlOTesJr7+KZL2A8zXltu52g6JsHIej8L7kvB2nkq1JfDCl/NAvtTN9bs1G
fbZt/3OnIWYefY/9rq6LLQXYnjbq3rW3xiXWlHmF2B7If9L51fgl+MsxPtgv
/P1OVG0u/a1g5l7VGcU4v7ZT/vNzR49KmebivOa+M36+QWEh3avGYY1BVS3q
D9zmWgqnIXM29pc1lYds6enYtX1HEbani8o3TLmvCnTJlyCHvOiz/qKaoHtk
f5HQN8bGZLeAfo1nnaq4BolXPNTvBmldPN+nmo/jDThLenxPKn8Wjk/Ii4rP
fIh4e4GsF9IaTDFmRxfTl/OFe39eS/bXTh1MwmoLuelHQqTdndxr8HkdKX54
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
lhv4lCXx/b59uMdyA7eb6lnzeJjIcgNf6rLg3Dc7aRzmkp9B22hZtdWZnTwO
wddQPj7IE/ynn97nXgMiWZ7gL1NKnxjr5rM8wV+s6mn5clQCyxN88/360w19
0lie4BN7rckerJXM8gRPGnjpvEWfWNYn4D+C1G66bk1leYIrRWRpnom9xnoe
/L7L5Sg7zVSWJ7hpxw3NYvpuZnmCh/iE3uj2PYnlCb5xxaDMZu7XWJ6O5Icc
dXX2t9azH/C6DJ7TT/dr3R3JbgSPf1T1xfdpLK+/4NZfnPKTHCS7ETzv2iSl
77+e5HUW3LEiTl9PU7IbwdNv+U382ieY5Qke2Sqvw56/11/IE9xs3w/lsKv3
WJ7gJfs2qXd7K2N5glfX3XiTMiue5Qmu38Gqww5RshvBXeO/um2IlLE8wb0M
DYN3rrgmjq5qu1u1pxLvs/QSY4p3DM0SKtae7K8qqjDv61/58m1Ojth79eUu
F9arMt8breBy922GuHrZrZ8DtaT93VuDNUEXc+OFAn2bLWV12swn7jZK7nEw
Q1AlPwP4cIobM/ryx8KB66V9X6VayKR6jXnigl4uM97+qs98V5+Wk6PbpghO
vkpx4ZpDmD9evUn7UOA1IbPdVPWYL0OZf7bSmlHzI0G0zmhd5GdrwLzsrbPH
jS53xTceWV778oYzP1uye7dm3xihmPI6YR9n7Trt9J4NoqjhOvuioZ0684Cd
ep0rx2cIQyhfFXifA5cWL28pvXMHV5jcFH/m9rAsn0/PBjJ/Vh7seCs4ifM0
gc86qOyRWXBS/HryVcKkzKHMhwU2d+y0MZHzbYFrnFq2WHbCR9SkvEXggy/U
unXLjhe8rlYujFHsyvtBhYc1Fb8sMBEK/F6bTAvrwfyYW17un+dyhcPmP9We
DdVm7jVr7+Jt3cMEFTr/BR9OcWmGipdXJv42mHm7mzpzzly5K/bX8rZPPC+9
v75oe0Lf+Y5MjHq4sG9AG2nfmnZOPOmrfFmYcU6z2mObtG+9WLtlv+8NmeB/
zX74cQ1pH7RoTOSt8KhQYTfpB9h7u7o+DR9y4oEoI/0A/mDApPGLnxQKfUg/
gAeOzZxyLSRPsJOzz0vJPr9G+gFcIXf5stPrc8Vtcna4LtnhkXJ29YIuTXZ1
KekB8A6tV7oWfUwXv8rZz/FkP2vI2cmDyU72lbOHv8nZw/xdObsX/JhJvW5z
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
BPEq4hJTf41TqVacGZwupsj9bzb9bwyNQ5R/b7HSJ/1nDuthcPNj77elHg8U
r8i9i99P7+JRHvxThXmkhnaOIJL9I68/TxCXX6+hH/Bf0Td6tP/Lqkx8LXce
t4vs4atUD8ZtRKqdUbRfvZgd2GQPyOvzdWQnyJ87Z7rdae4598G/eJvxXj9n
ji76lz6/PU3J+oJR8b/qH2o7R2tLTf2/7LdvZm8P1sqq/2V3fdn65c7Yx0/+
JQdLo64ec53q/yU346L+t2WLq/+1fv1XO//ru//Vzv9qz39997/k8F/t/y85
r0QeSdLP+pTHGeee4LE2nR7fcg3l82WMt0czWvQ1XRsv4t4peNku5es+vyaJ
Xcn+QXsy9Uq0nnrGiOco/gP4QsprjPsP4K9qaqoa2/+9Lyb/NvgEV6f3O6fE
iLjfCz7TSXfD+z8SOE4Lv8envLq4B4Vx7iFEuVV7xombvn9MDZ8rvQvu8kfn
TzNr4oU5iMtH/djtVFN+2AaSD7jvwD42/dalCDNJPnyfv4P2tl9PxAibSD7g
7eNCVbo/SBCP0fsd8OWUX7UtyQ3r+I6XGmXuQonghTh4xMdQXtQgkht4RshJ
i/LHfkIGyQ389tplmdo+aeILkhu4u5r3/ROdw8V29O4GvIjyopqSvcH3Kk8c
E9d3WCo2am6Lau+hyeNkRO+vLQ4czRQgT/A2e9tNXK2aIuJdEvRwa6tgxRCt
VPGmjl32vlLpPbvKnJBUnwBv0V7uvYzC3Kb3Mu/puyjvY6pY9vhhjhgid77/
I6fpfF+N3oXxPQTKr4f3X3yfIcunWfOZKWLcbjutgHzpXfnH7KjtifFRgpbc
exkjei9zh9qP8dCr5MCimgEF4k/FNP0tXt2kdxYb41fFPMkRLyNuEs33W5Rn
bSLi2BPPoTxr+2g8g6+gPGh/kR8D+uG4y1v1FmczxQb6LtsbbYzWTriRK3jT
eAN3p3xkL0me0CfNjccEnNp2XdxA/Qje9Wb33zWtY4Qw+l/0r+6UASO2KshY
buDbPfedf7F4F8dTgn5woPxZihSXhscP5cn6Ru1nf2z7u0OiYyKEW+GetrPU
pHt018e9X3DDL17EezHMdx/Kt4LvYrwZUF4VQ3qXxPfY3RpvH3mwV8B3Ud47
7snzNVF3+bvgPtsXDv013E9wknuftYLeZ42h90ccP7AhaonCdFFMIPlgnMRF
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
y50DTqJzwP8D3Ao3lg==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxFnAkYFtP3x9+Zd3ZrIUIpSSn7kuSHEsmaKImkVXaSEoUSpSyJ7Ftlz77v
SiH7EmXPvit7WYr/99P3Ps//ed557nnv3Lkzc+fes3zPObf5gJMOOjGu1WpH
5bVaXeUrWa32v6hWuz5VWdRqw1T3osrTdX6g6BdEjxDdX3SptmeJPkr0ulWt
9pQ6eknXNtSxtzp7QWUDHeeozdFqs43aNNX1PdT3/aJHid5G9ReoPEzHnaLv
UNu1dbTW9Q1VrlXWareo/hbRa4q+WfTNomfq3pup7wvV14aqn6n621U/SccF
olP1l6j+LtEzVddH/y9R20W67+qqv0n1N6m+g+qHip6rcgP1uZb6HKl2Z+n/
oyofUPtOhfuk7+lq84baNFH5heonq/5C1Xemf9FfqtxDx6WiL1b97qLHqJ8X
1c/roker/gGeS/Rxop/kPhq3R9VnpWOYrjlS9Q3U/jjRvURvIfpenZumY7D+
H6P6nip30LWxnmO66n/VPXLRq4o+WfR9OneC2jyj8l6NZan6G1U2172PUrtP
1Ocmou9Xm3vV3yk6t5meY2u1+1HX7Kw289Vmc/V1udrck9Rq/+ncvzqm6v/+
anOezi1Tm+6ir1PddeonU5/dde1C1XdT/bWqv1b1E3VMEJ2obku1OY3xU5ud
dMxS/VM6f6rONRbdkecRvZ7o/6ntevp/oO47U/e7U8c3qt+X91X9waq/V/TB
an+96q9X3Ytco/e5U+UHOkaJflPlFbnnT0O1vVz0DNFriu7F91Ufi/UsHfjm
qn9e73tEYfo+tW2qo6XG5zg991c6Wok+XmV71W/FmOi6dXSPh/i+quuna58Q
/ajoNqp/UvRjor9V/Y667gfdawcd9zG2zB/VNVM/56qfPUX/I3oPlbvo+EX0
/1Q2ULtN9C5rqPxE/xervoPKk/QsTVkL6muV0u81Q22WqW4jHRfr/1KVv+u4
iHmT+RteojabiV5P9Wfqvq/p2Sap/iOVx+rcIaJvE/2gzt+vY4j+7575W49T
+0Z6/lNUnqHyeLU/VPVtRNcz84Qo83UPhGszPecmkdd5i8hrdpbG+Qf1cb7+
f6qyj/rpovpb+Sa5nzcT/b3Onas276vclm8gehuVn6v8TMfZancS61zlnfAT
0XuwxkUfrzG7Tm3+C+uNdbdY5wvV3adjkP5PTlw/XP1PTcwTzhC9pd5nFd2n
n8r19X+s6m/U+YF6lzmR+eOo3H3srL4HqH5W5OtHqn6Ayp0K81Da/s630/l1
GfPAd2i7pvq+V9/ubtU/orp1dL+hqhup8m+VB6nNWbrvX6n5wzKVVer+J6p+
heh+8AaVt6uPOyL/XzX1s12gNrnq7ol8zXDdY32Vu+ieYzU+ieqP0P9BrDWV
m+u+Q1hfordjbWkM7lSb5eqvf+znRB6MVdlRZTe1/Ujn/hLdT+XfKvfU0V31
vdV+QuTvsb36PU/l+arfVH0+z1iojPT/Q9GtRO+q+41SH8+r7W6Fx3y8zj8P
LxX9tsqP1e5jtW+t8iX9P0f1C1QerntNjDyHWujcXNFrqXxX58apbgLyQXV7
iT5I9FfMX/1/W+XnOk4X/ZbKu9TPFN5X7aaqHKPjANFXqFzB+zIvU8/5cRrb
GyMmvNdMi9TPM13196mfGaqv6zhB47yRjqY6HlD9LapLdUzWc1yGPIUv6WgP
f1Pdu+rnT9FHqLxD7c9S22X6/6f+Z5G/dSf1NUr0UtVfqmvbqdxH176hc7+L
7q2yGTxH9GWMpY4dWPvwWh0bM8+ZbzrWFb2brm2lcW/BWhd9gubHy+r/VZ1/
Admh5+iusoXuu47qT1G718N8RrY9qnarRZ7zj+lYPfK6eFbHKqJ/UZ8/qo+n
Y/fbOPU3vUFjdbrok0Wvpu+1s/rvoONoZFtiPeFoleNTy5QHRJ8dW79g3Z6m
+hNVFrq2m55vDcZK93qrsExfIXov9fekrnlc/5eovFjHItGLCj//UF33i66/
gOdTuan6vBr+r3uNTr1em6p+X/UzN1zbLLUOcIfanJWaDzVXm18L8+TVGGPV
T4Evqc0C1a0feU73V7s28Ged/5l2ovdT+Vth/niAyk8j94P+8U1kGcH9lhbm
7Wsw91PzyS3QiUTfKPph3aud3vlSPedzqp+iMtLRXNfsr+ffT8cS0e/p2CDy
2higdrnadGO9qG6hjuGqr6nuZ9G3ibxd59bQ/8NUbgPPUt0c3es7PcdOqntL
c+cD+LSO03TuF9XvpvofVd+1sNx4TfQ0Pds0nT9Edaeov1Vjy8JS5aa69m7R
j6vNU7xXaTmKPN1R136iNjfpOBRdR+/RSsemOuqxx+0Otftc/W6t+76u9vup
bKn6ibp3N7WLY4/13mpzA+tCfX9deNz+VPmNjumil6u8S+fuEd1Mz9BI79ma
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
L7bcusHXgP+xUWZscprK3Ss/Dz4vsGR81uDJB5bWhf/SfReHe32LH7Vu7Bpf
xXuFdZxI5U16bzWtHZAYs+mqI6sZg9pb5/ZX+SPzMrINdlBi/+aBqXVA7Mju
Kqennr/7iv5B5V6R189quf3qI5BRkXWHfXiHxL6Gsap/vzBmy/OAQTP++FHw
R82PjPGBs49ReXZqfwnX/pe7v8mhT/o4FZ6e2McFrojvamZlu/RP7D+Nw7Y6
duEa9bWazh+GLZsau50t+obcspV1gZ6O3+9WlUeUxk6L0vOVeXsQmCXzNDYe
x/X0g88efR/59SA2lv4/LfoV0X1L45+rqlxT5eqx/bXoUDNUPq42O6X2L7+W
WC/D7/+E6MMz+74PVTksM28bmllfu1n0k2ozXP01iO3TBZ+m/XOJfUqDYs9R
7OuD4//3pVEuRH9U/X6qL2u2sbEfwQFX+rNFv6M2a1T2Y3evjBceENueh1ft
H5tfgYN0qtkHhI3ePTae1V/P0UrlU6nxR+zQT3JjDz0Yx5rtSexKfEDo2T1j
8yx8Sb1iywkwC7CLOaltVGzV51LrvodgF9estz7IdSr3z+y3nZDal5vG/q7w
CfRC8OotY39LvuPeerdvdc3flfFt+M3zqt9IZfPY33IO+J7azFWbHXPzpXmZ
+yQmAT3zEWQ61xG/oXk3PzamPbk09j6vNKaOnQiujg0K3s41e+maL9Xfn9hT
qfHyVxPbghurzWz9bxxsGWyau3P7NZhXzSpjsedWbtsitCdmgvnQpKqt/MjM
qwZ6j/8Kx0hA44PBpzAptT06XfSjifXQ5UEXvai03Yr9yjnaEIvQJbNP8O7E
chX5Cu6J/wKZgK6Jb4dr8Xdgf8xReSffKvcYwOdfSEw3Ud1psW1esON+xHvU
7RP6InOfz6jt1bnxc/xQNzF5wVZUd6ja/iu6W2zMtyPzHGyjND97G2wcO0vH
r/rfurAueE9pPnGMjnWD/xM/aBzZJ49vHt2oEb6+uu2NJnXXgzu3yt3npirX
CW2Q2dit6JjELYEPgWODET2Xe760q4zpMwfbV8YYdo+N+bwfG1daKHpt9TdE
x9c1y1J8Ofhxfgv0ozXbTui26Egtc7ffRGXjMOc+UtlF5XDVf6x2I1SepuOT
mv0N+B02rlw3MtRvHWjwkacS+9bWyq2rnB70FeJWsF2b1YzZ76ZjQXieIRr7
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
9+RyEtfOXpLsSYuvlb30/g95U+mI
            "]], Polygon3DBox[CompressedData["
1:eJwtnHccVuMbxs/7vmdnpxRCZaRCIrJLaZERUoiGsiuyE0qKKKEkkZkRlWwq
LWWUVSKFyMgqkaJfye/6dp0/zud97vOMs57nHtd9PW/t7n069C4HQXBQFASh
fs/R79/67V0Kgot04h7JDVTeQ416xkHwRhoEUyUHKl+TB8EI1deXvLvqe+jc
Q1kQLFX5cJ2rp/KJOs6TPERjXav2l+j3UHW/TfXL1HeD+qxT/Ws6d6jkeTou
Ud0NFfVT29Mkr1HdKTrXUfJ/Gq+N5OtUvlLjnaX6dZK7q76Hzv2t8f7ReJ/q
XHPV/U9yWWPdpPpFKk9V/70k10uCoJ/6n6vfM9U2VNtRkl/X872gtndprBsk
b6c+MyV315ijda6L5B1VvlrHsypv1PGfymeqzUcqX61xdlD5FR13q/3Zktdr
/Isk92JMyTur/JaOUZL/1L1sUv+VarNO5am6/jOq26B2V+n6nTTmdqrfQcc5
Kp+rPnuobS+1mc3YOven6kId36k8Rs/3qcpNuJ7KndV+d7XvIXkG70ptVqv+
Dp2rJfkfyZslH636BSrfp/Z9VfcR31Tya7qfySoP0/nrdD/T1aer5A7q003n
/lKb31V+QH32Ud0WyZGe43G1+UzlxXq/1VXXTvIVGmtf9Vlc3N9+fK/IzztR
x0aVL9YRq/y8jn9V7sGY6v+g5N+4X43xiOT9VX5Y9/O35H9U97DOna5yV12v
ncqJ6s9V/aDQ33e82kQ691Tke/lN505WeUfd4xzmju5pjNruKnmB5AslPyS5
l9qUJHdBVt05Gv8hyWt0fprG78I9aaxOvAPVn6T6BpL/Vt9zVL888lzfXe9k
G9U9p29SQ+U9mZ+SP0h9vT2Z92r/Xur72V3yhZIralNF7Vfr3AqNP0D9x/Bu
1H9ftf1bclvJT/Jsal+KvT5f0lFhPuo+WqrtUMmbVf5e7UaoPFLHjyrfqXM9
VD9J8jaSX9J4dXW9K3XuHY1/repbqXyH6reo3FVtNko+W8/7oMY/UefaqK6V
jsdUd5n6fKf673X+Sd3P+EKvtFD9oyo31fPco/Hv1XGEyv+gH1Q3TXUT1b6q
+k9Q+2nq1Efyw4m/7am61hLJ3VTfWO2vlPyE5HGqH6f6Ieo/XvIb+t1F8vnF
mOPU/naVf1X5ddWPlTxY8i+SX5Y8Wv3vU/tWGu9jyU9KflLyuZKX537eFoyv
Pl+q/LjqH5d8luqX8r10/2NLnqP1NPY5qfUlevMx1ec69pLcIvZ8/Uj9d1Lb
tsX7uZE+qn9Z7Z+VfI3k9pJ/Vv0zkntLbib5B8kTJPeT/KP6r5L8tOQTNW5F
3+JeHXNVfoV5r/Z/sB5UXqHr7R9YN05S+1PVf2/VDy3eV3v9VuV5dG6qyp+q
fQ3JHYrxu+i3o+pu1fi/qNxB/feRfJKu9Yjqy2qf6Vsu17mSyqGO7STvp/Y/
qM3LvB/mqsZ+SO3PVv3pksuSX5P8n9okav+e+i9XuWVx/TW61hmqX6Nz32qs
43Ruo87dpuv3VNtZ6t9R9atVv0L1nXTuY9ZH6ufnPZyu+g91/YYaf5b6f6By
S50bpfqfVP+XysdrzE2qO15tWqh8f2b9tLfKP6m8UEcD1b2hNgsy62h09Vi1
Wa/y7rrfevp9VecO0ZjHqs3JfA/dy2ka/w/9rpKc65rTVT6/WD/9JF+qa3TD
Rkm+RvLlku9T/4/V/kDJu6p8vsbvhLmNbO/6qs1Rgdfwdzr3u67dpbAha/X7
u67xncrt1eY/bKTex4k8r8onq/9jFduns/X7q461av+D2p+r9ilrR+3qqf40
1dUIrbPRl+jN9upfXfc0jOdW3WqVH9axo/p+J/kP1b+qul4ar51+V+l4Tcct
kmfpmKPy26lt37a6ble1P1TPN1jnb9PRROWDNc4RPIfGbKzyKRr/AvV9RO27
M38l95T8qOQLWFup7f8Gte0sOdIY26Nb1GaV2sxW/TRdL1X5PNXfzfXUfm89
z+WS66vfjmq/GBuj3+GqH6RyXXSZ6j9R/4/xf9S/p+RE9dXUbju1maw2r+p+
9pdcVee3qL6Gfpug61X/bGQbh63jGvUo8/0q9gcOU/loHcdIvlHyMSrPyFxP
u99U3kO/B+Bb6Hn2VLlO6PJAHXVV3kHHvqw3HTsydmh/gzEZu3ZazG/Oa7xd
dX9HV9zmU91fo2J988559wv1+1PZ34xv1zL02rhXbU7gXkLbLmzYgSp/oTGH
q1xN7Wtmth+z1HYnjf2v3scyySNU/7P67KJ7Gavrl5kfep+LVH+hfveS/Jbq
m6pPoPb/qX8bnf8E/ZLZvxyuusWS79Dvc2oWla2DLtBRS+XpOneY6v7Ebqr8
ovqUVfds4vYnq/yp+u+R2Vd9U+e66n5a6vy9Km/m+WL7ffh/KXNUY1XUPlH7
7kX/8eg7yadL/kzy9qrfXvIzkr+QPEv9c8lp2T41/nB9ld/VNcapvI3abCqu
9ZHKO6KfJN+rtsskz1f/qmp/asX6ZDfVP6u+M3X+ZtXvlNn/7FLYp50l7yT5
fMlfMv8zX7tDYS+/y7weWZe/Z/bj8OcSHVU0/pt6B9ur3E/lWWrfX20mqH0j
bL7qauPDqb6mjpvU5jOdq6bybirPz+3vXqq283WuRux1zfrGx71eddfpfc3A
t9D5uWo/Dx+z7DnTVeU7db15+BLofHSDzr8kOVOfKRX7y1eobpHkvZgzavMJ
/pLK8zTeter/UNk+B77H9egkyd9L7iP5FR3bqH0fjTNT7S/jHah+O8mzc+sF
9ENVHdfi/6j9c/iTPIfqD8v97Z6XvCa3/zVJ/ZtjM/VsL6p9FXS3+k5X/eWq
v0v1u0h+O7feQH/U0HFj4d92RTdI/gffUN/jCZVvL1v/viN5l7LfEfHQ4bnn
6ns6f6vK22aOBzoV/kcu+THVv676m4r1Epc958/WvZ0Se/5OK8Y4SW1O0u/O
6Lhi/hFbvCi5S2od31bX/SGw7sdmnBHaJmNLzo4931+SPA/9TAyG3yz5atWf
mjvm2A0dy/vFBqLb1G9h7nXD+plUxJwdcsc0tfARctv87pL3C+wLVNPRVP2v
0lyojy+TuHygjuqJbfxLGufskm3/1Zlt85c6LpHcPHOssq/G2y21z/BW5HgI
X+IsyT1D++z7qHymjgtC+0yDUtvwE9V+VWDbPkV1a/Cfy453/lWbf/FtVb9J
5aOZ0yr/WTzzfB37qO08nTsKH1/y3pIXSV6qsb6U3F/lr9T+K5UPwH4zv3UM
UvtM1/9e5YN0/j2VD9bvQLX/UecaqzxYbUbiGxU+Zl3d4wuS39bYA9EHOn4o
2r5PfJt4LoyJ7D+jZ9G3o9C/Kj+lfl9LHqF73ENtdgptW0qSq4bWl+ive1gT
kjfqmf8neTw+rcqbU8/HBpH123piFNU3V78PJffRbwONtVRtvlT/h4inVL49
sj85J8Y5lO+pnwMi2wnsxTOSD5T8jcZbqfEa6vy7al9Fx0+SDyFuU/kv1W+Q
3EzyB9gLvY85xHbqf6+u1QF9yXrUWL/k9iPwJ+bpXPXY179Hcm3JbVWelNg+
YadWqP1CbCq2uGx71Q97orZHqn5cbryCtXC66kfpXF/VV1d9PZUfoD/+Ou9K
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
qXMceeyYn9xHn8T98e0/13G15DdLft7Dub/EvjU2FFsKpkVMhv/dPDemBbYF
n4jcBTkGeDLwZcg9TNbxdMljMNYRqa9NjgfuztzU+RcwA/T3DpF5R28V77dn
4lwEHBy4R0cxZwLnwOBCXZY4lwanBO7Xq6m5ItgAsAkwDbANciYvp86xwNuB
v0PuZYaO10qeU7eynlPfK/fM9/lTx/qSc0CtVX4Pv1Ty3oHxrXfxeyXXDcxn
GJkaj1mnZxiZG3OdHRuPB4t9UPLAyP4C9nis5Jsj+x93SR6TF3kkjbk4NSY7
KzbeDVZ7S+pcwW+h+ShwNsDVwdfhHj3OfIzsM7+RGEMH5wDvAFsfljrWOUj1
t6fmgMAFAXOfmDgGIBbA9h0t+VHVD4vMaXoEXzv12v1T9XfnxsTJc5Lv3IqV
546picfhVpCjwz/9A98+N6eDGGBiYG7M8sTvDhuMLS6p/We6v8+ZkyovwQaW
zDnCv+Kd8G7gvOGvcT/EUp1L1ic/aLxDNN4Vku+W/CKYa+RzIyRPlXwGMQ7v
X/KU3LgR+NHQ1POTucicZH0w38CvZjN+Ef8Tz18l+d7U3/vKkjlnA1XupPrT
AnN48BeuwP6ovIL5T24PjCHwueasDR2Poot1XKK651KvZdYka/MmMNPAObib
yZ2lztXhj94JtqyjV+Ax8J+eSs0lg1MGd/CQ1HwWfOYJqTlhqyPH4HDFnkjt
S9MG7suY1NgHHJQz0T1q/6HaXy35PtXtkzqeulXyA8X8xEaTHzqetZX43j4u
/NMtibl65ETJjW6WPAD/Fh9Acjk1loj9uD1xzrS/rndz4PYVHV+ofhlH6vmB
L7lU8hepc7yPam4tKTn3OzSxLt46h7APqb8d3xD/a2NiW9NG83Om3meYOrdy
nfrcobqfdFyLrOP+1M/Ms68r7NGJiXNvtMEe0oa2H0W2l4eljo2f0rlJKg9J
zFUjJ32c5PdT56LxqWZlfh8LJX/AGKkxefwe/B9ytbxPfH0w7NPx7SVfFBiz
xj/+IPJcZE6Sl2R+o5PgV+2h+t1zrzVibfgJm2PjTOBNz2i8N3Nz7tqivxJj
Lt9GtvdgMXvmzofAnSV/AsaLj01+/tDUORF8ejh+fVPnV+ALzC5imFqqnxqY
Gwp/AEwXbBc88iy+Z2ZspJra/qHy7bnjcuLzY3JjZmAe5HfB0nZOHX8RL4EP
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
uDSp3x17nM7OzBfl3tD56P7/A6ritJM=
            "]], Polygon3DBox[CompressedData["
1:eJwt13eUVdUVx/ELzJthHlVKIlKHItKSuIQIKoh0JaggiBKCgoBDlyUldHSU
ZoMEAyrJKKBGWHSFCFIDFpTEtRgSs1YE0UhRkCICGpF8dq5//NY9+3t+e59z
z333nPsKBo3pNbp0kiSvUIaG5yXJmlJJclkwgipnk+Qg9lVOkvSmGjydxRXw
a/XvwlZjxVhT7AxWOjdJ1qsxEqtaNkmaY6v5/sC3CJuI9dS/Eu9OleS9jP0R
m8k3HGsp/oq3knZGvU36tmJfYBd4hlBz9XqIp+cnyQY3sa1MklTED4uf4/1I
7mK59+jrivWjuNm1PDfiJ3hO09dqfyp+nL+H+KD+j2kC9nP+Tvh2/Kj2GWwr
3WLOvzF2sdzT+k9RE+wodl5u34jNr3t4jLvP3NbSO/zvx73SPO0JvIN5m4q7
xRyNMQ47hC3BMlRX+ypjTlVvnnqFfMe01+Lr8WHiFsZOtEvRUM0RfM2x8zwX
6D5sMPYd7xn1H6SRxp+n/n+xs+JCGo09iZWT21TeRqxY7hHshPw8bBLWHRso
fiHWC3s+N5173EMJfpRnPvYr7KZY9/z03htj22mM+DxfNblTjDVde0bMj36K
neX5Uu6LfG9hfzNe+xgbb8N/GntVvTXGf1h7HLXGx8VzpA5y38auxx4Sj6X3
1NiE/TvWXruOejvCy/NLGq39GLWXu5vvNqy+awN6IJ6dueQGk7cyfqd8fbCO
1Fv7Wbm79M1SP4evnvZrfMP09ebJw67OpL+/+B3ei5XGfhLrhw2NOWPdsWbx
/Oigeb7v+piag93vdt5V1Ijn79g+rKZxf4vVwD7C/ok1wKrSL7DJ8ifR2/p2
6HvHdYp4p3ZlnkrxO+c7iVVUZ4v4dX1b+O4yn0LzegmrTdfxrcJqWo9y/Jv5
Z/Cdxz5zD92ordwHxe/FWpt/F57Jcm+Q+z3+Nc8IephvgdyzfOW1W2tPiP2B
8vnn8MylbKyrvvZye5rL78V3xDuBlaUG2i/xFRnrabkXqTo21XiPahdRlq8h
tpTvcb75WLu8/78ySTf8VqoYa4r9h+cpHbcaq40xf6BvsFGxJ5jnwpgL7zye
J+gTNfbJS/Ba6lyBjRPOxs5RlUy6zrHe7/LcKHeKeE2808bYylMGq8H3J2Ps
5yvhKzHudfHssX7qHRDfxDdN3nT6ENumf3jsf+J18vvKHZGfruGEH9exHP1M
3oXYT/W3VXum9iPUGf+X/pFys/pW6VuNb1e7DXa3vlY8ddWsY657zWUxPohv
hvZ0+kQ8R25p17l8u/021lEtrDNfNWyAOq/ReDXuE2+mVjxXGmuFvIbGaIQN
41lJE/nuF++MOfNlXI/g3fi+UPOU/nOxptQRW8FbnS8vzi/1rsZq0VPaA3mu
4v+zvgxWgK0w76Pm97laA2kRNiQ3vce413hf471dis3U14HngPxj8l6NtYr9
SLyRr1o8Y7pGvXv45sTa628otxG1ZC5LjeWty0nPm1N8W/gmG2M1z/P66vFc
gS+T+yZfV/yy+DB9JqeFuBkdEneRW5Nvq7xtdI3cXjF2zJXnIv8F8a/pGaw3
ljVWnvnW5v0dVog1wNaoVR9bgrWI9886fuDalhZpf0PPxbkU73g8E/GX1I96
it/gW6Dd2nWhGnXUqmLc5ea32X20Mc5x8Q28t6nztHgpXwO+v8Z7iBVhj1Jb
7F2sEzZbPIvaYXuxLtjc2BfoZuwZNce6z71xfzFunGV8V2pXcC0wp/XGnE8T
5K6Q96S+mnIr8i4xv/XmdzN+RvwxHVKviXha7C985cum3y3x/XI9fkz8odqf
i1/k6cg/Crscz0Ncn6cEO4AVyH8Bq66vhbnsca2LPYuN4mtiThvz0nc93vkC
bIq+duIjeMv4HjPOJmw61pgGaZfXV0u91e7rkPYpnoVy71KvA/YP7Di2AOuB
tcWqUH/xFvxldauKr1WvUL0Tcf4Yf6n49TgD1M6JfZC/q/n+gF/Sv0nuE7HH
iL8LYW9g87A+4kpq3pubPvN49pXFF+mE+P6c9MyIs+NO3lmZdO3jGfQU78Gr
xvmH1Tb2bnEF6pubvgvxTlSM75z4HogzEZsY+5p4mfxO2HjspLrLxd/iJ8UD
qZe6t4gH0STt/dh4uc3jG6Rs+q7EO1Mkt1uckbQZy8MewqpZgzK8t4tfCaZG
f/Gb+gbw/cX1TjV7/nhexbn1fXwj6Mu6TnM/U+N8yKbfOwOz6d4be3CpbHpW
PeC6SzxN7ePxO4vzJ5uej3FOfhB7MdUV18tPv7nj23soX4G4Q3xLxe+ZZwM1
jt9ufEdk0ucWz+9SrBNWImd/vEP8feRdkn8uvgepFfYIXwsaIvcIzZdbLO7M
d7f5LZK7G5+NZdVrkkl/B/F7+DbehfhOworiO1i9AcZYHmes/mWut+N3UBe5
h+P8pMV8i+P/AjYmk659PIPxcV+xd2B75GzgW5eX7mOxn+2I70x9/WMvyEv/
J8T/hXNYs/hG5xvLt5OvD54v/pS2+y0WUz7/W3L/B7ueohc=
            "]], 
           Polygon3DBox[{{2551, 1254, 1105, 1104, 1445, 2160}, {1908, 1907, 
            2577, 1389, 1390, 2578}, {2035, 1297, 1393, 2581, 1913, 1914}, {
            2037, 1299, 1394, 2582, 1916, 1917}, {2309, 1616, 1203, 1204, 
            1617, 2310}, {2569, 1320, 1204, 1203, 1584, 2274}, {2227, 1530, 
            1150, 1151, 1531, 2228}, {1919, 1918, 2583, 1395, 1396, 2584}, {
            1923, 1922, 2609, 1556, 1557, 2610}}]},
          Annotation[#, "Charting`Private`Tag$13827#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, 
      {GrayLevel[1], EdgeForm[None], 
       StyleBox[
        GraphicsGroup3DBox[{
          Polygon3DBox[{{1014, 495, 1015}, {1029, 697, 1030}, {696, 746, 
           456}, {1018, 136, 1019}, {1035, 693, 1036}, {978, 1, 918}, {696, 
           745, 106}, {953, 318, 933}, {1022, 476, 1023}, {1032, 696, 1033}, {
           1015, 495, 1016}, {1012, 318, 953}, {746, 697, 456}, {1023, 476, 
           1024}, {1028, 697, 1029}, {2437, 121, 1925}, {933, 318, 979}, {
           1026, 121, 1027}, {1019, 136, 1020}, {1037, 438, 1039}, {1039, 438,
            942}, {1016, 495, 1017}, {697, 774, 456}, {2433, 106, 1904}, {745,
            696, 456}}], 
          Polygon3DBox[{{1024, 476, 904, 1025}, {1036, 693, 438, 1037}, {1904,
            438, 693, 2433}, {2473, 476, 1022, 2542}, {1030, 697, 746, 
           1031}, {2538, 1027, 121, 2437}, {986, 820, 1, 978}, {1033, 696, 
           106, 1034}, {1020, 136, 778, 1021}, {1031, 746, 696, 1032}, {2433, 
           693, 1035, 2537}, {1017, 495, 136, 1018}, {979, 318, 820, 986}, {
           1925, 774, 697, 2437}, {2542, 1021, 778, 2473}, {1025, 904, 121, 
           1026}, {2437, 697, 1028, 2538}, {2537, 1034, 106, 2433}}]}],
        Lighting->{{"Ambient", 
           GrayLevel[0.8]}}]}, 
      {GrayLevel[1], EdgeForm[None], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtkU0rRGEYht9zjoVTs1TWNspGdhZSs7ORhT+gZGPDXvkLCiv5iMFRWKlT
Cjv5GIWFkhhnZChDFoy96+m5F/dcb+95Pu73nq7x6dGpOITQhxK0x88wfIVl
FKHZKIQHmHG/BOs0ZLHfF6pZE8dU/wT70aPVo0F6d+EWuqb3G75pl+1cSEM4
hz+wBjeoOYJVWIIdsRuswF6ODc6L7NmHv/RUYQN+oorthENtPt/23KMBenNY
8G0FtmArdj/daC71PZ3wkO+n9F7AM/lomme+vcD31N8a6W13Ohd6359mWr35
XG8P4Vj+ny1L5WM53SZefwMP0Aj6QNv05syehz28ZYK7r8SzLytnO9eVSZa6
Z8uhKc+bytY82ZwdNEnfDFzVrBO4rMxr2n8Z+/9d0hzzYbmZf+u1rKzGcs6V
7RX8BwPmXLY=
           "]], Polygon3DBox[CompressedData["
1:eJwtkL9LgmEQgF89l29wC5ocXBpdHURwcQsH/wRpacm9PyKwxkgwK0ua0iAq
t4wsKANJQjDpF0ThYDq4+Rz3Dg/33Pe9d/feGy8U8xth51wMIvAjzuXgCH8l
fgbO3eAX+D/+QozCCkUdYkvP4gnO1PASZx7Jp3CI//FtDVLkfbEarZ1BV6xG
a/fJr/EPWCXfCTEbb2tN2O50BpdQIV/n/zF+5fOk3gMe/Kw5PON1SNMvROzB
ndg+uoPuMhCr1R7a+x0yfqc94onYLP2/iz+J3V13PMAbcE6/e/JbvCw2K+N7
TXiDsdj5bXwKQ7F93/DlwN5ad9zCv+FUbP8vfBTYP32HX7wqNmsJmvhmYL2c
vqXWE7N+5xFxAc66TNM=
           "]], 
          Polygon3DBox[{{2449, 181, 947, 967, 2450}, {2528, 930, 948, 532, 
           2446}, {2426, 361, 937, 924, 2527}, {2532, 970, 977, 761, 2470}, {
           2208, 837, 998, 993, 2533}}]}],
        Lighting->{{"Ambient", 
           GrayLevel[0.8]}}]}, {}, {}}, {
      {GrayLevel[0], 
       Line3DBox[{918, 1, 820, 318, 1012, 953, 933, 979, 986, 978, 918}], 
       Line3DBox[CompressedData["
1:eJwl00tsjFEYh/FDGfcqrdZ1qi4l6MWtaDvGlMokjTZxCWmRkFjY1LYrK4lI
bFgYsSmLLsUlLjsttaQL1GXa6YWFhjaUdCOR+H2RzJPn/77nfOec7+SbsrMX
DrdPCyF8QWJWCAVckhdCSi6VN88IYQsqUIkqVGMrtmE7dmB8Tgg7uQa7sBt7
UIs61COBvUhiH1KY8lwD78cBNOIgPjrDfWNxbnOOUTlf/5n6HjrRjZ/6d7kH
t9GHO/iO5/hh/Al/xQTGonXxOuoZ6+dXeIoX6MUDvMRNXHcPGfs/NrdcXeAM
i7AYhSjCpLElXIwSLMUyLMcKTBhfyasQRylWowxrsBZj5qzj9SjHBmzEJtyy
71tnOMq1052BP+m/0/ujTiCr7lcn5QH5vZySP/BgdJ9c7F0qo2flnN4QsvJx
vWF5QB7hwei+OcdVxob4s3o4+jasUa03Il+NhZC2xzn1qPokX1T3mfNG3cO9
/JAfcRd3cYZv8DW+zFe4g7vdQdoal9Tn1e3cyme4KXp/rudmruA0x7ljtjEf
8WnPLlSf4BbnaHPm/Oi91a3ygmiM53ON3jw+pp7LR9j2IWbNImOWDC16zdAK
hXqH5Fi0r72a5JlyoyyGTkWDbFoYNyln/6T6L/uFb3pZoU7vVPRdRt8uJvEL
vzGFTN7//+E/iLZrAA==
        "]], 
       Line3DBox[{768, 46, 736, 381, 863, 61, 837, 2208, 403, 76, 1095, 997, 
        939, 995, 996, 940, 2534, 993, 998, 992, 938, 980, 991, 926, 994, 925,
         957, 935, 956, 990, 2548, 924, 937, 923, 989, 955, 934, 988, 987, 
        954, 936, 361, 2471, 768}], 
       Line3DBox[{1904, 106, 745, 456, 774, 1925, 121, 904, 476, 2473, 778, 
        136, 495, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 2542, 1022, 
        1023, 1024, 1025, 1026, 1027, 2538, 1028, 1029, 1030, 1031, 1032, 
        1033, 1034, 2537, 1035, 1036, 1037, 1039, 942, 438, 1904}], 
       Line3DBox[{921, 166, 2327, 532, 780, 181, 2469, 756, 550, 781, 196, 
        2470, 761, 571, 868, 1065, 1004, 983, 949, 971, 977, 970, 2547, 952, 
        968, 982, 969, 976, 975, 932, 1006, 2546, 967, 947, 966, 1002, 931, 
        948, 930, 2539, 965, 946, 1001, 985, 921}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1853, 2420, 2421, 2154, 2407, 2550, 2801, 2461, 2422, 2423, 
        2156, 2724, 1999, 2361, 2155, 2158, 2725, 2000, 2157, 2424, 2425, 
        2159, 2001, 2362, 2595, 2636, 2002, 1854, 2574, 2637, 2161, 2003, 
        2363, 2789, 2160, 2551, 2726, 1855, 2069, 2163, 2727, 2004, 2364, 
        2162, 2638, 2005, 1856, 2164, 2166, 2728, 2006, 2365, 2165, 2639, 
        2007, 2490, 2596, 2640, 2008, 2167, 2575, 2641, 2366, 2009, 2474, 
        2598, 2642, 2010, 2168}], 
       Line3DBox[{1857, 2475, 2504, 2070, 2491, 2408, 2409, 2802, 2169, 2512, 
        2522, 2071, 2526, 2525, 1852, 2513, 2514, 2072, 2515, 2803, 2410, 
        2411, 2170, 2073, 2367, 2011, 1858, 2599, 2643, 2173, 2012, 2172, 
        2729, 2074, 2368, 2013, 1859, 2731, 2175, 2477, 2552, 2730, 2176, 
        2075, 2369, 2553, 2702, 1860, 2644, 2014, 1861, 2076, 2179, 2733, 
        2015, 2370, 2178, 2645, 2016, 1862, 2600, 2646, 2181, 2017, 2180, 
        2597, 2647, 2018, 1863, 2734, 2182, 2371, 2019, 1864}], 
       Line3DBox[{1870, 2027, 2373, 2183, 2735, 1869, 2026, 2651, 1868, 2025, 
        2372, 1369, 2198, 2024, 2650, 2197, 1867, 2023, 2649, 2080, 2195, 
        2739, 2558, 2196, 2194, 1866, 2732, 2557, 2177, 2192, 2704, 2556, 
        2193, 2079, 2705, 1865, 2022, 2174, 2738, 2190, 2021, 2191, 2078, 
        2737, 2189, 2020, 2648, 2171, 2187, 2703, 2555, 2188, 2077, 2427, 
        2185, 2736, 2554, 2186, 2184, 2476, 1817, 2492, 2493, 2540}], 
       Line3DBox[{1876, 378, 1509, 399, 398, 2746, 1875, 377, 1506, 396, 395, 
        1874, 2745, 393, 603, 1691, 250, 1873, 2742, 391, 601, 1689, 249, 
        1500, 390, 389, 2741, 1872, 248, 1495, 386, 385, 1871, 2706, 247, 382,
         1493, 246, 379, 1492, 245, 1082}], 
       Line3DBox[{1889, 2028, 2652, 1888, 2094, 2207, 2093, 2709, 1887, 2674, 
        2559, 1886, 2092, 2206, 2091, 1885, 2601, 2673, 2214, 1884, 2708, 
        2090, 2205, 2089, 1883, 2747, 2212, 2211, 1882, 2743, 2204, 2376, 
        2203, 2744, 1881, 2505, 2088, 2478, 2087, 2707, 1880, 2202, 2375, 
        2201, 2740, 1879, 2429, 2086, 2200, 2085, 1878, 1494, 2374, 2199, 
        1877, 2628, 2804, 2084, 2462, 2083, 2428, 2472, 1788, 2082, 2494, 
        2081, 2549}], 
       Line3DBox[{1902, 2517, 2516, 2818, 1901, 2217, 2378, 2790, 2602, 1900, 
        2233, 2678, 2605, 1899, 2216, 2377, 2215, 1898, 2576, 2677, 2101, 
        1897, 1534, 2479, 2230, 1896, 2791, 2100, 2213, 2099, 1895, 2749, 
        2228, 2227, 2750, 1894, 2098, 2210, 2097, 2710, 1893, 2225, 2676, 
        2604, 1892, 2096, 2209, 689, 1891, 878, 2675, 2481, 2095, 1890, 2817, 
        898, 899, 687, 773, 1790, 686, 836, 835, 2480}], 
       Line3DBox[{1924, 2519, 2520, 2518, 2819, 2609, 1922, 2684, 2561, 1920, 
        2109, 2234, 2752, 2583, 1918, 2683, 2560, 1916, 2582, 2682, 2232, 
        2107, 1915, 2607, 2681, 2246, 1913, 2581, 2680, 2231, 2105, 1912, 
        2755, 2242, 1545, 1910, 2104, 2229, 2751, 2579, 1909, 2103, 2226, 
        2748, 2577, 1907, 2223, 2380, 2222, 1906, 2434, 2805, 2629, 2221, 
        2102, 1905, 2603, 2679, 2379, 2219, 1903, 1751, 2432, 2218, 2431, 
        2430, 2529}], 
       Line3DBox[{1929, 2052, 1559, 2266, 2051, 2665, 2612, 1928, 2050, 2664, 
        2608, 2264, 2049, 2265, 2263, 1927, 2048, 2663, 2249, 2261, 2047, 
        2758, 2262, 2111, 1926, 1306, 2245, 2259, 2711, 2563, 2260, 2110, 
        2757, 2258, 2046, 2662, 2611, 2387, 2045, 2257, 2661, 2585, 2255, 
        2044, 2256, 2254, 2482, 2043, 2794, 2386, 2439, 2438, 2464, 2042, 
        2756, 2413, 2252, 2497, 2496, 2250, 2816, 2562, 2502, 2385, 2531, 
        2543}], Line3DBox[{1937, 2060, 2280, 2795, 2391, 2059, 2392, 1589, 
        1936, 2058, 2669, 1935, 2057, 2390, 2116, 1934, 2056, 2668, 1933, 
        2714, 2566, 2389, 2115, 2276, 2762, 2565, 2277, 2275, 1932, 2713, 
        2564, 2388, 2114, 2760, 2272, 2055, 2273, 2271, 2759, 1931, 2054, 
        2667, 2586, 2269, 2418, 2417, 2270, 2113, 1930, 2053, 2666, 2253, 
        2268, 2626, 2712, 2416, 2465, 2112, 2440, 2267, 2811, 2415, 2414, 
        2405, 2251, 2463, 2535}], 
       Line3DBox[{1938, 2441, 2117, 2466, 2419, 2715, 2627, 2282, 2442, 2118, 
        2393, 2567, 2716, 2484, 2285, 2287, 2568, 2764, 2286, 2443, 2119, 
        2290, 2061, 2395, 2796, 2289, 2062, 2292, 2765, 2120, 2294, 2063, 
        2293, 2766, 2274, 2569, 2761, 1939, 2121, 2297, 2570, 2717, 2296, 
        2278, 2571, 2763, 1940, 2299, 2301, 2572, 2767, 2300, 2279, 2670, 
        2064, 1941, 2768, 2303, 2065, 2304, 2769, 2281, 2066, 1942, 2671, 
        2067, 1943}], 
       Line3DBox[{1957, 2323, 2322, 2779, 1956, 2320, 2319, 2777, 1955, 2318, 
        2317, 2776, 1954, 2315, 2686, 2314, 1953, 2797, 2135, 2302, 2134, 
        1952, 2685, 2573, 1951, 2720, 2133, 2298, 2132, 1950, 2774, 2310, 
        2309, 2773, 1949, 2131, 2295, 2130, 2719, 1948, 2129, 2128, 2718, 
        1947, 2127, 2291, 2126, 2445, 1946, 2444, 2807, 2125, 2288, 2124, 
        1945, 2770, 2284, 2394, 2283, 2467, 1944, 2630, 2806, 2123, 2499, 
        2122, 2506, 2498, 2485}], 
       Line3DBox[{1970, 2325, 2399, 2324, 2780, 1969, 2068, 2672, 1968, 2141, 
        2321, 2778, 2589, 1967, 2340, 2689, 2339, 1966, 2613, 2688, 2398, 
        2316, 1965, 2783, 2337, 2336, 1964, 2775, 2313, 2397, 2312, 1963, 
        2782, 2140, 2311, 2139, 2721, 1962, 2308, 2396, 2307, 2772, 1961, 
        2138, 2306, 2771, 2588, 1960, 2332, 2687, 2331, 1959, 2448, 2587, 
        2812, 2468, 2137, 2447, 2503, 2634, 2820, 2521, 2329, 2524, 2328, 
        2523, 1958, 2814, 2486, 2136, 2305, 2545}], 
       Line3DBox[{1984, 2342, 2400, 2341, 2784, 1983, 2355, 2695, 2620, 1982, 
        2353, 2694, 2619, 1981, 2509, 2510, 2489, 2148, 1980, 2617, 2693, 
        2351, 1979, 2592, 2692, 2338, 2147, 1978, 2787, 2350, 2349, 1977, 
        2722, 2146, 2335, 2145, 2723, 1976, 2346, 2691, 2615, 1975, 2144, 
        2334, 2781, 2591, 1974, 2507, 2508, 2488, 2143, 1973, 2590, 2690, 
        2333, 2453, 2452, 1972, 2631, 2808, 2451, 2330, 2142, 1971, 2785, 
        2500, 2501, 2326, 2541}], 
       Line3DBox[{1998, 2360, 2701, 2624, 1997, 2153, 2356, 2788, 2594, 1996, 
        2511, 2700, 2635, 1995, 2152, 2354, 2151, 1994, 2623, 2699, 2359, 
        1993, 2618, 2698, 2403, 2352, 1992, 2622, 2697, 2358, 1991, 2815, 
        2348, 2402, 2799, 2616, 1990, 2150, 2347, 2786, 2593, 1989, 2345, 
        2401, 2798, 2614, 1988, 2459, 2460, 2344, 2149, 1987, 2621, 2696, 
        2487, 2357, 1986, 2633, 2810, 2458, 2343, 2457, 2456, 1985, 2632, 
        2809, 2455, 2406, 2454, 2536}], 
       Line3DBox[{2495, 2041, 2384, 2660, 2610, 1923, 2040, 2659, 1921, 2039, 
        2383, 2658, 2584, 1919, 2038, 2657, 1917, 2037, 2793, 2382, 2108, 
        2248, 2036, 2813, 2483, 2247, 1914, 2035, 2792, 2381, 2106, 2243, 
        1296, 2244, 2656, 2606, 1911, 2034, 2655, 2580, 2240, 2033, 2241, 
        2654, 2578, 1908, 2032, 2653, 2224, 2238, 2031, 2754, 2625, 2239, 
        2436, 2435, 2237, 2030, 2800, 2404, 2220, 2235, 2029, 2753, 2412, 
        2236, 2530, 2544}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{325, 228, 2159, 327, 235, 2367, 592, 345, 2648, 1129, 385, 
        387, 2200, 253, 408, 2209, 261, 607, 2380, 423, 2653, 1170, 460, 2256,
         462, 279, 2270, 480, 286, 2290, 501, 2291, 291, 1215, 2687, 536, 811,
         2488, 304, 554, 2344, 311, 577}], 
       Line3DBox[{1099, 1441, 1678, 1442, 2636, 1100, 1458, 1459, 2643, 1461, 
        1363, 1480, 2737, 1364, 1482, 1372, 1495, 1373, 1688, 1496, 2740, 
        1514, 1497, 1149, 2676, 1526, 1527, 1529, 2748, 1389, 1390, 2654, 
        1544, 1399, 1563, 1400, 2661, 1566, 1404, 1577, 1405, 2667, 1192, 
        1598, 1701, 2796, 1599, 1202, 1414, 2718, 1415, 1613, 2771, 1421, 
        1633, 1422, 1635, 2781, 1429, 1645, 1430, 1708, 2798, 1646, 1668, 
        1647, 1244}], 
       Line3DBox[{1101, 1352, 1353, 2637, 1446, 1358, 1460, 2729, 1359, 1683, 
        1462, 1481, 2738, 1463, 1130, 1498, 2741, 1499, 1804, 1378, 2707, 
        1379, 1516, 1384, 2710, 1528, 1385, 1533, 2751, 1391, 1543, 1392, 
        2655, 1171, 1564, 1697, 1565, 2662, 1181, 1578, 2759, 1579, 1581, 
        1410, 1600, 2765, 1411, 1602, 1416, 2719, 1612, 1417, 1702, 1614, 
        2772, 1634, 1615, 1225, 2691, 1648, 1649, 1651, 2786, 1435, 1813, 
        1834, 1833, 1814}], 
       Line3DBox[{1102, 1443, 1679, 2789, 1445, 1104, 1464, 2731, 1466, 1803, 
        1365, 2705, 1366, 1484, 1374, 1500, 1376, 1690, 1502, 2744, 1515, 
        1504, 1150, 1530, 2750, 1693, 1532, 1160, 1545, 1547, 2656, 1549, 
        1401, 1567, 2757, 1403, 1569, 1406, 1580, 2760, 1408, 1698, 1582, 
        1601, 2766, 1584, 1203, 1616, 2773, 1618, 1620, 1423, 2721, 1425, 
        1637, 1431, 2723, 1650, 1433, 1709, 2799, 1652, 1669, 1654, 1245}], 
       Line3DBox[{1107, 1447, 1256, 2638, 1108, 1262, 2644, 1122, 1485, 1486, 
        2739, 1269, 1133, 1377, 1691, 1277, 1142, 1380, 2708, 1284, 1153, 
        1534, 1292, 1163, 2681, 1551, 1552, 1298, 2813, 1174, 879, 1570, 1307,
         2758, 1184, 1409, 2714, 1314, 1195, 1587, 2763, 1322, 1206, 2685, 
        1329, 1218, 1638, 2783, 1639, 1336, 1228, 2692, 1434, 1710, 1343, 
        1237, 2698, 1658, 1350, 1248}], 
       Line3DBox[{1109, 1448, 1681, 1257, 2728, 1110, 1361, 1684, 1263, 2733, 
        1123, 1367, 1270, 2649, 1134, 1505, 2745, 1278, 1143, 2673, 1519, 
        1520, 1285, 1154, 2677, 1387, 1535, 1293, 1164, 2682, 1394, 1299, 
        2793, 1175, 1553, 1308, 2663, 1185, 1315, 2668, 1196, 1604, 1605, 
        2767, 1323, 1207, 1419, 2797, 1703, 1330, 1219, 2688, 1622, 1337, 
        1229, 2693, 1657, 1344, 1238, 2699, 1672, 1673, 1351, 1249}], 
       Line3DBox[{822, 334, 2639, 1111, 353, 2645, 1124, 375, 2650, 1135, 395,
         397, 2206, 256, 604, 2377, 416, 1165, 2683, 1300, 2657, 1176, 470, 
        2265, 472, 283, 2390, 619, 489, 2670, 1208, 2686, 524, 1220, 2689, 
        546, 812, 2489, 308, 565, 2354, 313, 815}], 
       Line3DBox[{1112, 1449, 1816, 1450, 2640, 1113, 1469, 1470, 2646, 1472, 
        1368, 1487, 1369, 1686, 1488, 1506, 1489, 1144, 2674, 1286, 1155, 
        2678, 1536, 1537, 1539, 2752, 1395, 1396, 2658, 1695, 1554, 1571, 
        1555, 2664, 1186, 1316, 2669, 1197, 1606, 2768, 1607, 1209, 1623, 
        2776, 1624, 1627, 2778, 1426, 1640, 1427, 1230, 2694, 1659, 1711, 
        1660, 1239, 2700, 1835, 1836, 1250}], 
       Line3DBox[{1114, 1354, 1451, 1355, 2641, 1682, 1452, 1471, 1453, 2647, 
        1125, 1271, 2651, 1136, 1507, 2746, 1508, 1510, 1381, 2709, 1382, 
        1692, 2790, 1521, 1538, 1522, 1166, 2684, 1301, 2659, 1177, 1572, 
        1573, 2665, 1187, 1588, 1589, 1700, 1592, 1608, 2769, 1593, 1210, 
        1625, 2777, 1704, 1626, 1221, 1338, 2672, 1231, 2695, 1661, 1662, 
        1664, 2788, 1436, 1837, 888, 1815}], 
       Line3DBox[{1115, 1454, 1799, 1455, 2642, 1116, 1473, 2734, 1474, 1685, 
        1475, 2735, 1476, 1687, 1490, 1509, 1491, 1145, 1287, 2652, 1156, 
        1843, 2818, 1844, 1845, 2819, 1556, 1557, 2660, 1696, 1558, 1574, 
        1559, 1188, 1590, 1699, 2795, 1591, 1198, 1324, 2671, 1211, 1628, 
        2779, 1629, 1705, 1630, 2780, 1631, 1707, 1641, 2784, 1663, 1642, 
        1240, 2701, 1674, 1675, 1676}], Line3DBox[CompressedData["
1:eJwV0D0oxXEUh/FzudfLVQYk5IpBJpONycZqVBaDgSKDxWYw28lo9jJIUWK4
icLgdcFNUQwuV17y+rnD0/ec85zT/9e/bXhiYDwREaO4TEb0piLeyyL2MIN7
pMoj7uRnOuLYTo+drH4MLVzOPCOzXBfXrK5BHX65WrnFdXK7bvrxZp6TN1jm
2rlX9Q4WuG55jVK3V3LJTsZOQf3Fb8sOJPgSBObt1NuJqohWfQM/pZ8z33FT
rd40S+IC55jlKszz6g0U1GfyF6eY5v/wpF4v/g/+W/4U34FJ7gNNvnfCDWJE
n0ejWQXSqMSQ2QNevGXN7Yrdo+J/xSH6uFs884/6VSzaOZAf2McD/gHh9EH0

        "]], Line3DBox[CompressedData["
1:eJwV0L8rxHEcx/H31R1hwCSLOkqmCykDk41u8gfoslhEWQx2mzIqRplvkYkM
zqUY7rActlNEQpew8PgMz96f14/P5/P9fvKLq/MrmYgooZGNmMlFXLRFlPGM
J/x2RtRk07LJ9ogqbxmPyNJN81unqjOh80VXUEp5V8SgzhDyONYp6MzJ6vZM
pbt4w7w9ulunFz044A/wT3V2ZCPmA+6xKzvj9ck/6RP04w5/aGBb5z2dqZOj
W+Y6vcnvsB51xzgyvnHM3OAH/yj9t9nSvbG+xprsB2/Wh7iV19PboIYl2QfK
9pzLKligX9K7ObuAIm+W3tdpmlv2XeESr/gHUH46Hw==
        "]], 
       Line3DBox[CompressedData["
1:eJwVzz8ohHEcx/HvlTul3CwGmdhMp/NvspHlFsMNykK6GNRNptPFoERGOYuU
TSzkDCgGgwxKNjJQhqNLyeD1DO8+38+f51dPz8xiYSEVEVN4bokYS0esZCIq
WGuLeJANtUYMYxB5bNtUdLe6nPvQdp3+yZruV1zorumA/RWdwI++avfiPtL3
uu9ko/wIDmTzfLe8k9/hP/gOvt07ZdpFs9jUXerqdg2cI4OSzRNt6lZtztyn
iZfPYkne5/tlXYp/x2OS87/Y0hf5OfcXNvgbvoBP79xjWn5C+73zrT9O/kc/
iXHdvuyN7vG7qOEfa240TQ==
        "]], 
       Line3DBox[{1246, 1348, 1823, 2815, 1653, 1235, 1341, 2722, 1432, 1226, 
        1334, 1636, 2782, 1424, 1216, 1327, 1619, 2774, 1617, 1204, 1320, 
        2761, 1583, 1193, 1312, 2713, 1407, 1182, 1305, 2711, 1568, 1402, 
        1172, 1296, 1548, 2755, 1546, 1161, 1290, 2749, 1531, 1151, 1282, 
        2743, 1503, 1140, 1275, 1689, 1375, 1131, 1267, 2704, 1483, 1831, 
        1830, 1120, 1260, 2730, 1467, 1465, 1105, 1254, 2726, 1444, 1103}], 
       Line3DBox[{1247, 1349, 1671, 1670, 2697, 1236, 1342, 1656, 2787, 1655, 
        1227, 1335, 2775, 1621, 1217, 1328, 2720, 1418, 1205, 1321, 2717, 
        1603, 1412, 1194, 1313, 2762, 1586, 1585, 1183, 1306, 1550, 1173, 
        2792, 1297, 1393, 2680, 1162, 1291, 1694, 2791, 1386, 1152, 1283, 
        1518, 2747, 1517, 1141, 1276, 2742, 1501, 1132, 1268, 2732, 1468, 
        1121, 1261, 2702, 1360, 1106, 2727, 1255, 1680, 1829, 1828, 
        1798}]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
kG2eF/duxtS3Y1IyRlSY/HleXfZ2E8puTF3HqlWK4/f87t1spYF9qvxCmFcb
+lrnlH8PaMdItpkQGUYqlMiX88uplIGEbOrYEzLvUM2Mz9aTfDhQpmtGbA8B
yy6hEfpaK0wob1vxIrnrF+VQ2NvzIdjZLGT7VNcLo6dYNy6T+/VX1mo6654B
H2sO9PU0fYFp/XZ+ahMB9BYjA6LV1ZjteSV23LsGt+wJVfLvooHqDmeJOtN4
pH18p15nnYLtw+oJ7GRePukiGBIsXIoiT8NaWW6UofWmKlFr0tfKjpZfT1yr
gWi2y9vb5Wvh/HHLosxiGjg+cAqlsBWAfiyzjnJUIVxLNH6pHEMAR5F0G6t2
JeY2XT9zvKUCB4trOj6IE8Aqn6Zk9rQQtKR3bX+iWgBXWTyvbyHv38VZWTZv
XIxRO29lCUhmwWKjVpoByYe5G2ZFEs2SIUH4qrhfbA+4JAp1yL6kwjz3VqmV
IwPo9qNxo+CZPqy99zVrwG8G2NUEHE+fy8djssriMv5lmLWxh/+IFwH6mnez
N+U2YJJzFStdbgue1B8NFCZzxFv91FcZTO1wHSoaM3+0whDhkRF1ggpbGMLp
ExpaofDbeUY7xjY42kwT2KFHBfXmp8uihZVgfUJ2X0MaBfwmuOt02QlQmJVR
eeXZBK991M/Z/2yGaVYDh+0baKDZdeLnmn4zGjr2dR4Wa8aOd6eMekh+498k
+UJOkqzztZSc04pFKKkucefEa5KHvz90kVerA37FhKuXh2vhV//ksakoGjy8
cFeKOyUK2uU27vQa/AQCXM4RM79JzuG58pNxIQY5VvNH7M5FosbX2syL5Fya
0yth15QNJ3X8WNzifDT8vZ7S8pzsI4WwLjrX3jKMW98xE3G7HH3ppre8VSfA
z7UmV+DOO/TsdHcaZfqAbyI9T20n9ZboEz0TXPcFd67svCy/JxfnVBQNY0sJ
oCXpmjMnD2CqZ30Yk3A7RhdaPZn5OQsXmup/xM6PILe7Lm9mWRkqnrxt+bdu
9j/76LLGlR+hMp14mqlmSx2tC+WCzLUy5uagsbFMIHNbFazf7lqkVofw63Bv
YMM1Agq3tn3vfhcPVSH2ek0cDnhlLCpfiazDyPpVPRGtSOTWuKv8zcYXu7wP
R5f/JWD4Qfnt+4yZ8FSxeWl7eS6oFGpwnK8hYG9p7ehX4Vq8bqHOUMlXh1+l
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
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{509.96403988164286`, 498.},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{0.1, 20}, {0, 10}, {-0.855453414357785, 0.8575519384638478}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.10864953522309072`, -2.9051383152836876`, 
   1.7315792351395478`},
  ViewVertical->{0.01912481199477935, 0.5113710241332223, 
   0.859147203477439}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.827920725342346*^9, 3.8279207813130913`*^9, 
  3.827921301321766*^9, 3.827921407285784*^9, 3.82794288164736*^9, 
  3.8279436089927397`*^9, 3.827943657704378*^9, 3.827943961529915*^9, 
  3.827944127530282*^9, 3.9560710538746634`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"5b304992-8840-4554-bf04-9d8aa2713d79"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Attempt at Plot of Solution (Go Back and Check This... Not Sure... )\
\>", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.855699107685478*^9, 
  3.855699131853568*^9}},ExpressionUUID->"d3b3d5e9-211d-4d91-9283-\
db0e3be92d9c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{"psiSolution1", ",", "R"}], "]"}], " ", "//", " ", 
  "pdConv"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{"psiSolution1", ",", "T"}], "]"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.827944216787176*^9, 3.8279442704327173`*^9}, 
   3.855699115204976*^9},
 CellLabel->
  "In[104]:=",ExpressionUUID->"1c077e9c-86dd-44a4-a849-fac74d28e8f3"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", 
     RowBox[{"\[Psi]", "(", 
      RowBox[{"R", ",", "T"}], ")"}]}], 
    RowBox[{"\[PartialD]", "R"}],
    MultilineFunction->None], "\[Rule]", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      TemplateBox[{"1", "R"},
       "BesselJ"], " ", 
      RowBox[{"sin", "(", "T", ")"}]}]}], "-", 
    RowBox[{
     TemplateBox[{"1", "R"},
      "BesselY"], " ", 
     RowBox[{"cos", "(", "T", ")"}]}]}]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.827944214127624*^9, 3.827944270945689*^9}, 
   3.8556991152051907`*^9, 3.956071053993636*^9},
 CellLabel->
  "Out[104]//TraditionalForm=",ExpressionUUID->"40ca9e47-91e9-49be-9a28-\
b79b7085c598"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", 
     RowBox[{"\[Psi]", "(", 
      RowBox[{"R", ",", "T"}], ")"}]}], 
    RowBox[{"\[PartialD]", "T"}],
    MultilineFunction->None], "\[Rule]", 
   RowBox[{
    RowBox[{
     TemplateBox[{"0", "R"},
      "BesselJ"], " ", 
     RowBox[{"cos", "(", "T", ")"}]}], "-", 
    RowBox[{
     TemplateBox[{"0", "R"},
      "BesselY"], " ", 
     RowBox[{"sin", "(", "T", ")"}]}]}]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.827944214127624*^9, 3.827944270945689*^9}, 
   3.8556991152051907`*^9, 3.956071054000908*^9},
 CellLabel->
  "Out[105]//TraditionalForm=",ExpressionUUID->"54991928-bc45-44e1-b1b1-\
ee91f83cc8d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{"DSolve", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"vacuumEquations", "[", 
        RowBox[{"[", "2", "]"}], "]"}], " ", "/.", " ", 
       RowBox[{"D", "[", 
        RowBox[{"psiSolution1", ",", "R"}], "]"}]}], " ", "/.", " ", 
      RowBox[{"D", "[", 
       RowBox[{"psiSolution1", ",", "T"}], "]"}]}], "  ", ",", " ", 
     RowBox[{"\[Gamma]", "[", 
      RowBox[{"R", ",", "T"}], "]"}], " ", ",", " ", 
     RowBox[{"{", 
      RowBox[{"R", ",", "T"}], "}"}]}], "]"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.827944196977333*^9, 3.827944197579237*^9}, {
   3.827944273841646*^9, 3.827944335494125*^9}, 3.8556991152055693`*^9},
 CellLabel->
  "In[106]:=",ExpressionUUID->"15958b28-4674-45e5-90b6-d80cce5b3a31"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Gamma]", "[", 
   RowBox[{"R", ",", "T"}], "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", "R", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"BesselJ", "[", 
        RowBox[{"1", ",", "R"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"BesselJ", "[", 
           RowBox[{"0", ",", "R"}], "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "T"}], "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"BesselY", "[", 
           RowBox[{"0", ",", "R"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"T", "-", 
            RowBox[{
             RowBox[{"Cos", "[", "T", "]"}], " ", 
             RowBox[{"Sin", "[", "T", "]"}]}]}], ")"}]}]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"BesselY", "[", 
        RowBox[{"1", ",", "R"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"BesselY", "[", 
           RowBox[{"0", ",", "R"}], "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "T"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"BesselJ", "[", 
           RowBox[{"0", ",", "R"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "T"}], "+", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "T"}], "]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
   "+", 
   RowBox[{
    TemplateBox[{"1"},
     "C"], "[", "R", "]"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{
  3.827944197869773*^9, 3.827944288186077*^9, {3.8279443193986387`*^9, 
   3.827944336331648*^9}, 3.8556991152058*^9, 3.956071054502129*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"5b4d6452-74dc-44dc-8d5d-72289d33b9d1"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "gammaSolution2", "]"}], "\[IndentingNewLine]", 
 RowBox[{"gammaSolution2", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"DSolve", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"vacuumEquations", "[", 
          RowBox[{"[", "3", "]"}], "]"}], " ", "/.", " ", 
         RowBox[{"D", "[", 
          RowBox[{"psiSolution1", ",", "R"}], "]"}]}], " ", "/.", " ", 
        RowBox[{"D", "[", 
         RowBox[{"psiSolution1", ",", "T"}], "]"}]}], "  ", ",", " ", 
       RowBox[{"\[Gamma]", "[", 
        RowBox[{"R", ",", "T"}], "]"}], " ", ",", " ", 
       RowBox[{"{", 
        RowBox[{"R", ",", "T"}], "}"}]}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], " ", "/.", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"C", "[", "1", "]"}], "[", "T", "]"}], "\[Rule]", " ", "0", 
    " "}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.827944346508643*^9, 3.827944388036079*^9}, 
   3.8556991152063007`*^9},
 CellLabel->
  "In[107]:=",ExpressionUUID->"905fe767-9a8a-4722-a44d-34100dbc20bc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Gamma]", "[", 
   RowBox[{"R", ",", "T"}], "]"}], "\[Rule]", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"MeijerG", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             FractionBox["3", "2"]}], "}"}], ",", 
           RowBox[{"{", 
            FractionBox["1", "2"], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             FractionBox["1", "2"]}], "}"}]}], "}"}], ",", "R", ",", 
         FractionBox["1", "2"]}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "T"}], "]"}]}], 
      SqrtBox["\[Pi]"]], "+", 
     RowBox[{
      SuperscriptBox["R", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"BesselJ", "[", 
          RowBox[{"1", ",", "R"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"BesselY", "[", 
          RowBox[{"1", ",", "R"}], "]"}], "2"], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"BesselJ", "[", 
           RowBox[{"0", ",", "R"}], "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "T", "]"}], "2"]}], "-", 
        RowBox[{
         RowBox[{"BesselJ", "[", 
          RowBox[{"0", ",", "R"}], "]"}], " ", 
         RowBox[{"BesselJ", "[", 
          RowBox[{"2", ",", "R"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "T", "]"}], "2"]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"BesselY", "[", 
           RowBox[{"0", ",", "R"}], "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "T", "]"}], "2"]}], "-", 
        RowBox[{
         RowBox[{"BesselY", "[", 
          RowBox[{"0", ",", "R"}], "]"}], " ", 
         RowBox[{"Cos", "[", "T", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"BesselY", "[", 
             RowBox[{"2", ",", "R"}], "]"}], " ", 
            RowBox[{"Cos", "[", "T", "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"BesselJ", "[", 
             RowBox[{"0", ",", "R"}], "]"}], " ", 
            RowBox[{"Sin", "[", "T", "]"}]}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"BesselJ", "[", 
          RowBox[{"1", ",", "R"}], "]"}], " ", 
         RowBox[{"BesselY", "[", 
          RowBox[{"1", ",", "R"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "T"}], "]"}]}]}], ")"}]}]}], ")"}]}]}]], "Output",\

 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.827944349186775*^9, 3.827944389819511*^9}, 
   3.855699115206587*^9, 3.956071056072014*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"7bdd7884-3360-4f57-bba1-0fd373d66a5b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RevolutionPlot3D", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", " ", 
     RowBox[{
      RowBox[{"\[Gamma]", "[", 
       RowBox[{"R", ",", "T"}], "]"}], " ", "/.", " ", "gammaSolution2"}], 
     "  ", "]"}], "  ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"R", ",", "0.1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"T", ",", "0", ",", "5"}], "}"}]}], "]"}], " ", "//", " ", 
  "Timing", " "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.827944523320219*^9, 3.827944527461396*^9}, {
   3.827944568871647*^9, 3.8279445717108107`*^9}, {3.8279456778941402`*^9, 
   3.8279456802845993`*^9}, 3.855699115206748*^9},
 CellLabel->
  "In[109]:=",ExpressionUUID->"90209109-11a1-4b65-832c-47ad4ce520fc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"249.227574`", ",", 
   Graphics3DBox[{{GraphicsComplex3DBox[CompressedData["
1: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
udU7kT0PQ1P5j5KiSGhcZcc9jZgNrHXj5PqWBRI6/d48/okaBdW8i9heJstI
BHlIGw9yU9A5znfy6RMUlCVSGcRhx0xo+kjd7d3ktUOoal/if3Qoz9Lwatop
FuKrcu5eXsSGrOTgDf8hNpRkc7/muFwPVlJ+K3XaoQBE4/fZX3euACvy6ULe
B3NYXf9QywO7PmCOVFTUypuD2Jz7FT5nmAk9o/bW4r/jIKNpJ9rNSUJeG/+q
vVdZiSNZL68qzExC1ffoFsprCnrozezQ38tFmFje+Pa7jYwKDvwV313FhiRI
yqeD2xbwatwbDyutPFCJGVzvI2bhFd2jBEnbNRwj+emeA30xiOm6s+hPLMA3
ofyaBR9GgjTcH6YYVIqrbumHNDAvARoXXek4x0L8TGTeId1QgRVHDpl1ia5D
NXYVLRJmJ34q85/lfl6FbRcTMMmBgpBEjsjj6inM3JZa4H+mGqsl/zHecngE
JuijLLhhAft0S1hptzfgH27OLktfJyGuY+C8WBWVqImYvnJSaho/QgvRntrT
0OgcX5lpQk8cbgiuSHKdxXS9zi4WjxaAQcDqtMEgI/GZFZBA/TwOfx/D+OXU
OhQoRd/jpXET63n/Sh89mcY5TN7HPkQzIoZ0lalzcuPY96aBiz9jHw650nsw
Y0vfZs759jbXLGMv7lvTwUPLOPLD4jRtkz/+oQnpc4Xr+EHnEabBznV85t7J
N8SvadhWd/ME4xUyodTA4C94m0wUCV2blHq5BC+iv0fvO8RKmCrImVrEU4ko
37Uo8wQ69FvrRbiaJSeRbtijVNxKTyjSN5wXUKdHTb+tTvrubMMOh1CTDVsf
Vh+3ZXjo2QxhHULcSlXDeGv61vlClzVce3d7xDx7P9jVXr/9z2ECs7s9MBg7
TSYsinXySq0mIcL8/PX9LNOYK6Y/8V4jlejzbmue0VuArVHiOexBa1h7yW1b
lCkdUaLQJaTMswERN07meAdSiSxeOnVWLVbC1u81S74ZDT1PHVsN+peNjVWP
dipnLePg1wN1SiO9MOY3oS5AycEycsFl0ntJRPiX3UKf1idA2KjxiQjzBD5Z
pSDcF8FOvBpgKQ1MoyJuD+Mjp+7WYSGLHyatiIeIl28+X/qCDqlcKViN424C
iTRBO2oEK1HZI2c2HElF7pxb9cayujf/u9LBfwslYGPCq8lXXgOVNo+eeF6i
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
8HnfjhWoVpv/U7P63Dv5irfZ76Ygzovx24R306EV7431wnklINO/u+3wVCXI
bM80D2gpAM7fbwpVDNPheoecTTm1DhYl2K3q1Csgqk9H4gNXHmY68W5A63UN
aM/X1SlX54PveT2OHPcK/PqVVlCBQgXsWPfe7hYlGnqujaanNNdi9Y7OY790
M7HgM4mThJINHvi8/qr510r81C5Zy9m3FPdndxevjKWDS1iXyPSXQvx+wIhP
gaEaS54wsfj2uhicw1Z2f6EmYrVX5veTbOsw/xOrqgmfCoA4IY/xoRpooDMq
rDyTC9d0RxSXS/3huPlnd+uharhWxur79vlvOAm+gg4OkeCBPlTebKqA1/fd
NTQ7y2HMrZyzRSsHbDf74l/y5QBfDmZHPv0LBU/kZCz25sMm95dfq6rzoPgt
uAYb1oDs8Jqhgltl8CCYq2SrVzYYujVtfnykFsbQ15ON9uWg18AetsRbgvWi
H//uUqoCGcWfsa6/MbAmWd8/3VyG7y56STH8+QvftbJ8s94mA+uGzRtTN9Xg
Jy0ZmQNZ+Tgu5muZS0AEmMgdVlucW+0P81LH3v4pxDfmIhl5iAQQXBcVT3Eq
x3w7fL9PKP/FirIezQ9e5MG8i2UO771S3M53SVguvhIPO51Our27AJx1FQML
2SnEzrfVj8+ncRMbk8vUQ2VX19uduznrZqjEvsN9rKbFXETGwZBx49M0lHL/
60TJ1RwsLm0XK7OpFmuHiHC36pSDK3HfeC81E3/jzdj8t7MW88r+2cssVgF5
pJ/nIdLP8yXp5/l/fT61SdyZxKVuMAiqVdRh3tsd+zz1w7FphGrl27Nh+FPO
nlZzqzosLe9wgEUvEXOa+/Y5HPyI9Zx3Hq3b44aNLjZ0fFiog81WLCmBTBXA
L8ZfI3ugBm8QHder350PSVtzosQtPuEtouFD/Vk1OOmh0U/jTb9AoMZS9LRl
KLa5aVoXFPwVfAsrftvV1mHMwVn83KAcKKXDBYI10QAvNna7xdbhyrE3QT8q
y6DdrPui0NtKqB7V2Fw3MgxCk0oSrDq1oO1YzjsfVAVZv2Q3KQayoSH/BgEe
5VXeG6OCdsWmYfov6uvYReughkVF7bFXCTx/uPfLnrwsHP7ekmHdnVrgmttw
nPdmIeSRfobb//EzbPkfPodzOxJ2tT6twl5Z26LmVYtBcLNeU9n5WyDhLtTj
nlKNpV2e1tse/gO5H/K5bf++x4Jq681/1tdhydJs4tjCFzj0aV1B+rlYrPVi
VPTVvjo8tPg76kN8CnA7P9i18WYMZhykjmYm1GEz3akPP3dEg3Omp7OuSex/
fQW7SF9BiuZ/fAV9SbyIxOlIfGCNCjVyZRBPpeku/PnThCuru94aqXZBrcbV
4RXMhqaduyXyfieo81XsZ9QRWQFWt/KomPfjMFu04WRk8jL4HtxdxFjfB6ft
hO0H1adA4omrq9LoIqi35531CeuF67G34k6xz8NbgQ+cugmzcB0HNH7Z3gus
39Rr/mbMAN+WE2xpQ/Mwe/H2qL9AL/SvKJocufYXSrKbyg9/mQPbU2dvCzxv
A5vkoOfaQ93g2XJ6y2erGbinIdqj4NMMHhPav5LFpqH/aLGwXxg3Ut2kfsO3
ior87sZ6R3V3QFCQWNKdSzyoonxjVONqv+lBzvVVkHN9ReRcnwI5B3iGnAP0
J+cA5WY9RehOjGK0KdPr8uIKTtzozNt5cACMFO8KPFs7gbeqVtt9M1nGv4+U
mct49YG3z7PES3KzmPfNYNTwy3mss5nBQoGrF75iQxXB1KnV+uTTMfZ+EVu1
9fqdedoLt8g582ByzlyKnDO3/senbhc57yE/dfFS8YFQMGKaX3O2tQ5KYxy3
Sn+vgEt1Uk3Ujzfh7GOnL3krdbDeM3GI5UwF3Lvq8u7lRB2e+CMXoGHjB1N7
2V7vH4zBuwbw8R8JTtjT8s6rsaU6nJbXtIH1VgWU0//q3f3LH4ZuuTxQGq/D
zuMbdP0Ly6HuWmJF+d8gnJAowbCjvw5u9Tyq4gwtB5VL2XVLdMMw72xRddK+
DiiHytxLN3bDj8fZGsYTjMSfN1muwTtXAGWzsei9XeURTTbt1TGT2G7/Ntsm
zEKMLkkGTh6jR1sz/+MPpkT6g9WR/mBnsv6/eAOJJ0scb2U+xYZ0uY7/uJjc
AUc/5RxP/LUMcyr3pgZS2BDNObg2pCwHvD9sbstbWIbaOCYiyaYVKvOeuabn
zoL3FxnTI1Et8IX09aKSvl6ppK+XNKp7oXI+BahLmdIGDz/Bj6/6rgmXurA7
/YsaP5lFuJDWSz2u0A66VV/3xL8bBVPuXa+LeTjRvl3amzbcngAW/+gGJTka
YvxqWpOZnQDVZzYdpE39AHZV6USj4Xo8fC3V0812AqIaazN+8A+Ca2jQqWDv
btjSqRUxfDwKso/uDyWCE8CjJHrXwoZMvGbMpEAjvwsIqdK7wxFDMNlQe6Rg
qhm0ePpZljeXwWtJeu+Dmr2gZRpKa16te/sVIszlvG5DqxpF6E1RI3z/clOr
Lnu1zlOqZw/JPQT+z9ZGl/36YOX7cc1MqIJLCTc3zL96BgHa8cJq18fBVPrC
94YndSB545a69qNXEF0RyVSwMgMWhRnlsRLtMChkfin89lvI0v06rue3BD0P
pn89HxmA+h5lwj7mHZj2lw5b+lFQimkvU+XHScjYl6z1PcILJr4dN951nYZG
92VkRqcsQNAHlbbqYF94dPNP3fJOJvSDJjZ3oIUOOU0lW9J//AAMshqnfq2w
IK2BeqpPIT0yObWLfrtXILgNZue+LmJHQicH1x3ypKIvp8//kc0PAoEfoKrj
x4V0Ht5+6xRFRT4OHz2yDwRDmXLzWXYFHtSnpXr+VRcVvYpq1D9HhMAan4/v
7vjxImuJ5sV1kzT0qEFYbHjvFzCYMSiuWOFDTeYtnAKr30t/F1IoQVn4m0ZG
ztEHDVBqJf2dMCqB77ZmzoKRJVhK6mV+3K1eaLr9LGVStwqeGBTcjmWrxo+r
ffQ2uY3Bdhcba/dzrfDV7pKfXlYj7ha8dbSnaxpCKSWu0mv6weT4fNvjn234
lCHaG6W2CJ07doXTh07AQsPBe1pru3DjSReftAI6xFHfq3uyaPU8vfmWXdyy
F/NYTHIH2lLRxflM+m9P6JD4Qt3nqcIBfMjjoouDGCOq+9ZuJ/hqdb+4bFb5
LTmCH8T9pl4rYV79n/c5PjWjIsk3KteL0RiO+rvz8ZEHbAhteNMt/paKRisb
Y5SHx3HH5MfprZKc6OTA4BWHNCpKE3Zc+PRhErO/pqYwmXKjL48G8NsfNORk
vEWD5eg0/voh5e5cJg/Kr6ioZy1mRKcii9ytpmfwvkhz+YE1fOjntEARxzgL
utn9x5AzvAyXCoXjsCc1cGQh/bIGW87/8XMKM3ZMwM9v+WjphEbBcMYDytbm
enwjsivA5WMTLsaP0w3bO0Ems2ih0b0GdqbSWTw70oXjLLf4GTEMw+dkk1fM
9V1QYsl7wOzhEFYPGTu/lrEb+s2+009uHwD5j5weWdkDuNCjN03p/QRcy2qc
s3Idg59HuvlUVScwd1xfLmPaINxcimh61jUJPsBZZy8yhjPN1CJSJWZBVXHt
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
       "], {{
         {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
          
           GrayLevel[1], 3], 
          StyleBox[GraphicsGroup3DBox[
            TagBox[
             TagBox[{Polygon3DBox[CompressedData["
1:eJxFnHf8V9Mfx+/n7vs1QkalJCKys4rQVCFSRkSSiiIze6Rl7z2SXSnZO5ER
IYSMSoqsyE5m/F7PXsfj98d53Pc995xz1xnv9+v9ep9m/U/oeXwcRdGAIooS
Hc9Io2iJ0meSX9KFCbUoypR2yaKom9LVkgfreLrSi5IfKqPoCKVGKrtGFUXf
Sv5W8vc69lVqIPletddV5VOVvzmPojm613Zq/2ldf03yTpKvVpl1VOYXyZep
nf3qouhUlf1E8u/Ku0HX15L8ruq8qDaHSr5X17vq2sF68HfU9rpKp6qNdZX/
puRGKnuO2h+pMq8rr9D52ZJbqO4/kldXvRckn640hPfRsbfS47rXU0qnKW8d
tfOy8s5Vul/ns3QcqfSe5GvVRqz0pMqspbZ+03OtLfka5dWUHpe8pvLrKdWX
/IaeYR2eSc+wvo5rKI2S/IyOr+s5d5Z8ve67kdpeLvkj3edUXeugdreRXE9p
Y7XVQ2l4zd/lcV0/WWknlZmuNEL5vyn/JOXdrzZ31/ljko9X2krXt1Lbeyhd
qPyjdD5Ox4NUfhu1mStdo/M79QwdVaYm+QalSGk/Ha7T8V8d91War2d5RW1O
VBuP6jhUaUvJl6vuaqr7g8rcqPcdzDNLPlrX7+Vfq40LVCZWmaW0o7x+Sq0l
j1KZdyVvK/kpyW9I3lzyhmrjGJ03V/urSr5b+TuqnXcl91NaqPZeVd6TSi1U
/i3lHaE0X/lPqt5Tyt9M+Q9LPlJpfbXzoY5/KP8+tfOe5N8kj5d8leTlku+R
fIaOL+odBtD/lL8a35p21O4gPX89lXlQ8kDJq0s+TMfjMv/3LVV3nJ6hg643
0vFDnZ+i/O66fnjm9v9V3iO5v/9jKne08tdQ/hTJh0heRfLeOh6qdJfkd3T/
2apznORJjCWlvqq7mv7bqiTGqsr8RRm+udq+R/ndI//b5XrvfSiv9k9SmhO5
L9WUdpf8juodrvQT40Vln1Z7qyl9q7xbc5cZLzlSmqHDqXqvZ5V/ROR+T/8/
VvIuur6unuM8ya+q7T11r7Mk76r89ZQ/nLlF9c7km0ieqLqF0uGSX2G+kJwr
zVT7I5Rm6f33Ub2bVX4L5Z+k851U/zXJr+n6rcrfUvJo5TdQ/nzJHZU3Rdd6
6N5tVPcqnW9K31OZhirzseQTJA9Xmil5J5W5QmU2Cf9umsocr+fZmOfV+VWS
2+t4v9rsrjbf0vURqnuB8peqzNrK/0HPvljyIUprSj5a6eGa+8+DOtYx5nhf
1T9AdUudH8e8orZ6KP8EyVMk7y95ssocqDKVyqzOvKV7D1P+EcobmnnOyVR+
bV27WPmzVW9DyZdK3lvHG1W+pcq8qjLDlaarzgwdD9C1VfVct+laonSgyvfS
PxorOVb6VdeurbnPjNUztFa9FZLf550lb6Vrc1VmE+YkybOVtxn31vklSk2U
nlP53ZV3CP1P53fEvudDfE8dt625/7yiuh9mXjvuVlpFaZryh+gZf1HdJyUf
rmfbIPb/nadn+EDlW0luobzteD+VeVv5Tyu/hc730vHK0uOlUpnfdHxAZe5U
/qNKv+r8TZV/OHN/OF9lakr3qUwj3auh0kaMNeWt0HFjpdsl/85YV5k3VPfB
zP1kN91nM6U7lP+njvfknlOnS95c6U7l36Pjdkq3MC503FTpdsnzdPxS6U2V
f1LttVXdOskb6P5NlDZT+9OUv6vy6yn/QR1P1D/tpboPSP5bcs/IfefYyv1n
hspNyj2e6uk4JHcfHK9n7pF5jNG/fizcx/pJHpP7n9+p41fK7xR5Xf258No6
TnV3z7wGXFVzX2irdKXkK5R2ZT3Q9WNyj9vxOv6iut2UP0HyUMl7Sb5A91gr
9j89jHfP/c3fR29Q2lx1p6qdjZS/us4rrf8NVO4s5b3MOFV+Q+Wvr3f9Sfm/
Sx6s77S90nqSJ+r6Et1rb7W5X+ZvwXeYquOhOv6s/HNVb7rKbMRcp/d6MfMY
6aM2/tWxOescsuo05V+zVqrdxjp/SXWnqe4S5mqd71GzjrS15O0lz5L8ldr8
JfOae1XsdXuB8tvpuJvyPpZ8sZ6/Tu28zX9kfVG77RnjrP9654ZqY7TKpDp/
TWXO0vOcla6ccqOLlJ9JeJ3xpTbbqt58yZ/r+nf0FeY3lVmhZ35B+V/S3zPr
Bi10nw2UrmFdUJtbKI1mDtAxVvqD/q+yWyidpvxb1MZIHffgGSQfozJbKe2l
+z+kexyoezZR2e117QzWIsa/jp1VfhPdp7HS1azdKrMDc72u7a/6l+r4l/J3
Ym5T/uU6v0zpb+V1UVrEMyh/O+aJ2Ov8W8r/RPdbnFl/2FfpS+XpMaIVKvOt
jmvx/Hq2zvqGG6rsKN3rCh0bK7+J8l8urG800/EwpR8lj1SZ89FXJI+WPFLy
6uiiavMbHddkXVPZjdVmE12boXd6vvC1vVW+eeJ/V+lBPso9l9B/ete8ho6Q
fJnqrS/5EuaV1PrJXL3HN5n1pV1IKv+B8v+Q3LrmdbmNys/nXGkntd9AaWfl
9VNqo7w2Kldfz/Ko0ucqf7byz1H7esToZx0vVFpX8ga6fp4yv5P8q/IuVlpP
8pkqPwadW/I5khtLbsD6Inkbtb+D2r9D7/SF6nfk++p5L0o8dhgHB4ex0Fbf
pofaf4L+J7k986DkG9XGQtqJPJ8xrz0uuZvKXEbfTj3uGf9PMDcqfw/VvVt1
D9N9D0f317VNlb9A5Zsrf3PJq6idwbq2b+zrPWoejwsYb5IfDzJj8+DwDPTn
Vqr3huQG9B+1c4W+5+Vq52mlD0rrHug7M2PrPFsrb4Tu21jynpKvKzwnPyd5
pOQm6GZq5wjJ1+pdEuV/VFr/aaDzKYX7T3eVuVz3ulD32TY8w5nK307yLMkX
MX5jyyvvpfLHqu7daiNS3nvYYBLrh2/FPImev4g5hX8dez1+WfIc3f/90u/Q
POSzRrNWfxjkz3X9C6V5Ou8d1ugPJPfUsZfSq+H7PRa+If38ydj/+lpdn4Xd
EllvRldDT+Nd3yr9vvuoTPfcdTbRu7yla2tg+0k+WfIkvdcilf209DNxn4/j
lctL1FplPkFPy2zj8Y7n1/zNPgvfjfxPw7tvFPvZt1aZNqrbQW2Ox4aMPXbe
4zsrv5Py71P+ziF/Z5XfVvmt0JMy6yTzgl6yvfJ7YjMo/3o9yyel/8EC7AZd
O1jv1kXyDYX/xTdKh+ob3cj8r/x9+b4qfyG6auVrW+v4ttJludcZ1puJkccZ
4+1NyY0T57MGPauyxyvtn1n3QQd6XmX+wcaQPF5y08T56EXXov9WvvaX7rFV
5fLr6Xnbop+onWaJ78W4bqrr3yn/J7XdXmUuUf3ZsfUR+jw6yfEqO1TpKMb8
f/OO6nao87vPia073Br0h/lhXLwleYDKDlRaJbJefG5h3XhdxkrlNpnDaPP9
yPcaEMqvozKtVKaR5N/UV67K3dbpOjbQe5yqZ1hbz3CBys1MrWdvEPSlh3Wc
Enssj8itN6Az7Kj8IUplGBPHJh4v76n+NbltihVB52OsbaN3uaiwHsgYJB89
sJ7ue77yn1e950t/N/JXUf552Azo9WrvQKW30VkTr7Wss9gTp1W2KVhHWU/R
kZqp7lHY/9iNauNApS8if4/jw/c/KvyLVZmHVX6Myryie20o+TPVPTS3fv+C
0tq67yidx7nnv+0K21rYWVuH+67U23Q8Dv1J+TerratV5k/WPLU5mjqp18Gn
wlp4SM0y6+xXYdyu/DwqNyS1Pn+I2mugdLPkE9XeSUrrhX7dOPR55v2Tlb8+
/7tyv2V9oG83Crr360rrJp6raWd2YgwHPQV9pZ3kH8FYKtuVb6jcOonll9Ex
VGdtvp+OJ+Ru60uVvUSpq84/T/wMPCtzNTrYeMZCwECwkVlj7k9sH/XUMaPP
ct/K/+g81RsT9Cd0p7LyeMd+wJ4qlA5Q/rFq5zilNYJt0SiMX2xx7vUPc3vi
79RI7T1Tc1nwoteYL0rPe01LjyO+yUdK34f1oi/2d+7zYcxHsf/jBUHm/26s
53qu8D88UOlr5X+t/K/V5hIS82ni/HrolonzqNtVx2WxdchTlH9Jbp2LefSX
oJ+MDPoiuE23xOU/jawf/RV7vZgS5sYy1P0yzM/0I/oT+vSu6r+3JtY599Tx
R+U/E1m/R24Z1r7vYuNcnRPPK6yhjGvWQta65bnnN+ruoHdfR2kHlf2mDBil
ysyW/Cx6jNpZGjsPXYUj5//pDktDPrprqrSn5H35b8pvJvlOyYNyX+OfVqH/
gCWBn4KdXq/0cmybmjXtxbB+TQhl+kg+sjC+ybUTlP8C67Xy31Te4eiXqe0r
1tzDIq+LfAuwvntD+6zFw0NdsMHvCttB5GMXIoPd/an2Zupanb73HMn9lT5V
+2+whoBVSd5c1zN0MsmvKO881hSV/4D5W2mx8v9gbkqtv32ovAFKX+j8PR2P
VFoEjqwyB+l4k8r8IPnh2PMAOvIzsfXk71nLUs+9++o598t9bXLm8syx6N29
g+59aLDrNozcF6aH70n+s7FtPfRE9EVs4B/0r+sS/4vmeq6/Sn9zdC50r2+x
D1mr1f5Feo6a6g2WfFfqekmd7dunsLtVd0j4d1Vo84/S9wPfeaRmXHlg5HmB
OQus+6DEOPCQcN/Fod/+Wxl7vw19T/c5WvIdfEMd+xZ+l6Honeg5kbG/qeEd
f6tsy1yp8gfFfvdmofzzoW/8ozJLC4+tHmBLua+NCG1S5heV6aMyl6bGTx5T
md7K30J5U7HhI38DvgWYIropfb7U+e06Lla5DpGxzBMr45k/65tsJPlv3eP7
3Bjdw5FxmSeUjpF8CnOm2u0b8NCnlAZH7ntJ0KUPot+p/pH0Hx3HgpkyrnW8
qTTW2rIw7gnmeZLKt1SbfTLPvVMTt4Nu/GTusfOjjoN0/ihrsepWkk9g3Ze8
iuSTJGNc1q+M3zP23s+MN4H7zwE7iv38r4CxhOdZU3VPY43GXlaZE9F/wBHR
WyS3UZmJqtMNHEvt7qfjJZHxzTczY2fPK39YZj3hTJV9SelE2oq9zrHGdUi8
prFOsr7frTKd0D2Y53W/fpHxM8YyeMu0MKdsE+b2b8Jacbbq/JjafsS/ck3i
OXxjtfmH6rZILb+PTqb863jXyjbj7diJqe39s7D/VKah5FRlNtDz7kifATvJ
PH8+pusHFbYx+8bGDMCatmYeKv2tztDxIZ3XjzwfLclsG/9Z2E5Dr3tXeX1y
6+xDlKbV/N976bkeReeJjEs/xzyVGUfBNwGW8oTafDZx+Z9UdpyuPRYZm2cd
BJ9vLXkCeoLK3qh0XeJ3Zy77OrMOjA/kxprnUnToLWJjkm0L+8bwi7UqjNuC
2YLzP1N5bngUn0RiHPhpHXdPPVc8reM5mX1Yf+f2cUynDyjvbKXZNWPCB0vu
Hxk7fqBm+b7c8z/rwCngM7l1D9YW1iHmOnwhCzJjVfdjs9U8pn7P7RN5NrIN
+FDiMXJ84TWDdwRDmIFdxhjUcXJuf9Dp3L/m/N2U30Xjbm9sYd3nqtR+HzDt
p5R6Zv6PV+tek8O3mgVmEllnB6s7PMw5W4IjqP7vhedY5lr8NXso/7XYayD2
J8/5scp9ktmuOYY5O3efBAM7oTQO9ltuH+VUyUP0LON03p7/ktsn9ZLkoyRf
lBuDuV1t3VHzHIjP8k6lQ6Lw/5QGhXlmRm75LPCl3P8Rn81jNc8J2yu/Xumx
P5Tnrrk/7MF8X/p8tdxzLvdi3XgktD849lx5TPjml5f29zyqMrum9rn8w3yr
/BclL8ntH7lf8sUqd2vNWDH+hc34nrrHEOaK3DrMT/T9yv4//GdfZcaeVtf1
fTK/L77eu7FvI/tbH1faU9ceSFyPsYattl2w1w6PjbV0lNxc7c8rPA/MLewX
xnb7Wml9pQvJz+1XvZX/WNoWxQ5lHtok9Vz0Wmm/FHrCM8o7V/dfT/UvVb12
dba1hrPuoWepzDy+p+qMlfy38v5SugGdh3Va6TrJV4IFYAfofJzqfqHjtcq/
HD+b0mc8Z24fyuTIa/PYYHdw3Cq1jN47qmZ9ddXC/tZ3JG+m40Klc8May1rL
2r1lsAVbhX7YQs+/Jbi87rV15jUUewK7gvb7x/bTgtX/p9NTpm1iGf28RO/O
/M3n5/Zh3cY8mRijHS35ucy4BXjbjMT+K9apPXle6khuh90veYzkYSr3odo/
Q/L7NffTlX042FPYWp8ob0HN4/eyzLbep+ikzJmZ8bFnWd+wwZkrWUdy/5cX
8ImyTvDPdH199HXJXyl9WbNP7bTYfjx8iCP55yozT+ef6XgQGCNrhORr6NOS
F6OzKP9eyQtL4xRgFPgZ0F3xNXRT2Xdz/+vz1OYVrOVqc1Fuv9hd9LfEPkN4
Aj/q2g81f5+fdWyqdKXkGbo+TnU31PnHuX2L45R/Ff0WXFdypeO2ujZAZVoU
xjDPqdl/cl7NPpSNlPe20laSf2UeqdnfDRFjaOgz+Hs75f/X+zhuqPymyr9F
73V0ze2Asw2pOX+WUkuV2UTHjwvbrdejk1TGosegi/KPJH+nd/lLcmfapQ+A
WzG363s8WNjeH574PozxA/QMg2r2p18P7pKav9FL+QNrxrfRM69OrG9cq+Om
qXVgbKbja9ZRb1R+y9R+/xvQ1VPzH8Bzj6pZT2AOGVN6jfkXf2nmtaalyu8f
O3+U6v2d2p4dwbswlzHGVWbjzO+CzwT+A36Tm5W/M3pFZL/28tL+TnwycC3w
y3xTmGcCF+JeMJLU6+DA2HMi8+FRKjM299hvoTL9lL9JZOwUDBoserXC3Ix3
WRcknyZ5NmMNGzexDYetNjzoZouCLUM+dtRWuf1GPB82JPbjQMZ37vnhCZVt
p/zFku9Ad0s9t+NLwafCt9064D344G6SvGMWcAz6f27fFP4Y/DJ8f8peGcrn
utcpeuY3In8H7Eeeo0712mQuQ3/GL4jfDZvw++CHAsNtkdk/OF11n0ytY+9M
f9fY7KLzVdCpc/cb7PsGwcYHdwVjBV+9qbDvH4yuj/rv60pz8G/EzmNNBwsF
B53OPCl5QGq9t1vNui0+EbDEK9Fb+H9qY13WmtS+erBocMTfVfeD1HYB2DK4
MrpBxbOnxmlvKcw54H53Feaj4KMC9z4hMQbeVeddavbZvam2t63cJ9Zh3k3t
B+Sf8e+UHdUp78TUfi74V1+nzp+MDlm5D6yS+j70zy6xfYyLJE8qzAvCF7iu
ypye2uc4UHkb6R2/1PmdKrNaZR3psqCrog+Duz8W+io+NPAhxvuFiW1J7On1
0L0L+9EOjO03Y94AT4L/Q50G6LeF8w+NzV1i3OF3e6nwuFhfxxv1DM1Sc7z6
ql5z1srMNiljoLHKvFA4H/lFpcOUP7hmPhHPsGnAqcCxGmKfKm2g/D7Br4Gf
JNE9jgW3UP6jsX0h+D766v6N9U3m6trtqnd4aZsu0/lQpZkq/0jsvgCePJy5
JbOv8Zia50DmTzCKCxLPw9i3YBn4i8EmwJPoA+eq7rLUWO7aOp6a2ld7esKE
pDwd3tFxQWr97c/Y/gl8E+hCH+b2FRyZWeedKrlfZh8NfqrHdVxWWE/DXh9W
WId8Ijd/iTnqmdx+BDhC2IVladuwTt+gGRh3Ztv61MK2ADjnEbHnjz1Ub1pl
/hJ4NX5a5sxbdL5D5jljuuqeVtgGgScFj24A/YS5gr6kNFP5a5W267GV4cWh
Gx+ZGxeFM/Rqbh4dui72Uf3cPCjmCnh7rMXYZfDn4M7BzztWz7BmzTYfAxxd
9BTlraPzWYyTmrl72JVv1cwHZP45vOY+hQ07Wu2syNz3/0mNb9Ofz8T2yDxG
60k+JbV/Fg4k+jHffHV9w5b4uPHlgoWhgzGOJP8puZPkiXrm40rbsBMkH1va
foTLhj+XfrmGyg9T+pA1K7Z/m/VidXDy1P6RNQvb3jwzPhTWcvphL5XtWbP/
+oCa1z38162w8zL744+s2feLz/eImn3g+IVXpPbT0V9Xjs3c9trvyt8GnAj9
I7cf9prYfJU5ubEyxt9BNa+5a+g7bI9tktkHtBV4sq5donYK5X3Peq133Vb5
S5kTwQRTryn4X1mDjlR/eTrMN4yp88HUU/s7Fks+OLVP4dbYeuXFfJPMOCH6
0HyVeTG1ntZD79K6tK4Gzt87Nfdmn8K+G2yPN0r7d8HPexX2JWE/gMuBrZO/
SHVfTW0vXKp7vZxa9/tK+Yem5vDksXlA2FxgULm+RTtdS9E1SmP54LqLCuP8
ewWMGLlf7LWTdfPkmrFCdKTbVGbr1PYp/ET8udi6rKW3pl5P70o8RrtG9ksg
s9bDYdykss1fyz2HgwuCUW+Xml9xWGxbAjviNrU5K7W9MCI2H2oK31n5r6fW
1cEteQ/8EfVLc2/AnbBtbyw9xjdLrANh34HXTVd6KOBRzys9AO5SM0cQLK5x
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
G5V9SOHqsR8ePEy4m/Cg4VViI7Nm7h10XfAT9lZjXxTs2a8qc1jhCMPRw1cC
fxmeIBxm8MavK3NV2Utwg8rrFHuCEYeDvwB7B1/PfbGxb/ixcH+b5uYrwnkg
hg/OMHF8xM7CK94l/OtvKnM6Vy2tF6IT0le/rcwBxU6flNlnzfq4pDLP9ZbM
3Fr4PxMyc2LhyoJhEp8PjrlbZl4cvBfWXbjF8IpX+hYT+xfBUuAzgbewdv9U
mY9IbAHYPtx+YkfgyRM/go+KmEnWGuI24DDiC8hz28LwWPExsacneDz2UtfE
PlP4Feyl8kXkWLyLSsdbXZOZ5wkHOK28/yTfv3Nmnlsc5q4FleMP2ceU/buI
PQCfY38DMDriiIlfgc/aPzeXHR47+8US57JO0IU+rrznV5553y30IvQBuMvw
lukHe8XmVMBjxMbAvlg9895lxFrA7SQuGlwFLH1RZZ7lqrl5iWB32F/swUf8
L35nfIFgWpuC95fWnZiLFlfmyLKfH/w97CT2iPst8/oCF56908BtGAN7x+Z+
EJdMXC/8o06ZOYRwh9inFi4i8R5gUsQHEhsIv2hhZU7hxZm5u/i1sd2+qMx/
XTczrxWbCxyAOBBwKfYAJnYYDiR7xLJHGZz1NPOeZthWxIDC/8UX+T8uBgZZ

                "]], Polygon3DBox[CompressedData["
1:eJxFnHccV+P7xs/5nPGc8ykhKoS0SWZWQ0O0SCEiOzPjm0SRkcgoZYQkK2Rk
Ze8VGWWFZMvee5fR73p3ndfr98d5fZ77PM+Zn3Oe+76v67pPy+Ejd/9fLYqi
7bIoSvX7UIiiCUUUDdHKDWWPl32d7LGyL5J9iNot61H0vsavq3VPyV5F9rZ5
FF0tO5Y9TcuRah+h8X9o+4tkHyZ7mOxTZF8u+1jZJ8g+W/tZW9uOkX267OPL
KJqtZU2tO1H2Wepfi7b6T5Mdq6+m5TjZ4zhvnXRD9R8iey/ZD2j/p2r/g2Sv
Lfs32RfKPlT2PrK31/hVNf4I2YfKHqp9XaelsdYdJ/t/aj+m5Z4kig6QvaqO
H6lvT41fj6b296P6v9f67bVusPbdTde/vcbUZW+m/W+t9hVq76Txe2r8Txr/
s9Z/Lnt9bbeV+meof2vZY7T+J63rKft92atpf1drGS37LNknqK+pxo+S/T/Z
D2p/Z6h/D9ntZZ8q+yrZx8s+k/ul9gc6Xqxt9tK6NWU/ruVKtSep/xG1f1f/
Fuq/TOv+1vaXat1Rah+j/t3V7qTraa/+BlrXWsfP1B6m9sbqv1H2drKvkX2J
7KO1rwe13Kz7NVj2d7qevzVmF/Vz637S/i/QPofL3k3217KnyD5I9s6yd1X7
Sy3Xyy60PKz2b9rf5jrGpbJrsi/RMkLtIzX+c20/Wfb+snvL/lL2+bIPkL2j
7E9lT5K9n+wdZO8l+xTZu8peS/bWOqlS+z5QdmfZq+t839G6jrLflt1W7S3V
P112R9mz1V6u7QtdX1/Z7XRu7bU0kn247FR9//IOyG4Y67p0vL9kZ7K3U/8E
2V/I/kz7W1f9b2t/pbZvrv6Z6j9d7ee0/CR7juwN1d5IyxqyJ8heQ9tGsleX
vQb71/aTtAyQ/Z+6pqpvoP6vmq7jWdk/a3xzrdtB/Qs1fpGO/xrPAM+m+v8r
fP57qr+x+r+VvZrsDWWfKPsxjV+kdQ9r/AYa/5bsddTfVf2dZL+u+7Ozjn8v
+9P4FzX2C/X307q5WneQ+vuqfWfN9+NW2f1l3yW7leyh2l8rjd9F+/ta+5tZ
+H1uLHtN9SfV9Q+V3VT2E9p+gLa/h/kIW9u3Vv+u6m+p7U+WnTJfyB4tO2Pf
uh/naJsmWreJ7sthatfU7qn+w2XP0z6b8KzJ3l/jX9byT2J7n2r/+3BvZO+n
83te9lPaZk1t8zX3XvufoN+1mbM0voHsScxj2uY15gHZ58m+gPlCx3tB7eYa
+yLPu9p9NOZ23g+Nf4nnQePHaf0Z6h+h8S+rvb76n5R9qI7/go7/ktatp3XN
9Huytumo892S+UDjx2jdK9rXSNmjZB+q/mUau1j299q+hbbvo/GPyD5S9gay
+8reVtt8k/v9+1zj71D/AWr/oOVn2Vuqf66u71eecdmN1T9D43/nmdT2m+pn
uuxfZP+j/hayD5Y9XMtfNT+vq6jvBh3vGY0/nvlAdu+6x/zJMVI/z7+rPRD/
kvv8l9d8fi/o+Mt5X3SNh8q+U/bL2sf96v9E4/+U/Qb/UfW8DdW427TPUu27
tByubS/SMpbni/dd+95ZY66PPafchX9Q/4m8X8y/6r9D2zeI7cMayN5E48+N
PYfdq/HTNP4UjfmM+6n2pVomaPvmsndW+zItZ8leV3Zd21+lsf9GnvOOUN/F
Wk5WfxOt666+hxP7ort1jOe0/07qP1zrhsseo/a1Wp5MPP/PV/8Vss/Rdt/J
fknXvrns4epfTfZT+FfZk2S3kr2L2tO1nJ3YfzXS+XTR9Vwc2yd31X7urXzd
Ffxf6r9R69LYPvOywv7xbvym1m2h9iVaxmubdfBvas/i/Uj8/OGP71B7Tx6R
2P72IdmHcC+Y//BX3AOt/5X3Qe0rtVygMR1kv6j+mbKnyt6I+V7ns1TnsFjn
cgvzj9qN1b+Z+qdpf6dp/Jqyt5S9luwV6l8D/yH7ZI0/Vv2ry95U9gDZ9+ja
T9M+t5J9m+xtZY/jP5bdhfdf23+q5e1qfsvVfkfLQtmryP6E90fP7765x1zA
XCS75L3lfZX9lpa67FeIRzT+VS0PaOynspfpfN6SvaDa3+Zqd2C+0fGvUP9g
ta/WMiOxf1pL7W20HC27jbZpovZWWkbIbiZ7cx1nVuJYY7L2d4P231D9LbTu
KeZvnef7Osaimvf/tPpnEB/ouvfT+E3U956WV9Q/Q/2LNf5d2S/Lvlx2IXs9
jT0pto8NsteRPSa2Dz6JWEfnsDyyzz1Q+99Z96OpxvzGOh3rRS3LdT4Pyv5A
/e3qjilO1T6e1rYzNfan2PPlTK3/kGdW6zePfH++5B3TmO8Yo+23YX5S+2r1
v639Xqa+72WfT3ynvoba//Va94fWzdd+rlL7F7Uv5H1NHdtM1rk+IftE2T+o
v7vs92R30fZf63jXcP7a5iIdr7PW/ar2Nfhj3jv1ddP4d2X3U998jb9d62Lu
GdevdWnNz9cTGj9NfV9q+3NkP5raV3wYe74/Hv+l890r85y1k+y52t9E2e/J
XpvYQ/2nyH6NOUm/Y7W8GlfxqtrjtbwZO15+V9f2jbafq3WJzuFgbX+3lvPU
fkz9z+v4N6tvucZfKnuh7t+Zst+VfSr+MLW//lf2zbIP1LZ3aTlX2z/K863+
1uo/p+b/80e1W+j8NtTv+cxvqWPhG9R+nPle7e91Pt31O5tt+O94H2VPq9n/
rKXtu+WOAT/h+ZLdVb/Xyf5Lv+vL7sG8hP/V/nuqfVM1/x8su7Psa2XPlb0u
saSWk2RfLHu4+ruofxZzPfGVrnUn2bfJ/lP2FF1/b9lzap5vDtX9X6Hz217j
VuAPtX0L9Z9Rc3x2Bb6NeCXz/PpK9X5frP7VZY/V+E005iLZHzD/qO9eLVNk
L+D/xndpuVD26/x/at+nZarshbI/Jq7Q9bbS70Stm06epfYpak/h/DX2Vi2n
y54l+xZiBfWPZ64mPlXfLVpOk30t8avaX+l819GYcVq3Pv5Yy8lqT1P/d7re
/9TfTfu5RP95a2JV2ZNlL5V9RGDiVmzN8y37P+3nB/V/KruT9nEc82zqua3G
/dH4XbSPXMbtshuq7yON3UL2ItnHyf5Q9uY1z4+3a/wojd9K9muyT1D/1+rv
Kvst7pfsL2V3lv2m7L90vMdlryr7PubHYH87gXGyNwj2J1Nl/yh7tH6/0vgu
Gr9E9trB/vAs1hM/aH+Pqr8Rvp34I3W8uZrsB/h/Nb5tPVqZAx7FnBcc/6xQ
/888H1V8fYz6fpE9TPYv2n/KnCR7X+In2bnsH5gPZf9J/sCcR0yg493Hu6/9
3Sl7lo7zD/mZ1u0u+yPZ38l+WPYq/Key/8b/Zc6nPtT+tqs7ZzlN5/C+fteQ
fa/6AzkH/5PWXa72Vho/Usf7QOs2q9lfvaG+Rhp/ceb5oLH631N7E/W/w/ul
Y73B9Wj987KP0e9i9bev2Y5lL5K9geyned80drGWjLiX51+/b6p/o5rtvav8
Yiixp+wRsmMdfyeNqWndUanzi9Y15zNHq79P3Tk+8cR7+v2WeIS8VGPaErvK
niL7Y/X/LzU2san6XtL2N2r7IzSmlexnZE8kHqjb57TgeOp7iWuU3U5jziGe
qHuObKn+HdW/Rd3v2N+y/8Qf1h3T876+Q54h+07Zt8reQeM7150jL9P4M4P9
69dqr6flbNmN6/ZJG8h+k2dN9hWyr9L2WxLP1f3O/4CP0PhV6/YhzWWfFRwv
4AvX17Iqz4KWg/Ucd5M9ozB+sp/G3y+7l+yudc+BfxET5/Y3t+o+DdHxuun3
wcSxclnFO7n6H9O6x2TvkzkeJte9V/awzPEz2M59sves4u3hsu/k/ZA9MHOu
/oDsIWrfov6DZd8heyu1b9K+L489v16fe36ZlTqG6a3x16m9h9pXakwntW/E
x8een67KPV911bgeGnN17vn66tT5XY/M8TpYxAziodzP1/Xq74O/IzeX/Sj5
kPoHqX/X3Lku7/AS3d9lxBvkK7I3zhzvgCWcI3tT7edq9Z2t9jKt66C+y1Pn
YhO5PtkzU+f+U2RPUzvTuoNix0MtZJ+j7ffGv/KMV/PD+VrfTv3PVPPHebLb
yn65mi8uTI2/tNHvxdr+WHJrbb+m9r2GltbqG6V1Qe3JqbGOQ4hf1E607oDY
8fZaxA+63g6Jc4xO4B1atlXf+bFxQPIVYuULZffLnA/szdwke3Dd8Sfx8+up
84EttRxKjM//pH03DW431DabETvIHib7G+6nxhalY0vWkUswntyJnKIPeI/s
/cA3YudWzYJzKXIscqfGsptGzqEG1Z0vbQR+kTuXWy041yOnI3ZupmV+5Bh6
a/CSwljTUYlzw9WDczFyRHwJPoVciRyus67xLv3eFDtn76j+BlpuinyOxP68
f60T5wCTS+Mhl2R+58/UuonkQ7H9zUCd4y65YwXmwDnMa9rHEbnz3/6Z8zOw
yuuIj3Wua2kfI7WPXrFzPfJf2uR8xEMnpfa9PbXungpvPF3rmuFP1b5Ry7Ma
O0b2JK3/XcvA2P7oN7VPS1dCTNEuxIBqn6KxO8fGK8+V/QvPQ2x/Br43hv+J
WDU2vnKV7LO4Vi276ToG58aaxsu+knhb13N67Bw46Nxv1sEWaJtTZI/jXmp5
TvZY2aeoPYecITHeu4/at4J/JMaHT1L7Ni2vy54ouwnxTuk4lvh1I9n3yP5G
9nW8P2AtzO+8s8QH6r+zdN5AvgC+S268fmT/fkHq/53/H//8OtiVxi9NjHee
Wjo+fydxPLYF8bXszys871XwA3JA2ZNln5c4VvwfsZP+pHbqfzAzVjwJn0Rc
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
vWqXOp/etHTuCe61TepaSbALNMMQ02Aa2KwHr+Q55HmEv0ULjr7qm8iacPCN
c0pjx2DUYNM3BevpwaiJ/eAbjsr8PpAPDCl97nAOcEUnBXMRcEbE/3uV5iLg
LG7Wufxbus6E+hL2xT4Picxh8OzxDIKVUO9DvnteaX8Bpg9O3zezHgK8nvh4
39J6BDgOuAX8FdwpHAPaopnBXAMao0GlNQNoBaiZAl9hPqTWuy33Lrc+DPwY
HHlO4lpIcjfeWfSj6KHBz/qk5qmohTwv9jNGvRi1rGAn5IDTE9c3URsPJ0j9
GbW9YFU8v2C7qwbjY+BkYN/bB+uTwMDBF6kXppYF/JV6FmqkqI2CDwabQ+89
KTJGBxeGP0UfBCdGfT41VtRW9Yl8fXyThfoYarnQ0/G9JbTQOxDrF55zmWuJ
4cF2zy9djw3G26MwX4u2jhgUrJL6/hWxMcspwfwB2jL4ArBKvp+AbwSzBEvn
+wPESmDq1LNRw0btWi+d0yWJ8WpqefhP4Gr5JswGkTlbYl00bidmjnl3K81H
ooVhe/Jn9Nfc6w1T8wfUxFEL1zdyfUCrzNhZh8i5MJgVWBU5Mdz3uaX1WnDg
cOONgr89AkcOtz6xtJ4Mjh0u+IzS/B08Htz+WWWl78pdj4FeAG0x3yzgWByz
vfpbpfYn/YL5a7gt9BrUx4GHgEGg5wDnIJcnBgSrwMfgW8As4FHRm1CLw5yN
P+0erB+DK8b/bxw8F8KlghVvGYxHgxlTbwQOAx5DDQz1MKtkxlqoiaNeC5wB
vIF6LriGdYLnbjgH8qlRpesz0YCQL40uXZ+JBoR4tUmwPgENDf5722D+G26V
eGjNYD0B3Av5zjGlfUmDKh87qvR/m1d4CHp76gU3So3ntA5+l6kNoTaZGuUd
uBc6799yx4NwadQMgx0yP8P9giEuz63fBeunJplvPexUmk9H+0btep/Sta5o
Rzrq2LsEc+tfxa793bF0Lj6lymXRZ8JNk9PeHVwvSC1NPy3zc9dHkJvOr+b3
3qW/3YN2cdUqnqGfnJbvR+FPqY0jZkRbBV7If4HGilo7MESwQ77xdWnuekJq
49SMRpTWwKF9w/+CVaJ3prYAzDIOjqfhPqhx59niGaN+tEPq2JD4Du6VGPHh
4HpIamP2iF2f9HfqNjUzxyfWO4Glqrmy/vCf1NglNUwnJNZXkavoZ+W7zTve
K3c9It9m6Fwam4Ln41sYfUvzwWi3iB33COZ6iSGp56S+E+5p7cT6BPiAnpE1
ctTqgmkzHzMvfxyMbxNPUDPI97xmVfEBczjf7+L5QS8OBsDz9FlwH/P80mC8
r1vkmkJ8Iz5yaer6J/QQN+bmjq+Jq9rg3PM98z7fg8EH4vvgBPi+F3p2xlLz
gz4CH4jvw8dRiMUx2DffVIKPo16FWmS+WUSt/hfB/gk/RX0o9at8q2q9xM86
Mcl7qZ956nuoJ4E7Iof5Prd/JNfjm098K+Pq4Nywe+WrvwrmPvDZ1L5fGJz7
oUXl+y7onZnr8QF3BNeL8o0M6kGX5K6ngcvCh/CnozcEzyLG4FshU4NzO7Sr
fGvgYubH2FpDvvUwOxi7R0vL94Yu4f2O/Q2mWjAeD5fPNxYGltaAov0kfuRd
RDP9UOp3kvebb7qgzx6aWl82OHPszjeIqJ1FDw4/Ck/K+w2+hj5wj9T3B307
eq8lqbkcNNxzU+NZ1DSgL2O+mBxZI41elnorNK4839Qfbah269T1brXM2DU1
htS7gjODN1MDd3niem64b+Y85qPZVXy6d+r7R/5L7f7C1PXCfN8LfB9Mgvp6
cAzwDGIscg1yDup7d8n8/PD895a9eeb/m+dzgOzOmd+/LlV+NCx17kIOAzcF
hgEWgj5i78yYCDHgHpmxDGI+tBA9St9bNBHE4sTkcG1gHjxP5PfgBS+l/v/B
w64nlk7N1/K9MfSdfOOH2JIY8/7UNXPElNT3g6WQA1BP+VPquTZE5qqoWbgs
NWc1LbjeBq0XzxixDzEQtQTUK6IFAWMCW7o99VxHDfjy1HMeNd0rUue2xGx8
ixENDNoXtN8huF4Efppv+vB9Ft4J3gW+wVQE14+gpeGbi8zV1IB/n3rOxldQ
Y/5jap9BvpUUxsf4BhS+gBwLrhGfwPsBv/Q0sWzq+mn8AP6gqGJi9LpcK/qf
AaU1umhzm1bnD/6LVuYTrfs/JZhvKg==
                "]], 
               Polygon3DBox[CompressedData["
1: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
2ZBO+r3o8b7C3sD+DzvEwHQ=
                "]], 
               Polygon3DBox[{{1895, 1894, 1183, 926, 927, 1184}, {1723, 1835, 
                1089, 1361, 2414, 1722}, {1906, 1905, 1193, 938, 939, 1194}, {
                1731, 1841, 1092, 1386, 2423, 1730}, {2072, 2369, 1098, 975, 
                974, 1402}, {2422, 1725, 1724, 2421, 1379, 1380}}]},
              Annotation[#, "Charting`Private`Tag$14758#1"]& ],
             Annotation[#, "Charting`Private`Tag$14832#1"]& ]],
           Lighting->{{"Ambient", 
              RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
             "Directional", 
              RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
              
              ImageScaled[{0, 2, 2}]}, {"Directional", 
              RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
              
              ImageScaled[{2, 2, 2}]}, {"Directional", 
              RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
              
              ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
         {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwl0k1IVFEYh/FXLbPGr7SSWVQY6KrahUM0iMFUorgIapG7dhqlmMRUmwwl
l1Ew6qZN9LFoWSG4rEWtBPvSsg8bKClEysggwX6XYM48z/897zn33nNv4+m+
4+dKIuKB8bU0IvF5PExulkfUyn/lAt/N1/k438+H9CzJWb6A3zZF3FBrK4vo
VPsj35O7kz0qIirVJ63tlWv4c36Rf7Z2Tt+uzRE59VG1otp3tZd6xuQKc2lz
d3mK7+SPeI99m/T+NJ7KaXMZcxl5xXih9gVbjKoN9pOr8RXu0VfDX/NafINb
cRbrcA7r8S0ub4xotcc2+Z3cxrfzeb4D32MDfsBfenPmP/Lf/Cj/xFd5O293
3QX5IB5L7ss5zcgH+LrnfcIb+Q/+kI/wIr/Dc553zbkU+F6+yK/xW3xQX55P
8D7+zJoeeVLPY36K3+b3eQe/zg/hqP5u/fv4tHs5k7wLPsVP8mxyTnIznpCH
sVq+ilV4BSvxLKbwvP2b+Jbk+Z1JlzVeS6zwDn7ZnEvGJXSJyKMlccTcBe6Y
YhC1xwD6Rb8/txiLiq0l/7/Vf/0GVXg=
           "]]}, {}, {}, 
         {GrayLevel[0.2], 
          Line3DBox[{880, 1145, 1528, 1049, 2615, 881, 696, 1278, 2523, 680, 
           903, 700, 1537, 2525, 1061, 914, 1174, 2526, 1068, 923, 1339, 2558,
            1340, 1075, 933, 709, 1359, 685, 945, 2623, 713, 1377, 1088, 2566,
            956, 1206, 1095, 2605, 968, 1394, 2567, 1103, 982, 1216, 1428, 
           2535, 1111, 995, 720, 2625, 1451, 689, 1007, 724, 2626, 1571, 1124,
            1018, 2507, 1239, 1131, 1027, 2514, 1247, 1511, 1138, 1038}], 
          Line3DBox[{882, 1258, 1529, 1050, 2628, 883, 1674, 1156, 1533, 1056,
            2629, 904, 1298, 2552, 1062, 915, 1321, 1637, 1069, 924, 1181, 
           2559, 1341, 1076, 934, 2486, 1190, 1360, 1082, 946, 2492, 1361, 
           1089, 2604, 957, 1378, 1096, 2471, 969, 1104, 2477, 983, 1217, 
           1562, 2536, 1112, 996, 1650, 1225, 2633, 1567, 1118, 1008, 2502, 
           1471, 1125, 1019, 2508, 1491, 1492, 1132, 1028, 2515, 1248, 1512, 
           1139, 1039}], 
          Line3DBox[{884, 1259, 1530, 1051, 2447, 885, 1279, 1057, 2455, 905, 
           1299, 1300, 1063, 2553, 916, 1175, 1322, 1070, 925, 2483, 1182, 
           1342, 1077, 935, 2487, 1344, 1083, 947, 2493, 1090, 2462, 958, 
           1395, 1557, 1097, 2472, 970, 1410, 1559, 1105, 2478, 984, 1429, 
           1563, 1113, 2481, 997, 2500, 1452, 1119, 1009, 2503, 1472, 1473, 
           1126, 1020, 2509, 1240, 1493, 1133, 1029, 2516, 1249, 1513, 1140, 
           1040}], Line3DBox[{886, 1260, 1531, 1261, 2448, 887, 1280, 1281, 
           2456, 1283, 1168, 1301, 1169, 2460, 1303, 1657, 1176, 1681, 1177, 
           1656, 1542, 2599, 1324, 1343, 1325, 1547, 2600, 1345, 1346, 948, 
           2494, 1379, 1380, 2463, 959, 1396, 1558, 1397, 2473, 971, 1411, 
           1560, 1412, 2479, 985, 1430, 1564, 2608, 1431, 998, 1453, 2581, 
           1454, 1456, 2582, 1232, 1474, 1233, 1475, 2588, 1241, 1494, 1242, 
           1577, 2612, 1496, 1514, 1497, 1041}], 
          Line3DBox[{888, 1262, 1263, 2449, 889, 1157, 1282, 1158, 2457, 1285,
            1170, 1302, 2635, 1171, 1666, 1538, 1667, 1305, 1323, 1306, 1543, 
           1326, 2555, 1327, 936, 2488, 1362, 1363, 949, 2495, 1198, 1381, 
           1199, 2464, 960, 1207, 1398, 1208, 2474, 972, 1413, 1561, 1414, 
           986, 1432, 2576, 1433, 1435, 1226, 2538, 1455, 1227, 1458, 1661, 
           1234, 2640, 1682, 1235, 1660, 1572, 2610, 1477, 1495, 1478, 1578, 
           2613, 1498, 1499, 1042}], 
          Line3DBox[{890, 1146, 1264, 1147, 2450, 1266, 1159, 1284, 2546, 
           1160, 1534, 1654, 1655, 1304, 2639, 1653, 1652, 1539, 1308, 1587, 
           1309, 1544, 1328, 2556, 1329, 937, 1191, 2529, 1364, 1192, 950, 
           2496, 1200, 1382, 1201, 2465, 1554, 1384, 1399, 1385, 973, 1415, 
           2570, 1416, 987, 1218, 1434, 2577, 1219, 1437, 1228, 2539, 1457, 
           1229, 1568, 1664, 2634, 1665, 1476, 1663, 1662, 1573, 1479, 2589, 
           1480, 1030, 2517, 1515, 1516, 1043}], 
          Line3DBox[{891, 1148, 1265, 2544, 1150, 1269, 1161, 1286, 2547, 
           1163, 1535, 1288, 1307, 2554, 1290, 1540, 1310, 1588, 1312, 926, 
           1183, 2527, 1347, 1185, 938, 1193, 2530, 1365, 1195, 1367, 1202, 
           2531, 1383, 1204, 961, 1400, 2569, 1402, 974, 1211, 1417, 2571, 
           1213, 1419, 1220, 1436, 2578, 1222, 1565, 1439, 2579, 1459, 1441, 
           1569, 1461, 2584, 1596, 1463, 1574, 1481, 2590, 1599, 1483, 1031, 
           1250, 2543, 1517, 1252, 1519}], 
          Line3DBox[{877, 867, 2451, 895, 359, 2458, 909, 245, 2296, 773, 252,
            930, 2484, 414, 942, 2490, 434, 782, 2302, 274, 2199, 621, 454, 
           2205, 627, 470, 2211, 633, 485, 2482, 1002, 2501, 524, 1013, 2505, 
           300, 799, 2316, 309, 1035, 2520, 578, 1047}], 
          Line3DBox[{896, 1273, 1274, 2452, 897, 1164, 1293, 1165, 2459, 910, 
           1172, 1314, 1173, 2461, 920, 1333, 1545, 1334, 931, 2485, 1350, 
           1351, 943, 2491, 1196, 1369, 1197, 1552, 2602, 1371, 1388, 1372, 
           2468, 1556, 1390, 1407, 1391, 2475, 978, 1109, 2480, 991, 1445, 
           1592, 2617, 1446, 1003, 1230, 2540, 1465, 1231, 1014, 2506, 1236, 
           1486, 1237, 1024, 2512, 1503, 1579, 1504, 1036, 2521, 1521, 1522, 
           1524}], Line3DBox[{898, 1152, 1275, 1153, 2453, 899, 1166, 1294, 
           2551, 1167, 911, 1315, 1541, 2598, 1316, 921, 1335, 1658, 872, 
           1659, 1188, 2528, 1352, 1189, 1549, 1354, 1370, 1355, 1553, 2603, 
           1374, 1389, 1375, 2469, 965, 1101, 2476, 979, 1424, 2574, 1425, 
           992, 1223, 1447, 2580, 1224, 1004, 1466, 2585, 1570, 1467, 1015, 
           1487, 2591, 1576, 1488, 1025, 2513, 1505, 1506, 1508, 2594, 1254, 
           1523, 1255, 1526}], 
          Line3DBox[{900, 1154, 1276, 1155, 2454, 901, 1295, 1536, 2597, 1296,
            912, 1317, 1586, 2616, 1318, 1319, 1179, 1336, 1180, 1546, 1337, 
           2557, 1353, 1338, 1550, 1356, 2562, 1373, 1357, 954, 2499, 1392, 
           1590, 1393, 2470, 966, 1408, 1409, 980, 1214, 1426, 2575, 1215, 
           993, 1448, 1566, 2609, 1449, 1005, 1468, 2586, 1595, 1469, 1016, 
           1238, 2541, 1598, 1625, 1624, 1489, 1245, 2542, 1507, 1246, 1580, 
           2614, 1509, 1525, 1510, 1527}], Line3DBox[CompressedData["
1:eJwVzj0vg2EchfE/VYkmBpvEgMQgsdkMooLWS1taVEIUJSFoG5sPQDGKzWwy
2SVWu8QXMAiL3SDxe4Yr59znup87z3C9VWl2REQNvV0RZzjojtjHNa5QzER0
2o+x5PyWjtiSQ/ZN+Ztyn1vUX7gNOcBV5Q+3zS3oj1zWvq6v4YOrcvP6Z0/E
Hb+j1/DOlbiC+23nBlpo4pXLcTNc3XkPpzjBM5e2T/F5511vrsoKnrgJe04v
2Y9kyt1D+cCNczfJN7jEBe7tY/Y5fdQ3ZbmCW/uIfVbvsy8nb6JtH7RPenfa
+U8vykLy/1y/c1b/luf4wj8/9Snv
           "]], 
          Line3DBox[{1044, 1141, 1518, 1251, 2518, 1032, 1134, 1500, 2593, 
           1482, 1021, 1127, 1597, 2620, 1462, 1010, 1120, 1460, 2583, 1440, 
           999, 1114, 2537, 1438, 1221, 988, 1106, 2532, 1418, 1212, 975, 
           1098, 2568, 1403, 1401, 962, 2466, 1091, 1555, 1203, 951, 1084, 
           1366, 2564, 1194, 939, 1078, 1348, 2560, 1184, 927, 1071, 1589, 
           1311, 917, 1064, 2548, 1584, 1289, 906, 1058, 2524, 1287, 1162, 
           892, 1052, 2522, 1268, 1149, 1267}], 
          Line3DBox[{1045, 1142, 1520, 1678, 1677, 2638, 1033, 1135, 1501, 
           1243, 2510, 1022, 1128, 1575, 2611, 1464, 1011, 1121, 1593, 2618, 
           1443, 1000, 1115, 2572, 1442, 1421, 989, 1107, 2533, 1420, 1649, 
           1648, 976, 2631, 1099, 1404, 1209, 963, 2467, 1092, 1386, 2497, 
           952, 1085, 1551, 1642, 2601, 1641, 940, 1079, 1349, 2561, 1186, 
           928, 1072, 1331, 1330, 918, 1065, 2549, 1585, 1291, 907, 1059, 
           2545, 1582, 1629, 1628, 893, 2595, 1053, 1532, 1151, 1270}], 
          Line3DBox[{1046, 1143, 1581, 1253, 2519, 1034, 1136, 1502, 1244, 
           2511, 1676, 1023, 1129, 1485, 1484, 2504, 1012, 1122, 1594, 2619, 
           1444, 1001, 1116, 2573, 1591, 1423, 990, 2607, 1108, 1422, 1406, 
           977, 2606, 1100, 1405, 1210, 1675, 964, 2632, 1093, 1387, 1205, 
           2498, 953, 1086, 1368, 2489, 941, 1080, 1548, 2630, 1187, 1638, 
           929, 1073, 1332, 1178, 919, 1066, 2550, 1313, 1292, 908, 1603, 
           2622, 1602, 1583, 1272, 894, 2596, 1054, 1679, 1271, 1680, 1651}]}, 
         {GrayLevel[0.2], 
          Line3DBox[{1683, 2252, 2352, 2253, 1966, 2242, 1048, 1965, 2254, 
           2255, 2230, 2615, 1806, 2167, 1967, 2291, 2628, 1807, 2168, 1968, 
           2447, 1808, 2169, 2406, 2448, 1809, 1684, 2407, 2449, 1810, 1969, 
           2378, 2450, 1971, 1811, 1970, 2544, 1877, 1973, 2359, 2522, 1972, 
           1878, 2171, 2595, 1812, 2170, 1974, 2172, 2596, 1813, 2354, 2353, 
           2451, 1814, 1685, 2408, 2452, 1815, 1977, 2379, 2453, 1816, 1978, 
           2380, 2454, 1817, 1979}], 
          Line3DBox[{1686, 2290, 2338, 1879, 1981, 2243, 2244, 2621, 1980, 
           2256, 1880, 1983, 2245, 2523, 2246, 1982, 2339, 1881, 2292, 2629, 
           1818, 2173, 1984, 2455, 1819, 1687, 2409, 2456, 1986, 1820, 1985, 
           2381, 2457, 1988, 1821, 1987, 2546, 1882, 2174, 1822, 1989, 2547, 
           1883, 2175, 2360, 2524, 1991, 1975, 2176, 2361, 2545, 2231, 1976, 
           2177, 2622, 2247, 2248, 2232, 1995, 2458, 1823, 1996, 2382, 2459, 
           1824, 1997, 2551, 1884, 1825, 2178, 2597, 1998, 1826, 1999}], 
          Line3DBox[{1688, 2293, 1885, 2001, 2249, 1604, 2000, 2257, 1886, 
           2003, 2362, 2525, 2179, 2002, 2363, 2552, 1689, 2004, 2006, 2553, 
           1827, 2005, 2383, 2460, 2008, 2280, 2281, 2007, 2330, 2635, 1887, 
           2180, 2282, 2320, 2283, 2009, 2444, 2639, 2355, 1990, 2181, 1828, 
           2010, 2554, 1992, 2182, 2364, 2548, 2233, 1993, 2365, 2549, 2234, 
           1994, 2366, 2550, 2011, 1888, 2296, 1829, 2012, 2384, 2461, 1830, 
           2183, 2598, 2013, 1831, 2235, 2616, 2014, 2015, 1832, 2184}], 
          Line3DBox[{400, 253, 1336, 399, 398, 1658, 813, 397, 1545, 607, 252,
            396, 1332, 251, 395, 1331, 394, 665, 1589, 377, 1588, 664, 376, 
           1587, 663, 374, 1323, 390, 250, 1681, 871, 388, 1322, 249, 770, 
           1637, 386, 1690, 2526, 248, 383, 1320, 247, 385}], 
          Line3DBox[{1704, 2025, 2188, 2024, 2557, 1703, 1901, 2321, 1900, 
           2528, 1702, 2035, 2485, 2413, 1701, 2034, 2484, 2033, 1700, 2298, 
           2630, 1899, 2295, 1898, 1699, 2561, 1897, 1896, 1698, 2560, 1895, 
           1894, 2527, 1697, 2023, 2187, 2022, 2556, 1696, 2021, 2186, 2020, 
           2555, 1695, 2019, 2185, 2599, 2410, 1694, 2385, 2483, 2018, 1893, 
           1693, 2559, 1892, 2017, 1891, 1692, 2558, 2028, 2294, 2027, 1691, 
           1669, 1890, 2016, 1889, 2322, 2258, 2026}], 
          Line3DBox[{1718, 2038, 2192, 2037, 2562, 1717, 2036, 2191, 1354, 
           1716, 1908, 2491, 2387, 1715, 2048, 2490, 2047, 1714, 2416, 2489, 
           2046, 1713, 2601, 779, 2297, 1907, 1712, 2564, 1906, 1905, 2530, 
           1711, 1904, 1903, 2529, 1710, 2044, 2488, 2415, 1709, 2032, 2190, 
           2600, 2412, 1708, 2411, 2487, 2189, 2031, 1707, 2386, 2486, 2030, 
           1902, 1706, 709, 2029, 708, 1705, 2563, 778, 2287, 777, 2040}], 
          Line3DBox[{1720, 2300, 2301, 2052, 2250, 2565, 1833, 2051, 2264, 
           2265, 2054, 2566, 1834, 2053, 2043, 2196, 2604, 1835, 1723, 2462, 
           1836, 1725, 2422, 2463, 1837, 2057, 2389, 2464, 1838, 2058, 2391, 
           2465, 2197, 1839, 2059, 1204, 2466, 1840, 2198, 2061, 2467, 1841, 
           1731, 1913, 2308, 2632, 1842, 2062, 1915, 2199, 1843, 2063, 2418, 
           2468, 2200, 1844, 2065, 2420, 2469, 1845, 2236, 2426, 2470, 1846, 
           2201}], Line3DBox[{1736, 2066, 2499, 2425, 1735, 2050, 2195, 2603, 
           2419, 1734, 2049, 2194, 2602, 2417, 1733, 2342, 2343, 2302, 1914, 
           1732, 2392, 2498, 1912, 1730, 2423, 2497, 2060, 1729, 1203, 2045, 
           1911, 2531, 1728, 1910, 2496, 2390, 1727, 1909, 2495, 2388, 1726, 
           2056, 2494, 2421, 1724, 2493, 2367, 1722, 2414, 2492, 2193, 2042, 
           1721, 2262, 2623, 2263, 2041, 2261, 2260, 1719, 1618, 2259, 2039, 
           2341, 2340, 2299}], 
          Line3DBox[{1737, 2303, 2323, 2304, 2067, 2289, 2331, 2368, 2627, 
           2288, 2305, 2306, 2202, 2605, 1847, 1738, 2055, 2471, 1848, 1739, 
           2069, 2472, 1849, 2203, 2427, 2473, 1850, 2070, 2393, 2474, 1851, 
           2071, 1385, 1852, 1740, 2569, 2072, 2369, 2568, 2073, 2344, 2345, 
           2307, 2631, 1853, 2074, 1916, 2204, 2606, 1854, 2075, 2064, 2205, 
           1855, 2077, 2424, 2475, 1856, 1741, 2476, 1857, 1742, 1409, 1858, 
           2206}], Line3DBox[{1748, 2266, 2278, 1921, 2094, 2251, 2534, 2442, 
           2093, 2267, 1922, 2238, 2373, 2535, 2096, 2346, 1923, 2310, 2374, 
           2536, 2212, 2097, 2481, 1869, 2213, 2608, 2098, 1870, 1749, 2576, 
           2099, 2101, 1871, 2100, 2577, 1924, 2104, 1872, 2103, 2578, 1925, 
           2214, 2375, 2537, 2106, 2086, 2216, 2376, 2572, 2109, 2088, 2218, 
           2377, 2573, 2240, 2089, 2482, 1873, 2241, 2617, 2114, 1874, 2115, 
           2580, 1926, 1875, 2220, 2609, 2116, 1876, 2117}], 
          Line3DBox[{1763, 2136, 2135, 2586, 1762, 2134, 2133, 2585, 1761, 
           1938, 1937, 2540, 1760, 2132, 2501, 2131, 1759, 2619, 2113, 2219, 
           2112, 1758, 2618, 2111, 2217, 2110, 1757, 2583, 2108, 2215, 2107, 
           2579, 1756, 1936, 2105, 1935, 2539, 1755, 1934, 2102, 1933, 2538, 
           1754, 2122, 2121, 2581, 1753, 2429, 2500, 2120, 1752, 2313, 2633, 
           1932, 2311, 1931, 1751, 2268, 2625, 1930, 2239, 1929, 1750, 2443, 
           2624, 1928, 2095, 1927, 2347, 2312}], 
          Line3DBox[{1777, 1950, 1949, 2541, 1776, 2150, 2149, 2591, 1775, 
           1948, 2506, 2395, 1774, 1947, 2505, 1946, 1773, 2433, 2504, 2148, 
           1772, 2611, 2130, 2223, 2129, 1771, 2620, 2128, 2222, 2127, 2584, 
           1770, 2279, 2126, 2221, 2125, 2357, 2326, 2634, 1769, 1945, 2124, 
           1944, 2640, 2356, 2325, 1768, 1943, 2123, 2582, 2394, 1767, 2431, 
           2503, 2140, 1766, 2430, 2502, 2314, 2138, 1765, 2271, 2626, 1942, 
           2119, 1941, 2270, 1764, 2587, 2269, 1940, 2118, 1939, 2348, 2315}],
           Line3DBox[{1791, 1957, 2151, 1956, 2542, 1790, 2160, 2513, 2438, 
           1789, 2159, 2512, 2437, 1788, 1955, 2316, 1954, 1787, 2349, 2350, 
           2511, 2317, 1953, 1786, 2399, 2510, 1952, 1785, 2593, 2147, 2226, 
           2146, 2590, 1784, 2145, 2225, 2144, 2589, 1783, 2143, 2224, 2610, 
           2432, 1782, 2285, 2335, 2286, 2142, 2588, 2398, 1781, 2397, 2509, 
           2141, 1951, 1780, 2434, 2508, 2154, 1779, 2396, 2507, 2139, 2277, 
           2276, 1778, 2592, 2274, 2275, 2137, 2273, 2272, 2153}], 
          Line3DBox[{1805, 2162, 2229, 2614, 2439, 1804, 1964, 2161, 2594, 
           2405, 1803, 2166, 2521, 2441, 1802, 2165, 2520, 2164, 1801, 2404, 
           2519, 2318, 1963, 1800, 2446, 2638, 2351, 2319, 1962, 1799, 2403, 
           2518, 1961, 2543, 1798, 2163, 2517, 2440, 1797, 2158, 2228, 2613, 
           2436, 1796, 2157, 2227, 2612, 2435, 1795, 2402, 2516, 2156, 1960, 
           1794, 2401, 2515, 2155, 1959, 1793, 2400, 2514, 1958, 1792, 2445, 
           2637, 2337, 2336, 2152, 2328, 2358, 2327, 2329}], 
          Line3DBox[{2092, 1868, 1920, 2575, 2091, 1867, 2090, 2574, 1747, 
           1866, 2480, 1746, 1865, 2211, 2078, 2087, 1864, 2607, 2210, 2076, 
           2085, 2533, 2372, 2209, 1919, 2083, 2532, 2371, 2084, 1918, 2571, 
           2082, 1863, 2081, 2570, 1745, 1862, 1414, 2208, 1861, 2479, 2428, 
           2207, 1860, 2478, 2080, 1744, 1859, 2477, 1743, 2567, 2370, 2237, 
           2068, 2309, 2636, 2333, 2332, 2079, 1917, 2324, 2284, 2334}]}}},
       VertexNormals->CompressedData["
1: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
/gF++1P47f+UOMaZlWgF3cWJmceKB5BoFXM9o5cB6fy6Npv/qWtTUlpeHfKk
HKSmM1sjz7ViDGl2gSdvPxwpffBrFbkWuq8u//JVrBOjX4Sc1jzEBnntwJeG
7SQI7FyqviWjH+dPdLK3viGD8qkDb1q2k0DJIbh9RqoH5zT3KXedpMJe07Oi
+1YTYOw200HcYACfSHLb//D05+TJxCe5oZ1wtvxHhLp8N66QfnVe1o4Jifx2
ruO3053fThMnp2WdQSnQvNfrq3p4HRapxss4q3DhXv7/jmMr8+PYZk8Eyen+
0agQeTWwbbgc873ZIvuCuXDkt3l6iyZPZ1H0LLn27Thx7eVKahwZfmp4t2+7
PgSfZ7YXaF/pRpdrhuIB4nT4UnRHaqC1C7JvXSbKKPdgImeDQSJP/5UsX1Nl
kB6HO0kfQ1VOtmDdhWZLejUHLLeoxw9KtMGFsi0p/W7tuNl/u0RzNQse/R91
WHba1olkqr2B+67vxlbmdOEXTfNC7Sw2dP4f9USCQyeu9v+nvgpd57DnVC2K
+aokrMARyG0XcsswIkCo//tVCsnfkPvk+krn40xgSLrTriTSIOdT185vutUg
l9Z8bJY3r27vp4uWPqZC86zkuKP4G2y7uty+JI0KYleXXlm3KhfYi23cTOcN
4k/feQn9K1gQ9Grtyj/GLXBf4szaDYLtmP3efv9NeZ4/4reTxm8nnd/OPcPd
S6t6+yH7rIfdgodVeE2iV/fyGPN/6nfMzPvf9Tsu07hzltSTAKwGx7pOPACH
MXr0XXk63Ds7vqBLmQBXiBUs5x3p8F1osbWwP5Pn33/YRQUNQ7riuq/yIl+w
XcE+1iedAXECBoV51i2gePnuucsZ7XiBfjwiYA4bmmSWPnzytg1SavPikyuL
UexW17ZNWziwSTBknq1ZB1gX2gie/FWFJ4oOfdULYUP7yeR+r95uaFNOqNR7
0QzL/pLjx4+wgHWOOXm1dQgohwYal802gXbFk5kz4Qx4nF9b7bakD3RcV9o7
VzRD2JZm0cWlTBiOiLbv3t8M/duc5cvPRGMZGMsPczlgxTIyyYuqBeWY/jCy
YSZYNUidKOLNZxX+e7YI/ns2Rf57tlj++7ehf96/OX62iNvVVwNrTvtMv0mp
gJSD4wJHBjkQuNco7FFmMbwVbbNxLCgCo3nBexXvcuEZSzJhaDQf7J7qX3vk
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
        "]], {}}, {}},
    Axes->True,
    BaseStyle->{FontFamily -> "Arial"},
    BoxRatios->NCache[{2, 2, GoldenRatio^(-1)}, {2, 2, 0.6180339887498948}],
    DisplayFunction->Identity,
    FaceGridsStyle->Automatic,
    ImagePadding->All,
    Method->{
     "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}},
    PlotRange->{{-4.986794801694183, 
     4.9999996499996815`}, {-4.987917722248736, 
     4.996697314958079}, {-0.7656085382105472, 3.727123541792113}},
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic, Automatic},
    ImageCache->GraphicsData["CompressedBitmap", "\<\
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
42Q7Ter7kfVBPgZ/70yOsAlhsjCaSSpVGA+YcdMEVvZ6xq+XC5npVkhyRW8X
S2FN2O4brMHfcoA7UyWBCQYU3lGrmPNmmcWigM3Qh/YJaLU0tLoHRY7wiXfp
c/qSLfAz/tKLpa6FonxDL/KEnivglF3NIzSzhj2Io+3DOVJgl0i8h4FojtJw
0Oz1Y6voX7am0TebUunu6YUSmd5ckkwvLUymW8dq9FtyTTEDTWe6eUQG0+Ma
uocRBKYzgU1j6YBcQZelA3J44H1/1jPQlXYPFxShI9d1pIfZ3JDiHZuSQi+z
2SwaUkHLGiokQv7Lpm4Wbazp+BIttYf23q48L4H1biL1bZdq57UjWZfzJmEe
Vu6WZdWElooJCQ8WE8pRtTHmoG4aXlYhhRQ8dpoNJz6GFeIct5ME/CWyrEgL
cvekCy7BfEIz2CyeZD5zLpdC82tjWjtYKWYE7EGdPLKnQoCAXmBNvljohi96
t5g5THfBGJiQ864uLcGE6JtSeQ3YE7mvWsJY9OkqwRv6Q7mEq6YZbO7PVctj
vCYhaidy9l5qdssNtn0YlBoAAEk40I4K5eu3l1B0f1CAyTnE8rif5XN3lpR8
cKwN46roz9vS6L1VmTSV+c+JObnMeTh0XZ9Mq4cHafbAChrNIWsUA8j1g4pR
IKbD13aie8Z1oolMjpcPypXwtYstZzgnYHtGJNMkQ5qn9SuXIuAs5kerhxXT
awu60MGJapnfbUimP7EVrR9diQKjGkwnbwbftqnbW4VpF4Mr1+aM7UjVSDBK
+7O76+ogojqbBWghREGPs0ojOcJAIltK5XF0X5Ep1dS5a3TRm/LVHO7W/Bpm
AdOhExpinOMFQnPtsgh9UCQleDAVybNfKxRUgSqcRxlRWgrYjDik7asU+muB
AGgCZGFamwDb4JQpeqZSXhIr+bZMQYcjkrUMjXbOx1WBn0n1RiwTjPgBWBoT
llYQoF5a8mXSFN7MmPIWD+EVztgOl2qZGGWCZh7iI4w1D7J49ufpEvXNubSR
ic7Ma+royOwimsaW8cs1KfTu8m50em46XVdfS3dMyKKT07vQjcO1sWTtsDy6
b3wnupetYzhjzZ6RyXQ3482+UcqIEYruu7ajWAXCEb5zNYc3LAI+OC2LXljA
6Rmz7PdXptOfQ93o0TkamszimM3F2+JIp1hcaRuOusSQyU2RlNq2F6OAISC0
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\
\>"]]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{3.827944913753819*^9, 3.85569911520693*^9, 
  3.956071304978969*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"4a9b5d96-6d21-41e0-814c-b063ef7c261d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", " ", 
     RowBox[{
      RowBox[{"\[Gamma]", "[", 
       RowBox[{"R", ",", "T"}], "]"}], " ", "/.", " ", "gammaSolution2"}], 
     "  ", "]"}], "  ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"R", ",", "0.1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"T", ",", "0", ",", "1"}], "}"}]}], "]"}], " ", "//", " ", 
  "Timing"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.827944406676475*^9, 3.82794441737626*^9}, {
   3.827944471406867*^9, 3.827944473903194*^9}, {3.827945682800585*^9, 
   3.827945684245143*^9}, 3.8556991152070923`*^9},
 CellLabel->
  "In[110]:=",ExpressionUUID->"1bbd6039-443c-4d6e-8eff-e83316dc2c1c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"50.825575`", ",", 
   Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
      "], {{
        {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
          GrayLevel[1], 3], 
         StyleBox[GraphicsGroup3DBox[
           TagBox[{Polygon3DBox[CompressedData["
1:eJw1mXfgjmUXx5/nvq4bFTKysjdlZheS0ZCmIoqMiNJOJFKIhpIWUdrRoGE3
RUNlhApZJU0zUXqL3s/3/d7vH+d3Ps/9e8Y9ruuc7zmnar/rLrw2yeVyL/In
4F/Dp/lc7lV8B+xOjo3jdWt4BDwKPhu+F54I94Gfhp+B+8LPwM/Cd8IfwUvh
0fAH8BJ4JPwe/C7cE54GT4dvg9+F34Fvh5fA78Nj4U/gD+Ee8OPwNPgSeCr8
OHw5/BT8NFwcPgXuCB8Lt4Lbw5XhzvCF8NFwU7gNXB/uAfeBR8Hvw+/BxeCT
4Q5wWd0L+Gy4M3wPfB9cCT4LvgC+AH4QfgguA7eHO8MXwpPhh+Ex8MfwMngc
vBz+CJ4IfwGvhK+H34DfgPdhdeDG+Js5vgCeD98CL4IXwtfBr8Ovw0PhhfAC
+A+sIdwC/yfWCG6JP4Q1hlvh92K14Ub4I1gL+FT8v1hLuB3+MNYcbouvxfdf
CPeAtWhe03qBB8Iz4ZnwPfBK+DP4LvhT+GP4Png1vEJrI3g93BRZRxxfBX/O
8WvgOfAceDz8GfwJPBx+C14MD4MXw4vgu+EV8KfwlfAseBY8CH4JfgkeDL8M
vwwfBTeBW8OF4JPgU+BlcFX4F/gO+E14LnwD/Cz8vO4n57wMHou/JXptj4P/
xJbCY/AHsHnwzfir+Ox0+Ek+OwR+En4KvhV+BX4Vvhp+Ap4Bj4BfhWfDN8LP
wS/AN8HPa3/Cf2HV4Hr4CRx/G34bPgMeCo+A28BXw9fD7eHr4aHwqfA18I3w
afB1Ok+4LTwEvgE+E74Fvg3uCN8ID4O7wLfBo+HT4ZvhW+Fz4VHwnXAn+CZ4
OHwOPBK+Az4LHgaPhAP3rTgc8f/hdXW4Pv4frCbcEP8jVhiujt+NlYLL4ndo
38KV8VvyjlXF8Vsxvi5XEr+A3yqhPcg/9/C6NHw8fhd2HFwaP5f3HIV/A78T
X5Ljx2mP4H/AdmC/5v09JfA/YUXgmtne0To5Ef8DdgxcFf8dVhAuh/8bqwE3
wP+GlYOr4A9iFeE6+N+x8nAN/AGsAlwLvw1L4VK6Ps6vHtwczsF1cU3gb7EC
cBl8wvET4Wbw91rfcEV8nuMnwE3h/djxcDV8O45fq32ntcQ9WgtPxh/C1sAP
4iukjinnc1PLp97n58EF4VaKrXC51PvqHPj41Pv2XLhs6r3XBT4udW44Ey4E
nwy3hkumjtdnwGVS79uz4VKp88dZcOnUMaWz1kvquN8JPiZ1TjoVPjp1TmoL
PxB931/m/B+Mvl+vwpOi19YrcF7v0b/wHfnsz1pPcAG4pWI9fGzqeN0BLpI6
z50GHwWfAreBi6XOPR3hEqlz2Olw0dQ5oD1cOHWeaAfvxSrC1fF/YnX0zPCH
sLp6xvp/6rh/AVwpday/EP4Xa6yYhT+MNYQb449gjRS/dH1YA7gRvnLqHNAV
PhWeCt8At4Qnw1fBbeEpigvwKfAjigtwa/hRrQ+4DfyYYgTcDp4O/64NB5+k
3MnxPNwEbqa9jJ0IN8D/hlWFa+IPYDXgOviDWE2tY/wfWG2tUXzC9zSFm8P7
sWpwLfxf2AlwfXzkPc3hlvDvWHW4Nj5wvBncQs8Wqwc3xKccbwG3gk+Dn4QP
cv7DomPHw/Dw6NjxCFye/3fj8i7TXoEvhi/N+/cHwlfn/dyugAfn/dwGwFfl
fR394UHa6/BFcE/FMK0L+BzFD613+FzFDK1luItihtYXfKb2vdY1fLr2t9YO
fAZcVHsIPi/ve3wlPEQxT2sf7gRvx8rCFfK+f73h/vC/XFtleCnHCnC9VeCC
+BujY9EHie/ZIPiavO/r5fAVeT/DXnC/vJ9hH3gAXAW+DO6b97q+BO6d97Pt
Cw9UPIO7w73y3nPfY9sVf7XG8d0VjxVX4Ivh+7N88BLne290THwRnhid82bB
Y6Lj8gx4XHRMfxoeGR37psL3RcfZmfBd0fnjGfjW6Nj6KHxPdPx9Ab47Oj4+
D4+PzhnPwhOiY/dzcCnFQs6zG69vi471Uzg+Njp/PAVvS6y1Smq/8voOeDW+
IXY7vBJfUjESvki5RbET7gqPiI7pjwVrjJ84/k9wfP4VPoIfFZ3/Hs9i9S8c
P4wfHZ0vp+s3o3PVE/rN6Pw0DW7F+n9ImoBj5yU+nzH8rxd8v2K+8lHOv7s2
ywHKBUOj48c2eKNyGf7HnDWQ9tNS/Cz8ft5fSceC48RceJ7OFS4K18779zfC
65Tr8QezNSG/N1sbqdZALve/ZK5YtUHnw/sfhNfDa+BJwTr5ZsVG/CHsgD6T
93cpVeo7/sCKYfuxn3O+nv//nn5LsV97oa7WXOLvfDpxzNsCr1eMgL+Bv1Re
SfwdMxLHyM3w13nH0a3whrzj6Cb4K+XfTE8ci+3LmaUr5iXWLa/gd+P/yvkZ
h7z5u+x6dF079fm89dKbifOXrml+4uv4J7tefe5w9ll9TvdlHVZYsUZxIjuX
I9n5HMzul+57zPTYprzfr7ovyZ6rnu8Tif9XPDsXfaZg3vewaN46qnjGRbBC
ed//o/N+Bsdk36vvlO7ScV2Lakx9z5zEmrsq/z8BXyxv3fV64u8umn1nmn1P
zH6naPa7Sd7XrOt9m88Uwh/FNc1M/Jv6ft2fPdl9PpI9Cz2TPVn8LM/792Wx
twK8JnHMLAJ/kXidFIXXJj5PacDlcBldn+JEFqsrSgvxcPvlnI8qBecL5aCy
wbFROa5EcHxWTj8uON4qn5YOjrHKp0XhS3PO6Yrbuge6T4rb0/i9O/HbE9dx
peD1ypl6RvDGxDVjccWqxHXfcYoxys9wiei8oOcj/bOX423g4xVLlM/h0vCn
iXNKYfiXxPVgOXhD4pqxmOJN4tqwDPxz4vqxbPQ915rWfS8cnC+kWyoE50rl
8Qh3zWUaIDgvSBv8m8VJaYA0OJ9KLxUIzsvSS4ez+CmNkQ+Oz3Wy2HtDzvrw
b/hDxQNtuOBcI81wP5/9El6V977RuWovqv/xLf55fLHg3Cd9dYTXXeAacMFg
nSBNUiM4F0vT1grOodKH1YI1g3RylWCdIG25P8v1lZSj4I5wZekm1Yo569hC
wXlTOuqPTCdUgY8KzrPSNocyLVFN9znTBv/TlpneqAr3hh+AJ2f7Q/tkF/4B
jn+FX83r+4JrZ+m9e4Jr7SHwHcG9l4HwwOC6XnpyUeIaSnppceK6TPl0YeIa
Sprqm7zzxbMcu5fXn+esLR8Irv2lRScG9wekLe8Prv2lRVVLq6a+Eh4f3PMZ
DN8V3DMZBLcK7kFJk3cO7kFJe5+sHJ+z3u4Z3FNSbfJW4hpQuXV0cG9nAMfP
Uu7PWcO3y/K1dPvdwf0K5cozg/s8qjsmBPdqpJ9PC+6JqUa4En4xZ61+e3Bf
6wp4VHAvqz98bXBP4xL4Us7nPj0H7lNXeAw8Hr4YHgffDXeD74LvgbvD4+F7
s+eoZ6i8cBHHx+IncPx8eDQ8Fu4PP6zrhS+DJ8KT4H7wQ3pe8BXwI/AUeIDy
GTwV7s15zsi5jpvE8a/hLzg+NLjv1Ivjg4J7LBfBg4N7LBfDI+F34H7wdcF9
oR7wNfBsuDt8Czwfvgy+Krgn0w2+IbjfdSk8LLh/1Ru+Priv1RMeHtzvuhwe
EdwL6gvfGtwL6gP3Ce5Dqm69PLgfqLq1b3BPUrXVksS1tvTSJ4l7DtKH7yeu
x6WXlmexVDrwvcS1s3SXtLI0s/TVl4l7R9Klq+H6OWvOlYnrcWnLdVl8Vr5Y
kbgel85clbiul779PHFdL525Gz4bnq+4lbjPI637UeI+iXTmpsT9TNW2Xyfu
Yarm3ZK45zkH3gq3hl+DNyfuYc7WHkrcl5Bm3pm4bzkX3pG4V/k6/FXi/ph0
+K7E/dJ5wflFeUF19A+Je6FvBOcLxbE3g/OqdI96KGWC+0tL8CWD+07vBcd8
5ce3tD8S90ak2/+Be8KL4QOJe4wL4L8T92YXBcdM5YuFwble+Vc6vHtwH1g9
hB7B/WH1Hy4I7ruqn3AJPCXnfsJ58KSc+w/nB/ds1aMoF9wr+wBfO7hntRxf
Pbi39jH+GGww/Da+SHCf7R18xeBe2TJ8qeAey/v44sG9tXfxNYN7a5/gy2d5
aim+fnCv7HN81eDe2kf4ysH9tA/xdbHh8Kf4BsE9txX4esF9uc/wJ6fWrIrh
jYJjwip8J45vzrsn9nN03SWdsyO6LlW+/iG6zlR+/zW6TlOe+iW6/pG22RVd
Gysf7YyudZW/vonuL0sj/Rhd20hLbIruHUuTfBAd47ZwDt9F173SLRuj+9TS
Wj9F10jSY+uje9PSV8ui4+A27Ysshn4LfxYdy36El0bHza1aw9G90d+0d6Lj
4Hfa71le/F57J7pmllbcEN1nl85ZHh0rd2i/RNdI25UTomPrD9qz0XHzJ3h7
dD0vvbQ1uiaXvpoWPQPQGn4iek6gNfxidK9Dz/2R6B609t3D0f0+7dmHovt6
2svTo2cPWvOPR882FB+ej+7DaH89Fj3P0B58NLrHrb05JXr+oT2+Obq/L832
QnTfRuv8uej+ktbqtugehGrYb6N7ENKNW6LnAdKTS6Jzz2bFzOgctklxMjoP
faMYHN2P0r54JrpnpfX/bHTPSnHgyeh5jPb7U9EzGO2pGdEzBsWHqdEzGMWf
FdH99J8Ve6N79Pvg5sG5ch2+JTYB/grfIjhvfhmsm6WfVVO0Cc6J6/FNgvPv
F/imwfl0Df704JyotfRU4vpRtWHb4Hp5A75ZcL5ei28dnNO/xp+h55HzWu0S
3P/XWu0V3Nv/Rfckcf0ujSQtqnz+gvZV6rmOcmvX4LmD1uFFwbMArb1u2As5
r71zgmcHWtvK3cqzv+IvC54v6F5dHDw70B45N3gGofWsGKhcr72wLnr2sBfu
GKwf9Hw7BGsGPd8hwbOGPcE5Xble71fel8bTXlsVPefQOayOnp3shL+Inmfs
gtdEzzN2wyuj5x+6J+oV7Mi5trkpuPbU810bPS/R72q2ov6D+pCdgjWM4onm
lKoPZ+OfS1znScNL1ynOa02qp6C6VL3fU4O18UZ8/+BZj85TswnVl4UUV4L7
GDpn9WLUG1H/UD2KAnnXxAOCZz26ls1Zbaq6XrMhPc+mqd9XIDu33dF9Runz
76P7g6qb3omeo2hdNU49J5NGrZd6fiZt0yT1WtS87KTU80Lp80ap52fSnA1S
z8OkwRqmnsNJf+6L7tmpfqmfeq4m7bQnuk+nOuLE1PNI6au6qeeU0nt1Us9x
pdlqp57jSqc1S11LSKufkHpGK81WM/UMVdqvRupZr3RvrdQzXWm5aqnnedJ+
VVPP86Qhm6fWndL5k6NnGNItb0TPLdRDmx89Z9I+XRA9i9IeXBg9A1McWBQ9
x9LeXxw9f1JMeCt6jqV9+nb0jEpxYFZ0b1l59t3oHpnWxuvRMzPl2Zei+8nK
y/OiZ2OKG7Oj5wLKy69Fz9KUx+dEz+GUl2dG96ilDeZGz+TUG3wlep4iPfBy
9AxCGuPN6Pmccver0XMT6ZAWqXthqomqp56XS1e3Tx1T1BPrkHoPqHf3X6Pt
4+U=
              "]], Polygon3DBox[CompressedData["
1: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
LdYP831H4Qn0LOY32nK3ZL6PZ4vexmN7MHcOJhfDAeACcAi0PByCe3FPvJZG
ybmAnEhuhJPATeAYeFPkPzz+XTkx+X8sqLkxR4ZFczDmLnMYb6xxcm5ljbPW
GybrAXIOuadB8lxmTpN7mifnTnImubNZcqwhB5ILD0/OheRYcu2h5O/MMY3Y
1jQ5lhGjiFUHJXMNchi57LDk2EfMI/Z9Gq0d0BB4NS2Tcxk5jFyGZulX5ENq
LwcnxyJiDrGnbnJuJMeSa1sk53pyIrmxXnLuJWeSO5skxzpiGrHtkOSxZEyJ
jfWTcys5nFz+iZ7v1sw1TGqZNZL9CmqC6HfGFu5RTnhl7poL/Ks0OVXt5fmu
UvOu8QL/VKxnNAjeCpwNbrQgN5eDM8HtFubmUl9G16qoQeEH1WNeZ+Zfs3Jz
YLgwHJrawLAi38/JPTe+iM4F5AT8pzejvWBqTvh1r0Z79dQEqA28Fu3V4+Hj
5W+I9vbx8PHyX4+uP+L54/2XS35/vgNzHQ4Pl8eTpDYBh4S7bQ7mlm9Ex2pi
Nl76Br5z5vU5KbdGRiujufC+0TxoHzwnvKdvo+vF1FzwF78WXpy5ZoefhiZC
G6Fh8FbQbGg3NAfeORoILYQGwPtF46B10Fx4NV9F1/6oEeL/ocHQYmgwvB04
Pdy+dmYv9+fo+AaHwVv7Mbo+jweGF/ZDtLZGY+OVoRHRimhIvOit0bmWnIsf
iiZCG6Fx8PLRmGjNOpm97G+ia03UrPBT346uNVFjpNbI/0TwvxF4PnXVtzba
i8fDx8t/V3h8Zs8Z7/mFaP+Wmgy1mVeicx05j9rPQ7nnNnwb3r0+unZEDYha
0IvRtQFqINRCnouupVAToDbwsvCozDUDagdvRddCqUlQm3g+2uvA81hS3I9a
RNliPbF+WEs/6tgStddF1w6oMVBrWBNdK6HGR63vpejaBDUGag3vRHvr1OSo
zf0fjLDrsg==
              "]], Polygon3DBox[CompressedData["
1:eJwt13m8VfMWAPB7O6eBFEppnicaDA3SiCYaNWue51lzSiENpCIpj4RUaPRE
RZP3VKjMTUR4KA8pTzzP9L7rs88f67PW+u61zz13371/+3fL9h/TYXSOrKys
d0ROMTGdlbUKPCM+0y9OOSZu0k/Mzsoax67RVzVXhQ1jA+JcdjPry55iK9mt
bLb4UP0AXy0mmTnCWqtnmpvuWAP9UdGGzWIzWEN9NbNXsOFsIMvFmrLb2KNs
GbuFbROlWHvWkv2mbmcufrFNbCPrY6YtG8U2sg2sN2vGurG/seXsZnYja8UW
sPnselZUFBF1HKvl2Br5KlFNPcrcEHMXON6C9WFPsidYO/a1GMiWsaWss/4h
cUK/jiuzXpb3KerKufwhyqnLi8PiFjbd7BRzdfWv6fOrH43vLW73M/fz69W5
nVtBXVHsFdexnKyMuqxoZLYBm+HzpvqMquwNUY/lMVdJXVnUMFeVjTQ32Fwe
tltcw/5y7DJ1IfGNGMGeMLfCXC/9sbjW7C52J2uk/1R0YfPZHNZcP8HnPMWe
FifZIrZLXK3/07EC6oLiYpE/nNWIayuf0g9SL/d5jzi3i348XxnHxbvsLval
6K9fam4J66gvLorFtTFf27G1cnVxpXqEuUHmcjv+iqjEurGOLK3/RHRm89i9
rJn+c9GTLWIPsDb6lj5vcHw2W8NuYx3YBPYSe4kNieeKtWcPsUXsBtaEdWBL
2GJ2YzwvbCh7jj3LurF343lgk9l4VlP/XtzTbAqbwGrpP4j7kk1jk1gd/dtx
n7MJbCy7Wn9I3MDGszHsKv3HoiObw+5hTfT/Er3Zg5nvHPd4G99vGHuePce6
sy9EL7aYLWRt9QfiHmTj2ChWXd/KuUPYs2wt68reEg3ZWDaSVdN/JnqwhWwB
a63fLkqzDqwV+139Kqsu92XdWV79V2IAe4Q9zDrpb/Vzx7DNbBPrG2tVrGPs
DjaZXadvbq47e4w9ylrGM8n6xb3LnmTt2WkxnK1gj7OecT3NtWT3s3msHssn
LopnKdaQWC/l4/p26rvNzTTXWL8jldzvv6eT+TjvclFY1GY1Y02VD+obxzrg
3NHOrZF5buL5qZlOntlV8kl9V/V95uaaa5F5huNZruX4tbHuyztTyff6Q32J
+lLxflwHNtW5E51bW9/e8bHsBbaZ9cvMxjnXppPn+Gn5hL6Teq652eaa6j+K
68/uYbMy9/3yuLf0JcWFbKfjjZ3fRJ6dmYt3zwj2EPuAHWPz2Ei2hH3IjrP5
bEk8r/pLhcNZW+NdonhQfp8dZXPNPBzrk75gdvIO3BZrurmH5cPsI3afmTHs
EXaUnWAL2BWsIhvM+rIcbKk4qS8kcrHtcR+bWyYfY5/E+9DMaLaUHWEfs/vZ
OLacHWefsoVsKFsUaxo7zO5lj4tT+orZybsg3glPsH/rC8Tvwl5nVzq3sjyU
9c+sYUPYQvZOdvJujnd0d3Yn2812s7HsNjad7WQ72eh4/thMtoftYeNYFVaB
DWJ9WDYbxhaz99gRNocti7VSX1TkYa/G+yueTX1ZcRHbzc6xufEcsx1suv4x
8bW+vMjH9sSzHGuC/nKRm70S+4JY8/WlRV62K9Zv32WGvIvtYmPMXMhO66+I
WfZXPJPsrP4aUZm96ZzLWC65BWvMPleXZyXl3qwr+1VdkOWUm7NG7KS6EMst
38xuYF+oC7C03Iw1ZJ+pC7O8cmvWlH2tLsryxz6GtWDfqC+PdUBuw5qxU+py
rITci3Vh/1VfzP6I7yFqs6OsCMsnt2XN2Wn1peyv+G7iOnaclWXF5Z6sM/tF
XZGVlfuznuwPdQVWRu7HerA/1aVYYbkru5X9qC4RewW5M2vLzqrzs1/0dcVV
7F2Wl/2gv1pUYm+wfOzn+G6iBnuPXcC+0JeIv3vmHirJCsldWDt2Tl2aFZW7
Z97d59WVWXl5IOvNYuNVnBVknVgbdEZdiZWTB7BecW+oi8V+RO7IWrMf1GVY
MbkH68R+Vr/pM+vH97SQVIn1IdZcc3ewHZn7eRTrwqaw7Ww7Gx7PbqxjbGV2
sneM/ekGkc1qsarsROwB2P/01UUFdpitT8XiY71nVyo/jvcp+1VfLZ4b9mG8
B9g5fRlRjB1g59mKmI9nL96h+tXiP/H5ca3ZIcf+mUr2Sym/Wwl1SbFG/BR/
s1i3zb3t+EaWQ64dP5t9Eu8V9qO+nCjODrJ/pJK9dI6cyX4s9mXrxO9xX2Tu
g7h3n2e/xT0Q6x07kiP52fEd6rqOdeK7y3tSyTssFvHCmXdlaVFKXJ9O9sLP
pZP9bexzG6aTv9WGdLJfjn1zg3SyF14vr9Wf9zOriFI+9h3+eir5eemcyefG
57+WSt7F2TmT/xHif4XOzp/Mtjl3m3OHpZL9d+zD66WTff7zcicxSb3V3FZz
Q1PJvj/2//XTyZ5+ndxRTFS/bO5lc4Md78nuiuvIXmeT2CaRYnXi/mCfxjlx
LeSWrAn7Sd3XuffK+9gbbKqZfmwO28/eZNPYSvGt/rIIttfxPuZmy3vZfjbF
TG92T1wfto9NZgPYfPYWO8hmsP5sXjwn7EBmbe/F7o77i+1lE9mT4jt94XiP
sn3xjjW3QD6Unfy/OsvMIHY/O8jeZjPZQHYfO8AOsTvZU+J7fZH4TLbf8b/H
e0BumFknY939no2X17DVbJB+S+xpWBNWn32nPstmyS+yF9l4/dPiTDxXmbUp
1rCtrIjcKrO2xzr0A5sW91128n9orAcvxd6JNWUN2PfqzSyPXJ/VZF+qz7Cp
cX+y9WxkXCdxO1vNnmED49mNdybbwrbE31z/griANWC12Ffqb2PPEc8nW8UG
6F8UF7ObWD32rfoS1/TPeAeKOuwY+z/60dwQ
              "]]},
            Annotation[#, "Charting`Private`Tag$310366#1"]& ]],
          Lighting->{{"Ambient", 
             RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
            "Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
        {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0ksrRVEYBuDFcT84JElCkpAYS4wlRgYSMyUxYCIxppia8AvwB/gDGLsc
57hfk5lbMnN9ttR+97O+2u3vW2vvupGp/smMEMKChIy/K3zKvWxlhlDCbdby
kG28ZRdf2MdvDrM4FkJCJqxbOMcOLrGHqxzkOse4xRnu8oOPzDTAEX/kXfbU
Ke4zzQMeR7PwhEme8ohnTPGcaV7wmJc84RVPec0z3vCct1y3h2fG1Hf8kidZ
NleS89zhNDc5yjUOcIXdXGQ7Z9nMJhm3jnMoOlc9eqP3spPXbI32xhq+ee4h
+gxmSETnKq/SqC5mA4tYz0LWMc5aFrCa+axiHiuZywrmsJzZLGMWS6ll2NQ/
bo2w4fby/y/8AgRYRJk=
          "]]}, 
        {GrayLevel[0.2], 
         Line3DBox[{693, 1025, 1026, 1024, 1029, 475, 1028, 1027, 1032, 1349, 
          914, 694, 1143, 915, 695, 1144, 916, 696, 1145, 917, 697, 1146, 918,
           698, 1147, 919, 699, 1033, 1238, 700, 1148, 920, 701, 1149, 921, 
          702, 1150, 922, 703, 1151, 923, 704, 1152, 924, 705, 1138, 1153, 
          925, 1010}], 
         Line3DBox[{706, 1023, 1034, 1348, 1031, 1030, 489, 707, 1154, 926, 
          708, 1155, 927, 709, 1156, 928, 710, 1157, 929, 711, 1158, 930, 712,
           1035, 1239, 713, 1036, 1240, 714, 1159, 931, 715, 1160, 932, 716, 
          1161, 933, 717, 1162, 934, 718, 1163, 935, 719}], 
         Line3DBox[{721, 1037, 1241, 720, 1038, 1242, 722, 504, 723, 1164, 
          936, 724, 1165, 937, 725, 1166, 938, 726, 1167, 939, 727, 1039, 
          1243, 728, 1040, 1244, 729, 1041, 1245, 730, 1168, 940, 731, 1169, 
          941, 732, 1170, 942, 733, 1171, 943, 734}], 
         Line3DBox[{736, 1042, 1246, 735, 1043, 1247, 737, 1044, 1248, 738, 
          1045, 1249, 739, 1172, 944, 740, 1173, 945, 741, 1174, 946, 742, 
          1046, 1250, 743, 1047, 1251, 744, 1048, 1252, 745, 1049, 1253, 746, 
          1175, 947, 747, 1176, 948, 748, 1177, 949, 749}], 
         Line3DBox[{751, 1050, 1254, 750, 1051, 1255, 752, 1052, 1256, 753, 
          1053, 1257, 754, 1054, 1258, 755, 1178, 950, 756, 1179, 951, 757, 
          1055, 1259, 758, 1056, 1260, 759, 1057, 1261, 760, 1058, 1262, 761, 
          1059, 1263, 762, 1180, 952, 763, 1181, 953, 764}], 
         Line3DBox[{766, 1060, 1264, 765, 1061, 1265, 767, 1062, 1266, 768, 
          1063, 1267, 769, 1064, 1268, 770, 1065, 1269, 771, 1182, 954, 772, 
          1066, 1270, 773, 1067, 1271, 774, 1068, 1272, 775, 1069, 1273, 776, 
          1070, 1274, 777, 1071, 1275, 778, 1183, 955, 779}], 
         Line3DBox[{783, 1184, 956, 781, 1185, 957, 785, 1186, 958, 787, 1187,
           959, 789, 1188, 960, 791, 1189, 961, 793, 1190, 962, 795, 1191, 
          963, 797, 1192, 964, 799, 1193, 965, 801, 1194, 966, 803, 1195, 967,
           805, 1196, 968, 807, 1197, 969, 809}], 
         Line3DBox[{808, 1289, 1085, 806, 1288, 1084, 804, 1287, 1083, 802, 
          1286, 1082, 800, 1285, 1081, 798, 1284, 1080, 796, 1283, 1079, 794, 
          1282, 1078, 792, 1281, 1077, 790, 1280, 1076, 788, 1279, 1075, 786, 
          1278, 1074, 784, 1277, 1073, 780, 1276, 1072, 782}], 
         Line3DBox[{811, 1086, 1290, 810, 1198, 970, 812, 1199, 971, 813, 
          1200, 972, 814, 1201, 973, 815, 1202, 974, 816, 1203, 975, 817, 
          1087, 1291, 818, 1204, 976, 819, 1205, 977, 820, 1206, 978, 821, 
          1207, 979, 822, 1208, 980, 823, 1209, 981, 824}], 
         Line3DBox[{826, 1088, 1292, 825, 1089, 1293, 827, 1210, 982, 828, 
          1211, 983, 829, 1212, 984, 830, 1213, 985, 831, 1214, 986, 832, 
          1090, 1294, 833, 1091, 1295, 834, 1215, 987, 835, 1216, 988, 836, 
          1217, 989, 837, 1218, 990, 838, 1219, 991, 839}], 
         Line3DBox[{841, 1092, 1296, 840, 1093, 1297, 842, 1094, 1298, 843, 
          1220, 992, 844, 1221, 993, 845, 1222, 994, 846, 1223, 995, 847, 
          1095, 1299, 848, 1096, 1300, 849, 1097, 1301, 850, 1224, 996, 851, 
          1225, 997, 852, 1226, 998, 853, 1227, 999, 854}], 
         Line3DBox[{856, 1098, 1302, 855, 1099, 1303, 857, 1100, 1304, 858, 
          1101, 1305, 859, 1228, 1000, 860, 1229, 1001, 861, 1230, 1002, 862, 
          1102, 1306, 863, 1103, 1307, 864, 1104, 1308, 865, 1105, 1309, 866, 
          1231, 1003, 867, 1232, 1004, 868, 1233, 1005, 869}], 
         Line3DBox[{871, 1106, 1310, 870, 1107, 1311, 872, 1108, 1312, 873, 
          1109, 1313, 874, 1110, 1314, 875, 1234, 1006, 876, 1235, 1007, 877, 
          1111, 1315, 878, 1112, 1316, 879, 1113, 1317, 880, 1114, 1318, 881, 
          1115, 1319, 882, 1236, 1008, 883, 1344, 1011, 1012, 884}], 
         Line3DBox[{886, 1116, 1320, 885, 1117, 1321, 887, 1118, 1322, 888, 
          1119, 1323, 889, 1120, 1324, 890, 1121, 1325, 891, 1237, 1009, 892, 
          1122, 1326, 893, 1123, 1327, 894, 1124, 1328, 895, 1125, 1329, 896, 
          1126, 1330, 897, 1139, 1331, 1015, 898, 1345, 1013, 1020, 1014, 
          899}], Line3DBox[{913, 1017, 1022, 1347, 1141, 912, 1016, 1021, 
          1346, 1140, 911, 1343, 1137, 910, 1342, 1136, 909, 1341, 1135, 908, 
          1340, 1134, 907, 1339, 1133, 906, 1338, 1132, 905, 1337, 1131, 904, 
          1336, 1130, 903, 1335, 1129, 902, 1334, 1128, 901, 1333, 1127, 900, 
          1142, 1332, 1018, 1019}]}, 
        {GrayLevel[0.2], 
         Line3DBox[{273, 477, 1143, 274, 490, 1154, 299, 504, 313, 1248, 518, 
          327, 1256, 532, 341, 1266, 546, 355, 1278, 560, 1186, 369, 574, 
          1199, 383, 588, 1210, 397, 1298, 602, 411, 1304, 616, 425, 1312, 
          630, 439, 1322, 643, 452, 1334, 655, 464}], 
         Line3DBox[{275, 478, 1144, 276, 491, 1155, 300, 505, 1164, 314, 1249,
           519, 328, 1257, 533, 342, 1267, 547, 356, 1279, 561, 1187, 370, 
          575, 1200, 384, 589, 1211, 398, 603, 1220, 412, 1305, 617, 426, 
          1313, 631, 440, 1323, 644, 453, 1335, 656, 465}], 
         Line3DBox[{277, 479, 1145, 278, 492, 1156, 301, 506, 1165, 315, 520, 
          1172, 329, 1258, 534, 343, 1268, 548, 357, 1280, 562, 1188, 371, 
          576, 1201, 385, 590, 1212, 399, 604, 1221, 413, 618, 1228, 427, 
          1314, 632, 441, 1324, 645, 454, 1336, 657, 466}], 
         Line3DBox[{279, 480, 1146, 280, 493, 1157, 302, 507, 1166, 316, 521, 
          1173, 330, 535, 1178, 344, 1269, 549, 358, 1281, 563, 1189, 372, 
          577, 1202, 386, 591, 1213, 400, 605, 1222, 414, 619, 1229, 428, 633,
           1234, 442, 1325, 646, 455, 1337, 658, 467}], 
         Line3DBox[{281, 481, 1147, 282, 494, 1158, 303, 508, 1167, 317, 522, 
          1174, 331, 536, 1179, 345, 550, 1182, 359, 1282, 564, 1190, 373, 
          578, 1203, 387, 592, 1214, 401, 606, 1223, 415, 620, 1230, 429, 634,
           1235, 443, 647, 1237, 456, 1338, 659, 468}], 
         Line3DBox[{8, 699, 23, 712, 38, 727, 53, 742, 68, 757, 83, 772, 98, 
          794, 795, 113, 817, 128, 832, 143, 847, 158, 862, 173, 877, 188, 
          892, 203, 906, 218}], 
         Line3DBox[{283, 1238, 482, 284, 1239, 495, 304, 1243, 509, 318, 1250,
           523, 332, 1259, 537, 346, 1270, 551, 360, 1283, 565, 1191, 374, 
          1291, 579, 388, 1294, 593, 402, 1299, 607, 416, 1306, 621, 430, 
          1315, 635, 444, 1326, 648, 457, 1339, 660, 469}], 
         Line3DBox[{285, 483, 1148, 286, 1240, 496, 305, 1244, 510, 319, 1251,
           524, 333, 1260, 538, 347, 1271, 552, 361, 1284, 566, 1192, 375, 
          580, 1204, 389, 1295, 594, 403, 1300, 608, 417, 1307, 622, 431, 
          1316, 636, 445, 1327, 649, 458, 1340, 661, 470}], 
         Line3DBox[{287, 484, 1149, 288, 497, 1159, 306, 1245, 511, 320, 1252,
           525, 334, 1261, 539, 348, 1272, 553, 362, 1285, 567, 1193, 376, 
          581, 1205, 390, 595, 1215, 404, 1301, 609, 418, 1308, 623, 432, 
          1317, 637, 446, 1328, 650, 459, 1341, 662, 471}], 
         Line3DBox[{289, 485, 1150, 290, 498, 1160, 307, 512, 1168, 321, 1253,
           526, 335, 1262, 540, 349, 1273, 554, 363, 1286, 568, 1194, 377, 
          582, 1206, 391, 596, 1216, 405, 610, 1224, 419, 1309, 624, 433, 
          1318, 638, 447, 1329, 651, 460, 1342, 663, 472}], 
         Line3DBox[{291, 486, 1151, 292, 499, 1161, 308, 513, 1169, 322, 527, 
          1175, 336, 1263, 541, 350, 1274, 555, 364, 1287, 569, 1195, 378, 
          583, 1207, 392, 597, 1217, 406, 611, 1225, 420, 625, 1231, 434, 
          1319, 639, 448, 1330, 652, 461, 1343, 664, 473}], 
         Line3DBox[{293, 487, 1152, 294, 500, 1162, 309, 514, 1170, 323, 528, 
          1176, 337, 542, 1180, 351, 1275, 556, 365, 1288, 570, 1196, 379, 
          584, 1208, 393, 598, 1218, 407, 612, 1226, 421, 626, 1232, 435, 640,
           1236, 449, 1331, 671, 672, 681, 1346, 673, 674, 474}], 
         Line3DBox[{295, 665, 666, 1153, 296, 501, 1163, 310, 515, 1171, 324, 
          529, 1177, 338, 543, 1181, 352, 557, 1183, 366, 1289, 571, 1197, 
          380, 585, 1209, 394, 599, 1219, 408, 613, 1227, 422, 627, 1233, 436,
           667, 1344, 668, 680, 669, 1345, 670, 682, 1347, 675, 676, 678}], 
         Line3DBox[{462, 653, 677, 1332, 450, 641, 1320, 437, 628, 1310, 423, 
          614, 1302, 409, 600, 1296, 395, 586, 1292, 381, 572, 1290, 367, 
          1184, 558, 1276, 353, 544, 1264, 339, 530, 1254, 325, 516, 1246, 
          311, 502, 1241, 297, 488, 1348, 689, 691, 690, 271, 475, 685, 684, 
          687, 686, 679}], 
         Line3DBox[{463, 654, 1333, 451, 642, 1321, 438, 629, 1311, 424, 615, 
          1303, 410, 601, 1297, 396, 587, 1293, 382, 1198, 573, 368, 1185, 
          559, 1277, 354, 545, 1265, 340, 531, 1255, 326, 517, 1247, 312, 503,
           1242, 298, 489, 688, 272, 1349, 476, 683, 692}]}, {}, {}}},
      VertexNormals->CompressedData["
1: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
ztLTp9QsKdCTbhbUeb0IJ87vDzjoTIX939x9am6TIX3u8NSP3x+RZuGu/NKE
BlJR/bd7skjQpacc9eIXDe23bBEuiH6HHewB9w9/RuC4yER92RQVW6Pzhg3L
Y8HqtVu8zRYyzDjcETrykoJu20u3GvuUQhVvkVXHMQr0d57utpgrRxf6dqt4
bwpc5E2uW7yXAuba8ZtKP2VjX+d0FiGJg+vyqra6WZHheoG5VKRLNJ5zqAiZ
OUmDbfvv2JqXcs7hjU6wz1EqGs1ZVe5rSoFB/qsbfnWRIcYjtzM0gowZGoOV
dtKVINS5TipiKRW8jg8v2bIjBe+ohMU5faSCidmdYys43/esUFF1rPZrlNDh
8V2whQYxeYrV16ZJkDTbOVf+mISbDddv942uga6EHMW5NipIvi3b/HVRAIa+
4//a85mD1+2TQg7bkKHtr16yaW4vGZXbSybN7SXz+KuXbOgfvWQf/+olK+D2
kvFt/28vGZPbS3aB20tG/auXrI/bS1bF7SU7yu0lu8DtJSv5q5dM4h+9ZLr/
6CV78I9esux/9JJ1/KOX7D63l+z2X71k1+4k8encoeMi/u0kH+FmPLrorKpZ
OQEEjw4vETaiodillzvI49UYnP4lWnoBCQYWnCr6JE7FvqaMR0v8P6GZVr2e
+lcyiJ5x4B19SMZ3ie7kA8tcYfCuko1jJhXcWN/npPRHUF230NN8UynMpJ3T
s1KhQ5jYaa13FsPoe9RT+4BlC9Av/n7WCgwwbXG8aBZSi7WjEy/OHyRCum0g
o9+XDnNGDjJhv4swwGUsv42zdxpaD13yzKTB3cWut6rKUtCAYjp2bS1nzjYl
PGidpsLYy4Y3S/a/xemjRrNL4sgw+/3ba5cXnP1z73iH049gDNvq43rrExno
fj8FtR5QwVvBSrvlZCxuzLfm/XKaDJpZi80PNlJhTlv864FXVExQtyi92FyD
bAVROWozCdbBKhvnXRR8uMO+snPVJwwROOSxvpcCXgYEH28LEr55d1746Yg/
WPP/MnudTAO1XIbRCyIBR4VKTOfLlwPJwb6xciMDnoskvOy5MYCXjnkFTbi3
Ar/uEbFiPibYJGzYbtKVg3PN3ZGmoSMgsvb5wbtb6DAefvfY88o4dNrSU3H/
OgnO9yWQLEJocJOw9YDo7TAMLopd119EglgZm5wEzvx8thXYccEvEqVSxMKn
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
j8uFTg/B/wFAgwbt
       "]], {}},
    Axes->True,
    AxesLabel->{None, None, None},
    AxesOrigin->{Automatic, Automatic, Automatic},
    BaseStyle->{FontFamily -> "Arial"},
    BoxRatios->{1, 1, 0.4},
    DisplayFunction->Identity,
    FaceGrids->None,
    FaceGridsStyle->Automatic,
    Method->{"DefaultBoundaryStyle" -> Directive[
        GrayLevel[0.3]], 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "RotationControl" -> "Globe"},
    PlotRange->{{0.1, 2}, {0, 1}, {-0.7656094578665678, 1.418609104673583}},
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02], 
      Scaled[0.02]},
    Ticks->{Automatic, Automatic, Automatic}]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{3.82794446826048*^9, 3.827944557095256*^9, 
  3.855699115207286*^9, 3.956071355551921*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"60efbaec-c9b4-4df7-af76-0d7509b46a94"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Check of Equation 4 & 5 Vanishing of Riemann Tensor (Note:  I have \
\[Psi][R,T] instead of \[Psi][T,R] )\
\>", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.8254647577633667`*^9, 3.825464823201312*^9}, 
   3.95607265611255*^9},ExpressionUUID->"39b951ee-6c3a-4ba5-a886-\
583c7f56f5e0"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq4", "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq4", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[Psi]", "[", 
    RowBox[{"R", ",", "T"}], "]"}], "\[Rule]", " ", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"Log", "[", 
     RowBox[{"T", "+", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["T", "2"], "-", 
        SuperscriptBox["R", "2"]}]]}], "]"}]}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.8254643231390142`*^9, 3.825464335496723*^9}, {
   3.8254643791066713`*^9, 3.825464379494562*^9}, {3.825464711613984*^9, 
   3.825464716932666*^9}, 3.825464771133169*^9, 3.956072656112914*^9},
 CellLabel->
  "In[111]:=",ExpressionUUID->"8dc99f09-2fad-437e-be25-44093454b549"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"R", ",", "T"}], "]"}], "\[Rule]", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"Log", "[", 
    RowBox[{"T", "+", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["R", "2"]}], "+", 
       SuperscriptBox["T", "2"]}]]}], "]"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{3.825464382428837*^9, 3.825464717822146*^9, 
  3.825464771133719*^9, 3.956071355636209*^9, 3.9560726561131287`*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"94d86b7b-a39b-448f-8123-7cd8508e1fb5"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "psiDerivatives", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psiDerivatives", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"{", " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{"eq4", ",", "T"}], "]"}], " ", ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"D", "[", 
        RowBox[{"eq4", ",", "R"}], "]"}], " ", ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"D", "[", 
        RowBox[{"eq4", ",", 
         RowBox[{"{", 
          RowBox[{"T", ",", "2"}], "}"}]}], "]"}], " ", ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"eq4", ",", "R"}], "]"}], ",", "T"}], "]"}], " ", ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"D", "[", 
        RowBox[{"eq4", ",", 
         RowBox[{"{", 
          RowBox[{"R", ",", "2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
      "}"}], "  ", "//", " ", "Expand"}], " ", "//", " ", "Simplify"}]}], " ",
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psiDerivatives", "  ", "//", " ", "TableForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.825464463397792*^9, 3.825464563956678*^9}, 
   3.8254647711339293`*^9, 3.956072656113401*^9},
 CellLabel->
  "In[113]:=",ExpressionUUID->"0d6ec84b-4ba4-4962-a7bd-c1465eebfd67"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], "\[Rule]", 
        FractionBox["1", 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["T", "2"], "-", 
            SuperscriptBox["R", "2"]}]]}]]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], "\[Rule]", 
        FractionBox["R", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["R", "2"], "-", 
            RowBox[{"T", " ", 
             RowBox[{"(", 
              RowBox[{
               SqrtBox[
                RowBox[{
                 SuperscriptBox["T", "2"], "-", 
                 SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
           ")"}]}]]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], "\[Rule]", 
        RowBox[{"-", 
         FractionBox["T", 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["T", "2"], "-", 
              SuperscriptBox["R", "2"]}], ")"}], 
            RowBox[{"3", "/", "2"}]]}]]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{
          RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
          RowBox[{"\[PartialD]", "T"}]}],
         MultilineFunction->None], "\[Rule]", 
        FractionBox["R", 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["T", "2"], "-", 
             SuperscriptBox["R", "2"]}], ")"}], 
           RowBox[{"3", "/", "2"}]]}]]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{
            SuperscriptBox["T", "2"], " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["T", "2"], "-", 
              SuperscriptBox["R", "2"]}]]}], "+", 
           RowBox[{
            SuperscriptBox["R", "2"], " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["T", "2"], "-", 
              SuperscriptBox["R", "2"]}]]}], "+", 
           SuperscriptBox["T", "3"]}], 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["T", "2"], "-", 
              SuperscriptBox["R", "2"]}], ")"}], 
            RowBox[{"3", "/", "2"}]], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["T", "2"], "-", 
                SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], "2"]}]]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.825464471317479*^9, 3.825464521777182*^9}, {
   3.825464557261347*^9, 3.825464564626899*^9}, 3.825464732088052*^9, 
   3.8254647711342573`*^9, 3.9560713558184643`*^9, 3.956072656113594*^9},
 CellLabel->
  "Out[115]//TraditionalForm=",ExpressionUUID->"04ee541c-2cbd-45ac-8074-\
4824e024b04c"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq5", "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq5", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Gamma]", "[", 
     RowBox[{"R", ",", "T"}], "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"\[Psi]", "[", 
      RowBox[{"R", ",", "T"}], "]"}], "-", " ", 
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{"Log", "[", 
       RowBox[{"2", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["T", "2"], "-", 
          SuperscriptBox["R", "2"]}]]}], "]"}]}]}]}], " ", "/.", " ", "eq4", 
   " "}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.825464336970186*^9, 3.825464448746072*^9}, {
   3.825464722437457*^9, 3.825464727779887*^9}, 3.825464771134409*^9, 
   3.956072656113831*^9},
 CellLabel->
  "In[116]:=",ExpressionUUID->"fc3524c6-d4ac-4d16-8ee4-764f9be613ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Gamma]", "[", 
   RowBox[{"R", ",", "T"}], "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], " ", 
    RowBox[{"Log", "[", 
     RowBox[{"2", " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["R", "2"]}], "+", 
        SuperscriptBox["T", "2"]}]]}], "]"}]}], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"Log", "[", 
     RowBox[{"T", "+", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["R", "2"]}], "+", 
        SuperscriptBox["T", "2"]}]]}], "]"}]}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.825464429721035*^9, 3.825464450733625*^9}, 
   3.825464728959618*^9, 3.82546477113476*^9, 3.956071355832589*^9, 
   3.956072656114015*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"7f445755-1b29-4326-b63f-c0fa53877b52"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "gammaDerivatives", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gammaDerivatives", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"{", " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{"eq5", ",", "T"}], "]"}], " ", ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"D", "[", 
        RowBox[{"eq5", ",", "R"}], "]"}], " ", ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"D", "[", 
        RowBox[{"eq5", ",", 
         RowBox[{"{", 
          RowBox[{"T", ",", "2"}], "}"}]}], "]"}], " ", ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"eq5", ",", "R"}], "]"}], ",", "T"}], "]"}], " ", ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"D", "[", 
        RowBox[{"eq5", ",", 
         RowBox[{"{", 
          RowBox[{"R", ",", "2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
      "}"}], "  ", "//", " ", "Expand"}], " ", "//", " ", "Simplify"}]}], " ",
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gammaDerivatives", "  ", "//", " ", "TableForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.8254645803088503`*^9, 3.825464601780377*^9}, 
   3.825464771134935*^9, 3.9560726561142683`*^9},
 CellLabel->
  "In[118]:=",ExpressionUUID->"0b24bbc9-493a-4730-98dd-66505e3bff14"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"T", " ", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["T", "2"], "-", 
                SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
           SuperscriptBox["R", "2"]}], 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["T", "2"], "-", 
              SuperscriptBox["R", "2"]}], ")"}], 
            RowBox[{"3", "/", "2"}]]}]]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"R", " ", "T"}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["R", "2"], "-", 
             SuperscriptBox["T", "2"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SqrtBox[
              RowBox[{
               SuperscriptBox["T", "2"], "-", 
               SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], "\[Rule]", 
        FractionBox[
         RowBox[{
          RowBox[{"3", " ", 
           SuperscriptBox["R", "2"], " ", 
           SuperscriptBox["T", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SqrtBox[
              RowBox[{
               SuperscriptBox["T", "2"], "-", 
               SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox["R", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             SqrtBox[
              RowBox[{
               SuperscriptBox["T", "2"], "-", 
               SuperscriptBox["R", "2"]}]], "+", 
             RowBox[{"3", " ", "T"}]}], ")"}]}]}], 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["T", "2"], "-", 
             SuperscriptBox["R", "2"]}], ")"}], 
           RowBox[{"5", "/", "2"}]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SqrtBox[
              RowBox[{
               SuperscriptBox["T", "2"], "-", 
               SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], "2"]}]]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{
          RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
          RowBox[{"\[PartialD]", "T"}]}],
         MultilineFunction->None], "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["R", "5"], "+", 
          RowBox[{
           SuperscriptBox["R", "3"], " ", 
           SuperscriptBox["T", "2"]}], "-", 
          RowBox[{"2", " ", "R", " ", 
           SuperscriptBox["T", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             SqrtBox[
              RowBox[{
               SuperscriptBox["T", "2"], "-", 
               SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["T", "2"], "-", 
             SuperscriptBox["R", "2"]}], ")"}], 
           RowBox[{"5", "/", "2"}]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SqrtBox[
              RowBox[{
               SuperscriptBox["T", "2"], "-", 
               SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], "2"]}]]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None], "\[Rule]", 
        FractionBox[
         RowBox[{"T", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"2", " ", 
              SuperscriptBox["R", "4"]}]}], "+", 
            RowBox[{
             SuperscriptBox["R", "2"], " ", "T", " ", 
             RowBox[{"(", 
              RowBox[{
               SqrtBox[
                RowBox[{
                 SuperscriptBox["T", "2"], "-", 
                 SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["T", "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               SqrtBox[
                RowBox[{
                 SuperscriptBox["T", "2"], "-", 
                 SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], ")"}]}], 
         
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["T", "2"], "-", 
             SuperscriptBox["R", "2"]}], ")"}], 
           RowBox[{"5", "/", "2"}]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SqrtBox[
              RowBox[{
               SuperscriptBox["T", "2"], "-", 
               SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], "2"]}]]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{3.825464603745326*^9, 3.825464738032535*^9, 
  3.825464771135263*^9, 3.956071356053473*^9, 3.956072656114553*^9},
 CellLabel->
  "Out[120]//TraditionalForm=",ExpressionUUID->"5561387a-8dfb-44aa-a75c-\
320c3d39086e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "shows", " ", "that", " ", "equations", " ", "4", " ", "and", 
    " ", "5", " ", "do", " ", "indeed", " ", "correspond", " ", "to", " ", 
    "Riemann", " ", "tensor", " ", "being", " ", "zero"}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "3", "]"}], "]"}], " ", "\[IndentingNewLine]", 
   RowBox[{"TensorName", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "]"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"TensorValues", "[", 
        RowBox[{"tensorList", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "]"}], "  ", "/.", " ", 
       "psiDerivatives"}], " ", "/.", " ", "gammaDerivatives"}], "  ", "//", 
     " ", "MatrixForm"}], " ", "//", " ", "pdConv"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"TensorValues", "[", 
          RowBox[{"tensorList", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], "  ", "/.", " ", 
         "psiDerivatives"}], " ", "/.", " ", "gammaDerivatives"}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "Simplify"}], " ", "//", " ", 
     "MatrixForm"}], " ", "//", " ", "pdConv"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.825464637804571*^9, 3.825464646260241*^9}, 
   3.825464771135427*^9, {3.956072568365267*^9, 3.956072625234502*^9}, 
   3.956072656115053*^9},
 CellLabel->
  "In[276]:=",ExpressionUUID->"dc75b236-e67b-4bf4-99b1-098bb8ceab23"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["R", "\[Alpha]\[Beta]\[Gamma]\[Delta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{
  3.8254646483130817`*^9, {3.825464742270999*^9, 3.825464771135528*^9}, 
   3.956071356070854*^9, {3.956072611147139*^9, 3.9560726257029867`*^9}, 
   3.956072656115252*^9},
 CellLabel->
  "Out[276]=",ExpressionUUID->"5d8105a8-80c9-4d97-9154-83c4cb912944"],

Cell[BoxData["\<\"RiemannTensorCylindrical\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{
  3.8254646483130817`*^9, {3.825464742270999*^9, 3.825464771135528*^9}, 
   3.956071356070854*^9, {3.956072611147139*^9, 3.9560726257074413`*^9}, 
   3.956072656115539*^9},
 CellLabel->
  "Out[277]=",ExpressionUUID->"b9907eba-32f6-4c15-a486-f2ce57714e08"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox["T", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]]}]], "-", 
              FractionBox[
               RowBox[{
                RowBox[{
                 SuperscriptBox["T", "2"], " ", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}]]}], "+", 
                RowBox[{
                 SuperscriptBox["R", "2"], " ", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}]]}], "+", 
                SuperscriptBox["T", "3"]}], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], "2"]}]], 
              "+", 
              FractionBox[
               RowBox[{
                RowBox[{"3", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 SuperscriptBox["T", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}], "-", 
                RowBox[{
                 SuperscriptBox["R", "4"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", 
                   RowBox[{"3", " ", "T"}]}], ")"}]}]}], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"5", "/", "2"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], "2"]}]], 
              "-", 
              FractionBox[
               RowBox[{"T", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"2", " ", 
                    SuperscriptBox["R", "4"]}]}], "+", 
                  RowBox[{
                   SuperscriptBox["R", "2"], " ", "T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}], "+", 
                  RowBox[{
                   SuperscriptBox["T", "3"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                 ")"}]}], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"5", "/", "2"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], "2"]}]]}],
              ")"}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]}]]}], "0", "0"},
          {
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox["T", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]]}]], "-", 
              FractionBox[
               RowBox[{
                RowBox[{
                 SuperscriptBox["T", "2"], " ", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}]]}], "+", 
                RowBox[{
                 SuperscriptBox["R", "2"], " ", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}]]}], "+", 
                SuperscriptBox["T", "3"]}], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], "2"]}]], 
              "+", 
              FractionBox[
               RowBox[{
                RowBox[{"3", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 SuperscriptBox["T", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}], "-", 
                RowBox[{
                 SuperscriptBox["R", "4"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", 
                   RowBox[{"3", " ", "T"}]}], ")"}]}]}], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"5", "/", "2"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], "2"]}]], 
              "-", 
              FractionBox[
               RowBox[{"T", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"2", " ", 
                    SuperscriptBox["R", "4"]}]}], "+", 
                  RowBox[{
                   SuperscriptBox["R", "2"], " ", "T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}], "+", 
                  RowBox[{
                   SuperscriptBox["T", "3"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                 ")"}]}], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"5", "/", "2"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], "2"]}]]}],
              ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}]}]]}], ")"}]}], "0", "0", 
           "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{"R", " ", "T"}], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]]}]], "-", 
              FractionBox[
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
                  SuperscriptBox["R", "2"]}], ")"}]}], 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], "2"]}]], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{"R", " ", "T"}], 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    SuperscriptBox["T", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]]}], "-", 
                 
                 FractionBox["R", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                    ")"}]}]]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  SuperscriptBox["R", "2"], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                    ")"}]}]], "-", "1"}], ")"}]}]}], ")"}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]]}], "0"},
          {"0", "0", 
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                SuperscriptBox["R", "2"], 
                RowBox[{"2", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}], ")"}], 
                  RowBox[{"3", "/", "2"}]]}]]}], "+", 
              FractionBox[
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{"R", " ", "T"}], 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    SuperscriptBox["T", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]]}], "-", 
                  
                  FractionBox["R", 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                    ")"}]}]]}], ")"}]}], 
               RowBox[{"2", " ", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}]]}]], "-", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
                  SuperscriptBox["R", "2"]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox["R", "2"], 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                    ")"}]}]], "-", "1"}], ")"}]}], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]]}]]}], ")"}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]]}], "0"},
          {
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{"R", " ", "T"}], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]]}]], "-", 
              FractionBox[
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
                  SuperscriptBox["R", "2"]}], ")"}]}], 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], "2"]}]], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{"R", " ", "T"}], 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    SuperscriptBox["T", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]]}], "-", 
                 
                 FractionBox["R", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                    ")"}]}]]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  SuperscriptBox["R", "2"], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                    ")"}]}]], "-", "1"}], ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}]}], 
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                SuperscriptBox["R", "2"], 
                RowBox[{"2", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}], ")"}], 
                  RowBox[{"3", "/", "2"}]]}]]}], "+", 
              FractionBox[
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{"R", " ", "T"}], 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    SuperscriptBox["T", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]]}], "-", 
                  
                  FractionBox["R", 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                    ")"}]}]]}], ")"}]}], 
               RowBox[{"2", " ", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}]]}]], "-", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
                  SuperscriptBox["R", "2"]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox["R", "2"], 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                    ")"}]}]], "-", "1"}], ")"}]}], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["R", "2"], " ", "T"}], 
               RowBox[{"4", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  SuperscriptBox["T", "2"]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                 ")"}]}]], "+", 
              FractionBox[
               SuperscriptBox["R", "2"], 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["R", "2"], "-", 
                   RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], ")"}],
                  "2"]}]], "+", 
              FractionBox[
               RowBox[{
                RowBox[{"T", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
                SuperscriptBox["R", "2"]}], 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], "2"]}]], "+", 
              FractionBox["1", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}], ")"}]}]], "-", 
              FractionBox["T", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]]}]]}], ")"}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]]}]},
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
                  SuperscriptBox["R", "2"]}], ")"}]}], 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                 ")"}]}]], "+", 
              FractionBox["R", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]]}]], "-", 
              FractionBox[
               RowBox[{
                RowBox[{"-", 
                 FractionBox[
                  RowBox[{"R", " ", "T"}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    SuperscriptBox["T", "2"]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]]}], "-", 
                
                FractionBox[
                 RowBox[{"3", " ", "R"}], 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                   ")"}]}]]}], 
               RowBox[{"2", " ", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}]]}]]}], ")"}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]]}]},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["R", "2"], " ", "T"}], 
               RowBox[{"4", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  SuperscriptBox["T", "2"]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                 ")"}]}]], "+", 
              FractionBox[
               SuperscriptBox["R", "2"], 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["R", "2"], "-", 
                   RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], ")"}],
                  "2"]}]], "+", 
              FractionBox[
               RowBox[{
                RowBox[{"T", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
                SuperscriptBox["R", "2"]}], 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], "2"]}]], "+", 
              FractionBox["1", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}], ")"}]}]], "-", 
              FractionBox["T", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}]}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
                  SuperscriptBox["R", "2"]}], ")"}]}], 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                 ")"}]}]], "+", 
              FractionBox["R", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]]}]], "-", 
              FractionBox[
               RowBox[{
                RowBox[{"-", 
                 FractionBox[
                  RowBox[{"R", " ", "T"}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    SuperscriptBox["T", "2"]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]]}], "-", 
                
                FractionBox[
                 RowBox[{"3", " ", "R"}], 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                   ")"}]}]]}], 
               RowBox[{"2", " ", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}]]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox["T", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]]}]], "-", 
              FractionBox[
               RowBox[{
                RowBox[{
                 SuperscriptBox["T", "2"], " ", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}]]}], "+", 
                RowBox[{
                 SuperscriptBox["R", "2"], " ", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}]]}], "+", 
                SuperscriptBox["T", "3"]}], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], "2"]}]], 
              "+", 
              FractionBox[
               RowBox[{
                RowBox[{"3", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 SuperscriptBox["T", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}], "-", 
                RowBox[{
                 SuperscriptBox["R", "4"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", 
                   RowBox[{"3", " ", "T"}]}], ")"}]}]}], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"5", "/", "2"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], "2"]}]], 
              "-", 
              FractionBox[
               RowBox[{"T", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"2", " ", 
                    SuperscriptBox["R", "4"]}]}], "+", 
                  RowBox[{
                   SuperscriptBox["R", "2"], " ", "T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}], "+", 
                  RowBox[{
                   SuperscriptBox["T", "3"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                 ")"}]}], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"5", "/", "2"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], "2"]}]]}],
              ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}]}]]}], ")"}]}], "0", "0"},
          {
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox["T", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]]}]], "-", 
              FractionBox[
               RowBox[{
                RowBox[{
                 SuperscriptBox["T", "2"], " ", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}]]}], "+", 
                RowBox[{
                 SuperscriptBox["R", "2"], " ", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}]]}], "+", 
                SuperscriptBox["T", "3"]}], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], "2"]}]], 
              "+", 
              FractionBox[
               RowBox[{
                RowBox[{"3", " ", 
                 SuperscriptBox["R", "2"], " ", 
                 SuperscriptBox["T", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}], "-", 
                RowBox[{
                 SuperscriptBox["R", "4"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", 
                   RowBox[{"3", " ", "T"}]}], ")"}]}]}], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"5", "/", "2"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], "2"]}]], 
              "-", 
              FractionBox[
               RowBox[{"T", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"2", " ", 
                    SuperscriptBox["R", "4"]}]}], "+", 
                  RowBox[{
                   SuperscriptBox["R", "2"], " ", "T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}], "+", 
                  RowBox[{
                   SuperscriptBox["T", "3"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                 ")"}]}], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"5", "/", "2"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], "2"]}]]}],
              ")"}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]}]]}], "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                SuperscriptBox["R", "2"], 
                RowBox[{"2", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}], ")"}], 
                  RowBox[{"3", "/", "2"}]]}]]}], "+", 
              FractionBox[
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{"R", " ", "T"}], 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    SuperscriptBox["T", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]]}], "-", 
                  
                  FractionBox["R", 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                    ")"}]}]]}], ")"}]}], 
               RowBox[{"2", " ", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}]]}]], "-", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
                  SuperscriptBox["R", "2"]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox["R", "2"], 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                    ")"}]}]], "-", "1"}], ")"}]}], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]]}]]}], ")"}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]]}], "0"},
          {"0", "0", 
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"R", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
                   SuperscriptBox["R", "2"]}], ")"}]}], 
                RowBox[{"4", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}], ")"}], "2"]}]]}], "-", 
              FractionBox["R", 
               RowBox[{"4", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}], ")"}]}]], "+", 
              FractionBox[
               RowBox[{"R", " ", "T"}], 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  SuperscriptBox["T", "2"]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]], "-", 
              FractionBox["R", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                 ")"}]}]], "+", 
              FractionBox[
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["T", "2"], " ", 
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]]}], "+", 
                  RowBox[{
                   SuperscriptBox["R", "2"], " ", 
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]]}], "+", 
                  SuperscriptBox["T", "3"]}], ")"}]}], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], "2"]}]], 
              "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["R", "3"], " ", "T"}], 
               RowBox[{"4", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  SuperscriptBox["T", "2"]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                 ")"}]}]]}], ")"}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]]}], "0"},
          {
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                SuperscriptBox["R", "2"], 
                RowBox[{"2", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}], ")"}], 
                  RowBox[{"3", "/", "2"}]]}]]}], "+", 
              FractionBox[
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{"R", " ", "T"}], 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    SuperscriptBox["T", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]]}], "-", 
                  
                  FractionBox["R", 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                    ")"}]}]]}], ")"}]}], 
               RowBox[{"2", " ", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}]]}]], "-", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
                  SuperscriptBox["R", "2"]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox["R", "2"], 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                    ")"}]}]], "-", "1"}], ")"}]}], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}]}], 
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"R", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
                   SuperscriptBox["R", "2"]}], ")"}]}], 
                RowBox[{"4", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}], ")"}], "2"]}]]}], "-", 
              FractionBox["R", 
               RowBox[{"4", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}], ")"}]}]], "+", 
              FractionBox[
               RowBox[{"R", " ", "T"}], 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  SuperscriptBox["T", "2"]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]], "-", 
              FractionBox["R", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                 ")"}]}]], "+", 
              FractionBox[
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["T", "2"], " ", 
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]]}], "+", 
                  RowBox[{
                   SuperscriptBox["R", "2"], " ", 
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]]}], "+", 
                  SuperscriptBox["T", "3"]}], ")"}]}], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], "2"]}]], 
              "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["R", "3"], " ", "T"}], 
               RowBox[{"4", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  SuperscriptBox["T", "2"]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                 ")"}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
                  SuperscriptBox["R", "2"]}], ")"}]}], 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                 ")"}]}]], "+", 
              FractionBox["R", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]]}]], "-", 
              FractionBox[
               RowBox[{
                RowBox[{"-", 
                 FractionBox[
                  RowBox[{"R", " ", "T"}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    SuperscriptBox["T", "2"]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]]}], "-", 
                
                FractionBox[
                 RowBox[{"3", " ", "R"}], 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                   ")"}]}]]}], 
               RowBox[{"2", " ", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}]]}]]}], ")"}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]]}]},
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["R", "2"], " ", "T"}], 
               RowBox[{"4", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  SuperscriptBox["T", "2"]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                 ")"}]}]], "+", 
              FractionBox[
               SuperscriptBox["R", "2"], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["R", "2"], "-", 
                   RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], ")"}],
                  "2"]}]], "+", 
              FractionBox[
               RowBox[{
                RowBox[{"T", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
                SuperscriptBox["R", "2"]}], 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], "2"]}]], "+", 
              FractionBox["1", 
               RowBox[{"4", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}], ")"}]}]], "-", 
              FractionBox[
               RowBox[{
                RowBox[{
                 SuperscriptBox["T", "2"], " ", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}]]}], "+", 
                RowBox[{
                 SuperscriptBox["R", "2"], " ", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}]]}], "+", 
                SuperscriptBox["T", "3"]}], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], "2"]}]]}],
              ")"}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]]}]},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
                  SuperscriptBox["R", "2"]}], ")"}]}], 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                 ")"}]}]], "+", 
              FractionBox["R", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]]}]], "-", 
              FractionBox[
               RowBox[{
                RowBox[{"-", 
                 FractionBox[
                  RowBox[{"R", " ", "T"}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    SuperscriptBox["T", "2"]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]]}], "-", 
                
                FractionBox[
                 RowBox[{"3", " ", "R"}], 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                   ")"}]}]]}], 
               RowBox[{"2", " ", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}]]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}]}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["R", "2"], " ", "T"}], 
               RowBox[{"4", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  SuperscriptBox["T", "2"]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                 ")"}]}]], "+", 
              FractionBox[
               SuperscriptBox["R", "2"], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["R", "2"], "-", 
                   RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], ")"}],
                  "2"]}]], "+", 
              FractionBox[
               RowBox[{
                RowBox[{"T", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
                SuperscriptBox["R", "2"]}], 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], "2"]}]], "+", 
              FractionBox["1", 
               RowBox[{"4", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}], ")"}]}]], "-", 
              FractionBox[
               RowBox[{
                RowBox[{
                 SuperscriptBox["T", "2"], " ", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}]]}], "+", 
                RowBox[{
                 SuperscriptBox["R", "2"], " ", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}]]}], "+", 
                SuperscriptBox["T", "3"]}], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], "2"]}]]}],
              ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{"R", " ", "T"}], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]]}]], "-", 
              FractionBox[
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
                  SuperscriptBox["R", "2"]}], ")"}]}], 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], "2"]}]], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{"R", " ", "T"}], 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    SuperscriptBox["T", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]]}], "-", 
                 
                 FractionBox["R", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                    ")"}]}]]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  SuperscriptBox["R", "2"], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                    ")"}]}]], "-", "1"}], ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}]}], "0"},
          {"0", "0", 
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                SuperscriptBox["R", "2"], 
                RowBox[{"2", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}], ")"}], 
                  RowBox[{"3", "/", "2"}]]}]]}], "+", 
              FractionBox[
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{"R", " ", "T"}], 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    SuperscriptBox["T", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]]}], "-", 
                  
                  FractionBox["R", 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                    ")"}]}]]}], ")"}]}], 
               RowBox[{"2", " ", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}]]}]], "-", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
                  SuperscriptBox["R", "2"]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox["R", "2"], 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                    ")"}]}]], "-", "1"}], ")"}]}], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}]}], "0"},
          {
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{"R", " ", "T"}], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]]}]], "-", 
              FractionBox[
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
                  SuperscriptBox["R", "2"]}], ")"}]}], 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], "2"]}]], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{"R", " ", "T"}], 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    SuperscriptBox["T", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]]}], "-", 
                 
                 FractionBox["R", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                    ")"}]}]]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  SuperscriptBox["R", "2"], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                    ")"}]}]], "-", "1"}], ")"}]}]}], ")"}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]]}], 
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                SuperscriptBox["R", "2"], 
                RowBox[{"2", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}], ")"}], 
                  RowBox[{"3", "/", "2"}]]}]]}], "+", 
              FractionBox[
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{"R", " ", "T"}], 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    SuperscriptBox["T", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]]}], "-", 
                  
                  FractionBox["R", 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                    ")"}]}]]}], ")"}]}], 
               RowBox[{"2", " ", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}]]}]], "-", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
                  SuperscriptBox["R", "2"]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox["R", "2"], 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                    ")"}]}]], "-", "1"}], ")"}]}], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]]}]]}], ")"}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                SuperscriptBox["R", "2"], 
                RowBox[{"2", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}], ")"}], 
                  RowBox[{"3", "/", "2"}]]}]]}], "+", 
              FractionBox[
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{"R", " ", "T"}], 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    SuperscriptBox["T", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]]}], "-", 
                  
                  FractionBox["R", 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                    ")"}]}]]}], ")"}]}], 
               RowBox[{"2", " ", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}]]}]], "-", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
                  SuperscriptBox["R", "2"]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox["R", "2"], 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                    ")"}]}]], "-", "1"}], ")"}]}], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}]}], "0"},
          {"0", "0", 
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"R", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
                   SuperscriptBox["R", "2"]}], ")"}]}], 
                RowBox[{"4", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}], ")"}], "2"]}]]}], "-", 
              FractionBox["R", 
               RowBox[{"4", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}], ")"}]}]], "+", 
              FractionBox[
               RowBox[{"R", " ", "T"}], 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  SuperscriptBox["T", "2"]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]], "-", 
              FractionBox["R", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                 ")"}]}]], "+", 
              FractionBox[
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["T", "2"], " ", 
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]]}], "+", 
                  RowBox[{
                   SuperscriptBox["R", "2"], " ", 
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]]}], "+", 
                  SuperscriptBox["T", "3"]}], ")"}]}], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], "2"]}]], 
              "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["R", "3"], " ", "T"}], 
               RowBox[{"4", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  SuperscriptBox["T", "2"]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                 ")"}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}]}], "0"},
          {
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                SuperscriptBox["R", "2"], 
                RowBox[{"2", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}], ")"}], 
                  RowBox[{"3", "/", "2"}]]}]]}], "+", 
              FractionBox[
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{"R", " ", "T"}], 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    SuperscriptBox["T", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]]}], "-", 
                  
                  FractionBox["R", 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                    ")"}]}]]}], ")"}]}], 
               RowBox[{"2", " ", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}]]}]], "-", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
                  SuperscriptBox["R", "2"]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   SuperscriptBox["R", "2"], 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                    ")"}]}]], "-", "1"}], ")"}]}], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]]}]]}], ")"}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]]}], 
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"R", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
                   SuperscriptBox["R", "2"]}], ")"}]}], 
                RowBox[{"4", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}], ")"}], "2"]}]]}], "-", 
              FractionBox["R", 
               RowBox[{"4", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}], ")"}]}]], "+", 
              FractionBox[
               RowBox[{"R", " ", "T"}], 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  SuperscriptBox["T", "2"]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]], "-", 
              FractionBox["R", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                 ")"}]}]], "+", 
              FractionBox[
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["T", "2"], " ", 
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]]}], "+", 
                  RowBox[{
                   SuperscriptBox["R", "2"], " ", 
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]]}], "+", 
                  SuperscriptBox["T", "3"]}], ")"}]}], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], "2"]}]], 
              "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["R", "3"], " ", "T"}], 
               RowBox[{"4", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  SuperscriptBox["T", "2"]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                 ")"}]}]]}], ")"}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox["R", 
               RowBox[{"4", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}], ")"}]}]], "+", 
              FractionBox["R", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                 ")"}]}]], "-", 
              FractionBox[
               SuperscriptBox["R", "3"], 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["R", "2"], "-", 
                   RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], ")"}],
                  "2"]}]]}], ")"}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]}]]}]},
          {"0", "0", 
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox["R", 
               RowBox[{"4", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}], ")"}]}]], "+", 
              FractionBox["R", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                 ")"}]}]], "-", 
              FractionBox[
               SuperscriptBox["R", "3"], 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["R", "2"], "-", 
                   RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], ")"}],
                  "2"]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}]}]]}], ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["R", "2"], " ", "T"}], 
               RowBox[{"4", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  SuperscriptBox["T", "2"]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                 ")"}]}]], "+", 
              FractionBox[
               SuperscriptBox["R", "2"], 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["R", "2"], "-", 
                   RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], ")"}],
                  "2"]}]], "+", 
              FractionBox[
               RowBox[{
                RowBox[{"T", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
                SuperscriptBox["R", "2"]}], 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], "2"]}]], "+", 
              FractionBox["1", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}], ")"}]}]], "-", 
              FractionBox["T", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}]}]},
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
                  SuperscriptBox["R", "2"]}], ")"}]}], 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                 ")"}]}]], "+", 
              FractionBox["R", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]]}]], "-", 
              FractionBox[
               RowBox[{
                RowBox[{"-", 
                 FractionBox[
                  RowBox[{"R", " ", "T"}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    SuperscriptBox["T", "2"]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]]}], "-", 
                
                FractionBox[
                 RowBox[{"3", " ", "R"}], 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                   ")"}]}]]}], 
               RowBox[{"2", " ", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}]]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}]}]},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["R", "2"], " ", "T"}], 
               RowBox[{"4", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  SuperscriptBox["T", "2"]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                 ")"}]}]], "+", 
              FractionBox[
               SuperscriptBox["R", "2"], 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["R", "2"], "-", 
                   RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], ")"}],
                  "2"]}]], "+", 
              FractionBox[
               RowBox[{
                RowBox[{"T", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
                SuperscriptBox["R", "2"]}], 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], "2"]}]], "+", 
              FractionBox["1", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}], ")"}]}]], "-", 
              FractionBox["T", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]]}]]}], ")"}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]]}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
                  SuperscriptBox["R", "2"]}], ")"}]}], 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                 ")"}]}]], "+", 
              FractionBox["R", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]]}]], "-", 
              FractionBox[
               RowBox[{
                RowBox[{"-", 
                 FractionBox[
                  RowBox[{"R", " ", "T"}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    SuperscriptBox["T", "2"]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]]}], "-", 
                
                FractionBox[
                 RowBox[{"3", " ", "R"}], 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                   ")"}]}]]}], 
               RowBox[{"2", " ", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}]]}]]}], ")"}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
                  SuperscriptBox["R", "2"]}], ")"}]}], 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                 ")"}]}]], "+", 
              FractionBox["R", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]]}]], "-", 
              FractionBox[
               RowBox[{
                RowBox[{"-", 
                 FractionBox[
                  RowBox[{"R", " ", "T"}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    SuperscriptBox["T", "2"]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]]}], "-", 
                
                FractionBox[
                 RowBox[{"3", " ", "R"}], 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                   ")"}]}]]}], 
               RowBox[{"2", " ", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}]]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}]}]},
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["R", "2"], " ", "T"}], 
               RowBox[{"4", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  SuperscriptBox["T", "2"]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                 ")"}]}]], "+", 
              FractionBox[
               SuperscriptBox["R", "2"], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["R", "2"], "-", 
                   RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], ")"}],
                  "2"]}]], "+", 
              FractionBox[
               RowBox[{
                RowBox[{"T", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
                SuperscriptBox["R", "2"]}], 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], "2"]}]], "+", 
              FractionBox["1", 
               RowBox[{"4", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}], ")"}]}]], "-", 
              FractionBox[
               RowBox[{
                RowBox[{
                 SuperscriptBox["T", "2"], " ", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}]]}], "+", 
                RowBox[{
                 SuperscriptBox["R", "2"], " ", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}]]}], "+", 
                SuperscriptBox["T", "3"]}], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], "2"]}]]}],
              ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}]]}], ")"}]}]},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{"R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
                  SuperscriptBox["R", "2"]}], ")"}]}], 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                 ")"}]}]], "+", 
              FractionBox["R", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]]}]], "-", 
              FractionBox[
               RowBox[{
                RowBox[{"-", 
                 FractionBox[
                  RowBox[{"R", " ", "T"}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    SuperscriptBox["T", "2"]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]]}], "-", 
                
                FractionBox[
                 RowBox[{"3", " ", "R"}], 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["R", "2"], "-", 
                    RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                   ")"}]}]]}], 
               RowBox[{"2", " ", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}]]}]]}], ")"}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]]}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["R", "2"], " ", "T"}], 
               RowBox[{"4", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  SuperscriptBox["T", "2"]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                 ")"}]}]], "+", 
              FractionBox[
               SuperscriptBox["R", "2"], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["R", "2"], "-", 
                   RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], ")"}],
                  "2"]}]], "+", 
              FractionBox[
               RowBox[{
                RowBox[{"T", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
                SuperscriptBox["R", "2"]}], 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], "2"]}]], "+", 
              FractionBox["1", 
               RowBox[{"4", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}], ")"}]}]], "-", 
              FractionBox[
               RowBox[{
                RowBox[{
                 SuperscriptBox["T", "2"], " ", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}]]}], "+", 
                RowBox[{
                 SuperscriptBox["R", "2"], " ", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}]]}], "+", 
                SuperscriptBox["T", "3"]}], 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["T", "2"], "-", 
                   SuperscriptBox["R", "2"]}], ")"}], 
                 RowBox[{"3", "/", "2"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], "2"]}]]}],
              ")"}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}]]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox["R", 
               RowBox[{"4", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}], ")"}]}]], "+", 
              FractionBox["R", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                 ")"}]}]], "-", 
              FractionBox[
               SuperscriptBox["R", "3"], 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["R", "2"], "-", 
                   RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], ")"}],
                  "2"]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}]}]]}], ")"}]}]},
          {"0", "0", 
           RowBox[{"R", " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox["R", 
               RowBox[{"4", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}], ")"}]}]], "+", 
              FractionBox["R", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["R", "2"], "-", 
                  RowBox[{"T", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
                 ")"}]}]], "-", 
              FractionBox[
               SuperscriptBox["R", "3"], 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["R", "2"], "-", 
                   RowBox[{"T", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], ")"}],
                  "2"]}]]}], ")"}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}]}]]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{
  3.8254646483130817`*^9, {3.825464742270999*^9, 3.825464771135528*^9}, 
   3.956071356070854*^9, {3.956072611147139*^9, 3.956072656115801*^9}},
 CellLabel->
  "Out[278]//TraditionalForm=",ExpressionUUID->"20b8c521-ea2d-492f-9ed6-\
60ea0107aeff"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{
  3.8254646483130817`*^9, {3.825464742270999*^9, 3.825464771135528*^9}, 
   3.956071356070854*^9, {3.956072611147139*^9, 3.956072656115995*^9}},
 CellLabel->
  "Out[279]//TraditionalForm=",ExpressionUUID->"cbe93595-a9bc-4165-a198-\
d46a3b514124"],

Cell[BoxData[
 RowBox[{
  RowBox[{"vacuumEquations", " ", "//", " ", "TableForm"}], " ", "//", " ", 
  "pdConv"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.956072464607616*^9, 3.956072466948547*^9}, 
   3.956072656116218*^9},
 CellLabel->
  "In[263]:=",ExpressionUUID->"b84cf8f7-2434-468f-bb94-70b30b61ec9b"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["R", "2"]}],
          MultilineFunction->None], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["T", "2"]}],
          MultilineFunction->None], "+", 
         FractionBox[
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], "R"]}], "\[LongEqual]", "0"}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], "\[LongEqual]", 
        RowBox[{"2", " ", "R", " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "R"}],
          MultilineFunction->None], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], "\[LongEqual]", 
        RowBox[{"R", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], ")"}], "2"]}], ")"}]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.956072462363449*^9, 3.956072467266548*^9}, 
   3.956072656116727*^9},
 CellLabel->
  "Out[263]//TraditionalForm=",ExpressionUUID->"27cb01cf-5ec8-421b-b6c8-\
12df643f7a55"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "shows", " ", "that", " ", "equations", " ", "4", " ", "and", 
    " ", "5", " ", "do", " ", "indeed", " ", "satisfy", " ", "Einstein", " ", 
    "Field", " ", "Equations"}], " ", "*)"}], "\[IndentingNewLine]", " ", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"vacuumEquations", "/.", " ", "psiDerivatives"}], "  ", "/.", 
      " ", "gammaDerivatives"}], " ", "//", " ", "TableForm"}], " ", "//", 
    " ", "pdConv"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"vacuumEquations", "/.", " ", "psiDerivatives"}], " ", "/.", 
       " ", "gammaDerivatives"}], " ", "//", " ", "Expand"}], " ", "//", " ", 
     "Simplify"}], "  ", "//", " ", "TableForm"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.956072485955886*^9, 3.9560725828101788`*^9}, 
   3.956072656116997*^9},ExpressionUUID->"87bd0b39-e3b3-4097-b1dc-\
74e56c30dec4"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         FractionBox["T", 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["T", "2"], "-", 
              SuperscriptBox["R", "2"]}], ")"}], 
            RowBox[{"3", "/", "2"}]]}]], "+", 
         FractionBox["1", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["R", "2"], "-", 
             RowBox[{"T", " ", 
              RowBox[{"(", 
               RowBox[{
                SqrtBox[
                 RowBox[{
                  SuperscriptBox["T", "2"], "-", 
                  SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
            ")"}]}]], "-", 
         FractionBox[
          RowBox[{
           RowBox[{
            SuperscriptBox["T", "2"], " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["T", "2"], "-", 
              SuperscriptBox["R", "2"]}]]}], "+", 
           RowBox[{
            SuperscriptBox["R", "2"], " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["T", "2"], "-", 
              SuperscriptBox["R", "2"]}]]}], "+", 
           SuperscriptBox["T", "3"]}], 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["T", "2"], "-", 
              SuperscriptBox["R", "2"]}], ")"}], 
            RowBox[{"3", "/", "2"}]], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["T", "2"], "-", 
                SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}], "2"]}]]}], 
        "\[LongEqual]", "0"}]},
      {
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"T", " ", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["T", "2"], "-", 
                SuperscriptBox["R", "2"]}]], "-", "T"}], ")"}]}], "+", 
           SuperscriptBox["R", "2"]}], 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["T", "2"], "-", 
              SuperscriptBox["R", "2"]}], ")"}], 
            RowBox[{"3", "/", "2"}]]}]]}], "\[LongEqual]", 
        FractionBox[
         SuperscriptBox["R", "2"], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["T", "2"], "-", 
            SuperscriptBox["R", "2"]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["R", "2"], "-", 
            RowBox[{"T", " ", 
             RowBox[{"(", 
              RowBox[{
               SqrtBox[
                RowBox[{
                 SuperscriptBox["T", "2"], "-", 
                 SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], 
           ")"}]}]]}]},
      {
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"R", " ", "T"}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["R", "2"], "-", 
             SuperscriptBox["T", "2"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SqrtBox[
              RowBox[{
               SuperscriptBox["T", "2"], "-", 
               SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]]}], 
        "\[LongEqual]", 
        RowBox[{"R", " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            SuperscriptBox["R", "2"], 
            RowBox[{"4", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["R", "2"], "-", 
                RowBox[{"T", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["T", "2"], "-", 
                    SuperscriptBox["R", "2"]}]], "+", "T"}], ")"}]}]}], ")"}],
               "2"]}]], "+", 
           FractionBox["1", 
            RowBox[{"4", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["T", "2"], "-", 
               SuperscriptBox["R", "2"]}], ")"}]}]]}], ")"}]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.9560724868395576`*^9, 3.9560725606256123`*^9}, 
   3.9560726561171703`*^9},
 CellLabel->
  "Out[271]//TraditionalForm=",ExpressionUUID->"40f296c5-1e5a-4cd1-aa28-\
04c4b974c70f"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"True"},
     {"True"},
     {"True"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.9560724868395576`*^9, 3.956072560632495*^9}, 
   3.9560726561175823`*^9},
 CellLabel->
  "Out[272]//TableForm=",ExpressionUUID->"e8a230fa-5122-4e63-9ed3-\
dcb83eafec49"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Transformation Given By Equation 6 Should Give Back Flat Space and Mine DOES \
NOT
FIX THIS\
\>", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.855699142717557*^9, 3.8556991739947357`*^9}, {
  3.956072659835483*^9, 3.956072678811324*^9}, {3.956073260643754*^9, 
  3.956073260778571*^9}},ExpressionUUID->"60aaa492-b6c7-4810-80b1-\
14e5c78d8b11"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq6", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq6", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"T", " ", "\[Equal]", " ", 
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["r", "2"], "+", " ", 
         SuperscriptBox["t", "2"], "-", 
         SuperscriptBox["z", "2"]}], ")"}]}]}], " ", ",", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"I", " ", 
         RowBox[{"can", "'"}], "t", " ", "tell"}], "..."}], " ", "is", " ", 
       "it", " ", "a", " ", "typo", " ", "or", " ", "is", " ", "there", " ", 
       "a", " ", 
       RowBox[{"1", "/", "2"}], " ", "and", " ", "also", " ", "over", " ", 
       "2", " ", "to", " ", "make", " ", 
       RowBox[{"1", "/", 
        RowBox[{"4", "?"}]}]}], " ", "*)"}], " ", "\[IndentingNewLine]", 
     RowBox[{"R", " ", "\[Equal]", " ", 
      RowBox[{"r", " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["t", "2"], "-", 
         SuperscriptBox["z", "2"]}]]}]}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Z", " ", "\[Equal]", " ", 
      RowBox[{"ArcTanh", "[", 
       FractionBox["z", "t"], "]"}]}]}], " ", "\[IndentingNewLine]", "}"}]}], 
  " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", " ", 
   RowBox[{"eq6", " ", "/.", " ", 
    RowBox[{"Equal", "\[Rule]", " ", "Rule"}]}], " ", ")"}], "//", " ", 
  "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.825464160444803*^9, 3.825464231951208*^9}, {
   3.8254649612377367`*^9, 3.825464971444902*^9}, {3.825465148595254*^9, 
   3.8254651706977673`*^9}, 3.8556991500214853`*^9, {3.9560716923320103`*^9, 
   3.956071693036881*^9}, {3.956072221948104*^9, 3.9560722383127537`*^9}},
 CellLabel->
  "In[250]:=",ExpressionUUID->"df8e5383-34a2-4bf4-b6f8-5e1b9315ac3a"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"T", "\[Rule]", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["r", "2"], "+", 
          SuperscriptBox["t", "2"], "-", 
          SuperscriptBox["z", "2"]}], ")"}]}]}]},
     {
      RowBox[{"R", "\[Rule]", 
       RowBox[{"r", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["t", "2"], "-", 
          SuperscriptBox["z", "2"]}]]}]}]},
     {
      RowBox[{"Z", "\[Rule]", 
       RowBox[{"ArcTanh", "[", 
        FractionBox["z", "t"], "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.8254642322471447`*^9, {3.825464966536327*^9, 3.8254649718661633`*^9}, {
   3.825465171263157*^9, 3.825465177040312*^9}, 3.855699150021702*^9, 
   3.9560713563786173`*^9, {3.956071693842924*^9, 3.956071696225857*^9}, {
   3.9560722233838387`*^9, 3.956072242057255*^9}, 3.956072296506551*^9},
 CellLabel->
  "Out[252]//TableForm=",ExpressionUUID->"2c57aace-047d-4921-a7a4-\
77f63ef7d5f3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Dt", "[", " ", "eq6", " ", "]"}], "  ", "/.", " ", 
     "dtReplace"}], "  ", "/.", " ", 
    RowBox[{"Equal", "\[Rule]", " ", "Rule"}]}], " ", ")"}], "//", " ", 
  "TableForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8254642351852417`*^9, 3.825464244942313*^9}, {
   3.825464986743099*^9, 3.825464995428226*^9}, 3.85569915002185*^9},
 CellLabel->
  "In[253]:=",ExpressionUUID->"6067c52b-a05a-4f1b-bd85-9bb948f61808"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"dT", "\[Rule]", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "dr", " ", "r"}], "+", 
          RowBox[{"2", " ", "dt", " ", "t"}], "-", 
          RowBox[{"2", " ", "dz", " ", "z"}]}], ")"}]}]}]},
     {
      RowBox[{"dR", "\[Rule]", 
       RowBox[{
        FractionBox[
         RowBox[{"r", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "dt", " ", "t"}], "-", 
            RowBox[{"2", " ", "dz", " ", "z"}]}], ")"}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["t", "2"], "-", 
            SuperscriptBox["z", "2"]}]]}]], "+", 
        RowBox[{"dr", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["t", "2"], "-", 
           SuperscriptBox["z", "2"]}]]}]}]}]},
     {
      RowBox[{"dZ", "\[Rule]", 
       FractionBox[
        RowBox[{
         FractionBox["dz", "t"], "-", 
         FractionBox[
          RowBox[{"dt", " ", "z"}], 
          SuperscriptBox["t", "2"]]}], 
        RowBox[{"1", "-", 
         FractionBox[
          SuperscriptBox["z", "2"], 
          SuperscriptBox["t", "2"]]}]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.825464237684472*^9, 3.8254642452116003`*^9}, 
   3.825464275729702*^9, 3.8254649958958273`*^9, 3.825465179191931*^9, 
   3.855699150022032*^9, 3.956071356408647*^9, 3.956071698400496*^9, {
   3.956072225738203*^9, 3.956072242106883*^9}, 3.956072296556925*^9},
 CellLabel->
  "Out[253]//TableForm=",ExpressionUUID->"ce7af1be-bef0-4fd8-8e2e-\
737b563db271"],

Cell[BoxData[{
 RowBox[{"eq1", " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq1", " ", "/.", " ", "eq1a"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eq1", " ", "/.", " ", "eq1a"}], " ", "/.", " ", "eq4"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"eq1", " ", "/.", " ", "eq1a"}], " ", "/.", " ", "eq4"}], " ", "/.",
    " ", "eq5"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"eq1", " ", "/.", " ", "eq1a"}], " ", "/.", " ", "eq4"}], " ", "/.",
    " ", "eq5"}], " ", "/.", 
  RowBox[{"(", " ", 
   RowBox[{"eq6", " ", "/.", " ", 
    RowBox[{"Equal", "\[Rule]", " ", "Rule"}]}], " ", 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"eq1", " ", "/.", " ", "eq1a"}], " ", "/.", " ", "eq4"}], " ", "/.",
     " ", "eq5"}], " ", "/.", 
   RowBox[{"(", " ", 
    RowBox[{"eq6", " ", "/.", " ", 
     RowBox[{"Equal", "\[Rule]", " ", "Rule"}]}], " ", ")"}]}], " ", "/.", 
  " ", 
  RowBox[{"(", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Dt", "[", " ", "eq6", " ", "]"}], "  ", "/.", " ", 
     "dtReplace"}], "  ", "/.", " ", 
    RowBox[{"Equal", "\[Rule]", " ", "Rule"}]}], " ", ")"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.956071456556869*^9, 3.956071612187745*^9}, 
   3.956072294643838*^9},
 CellLabel->
  "In[254]:=",ExpressionUUID->"f61bf886-6ad3-4f95-81ca-1ab81d248e97"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["dR", "2"]}], "+", 
     SuperscriptBox["dT", "2"]}], ")"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"\[Gamma]", "-", "\[Psi]"}], ")"}]}]]}], "-", 
  RowBox[{
   SuperscriptBox["dZ", "2"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", "\[Psi]"}]]}], "-", 
  RowBox[{
   SuperscriptBox["d\[Phi]", "2"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", "\[Psi]"}]], " ", 
   SuperscriptBox["R", "2"]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.956071458232395*^9, 3.95607157461969*^9}, 
   3.956071614113106*^9, 3.956071706072403*^9, 3.9560722279357224`*^9, {
   3.956072294644102*^9, 3.9560722965716753`*^9}},
 CellLabel->
  "Out[254]=",ExpressionUUID->"8fdbb655-cc2d-404c-9425-56ad2612d6f5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["dR", "2"]}], "+", 
     SuperscriptBox["dT", "2"]}], ")"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Gamma]", "[", 
        RowBox[{"R", ",", "T"}], "]"}], "-", 
       RowBox[{"\[Psi]", "[", 
        RowBox[{"R", ",", "T"}], "]"}]}], ")"}]}]]}], "-", 
  RowBox[{
   SuperscriptBox["dZ", "2"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", 
     RowBox[{"\[Psi]", "[", 
      RowBox[{"R", ",", "T"}], "]"}]}]]}], "-", 
  RowBox[{
   SuperscriptBox["d\[Phi]", "2"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     RowBox[{"\[Psi]", "[", 
      RowBox[{"R", ",", "T"}], "]"}]}]], " ", 
   SuperscriptBox["R", "2"]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.956071458232395*^9, 3.95607157461969*^9}, 
   3.956071614113106*^9, 3.956071706072403*^9, 3.9560722279357224`*^9, {
   3.956072294644102*^9, 3.956072296577951*^9}},
 CellLabel->
  "Out[255]=",ExpressionUUID->"2aea2720-85b7-4a1a-ac66-15195078abef"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["dR", "2"]}], "+", 
     SuperscriptBox["dT", "2"]}], ")"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        RowBox[{"Log", "[", 
         RowBox[{"T", "+", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["R", "2"]}], "+", 
            SuperscriptBox["T", "2"]}]]}], "]"}]}], "+", 
       RowBox[{"\[Gamma]", "[", 
        RowBox[{"R", ",", "T"}], "]"}]}], ")"}]}]]}], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["d\[Phi]", "2"], " ", 
    SuperscriptBox["R", "2"]}], 
   RowBox[{"T", "+", 
    SqrtBox[
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["R", "2"]}], "+", 
      SuperscriptBox["T", "2"]}]]}]], "-", 
  RowBox[{
   SuperscriptBox["dZ", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"T", "+", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["R", "2"]}], "+", 
       SuperscriptBox["T", "2"]}]]}], ")"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.956071458232395*^9, 3.95607157461969*^9}, 
   3.956071614113106*^9, 3.956071706072403*^9, 3.9560722279357224`*^9, {
   3.956072294644102*^9, 3.9560722965824213`*^9}},
 CellLabel->
  "Out[256]=",ExpressionUUID->"1a6ca76f-793d-4903-8262-9fc328484556"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["dR", "2"]}], "+", 
    SuperscriptBox["dT", "2"]}], 
   RowBox[{"2", " ", 
    SqrtBox[
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["R", "2"]}], "+", 
      SuperscriptBox["T", "2"]}]]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["d\[Phi]", "2"], " ", 
    SuperscriptBox["R", "2"]}], 
   RowBox[{"T", "+", 
    SqrtBox[
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["R", "2"]}], "+", 
      SuperscriptBox["T", "2"]}]]}]], "-", 
  RowBox[{
   SuperscriptBox["dZ", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"T", "+", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["R", "2"]}], "+", 
       SuperscriptBox["T", "2"]}]]}], ")"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.956071458232395*^9, 3.95607157461969*^9}, 
   3.956071614113106*^9, 3.956071706072403*^9, 3.9560722279357224`*^9, {
   3.956072294644102*^9, 3.956072296587578*^9}},
 CellLabel->
  "Out[257]=",ExpressionUUID->"e744caea-951c-4e68-a5af-68c6d96a45d1"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["dR", "2"]}], "+", 
    SuperscriptBox["dT", "2"]}], 
   RowBox[{"2", " ", 
    SqrtBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["r", "2"]}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["t", "2"], "-", 
         SuperscriptBox["z", "2"]}], ")"}]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["r", "2"], "+", 
          SuperscriptBox["t", "2"], "-", 
          SuperscriptBox["z", "2"]}], ")"}], "2"]}]}]]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["d\[Phi]", "2"], " ", 
    SuperscriptBox["r", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["t", "2"], "-", 
      SuperscriptBox["z", "2"]}], ")"}]}], 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["r", "2"], "+", 
       SuperscriptBox["t", "2"], "-", 
       SuperscriptBox["z", "2"]}], ")"}]}], "+", 
    SqrtBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["r", "2"]}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["t", "2"], "-", 
         SuperscriptBox["z", "2"]}], ")"}]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["r", "2"], "+", 
          SuperscriptBox["t", "2"], "-", 
          SuperscriptBox["z", "2"]}], ")"}], "2"]}]}]]}]], "-", 
  RowBox[{
   SuperscriptBox["dZ", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["r", "2"], "+", 
        SuperscriptBox["t", "2"], "-", 
        SuperscriptBox["z", "2"]}], ")"}]}], "+", 
     SqrtBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["r", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["t", "2"], "-", 
          SuperscriptBox["z", "2"]}], ")"}]}], "+", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["r", "2"], "+", 
           SuperscriptBox["t", "2"], "-", 
           SuperscriptBox["z", "2"]}], ")"}], "2"]}]}]]}], 
    ")"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.956071458232395*^9, 3.95607157461969*^9}, 
   3.956071614113106*^9, 3.956071706072403*^9, 3.9560722279357224`*^9, {
   3.956072294644102*^9, 3.956072296592497*^9}},
 CellLabel->
  "Out[258]=",ExpressionUUID->"85076b25-46d1-4db1-a562-01457d2d7a30"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{
     FractionBox["1", "4"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "dr", " ", "r"}], "+", 
        RowBox[{"2", " ", "dt", " ", "t"}], "-", 
        RowBox[{"2", " ", "dz", " ", "z"}]}], ")"}], "2"]}], "-", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"r", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "dt", " ", "t"}], "-", 
           RowBox[{"2", " ", "dz", " ", "z"}]}], ")"}]}], 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["t", "2"], "-", 
           SuperscriptBox["z", "2"]}]]}]], "+", 
       RowBox[{"dr", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["t", "2"], "-", 
          SuperscriptBox["z", "2"]}]]}]}], ")"}], "2"]}], 
   RowBox[{"2", " ", 
    SqrtBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["r", "2"]}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["t", "2"], "-", 
         SuperscriptBox["z", "2"]}], ")"}]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["r", "2"], "+", 
          SuperscriptBox["t", "2"], "-", 
          SuperscriptBox["z", "2"]}], ")"}], "2"]}]}]]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["d\[Phi]", "2"], " ", 
    SuperscriptBox["r", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["t", "2"], "-", 
      SuperscriptBox["z", "2"]}], ")"}]}], 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["r", "2"], "+", 
       SuperscriptBox["t", "2"], "-", 
       SuperscriptBox["z", "2"]}], ")"}]}], "+", 
    SqrtBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["r", "2"]}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["t", "2"], "-", 
         SuperscriptBox["z", "2"]}], ")"}]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["r", "2"], "+", 
          SuperscriptBox["t", "2"], "-", 
          SuperscriptBox["z", "2"]}], ")"}], "2"]}]}]]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       FractionBox["dz", "t"], "-", 
       FractionBox[
        RowBox[{"dt", " ", "z"}], 
        SuperscriptBox["t", "2"]]}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["r", "2"], "+", 
         SuperscriptBox["t", "2"], "-", 
         SuperscriptBox["z", "2"]}], ")"}]}], "+", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["r", "2"]}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["t", "2"], "-", 
           SuperscriptBox["z", "2"]}], ")"}]}], "+", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["r", "2"], "+", 
            SuperscriptBox["t", "2"], "-", 
            SuperscriptBox["z", "2"]}], ")"}], "2"]}]}]]}], ")"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       SuperscriptBox["z", "2"], 
       SuperscriptBox["t", "2"]]}], ")"}], "2"]]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.956071458232395*^9, 3.95607157461969*^9}, 
   3.956071614113106*^9, 3.956071706072403*^9, 3.9560722279357224`*^9, {
   3.956072294644102*^9, 3.956072296598723*^9}},
 CellLabel->
  "Out[259]=",ExpressionUUID->"fdbf01bd-fee7-4f84-942b-b1646913e996"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq7a", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq7a", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"lineToMetric", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"eq1", " ", "/.", " ", "eq1a"}], " ", "/.", " ", 
               "eq4"}], " ", "/.", " ", "eq5"}], " ", "/.", 
             RowBox[{"(", " ", 
              RowBox[{"eq6", " ", "/.", " ", 
               RowBox[{"Equal", "\[Rule]", " ", "Rule"}]}], " ", ")"}]}], " ",
             "/.", " ", 
            RowBox[{"(", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"Dt", "[", " ", "eq6", " ", "]"}], "  ", "/.", " ", 
               "dtReplace"}], "  ", "/.", " ", 
              RowBox[{"Equal", "\[Rule]", " ", "Rule"}]}], " ", ")"}]}], " ", 
           ",", " ", 
           RowBox[{"{", 
            RowBox[{"dt", ",", "dr", ",", "d\[Phi]", ",", "dz"}], "}"}]}], 
          "]"}], " ", "//", " ", "Expand"}], " ", "//", " ", "Simplify"}], 
       "  ", ")"}], " ", "//", " ", "PowerExpand"}], " ", "//", " ", 
     "Expand"}], "  ", "//", " ", "Simplify"}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq7a", " ", "//", " ", "MatrixForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.956071630576482*^9, 3.95607165975238*^9}, {
   3.956071729576838*^9, 3.956071755829853*^9}, {3.956071914156814*^9, 
   3.956072017614862*^9}, {3.956072110991699*^9, 3.9560721574330187`*^9}, 
   3.9560722946458883`*^9, {3.956072729168404*^9, 3.95607272975309*^9}, {
   3.956072887616796*^9, 
   3.9560729352277527`*^9}},ExpressionUUID->"7fdb3c6c-5c41-49d2-97c0-\
5a261390aebe"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["t", "4"], "+", 
         RowBox[{
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["z", "2"]}], "-", 
         RowBox[{
          SuperscriptBox["t", "2"], " ", 
          SuperscriptBox["z", "2"]}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["t", "2"], "-", 
           SuperscriptBox["z", "2"]}], ")"}], "2"]]}], "0", "0", 
      FractionBox[
       RowBox[{"t", " ", "z", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["r", "2"], "+", 
          SuperscriptBox["t", "2"], "-", 
          SuperscriptBox["z", "2"]}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["t", "2"], "-", 
          SuperscriptBox["z", "2"]}], ")"}], "2"]]},
     {"0", "1", "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["t", "2"]}], "+", 
       SuperscriptBox["z", "2"]}], "0"},
     {
      FractionBox[
       RowBox[{"t", " ", "z", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["r", "2"], "+", 
          SuperscriptBox["t", "2"], "-", 
          SuperscriptBox["z", "2"]}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["t", "2"], "-", 
          SuperscriptBox["z", "2"]}], ")"}], "2"]], "0", "0", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["r", "2"]}], " ", 
         SuperscriptBox["t", "2"]}], "-", 
        RowBox[{
         SuperscriptBox["t", "2"], " ", 
         SuperscriptBox["z", "2"]}], "+", 
        SuperscriptBox["z", "4"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["t", "2"], "-", 
          SuperscriptBox["z", "2"]}], ")"}], "2"]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.9560716387421494`*^9, 3.956071660381835*^9}, {
   3.956071718903524*^9, 3.956071756645411*^9}, {3.95607196987047*^9, 
   3.956072018156526*^9}, {3.9560721157095833`*^9, 3.956072157810871*^9}, 
   3.956072231741261*^9, {3.9560722946462927`*^9, 3.956072296639634*^9}, 
   3.95607273083528*^9, 3.956072931605695*^9},
 CellLabel->
  "Out[284]//MatrixForm=",ExpressionUUID->"55292f4c-4f54-4f8b-991d-\
dd8b59f12b77"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq8", "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq8", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   SuperscriptBox["t", "2"], " ", "==", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"r", "+", "a"}], ")"}], "2"], " ", "+", " ", 
    SuperscriptBox["z", "2"]}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.956072941138989*^9, 3.95607296920294*^9}},
 CellLabel->
  "In[285]:=",ExpressionUUID->"597eb502-1b1f-4356-aa4d-aa34b4e1abe5"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["t", "2"], "\[Equal]", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"a", "+", "r"}], ")"}], "2"], "+", 
   SuperscriptBox["z", "2"]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.9560729708024473`*^9},
 CellLabel->
  "Out[286]=",ExpressionUUID->"0f8514f5-940f-4f53-af80-03cec1d1b097"],

Cell[BoxData[{"eq8", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", " ", 
   RowBox[{"eq8", " ", "/.", " ", 
    RowBox[{"a", "->", " ", "0"}]}], "  ", ")"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{"eq8", " ", "/.", " ", 
        RowBox[{"a", "->", " ", "0"}]}], "  ", ")"}], ",", "t"}], " ", "]"}], 
    "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "eq7b", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq7b", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"eq7a", "  ", "/.", " ", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{"(", " ", 
           RowBox[{"eq8", " ", "/.", " ", 
            RowBox[{"a", "->", " ", "0"}]}], "  ", ")"}], ",", "t"}], " ", 
         "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], " ", "//", " ", "Expand"}], " ", "//",
     " ", "Simplify"}]}], "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq7b", " ", "//", " ", "MatrixForm", " "}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.956072978565428*^9, 3.956073051722118*^9}, {
  3.956073107371789*^9, 3.956073166262306*^9}, {3.9560732373191967`*^9, 
  3.956073250909156*^9}},
 CellLabel->
  "In[329]:=",ExpressionUUID->"f3764092-4e87-41ca-aaa7-10464b61f4a0"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["t", "2"], "\[Equal]", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"a", "+", "r"}], ")"}], "2"], "+", 
   SuperscriptBox["z", "2"]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.956072983503924*^9, 3.9560730521024637`*^9}, {
   3.956073109261697*^9, 3.956073166907206*^9}, 3.9560732515404177`*^9},
 CellLabel->
  "Out[329]=",ExpressionUUID->"08dcf083-3de1-4e32-abc0-a675da54a60a"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["t", "2"], "\[Equal]", 
  RowBox[{
   SuperscriptBox["r", "2"], "+", 
   SuperscriptBox["z", "2"]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.956072983503924*^9, 3.9560730521024637`*^9}, {
   3.956073109261697*^9, 3.956073166907206*^9}, 3.95607325154797*^9},
 CellLabel->
  "Out[330]=",ExpressionUUID->"7fc37f45-39f5-41dc-b68e-a422321a012f"],

Cell[BoxData[
 RowBox[{"t", "\[Rule]", 
  SqrtBox[
   RowBox[{
    SuperscriptBox["r", "2"], "+", 
    SuperscriptBox["z", "2"]}]]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.956072983503924*^9, 3.9560730521024637`*^9}, {
   3.956073109261697*^9, 3.956073166907206*^9}, 3.956073251552582*^9},
 CellLabel->
  "Out[331]=",ExpressionUUID->"3ad2ac0d-797d-4154-9f17-4229162f6da7"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["z", "2"]}], 
        SuperscriptBox["r", "2"]]}], "0", "0", 
      FractionBox[
       RowBox[{"2", " ", "z", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["r", "2"], "+", 
          SuperscriptBox["z", "2"]}]]}], 
       SuperscriptBox["r", "2"]]},
     {"0", "1", "0", "0"},
     {"0", "0", 
      RowBox[{"-", 
       SuperscriptBox["r", "2"]}], "0"},
     {
      FractionBox[
       RowBox[{"2", " ", "z", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["r", "2"], "+", 
          SuperscriptBox["z", "2"]}]]}], 
       SuperscriptBox["r", "2"]], "0", "0", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["z", "2"]}], 
        SuperscriptBox["r", "2"]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.956072983503924*^9, 3.9560730521024637`*^9}, {
   3.956073109261697*^9, 3.956073166907206*^9}, 3.956073251557404*^9},
 CellLabel->
  "Out[334]//MatrixForm=",ExpressionUUID->"f725e3f4-44c2-4220-87c2-\
70b50c3a47aa"],

Cell[BoxData[
 RowBox[{"?", "PowerExpand "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.9560717911691837`*^9, 3.956071793432818*^9}, 
   3.956072294646467*^9},
 CellLabel->
  "In[261]:=",ExpressionUUID->"41c619f2-8c2d-4dfb-8dd8-a8339d3f54ea"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/PowerExpand",
              ButtonNote->"paclet:ref/PowerExpand"],
             "\"paclet:ref/PowerExpand\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PowerExpand\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) expands all powers of \
products and powers. \\n\\!\\(\\*RowBox[{\\\"PowerExpand\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) expands only with respect to the \
variables \\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/PowerExpand", 
                    "paclet:ref/PowerExpand", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/PowerExpand.\
html"], None}, "http://reference.wolfram.com/language/ref/PowerExpand.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"Assumptions", "\[Rule]", "Automatic"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`PowerExpand\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/PowerExpand",
              ButtonNote->"paclet:ref/PowerExpand"],
             "\"paclet:ref/PowerExpand\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PowerExpand\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) expands all powers of \
products and powers. \\n\\!\\(\\*RowBox[{\\\"PowerExpand\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) expands only with respect to the \
variables \\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"PowerExpand\", \"[\", StyleBox[\"expr\", \"TI\"], \
\"]\"}]\) expands all powers of products and powers. \n\
\!\(\*RowBox[{\"PowerExpand\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\
\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"1\
\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) \
expands only with respect to the variables \!\(\*SubscriptBox[StyleBox[\"x\", \
\"TI\"], StyleBox[\"i\", \"TI\"]]\).", 
    "Documentation" -> <|
     "Local" -> "paclet:ref/PowerExpand", "Web" -> 
      "http://reference.wolfram.com/language/ref/PowerExpand.html"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> {Assumptions -> Automatic}, 
    "Attributes" -> {Protected}, "FullName" -> "System`PowerExpand"|>, 
   False]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.956071793894137*^9, {3.956072294646844*^9, 3.9560722967473497`*^9}},
 CellLabel->
  "Out[261]=",ExpressionUUID->"fbf85b0e-41a5-4628-8cba-d217b3caa8c5"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Construction of Null Tetrad For Metric 1 and Check of Orthogonality\
\>", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.82546105660363*^9, {3.825461087825205*^9, 3.825461112194911*^9}, {
   3.825462038313486*^9, 
   3.825462045207341*^9}},ExpressionUUID->"625239a4-5b4e-4de5-af3b-\
30109802b935"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[ScriptL]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[ScriptL]", "=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"\[Psi]", "-", "\[Gamma]"}], "]"}], " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}]}], " ", "/.", " ", 
   "eq1a", " "}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.820933371686145*^9, 3.82093337715728*^9}, 
   3.8209374103413973`*^9, 3.820944472322248*^9, {3.825460845846662*^9, 
   3.825460872291072*^9}, {3.825461034932344*^9, 3.8254610370912457`*^9}, 
   3.8254610878253613`*^9},
 CellLabel->
  "In[128]:=",ExpressionUUID->"3716b802-0749-4437-9f5b-f4f15c6a7359"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"\[Gamma]", "[", 
       RowBox[{"R", ",", "T"}], "]"}]}], "+", 
     RowBox[{"\[Psi]", "[", 
      RowBox[{"R", ",", "T"}], "]"}]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"\[Gamma]", "[", 
       RowBox[{"R", ",", "T"}], "]"}]}], "+", 
     RowBox[{"\[Psi]", "[", 
      RowBox[{"R", ",", "T"}], "]"}]}]], ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.820933237654937*^9, 3.820933379685409*^9, 3.820933448095758*^9, 
   3.820937410341577*^9, 3.820944472322352*^9, 3.8243816284850473`*^9, 
   3.82438185652029*^9, 3.824511849396772*^9, 3.82451417433105*^9, 
   3.825460873690165*^9, {3.82546102353298*^9, 3.825461037411422*^9}, 
   3.8254610878257723`*^9, 3.8254620089444532`*^9, 3.9560713564217587`*^9},
 CellLabel->
  "Out[129]=",ExpressionUUID->"b0d2259d-cdc9-4d5f-934c-ca32fcae3f3a"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[ScriptN]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[ScriptN]", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"Exp", "[", 
     RowBox[{"\[Psi]", "-", "\[Gamma]"}], "]"}], " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}]}], "/.", " ", "eq1a", 
   " "}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.820933298406392*^9, 3.820933313508857*^9}, 
   3.820937410341757*^9, 3.820944472322452*^9, {3.825460882091905*^9, 
   3.825460890731036*^9}, 3.825461042306086*^9, 3.8254610878259172`*^9},
 CellLabel->
  "In[130]:=",ExpressionUUID->"adbdec12-70f8-41d5-9ea2-6e717835f84e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"\[Gamma]", "[", 
        RowBox[{"R", ",", "T"}], "]"}]}], "+", 
      RowBox[{"\[Psi]", "[", 
       RowBox[{"R", ",", "T"}], "]"}]}]]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"\[Gamma]", "[", 
        RowBox[{"R", ",", "T"}], "]"}]}], "+", 
      RowBox[{"\[Psi]", "[", 
       RowBox[{"R", ",", "T"}], "]"}]}]]}], ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.820933313826449*^9, 3.820933381335147*^9, 3.820933448122315*^9, 
   3.820937410341963*^9, 3.820944472322535*^9, 3.8243816285060167`*^9, 
   3.824381856534606*^9, 3.824511849423729*^9, 3.8245141743647127`*^9, 
   3.8254608914335012`*^9, {3.825461023544611*^9, 3.82546104290088*^9}, 
   3.8254610878261843`*^9, 3.825462008955656*^9, 3.956071356451157*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"e471b14b-166f-486c-839d-36fc192ac971"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[ScriptM]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[ScriptM]", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     SqrtBox["2"]], 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", " ", 
      RowBox[{
       SuperscriptBox["R", 
        RowBox[{"-", "1"}]], " ", 
       RowBox[{"Exp", "[", "\[Psi]", "]"}]}], " ", ",", " ", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", "\[Psi]"}], "]"}]}]}], "}"}]}], "/.", " ", "eq1a", 
   " "}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.820933317854281*^9, 3.8209333396620893`*^9}, 
   3.820937410342205*^9, 3.820944472322617*^9, {3.825460901188136*^9, 
   3.825460931611164*^9}, 3.8254610453300047`*^9, 3.825461087826323*^9},
 CellLabel->
  "In[132]:=",ExpressionUUID->"65452466-46a6-4ae8-a0c3-d4d0e4aeac16"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", 
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[Psi]", "[", 
      RowBox[{"R", ",", "T"}], "]"}]], 
    RowBox[{
     SqrtBox["2"], " ", "R"}]], ",", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       RowBox[{"\[Psi]", "[", 
        RowBox[{"R", ",", "T"}], "]"}]}]]}], 
    SqrtBox["2"]]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.820933339966406*^9, 3.8209333835387917`*^9, 3.8209334481343927`*^9, 
   3.82093741034233*^9, 3.820944472322708*^9, 3.8243816285481443`*^9, 
   3.824381856569952*^9, 3.824511849437441*^9, 3.8245141743819103`*^9, 
   3.825460932601921*^9, {3.825461023561533*^9, 3.825461045986712*^9}, 
   3.8254610878265877`*^9, 3.8254620089916143`*^9, 3.956071356464055*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"8dec9ea2-c1c3-4c32-9f51-356ae9bc0926"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[ScriptM]bar", "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[ScriptM]bar", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     SqrtBox["2"]], 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", " ", 
      RowBox[{
       SuperscriptBox["R", 
        RowBox[{"-", "1"}]], " ", 
       RowBox[{"Exp", "[", "\[Psi]", "]"}]}], " ", ",", " ", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", "\[Psi]"}], "]"}]}]}], "}"}]}], "/.", " ", "eq1a", 
   " "}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.820933342941945*^9, 3.8209333673030777`*^9}, 
   3.820937410342538*^9, 3.820944472322826*^9, {3.825460941204159*^9, 
   3.825460946091731*^9}, 3.825461048337532*^9, 3.8254610878267384`*^9},
 CellLabel->
  "In[134]:=",ExpressionUUID->"d1953b16-cf7e-4da1-ad19-cf12e9173be3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", 
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[Psi]", "[", 
      RowBox[{"R", ",", "T"}], "]"}]], 
    RowBox[{
     SqrtBox["2"], " ", "R"}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"R", ",", "T"}], "]"}]}]]}], 
     SqrtBox["2"]]}]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.820933367920988*^9, 3.820933385725149*^9}, 
   3.82093344816428*^9, 3.820937410342681*^9, 3.820944472322927*^9, 
   3.824381628567217*^9, 3.824381856586792*^9, 3.824511849465397*^9, 
   3.824514174420451*^9, 3.82546094653951*^9, {3.825461023572341*^9, 
   3.825461049046905*^9}, 3.825461087827017*^9, 3.8254620090029697`*^9, 
   3.956071356494378*^9},
 CellLabel->
  "Out[135]=",ExpressionUUID->"de1ef6b1-c8d0-4795-99ef-2aa3d961ff6f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Always", " ", "check", " ", "if", " ", "indices", " ", "needed", " ", 
    "are", " ", "up", " ", "or", " ", "down"}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"l", " ", "=", " ", 
    RowBox[{"ToTensor", "[", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<NewTensor\>\"", " ", ",", " ", "\"\<l\>\""}], "}"}], " ", 
      ",", " ", 
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", "\[ScriptL]", " ", ",", 
      " ", 
      RowBox[{"{", "\[Mu]", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"n", " ", "=", " ", 
    RowBox[{"ToTensor", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<NewTensor\>\"", " ", ",", " ", "\"\<n\>\""}], " ", "}"}], 
      " ", ",", " ", 
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", "\[ScriptN]", " ", ",", 
      " ", 
      RowBox[{"{", "\[Mu]", "}"}]}], " ", "]"}]}], " ", "\[IndentingNewLine]", 
   RowBox[{"m", " ", "=", " ", 
    RowBox[{"ToTensor", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<NewTensor\>\"", " ", ",", " ", "\"\<m\>\""}], " ", "}"}], 
      " ", ",", " ", 
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", "\[ScriptM]", " ", ",", 
      " ", 
      RowBox[{"{", "\[Mu]", "}"}]}], " ", "]"}]}], " ", "\[IndentingNewLine]", 
   RowBox[{"mbar", " ", "=", " ", 
    RowBox[{"ToTensor", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<NewTensor\>\"", " ", ",", " ", "\"\<mbar\>\""}], " ", 
       "}"}], " ", ",", " ", 
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", "\[ScriptM]bar", " ", 
      ",", " ", 
      RowBox[{"{", "\[Mu]", "}"}]}], " ", "]"}], " "}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.820937410342936*^9, 3.8209444723230133`*^9, 
  3.825461087827265*^9},
 CellLabel->
  "In[136]:=",ExpressionUUID->"479aeacd-d7e9-4b38-b0f4-028355b81be9"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["l", "", "\[Mu]"],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.820932775640643*^9, 3.820933448175404*^9, 
  3.82093741034304*^9, 3.820944472323167*^9, 3.824381628607512*^9, 
  3.824381856622077*^9, 3.824511849476097*^9, 3.824514174436861*^9, 
  3.82546102361543*^9, 3.825461087827609*^9, 3.825462009043186*^9, 
  3.956071356507337*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"e9615d80-abda-4709-a70a-e812b81c9232"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["n", "", "\[Mu]"],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.820932775640643*^9, 3.820933448175404*^9, 
  3.82093741034304*^9, 3.820944472323167*^9, 3.824381628607512*^9, 
  3.824381856622077*^9, 3.824511849476097*^9, 3.824514174436861*^9, 
  3.82546102361543*^9, 3.825461087827609*^9, 3.825462009043186*^9, 
  3.9560713565128517`*^9},
 CellLabel->
  "Out[137]=",ExpressionUUID->"9ab183cb-cf1b-4fc6-86f2-e5b1005c5592"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["m", "", "\[Mu]"],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.820932775640643*^9, 3.820933448175404*^9, 
  3.82093741034304*^9, 3.820944472323167*^9, 3.824381628607512*^9, 
  3.824381856622077*^9, 3.824511849476097*^9, 3.824514174436861*^9, 
  3.82546102361543*^9, 3.825461087827609*^9, 3.825462009043186*^9, 
  3.956071356516409*^9},
 CellLabel->
  "Out[138]=",ExpressionUUID->"dc01eb5e-8e41-41fb-ba01-ec2d506fa93d"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["mbar", "", "\[Mu]"],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.820932775640643*^9, 3.820933448175404*^9, 
  3.82093741034304*^9, 3.820944472323167*^9, 3.824381628607512*^9, 
  3.824381856622077*^9, 3.824511849476097*^9, 3.824514174436861*^9, 
  3.82546102361543*^9, 3.825461087827609*^9, 3.825462009043186*^9, 
  3.956071356519641*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"b5cf801c-428d-4542-b106-be7182e5c421"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"l", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"l", "[", "\[Mu]", "]"}]}], "]"}], "]"}], " ", "\[Equal]", 
     " ", "0"}], "  ", "//", " ", "Expand"}], " ", "//", " ", "Simplify"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"n", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"n", "[", "\[Mu]", "]"}]}], "]"}], " ", "]"}], "\[Equal]", 
     " ", "0"}], "   ", "//", " ", "Expand"}], " ", "//", " ", "Simplify"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"m", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"m", "[", "\[Mu]", "]"}]}], "]"}], "]"}], " ", "\[Equal]", 
     " ", "0"}], "   ", "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"mbar", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"mbar", "[", "\[Mu]", "]"}]}], "]"}], "]"}], " ", "\[Equal]", 
     " ", "0"}], "  ", "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"l", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"n", "[", "\[Mu]", "]"}]}], "]"}], "]"}], " ", "\[Equal]", 
     " ", "1"}], "//", " ", "Expand"}], " ", "//", " ", "FullSimplify"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"l", "[", "\[Mu]", "]"}], 
        RowBox[{"n", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}]}], "]"}], "]"}], " ", "\[Equal]", " ", 
     "1"}], "  ", "//", " ", "Expand"}], " ", "//", " ", "FullSimplify"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"m", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"mbar", "[", "\[Mu]", "]"}]}], "]"}], "]"}], " ", "\[Equal]", 
     " ", 
     RowBox[{"-", " ", "1"}]}], " ", "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"m", "[", "\[Mu]", "]"}], 
        RowBox[{"mbar", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}]}], "]"}], "]"}], " ", "\[Equal]", " ", 
     
     RowBox[{"-", " ", "1"}]}], " ", "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "completenessDownIndices", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"completenessDownIndices", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"MergeTensors", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"l", "[", 
       RowBox[{"-", "\[Mu]"}], "]"}], 
      RowBox[{"n", "[", 
       RowBox[{"-", "\[Nu]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"n", "[", 
       RowBox[{"-", "\[Mu]"}], "]"}], 
      RowBox[{"l", "[", 
       RowBox[{"-", "\[Nu]"}], "]"}]}], " ", "-", " ", 
     RowBox[{
      RowBox[{"m", "[", 
       RowBox[{"-", "\[Mu]"}], "]"}], 
      RowBox[{"mbar", "[", 
       RowBox[{"-", "\[Nu]"}], "]"}]}], "-", " ", 
     RowBox[{
      RowBox[{"m", "[", 
       RowBox[{"-", "\[Nu]"}], "]"}], 
      RowBox[{"mbar", "[", 
       RowBox[{"-", "\[Mu]"}], "]"}]}]}], "]"}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", " ", "completenessDownIndices", " ", "]"}], 
     "   ", "//", " ", "Expand"}], " ", "//", " ", "FullSimplify"}], " ", "//",
    " ", "MatrixForm"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", "metric1", "]"}], " ", "\[Equal]", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"Flatten", "[", " ", 
        RowBox[{
        "TensorValues", "[", " ", "completenessDownIndices", " ", "]"}], 
        "]"}]}], " ", "]"}], " ", "//", " ", "Expand"}], " ", "//", " ", 
    "FullSimplify"}], "  ", "//", " ", "TableForm"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "completenessUpIndices", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"completenessUpIndices", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"MergeTensors", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"l", "[", "\[Mu]", "]"}], 
      RowBox[{"n", "[", "\[Nu]", "]"}]}], "+", 
     RowBox[{
      RowBox[{"n", "[", "\[Mu]", "]"}], 
      RowBox[{"l", "[", "\[Nu]", "]"}]}], " ", "-", " ", 
     RowBox[{
      RowBox[{"m", "[", "\[Mu]", "]"}], 
      RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "-", " ", 
     RowBox[{
      RowBox[{"m", "[", "\[Nu]", "]"}], 
      RowBox[{"mbar", "[", "\[Mu]", "]"}]}]}], "]"}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", " ", "completenessUpIndices", " ", "]"}], 
     "   ", "//", " ", "Expand"}], " ", "//", " ", "FullSimplify"}], " ", "//",
    " ", "MatrixForm"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", "inverse1", "]"}], " ", "\[Equal]", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", " ", 
       RowBox[{"TensorValues", "[", " ", "completenessUpIndices", " ", "]"}], 
       "]"}]}], " ", "]"}], "  ", "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], "  ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.820937410343767*^9, 3.820944472323543*^9, {3.8237794627048893`*^9, 
   3.823779471575405*^9}, 3.823780788700976*^9, 3.82546108782915*^9, {
   3.825462014676922*^9, 3.825462019234852*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"6750ac77-280a-4471-858c-ffbb942fc379"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.825461023676552*^9, 3.8254610878293533`*^9, {3.8254620090950623`*^9, 
   3.825462019863093*^9}, 3.956071356550687*^9},
 CellLabel->
  "Out[140]=",ExpressionUUID->"1e6c553b-3e40-448f-b98b-171589bd31d9"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.825461023676552*^9, 3.8254610878293533`*^9, {3.8254620090950623`*^9, 
   3.825462019863093*^9}, 3.956071356555668*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"d9dd4caa-6507-40c9-9c5d-748594f3ce49"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.825461023676552*^9, 3.8254610878293533`*^9, {3.8254620090950623`*^9, 
   3.825462019863093*^9}, 3.9560713565596952`*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"fdb321b3-9f15-468c-b178-db837cf138df"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.825461023676552*^9, 3.8254610878293533`*^9, {3.8254620090950623`*^9, 
   3.825462019863093*^9}, 3.956071356570895*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"d41ad67e-7c83-4962-b5b3-37cd75a8dbc4"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.825461023676552*^9, 3.8254610878293533`*^9, {3.8254620090950623`*^9, 
   3.825462019863093*^9}, 3.9560713565982637`*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"9b59fefe-3581-4dde-946b-ff4790797263"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.825461023676552*^9, 3.8254610878293533`*^9, {3.8254620090950623`*^9, 
   3.825462019863093*^9}, 3.95607135660212*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"f430115f-c4e3-4ec1-b0d6-18eb63555f6c"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.825461023676552*^9, 3.8254610878293533`*^9, {3.8254620090950623`*^9, 
   3.825462019863093*^9}, 3.956071356605794*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"a8c5237b-0ff3-48a0-85a4-dec0bb3b331f"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.825461023676552*^9, 3.8254610878293533`*^9, {3.8254620090950623`*^9, 
   3.825462019863093*^9}, 3.956071356614435*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"7f23b134-7237-4b38-8126-7e00d042adf8"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Gamma]", "[", 
           RowBox[{"R", ",", "T"}], "]"}], "-", 
          RowBox[{"\[Psi]", "[", 
           RowBox[{"R", ",", "T"}], "]"}]}], ")"}]}]], "0", "0", "0"},
     {"0", 
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Gamma]", "[", 
            RowBox[{"R", ",", "T"}], "]"}], "-", 
           RowBox[{"\[Psi]", "[", 
            RowBox[{"R", ",", "T"}], "]"}]}], ")"}]}]]}], "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"\[Psi]", "[", 
           RowBox[{"R", ",", "T"}], "]"}]}]]}], " ", 
       SuperscriptBox["R", "2"]}], "0"},
     {"0", "0", "0", 
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"\[Psi]", "[", 
          RowBox[{"R", ",", "T"}], "]"}]}]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.825461023676552*^9, 3.8254610878293533`*^9, {3.8254620090950623`*^9, 
   3.825462019863093*^9}, 3.956071356711203*^9},
 CellLabel->
  "Out[150]//MatrixForm=",ExpressionUUID->"3541c543-4c56-4d9b-aa2a-\
38b6a45315e1"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.825461023676552*^9, 3.8254610878293533`*^9, {3.8254620090950623`*^9, 
   3.825462019863093*^9}, 3.956071356716222*^9},
 CellLabel->
  "Out[151]//TableForm=",ExpressionUUID->"40818065-51fa-4625-81c7-\
8e798fd7fecd"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"\[Gamma]", "[", 
          RowBox[{"R", ",", "T"}], "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"\[Psi]", "[", 
          RowBox[{"R", ",", "T"}], "]"}]}]}]], "0", "0", "0"},
     {"0", 
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"\[Gamma]", "[", 
           RowBox[{"R", ",", "T"}], "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"\[Psi]", "[", 
           RowBox[{"R", ",", "T"}], "]"}]}]}]]}], "0", "0"},
     {"0", "0", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"\[Psi]", "[", 
           RowBox[{"R", ",", "T"}], "]"}]}]], 
        SuperscriptBox["R", "2"]]}], "0"},
     {"0", "0", "0", 
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"\[Psi]", "[", 
          RowBox[{"R", ",", "T"}], "]"}]}]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.825461023676552*^9, 3.8254610878293533`*^9, {3.8254620090950623`*^9, 
   3.825462019863093*^9}, 3.956071356771468*^9},
 CellLabel->
  "Out[154]//MatrixForm=",ExpressionUUID->"c2f30294-02ec-49cb-b04c-\
cea6383df524"],

Cell[BoxData[
 TagBox["True",
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.825461023676552*^9, 3.8254610878293533`*^9, {3.8254620090950623`*^9, 
   3.825462019863093*^9}, 3.956071356777012*^9},
 CellLabel->
  "Out[155]//TableForm=",ExpressionUUID->"fd927781-a56b-4d2c-902d-\
5485eadb0dbb"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Calculation of Newman Penrose Quantities : Spin Coefficients, Ricci Scalars, \
Weyl Scalars For Metric 1\
\>", "Section",
 CellChangeTimes->{{3.825462703232397*^9, 
  3.825462723615986*^9}},ExpressionUUID->"40ff97dc-650d-4362-9207-\
4ae9426275d5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "spinCoefficientReplace", "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spinCoefficientReplace", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Alpha]", "\[Rule]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "/", "2"}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MergeTensors", "[", 
               RowBox[{
                RowBox[{"CovariantD", "[", " ", 
                 RowBox[{
                  RowBox[{"l", "[", 
                   RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                  RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                RowBox[{"n", "[", "\[Mu]", "]"}], " ", 
                RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
              "TensorValues"}], " ", ")"}], "-", "\[IndentingNewLine]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MergeTensors", "[", 
               RowBox[{
                RowBox[{"CovariantD", "[", " ", 
                 RowBox[{
                  RowBox[{"m", "[", 
                   RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                  RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
                RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
              "TensorValues"}], ")"}]}], ")"}]}], " ", ")"}]}], " ", "//", 
       "Expand"}], " ", "//", " ", "Simplify"}], "  ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Beta]", " ", "\[Rule]", " ", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "/", "2"}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MergeTensors", "[", " ", 
               RowBox[{
                RowBox[{"CovariantD", "[", " ", 
                 RowBox[{
                  RowBox[{"l", "[", 
                   RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                  RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                RowBox[{"n", "[", "\[Mu]", "]"}], 
                RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
              "TensorValues"}], ")"}], "-", " ", "\[IndentingNewLine]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MergeTensors", "[", 
               RowBox[{
                RowBox[{"CovariantD", "[", " ", 
                 RowBox[{
                  RowBox[{"m", "[", 
                   RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                  RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
                RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
              "TensorValues"}], " ", ")"}]}], ")"}]}], ")"}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "Simplify"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Gamma]", " ", "\[Rule]", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "something", " ", "weird", " ", "here", " ", "correct", " ", 
          "definition", " ", "off", " ", "by", " ", "minus", " ", "sign"}], 
         " ", "*)"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            FractionBox["1", "2"], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"MergeTensors", "[", 
                 RowBox[{
                  RowBox[{"CovariantD", "[", " ", 
                   RowBox[{
                    RowBox[{"l", "[", 
                    RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                    RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                  RowBox[{"n", "[", "\[Mu]", "]"}], 
                  RowBox[{"n", "[", "\[Nu]", "]"}]}], " ", "]"}], " ", "//", 
                " ", "TensorValues"}], "  ", "//", " ", "Expand"}], "  ", 
              ")"}], "-", "\[IndentingNewLine]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"MergeTensors", "[", 
                  RowBox[{
                   RowBox[{"CovariantD", "[", " ", 
                    RowBox[{
                    RowBox[{"m", "[", 
                    RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                    RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                   RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
                   RowBox[{"n", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
                 "TensorValues"}], " ", "//", " ", "Expand"}], "  ", "//", 
               " ", "FullSimplify"}], " ", ")"}]}], ")"}]}], " ", "//", " ", 
          "Expand"}], " ", ")"}]}], "  ", "//", " ", "Expand"}], " ", "//", 
      " ", "Simplify"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CurlyEpsilon]", " ", "\[Rule]", " ", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", "2"}], ")"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"MergeTensors", "[", 
                   RowBox[{
                    RowBox[{"CovariantD", "[", 
                    RowBox[{
                    RowBox[{"l", "[", 
                    RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                    RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                    RowBox[{"n", "[", "\[Mu]", "]"}], " ", 
                    RowBox[{"l", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ",
                   "TensorValues"}], "  ", "//", " ", "Expand"}], "  ", "//", 
                " ", "FullSimplify"}], "  ", ")"}], "  ", "-", " ", 
              "\[IndentingNewLine]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"MergeTensors", "[", " ", 
                   RowBox[{
                    RowBox[{"CovariantD", "[", " ", 
                    RowBox[{
                    RowBox[{"m", "[", 
                    RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                    RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                    RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
                    RowBox[{"l", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ",
                   "TensorValues"}], " ", "//", " ", "Expand"}], " ", "//", 
                " ", "FullSimplify"}], ")"}]}], " ", ")"}]}], " ", "//", " ", 
           "Expand"}], "  ", "//", " ", "FullSimplify"}], " ", ")"}]}], " ", "//",
        " ", "Expand"}], " ", "//", " ", "Simplify"}], "  ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Kappa]", "\[Rule]", 
        RowBox[{"(", "  ", 
         RowBox[{
          RowBox[{"MergeTensors", "[", " ", 
           RowBox[{
            RowBox[{"CovariantD", "[", " ", 
             RowBox[{
              RowBox[{"l", "[", 
               RowBox[{"-", "\[Mu]"}], "]"}], " ", ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
            RowBox[{"m", "[", "\[Mu]", "]"}], " ", 
            RowBox[{"l", "[", "\[Nu]", "]"}]}], "  ", "]"}], "  ", "//", " ", 
          "TensorValues"}], " ", ")"}]}], "  ", "//", " ", "Expand"}], " ", "//",
       " ", "Simplify"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]", "\[Rule]", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"note", " ", "minus", " ", "sign"}], " ", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "*", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"MergeTensors", "[", " ", 
            RowBox[{
             RowBox[{"CovariantD", "[", " ", 
              RowBox[{
               RowBox[{"n", "[", 
                RowBox[{"-", "\[Mu]"}], "]"}], ",", 
               RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
             RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
             RowBox[{"mbar", "[", "\[Nu]", "]"}]}], " ", "]"}], "  ", "//", 
           " ", "TensorValues"}], " ", "//", " ", "Expand"}], " ", "//", " ", 
         "FullSimplify"}], ")"}]}]}], "  ", ",", "\[IndentingNewLine]", 
     RowBox[{"\[Mu]", "\[Rule]", " ", 
      RowBox[{"(*", 
       RowBox[{"note", " ", "minus", " ", "sign"}], " ", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "*", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"MergeTensors", " ", "[", " ", 
            RowBox[{
             RowBox[{"CovariantD", "[", " ", 
              RowBox[{
               RowBox[{"n", "[", 
                RowBox[{"-", "\[Mu]"}], "]"}], " ", ",", " ", 
               RowBox[{"-", "\[Nu]"}]}], " ", "]"}], " ", 
             RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
             RowBox[{"m", "[", "\[Nu]", "]"}]}], " ", "]"}], " ", "//", " ", 
           "TensorValues"}], "  ", "//", " ", "Expand"}], "  ", "//", " ", 
         "FullSimplify"}], " ", ")"}]}]}], "  ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Nu]", "\[Rule]", " ", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"MergeTensors", "[", " ", 
           RowBox[{
            RowBox[{"CovariantD", "[", " ", 
             RowBox[{
              RowBox[{"n", "[", 
               RowBox[{"-", "\[Mu]"}], "]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"m", "[", "\[Mu]", "]"}], " ", 
            RowBox[{"n", "[", "\[Nu]", "]"}]}], " ", "]"}], " ", "//", " ", 
          "TensorValues"}], " ", ")"}]}], " ", "//", " ", "Expand"}], " ", "//",
       " ", "Simplify"}], "  ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"\[Pi]", "\[Rule]", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"Note", " ", "minus", " ", "sign"}], " ", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "*", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"MergeTensors", "[", 
            RowBox[{
             RowBox[{"CovariantD", "[", " ", 
              RowBox[{
               RowBox[{"n", "[", 
                RowBox[{"-", "\[Mu]"}], "]"}], ",", 
               RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
             RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
             RowBox[{"l", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
           "TensorValues"}], "  ", "//", " ", "Expand"}], "  ", "//", " ", 
         "Simplify"}], " ", ")"}]}]}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"\[Rho]", " ", "\[Rule]", 
      RowBox[{"(", "  ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"MergeTensors", "[", " ", 
           RowBox[{
            RowBox[{"CovariantD", "[", " ", 
             RowBox[{
              RowBox[{"l", "[", 
               RowBox[{"-", "\[Mu]"}], "]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
            RowBox[{"m", "[", "\[Mu]", "]"}], " ", 
            RowBox[{"mbar", "[", "\[Nu]", "]"}]}], " ", "]"}], " ", "//", " ",
           "TensorValues"}], "  ", "//", " ", "Expand"}], " ", "//", " ", 
        "FullSimplify"}], " ", ")"}]}], "  ", ",", " ", 
     RowBox[{"\[Sigma]", "\[Rule]", 
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"MergeTensors", "[", " ", 
           RowBox[{
            RowBox[{"CovariantD", "[", 
             RowBox[{
              RowBox[{"l", "[", 
               RowBox[{"-", "\[Mu]"}], "]"}], " ", ",", " ", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
            RowBox[{"m", "[", "\[Mu]", "]"}], " ", 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
          "TensorValues"}], "  ", "//", " ", "Expand"}], " ", "//", " ", 
        "FullSimplify"}], ")"}]}], "  ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"\[Tau]", "\[Rule]", 
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"MergeTensors", "[", " ", 
           RowBox[{
            RowBox[{"CovariantD", "[", " ", 
             RowBox[{
              RowBox[{"l", "[", 
               RowBox[{"-", "\[Mu]"}], "]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
            RowBox[{"m", "[", "\[Mu]", "]"}], " ", 
            RowBox[{"n", "[", "\[Nu]", " ", "]"}]}], "]"}], "//", " ", 
          "TensorValues"}], " ", "//", " ", "Expand"}], " ", "//", " ", 
        "Simplify"}], "  ", ")"}]}]}], "   ", "\[IndentingNewLine]", "}"}]}], 
  " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spinCoefficientReplace", "   ", "//", " ", "TableForm"}], " ", "//",
   " ", "pdConv"}]}], "Input",
 CellChangeTimes->{
  3.820667112307205*^9, {3.820691856877*^9, 3.8206918635710173`*^9}, {
   3.820692627802567*^9, 3.820692798874284*^9}, {3.820793246159666*^9, 
   3.8207932735596313`*^9}, {3.820933088885683*^9, 3.820933089524383*^9}, 
   3.820934520109788*^9, 3.8209373342691517`*^9, {3.82100327861626*^9, 
   3.8210032838458157`*^9}, {3.821003386912135*^9, 3.821003405643714*^9}, {
   3.8210037363804407`*^9, 3.8210037487041388`*^9}, {3.82437982699832*^9, 
   3.824379841631565*^9}, {3.824382108710671*^9, 3.8243821568691874`*^9}, 
   3.825462738803863*^9},
 CellLabel->
  "In[156]:=",ExpressionUUID->"dafc1e34-8f32-4056-8c31-094c2674a9aa"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{"\[Alpha]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Beta]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Gamma]", "\[Rule]", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}], "-", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "R"}],
            MultilineFunction->None], "-", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "T"}],
            MultilineFunction->None], "-", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "R"}],
            MultilineFunction->None], "+", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "T"}],
            MultilineFunction->None]}], ")"}]}]}]},
      {
       RowBox[{"\[CurlyEpsilon]", "\[Rule]", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}], "-", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "R"}],
            MultilineFunction->None], "+", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "T"}],
            MultilineFunction->None], "-", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "R"}],
            MultilineFunction->None], "-", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], 
            RowBox[{"\[PartialD]", "T"}],
            MultilineFunction->None]}], ")"}]}]}]},
      {
       RowBox[{"\[Kappa]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Lambda]", "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}], "-", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"2", " ", "R", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None]}]}], "+", 
             RowBox[{"2", " ", "R", " ", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "T"}],
               MultilineFunction->None]}], "+", "1"}], ")"}]}], 
          RowBox[{"4", " ", "R"}]]}]}]},
      {
       RowBox[{"\[Mu]", "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}], "-", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}]], 
          RowBox[{"4", " ", "R"}]]}]}]},
      {
       RowBox[{"\[Nu]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Pi]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Rho]", "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}], "-", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}]], 
          RowBox[{"2", " ", "R"}]]}]}]},
      {
       RowBox[{"\[Sigma]", "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}], "-", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "R", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], "+", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], ")"}]}], "-", "1"}], ")"}]}], 
         RowBox[{"2", " ", "R"}]]}]},
      {
       RowBox[{"\[Tau]", "\[Rule]", "0"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{3.8254620686311893`*^9, 3.956071358946886*^9},
 CellLabel->
  "Out[158]//TraditionalForm=",ExpressionUUID->"ad208614-ac82-4622-8fd5-\
53dc9bd04d33"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "ricciScalarsReplace", "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ricciScalarsReplace", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "OO"], "\[Rule]", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"could", " ", "use", " ", "invisible", " ", "comma"}], ",", 
          " ", 
          RowBox[{
          "but", " ", "shows", " ", "up", " ", "in", " ", "output", " ", "so",
            " ", "use", " ", "letter", " ", "O"}]}], "  ", "*)"}], " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Mu]", "]"}], 
            RowBox[{"l", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "O1"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Mu]", "]"}], 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "O2"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"m", "[", "\[Mu]", "]"}], 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "10"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Mu]", "]"}], 
            RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "  ", "//",
        " ", "Expand"}], " ", "//", " ", "Simplify"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "11"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "4"], ")"}], "*", 
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{"TensorValues", "[", 
             RowBox[{"MergeTensors", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"tensorList", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], "[", 
                RowBox[{
                 RowBox[{"-", "\[Mu]"}], ",", 
                 RowBox[{"-", "\[Nu]"}]}], "]"}], 
               RowBox[{"l", "[", "\[Mu]", "]"}], 
               RowBox[{"n", "[", "\[Nu]", "]"}]}], "]"}], "]"}], ")"}], "+", 
           " ", 
           RowBox[{"(", 
            RowBox[{"TensorValues", "[", 
             RowBox[{"MergeTensors", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"tensorList", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], "[", 
                RowBox[{
                 RowBox[{"-", "\[Mu]"}], ",", 
                 RowBox[{"-", "\[Nu]"}]}], "]"}], 
               RowBox[{"m", "[", "\[Mu]", "]"}], 
               RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], "]"}], ")"}]}], 
          ")"}]}]}], " ", "//", " ", "Expand"}], " ", "//", " ", 
      "FullSimplify"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "12"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"n", "[", "\[Mu]", "]"}], 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "20"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"mbar", "[", "\[Mu]", "]"}], 
            RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", 
       " ", "Expand"}], " ", "//", " ", "Simplify"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "21"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"n", "[", "\[Mu]", "]"}], 
            RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "  ", "//",
        " ", "Expand"}], " ", "//", " ", "Simplify"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "22"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"n", "[", "\[Mu]", "]"}], 
            RowBox[{"n", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", " ", 
       "Expand"}], " ", "//", " ", "FullSimplify"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalLambda]", "\[Rule]", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox["1", "24"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"tensorList", "[", 
           RowBox[{"[", "5", "]"}], "]"}], "]"}]}]}], "//", " ", "Expand"}], 
      " ", "//", " ", "FullSimplify"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ricciScalarsReplace", "   ", "//", " ", "TableForm"}], " ", "//", 
  " ", "pdConv"}]}], "Input",
 CellChangeTimes->{{3.8207941683808823`*^9, 3.820794170188884*^9}, {
   3.820794210004217*^9, 3.820794295371916*^9}, {3.820794355374641*^9, 
   3.8207944173021507`*^9}, {3.8209358220143003`*^9, 3.820935854138783*^9}, 
   3.820937334270711*^9, {3.821003405651829*^9, 3.821003467622817*^9}, {
   3.821003736380765*^9, 3.821003748704556*^9}, {3.824235099273512*^9, 
   3.824235208081946*^9}, 3.825462738804455*^9},
 CellLabel->
  "In[159]:=",ExpressionUUID->"20f87851-1f96-4105-bda7-cc335632574b"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "OO"], "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None]}], "-", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None], "+", 
            RowBox[{"R", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None], "+", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], ")"}], "2"]}]}], ")"}]}], "R"]}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "O1"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "O2"], "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"R", " ", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["R", "2"]}],
               MultilineFunction->None]}]}], "+", 
            RowBox[{"R", " ", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[PartialD]", "2"], 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", 
               SuperscriptBox["T", "2"]}],
              MultilineFunction->None]}], "-", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None]}], ")"}]}], 
         RowBox[{"2", " ", "R"}]]}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "10"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "11"], "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"R", " ", 
              RowBox[{"(", 
               RowBox[{
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None], "-", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["R", "2"]}],
                 MultilineFunction->None], "+", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], ")"}]}]}], "+", 
            RowBox[{"R", " ", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[PartialD]", "2"], 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", 
               SuperscriptBox["T", "2"]}],
              MultilineFunction->None]}], "+", 
            RowBox[{"R", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], ")"}], "2"]}], "+", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None]}], ")"}]}], 
         RowBox[{"4", " ", "R"}]]}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "12"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "20"], "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"R", " ", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["R", "2"]}],
               MultilineFunction->None]}]}], "+", 
            RowBox[{"R", " ", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[PartialD]", "2"], 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", 
               SuperscriptBox["T", "2"]}],
              MultilineFunction->None]}], "-", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None]}], ")"}]}], 
         RowBox[{"2", " ", "R"}]]}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "21"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "22"], "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None]}], "+", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None], "+", 
            RowBox[{"R", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], "-", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], ")"}], "2"]}]}], ")"}]}], 
         RowBox[{"4", " ", "R"}]]}]},
      {
       RowBox[{"\[CapitalLambda]", "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"R", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None], "-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None], "-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None], "+", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "R"}],
                  MultilineFunction->None], ")"}], "2"], "-", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}], ")"}]}], "-", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None]}], ")"}]}], 
         RowBox[{"12", " ", "R"}]]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{3.82546208610192*^9, 3.956071360011909*^9},
 CellLabel->
  "Out[161]//TraditionalForm=",ExpressionUUID->"14703901-6d29-4b11-b5be-\
a8d4ade5c4fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "weylScalarsReplace", "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Definitions", " ", "from", " ", "Griffiths"}], " ", "*)"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"weylScalarsReplace", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", "   ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "0"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], ",", 
              RowBox[{"-", "\[Lambda]"}], ",", 
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Kappa]", "]"}], 
            RowBox[{"m", "[", "\[Lambda]", "]"}], 
            RowBox[{"l", "[", "\[Mu]", "]"}], 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", " ", 
       "Expand"}], " ", "//", " ", "FullSimplify"}], " ", ",", " ", "\n", 
     "\t ", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "1"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], ",", 
              RowBox[{"-", "\[Lambda]"}], ",", 
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Kappa]", "]"}], 
            RowBox[{"n", "[", "\[Lambda]", "]"}], 
            RowBox[{"l", "[", "\[Mu]", "]"}], 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", " ", 
       "Expand"}], " ", "//", " ", "FullSimplify"}], " ", ",", " ", "\n", 
     "\t ", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "2"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], ",", 
              RowBox[{"-", "\[Lambda]"}], ",", 
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Kappa]", "]"}], 
            RowBox[{"m", "[", "\[Lambda]", "]"}], 
            RowBox[{"mbar", "[", "\[Mu]", "]"}], 
            RowBox[{"n", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], ",", " ", "\n", 
     "\t ", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "3"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], ",", 
              RowBox[{"-", "\[Lambda]"}], ",", 
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"n", "[", "\[Kappa]", "]"}], 
            RowBox[{"l", "[", "\[Lambda]", "]"}], 
            RowBox[{"n", "[", "\[Mu]", "]"}], 
            RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], " ", ",", " ", "\n",
      "\t ", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "4"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], ",", 
              RowBox[{"-", "\[Lambda]"}], ",", 
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"n", "[", "\[Kappa]", "]"}], 
            RowBox[{"mbar", "[", "\[Lambda]", "]"}], 
            RowBox[{"n", "[", "\[Mu]", "]"}], 
            RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}]}], 
    "\[IndentingNewLine]", "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"weylScalarsReplace", "  ", "//", " ", "TableForm"}], " ", "//", 
  " ", "pdConv"}]}], "Input",
 CellChangeTimes->{
  3.820667112308317*^9, {3.8206919186046867`*^9, 3.820691920188485*^9}, {
   3.820794507895151*^9, 3.820794582921618*^9}, 3.820937334271385*^9, 
   3.821003405651976*^9, 3.825462738804851*^9},
 CellLabel->
  "In[162]:=",ExpressionUUID->"9ffb2104-6519-4d35-8cec-488cbb436b3e"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "0"], "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"R", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}], "+", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None], "+", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None], "+", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], "+", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "+", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], "+", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], "+", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], ")"}]}]}], ")"}]}], "+", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None]}], ")"}]}], "R"]}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "1"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "2"], "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"R", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None], "-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None], "-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None], "+", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
            RowBox[{"2", " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "R"}],
              MultilineFunction->None]}]}], ")"}]}], 
         RowBox[{"6", " ", "R"}]]}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "3"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "4"], "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"R", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"2", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None]}]}], "+", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None], "+", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None], "+", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], "-", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], "-", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], "+", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None]}], ")"}]}], 
         RowBox[{"4", " ", "R"}]]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{3.825462104707143*^9, 3.956071366233375*^9},
 CellLabel->
  "Out[164]//TraditionalForm=",ExpressionUUID->"eb2a9f42-a202-47e7-b687-\
c539c90169b2"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Reduction of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalPsi]", "2"], TraditionalForm]],ExpressionUUID->
  "e7036566-e9bf-4ab7-9c75-89aaa671178b"],
 " and Equation 41"
}], "Section",
 CellChangeTimes->{{3.825462658849497*^9, 3.825462688656942*^9}, 
   3.825462738804996*^9, {3.8254629322795057`*^9, 
   3.8254629362628317`*^9}},ExpressionUUID->"c2faef1a-8d0c-48ec-8397-\
7a24c6c02d23"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{"eq2", " ", ",", 
      RowBox[{
       SuperscriptBox["\[Psi]", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "2"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"R", ",", "T"}], "]"}]}], "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], " ", "//", " ", "pdConv"}]], "Input",
 CellChangeTimes->{{3.825462176524868*^9, 3.8254622027624817`*^9}, {
   3.8254624028284483`*^9, 3.825462424539657*^9}, 3.8254626721664553`*^9, 
   3.825462738805188*^9},
 CellLabel->
  "In[165]:=",ExpressionUUID->"2c2c26ee-fd41-4e4a-bcfe-5826ad45e2eb"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[PartialD]", "2"], 
     RowBox[{"\[Psi]", "(", 
      RowBox[{"R", ",", "T"}], ")"}]}], 
    RowBox[{"\[PartialD]", 
     SuperscriptBox["T", "2"]}],
    MultilineFunction->None], "\[Rule]", 
   FractionBox[
    RowBox[{
     RowBox[{"R", " ", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[PartialD]", "2"], 
        RowBox[{"\[Psi]", "(", 
         RowBox[{"R", ",", "T"}], ")"}]}], 
       RowBox[{"\[PartialD]", 
        SuperscriptBox["R", "2"]}],
       MultilineFunction->None]}], "+", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"R", ",", "T"}], ")"}]}], 
      RowBox[{"\[PartialD]", "R"}],
      MultilineFunction->None]}], "R"]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.825462178254059*^9, 3.825462203143939*^9}, {
   3.825462403244219*^9, 3.8254624250863113`*^9}, 3.82546267216691*^9, 
   3.825462738805294*^9, 3.9560713663092127`*^9},
 CellLabel->
  "Out[165]//TraditionalForm=",ExpressionUUID->"42eb45c7-cd62-4b7b-8888-\
f9ded9ae5457"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", " ", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"eq3a", " ", ",", "T"}], "]"}], " ", "/.", " ", 
    RowBox[{"Equal", "\[Rule]", " ", "Rule"}]}], " ", ")"}], "//", " ", 
  "pdConv"}]], "Input",
 CellChangeTimes->{{3.8254622046543503`*^9, 3.825462207026293*^9}, {
   3.825462275335662*^9, 3.8254622901662703`*^9}, {3.8254624305731573`*^9, 
   3.825462432675447*^9}, 3.8254626721670837`*^9, 3.825462738805435*^9},
 CellLabel->
  "In[166]:=",ExpressionUUID->"4851d932-9550-459f-9fc4-840e857595fd"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[PartialD]", "2"], 
     RowBox[{"\[Gamma]", "(", 
      RowBox[{"R", ",", "T"}], ")"}]}], 
    RowBox[{"\[PartialD]", 
     SuperscriptBox["T", "2"]}],
    MultilineFunction->None], "\[Rule]", 
   RowBox[{
    RowBox[{"2", " ", "R", " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"R", ",", "T"}], ")"}]}], 
      RowBox[{"\[PartialD]", "T"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"R", ",", "T"}], ")"}]}], 
      RowBox[{
       RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
       RowBox[{"\[PartialD]", "T"}]}],
      MultilineFunction->None]}], "+", 
    RowBox[{"2", " ", "R", " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"R", ",", "T"}], ")"}]}], 
      RowBox[{"\[PartialD]", "R"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"R", ",", "T"}], ")"}]}], 
      RowBox[{"\[PartialD]", 
       SuperscriptBox["T", "2"]}],
      MultilineFunction->None]}]}]}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.825462207546995*^9, {3.825462276519022*^9, 3.82546229055133*^9}, 
   3.825462432963876*^9, 3.8254626721673927`*^9, 3.8254627388055267`*^9, 
   3.956071366347794*^9},
 CellLabel->
  "Out[166]//TraditionalForm=",ExpressionUUID->"a42d5ebe-0146-442d-aabf-\
ec22edf4a659"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"eq3b", " ", ",", "R"}], "]"}], " ", "/.", " ", 
   RowBox[{"Equal", "\[Rule]", " ", "Rule"}]}], "  ", "//", " ", 
  "pdConv"}]], "Input",
 CellChangeTimes->{{3.825462209814724*^9, 3.8254622122743683`*^9}, {
   3.825462312628833*^9, 3.825462328051405*^9}, 3.825462672167515*^9, 
   3.825462738805647*^9},
 CellLabel->
  "In[167]:=",ExpressionUUID->"c384cc67-8a86-4b71-87d4-070961c5350d"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[PartialD]", "2"], 
     RowBox[{"\[Gamma]", "(", 
      RowBox[{"R", ",", "T"}], ")"}]}], 
    RowBox[{"\[PartialD]", 
     SuperscriptBox["R", "2"]}],
    MultilineFunction->None], "\[Rule]", 
   RowBox[{
    RowBox[{"R", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{
          RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
          RowBox[{"\[PartialD]", "T"}]}],
         MultilineFunction->None]}], "+", 
       RowBox[{"2", " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", "R"}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"R", ",", "T"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["R", "2"]}],
         MultilineFunction->None]}]}], ")"}]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{"\[Psi]", "(", 
         RowBox[{"R", ",", "T"}], ")"}]}], 
       RowBox[{"\[PartialD]", "R"}],
       MultilineFunction->None], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{"\[Psi]", "(", 
         RowBox[{"R", ",", "T"}], ")"}]}], 
       RowBox[{"\[PartialD]", "T"}],
       MultilineFunction->None], ")"}], "2"]}]}], TraditionalForm]], "Output",\

 CellChangeTimes->{
  3.825462212710001*^9, {3.8254623185612907`*^9, 3.8254623284998903`*^9}, 
   3.8254626721679077`*^9, 3.825462738805715*^9, 3.956071366386282*^9},
 CellLabel->
  "Out[167]//TraditionalForm=",ExpressionUUID->"d8593281-0cae-4803-94e0-\
475c9b8c2263"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "psiTwoReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psiTwoReplace", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"Collect", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"weylScalarsReplace", "[", 
              RowBox[{"[", "3", "]"}], "]"}], " ", "/.", " ", 
             RowBox[{"(", " ", 
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{"eq3a", " ", ",", "T"}], "]"}], " ", "/.", " ", 
               RowBox[{"Equal", "\[Rule]", " ", "Rule"}]}], "  ", ")"}]}], 
            " ", "/.", " ", 
            RowBox[{"(", " ", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{"eq3b", " ", ",", "R"}], "]"}], " ", "/.", " ", 
              RowBox[{"Equal", "\[Rule]", " ", "Rule"}]}], " ", ")"}]}], 
           ")"}], "/.", " ", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"Solve", "[", 
             RowBox[{"eq2", " ", ",", 
              RowBox[{
               SuperscriptBox["\[Psi]", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "2"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"R", ",", "T"}], "]"}]}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], " ", "//", " ", "Expand"}], " ", 
        "//", " ", "Apart"}], " ", "//", " ", "Expand"}], ")"}], " ", ",", 
     " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], 
        RowBox[{"\[Gamma]", "[", 
         RowBox[{"R", ",", "T"}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"R", ",", "T"}], "]"}]}]}], "]"}]}], "]"}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"psiTwoReplace", " ", "//", " ", "pdConv"}]}], "Input",
 CellChangeTimes->{{3.825462342217317*^9, 3.8254623725292187`*^9}, {
   3.8254624522618933`*^9, 3.825462615760624*^9}, 3.825462672168117*^9, 
   3.825462738805942*^9, {3.825462799145067*^9, 3.825462821904162*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"32c95341-f7a8-4db3-bd60-8a0c7f2a793d"],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["\[CapitalPsi]", "2"], "\[Rule]", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"R", ",", "T"}], ")"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"\[Gamma]", "(", 
        RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], 
           RowBox[{"\[PartialD]", "R"}],
           MultilineFunction->None], ")"}], "2"]}]}], "+", 
      FractionBox[
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"R", ",", "T"}], ")"}]}], 
        RowBox[{"\[PartialD]", "R"}],
        MultilineFunction->None], 
       RowBox[{"2", " ", "R"}]], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"R", ",", "T"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.825462595883966*^9, 3.825462616885048*^9}, 
   3.825462672168436*^9, 3.825462738806032*^9, 3.8254628224142303`*^9, 
   3.956071366430875*^9},
 CellLabel->
  "Out[170]//TraditionalForm=",ExpressionUUID->"53747fdc-e3f3-41bc-bcaf-\
4af021f91223"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Might", " ", "be", " ", "able", " ", "to", " ", "simplify", " ", "psi0",
       " ", "and", " ", "psi4"}], " ", "..."}], " ", "too", " ", "lazy"}], 
   " ", "*)"}], " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "eq41", "]"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eq41", " ", "=", " ", 
     RowBox[{
      RowBox[{"{", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"weylScalarsReplace", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "2"}], "]"}], "]"}], " ", ",", " ", 
        "\[IndentingNewLine]", "psiTwoReplace", " ", ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"weylScalarsReplace", "[", 
         RowBox[{"[", 
          RowBox[{"4", ";;", "5"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
       "}"}], "  ", "//", " ", "Flatten"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eq41", "  ", "//", " ", "TableForm"}], " ", "//", " ", 
    "pdConv"}]}]}]], "Input",
 CellChangeTimes->{{3.8254627612675047`*^9, 3.825462794783399*^9}, {
  3.825462828785522*^9, 3.825462923775414*^9}, {3.956070725681816*^9, 
  3.95607072938932*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"49fedb31-84e5-4cf3-8269-716fc7fbfc0b"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "0"], "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"R", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "T"}]}],
                 MultilineFunction->None]}], "+", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None], "+", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None], "+", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], "+", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "R"}],
                    MultilineFunction->None]}], "+", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], "+", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "R", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], "+", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], ")"}]}]}], ")"}]}], "+", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None]}], ")"}]}], "R"]}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "1"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "2"], "\[Rule]", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", "R"}],
                MultilineFunction->None], ")"}], "2"]}]}], "+", 
           FractionBox[
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None], 
            RowBox[{"2", " ", "R"}]], "+", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"R", ",", "T"}], ")"}]}], 
               RowBox[{"\[PartialD]", "T"}],
               MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "3"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "4"], "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"R", ",", "T"}], ")"}]}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"R", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"2", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "R"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "T"}]}],
                  MultilineFunction->None]}]}], "+", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["R", "2"]}],
                MultilineFunction->None], "+", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"R", ",", "T"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None], "+", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], "-", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], "-", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "R"}],
                   MultilineFunction->None], "+", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"R", ",", "T"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"R", ",", "T"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "R"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", "R", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"R", ",", "T"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"R", ",", "T"}], ")"}]}], 
             RowBox[{"\[PartialD]", "R"}],
             MultilineFunction->None]}], ")"}]}], 
         RowBox[{"4", " ", "R"}]]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.8254627825615587`*^9, 3.825462795771963*^9}, {
   3.825462849095605*^9, 3.825462924308918*^9}, 3.956071366533477*^9},
 CellLabel->
  "Out[173]//TraditionalForm=",ExpressionUUID->"9a1bdef1-650d-4c63-8ff4-\
915feb288dee"]
}, Open  ]]
}, Closed]]
},
WindowSize->{1280, 675},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.0 for Mac OS X x86 (64-bit) (February 4, 2022)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"e006058c-eeac-419a-a38b-f0443095bcb6"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 451, 9, 221, "Title",ExpressionUUID->"4b5a6a66-8170-4e8d-9d37-4ea58f5a1110",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1034, 33, 1163, 20, 94, "Author",ExpressionUUID->"6dd20526-c048-462d-9d19-20a180063fd3",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[2212, 56, 349, 7, 41, "Input",ExpressionUUID->"1292124f-1e21-49ee-a04d-a23efb3faf51"],
Cell[CellGroupData[{
Cell[2586, 67, 251, 4, 69, "Section",ExpressionUUID->"71c2b6d1-a128-4719-9e57-3a5008d47bb6",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[2840, 73, 461, 10, 63, "Input",ExpressionUUID->"177d740a-8648-40f9-9f10-0e36912718dc",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[3304, 85, 1578, 24, 43, "Output",ExpressionUUID->"03ad33eb-aa99-456f-92ef-03006327abb1",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[4885, 111, 1862, 42, 315, "Input",ExpressionUUID->"53df7af8-2ba1-4284-8d1b-28ec2d112d9f",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Closed]],
Cell[CellGroupData[{
Cell[6784, 158, 624, 10, 55, "Section",ExpressionUUID->"80d70a4f-b9f1-4374-b487-da5e2727238c",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[7411, 170, 847, 15, 84, "Input",ExpressionUUID->"244d5d54-4f80-4132-a261-169cdef558a1",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[8261, 187, 1567, 25, 43, "Output",ExpressionUUID->"6bdac6f6-b1c9-4049-99e8-74ada0cfb4db",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[9831, 214, 527, 10, 63, "Input",ExpressionUUID->"1d2a64f8-8a51-4462-8147-758db00bffd8",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[10361, 226, 519, 10, 43, "Output",ExpressionUUID->"08148197-9370-4a41-87ae-aa6b0c9ad6b3",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[10883, 238, 555, 10, 63, "Input",ExpressionUUID->"2b22d001-4936-40c6-bac5-46dd585ed301",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[11441, 250, 549, 10, 43, "Output",ExpressionUUID->"58093fbd-dcae-4b47-95aa-0f99c997e37a",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[11993, 262, 543, 10, 63, "Input",ExpressionUUID->"7eb76c33-588f-4c47-bd25-b7a6f3245907",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[12539, 274, 535, 10, 43, "Output",ExpressionUUID->"d1e24cef-777c-4724-81cc-9efa6505bdd1",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[13077, 286, 561, 10, 63, "Input",ExpressionUUID->"4c3de8df-465a-45c4-9826-972af9cf6767",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[13641, 298, 551, 10, 43, "Output",ExpressionUUID->"769ac62b-a7c3-4eac-b404-014a1d0b3218",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[14195, 310, 529, 10, 63, "Input",ExpressionUUID->"444207c8-d3d0-4ebd-92af-47259d96bf27",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[14727, 322, 517, 10, 43, "Output",ExpressionUUID->"741b621f-4f08-4cd0-9d71-2a8f0899ee5d",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[15247, 334, 537, 10, 63, "Input",ExpressionUUID->"122725d0-6cb1-4a20-b262-837076b9296a",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[15787, 346, 524, 10, 43, "Output",ExpressionUUID->"60c7f559-a861-44f9-9f4c-bfeea09c94af",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[16314, 358, 539, 10, 63, "Input",ExpressionUUID->"54deca47-2efb-406c-b45b-5104a486572b",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[16856, 370, 525, 10, 43, "Output",ExpressionUUID->"26d266f1-9ada-4015-954a-90d340723082",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[17384, 382, 513, 10, 63, "Input",ExpressionUUID->"0ae58561-f66a-423e-b9bb-4590799861e2",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[17900, 394, 503, 9, 43, "Output",ExpressionUUID->"86b108c3-f979-444f-aacc-6483380815d5",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[18406, 405, 546, 10, 63, "Input",ExpressionUUID->"faa13332-c7c8-432b-9635-d1bdb02a7ab2",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[18955, 417, 536, 10, 43, "Output",ExpressionUUID->"4861aa07-25ea-43cc-9cd4-ed9721a323cc",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[19494, 429, 523, 10, 63, "Input",ExpressionUUID->"a9f9b439-29e5-4163-8d02-0a788137075b",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[20020, 441, 507, 9, 43, "Output",ExpressionUUID->"0936fce1-8f7c-48ed-9ee2-73ec231920f6",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[20530, 452, 547, 10, 63, "Input",ExpressionUUID->"466bb97c-e94c-44f6-85b6-c3ea69618b1d",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[21080, 464, 537, 10, 43, "Output",ExpressionUUID->"4b8970c5-19e5-413e-b10a-ee71058977fa",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[21620, 476, 529, 10, 63, "Input",ExpressionUUID->"7871f32c-57c4-4f22-8dae-14e3b1432f3a",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[22152, 488, 523, 10, 43, "Output",ExpressionUUID->"6cc3b414-7702-480a-bedf-1e6d298fc342",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[22678, 500, 508, 9, 63, "Input",ExpressionUUID->"6c4e956d-545c-47a8-a455-8c68deb7d344",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[23189, 511, 496, 9, 43, "Output",ExpressionUUID->"e3e10c0f-253e-4bd3-84e6-b53e76f04752",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[23688, 522, 514, 10, 63, "Input",ExpressionUUID->"93f75265-ade5-46ce-a794-0e33812ae485",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[24205, 534, 498, 9, 43, "Output",ExpressionUUID->"8b45b178-b87e-44e6-b642-7332aee91d0d",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[24706, 545, 517, 10, 63, "Input",ExpressionUUID->"28c3d8d2-2d3c-4b89-98c5-736ad78b5cb3",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[25226, 557, 501, 9, 43, "Output",ExpressionUUID->"219d995d-60e1-4a36-a390-c6d7b4f57a3d",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[25730, 568, 250, 4, 69, "Section",ExpressionUUID->"a39fd035-af76-487a-9aec-2350964d5a56",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[25983, 574, 1667, 45, 189, "Input",ExpressionUUID->"a67c28b3-e4fa-467d-8477-02d241f26806",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[27653, 621, 1832, 30, 24, "Print",ExpressionUUID->"22311b7b-1bc0-42a2-a360-489fd1b2897e",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[29488, 653, 1851, 31, 24, "Print",ExpressionUUID->"64de6c89-f9e4-4a34-90ec-578b86da9803",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[31342, 686, 1881, 29, 41, "Output",ExpressionUUID->"0ee01b00-84ca-4e0a-8ce8-ae22e99cc886",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[33226, 717, 268, 4, 41, "Input",ExpressionUUID->"1cfc1cbc-082e-4984-9e16-aef2e7e27581",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[33497, 723, 310, 5, 41, "Input",ExpressionUUID->"b3b85a1d-9770-4862-ad35-b81cc74e9e4d",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Closed]],
Cell[CellGroupData[{
Cell[33844, 733, 266, 5, 55, "Section",ExpressionUUID->"32067aaa-f3bd-4d47-92cc-e407e444c96d",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[34113, 740, 4951, 111, 777, "Input",ExpressionUUID->"434e21e1-c12c-43ce-b5f8-2adc9da6ba36",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[39067, 853, 3942, 122, 609, "Output",ExpressionUUID->"1bcf7aae-1e67-43e5-bd91-eff6d2225e32",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[43012, 977, 723, 16, 63, "Input",ExpressionUUID->"5a0745f2-cb18-49e4-8b8c-b083fddb30bb",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}]
}, Closed]],
Cell[CellGroupData[{
Cell[43772, 998, 362, 6, 55, "Section",ExpressionUUID->"82d6e648-30e5-4355-8a17-3f1f83f2c309",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[44137, 1006, 1659, 41, 126, "Input",ExpressionUUID->"d9ebaf10-237f-4130-a5fb-0d1daa112573",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[45799, 1049, 1056, 26, 84, "Input",ExpressionUUID->"42e20412-9be8-4388-8cfe-943ddfe130e7",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Closed]],
Cell[CellGroupData[{
Cell[46892, 1080, 305, 5, 55, "Section",ExpressionUUID->"566df22b-755e-43ec-b11d-274a61a10680",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[47200, 1087, 1065, 27, 86, "Input",ExpressionUUID->"91dbd946-618f-4a9b-9948-0934d8670091",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[48268, 1116, 934, 26, 44, "Output",ExpressionUUID->"6cc6cc64-5100-4c3d-a490-215d1b53d35a",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[49205, 1144, 462, 10, 41, "Input",ExpressionUUID->"27a9e42e-e6b3-4456-9a9c-0892ee1a5191",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[49670, 1156, 1438, 41, 113, "Output",ExpressionUUID->"908e5ee6-158d-4301-b1d1-703c9107e3df",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[51111, 1199, 947, 19, 147, "Input",ExpressionUUID->"da4a47a7-da52-4c89-bc33-25ed731be190",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[52061, 1220, 981, 29, 69, "Output",ExpressionUUID->"ad9830e4-f173-43b3-aa4c-ccca9044d5f8",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[53045, 1251, 694, 14, 105, "Input",ExpressionUUID->"b332d15e-d557-4a6d-826a-87bef117d5ba",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[53742, 1267, 1870, 54, 113, "Output",ExpressionUUID->"9b72f1af-dc1f-47a8-890a-1876ffa3ef9b",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[55615, 1323, 617, 12, 105, "Input",ExpressionUUID->"60ab4b93-743c-467f-9d3f-6426e61e1b7c",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[56235, 1337, 1882, 55, 123, "Output",ExpressionUUID->"152169da-abb3-48a7-bc04-5541465ad683",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[58120, 1394, 406, 9, 41, "Input",ExpressionUUID->"bdc6de77-62dc-445a-a6f6-639c3d1d867f",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[58529, 1405, 843, 23, 101, "Output",ExpressionUUID->"87a44d79-7a72-4dfe-9af6-6f638c1f6cf5",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[59375, 1430, 407, 9, 41, "Input",ExpressionUUID->"e2019552-e56d-4d0e-9e0d-1682c78e966a",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[59785, 1441, 845, 23, 101, "Output",ExpressionUUID->"5b941e1a-0a07-44de-9483-307359c66bdc",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}]
}, Closed]],
Cell[CellGroupData[{
Cell[60667, 1469, 349, 8, 55, "Section",ExpressionUUID->"a1cd9c87-b348-4e88-9203-ce404066f7bb",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[61019, 1479, 5726, 130, 714, "Input",ExpressionUUID->"3926158a-274e-4b9e-b299-12cb7734e6f5",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[66748, 1611, 1063, 22, 65, "Input",ExpressionUUID->"ab98a04c-d49f-473d-9c35-1b8c005834f9",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[67814, 1635, 353, 6, 41, "Output",ExpressionUUID->"5ba90693-ccc9-40c1-bccd-8190cb611725",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[68170, 1643, 812, 18, 84, "Input",ExpressionUUID->"931850c3-fd09-4e67-9eb8-d4999c3b8c58",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[68985, 1663, 641, 12, 45, "Output",ExpressionUUID->"57d59d30-8089-428b-be77-33029fb53bc6",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[69629, 1677, 557, 8, 41, "Output",ExpressionUUID->"96620102-7d2b-48c6-9c38-b8c3a3229ad7",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[70189, 1687, 2198, 59, 114, "Output",ExpressionUUID->"9aa10304-5656-4be5-bbca-60df61024db9",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[72390, 1748, 815, 18, 84, "Input",ExpressionUUID->"31442022-9c1c-4542-8029-3399ae4297a4",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[73208, 1768, 750, 14, 45, "Output",ExpressionUUID->"487ee171-5b27-4dc1-9b6c-274c8bb28575",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[73961, 1784, 651, 9, 41, "Output",ExpressionUUID->"53e25727-c42f-43dd-aa8e-ba32de1467c2",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[74615, 1795, 18465, 520, 382, "Output",ExpressionUUID->"b48095c2-8941-4c92-9ac8-524fd547f056",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[93083, 2317, 810, 18, 84, "Input",ExpressionUUID->"fa8ba01f-d62e-4dca-99de-facc102b9e5e",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[93896, 2337, 619, 11, 45, "Output",ExpressionUUID->"a7b6e57b-bef1-4ee1-9d88-e69f4c987977",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[94518, 2350, 564, 8, 41, "Output",ExpressionUUID->"42fee0b3-44a1-43d7-9906-47087734d0e9",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[95085, 2360, 97188, 2404, 488, "Output",ExpressionUUID->"9931ea44-1acf-4f0f-aa5b-f9de451db4d5",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[192276, 4766, 808, 18, 84, "Input",ExpressionUUID->"5581a3fc-e7c0-48ae-93b4-3816c94a26a8",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[193087, 4786, 604, 11, 45, "Output",ExpressionUUID->"a1d63950-7331-42c4-aed3-0e0cd3edb75c",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[193694, 4799, 561, 8, 41, "Output",ExpressionUUID->"eceda6f0-e963-4009-84ee-ce8e6e973c2e",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[194258, 4809, 8984, 252, 184, "Output",ExpressionUUID->"8016fc39-79da-4138-8eb1-79bf66581d79",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[203245, 5063, 812, 18, 84, "Input",ExpressionUUID->"b6025cbd-4b46-42eb-baca-5375352e0907",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[204060, 5083, 568, 10, 41, "Output",ExpressionUUID->"ffff8d51-d78c-4936-891d-f1224669e6bf",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[204631, 5095, 564, 8, 41, "Output",ExpressionUUID->"d896e14b-4c8c-4b5a-8eab-581fd9e0d70e",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[205198, 5105, 3194, 88, 82, "Output",ExpressionUUID->"4c63a025-9c7c-426a-9be7-4d4a09f11ad5",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[208395, 5195, 741, 17, 84, "Input",ExpressionUUID->"b788313c-d4f8-4b28-9c19-53dbdf83f09c",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[209139, 5214, 398, 7, 41, "Output",ExpressionUUID->"31089704-ca2a-4831-8b6b-ca6a58f5a12c",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[209540, 5223, 400, 5, 41, "Output",ExpressionUUID->"fd70dec3-0ea2-4eda-b8b7-14c36b72bff5",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[209943, 5230, 23992, 668, 320, "Output",ExpressionUUID->"70a868af-5d00-4e8b-970c-0707eef0a861",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[233938, 5900, 792, 18, 84, "Input",ExpressionUUID->"3b422bb1-347e-4075-b7d9-df21555823a1",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[234733, 5920, 535, 10, 45, "Output",ExpressionUUID->"af0bc7d6-eec1-4aff-9d67-222db8b3ea21",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[235271, 5932, 497, 7, 41, "Output",ExpressionUUID->"d7955618-f1a9-4899-b8de-844fbb2f8507",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[235771, 5941, 8500, 234, 182, "Output",ExpressionUUID->"9665ee5e-eeaa-4830-a0e0-5a02daf77ef7",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[244274, 6177, 859, 19, 84, "Input",ExpressionUUID->"be2db789-7f63-4097-988b-0807f6c55413",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[245136, 6198, 621, 11, 45, "Output",ExpressionUUID->"d03ae23e-25bd-40c8-86bb-29122979f1a0",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[245760, 6211, 563, 8, 41, "Output",ExpressionUUID->"3ab45490-5402-4887-86a8-26f94b2bc1ac",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[246326, 6221, 143474, 3442, 606, "Output",ExpressionUUID->"366cf094-1e7a-4290-8eec-571ef0b2d888",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[389803, 9665, 719, 17, 84, "Input",ExpressionUUID->"269745b9-3b9d-40ee-bb40-97c459ac8ae4",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[390525, 9684, 375, 7, 45, "Output",ExpressionUUID->"7f801ea3-43f4-4c9b-b61f-4d6a51161aa5",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[390903, 9693, 326, 4, 41, "Output",ExpressionUUID->"8d120b6d-81b0-42f8-9542-c625d25bb86d",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[391232, 9699, 146793, 3434, 454, "Output",ExpressionUUID->"a34f30a1-ba58-4f67-9ad1-fb7a3bffb335",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}]
}, Closed]],
Cell[CellGroupData[{
Cell[538062, 13138, 329, 7, 55, "Section",ExpressionUUID->"2dd92ea5-1ac2-44ad-9de8-e46becee731f",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[538394, 13147, 1804, 47, 210, "Input",ExpressionUUID->"430b3bdf-8e5c-405a-8966-e77ce4351081",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[540201, 13196, 7989, 230, 220, "Output",ExpressionUUID->"107d914f-b222-45c4-85fa-ba5f9bc3f4df",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[548193, 13428, 1813, 47, 210, "Input",ExpressionUUID->"da56504d-fd36-427a-8686-8f4ae895fa6d",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[550009, 13477, 7519, 212, 218, "Output",ExpressionUUID->"30e4cbdb-ef91-4dc6-8e37-98f441aa3383",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[557531, 13691, 1329, 34, 124, "Input",ExpressionUUID->"01e3afa6-3bbc-4a29-abf8-cf14b88715ce",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[558863, 13727, 1102, 33, 79, "Output",ExpressionUUID->"9b373e22-0652-4c1d-b1b8-a7cf2e896ec8",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[559968, 13762, 1117, 27, 107, "Input",ExpressionUUID->"8784da7d-261b-4fe0-b86b-3ff78a94d123",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[561088, 13791, 989, 28, 69, "Output",ExpressionUUID->"e632b9d8-952c-494d-9a3b-9038fbe9fc21",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[562080, 13821, 1111, 27, 107, "Input",ExpressionUUID->"b68757b2-2217-4405-8d0f-ee8b81a0d33e",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[563194, 13850, 1156, 34, 72, "Output",ExpressionUUID->"21188e44-1693-4310-a4fd-21ef91f15a7d",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[564353, 13886, 594, 12, 147, "Input",ExpressionUUID->"c60045ec-8672-49e2-9807-56d9d2ad410f",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[564950, 13900, 2420, 69, 86, "Output",ExpressionUUID->"ac2fb541-6a62-48b5-9132-6af35ff41cbf",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}]
}, Closed]],
Cell[CellGroupData[{
Cell[567407, 13974, 403, 8, 55, "Section",ExpressionUUID->"658d25f4-3452-4b31-bb16-f73f8017618c",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[567813, 13984, 788, 15, 126, "Input",ExpressionUUID->"c4e0191a-81a1-42fe-a7d2-75628c777e11",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[568604, 14001, 3353, 96, 124, "Output",ExpressionUUID->"efb0ae23-b41c-4053-ab9e-6fbb04506fe0",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[571960, 14099, 877, 16, 84, "Input",ExpressionUUID->"e6f7b808-6e71-4c01-a87a-bcaf54c56be6",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[572840, 14117, 711, 14, 41, "Output",ExpressionUUID->"4e816e68-3644-4261-8b65-f22e14da610a",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[573554, 14133, 1387, 28, 189, "Input",ExpressionUUID->"ff803a79-bcfe-44b2-90ce-d890d22e6d93",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[574944, 14163, 2892, 84, 138, "Output",ExpressionUUID->"bb6278d6-5d26-4d0f-923a-085cbdfac787",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[577839, 14249, 1174, 24, 84, "Input",ExpressionUUID->"59446fb0-4bbc-44f3-a5b3-00fabaa254dd",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[579016, 14275, 1159, 26, 57, "Output",ExpressionUUID->"036c6a78-69e6-4c0c-9f02-077843acfdd7",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[580178, 14303, 1572, 35, 147, "Input",ExpressionUUID->"b44f7dbd-a7b6-4479-b76f-32a43ac5fbe8",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[581753, 14340, 1111, 26, 60, "Output",ExpressionUUID->"e6b9047c-b34c-4ccc-978f-059419f9aa8f",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[582867, 14368, 983, 21, 84, "Input",ExpressionUUID->"3c2203c8-d087-4d76-b3e7-670e251e9817",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[583853, 14391, 1096, 24, 60, "Output",ExpressionUUID->"c6835a6e-bc50-467e-87ac-dd9c3dc10fd1",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[584952, 14417, 1048, 19, 84, "Input",ExpressionUUID->"51d68246-4cfd-4cbb-a0df-391f950dd94c",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[586003, 14438, 995, 24, 41, "Output",ExpressionUUID->"0e3e4ed8-6d2c-4d77-989d-ed45e5e40f59",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[587001, 14464, 931, 19, 84, "Input",ExpressionUUID->"e9a756a4-0206-4a05-97e1-3ea83cb7caa2",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[587935, 14485, 823, 16, 60, "Output",ExpressionUUID->"c24c3c1f-e8c2-4ddb-9b02-857123a3fb7c",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[588761, 14503, 1355, 28, 84, "Input",ExpressionUUID->"15cfc988-0ada-4e1a-b04d-411f12b51abb",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[590119, 14533, 643, 18, 41, "Output",ExpressionUUID->"a0567c31-f965-471f-b24b-54223d6b3c84",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[590765, 14553, 1843, 42, 189, "Input",ExpressionUUID->"85b97414-7494-4c88-98c1-5b890a008c84",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[592611, 14597, 741, 12, 41, "Output",ExpressionUUID->"2a771823-5517-443b-8ce8-ca663e759bc7",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[593355, 14611, 766, 13, 41, "Output",ExpressionUUID->"d4158d64-eaa5-4fda-ad4c-436548e1aa5c",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[594124, 14626, 1095, 26, 41, "Output",ExpressionUUID->"88f8a375-af4f-4611-97a1-02f0e92529e0",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[595222, 14654, 1364, 37, 41, "Output",ExpressionUUID->"278704dd-4806-4bca-8302-0bbc73124620",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[596589, 14693, 1476, 40, 41, "Output",ExpressionUUID->"36ccbf4a-0973-4325-8360-94d6c1180314",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[598068, 14735, 2011, 48, 84, "Input",ExpressionUUID->"f75463c2-f2a2-4951-a74e-d01ecb2c49a4",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[600082, 14785, 745, 19, 41, "Output",ExpressionUUID->"0c744b00-8666-4b64-a0a9-acd680fc2db9",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[600830, 14806, 940, 20, 63, "Input",ExpressionUUID->"a32bb711-7a6c-4d43-b1b2-828d765d5f25",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[601773, 14828, 440454, 7251, 535, 245124, 4048, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"a4156d45-c965-48ad-b7ad-de666036b33d",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[1042230, 22081, 857, 19, 41, "Input",ExpressionUUID->"9248498c-f0cc-4e1f-a718-298eb2d69c0f",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[1043090, 22102, 174637, 2860, 522, "Output",ExpressionUUID->"5b304992-8840-4554-bf04-9d8aa2713d79",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}]
}, Closed]],
Cell[CellGroupData[{
Cell[1217764, 24967, 276, 6, 55, "Section",ExpressionUUID->"d3b3d5e9-211d-4d91-9283-db0e3be92d9c",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[1218043, 24975, 497, 13, 63, "Input",ExpressionUUID->"1c077e9c-86dd-44a4-a849-fac74d28e8f3",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[1218543, 24990, 782, 24, 69, "Output",ExpressionUUID->"40ca9e47-91e9-49be-9a28-b79b7085c598",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[1219328, 25016, 758, 23, 69, "Output",ExpressionUUID->"54991928-bc45-44e1-b1b1-ee91f83cc8d2",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[1220089, 25041, 897, 22, 41, "Input",ExpressionUUID->"15958b28-4674-45e5-90b6-d80cce5b3a31",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[1220989, 25065, 1826, 54, 79, "Output",ExpressionUUID->"5b4d6452-74dc-44dc-8d5d-72289d33b9d1",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[1222818, 25121, 1167, 29, 84, "Input",ExpressionUUID->"905fe767-9a8a-4722-a44d-34100dbc20bc",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[1223988, 25152, 2959, 85, 165, "Output",ExpressionUUID->"7bdd7884-3360-4f57-bba1-0fd373d66a5b",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[1226950, 25239, 788, 19, 41, "Input",ExpressionUUID->"90209109-11a1-4b65-832c-47ad4ce520fc",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[1227741, 25260, 227209, 3707, 168, "Output",ExpressionUUID->"4a9b5d96-6d21-41e0-814c-b063ef7c261d",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[1454953, 28969, 768, 19, 41, "Input",ExpressionUUID->"1bbd6039-443c-4d6e-8eff-e83316dc2c1c",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[1455724, 28990, 88269, 1444, 192, "Output",ExpressionUUID->"60efbaec-c9b4-4df7-af76-0d7509b46a94",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}]
}, Closed]],
Cell[CellGroupData[{
Cell[1544030, 30439, 337, 7, 55, "Section",ExpressionUUID->"39b951ee-6c3a-4ba5-a886-583c7f56f5e0",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1544370, 30448, 796, 19, 102, "Input",ExpressionUUID->"8dc99f09-2fad-437e-be25-44093454b549",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1545169, 30469, 611, 17, 56, "Output",ExpressionUUID->"94d86b7b-a39b-448f-8123-7cd8508e1fb5",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1545783, 30488, 1448, 37, 210, "Input",ExpressionUUID->"0d6ec84b-4ba4-4962-a7bd-c1465eebfd67",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1547234, 30527, 4460, 135, 210, "Output",ExpressionUUID->"04ee541c-2cbd-45ac-8074-4824e024b04c",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1551697, 30664, 895, 24, 102, "Input",ExpressionUUID->"fc3524c6-d4ac-4d16-8ee4-764f9be613ae",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1552595, 30690, 926, 29, 56, "Output",ExpressionUUID->"7f445755-1b29-4326-b63f-c0fa53877b52",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1553524, 30721, 1456, 37, 210, "Input",ExpressionUUID->"0b24bbc9-493a-4730-98dd-66505e3bff14",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1554983, 30760, 6658, 200, 242, "Output",ExpressionUUID->"5561387a-8dfb-44aa-a75c-320c3d39086e",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1561644, 30962, 1678, 40, 147, "Input",ExpressionUUID->"dc75b236-e67b-4bf4-99b1-098bb8ceab23",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1563325, 31004, 445, 10, 45, "Output",ExpressionUUID->"5d8105a8-80c9-4d97-9154-83c4cb912944",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1563773, 31016, 390, 7, 41, "Output",ExpressionUUID->"b9907eba-32f6-4c15-a486-f2ce57714e08",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1564166, 31025, 145987, 3826, 922, "Output",ExpressionUUID->"20b8c521-ea2d-492f-9ed6-60ea0107aeff",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1710156, 34853, 9499, 249, 308, "Output",ExpressionUUID->"cbe93595-a9bc-4165-a198-d46a3b514124",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1719658, 35104, 354, 8, 41, "Input",ExpressionUUID->"b84cf8f7-2434-468f-bb94-70b30b61ec9b",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1720015, 35114, 3284, 95, 124, "Output",ExpressionUUID->"27cb01cf-5ec8-421b-b6c8-12df643f7a55",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1723302, 35211, 1045, 25, 105, "Input",ExpressionUUID->"87bd0b39-e3b3-4097-b1dc-74e56c30dec4",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1724350, 35238, 5030, 154, 162, "Output",ExpressionUUID->"40f296c5-1e5a-4cd1-aa28-04c4b974c70f",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1729383, 35394, 723, 23, 83, "Output",ExpressionUUID->"e8a230fa-5122-4e63-9ed3-dcb83eafec49",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}]
}, Closed]],
Cell[CellGroupData[{
Cell[1730143, 35422, 396, 9, 93, "Section",ExpressionUUID->"60aaa492-b6c7-4810-80b1-14e5c78d8b11",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1730542, 35433, 1941, 47, 223, "Input",ExpressionUUID->"df8e5383-34a2-4bf4-b6f8-5e1b9315ac3a",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1732486, 35482, 1458, 43, 107, "Output",ExpressionUUID->"2c57aace-047d-4921-a7a4-77f63ef7d5f3",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1733947, 35527, 550, 13, 41, "Input",ExpressionUUID->"6067c52b-a05a-4f1b-bd85-9bb948f61808",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1734500, 35542, 2081, 62, 147, "Output",ExpressionUUID->"ce7af1be-bef0-4fd8-8e2e-737b563db271",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1736584, 35606, 1478, 42, 147, "Input",ExpressionUUID->"f61bf886-6ad3-4f95-81ca-1ab81d248e97",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1738065, 35650, 963, 27, 44, "Output",ExpressionUUID->"8fdbb655-cc2d-404c-9425-56ad2612d6f5",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1739031, 35679, 1201, 35, 44, "Output",ExpressionUUID->"2aea2720-85b7-4a1a-ac66-15195078abef",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1740235, 35716, 1486, 48, 65, "Output",ExpressionUUID->"1a6ca76f-793d-4903-8262-9fc328484556",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1741724, 35766, 1116, 37, 65, "Output",ExpressionUUID->"e744caea-951c-4e68-a5af-68c6d96a45d1",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1742843, 35805, 2756, 92, 74, "Output",ExpressionUUID->"85076b25-46d1-4db1-a562-01457d2d7a30",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1745602, 35899, 3877, 128, 157, "Output",ExpressionUUID->"fdbf01bd-fee7-4f84-942b-b1646913e996",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1749482, 36029, 1852, 43, 126, "Input",ExpressionUUID->"7fdb3c6c-5c41-49d2-97c0-5a261390aebe",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1751337, 36074, 2829, 84, 153, "Output",ExpressionUUID->"55292f4c-4f54-4f8b-991d-dd8b59f12b77",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1754169, 36160, 548, 13, 84, "Input",ExpressionUUID->"597eb502-1b1f-4356-aa4d-aa34b4e1abe5",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1754720, 36175, 387, 11, 41, "Output",ExpressionUUID->"0f8514f5-940f-4f53-af80-03cec1d1b097",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1755110, 36188, 1509, 39, 189, "Input",ExpressionUUID->"f3764092-4e87-41ca-aaa7-10464b61f4a0",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1756622, 36229, 485, 12, 41, "Output",ExpressionUUID->"08dcf083-3de1-4e32-abc0-a675da54a60a",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1757110, 36243, 431, 10, 41, "Output",ExpressionUUID->"7fc37f45-39f5-41dc-b68e-a422321a012f",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1757544, 36255, 422, 10, 43, "Output",ExpressionUUID->"3ad2ac0d-797d-4154-9f17-4229162f6da7",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1757969, 36267, 1639, 51, 133, "Output",ExpressionUUID->"f725e3f4-44c2-4220-87c2-70b50c3a47aa",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1759611, 36320, 287, 6, 41, "Input",ExpressionUUID->"41c619f2-8c2d-4dfb-8dd8-a8339d3f54ea",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1759901, 36328, 14027, 323, 126, "Output",ExpressionUUID->"fbf85b0e-41a5-4628-8cba-d217b3caa8c5",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Closed]],
Cell[CellGroupData[{
Cell[1773965, 36656, 350, 8, 55, "Section",ExpressionUUID->"625239a4-5b4e-4de5-af3b-30109802b935",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1774318, 36666, 741, 16, 84, "Input",ExpressionUUID->"3716b802-0749-4437-9f5b-f4f15c6a7359",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1775062, 36684, 1040, 26, 44, "Output",ExpressionUUID->"b0d2259d-cdc9-4d5f-934c-ca32fcae3f3a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1776105, 36712, 765, 17, 102, "Input",ExpressionUUID->"adbdec12-70f8-41d5-9ea2-6e717835f84e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1776873, 36731, 1171, 31, 56, "Output",ExpressionUUID->"e471b14b-166f-486c-839d-36fc192ac971",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1778047, 36764, 918, 22, 110, "Input",ExpressionUUID->"65452466-46a6-4ae8-a0c3-d4d0e4aeac16",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1778968, 36788, 981, 24, 64, "Output",ExpressionUUID->"8dec9ea2-c1c3-4c32-9f51-356ae9bc0926",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1779952, 36814, 947, 23, 110, "Input",ExpressionUUID->"d1953b16-cf7e-4da1-ad19-cf12e9173be3",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1780902, 36839, 999, 25, 64, "Output",ExpressionUUID->"de1ef6b1-c8d0-4795-99ef-2aa3d961ff6f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1781904, 36866, 2063, 52, 126, "Input",ExpressionUUID->"479aeacd-d7e9-4b38-b0f4-028355b81be9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1783970, 36920, 520, 11, 43, "Output",ExpressionUUID->"e9615d80-abda-4709-a70a-e812b81c9232",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1784493, 36933, 522, 11, 43, "Output",ExpressionUUID->"9ab183cb-cf1b-4fc6-86f2-e5b1005c5592",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1785018, 36946, 520, 11, 43, "Output",ExpressionUUID->"dc01eb5e-8e41-41fb-ba01-ec2d506fa93d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1785541, 36959, 523, 11, 43, "Output",ExpressionUUID->"b5cf801c-428d-4542-b106-be7182e5c421",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1786067, 36972, 6625, 190, 504, "Input",ExpressionUUID->"6750ac77-280a-4471-858c-ffbb942fc379",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1792695, 37164, 312, 6, 41, "Output",ExpressionUUID->"1e6c553b-3e40-448f-b98b-171589bd31d9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1793010, 37172, 312, 6, 41, "Output",ExpressionUUID->"d9dd4caa-6507-40c9-9c5d-748594f3ce49",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1793325, 37180, 314, 6, 41, "Output",ExpressionUUID->"fdb321b3-9f15-468c-b178-db837cf138df",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1793642, 37188, 312, 6, 41, "Output",ExpressionUUID->"d41ad67e-7c83-4962-b5b3-37cd75a8dbc4",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1793957, 37196, 314, 6, 41, "Output",ExpressionUUID->"9b59fefe-3581-4dde-946b-ff4790797263",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1794274, 37204, 311, 6, 41, "Output",ExpressionUUID->"f430115f-c4e3-4ec1-b0d6-18eb63555f6c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1794588, 37212, 312, 6, 41, "Output",ExpressionUUID->"a8c5237b-0ff3-48a0-85a4-dec0bb3b331f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1794903, 37220, 312, 6, 41, "Output",ExpressionUUID->"7f23b134-7237-4b38-8126-7e00d042adf8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1795218, 37228, 1852, 54, 113, "Output",ExpressionUUID->"3541c543-4c56-4d9b-aa2a-38b6a45315e1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1797073, 37284, 965, 37, 305, "Output",ExpressionUUID->"40818065-51fa-4625-81c7-8e798fd7fecd",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1798041, 37323, 1891, 56, 123, "Output",ExpressionUUID->"c2f30294-02ec-49cb-b04c-cea6383df524",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1799935, 37381, 386, 10, 52, "Output",ExpressionUUID->"fd927781-a56b-4d2c-902d-5485eadb0dbb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Closed]],
Cell[CellGroupData[{
Cell[1800358, 37396, 257, 6, 55, "Section",ExpressionUUID->"40ff97dc-650d-4362-9207-4ae9426275d5"],
Cell[CellGroupData[{
Cell[1800640, 37406, 13651, 327, 554, "Input",ExpressionUUID->"dafc1e34-8f32-4056-8c31-094c2674a9aa"],
Cell[1814294, 37735, 6474, 182, 322, "Output",ExpressionUUID->"ad208614-ac82-4622-8fd5-53dc9bd04d33"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1820805, 37922, 9468, 250, 771, "Input",ExpressionUUID->"20f87851-1f96-4105-bda7-cc335632574b"],
Cell[1830276, 38174, 13159, 350, 354, "Output",ExpressionUUID->"14703901-6d29-4b11-b5be-a8d4ade5c4fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1843472, 38529, 5596, 143, 336, "Input",ExpressionUUID->"9ffb2104-6519-4d35-8cec-488cbb436b3e"],
Cell[1849071, 38674, 12783, 321, 202, "Output",ExpressionUUID->"eb2a9f42-a202-47e7-b687-c539c90169b2"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1861903, 39001, 414, 11, 56, "Section",ExpressionUUID->"c2faef1a-8d0c-48ec-8397-7a24c6c02d23"],
Cell[CellGroupData[{
Cell[1862342, 39016, 698, 19, 44, "Input",ExpressionUUID->"2c2c26ee-fd41-4e4a-bcfe-5826ad45e2eb"],
Cell[1863043, 39037, 1115, 33, 84, "Output",ExpressionUUID->"42eb45c7-cd62-4b7b-8888-f9ded9ae5457"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1864195, 39075, 539, 12, 41, "Input",ExpressionUUID->"4851d932-9550-459f-9fc4-840e857595fd"],
Cell[1864737, 39089, 1624, 49, 74, "Output",ExpressionUUID->"a42d5ebe-0146-442d-aabf-ec22edf4a659"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1866398, 39143, 456, 11, 41, "Input",ExpressionUUID->"c384cc67-8a86-4b71-87d4-070961c5350d"],
Cell[1866857, 39156, 2252, 68, 76, "Output",ExpressionUUID->"d8593281-0cae-4803-94e0-475c9b8c2263"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1869146, 39229, 2296, 58, 153, "Input",ExpressionUUID->"32c95341-f7a8-4db3-bd60-8a0c7f2a793d"],
Cell[1871445, 39289, 1655, 50, 86, "Output",ExpressionUUID->"53747fdc-e3f3-41bc-bcaf-4af021f91223"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1873137, 39344, 1321, 32, 210, "Input",ExpressionUUID->"49fedb31-84e5-4cf3-8269-716fc7fbfc0b"],
Cell[1874461, 39378, 11412, 289, 200, "Output",ExpressionUUID->"9a1bdef1-650d-4c63-8ff4-915feb288dee"]
}, Open  ]]
}, Closed]]
}
]
*)

