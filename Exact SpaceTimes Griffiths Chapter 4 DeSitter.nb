(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1606528,      32387]
NotebookOptionsPosition[   1573373,      31837]
NotebookOutlinePosition[   1573839,      31854]
CellTagsIndexPosition[   1573796,      31851]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "Utilities`CleanSlate`"}], "\[IndentingNewLine]", 
 RowBox[{"CleanSlate", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearInOut", "[", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pdConv", "[", "f_", "]"}], ":=", 
   RowBox[{"TraditionalForm", "[", 
    RowBox[{"f", "/.", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Derivative", "[", "inds__", "]"}], "[", "g_", "]"}], "[", 
       "vars__", "]"}], "\[RuleDelayed]", 
      RowBox[{"Apply", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Defer", "[", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"g", "[", "vars", "]"}], ",", "##"}], "]"}], "]"}], "&"}],
         ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "vars", "}"}], ",", 
            RowBox[{"{", "inds", "}"}]}], "}"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"var_", ",", "0"}], "}"}], "\[RuleDelayed]", 
            RowBox[{"Sequence", "[", "]"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"var_", ",", "1"}], "}"}], "\[RuleDelayed]", 
            RowBox[{"{", "var", "}"}]}]}], "}"}]}]}], "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<VariationalMethods`\>\"", "]"}]}], "Input",
 CellLabel->"In[10]:=",ExpressionUUID->"4faeb4f8-5642-4522-a75d-3e4756f182bb"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  (CleanSlate) Contexts purged: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"Global`\"\>", "}"}]}],
  SequenceForm["  (CleanSlate) Contexts purged: ", {"Global`"}],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[10]:=",ExpressionUUID->"3e0c577b-9283-4a3f-b1f8-834313936358"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  (CleanSlate) Approximate kernel memory recovered: \"\>", 
   "\[InvisibleSpace]", "\<\"59 Kb\"\>"}],
  SequenceForm[
  "  (CleanSlate) Approximate kernel memory recovered: ", "59 Kb"],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[10]:=",ExpressionUUID->"4150d880-2eb4-44f8-80da-fae744f0cf00"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Utilities`CleanSlate`\"\>", 
   ",", "\<\"GeneralRelativityTensors`\"\>", 
   ",", "\<\"GeneralRelativityTensors`CommonTensors`\"\>", 
   ",", "\<\"GeneralRelativityTensors`TensorDerivatives`\"\>", 
   ",", "\<\"GeneralRelativityTensors`TensorManipulation`\"\>", 
   ",", "\<\"GeneralRelativityTensors`TensorDefinitions`\"\>", 
   ",", "\<\"GeneralRelativityTensors`Utils`\"\>", ",", "\<\"Notation`\"\>", 
   ",", "\<\"VariationalMethods`\"\>", ",", "\<\"System`\"\>", 
   ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellLabel->"Out[0]=",ExpressionUUID->"172f9831-19f2-49ee-ae4a-bc2fb3d3fccb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"<<", "GeneralRelativityTensors`"}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"d0486a8c-593f-475b-831b-b7226ef02001"],

Cell[BoxData[
 RowBox[{"<<", "Notation`"}]], "Input",
 CellLabel->"In[4]:=",ExpressionUUID->"bc74ad61-1654-4d42-83c2-4fed8fb55f94"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "lineTometric", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lineTometric", "[", 
    RowBox[{"lineelement_", " ", ",", " ", "differentials_"}], "]"}], ":=", 
   " ", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"i", "\[Equal]", "j"}], " ", ",", 
       RowBox[{"Coefficient", "[", 
        RowBox[{"lineelement", ",", " ", 
         RowBox[{
          RowBox[{"differentials", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", 
          RowBox[{"differentials", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}], "*", 
        RowBox[{"Coefficient", "[", 
         RowBox[{"lineelement", ",", " ", 
          RowBox[{
           RowBox[{"differentials", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", 
           RowBox[{"differentials", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}]}], "]"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "differentials", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "differentials", "]"}]}], "}"}]}], "]"}]}], 
  "  ", ";"}]}], "Input",
 CellLabel->"In[5]:=",ExpressionUUID->"a2406a27-7f00-418d-8b88-4c965b580a16"],

Cell[BoxData[{
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["Z", "0"]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["Z", "1"]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["Z", "2"]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["Z", "3"]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["Z", "4"]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["\[Eta]", "0"]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["t", "0"]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["t", 
     RowBox[{"-", "1"}]]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["t", "b"]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["z", "b"]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["t", "k"]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["z", "k"]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    OverscriptBox["\[Xi]", "_"]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Symbolize", "[", 
    TemplateBox[{
      RowBox[{"d", 
        OverscriptBox["\[Xi]", "_"]}]},
     "NotationTemplateTag"], "]"}], " ", "*)"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Figure", " ", "out", " ", "why", " ", "this", " ", 
     RowBox[{"doesn", "'"}], "t", " ", "work"}], " ", "-", " ", 
    RowBox[{
    "overbar", " ", "over", " ", "both", " ", "d", " ", "and", " ", "\[Xi]", 
     " ", "will", " ", 
     RowBox[{"work", "?"}]}]}], " ", "*)"}], " "}]}], "Input",
 CellLabel->"In[7]:=",ExpressionUUID->"3b6a4ba3-8e46-4936-8705-b59f03d9621e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CreatePalette", "[", 
  RowBox[{"{", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PasteButton", "[", 
     SubscriptBox["Z", "0"], "]"}], ",", "\[IndentingNewLine]", " ", 
    RowBox[{"PasteButton", "[", 
     SubscriptBox["Z", "1"], "]"}], " ", ",", " ", "\[IndentingNewLine]", 
    RowBox[{"PasteButton", "[", 
     SubscriptBox["Z", "2"], "]"}], " ", ",", "\[IndentingNewLine]", 
    RowBox[{"PasteButton", "[", 
     SubscriptBox["Z", "3"], "]"}], " ", ",", "\[IndentingNewLine]", 
    RowBox[{"PasteButton", "[", 
     SubscriptBox["Z", "4"], "]"}], " ", ",", "\[IndentingNewLine]", 
    RowBox[{"PasteButton", "[", 
     SubscriptBox["\[Eta]", "0"], "]"}], " ", ",", "\[IndentingNewLine]", 
    RowBox[{"PasteButton", "[", 
     SubscriptBox["t", "0"], "]"}], " ", ",", "\[IndentingNewLine]", 
    RowBox[{"PasteButton", "[", 
     SubscriptBox["t", 
      RowBox[{"-", "1"}]], "]"}], " ", ",", "\[IndentingNewLine]", 
    RowBox[{"PasteButton", "[", 
     SubscriptBox["t", "b"], "]"}], " ", ",", "\[IndentingNewLine]", 
    RowBox[{"PasteButton", "[", 
     SubscriptBox["z", "b"], "]"}], " ", ",", "\[IndentingNewLine]", 
    RowBox[{"PasteButton", "[", 
     SubscriptBox["t", "k"], "]"}], " ", ",", "\[IndentingNewLine]", 
    RowBox[{"PasteButton", "[", 
     SubscriptBox["z", "k"], "]"}], " ", ",", "\[IndentingNewLine]", 
    RowBox[{"PasteButton", "[", 
     OverscriptBox["\[Xi]", "_"], "]"}]}], "\[IndentingNewLine]", "}"}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[20]:=",ExpressionUUID->"ebc268ec-b271-4ffe-9547-640b473d5982"],

Cell[BoxData[
 TemplateBox[{
   FrontEndObject[
    LinkObject["jv7ds_shm", 3, 1]], 28, 
   "FrontEndObject[LinkObject[\"jv7ds_shm\", 3, 1]]", "28", "\"Untitled-2\""},
  
  "NotebookObjectUnsaved"]], "Output",
 CellLabel->"Out[20]=",ExpressionUUID->"3007174f-b2d9-40c5-878e-2b6a828b8c83"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "dtReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dtReplace", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Dt", "[", 
       SubscriptBox["Z", "0"], "]"}], " ", "\[Rule]", " ", 
      SubscriptBox["dZ", "0"]}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", 
       SubscriptBox["Z", "1"], "]"}], " ", "\[Rule]", " ", 
      SubscriptBox["dZ", "1"]}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", 
       SubscriptBox["Z", "2"], "]"}], "\[Rule]", " ", 
      SubscriptBox["dZ", "2"]}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", 
       SubscriptBox["Z", "3"], "]"}], "\[Rule]", " ", 
      SubscriptBox["dZ", "3"]}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", 
       SubscriptBox["Z", "4"], "]"}], " ", "\[Rule]", " ", 
      SubscriptBox["dZ", "4"]}], " ", ",", "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{"Dt", "[", 
       SubscriptBox["\[Eta]", "0"], "]"}], "\[Rule]", " ", 
      SubscriptBox["d\[Eta]", "0"]}], " ", ",", " ", "\[IndentingNewLine]", 
     " ", 
     RowBox[{
      RowBox[{"Dt", "[", 
       SubscriptBox["t", "0"], "]"}], "\[Rule]", " ", 
      SubscriptBox["dt", "0"]}], " ", ",", " ", "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{"Dt", "[", "t", "]"}], "\[Rule]", " ", "dt"}], " ", ",", 
     "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{"Dt", "[", "T", "]"}], "\[Rule]", " ", "dT"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Chi]", "]"}], " ", "\[Rule]", " ", "d\[Chi]"}], 
     " ", ",", " ", "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Theta]", "]"}], " ", "\[Rule]", " ", 
      "d\[Theta]"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Phi]", "]"}], " ", "\[Rule]", " ", "d\[Phi]"}], 
     "  ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Eta]", "]"}], " ", "\[Rule]", " ", "d\[Eta]"}], 
     "  ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "R", "]"}], " ", "\[Rule]", " ", "dR"}], "  ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "x", "]"}], "\[Rule]", " ", "dx"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "y", "]"}], " ", "\[Rule]", " ", "dy"}], " ", ",", 
     " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "z", "]"}], "\[Rule]", " ", "dz"}], "  ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", 
       SubscriptBox["t", 
        RowBox[{"-", "1"}]], "]"}], "\[Rule]", " ", 
      SubscriptBox["dt", 
       RowBox[{"-", "1"}]]}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", 
       SubscriptBox["t", "b"], "]"}], "\[Rule]", " ", 
      SubscriptBox["dt", "b"]}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", 
       SubscriptBox["z", "b"], "]"}], "\[Rule]", " ", 
      SubscriptBox["dz", "b"]}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", 
       SubscriptBox["t", "k"], "]"}], " ", "\[Rule]", " ", 
      SubscriptBox["dt", "k"]}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", 
       SubscriptBox["z", "k"], "]"}], " ", "\[Rule]", " ", 
      SubscriptBox["dz", "k"]}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Rho]", "]"}], " ", "\[Rule]", " ", "d\[Rho]"}], 
     " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptCapitalU]", "]"}], "\[Rule]", " ", 
      "d\[ScriptCapitalU]"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptCapitalV]", "]"}], "\[Rule]", " ", 
      "d\[ScriptCapitalV]"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Xi]", "]"}], "\[Rule]", " ", "d\[Xi]"}], " ", ",",
      " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", 
       OverscriptBox["\[Xi]", "_"], "]"}], "\[Rule]", " ", 
      RowBox[{"d", 
       OverscriptBox["\[Xi]", "_"]}]}]}], "\[IndentingNewLine]", "}"}]}], " ",
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"dtReplace", " ", "//", " ", "TableForm"}]}], "Input",
 CellLabel->"In[21]:=",ExpressionUUID->"9a85275e-d3ef-4da7-b920-e3823ac4afd8"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"Dt", "[", 
        SubscriptBox["Z", "0"], "]"}], "\[Rule]", 
       SubscriptBox["dZ", "0"]}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", 
        SubscriptBox["Z", "1"], "]"}], "\[Rule]", 
       SubscriptBox["dZ", "1"]}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", 
        SubscriptBox["Z", "2"], "]"}], "\[Rule]", 
       SubscriptBox["dZ", "2"]}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", 
        SubscriptBox["Z", "3"], "]"}], "\[Rule]", 
       SubscriptBox["dZ", "3"]}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", 
        SubscriptBox["Z", "4"], "]"}], "\[Rule]", 
       SubscriptBox["dZ", "4"]}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", 
        SubscriptBox["\[Eta]", "0"], "]"}], "\[Rule]", 
       SubscriptBox["d\[Eta]", "0"]}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", 
        SubscriptBox["t", "0"], "]"}], "\[Rule]", 
       SubscriptBox["dt", "0"]}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "t", "]"}], "\[Rule]", "dt"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "T", "]"}], "\[Rule]", "dT"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Chi]", "]"}], "\[Rule]", "d\[Chi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Theta]", "]"}], "\[Rule]", "d\[Theta]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Phi]", "]"}], "\[Rule]", "d\[Phi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Eta]", "]"}], "\[Rule]", "d\[Eta]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "R", "]"}], "\[Rule]", "dR"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "x", "]"}], "\[Rule]", "dx"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "y", "]"}], "\[Rule]", "dy"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "z", "]"}], "\[Rule]", "dz"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", 
        SubscriptBox["t", 
         RowBox[{"-", "1"}]], "]"}], "\[Rule]", 
       SubscriptBox["dt", 
        RowBox[{"-", "1"}]]}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", 
        SubscriptBox["t", "b"], "]"}], "\[Rule]", 
       SubscriptBox["dt", "b"]}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", 
        SubscriptBox["z", "b"], "]"}], "\[Rule]", 
       SubscriptBox["dz", "b"]}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", 
        SubscriptBox["t", "k"], "]"}], "\[Rule]", 
       SubscriptBox["dt", "k"]}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", 
        SubscriptBox["z", "k"], "]"}], "\[Rule]", 
       SubscriptBox["dz", "k"]}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Rho]", "]"}], "\[Rule]", "d\[Rho]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptCapitalU]", "]"}], "\[Rule]", 
       "d\[ScriptCapitalU]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptCapitalV]", "]"}], "\[Rule]", 
       "d\[ScriptCapitalV]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Xi]", "]"}], "\[Rule]", "d\[Xi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", 
        OverscriptBox["\[Xi]", "_"], "]"}], "\[Rule]", 
       RowBox[{"d", " ", 
        OverscriptBox["\[Xi]", "_"]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[23]//TableForm=",ExpressionUUID->"2ef859a1-ddd7-462a-87e6-\
c65997e383b8"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eulerLagrangeEquations", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eulerLagrangeEquations", "[", 
    RowBox[{"metric_", ",", " ", "variables_", " ", ",", " ", "parameter_"}], 
    " ", "]"}], ":=", " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "q", ",", "qReplace", ",", "\[ScriptCapitalL]", ",", "eqs", ",", 
       "eulerEquations"}], "}"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", "q", "]"}], " ", ";", "\[IndentingNewLine]", 
      RowBox[{"q", " ", "=", " ", "\[IndentingNewLine]", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{"variables", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"{", "parameter", "}"}]}], "]"}], " ", ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "variables", "]"}]}], "}"}]}], "]"}], 
        "]"}]}], " ", ";", "\[IndentingNewLine]", 
      RowBox[{"Clear", "[", "qReplace", "]"}], " ", ";", 
      "\[IndentingNewLine]", 
      RowBox[{"qReplace", " ", "=", " ", "\[IndentingNewLine]", 
       RowBox[{"Thread", "[", "\[IndentingNewLine]", 
        RowBox[{"variables", " ", "\[Rule]", " ", "q"}], " ", "]"}]}], " ", 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Clear", "[", "\[ScriptCapitalL]", "]"}], " ", ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[ScriptCapitalL]", " ", "=", " ", "\[IndentingNewLine]", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"metric", " ", "/.", " ", "qReplace"}], ")"}], "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], " ", "*", "   ", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{"q", ",", "parameter"}], "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{"q", ",", "parameter"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], " ", ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", " ", 
           RowBox[{"Length", "[", "q", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", "q", "]"}]}], "}"}]}], "]"}]}], " ", ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Clear", "[", "eqs", "]"}], " ", ";", "\[IndentingNewLine]", 
      RowBox[{"eqs", " ", "=", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"D", "[", " ", 
            RowBox[{
             RowBox[{"D", "[", " ", 
              RowBox[{"\[ScriptCapitalL]", " ", ",", "  ", 
               RowBox[{
                SubscriptBox["\[PartialD]", "parameter"], 
                RowBox[{"q", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], " ", ",", " ", 
             "parameter"}], " ", "]"}], " ", "-", 
           RowBox[{"D", "[", " ", 
            RowBox[{"\[ScriptCapitalL]", " ", ",", "  ", 
             RowBox[{"q", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "  ", ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "q", "]"}]}], "}"}]}], "]"}], " ", "//", 
        " ", "Expand"}]}], "   ", ";", "\[IndentingNewLine]", 
      RowBox[{"Clear", "[", "eulerEquations", "]"}], " ", ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eulerEquations", " ", "=", " ", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Sum", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"Expand", "[", 
               RowBox[{"eqs", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", "/", " ", 
             RowBox[{"Coefficient", "[", 
              RowBox[{
               RowBox[{"eqs", "[", 
                RowBox[{"[", "j", "]"}], "]"}], " ", ",", 
               RowBox[{
                SubscriptBox["\[PartialD]", "parameter"], 
                RowBox[{
                 SubscriptBox["\[PartialD]", "parameter"], 
                 RowBox[{"q", "[", 
                  RowBox[{"[", "j", "]"}], "]"}]}]}]}], "]"}]}], "   ", ")"}],
            " ", ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", " ", 
              RowBox[{"Expand", "[", 
               RowBox[{"eqs", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "]"}], "]"}]}], " ", "}"}]}], 
          " ", "]"}], " ", ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}]}]}]}], "  ", 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellLabel->"In[24]:=",ExpressionUUID->"4b96d02b-5f47-47f9-b7b1-f0095a987cc0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "/:", 
   RowBox[{"Dt", "[", "a", "]"}], "=", "0"}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalLambda]", "/:", 
   RowBox[{"Dt", "[", "\[CapitalLambda]", "]"}], "=", "0"}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Differential", " ", "of", " ", "a", " ", "is", " ", "zero"}], 
    " ", ",", " ", 
    RowBox[{"a", " ", "is", " ", "a", " ", "constant"}], " ", ",", " ", 
    RowBox[{"etc", "."}]}], "  ", "*)"}], " "}]}], "Input",
 CellLabel->"In[26]:=",ExpressionUUID->"a0f2e451-d85c-40f8-bd05-5cd2d21826c3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "input", "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"input", "[", 
    RowBox[{
    "equationNumber_", ",", "equation_", ",", "metricName_", ",", 
     "displayName_", ",", "variables_", ",", "indices_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", "tensorList", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"tensorList", " ", "=", " ", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<g\>\"", "<>", "equationNumber"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<christoffel\>\"", "<>", "equationNumber"}], " ", ",", 
         " ", "\[IndentingNewLine]", 
         RowBox[{"\"\<riemann\>\"", "<>", "equationNumber"}], "  ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<ricci\>\"", "<>", "equationNumber"}], " ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<ricciscalar\>\"", "<>", "equationNumber"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<kretschmannscalar\>\"", "<>", "equationNumber"}], "  ", 
         ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<einstein\>\"", "<>", "equationNumber"}], "  ", ",", " ",
          "\[IndentingNewLine]", 
         RowBox[{"\"\<weyl\>\"", "<>", "equationNumber"}], "  ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<cotton\>\"", "<>", "equationNumber"}]}], "  ", 
        "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"ToMetric", "[", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{"metricName", ",", " ", "displayName"}], " ", "}"}], " ", 
         ",", " ", "variables", ",", " ", "equation", ",", " ", "indices"}], 
        " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "  ", "=", " ", "\[IndentingNewLine]", 
       RowBox[{"ChristoffelSymbol", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], "]"}]}], " ", ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "3", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"RiemannTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWithNested", "\[Rule]", " ", "Simplify"}]}], " ", 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "4", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"RicciTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}]}], " ",
       ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "5", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"RicciScalar", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}]}], " ",
       ";", "\[IndentingNewLine]", " ", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "6", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"KretschmannScalar", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], "]"}]}], " ", ";",
       "  ", "\[IndentingNewLine]", " ", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "7", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"EinsteinTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], "]"}]}], " ", ";",
       "    ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "8", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"WeylTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}]}], " ",
       ";", "\[IndentingNewLine]", " ", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "9", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"CottonTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}]}], " ",
       ";"}]}], " ", "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellLabel->"In[28]:=",ExpressionUUID->"81086cab-1a0a-42f3-8979-6e05b95ecbc6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "lineElement", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Page", " ", "41"}], " ", ",", " ", "eq4pt2"}], " ", "*)"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"lineElement", " ", "=", " ", 
  RowBox[{
   RowBox[{"-", " ", 
    SuperscriptBox[
     SubscriptBox["dZ", "0"], "2"]}], " ", "+", " ", 
   SuperscriptBox[
    SubscriptBox["dZ", "1"], "2"], "+", " ", 
   SuperscriptBox[
    SubscriptBox["dZ", "2"], "2"], "+", 
   SuperscriptBox[
    SubscriptBox["dZ", "3"], "2"], "+", 
   SuperscriptBox[
    SubscriptBox["dZ", "4"], "2"]}]}]}], "Input",
 CellLabel->"In[30]:=",ExpressionUUID->"786d12b2-cf00-4024-a7e6-9d4c1be5f4fb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SubsuperscriptBox["dZ", "0", "2"]}], "+", 
  SubsuperscriptBox["dZ", "1", "2"], "+", 
  SubsuperscriptBox["dZ", "2", "2"], "+", 
  SubsuperscriptBox["dZ", "3", "2"], "+", 
  SubsuperscriptBox["dZ", "4", "2"]}]], "Output",
 CellLabel->"Out[31]=",ExpressionUUID->"1a8ecb1a-a79a-437d-85b1-1908991efcc0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "hyperboloid4pt1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"hyperboloid4pt1", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"-", " ", 
     SuperscriptBox[
      SubscriptBox["Z", "0"], "2"]}], "+", " ", 
    SuperscriptBox[
     SubscriptBox["Z", "1"], "2"], "+", 
    SuperscriptBox[
     SubscriptBox["Z", "2"], "2"], "+", 
    SuperscriptBox[
     SubscriptBox["Z", "3"], "2"], "+", 
    SuperscriptBox[
     SubscriptBox["Z", "4"], "2"]}], "\[Equal]", " ", 
   SuperscriptBox["a", "2"], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"/.", " ", 
     RowBox[{"a", "\[Rule]", 
      RowBox[{
       SqrtBox[
        RowBox[{" ", 
         FractionBox["3", "\[CapitalLambda]"]}]], " ", "uncomment", " ", "if",
        " ", "needed"}]}]}], " ", "*)"}], " "}]}]}], "Input",
 CellLabel->"In[32]:=",ExpressionUUID->"e3dbee50-b177-41fe-b972-241264c09b7f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SubsuperscriptBox["Z", "0", "2"]}], "+", 
   SubsuperscriptBox["Z", "1", "2"], "+", 
   SubsuperscriptBox["Z", "2", "2"], "+", 
   SubsuperscriptBox["Z", "3", "2"], "+", 
   SubsuperscriptBox["Z", "4", "2"]}], "\[Equal]", 
  SuperscriptBox["a", "2"]}]], "Output",
 CellLabel->"Out[33]=",ExpressionUUID->"dd0d1d37-b6b5-4cfe-98ec-cba24f21afd3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "transform4pt3", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"transform4pt3", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      SubscriptBox["Z", "0"], "\[Rule]", " ", 
      RowBox[{"a", " ", 
       RowBox[{"Sinh", "[", 
        FractionBox["t", "a"], "]"}]}]}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "1"], "\[Rule]", " ", 
      RowBox[{"a", " ", 
       RowBox[{"Cosh", "[", 
        FractionBox["t", "a"], "]"}], " ", 
       RowBox[{"Cos", "[", "\[Chi]", "]"}]}]}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "2"], "\[Rule]", " ", 
      RowBox[{"a", " ", 
       RowBox[{"Cosh", "[", 
        FractionBox["t", "a"], "]"}], " ", 
       RowBox[{"Sin", "[", "\[Chi]", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "3"], "\[Rule]", " ", 
      RowBox[{"a", " ", 
       RowBox[{"Cosh", "[", 
        FractionBox["t", "a"], "]"}], " ", 
       RowBox[{"Sin", "[", "\[Chi]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "4"], "\[Rule]", " ", 
      RowBox[{"a", " ", 
       RowBox[{"Cosh", "[", 
        FractionBox["t", "a"], "]"}], " ", 
       RowBox[{"Sin", "[", "\[Chi]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}]}], "\[IndentingNewLine]", 
    "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"transform4pt3", " ", "//", " ", "TableForm"}]}], "Input",
 CellLabel->"In[34]:=",ExpressionUUID->"ce728c9a-fdd6-459a-85cf-2d613faca062"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       SubscriptBox["Z", "0"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Sinh", "[", 
         FractionBox["t", "a"], "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "1"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Cos", "[", "\[Chi]", "]"}], " ", 
        RowBox[{"Cosh", "[", 
         FractionBox["t", "a"], "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "2"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Cosh", "[", 
         FractionBox["t", "a"], "]"}], " ", 
        RowBox[{"Sin", "[", "\[Chi]", "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "3"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Cosh", "[", 
         FractionBox["t", "a"], "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Chi]", "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "4"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Cosh", "[", 
         FractionBox["t", "a"], "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Chi]", "]"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[36]//TableForm=",ExpressionUUID->"dfc4f49d-687c-43a0-9c6f-\
8b96e929a6ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"hyperboloid4pt1", " "}], "\[IndentingNewLine]", 
 RowBox[{"hyperboloid4pt1", "  ", "//.", " ", 
  "transform4pt3"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hyperboloid4pt1", "  ", "//.", " ", "transform4pt3"}], "  ", "//", 
  " ", "Simplify", " ", 
  RowBox[{"(*", " ", "true", " ", "*)"}], " "}]}], "Input",
 CellLabel->"In[37]:=",ExpressionUUID->"6b31e974-0703-4b59-9ea1-edcc986b435f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SubsuperscriptBox["Z", "0", "2"]}], "+", 
   SubsuperscriptBox["Z", "1", "2"], "+", 
   SubsuperscriptBox["Z", "2", "2"], "+", 
   SubsuperscriptBox["Z", "3", "2"], "+", 
   SubsuperscriptBox["Z", "4", "2"]}], "\[Equal]", 
  SuperscriptBox["a", "2"]}]], "Output",
 CellLabel->"Out[37]=",ExpressionUUID->"04d3645c-70f5-4a45-8e2e-5e6e2b0e5412"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Chi]", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Cosh", "[", 
      FractionBox["t", "a"], "]"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Cosh", "[", 
      FractionBox["t", "a"], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Chi]", "]"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Cosh", "[", 
      FractionBox["t", "a"], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Chi]", "]"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Cosh", "[", 
      FractionBox["t", "a"], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Chi]", "]"}], "2"]}], "-", 
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sinh", "[", 
      FractionBox["t", "a"], "]"}], "2"]}]}], "\[Equal]", 
  SuperscriptBox["a", "2"]}]], "Output",
 CellLabel->"Out[38]=",ExpressionUUID->"b8ee40eb-1427-4bf6-bc45-40f5b668dd67"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[39]=",ExpressionUUID->"06b32dd2-bd2d-40d7-9142-cf643e564d32"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Dt", "[", " ", "transform4pt3", " ", "]"}], " ", "/.", " ", 
   "dtReplace"}], " ", "//", " ", "TableForm"}]], "Input",
 CellLabel->"In[40]:=",ExpressionUUID->"dc7c1427-8e35-4911-bcd2-f01294f2a5e0"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       SubscriptBox["dZ", "0"], "\[Rule]", 
       RowBox[{"dt", " ", 
        RowBox[{"Cosh", "[", 
         FractionBox["t", "a"], "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "1"], "\[Rule]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "a"}], " ", "d\[Chi]", " ", 
         RowBox[{"Cosh", "[", 
          FractionBox["t", "a"], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Chi]", "]"}]}], "+", 
        RowBox[{"dt", " ", 
         RowBox[{"Cos", "[", "\[Chi]", "]"}], " ", 
         RowBox[{"Sinh", "[", 
          FractionBox["t", "a"], "]"}]}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "2"], "\[Rule]", 
       RowBox[{
        RowBox[{"a", " ", "d\[Chi]", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Chi]", "]"}], " ", 
         RowBox[{"Cosh", "[", 
          FractionBox["t", "a"], "]"}]}], "-", 
        RowBox[{"a", " ", "d\[Theta]", " ", 
         RowBox[{"Cosh", "[", 
          FractionBox["t", "a"], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Chi]", "]"}]}], "+", 
        RowBox[{"dt", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Chi]", "]"}], " ", 
         RowBox[{"Sinh", "[", 
          FractionBox["t", "a"], "]"}]}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "3"], "\[Rule]", 
       RowBox[{
        RowBox[{"a", " ", "d\[Chi]", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Chi]", "]"}], " ", 
         RowBox[{"Cosh", "[", 
          FractionBox["t", "a"], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"a", " ", "d\[Theta]", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Cosh", "[", 
          FractionBox["t", "a"], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Chi]", "]"}]}], "-", 
        RowBox[{"a", " ", "d\[Phi]", " ", 
         RowBox[{"Cosh", "[", 
          FractionBox["t", "a"], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Chi]", "]"}]}], "+", 
        RowBox[{"dt", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Chi]", "]"}], " ", 
         RowBox[{"Sinh", "[", 
          FractionBox["t", "a"], "]"}]}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "4"], "\[Rule]", 
       RowBox[{
        RowBox[{"a", " ", "d\[Chi]", " ", 
         RowBox[{"Cos", "[", "\[Chi]", "]"}], " ", 
         RowBox[{"Cosh", "[", 
          FractionBox["t", "a"], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
        RowBox[{"a", " ", "d\[Phi]", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Cosh", "[", 
          FractionBox["t", "a"], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Chi]", "]"}]}], "+", 
        RowBox[{"a", " ", "d\[Theta]", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cosh", "[", 
          FractionBox["t", "a"], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Chi]", "]"}]}], "+", 
        RowBox[{"dt", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Chi]", "]"}], " ", 
         RowBox[{"Sinh", "[", 
          FractionBox["t", "a"], "]"}]}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[40]//TableForm=",ExpressionUUID->"43a37bfe-f8e6-4d2a-813c-\
1a0b3f5cc990"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "lineToMetric", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lineToMetric", "[", 
    RowBox[{"lineelement_", " ", ",", " ", "differentials_"}], "]"}], ":=", 
   " ", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"i", "\[Equal]", "j"}], " ", ",", 
       RowBox[{"Coefficient", "[", 
        RowBox[{"lineelement", ",", " ", 
         RowBox[{
          RowBox[{"differentials", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", 
          RowBox[{"differentials", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}], "*", 
        RowBox[{"Coefficient", "[", 
         RowBox[{"lineelement", ",", " ", 
          RowBox[{
           RowBox[{"differentials", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", 
           RowBox[{"differentials", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}]}], "]"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "differentials", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "differentials", "]"}]}], "}"}]}], "]"}]}], 
  "  ", ";"}]}], "Input",
 CellLabel->"In[41]:=",ExpressionUUID->"62e916bf-19bd-4cdf-a354-74142cf0f1a9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "metric4pt4", "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "remember", " ", "a", " ", "in", " ", "this", " ", "case", " ", "is", " ", 
    
    SqrtBox[
     RowBox[{"3", "/", "\[CapitalLambda]"}]]}], " ", "*)"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric4pt4", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lineToMetric", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{"Collect", "[", " ", 
        RowBox[{
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"lineElement", " ", "/.", " ", 
            RowBox[{"(", " ", 
             RowBox[{
              RowBox[{"Dt", "[", " ", "transform4pt3", " ", "]"}], " ", "/.", 
              " ", "dtReplace"}], " ", ")"}]}], " ", "//", " ", "Expand"}], 
          " ", ")"}], " ", ",", " ", 
         RowBox[{"{", " ", 
          RowBox[{
           SuperscriptBox["dt", "2"], ",", " ", 
           SuperscriptBox["d\[Chi]", "2"], ",", " ", 
           SuperscriptBox["d\[Theta]", "2"], ",", " ", 
           SuperscriptBox["d\[Phi]", "2"]}], " ", "}"}]}], " ", "]"}], "  ", 
       ")"}], " ", ",", " ", 
      RowBox[{"{", " ", 
       RowBox[{
       "dt", " ", ",", " ", "d\[Chi]", " ", ",", " ", "d\[Theta]", " ", ",", 
        " ", "d\[Phi]"}], " ", "}"}]}], " ", "]"}], "    ", "//", " ", 
    "Simplify"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"metric4pt4", " ", "//", " ", "MatrixForm"}]}], "Input",
 CellLabel->"In[43]:=",ExpressionUUID->"737f0782-140f-42ef-a48b-2564babd3bf7"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], "0", "0", "0"},
     {"0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cosh", "[", 
         FractionBox["t", "a"], "]"}], "2"]}], "0", "0"},
     {"0", "0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cosh", "[", 
         FractionBox["t", "a"], "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Chi]", "]"}], "2"]}], "0"},
     {"0", "0", "0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cosh", "[", 
         FractionBox["t", "a"], "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Chi]", "]"}], "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[45]//MatrixForm=",ExpressionUUID->"df13cf2a-2aaf-48e1-93e4-\
f55737c1e16f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "inverse4pt4", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inverse4pt4", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"Inverse", "[", " ", "metric4pt4", " ", "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"inverse4pt4", " ", "//", " ", "MatrixForm"}]}], "Input",
 CellLabel->
  "In[218]:=",ExpressionUUID->"5a40d897-54bc-4a4f-8e8e-810398edb65a"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], "0", "0", "0"},
     {"0", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Sech", "[", 
         FractionBox["t", "a"], "]"}], "2"], 
       SuperscriptBox["a", "2"]], "0", "0"},
     {"0", "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Csc", "[", "\[Chi]", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sech", "[", 
          FractionBox["t", "a"], "]"}], "2"]}], 
       SuperscriptBox["a", "2"]], "0"},
     {"0", "0", "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"Csc", "[", "\[Chi]", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sech", "[", 
          FractionBox["t", "a"], "]"}], "2"]}], 
       SuperscriptBox["a", "2"]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[220]//MatrixForm=",ExpressionUUID->"0ec3170f-5078-4513-8f50-\
47ad0bb6cbcd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"input", "[", " ", 
   RowBox[{
   "\"\<metric4pt4\>\"", ",", " ", "metric4pt4", ",", " ", "\"\<4pt4\>\"", 
    ",", "\"\<\!\(\*SuperscriptBox[\(g\), \(dS\)]\)\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "\[Chi]", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], ",",
     " ", "\"\<Greek\>\""}], "]"}], " ", "//", " ", "Timing"}]], "Input",
 CellLabel->"In[46]:=",ExpressionUUID->"02cc5704-8c14-4c19-8281-6e1d9295c13d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.82885`", ",", "Null"}], "}"}]], "Output",
 CellLabel->"Out[46]=",ExpressionUUID->"7bda48b9-42f9-4e9a-9086-e7400fa00330"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]], "Input",
 CellLabel->
  "In[178]:=",ExpressionUUID->"1d27f1c9-de7b-40d9-9a6c-1f7bd98225a9"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"-", "1"}], "0", "0", "0"},
      {"0", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        RowBox[{
         SuperscriptBox["cosh", "2"], "(", 
         FractionBox["t", "a"], ")"}]}], "0", "0"},
      {"0", "0", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}], " ", 
        RowBox[{
         SuperscriptBox["cosh", "2"], "(", 
         FractionBox["t", "a"], ")"}]}], "0"},
      {"0", "0", "0", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}], " ", 
        RowBox[{
         SuperscriptBox["cosh", "2"], "(", 
         FractionBox["t", "a"], ")"}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellLabel->
  "Out[178]//TraditionalForm=",ExpressionUUID->"cfd9ee87-1d78-49e7-8051-\
1a58171daa34"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]], "Input",
 CellLabel->
  "In[179]:=",ExpressionUUID->"1a7164c4-9f58-4a01-9fd8-e8d770c23eb6"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {
            RowBox[{
             FractionBox["1", "2"], " ", "a", " ", 
             RowBox[{"sinh", "(", 
              FractionBox[
               RowBox[{"2", " ", "t"}], "a"], ")"}]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{
             FractionBox["1", "2"], " ", "a", " ", 
             RowBox[{
              SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}], " ", 
             RowBox[{"sinh", "(", 
              FractionBox[
               RowBox[{"2", " ", "t"}], "a"], ")"}]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{
             FractionBox["1", "2"], " ", "a", " ", 
             RowBox[{
              SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
             RowBox[{
              SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}], " ", 
             RowBox[{"sinh", "(", 
              FractionBox[
               RowBox[{"2", " ", "t"}], "a"], ")"}]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {
            FractionBox[
             RowBox[{"tanh", "(", 
              FractionBox["t", "a"], ")"}], "a"]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{"tanh", "(", 
              FractionBox["t", "a"], ")"}], "a"]},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{
             RowBox[{"sin", "(", "\[Chi]", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"-", 
               RowBox[{"cos", "(", "\[Chi]", ")"}]}], ")"}]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{
             RowBox[{
              SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
             RowBox[{"sin", "(", "\[Chi]", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"-", 
               RowBox[{"cos", "(", "\[Chi]", ")"}]}], ")"}]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            FractionBox[
             RowBox[{"tanh", "(", 
              FractionBox["t", "a"], ")"}], "a"]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{"cot", "(", "\[Chi]", ")"}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{"tanh", "(", 
              FractionBox["t", "a"], ")"}], "a"]},
           {
            RowBox[{"cot", "(", "\[Chi]", ")"}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{
             RowBox[{"sin", "(", "\[Theta]", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"-", 
               RowBox[{"cos", "(", "\[Theta]", ")"}]}], ")"}]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            FractionBox[
             RowBox[{"tanh", "(", 
              FractionBox["t", "a"], ")"}], "a"]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{"cot", "(", "\[Chi]", ")"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{"cot", "(", "\[Theta]", ")"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{"tanh", "(", 
              FractionBox["t", "a"], ")"}], "a"]},
           {
            RowBox[{"cot", "(", "\[Chi]", ")"}]},
           {
            RowBox[{"cot", "(", "\[Theta]", ")"}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellLabel->
  "Out[179]//TraditionalForm=",ExpressionUUID->"776d2958-67d1-4afd-8b91-\
99fa23265034"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]], "Input",
 CellLabel->
  "In[180]:=",ExpressionUUID->"ab4a1c02-da74-4704-a027-98b646202ee1"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{"-", 
            RowBox[{
             SuperscriptBox["cosh", "2"], "(", 
             FractionBox["t", "a"], ")"}]}], "0", "0"},
          {
           RowBox[{
            SuperscriptBox["cosh", "2"], "(", 
            FractionBox["t", "a"], ")"}], "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              RowBox[{
               SuperscriptBox["cosh", "2"], "(", 
               FractionBox["t", "a"], ")"}]}], ")"}]}], "0"},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["cosh", "2"], "(", 
             FractionBox["t", "a"], ")"}]}], "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              RowBox[{
               SuperscriptBox["cosh", "2"], "(", 
               FractionBox["t", "a"], ")"}]}], ")"}]}]},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["cosh", "2"], "(", 
             FractionBox["t", "a"], ")"}]}], "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{
            SuperscriptBox["cosh", "2"], "(", 
            FractionBox["t", "a"], ")"}], "0", "0"},
          {
           RowBox[{"-", 
            RowBox[{
             SuperscriptBox["cosh", "2"], "(", 
             FractionBox["t", "a"], ")"}]}], "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["cosh", "4"], "(", 
             FractionBox["t", "a"], ")"}]}], "0"},
          {"0", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["a", "2"]}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["cosh", "4"], "(", 
             FractionBox["t", "a"], ")"}]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["cosh", "4"], "(", 
             FractionBox["t", "a"], ")"}]}]},
          {"0", "0", "0", "0"},
          {"0", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["a", "2"]}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["cosh", "4"], "(", 
             FractionBox["t", "a"], ")"}]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["cosh", "2"], "(", 
             FractionBox["t", "a"], ")"}]}], "0"},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              RowBox[{
               SuperscriptBox["cosh", "2"], "(", 
               FractionBox["t", "a"], ")"}]}], ")"}]}], "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["a", "2"]}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["cosh", "4"], "(", 
             FractionBox["t", "a"], ")"}]}], "0"},
          {"0", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["cosh", "4"], "(", 
             FractionBox["t", "a"], ")"}]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "4"], "(", "\[Chi]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["cosh", "4"], "(", 
             FractionBox["t", "a"], ")"}]}]},
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["a", "2"]}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "4"], "(", "\[Chi]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["cosh", "4"], "(", 
             FractionBox["t", "a"], ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["cosh", "2"], "(", 
             FractionBox["t", "a"], ")"}]}]},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              RowBox[{
               SuperscriptBox["cosh", "2"], "(", 
               FractionBox["t", "a"], ")"}]}], ")"}]}], "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["a", "2"]}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["cosh", "4"], "(", 
             FractionBox["t", "a"], ")"}]}]},
          {"0", "0", "0", "0"},
          {"0", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["cosh", "4"], "(", 
             FractionBox["t", "a"], ")"}]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["a", "2"]}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "4"], "(", "\[Chi]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["cosh", "4"], "(", 
             FractionBox["t", "a"], ")"}]}]},
          {"0", "0", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "4"], "(", "\[Chi]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["cosh", "4"], "(", 
             FractionBox["t", "a"], ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellLabel->
  "Out[180]//TraditionalForm=",ExpressionUUID->"035a9923-1f02-4b03-8b5d-\
4edec26325e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]], "Input",
 CellLabel->
  "In[181]:=",ExpressionUUID->"97f6cb85-3e71-4c8a-bcc2-751808836216"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"-", 
        FractionBox["3", 
         SuperscriptBox["a", "2"]]}], "0", "0", "0"},
      {"0", 
       RowBox[{"3", " ", 
        RowBox[{
         SuperscriptBox["cosh", "2"], "(", 
         FractionBox["t", "a"], ")"}]}], "0", "0"},
      {"0", "0", 
       RowBox[{"3", " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}], " ", 
        RowBox[{
         SuperscriptBox["cosh", "2"], "(", 
         FractionBox["t", "a"], ")"}]}], "0"},
      {"0", "0", "0", 
       RowBox[{"3", " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}], " ", 
        RowBox[{
         SuperscriptBox["cosh", "2"], "(", 
         FractionBox["t", "a"], ")"}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellLabel->
  "Out[181]//TraditionalForm=",ExpressionUUID->"f7141413-3cef-4b4d-ba92-\
a416459cffbf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "5", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]], "Input",
 CellLabel->
  "In[182]:=",ExpressionUUID->"cdb91885-2b17-49fa-95cf-2896b2805863"],

Cell[BoxData[
 FormBox[
  TagBox[
   FractionBox["12", 
    SuperscriptBox["a", "2"]],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellLabel->
  "Out[182]//TraditionalForm=",ExpressionUUID->"a48fc8ba-c35d-4f16-abe2-\
d960339cb3d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "6", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]], "Input",
 CellLabel->
  "In[183]:=",ExpressionUUID->"b740527b-dc15-479d-b9f4-ee96f005add2"],

Cell[BoxData[
 FormBox[
  TagBox[
   FractionBox["24", 
    SuperscriptBox["a", "4"]],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellLabel->
  "Out[183]//TraditionalForm=",ExpressionUUID->"515489dc-9c30-41a1-9643-\
d1baf96cdc42"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "7", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]], "Input",
 CellLabel->
  "In[184]:=",ExpressionUUID->"d5965f46-f359-4511-8ce7-12049bbdc346"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       FractionBox["3", 
        SuperscriptBox["a", "2"]], "0", "0", "0"},
      {"0", 
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        RowBox[{
         SuperscriptBox["cosh", "2"], "(", 
         FractionBox["t", "a"], ")"}]}], "0", "0"},
      {"0", "0", 
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}], " ", 
        RowBox[{
         SuperscriptBox["cosh", "2"], "(", 
         FractionBox["t", "a"], ")"}]}], "0"},
      {"0", "0", "0", 
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}], " ", 
        RowBox[{
         SuperscriptBox["cosh", "2"], "(", 
         FractionBox["t", "a"], ")"}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellLabel->
  "Out[184]//TraditionalForm=",ExpressionUUID->"c951db54-ac38-4fa9-98b0-\
f0b78421a40f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "8", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]], "Input",
 CellLabel->
  "In[185]:=",ExpressionUUID->"bc2bfcca-5f18-48cb-b83a-f35132691ba2"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellLabel->
  "Out[185]//TraditionalForm=",ExpressionUUID->"b2fcd3cd-03ce-4c3a-957d-\
56326b865796"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "9", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]], "Input",
 CellLabel->
  "In[186]:=",ExpressionUUID->"c2a338c0-f8bb-4f68-93de-7a46ae2570a8"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellLabel->
  "Out[186]//TraditionalForm=",ExpressionUUID->"d6cdee0c-4b7a-4ac5-a10e-\
298d521994d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "\[ScriptL]", "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"\[ScriptL]", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    FractionBox["1", 
     SqrtBox["2"]], ")"}], "*", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"PowerExpand", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"-", 
        RowBox[{"metric4pt4", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], " ", ",", 
     RowBox[{"PowerExpand", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"metric4pt4", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}], "]"}], " ", ",", "0", 
     ",", "0"}], "}"}]}]}]}], "Input",
 CellLabel->
  "In[268]:=",ExpressionUUID->"e6e0ec89-1280-41dc-8230-500674472707"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    SqrtBox["2"]], ",", 
   FractionBox[
    RowBox[{"a", " ", 
     RowBox[{"Cosh", "[", 
      FractionBox["t", "a"], "]"}]}], 
    SqrtBox["2"]], ",", "0", ",", "0"}], "}"}]], "Output",
 CellLabel->
  "Out[269]=",ExpressionUUID->"430d4bf3-d49a-41fc-bdcb-474f108b5680"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[ScriptN]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[ScriptN]", " ", "=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    FractionBox["1", 
     SqrtBox["2"]], ")"}], "*", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"PowerExpand", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"-", 
        RowBox[{"metric4pt4", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], " ", ",", 
     " ", 
     RowBox[{"-", 
      RowBox[{"PowerExpand", "[", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"metric4pt4", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], " ", ",", 
     "0", ",", "0"}], "}"}]}]}]}], "Input",
 CellLabel->
  "In[270]:=",ExpressionUUID->"6b60d8dc-485d-452a-a737-edc0dc06cb5c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    SqrtBox["2"]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"a", " ", 
      RowBox[{"Cosh", "[", 
       FractionBox["t", "a"], "]"}]}], 
     SqrtBox["2"]]}], ",", "0", ",", "0"}], "}"}]], "Output",
 CellLabel->
  "Out[271]=",ExpressionUUID->"98d4eba4-c707-48c8-b028-3447416e9a5f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[ScriptM]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[ScriptM]", " ", "=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    FractionBox["1", 
     SqrtBox["2"]], ")"}], "*", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", " ", 
     RowBox[{"PowerExpand", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"metric4pt4", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "3"}], "]"}], "]"}], "]"}], "]"}], " ", ",", " ", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"PowerExpand", "[", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"metric4pt4", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "4"}], "]"}], "]"}], "]"}], "]"}]}]}], " ", 
    "}"}]}]}]}], "Input",
 CellLabel->
  "In[225]:=",ExpressionUUID->"dfebff46-1925-4388-ba47-d9ad4c49539e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", 
   FractionBox[
    RowBox[{"a", " ", 
     RowBox[{"Cosh", "[", 
      FractionBox["t", "a"], "]"}], " ", 
     RowBox[{"Sin", "[", "\[Chi]", "]"}]}], 
    SqrtBox["2"]], ",", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", "a", " ", 
     RowBox[{"Cosh", "[", 
      FractionBox["t", "a"], "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Chi]", "]"}]}], 
    SqrtBox["2"]]}], "}"}]], "Output",
 CellLabel->
  "Out[226]=",ExpressionUUID->"83e85eec-7eff-4e9e-897e-f8ae38755a1c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[ScriptM]bar", "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[ScriptM]bar", " ", "=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    FractionBox["1", 
     SqrtBox["2"]], ")"}], "*", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", " ", 
     RowBox[{"PowerExpand", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"metric4pt4", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "3"}], "]"}], "]"}], "]"}], "]"}], " ", ",", " ", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      RowBox[{"PowerExpand", "[", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"metric4pt4", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "4"}], "]"}], "]"}], "]"}], "]"}]}]}], " ", 
    "}"}]}]}]}], "Input",
 CellLabel->
  "In[227]:=",ExpressionUUID->"08acfc47-84fc-4d0e-a09e-49f2ac987dca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", 
   FractionBox[
    RowBox[{"a", " ", 
     RowBox[{"Cosh", "[", 
      FractionBox["t", "a"], "]"}], " ", 
     RowBox[{"Sin", "[", "\[Chi]", "]"}]}], 
    SqrtBox["2"]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "a", " ", 
      RowBox[{"Cosh", "[", 
       FractionBox["t", "a"], "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Chi]", "]"}]}], 
     SqrtBox["2"]]}]}], "}"}]], "Output",
 CellLabel->
  "Out[228]=",ExpressionUUID->"4ce0fff9-4c1e-4522-abba-aa1cab77ead3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "ALWAYS", " ", "ALWAYS", " ", "ALWAYS", " ", "CHECK", " ", "IF", " ", 
    "INDICES", " ", "ARE", " ", "UP", " ", "OR", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"DOWN", " ", "!!"}], "!!"}], "!"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"l", " ", "=", " ", 
    RowBox[{"ToTensor", "[", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<NewTensor\>\"", " ", ",", " ", "\"\<l\>\""}], "}"}], " ", 
      ",", " ", 
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", "\[ScriptL]", " ", ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{"-", "\[Mu]"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"n", " ", "=", " ", 
    RowBox[{"ToTensor", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<NewTensor\>\"", " ", ",", " ", "\"\<n\>\""}], " ", "}"}], 
      " ", ",", " ", 
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", "\[ScriptN]", " ", ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{"-", "\[Mu]"}], "}"}]}], " ", "]"}]}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"m", " ", "=", " ", 
    RowBox[{"ToTensor", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<NewTensor\>\"", " ", ",", " ", "\"\<m\>\""}], " ", "}"}], 
      " ", ",", " ", 
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", "\[ScriptM]", " ", ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{"-", "\[Mu]"}], "}"}]}], " ", "]"}]}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"mbar", " ", "=", " ", 
    RowBox[{"ToTensor", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<NewTensor\>\"", " ", ",", " ", "\"\<mbar\>\""}], " ", 
       "}"}], " ", ",", " ", 
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", "\[ScriptM]bar", " ", 
      ",", " ", 
      RowBox[{"{", 
       RowBox[{"-", "\[Mu]"}], "}"}]}], " ", "]"}], " "}]}]}]], "Input",ExpressionUUID->"a5592e01-b676-4d2e-8c4a-29c4a1ee3506"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["l", "\[Mu]", ""],
  DisplayForm]], "Output",
 CellLabel->
  "Out[292]=",ExpressionUUID->"8ec1aee7-52c7-4204-bda6-39fbbdbeb7bc"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["n", "\[Mu]", ""],
  DisplayForm]], "Output",
 CellLabel->
  "Out[293]=",ExpressionUUID->"6a7b1139-617e-4924-b06b-0d457600f166"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["m", "\[Mu]", ""],
  DisplayForm]], "Output",
 CellLabel->
  "Out[294]=",ExpressionUUID->"f5b8f704-6ab6-4a4a-a68c-062b8b826a30"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["mbar", "\[Mu]", ""],
  DisplayForm]], "Output",
 CellLabel->
  "Out[295]=",ExpressionUUID->"6819862a-7ac9-4b12-85ec-9a1763366994"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"l", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"l", "[", "\[Mu]", "]"}]}], "]"}], "]"}], " ", "\[Equal]", 
     " ", "0"}], "  ", "//", " ", "Expand"}], " ", "//", " ", "Simplify"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"n", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"n", "[", "\[Mu]", "]"}]}], "]"}], " ", "]"}], "\[Equal]", 
     " ", "0"}], "  ", "//", " ", "Expand"}], " ", "//", " ", "Simplify"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"m", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"m", "[", "\[Mu]", "]"}]}], "]"}], "]"}], " ", "\[Equal]", 
     " ", "0"}], "   ", "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"mbar", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"mbar", "[", "\[Mu]", "]"}]}], "]"}], "]"}], " ", "\[Equal]", 
     " ", "0"}], "  ", "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"l", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"n", "[", "\[Mu]", "]"}]}], "]"}], "]"}], " ", "\[Equal]", 
     " ", 
     RowBox[{"-", "1"}]}], "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"l", "[", "\[Mu]", "]"}], 
        RowBox[{"n", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}]}], "]"}], "]"}], " ", "\[Equal]", " ", 
     
     RowBox[{"-", "1"}]}], "  ", "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"m", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"mbar", "[", "\[Mu]", "]"}]}], "]"}], "]"}], " ", "\[Equal]", 
     "  ", "1"}], " ", "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"m", "[", "\[Mu]", "]"}], 
        RowBox[{"mbar", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}]}], "]"}], "]"}], " ", "\[Equal]", "  ",
      "1"}], " ", "//", " ", "Expand"}], " ", "//", " ", "FullSimplify"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "completenessDownIndices", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"completenessDownIndices", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"MergeTensors", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"l", "[", 
        RowBox[{"-", "\[Mu]"}], "]"}]}], 
      RowBox[{"n", "[", 
       RowBox[{"-", "\[Nu]"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"n", "[", 
       RowBox[{"-", "\[Mu]"}], "]"}], 
      RowBox[{"l", "[", 
       RowBox[{"-", "\[Nu]"}], "]"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"m", "[", 
       RowBox[{"-", "\[Mu]"}], "]"}], 
      RowBox[{"mbar", "[", 
       RowBox[{"-", "\[Nu]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"m", "[", 
       RowBox[{"-", "\[Nu]"}], "]"}], 
      RowBox[{"mbar", "[", 
       RowBox[{"-", "\[Mu]"}], "]"}]}]}], "]"}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", " ", "completenessDownIndices", " ", "]"}], 
   "  ", "//", " ", "MatrixForm"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", "metric4pt4", "]"}], " ", "\[Equal]", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", " ", 
       RowBox[{
       "TensorValues", "[", " ", "completenessDownIndices", " ", "]"}], 
       "]"}]}], " ", "]"}], " ", "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "completenessUpIndices", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"completenessUpIndices", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"MergeTensors", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"l", "[", "\[Mu]", "]"}]}], 
      RowBox[{"n", "[", "\[Nu]", "]"}]}], "-", 
     RowBox[{
      RowBox[{"n", "[", "\[Mu]", "]"}], 
      RowBox[{"l", "[", "\[Nu]", "]"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"m", "[", "\[Mu]", "]"}], 
      RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "+", " ", 
     RowBox[{
      RowBox[{"m", "[", "\[Nu]", "]"}], 
      RowBox[{"mbar", "[", "\[Mu]", "]"}]}]}], "]"}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", " ", "completenessUpIndices", " ", "]"}], 
   "  ", "//", " ", "MatrixForm"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", "inverse4pt4", "]"}], " ", "\[Equal]", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Flatten", "[", " ", 
      RowBox[{"TensorValues", "[", " ", "completenessUpIndices", " ", "]"}], 
      "]"}]}], " ", "]"}], "  ", "//", " ", "Expand"}], " ", "//", " ", 
  "FullSimplify", " "}]}], "Input",ExpressionUUID->"de046c5b-ab32-42c5-aea4-\
2e2d3cd205de"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[329]=",ExpressionUUID->"2af480c9-d3a5-49fb-b0af-2afd0735ae13"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[330]=",ExpressionUUID->"f6e4c361-a8f6-4361-a3c8-e2d20a4be0ad"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[331]=",ExpressionUUID->"07ca9830-d919-4137-8bf3-ce7f003d9ff1"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[332]=",ExpressionUUID->"888a2761-6c09-42e6-adfc-dd09c52cc6e2"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[333]=",ExpressionUUID->"9b3585fd-a218-4547-9249-73a374fd1ac6"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[334]=",ExpressionUUID->"3442016e-7481-4fa3-9cce-0c878f8d81c1"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[335]=",ExpressionUUID->"f67d66e7-bb27-44e4-b8c7-6f39987eaaae"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[336]=",ExpressionUUID->"22d857e4-9c3e-445d-8ce4-9a25b2cc91ee"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], "0", "0", "0"},
     {"0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cosh", "[", 
         FractionBox["t", "a"], "]"}], "2"]}], "0", "0"},
     {"0", "0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cosh", "[", 
         FractionBox["t", "a"], "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Chi]", "]"}], "2"]}], "0"},
     {"0", "0", "0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cosh", "[", 
         FractionBox["t", "a"], "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Chi]", "]"}], "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[339]//MatrixForm=",ExpressionUUID->"e687f7d5-1270-4f3f-ba99-\
a493c174b5e0"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[340]=",ExpressionUUID->"a0dcbbb4-d3be-43ea-8443-22994e4f7699"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], "0", "0", "0"},
     {"0", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Sech", "[", 
         FractionBox["t", "a"], "]"}], "2"], 
       SuperscriptBox["a", "2"]], "0", "0"},
     {"0", "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Csc", "[", "\[Chi]", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sech", "[", 
          FractionBox["t", "a"], "]"}], "2"]}], 
       SuperscriptBox["a", "2"]], "0"},
     {"0", "0", "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"Csc", "[", "\[Chi]", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sech", "[", 
          FractionBox["t", "a"], "]"}], "2"]}], 
       SuperscriptBox["a", "2"]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[343]//MatrixForm=",ExpressionUUID->"eb2335b9-6fff-4ce2-a503-\
38b900b7a511"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[344]=",ExpressionUUID->"a207fc51-c6d6-4275-9ffd-6f32ef35d63e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"Clear", "[", "spinCoefficientReplace", "]"}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{"Page", " ", "56", " ", "Wang"}], " ", "*)"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "check", " ", "where", " ", "these", " ", "definitions", " ", "came", " ",
      "from"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"spinCoefficientReplace", "=", " ", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Rho]", " ", "\[Rule]", 
        RowBox[{"(", "  ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"MergeTensors", "[", " ", 
             RowBox[{
              RowBox[{"CovariantD", "[", " ", 
               RowBox[{
                RowBox[{"l", "[", 
                 RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
              RowBox[{"m", "[", "\[Mu]", "]"}], " ", 
              RowBox[{"mbar", "[", "\[Nu]", "]"}]}], " ", "]"}], " ", "//", 
            " ", "TensorValues"}], "  ", "//", " ", "Expand"}], " ", "//", 
          " ", "FullSimplify"}], " ", ")"}]}], "  ", ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Mu]", "\[Rule]", " ", 
        RowBox[{"(*", 
         RowBox[{"note", " ", "minus", " ", "sign"}], " ", "*)"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"MergeTensors", " ", "[", " ", 
              RowBox[{
               RowBox[{"CovariantD", "[", " ", 
                RowBox[{
                 RowBox[{"n", "[", 
                  RowBox[{"-", "\[Mu]"}], "]"}], " ", ",", " ", 
                 RowBox[{"-", "\[Nu]"}]}], " ", "]"}], " ", 
               RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
               RowBox[{"m", "[", "\[Nu]", "]"}]}], " ", "]"}], " ", "//", " ",
              "TensorValues"}], "  ", "//", " ", "Expand"}], "  ", "//", " ", 
           "FullSimplify"}], " ", ")"}]}]}], "  ", ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"\[CurlyEpsilon]", " ", "\[Rule]", " ", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", "2"}], ")"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"MergeTensors", "[", 
                   RowBox[{
                    RowBox[{"CovariantD", "[", 
                    RowBox[{
                    RowBox[{"l", "[", 
                    RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                    RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                    RowBox[{"n", "[", "\[Mu]", "]"}], " ", 
                    RowBox[{"l", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ",
                   "TensorValues"}], "  ", "//", " ", "Expand"}], "  ", "//", 
                " ", "FullSimplify"}], "  ", ")"}], "  ", "-", " ", 
              "\[IndentingNewLine]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"MergeTensors", "[", " ", 
                   RowBox[{
                    RowBox[{"CovariantD", "[", " ", 
                    RowBox[{
                    RowBox[{"m", "[", 
                    RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                    RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                    RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
                    RowBox[{"l", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ",
                   "TensorValues"}], " ", "//", " ", "Expand"}], " ", "//", 
                " ", "FullSimplify"}], ")"}]}], " ", ")"}]}], " ", "//", " ", 
           "Expand"}], "  ", "//", " ", "FullSimplify"}], " ", ")"}]}], " ", 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"\[Gamma]", " ", "\[Rule]", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "something", " ", "weird", " ", "here", " ", "correct", " ", 
          "definition", " ", "off", " ", "by", " ", "minus", " ", "sign"}], 
         " ", "*)"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            FractionBox["1", "2"], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"MergeTensors", "[", 
                 RowBox[{
                  RowBox[{"CovariantD", "[", " ", 
                   RowBox[{
                    RowBox[{"l", "[", 
                    RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                    RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                  RowBox[{"n", "[", "\[Mu]", "]"}], 
                  RowBox[{"n", "[", "\[Nu]", "]"}]}], " ", "]"}], " ", "//", 
                " ", "TensorValues"}], "  ", "//", " ", "Expand"}], "  ", 
              ")"}], "-", "\[IndentingNewLine]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"MergeTensors", "[", 
                  RowBox[{
                   RowBox[{"CovariantD", "[", " ", 
                    RowBox[{
                    RowBox[{"m", "[", 
                    RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                    RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                   RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
                   RowBox[{"n", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
                 "TensorValues"}], " ", "//", " ", "Expand"}], "  ", "//", 
               " ", "FullSimplify"}], " ", ")"}]}], ")"}]}], " ", "//", " ", 
          "Expand"}], " ", ")"}]}], " ", ",", " ", "\[IndentingNewLine]", 
       RowBox[{"\[Sigma]", "\[Rule]", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"MergeTensors", "[", " ", 
             RowBox[{
              RowBox[{"CovariantD", "[", 
               RowBox[{
                RowBox[{"l", "[", 
                 RowBox[{"-", "\[Mu]"}], "]"}], " ", ",", " ", 
                RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
              RowBox[{"m", "[", "\[Mu]", "]"}], " ", 
              RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
            "TensorValues"}], "  ", "//", " ", "Expand"}], " ", "//", " ", 
          "FullSimplify"}], ")"}]}], "  ", ",", " ", "\[IndentingNewLine]", 
       RowBox[{"\[Lambda]", "\[Rule]", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"note", " ", "minus", " ", "sign"}], " ", "*)"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"MergeTensors", "[", " ", 
              RowBox[{
               RowBox[{"CovariantD", "[", " ", 
                RowBox[{
                 RowBox[{"n", "[", 
                  RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                 RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
               RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
               RowBox[{"mbar", "[", "\[Nu]", "]"}]}], " ", "]"}], "  ", "//", 
             " ", "TensorValues"}], " ", "//", " ", "Expand"}], " ", "//", 
           " ", "FullSimplify"}], ")"}]}]}], "  ", ",", "\[IndentingNewLine]", 
       RowBox[{"\[Kappa]", "\[Rule]", 
        RowBox[{"(", "  ", 
         RowBox[{
          RowBox[{"MergeTensors", "[", " ", 
           RowBox[{
            RowBox[{"CovariantD", "[", " ", 
             RowBox[{
              RowBox[{"l", "[", 
               RowBox[{"-", "\[Mu]"}], "]"}], " ", ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
            RowBox[{"m", "[", "\[Mu]", "]"}], " ", 
            RowBox[{"l", "[", "\[Nu]", "]"}]}], "  ", "]"}], "  ", "//", " ", 
          "TensorValues"}], " ", ")"}]}], " ", ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Nu]", "\[Rule]", " ", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"MergeTensors", "[", " ", 
           RowBox[{
            RowBox[{"CovariantD", "[", " ", 
             RowBox[{
              RowBox[{"n", "[", 
               RowBox[{"-", "\[Mu]"}], "]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"m", "[", "\[Mu]", "]"}], " ", 
            RowBox[{"n", "[", "\[Nu]", "]"}]}], " ", "]"}], " ", "//", " ", 
          "TensorValues"}], " ", ")"}]}], " ", ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Tau]", "\[Rule]", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"MergeTensors", "[", " ", 
           RowBox[{
            RowBox[{"CovariantD", "[", " ", 
             RowBox[{
              RowBox[{"l", "[", 
               RowBox[{"-", "\[Mu]"}], "]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
            RowBox[{"m", "[", "\[Mu]", "]"}], " ", 
            RowBox[{"n", "[", "\[Nu]", " ", "]"}]}], "]"}], "//", " ", 
          "TensorValues"}], " ", ")"}]}], " ", ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Pi]", "\[Rule]", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"Note", " ", "minus", " ", "sign"}], " ", "*)"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"MergeTensors", "[", 
             RowBox[{
              RowBox[{"CovariantD", "[", " ", 
               RowBox[{
                RowBox[{"n", "[", 
                 RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
              RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
              RowBox[{"l", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
            "TensorValues"}], "  ", "//", " ", "Expand"}], " ", ")"}]}]}], 
       " ", ",", " ", "\[IndentingNewLine]", 
       RowBox[{"\[Alpha]", "\[Rule]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "/", "2"}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MergeTensors", "[", 
               RowBox[{
                RowBox[{"CovariantD", "[", " ", 
                 RowBox[{
                  RowBox[{"l", "[", 
                   RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                  RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                RowBox[{"n", "[", "\[Mu]", "]"}], " ", 
                RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
              "TensorValues"}], " ", ")"}], "-", "\[IndentingNewLine]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MergeTensors", "[", 
               RowBox[{
                RowBox[{"CovariantD", "[", " ", 
                 RowBox[{
                  RowBox[{"m", "[", 
                   RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                  RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
                RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
              "TensorValues"}], ")"}]}], ")"}]}], " ", ")"}]}], " ", ",", " ",
        "\[IndentingNewLine]", 
       RowBox[{"\[Beta]", " ", "\[Rule]", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"Spin", " ", "coefficient", " ", "\[Beta]"}], " ", "*)"}], 
        " ", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "/", "2"}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MergeTensors", "[", " ", 
               RowBox[{
                RowBox[{"CovariantD", "[", " ", 
                 RowBox[{
                  RowBox[{"l", "[", 
                   RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                  RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                RowBox[{"n", "[", "\[Mu]", "]"}], 
                RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
              "TensorValues"}], ")"}], "-", " ", "\[IndentingNewLine]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MergeTensors", "[", 
               RowBox[{
                RowBox[{"CovariantD", "[", " ", 
                 RowBox[{
                  RowBox[{"m", "[", 
                   RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                  RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
                RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
              "TensorValues"}], " ", ")"}]}], ")"}]}], ")"}]}]}], 
      "\[IndentingNewLine]", "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"spinCoefficientReplace", " ", "//", " ", "TableForm"}], " ", "//",
     " ", "pdConv"}]}]}]], "Input",
 CellLabel->
  "In[345]:=",ExpressionUUID->"27931353-2138-4006-9335-077028d640a6"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{"\[Rho]", "\[Rule]", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"cot", "(", "\[Chi]", ")"}], " ", 
           RowBox[{"sech", "(", 
            FractionBox["t", "a"], ")"}]}], "-", 
          RowBox[{"tanh", "(", 
           FractionBox["t", "a"], ")"}]}], 
         RowBox[{
          SqrtBox["2"], " ", "a"}]]}]},
      {
       RowBox[{"\[Mu]", "\[Rule]", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"cot", "(", "\[Chi]", ")"}], " ", 
           RowBox[{"sech", "(", 
            FractionBox["t", "a"], ")"}]}], "+", 
          RowBox[{"tanh", "(", 
           FractionBox["t", "a"], ")"}]}], 
         RowBox[{
          SqrtBox["2"], " ", "a"}]]}]},
      {
       RowBox[{"\[CurlyEpsilon]", "\[Rule]", 
        FractionBox[
         RowBox[{"tanh", "(", 
          FractionBox["t", "a"], ")"}], 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "a"}]]}]},
      {
       RowBox[{"\[Gamma]", "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"tanh", "(", 
           FractionBox["t", "a"], ")"}], 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "a"}]]}]}]},
      {
       RowBox[{"\[Sigma]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Lambda]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Kappa]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Nu]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Tau]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Pi]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Alpha]", "\[Rule]", 
        FractionBox[
         RowBox[{
          RowBox[{"cot", "(", "\[Theta]", ")"}], " ", 
          RowBox[{"csc", "(", "\[Chi]", ")"}], " ", 
          RowBox[{"sech", "(", 
           FractionBox["t", "a"], ")"}]}], 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "a"}]]}]},
      {
       RowBox[{"\[Beta]", "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"cot", "(", "\[Theta]", ")"}], " ", 
           RowBox[{"csc", "(", "\[Chi]", ")"}], " ", 
           RowBox[{"sech", "(", 
            FractionBox["t", "a"], ")"}]}], 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "a"}]]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellLabel->
  "Out[347]//TraditionalForm=",ExpressionUUID->"00e0241a-36ff-43f1-9f25-\
67c2f20dcfdb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "ricciScalarsReplace", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Definitions", " ", "from", " ", "Griffiths"}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Page", " ", "57", " ", "Wang"}], " ", "*)"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ricciScalarsReplace", " ", "=", " ", 
   RowBox[{"{", "\n", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "oo"], "\[Rule]", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"be", " ", "careful", " ", "about", " ", 
          RowBox[{"oh", "'"}], "s", " ", "not", " ", "zeros"}], " ", "*)"}], 
        " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Mu]", "]"}], 
            RowBox[{"l", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], "  ", ",", " ", 
     "\n", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "O1"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Mu]", "]"}], 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], ",", " ", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "O2"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"m", "[", "\[Mu]", "]"}], 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], ",", " ", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "11"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "4"], ")"}], "*", 
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{"TensorValues", "[", 
             RowBox[{"MergeTensors", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"tensorList", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], "[", 
                RowBox[{
                 RowBox[{"-", "\[Mu]"}], ",", 
                 RowBox[{"-", "\[Nu]"}]}], "]"}], 
               RowBox[{"l", "[", "\[Mu]", "]"}], 
               RowBox[{"n", "[", "\[Nu]", "]"}]}], "]"}], "]"}], ")"}], "+", 
           " ", 
           RowBox[{"(", 
            RowBox[{"TensorValues", "[", 
             RowBox[{"MergeTensors", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"tensorList", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], "[", 
                RowBox[{
                 RowBox[{"-", "\[Mu]"}], ",", 
                 RowBox[{"-", "\[Nu]"}]}], "]"}], 
               RowBox[{"m", "[", "\[Mu]", "]"}], 
               RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], "]"}], ")"}]}], 
          ")"}]}]}], " ", "//", " ", "Expand"}], " ", "//", " ", 
      "FullSimplify"}], ",", " ", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "12"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"n", "[", "\[Mu]", "]"}], 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], ",", " ", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "22"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"n", "[", "\[Mu]", "]"}], 
            RowBox[{"n", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", " ", 
       "Expand"}], " ", "//", " ", "FullSimplify"}], " ", ",", " ", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalLambda]", "\[Rule]", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox["1", "24"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"tensorList", "[", 
           RowBox[{"[", "5", "]"}], "]"}], "]"}]}]}], "//", " ", "Expand"}], 
      " ", "//", " ", "FullSimplify"}]}], "\[IndentingNewLine]", "}"}]}], " ",
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ricciScalarsReplace", "  ", "//", " ", "TableForm"}], " ", "//", 
  " ", "pdConv"}]}], "Input",
 CellLabel->
  "In[348]:=",ExpressionUUID->"4bf3bc61-9fc1-4411-b40f-f98e238f809f"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "oo"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "O1"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "O2"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "11"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "12"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "22"], "\[Rule]", "0"}]},
      {
       RowBox[{"\[CapitalLambda]", "\[Rule]", 
        FractionBox["1", 
         RowBox[{"2", " ", 
          SuperscriptBox["a", "2"]}]]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellLabel->
  "Out[350]//TraditionalForm=",ExpressionUUID->"f0633fcb-86f6-4a61-8fa0-\
ccceb15f00ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "weylScalarsReplace", "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Definitions", " ", "from", " ", "Griffiths"}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Page", " ", "57", " ", "Wang"}], " ", "*)"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"weylScalarsReplace", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", "\n", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "0"], "\[Rule]", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], ",", 
              RowBox[{"-", "\[Lambda]"}], ",", 
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Kappa]", "]"}], 
            RowBox[{"m", "[", "\[Lambda]", "]"}], 
            RowBox[{"l", "[", "\[Mu]", "]"}], 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", " ", 
       "Expand"}], " ", "//", " ", "FullSimplify"}], " ", ",", " ", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "1"], "\[Rule]", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], ",", 
              RowBox[{"-", "\[Lambda]"}], ",", 
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Kappa]", "]"}], 
            RowBox[{"n", "[", "\[Lambda]", "]"}], 
            RowBox[{"l", "[", "\[Mu]", "]"}], 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", " ", 
       "Expand"}], " ", "//", " ", "FullSimplify"}], " ", ",", " ", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "2"], "\[Rule]", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], ",", 
              RowBox[{"-", "\[Lambda]"}], ",", 
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Kappa]", "]"}], 
            RowBox[{"m", "[", "\[Lambda]", "]"}], 
            RowBox[{"mbar", "[", "\[Mu]", "]"}], 
            RowBox[{"n", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], ",", " ", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "3"], "\[Rule]", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], ",", 
              RowBox[{"-", "\[Lambda]"}], ",", 
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"n", "[", "\[Kappa]", "]"}], 
            RowBox[{"l", "[", "\[Lambda]", "]"}], 
            RowBox[{"n", "[", "\[Mu]", "]"}], 
            RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], " ", ",", " ", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "4"], "\[Rule]", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], ",", 
              RowBox[{"-", "\[Lambda]"}], ",", 
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"n", "[", "\[Kappa]", "]"}], 
            RowBox[{"mbar", "[", "\[Lambda]", "]"}], 
            RowBox[{"n", "[", "\[Mu]", "]"}], 
            RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}]}], 
    "\[IndentingNewLine]", "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"weylScalarsReplace", " ", "//", " ", "TableForm"}], " ", "//", " ",
   "pdConv"}]}], "Input",
 CellLabel->
  "In[351]:=",ExpressionUUID->"8a1a47be-9182-415d-9140-4f26eb0e1573"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "0"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "1"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "2"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "3"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "4"], "\[Rule]", "0"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellLabel->
  "Out[353]//TraditionalForm=",ExpressionUUID->"65cbb305-789d-4547-ac07-\
ca476eb3c8c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "differentials", "]"}], "\[IndentingNewLine]", 
 RowBox[{"differentials", " ", "=", " ", 
  RowBox[{"{", " ", 
   RowBox[{
   "dt", " ", ",", " ", "d\[Chi]", " ", ",", " ", "d\[Theta]", " ", ",", " ", 
    "d\[Phi]"}], " ", "}"}]}]}], "Input",
 CellLabel->"In[55]:=",ExpressionUUID->"ea634f92-f076-4f86-a55f-2be2760ce206"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"dt", ",", "d\[Chi]", ",", "d\[Theta]", ",", "d\[Phi]"}], 
  "}"}]], "Output",
 CellLabel->"Out[56]=",ExpressionUUID->"dc20dbc9-7bfa-4169-b1c5-56246eef8c69"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "lineElement4pt4", "]"}], "\[IndentingNewLine]", 
 RowBox[{"lineElement4pt4", " ", "=", " ", 
  RowBox[{
   RowBox[{"Sum", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"metric4pt4", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "i"}], "]"}], "]"}], "*", " ", 
      SuperscriptBox[
       RowBox[{"(", " ", 
        RowBox[{"differentials", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", ")"}], "2"]}], " ", ",", " ", 
     RowBox[{"{", " ", 
      RowBox[{"i", " ", ",", " ", "1", " ", ",", " ", "4"}], " ", "}"}]}], 
    " ", "]"}], "  ", "//", " ", "Simplify", " "}]}]}], "Input",
 CellLabel->"In[57]:=",ExpressionUUID->"127d89ca-35bc-4b54-8a74-952316b705ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["dt", "2"]}], "+", 
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cosh", "[", 
     FractionBox["t", "a"], "]"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["d\[Chi]", "2"], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["d\[Theta]", "2"], "+", 
        RowBox[{
         SuperscriptBox["d\[Phi]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Chi]", "]"}], "2"]}]}], ")"}]}]}]], "Output",
 CellLabel->"Out[58]=",ExpressionUUID->"070c2d3e-8f24-4d96-96d4-26f3656a44bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "fig4pt1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"fig4pt1", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"(", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"hyperboloid4pt1", " ", "/.", " ", 
       RowBox[{
        SubscriptBox["Z", "3"], "\[Rule]", " ", "0"}]}], "  ", "/.", "  ", 
      RowBox[{
       SubscriptBox["Z", "4"], "\[Rule]", " ", "0"}]}], "    ", "/.", " ", 
     RowBox[{"\[CapitalLambda]", "\[Rule]", " ", "3"}]}], "  ", "/.", " ", 
    RowBox[{"a", "\[Rule]", " ", "1"}]}], " ", ")"}]}]}], "Input",
 CellLabel->"In[59]:=",ExpressionUUID->"5e24e319-24eb-468a-bed9-f6a492a434b5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SubsuperscriptBox["Z", "0", "2"]}], "+", 
   SubsuperscriptBox["Z", "1", "2"], "+", 
   SubsuperscriptBox["Z", "2", "2"]}], "\[Equal]", "1"}]], "Output",
 CellLabel->"Out[60]=",ExpressionUUID->"e714a725-1bbe-4531-866d-ad5d7aef7121"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ContourPlot3D", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", " ", "fig4pt1", "]"}], " ", ",", " ", 
    RowBox[{"{", " ", 
     RowBox[{
      SubscriptBox["Z", "0"], " ", ",", " ", 
      RowBox[{"-", "10"}], " ", ",", " ", "10"}], " ", "}"}], " ", ",", " ", 
    RowBox[{"{", " ", 
     RowBox[{
      SubscriptBox["Z", "1"], " ", ",", " ", 
      RowBox[{"-", "10"}], " ", ",", " ", "10"}], " ", "}"}], " ", ",", " ", 
    RowBox[{"{", " ", 
     RowBox[{
      SubscriptBox["Z", "2"], " ", ",", " ", 
      RowBox[{"-", "10"}], " ", ",", " ", "10"}], " ", "}"}], ",", 
    RowBox[{"Mesh", "\[Rule]", " ", "None"}]}], "  ", "]"}], " "}]], "Input",
 CellLabel->"In[61]:=",ExpressionUUID->"2bc67dfb-f478-4ea6-86e7-564878b058d5"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
h0drLj78ue13gKt/gXz141YE1vu9nXcxS/0O+o/Uv0OO+jWMq34uuPpT7EP9
3R6zD5de+n3oc8XNPBlX/Rf0qf4R/UQav2L/3JzbunrroLKW9imo3U5dutql
1GMca/Tp07N3bfufe0btUnCN4zGu2s/K1/6OlzJ21/I9btvVaodov4na2/Sb
wJ9Z/uXe/eJuGznw8afUnkHOIN+5n3s6oyz1a5CjfhPv8vzWe4P9s+zzoudC
+7w0zoze1H9hnti3Wu/N/LXe29bb/9Z7s45a7w1f672xb7V+Hn2a+gqXP2j8
CxefvAZ86nCQEzO9ZFRUbJSl9Y3IMbirrhhc6x55B7VuEz55anD8Gu2DcCuI
vXh1Zail/RfMX/sLWEftU4CvfQrsB+pwlE+djPp9Wq/Od5lxXf4vOHLwTwf9
9l5A0AexltZ/8u6bPKxLz+BvvvTqvnYLbD7ytf4Tvtb9gmt9L/ah1gNjTxZR
r2tpvS641kmCa12lsXOkThg7U+tg4YMT50e+1oViL2ndMnrTOmHsc60TNv6j
1AkzH60Thk89g+ZPtd5b4u3OIuLtpr4dnLp65HBPan8H51H7L8jjaN8T5077
mzgX4MTr+C6t/2RfaX0petN+E3Ctd+V7i6gjtbROFTnUa2lcrnSvio/LLb9t
6k5r7l5y5Fq1YEv7fbgfDO46j+DaB8Q9pn1Y8LXfCpzv0nyl9n+B98j8ctLl
OXb/FzjrSN6N81tEnbCl9cDg1F2Y30VxnUet60bPyNE8ptZdw9c6Z86p1kvD
17pxzqnWXZMX0D6RVuWD3HfPDjJ8jfMbvmt9wXkfla/9I9jt2kcG/7Wcdcu7
fmv3leBnaX8QeRntA8Iu1f4R7FIjxzV/8KRFYZ+EjbT7mNCP9qcwT95BcL5L
+1/gI4f8Djh88kd8r/ZzmXlKPxe49kmBM0/Na8z8JnX634Pt/ibOhfYD4r9o
Xxh5Fu0/wt7TunTuQ61L5/7UenL4pj7ctV7gWk9OnlHr240f0dm3UiWHXd+O
faL15/CpIwInfq718MRJiugHsSaWcR6rNcTus4CvfSXwwbVuR/tHwLXfhPdF
+1m4H/guxeFj7+l7h1+Ana91a3qfqz+OHPXHtc5c720dV+vn9Z0lXqF2O3zi
n1oXp+uicTP4xD91vTSepnVr+m5qPEHr6vU9pa5Y/Rf8MvxfrfdWP0jj/Fq/
Dd7vi8y89k9LGznqd6j+tT9C32XiOep3aDzK9I264lGmHslln5jfaxK7V+Oi
Wn+r9id8Pb8a5+T8Kq51nmrHat5E64fV79O8ktYDqz8IX/1Qza9pvbTa7YXy
PlLPrPeJ6kHrNvU+0fg8+03zOFq3qXYLuNrJxDHIX2jdrNrJ5EHUHiN/oX6B
5rm0j0P9WeI8Gpcgz6V2OPkatTPJj6i9Z36nxTX/RrkLkqb0DCx0X2k9MHF4
7ZdRf0HzWeB6781sUCb6xt6/jH9l9Lz8+Z2Pe2Qb+egBP0LjWtq3Bc55Z901
nqDxPe2H0vgSfS5qp3G+1C7VeDt84s9qr8JXe1XjseCaF/AOc3uy/x93w1f7
XPML2iel9jny1U7W+Lb2cai9StwenPgMfLVXNb4NTnxb7VKNY4PzXWpnahwb
nO/VuIHmiQz+v306Jm6guPbja7zI6F/iQpo31H4EtZO1DuH8H5//8kt7277S
eJS+F+b+d81f41Eqp2Tgso0NTkdr34Th8/5qnErnafp6xD7hPkc/am9rfQL2
Od+l9rzZJ6czd5Z9OdeRUDHs0vaQXEeXxkHFj4TmOtym+TZrtvBoRuqs0sM+
jD+WkRr6rPGEezmOVSM6xra4mpthhaQ3HdzqoGN4VOu7A0o9cBx78sC9+Z+5
Gb1bvZazJOCBw2rWactfPQ860pu/E1v/xXsZm4dlVyqzL88xb2XqruP784z8
0tkzPAfl5zjSY/651+TVYxn/ByPmG1o=
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxF2Hf8j+Uex/F7/LIS2YQQETmSkT2qn61IHCLKLKPsvUdRSPaIrHTslV0P
h+yRWXYIZcuxMuu83ufz6XH+eD7u+7qv63vd176u+5urWfs6H0ZBEKwKgyDm
+hSBLMiI4YRH4FN85vcjkTYhCJKQ+BT3nbleQ098hLtI5WmScU3q93qmON3r
egcfYyE6+nOl/fu3ik/iz/Ue5dWb8CUMxQ38hzIm+/se17Ea2fA7cbe5Jsdf
3OeifjlREMfJ6weu+7iWJj7mHWO4Pot8KOTlUzn/wGXc8vuP+M3HGBJYmtDL
eQHn9V60VbugX2Bl0G9vYiSS8a7hXF9EURRDK9K1RHNkRB+UQU7kRl98SLp2
aI3enqYnmhB+B40xifAETMQ0fImp+CKyd03gOhSNVBaupYibjHF4mWcVUR4l
UQolkBe50N7L+Z7yQyfCXdABnby+HdHGy/kBWqIF6qApcW+ijvIg/L7yUzrV
De3QFd3QBR38eWt/V2cfY3W9j/JgIHGj0B/NCBdBYfTwfLoHNoYneJ77sYd+
P8k1eYL1RYoEGzOrsBJHsA+HsQxLsRvr+N13WIN1hNdiDb7CbCzBI/J9gGyk
We+/XeJ57sQcLPAxP1/3pFuI+aHlswiz/L3nsBi3A3vvLa67uO7GTvxCXAY8
jS2Et2Kz6kb4BI7Fdr+efn5KcxUHsR/fhDbfl+Io4UPYg42Ev8cGz/80zmAu
4XnYhNM4i1OhzQvNx4uef2akw17i3kAt7PK6qw3VNl+F1j7H9W4cCq08jdAU
j0h3H/fwM+lX8+xEYOPxvo/Jgzyrisp4LMH64t/4xOfmUG8rzfH92EjcVgSk
PUx4JY4hTLC+m+Z5qm1PIKnWNyTgCOFlWOL9vkPt7XXc430xk/AK/IoU3lb3
eN0KroVRSGOHuO34NraxsdXzOUO6fWpvrptjW4s2xdZuetc2zMB0/IYDoaX/
GVdjW3uvIGlkfZcQ2Twq52vIGMIvET+Faw3CVZGIevgVNVEZ1f15LdTGP/G6
p1OauqiGSngOLZAaC7ES/8Jvnud51R3fYLnShzbPNcf3ag5q/cVbaID6KIJX
8CrO4hxOe1mWenmUXmPihOej+ay5vMzfpTzf9vwb+3P9domXR+v+Pq/XG1oz
/F3qA7X/jziIA17H/GiIYziEn3AEh3EUH1Gvfuir+Ut4FhZjDmZiuuep30ah
1S9taHXUWvEn7uIvBDy/FFg+O/23GXiWEek1zpFVezRShZZPStwJbI3Q+vAd
tiITzx8GNhbveXk2YxG2+P0mXMcVXMMGbMS6wH57HzewHbuxDbO9XnOxGgsw
359/jRmBlXO3t8PzXp7MyOr55/P3Kv28wMp/E0n43QWu32M9Lnp7Ks9d3iY7
UDawsT0FufAM3g1sr2mKrr5HfIo3MQKj8TnyevqnUY1wFa0ZmICJGB/bPjsl
tv3uC7+fjEEYoj0Hxfl9MRQNbL/OpL4KLH11VEX+2M4WOlck4hVUjm3PLYkS
gY35QiiI4rHN09qoH9seXQ9ZiMuGChiDsRgd2F4/2dvhKaRBOjwb2B6dJ7B9
vAxqxpYmq7d/gcDOFTm8HWp4mRO9/K/6e5/3vusf2d7aj2svroPRHZMwDmOR
hnVrGNeUga0hWk9eC6zdlH6Yp3ki+P+90ipcJbB1qRGax3Zm6Bfbu3Tm03lP
5xydF3VW1Dqmea45PoBwN/SIbb5q/GjOPplg59FUfq93Kay1TuvYO0jt5Unh
aR4PLJ2e61nywNZ2rb1TfSzpDKfzW15vN51DlL5PZHn1jWyc9I5srJZHac9T
+SndIPQlzQCu/WO77xNbGVRelWO77+lJSDOPuLn4GhHhGCEe036BP7nPR9q8
KBLamVTPdS7VoT7S/oA/SHcVV3AJCTy7wDWl3o0UsZ2XlV5nZu1dL/j+9Q+8
iPx+X8DHzz3SPcBdVAjtfKyzcXnuK6Ks9kfi3kVDpCXvTOr/2NLo7Khzo84O
GWM7P9TkeRXU8H2+iu/1lULbh7QH3SGv+zrjR/YdcNO/BZQmUWtsaHVP8Pa5
iMt46O3Wg2s3b4euGIw83obZ8bTCSIPGOjOjCd7SPopmeJ10tdEA6QhXUj9o
HCTYWNZ3le5rebqCPMiMTGiJFmge2Vmptp+XKns+tSJrh0TPX98vpVUutCbu
fbyH6oSr4d3Q2riRt3MJwi+hOIp5PxbVGcvr9YzXNzeaoJ7KgQaqL+F38Jqf
yxr62exl4l5AK9Tx9LXxtqd5K7Q2qeJzOYP3tc6oSyIbY0sjOw8U0H6Itmij
OuEQcUdwDmdxBr+is6fpgfpoju5YTdwerFJfaiyhI2Z4PzXzfOp5vUYSNxAD
MMjvPw2tbHMwO7LfzsJiHzNd0AkLsQy78YO/9xQ+4ffD0M7Lvxc/al4THoo+
oZWtTGjfnj8RdwD7vDwjMBzrPP+lXt/BXpdBft8bx4g7jqP4GSdxwsdbbW/7
Dt4Ok0Ir8yIswC71E6Yhvc+1LFhBeC1SxTZ/y2F8aN8NGyL7dtD39I3IvqlL
eF3UbtrjCuA57a+ER2MUWnkfNcP1yH6bnTQ5Y/uWzIGuxPVEl9DWEM3lrDy/
5XP5GmYS96X609tnrfe11pP5mI6NXs5v0cvznOpjYw22YLvfL8fk0P4HyBFa
mzzCPOzEDmz1/t3rfT3dyzBN6x/hwijk8y6Xnz3U/prrCb5uX8U2lOJhMXyG
YRiBId4P5b0vymEUXsHYyM7rOqtrTdL6oHVJ3xHLcVP9Gtn3vL7ln0d+zSf1
TWjfkts8zUTVNbLvtelefuU/Hp9Df/p8gHZqA+Lu4g7q4jbqoBdx3dETJTEO
L+ECcZdxDb+E1u5q8wte999Cq6/+a9D/DFr3SqBIZOtqduTG40iNFJGtx3qX
1mS9V/uk9ssnuaZEssjWzA+8PKm8zZsEVvfroS24et7d83hCYeXjz3t5nrrX
7/SugZHtxwM8/SUvv563RZvIvq2Uj/ZirQedI1sTtOanjWyP0Heivmf/8nGi
M1M/b2edCXQeyODp06Oj59Pey+bF/9+9yhj6fTdvl7KoiA4o4+OndGTn5N+R
xfviDG75Wq30FSIbn/r/TPuLyqA9KBtOhvZ9PcfHanZ/XtfXWa2xuQjnRA7M
Du37fVZoeWq9aeTjP0lg77gYWhs+DG1s5/S+roJEvBpZmgc4j5qR7afVvZya
Q8rrv7pMd98=
            "]], Polygon3DBox[CompressedData["
1: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
n/K6td7/AdoZcWk=
            "]], Polygon3DBox[CompressedData["
1:eJwt00tI1FEUx/E7juKjB1JpUdRoOk0t1K0LQ8tokbmZ2vfwRVC2aJGVlY9d
rTJrNM2y0UnNEEsolJYxvipEicaMtmWBYBGUQX0P/9/iw9z/Pefee/7n/if3
9PlwfZJzrhgpCPBQijKUIGhBrPqcG8UH/EMy5gktWJixH5l+50bIjWIH4wyM
oRfdeIRnhjXPMYoRJLCPNduRjS3YKzbehM0IoYbcWnQhC5nIYX4/Dqp2e4ch
1ZnAR8RQx/xZnLN9UIX1WIcMpCMNR6ixC524jXJUsr4ch3AUFRjg7F704ymG
MIgYos6LP8YX9kxmD4dUfLczeDyMEwijUn2M8ztrd6Ge3iO/HmdwRzWlqdaN
SLW9Vf9f8pexQXHLj6BD72FrrUcFKMIB9asPa/ite4vqHrZiG7J0D8PsveLz
vgfrrfXY8v/w/Mv6qDsfUC+eYFg9CJCbg1zswk6cIrcGYRzDSb8X24085Cuv
mvkqFKBQ+Z857y1e4DUSWCR3CbOYwRyu4gpacQEN9j2Q+wlLSd4+ttb2DeG4
agnrm71v/UCfvl+7o/e8zyJeOe++HjD/ED3Kt3U/8Q1fsYIfaGRtE5rRorqs
vmu47vPiNhfQe+9BCEF0ck4HIriFdtzFTdxAt2IRjXvQplz7r1xCI7L1v6lD
EJcVs5xWamxBMxpwEdOYQRwx9GOBfr3DG/XP+jjF/DheYkL5cY0nMaj1/wEN
SIdP
            "]], Polygon3DBox[CompressedData["
1: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
5IkYjEmYjHH4D9WCI/g=
            "]]},
          Annotation[#, "Charting`Private`Tag$19301#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, 
     {GrayLevel[0], 
      Line3DBox[{48, 49, 52, 53, 149, 147, 146, 158, 157, 144, 143, 129, 130, 
       468, 469, 404, 407, 406, 403, 401, 400, 390, 391, 383, 382, 389, 388, 
       392, 393, 365, 357, 356, 339, 341, 342, 505, 504, 509, 510, 527, 523, 
       524, 528, 517, 515, 514, 446, 445, 457, 263, 265, 264, 257, 256, 255, 
       182, 181, 172, 171, 183, 184, 278, 277, 271, 272, 273, 64, 65, 48}], 
      Line3DBox[{537, 538, 553, 555, 554, 580, 583, 599, 598, 596, 595, 743, 
       742, 723, 722, 725, 727, 734, 733, 731, 730, 711, 713, 714, 707, 701, 
       703, 700, 989, 987, 981, 982, 985, 935, 936, 937, 968, 956, 957, 1030, 
       1031, 1023, 1020, 1019, 845, 846, 847, 831, 832, 833, 837, 916, 920, 
       919, 918, 875, 872, 871, 858, 857, 860, 645, 649, 646, 651, 660, 568, 
       539, 537}]}},
    VertexNormals->CompressedData["
1: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
hsX4W3/wO+6yBctAnJ9PWEcebboG+WTvVK/H/pZ+mlaPyhhoV2Bs+vvyWnTx
P402Qzy/VaXMQ5r6dORy5roxn2E7OpD7t/QqfsenrGGDhXo01JiqLiFHdKL0
7KiLbji+LiMt6EAgHYk316GbBm3Ima73pgrzgWKa/uCdLjp6aFzAdprSgk4+
CsgXxX3iMKW8GjvPQKFPHsjUhVQhZaawrTtwfM0zuZ++BTAQ4aoub1dQjxa5
d4lzY5yZCN147fpDBiJduOFevNKA+L9Kj6XhPLn4h6+bFdDQgsft+zF+JBQb
ouztEbj277tpv80KKOg3Hyff4I0eRKdM+PNg/9YNQ3LiZVRUtb/dyPRTF+JY
sWdf42ln1525FJqGcXkTr9Ldyi60WzR40QzjoUupkkyhLca16hT1oN5i9DBX
z3E3tutYRjy0wPbC44vzXP+K0dJ2pWo1vBd+7bgaZreNgnZqX/aWWt+Hij+O
G+TiewVVmM3fw/1/IUZV/3qhNGj7zHIM4fpHzb5UCCJTkfTneKfVA13o08vv
nGS8N9tCzth+9SIQz4MSZnXffETdanvFFucvsxj6veAHgdzUNnz2H5UD8Z/y
O0g4f0mb19sq2MjoUdC2hXOcZGSim7DDBdv3969zaNjSi9pvxzN9dKag6Ilv
2yew3XaSK5bbkYKGlOIedPD0Ir3PeyZGMJ9cTjz3rHKYjKTSWPtmD/Wh7P1T
Ie+xnWYTzdqxvw89numwvjJORm5maoJUHOcEO/ruJtWFbjl+7JimUZGL3GVy
IO6Hw7mRZ/pLulBRiZzfYiYVnTs4uWECvwu9YnZVmIWM4qdGmZd3kpGFXYza
NLa/llMh3d1BRpcvpI4kspLR02j9+SR8rsYnnYw3STQUXynNezSMhMjv80tj
cF+dOeA5P1JBQU0F40bjh3vQ50dXaRfwvDDTM0K4X5LQqdLFDaOpNNScu21u
GfPYfex0nhlZ7Kc5mfKwhoJObi0NOY/j13Tx+x8uoiG2k4PltqYkVJNlWMCz
9u/aOTqh3zcz0OFPX+7BWDPy57O+NoR5sr61W5CwGY4TURDRXExB8YLOB0Jw
HXa/u3bfT7cdbdocc8ZYj44alv2zavG9hipKZjnPtSF3ivHuc8F0tLH+fGkQ
9r+fOSj/o7YTmb9/6DNvSEP5d3Na1vSj5C/mtsCiWiTNxWt0phLj34nHOhO4
T+YLfM5o9LSgMtVLb3x66MhOSKdhDNfh4f7timcvktDPuQ1SzxANRR7QvCaO
67DuM9cj68FmlNG6iy+HnYFGjl15soT9ffv7AqQZNcg04xKfeTMDCXjSRurX
dFDB2ctu/pgvnbhd77DIQGmOnf72OM4Fuyyu8x+FIf7vuivVqQRKJnT+WeA8
o27c+BoXl494VM6Ex2H+sPu1+Mhb7E93eSy6zy8XNTC5VqY9JVBJVzh1B7a/
msvsHxHIRBJ3S+t2hhHoZGG6yw/c52Ytr4/ed6Mh/bDQ8CyrTtS+4jPRjXmO
g/4SX5gpFb1ZnnVIn/+Nikplb1Z7YfwXPCniK8RAK+H6TSIDzchqkZCbe4T5
dnmSesUEHXmJ1D0Yn2tBHic8jQ/ieZkJ0zsyg+flr3R9AoviAYj5eW2RDcdP
NJvKnqkkkA7H1EfZSgVwzJGyUcJ8uDa8rkHuPoFk2gU3ljCVIK8kp9BI7D9h
Ykazxf6eWY+6dngrAHs/Hf3C5xodX1TfaEyg/pCzefXdpWjLq8dVltjO1/N5
2uESgZ6bjMt1T5aifSxdJ7TdCchi6b6v31SK1m83SVPA++a39ukzYfjc+4IJ
u8ymSxFv78kZCQPMD3xt/rbgcztmZy8ivSL0+vuStAXmiydcwtgXbxIQeNhT
3kSwCulzMT/vkSMgY3umldIdrNOFPmh0mrejo446n87Z0kH4jRm/Hj53s8nx
VvX5FtRc05CycYQO29kSNffifg6q+faLfakYCfd0sp3BfFdYuOW6G8a3HNnd
RI7MD3S3nMZ9CPuNsDcarX2ey0Z0JnfqdSNDnc64dHUqpB1/Y6CE9c41y2T+
3eO/kVddSumcBRVOT5/7G4XP/ecUNL6ptxuxM4dFhTNRoVzSTq8f31fzsNs5
FUoz6jZyoXRjHddVZvhKB5+7Q35QoHC5ASmatXTvvMeAz0ovYgRwnVTD7gel
cdEQ35Yd5cddu2A70XrkB2D/jNY0UhMDbeYrPTcp1wCp2V94QrGeEggQebeP
TkPhfaaWpU4kMOD7KN6L9cJel8tXMvcS6LGwQl6zcxX8s054XIr3+y29crGI
gwSqiNn75pl5Dcx+uTVsjXWB/f23Z+SuEehJ5+fxLPsyMKhcx7JJBfPhXX53
V95TkGva058uX3vhg+4bEVUcZ7T9Z/2dWgZiZh+SW5fRANZLLQLHcBwWN9OS
A3GlKEreVPoVzs88Te5kMcaH2sth1ZWx+Sgsy4tHD7/3zTOr+c4Yr5Y8qoQe
0mrQR8/5B9tbGaBzVHV3BPZP0+NQCczJRy+klybW9IBT5q5fS2s4s8BvXVhQ
i+IELfZsq8Y8eJPb52w8p9s1T/PspWYhufVRjS9w3AivbEEZPO8/lN1E8p7l
IkUD8QuSWG9TKz9MWuK/v+b0lcb7ogqlqoU/mv/LgI7wBGtVrF8uR1iQ7qbX
o848mV2+IQy4ac53ngnHD2hVrhU62Y6+PbpbZXeBDp8cDOmCOI5jk7VXxYU2
lNm90yD5BR08VIqVxbH/XNriiEpNJ2KMuz/iNqbhOle/9F/rw/wr5hN1xchZ
wE91DPchd+WNyFKcl+ZWh8Hxq53I0pW747A3DcxVvCISMW64bbr0c6snCfHJ
zBvMIRo8cl5J88H2V0N9P8VjMH9ji1hgrqFCL8utKyx4L5/T9paN5yIjjihH
0mE+MgTMHN20Yw0fzpg00pn70HXnzhYGJwU4Jd4l6mK8ktJMDrflykBmd2X+
KkTiPuOPn7Axo8Ola0Qz2ZaC5h+dk4z1oICth+3GdqwjBPbaHJhJ6UCRWmeu
U1voYMP3o+0Z1h39Z27ofK6io0Sr82pH6jqgrir0pwfWNU0GG4Ok7rWg0J57
0jGVDJib2zwulUGDGNfMlZ4X/Uin1VtdIJ0G08VzdvxZNIhbnLnT8paGbN29
V9xz+4EWVqvUhXWKv83ZkqmqanSF6Ujgf5jv8t9jvnSugwFVlH+nRfvaUZv8
odM2k3R43XhLYVCJgLEhk6D//BuQjqjxAdkWBlzs/vNDE+upquG0rUaFDPRt
af3v5yEtsEtzD8sTXIetvGX9YVG5kMYuMB+M8TxjNv722h4pn7xFui6XCdri
zfqrrwiUfoc9Tk2fgK+y57YH3+pCc8qNcI+fBneejqWLHCFgdoPS1cbQXsTz
2+KEUgIFEk7d2RdtiXFrWCG9ooKMVLO2wgOefvgQ2fb7KLaPtgqoGTP1oy0G
AzIfG8ggqjmys2Yv1l+NrH8L9cgokbdugfkyGVovV/0Tw/PFkyPK23uVhBro
+01GRmgQtTsjaHcXA8r0JSTeMuioaeftnc6L7bBFjbP3Jp7TgZFY4vKmBkQk
655/0MkANUEvntAbBIip1v47aFiFtssuBA/tJ+BRShG3Fcbz9YkD6hEYz53+
ZMr8HisFboPi2HY8f6vqk2IN9zBuJNNENSVKQHkh/kkM7sOHM0+Hr2H+FsuX
3Ef6nA9mm67k1WK788cuKU7MG61sL0q+3FkC1ftPbZ7EuFpuPsBYNMI63ERh
6zJzGfgNqJ1cwHqZFvY6r0yQgWhS6x1VJ5phr+LY07XvL45z79rh7chA85Pf
/6vd0QjP8xRUL2N731+3DQ/zKegAU/r6KpsesGqpnnmJ59fjUemPlxfoKCtJ
c8Hscjusy9hi8g/jrXzYo5qjpVR0TdzBkpTQBS4tg7OUte8fnhf1pV2goUu1
e7ozOjpBh9WYKRjPr9Tn2G81qVQk9FMkkOlnF7TmeTwtwPEPScuF+ObT0LG9
NtzXgkjAMseq4IVx6Xv7aRd+zOflDfntH9bUYxHCpfAazx1V7Zd1zkYKoqcY
s2dy98Esrac5Fc+p2vHk86FPaMgv4ZVYgn0nTJcoW37Fe6/0+qOW+QWsE0fT
/sJYN7wXVpRxdyUgmo/S4mJCRa+tRM3PrvyG1VL2xC34vQz9olOHx+nIWLHY
1mWlBbpi9V+O3cW8wnALh+xNvLsLv+rdcmqH0N3Rm7Rx/0SFpZSl7SPQfcEG
8dSjVRAxqUzbgusjGzr+xBa/V40HTWv0XzEMpoc8Wfs+jLBWTPQLrLMSjL6o
H+jMB7E25+I1XDW1r+2i/KKjwke8KtNECzRdvGm49n2GAN/QBQGsv267KqTB
ag1w15lSn2P+yRmYdnAf5pmv5j54fJ1uhr/eyZJV2B5pJjyjjfVRwWkpDva3
VUC1tP1wEZ8ru+3M1vVYr2WTEu+ZNNeC6pbl2GqsL9o7+qcDAujorI3xHVuT
NmhJbyhhxv4vopa86vup6NkVw/ePFbuAnKx9MRrPNRGjdTmikIZMvf01n5mT
wDf3DnV67XP+Ug7nhUQaOjP1jlX/NQnzs69z4XYE+FW0TVcKk5FNxA+HICky
vJiqVZfAe985CVZ3KFHRJZ7WIWmLbuh623XFD/dPw84fr4W7W1DwSct5nT46
wD4xj7XvmTQs/xGwwrzN6CP5+2VOBohdkpd1wvflpzzbq6pBQs6KJwaKymng
zrFCfrHGM1efhf2T7EKh32L3cRFUeHa96wonrvMKcfd6UwAJDTgXMBdgnDRU
/ijlhvsqa7KXz+hyD4qYZ/ln/B8FcmbNTsnh+piGGilfKO5CMbQRo305VLhr
sUtJHJ/7rkpFnM7cixbvCIgdd6LAk5OtKBGf21q44fDEZjIivY6Zr9pKBnX5
DNYW7G/aXKXWZ0NB/46fVBbb2gtnvJrPzeK6DbBsXdyCdZOI5lLkoyN9kOjd
+/c5ttvmda6/IdOHzBEt6e4kGXR+r741wO9iesXqdTc/GdGzD8n8W+mHqPlS
xmlsX1CP331iqh819VIPZwuRYXxBOikL162srWq9EtY7V9U1Rt6q9MAl4iWh
g3XK9wD2gxwKPehv1GmppDIKUIuG2OnPCXR4/tU9mRIKiFx7M99h2YOut7h+
1QsikLOBx/U9AmTw3hVevnOpH72MZb8iG0ggyYSdc5uzqCBqqcD9r6oLJVyO
NkzE9lm9k3EynGQY03Gavoz3Z7/if3/Wvlc1GvWztXyxHyKzBWROC5KR97ML
zp54D2h+sLx7h60Xet23xwDWl4+UuUxncBzns3pHhg90gZ/HUpceg4qakkK/
k0Iw3qVU6wZiHImbTfhASqIijr9KF/KwPuAJ3T9ogu/ZdalN8r9SCjKmvpAh
hxIoe2sWd4VCHzz6z+/S1Qky+lxkz/81As+n5N0tsVEkON34jKz8nYbSeMjD
3mt1IK1/5XOzB6yNIsTkEAXd/vVdgOZHoFWzTW657H0glie74MpBQVVltA5+
7D9nxpaWxk6BsuLUKipHH3rj7+K3y5NAx5tIXaTDVJj5RBEiMP+9rEFlf/yE
QP6XqcJjKxTgKu3JERrsRo+6er+6ehCoh8kn76IBFRomQl5/WdeNAmMOy3/x
JpDPsfc8KV40OH3DYdrQuhOZVvuGe2J7QvLGlWleMiw5Jpg4bCcjf2eL5YO+
BKr0eUySr6LCXy+WXMEvXUiZWzE/xZFA5sMmmytu00H3rWl1iXU74tXmnLJ2
I1Dk33yDy8N0qNyxQZu+3IIEJg9dTniJ9/Mzj5czNCqknjy87d7BLmTOP2X/
C7+XWIQre5497pOAyA8bOXpRdoWB/E5sfzLgO10zRoaFyi8uXxT70AahNO58
XP+AgxMWCak06M10sb0aTkIXRqz794UTiDHvLyiB500oUIH+92gPehHPxDUf
TCCH9NO9zAWdEK/0zPW8KQ216xaMLTgQqOBOqdOKbTvwRDU1FNymo/2b/qm5
YPsStfzOP6kqeNS/YhEkTqDPAmENPlYEWh8sERtkR4LFI0HGrCM0ZG9VLRpl
R6Dod0qPS+5XgSf7fkaiCIG+ByvlBd/C73Jt+k5ibinE31u5oYj9ROSj5QNw
H1Juc96VPd8OL+q2im3C+/Cjgy/TNO6Hk5KDXxZQPbzTe+X0KoSBTmsclhx9
hvthdAdV6wUJbN/YNFzE+vpzmEPYAH6X3XERQ5KcjbDzXP+HXfcYyGx1j/NF
XId7G0Y3nOxtgVGPduNYvAd2ugb/rsR1mOj81WqEcblQz/WhxQs6mrvqJYR1
OlpWy88S0CYBnO/z1SmnoaehglqtLwi0MT5V2yagC079cop+U0dFPsNNVgfx
u7Nzvvv6UZyA10nIsWhPFSKsaCl69gQSJnX/qxUh4Hzo8qezNljHHxgJ5sR1
2JUqPf8A86Hnq9wfW61J6HDfjY8CuG8JrUejcYPdIG2j2r1/lYKUej6d07LG
etVO5KU6xvu412GWlG+liCrPN7/fhkALYy6CFEkysN6OO75fkoygxjfuKbYP
IPoeagsZ/k0yaRUM9yHR4sqW29ie8XddExrtgwbLI7PbWsjotOS6Ezl4Lv5u
3TP57nw33Cpku82lSEWP2u6fjcH1keEbF03toQNvfZ/hQWoLmjG6tU4M11PL
LPVzRikN3t1POJqhQ0J+k+xpt3A/K5zISBY0osHRvaEqV1s6Uf+jf3oExpOQ
rHyN3c/pMHVuw5t7Jm1o05RPPxfuZ67W45sK2RkQv+CoyTHejKSn9Tn6cT+/
gYjSyWYGCMt9pJ8dq0HnOxjv9HH8rBr+pEXMy4cTWch/KmrRhc+SYy0BBFIO
33PIHuuTacnSIY+OYvSo//5cB+6fo1pJDj8xD5oOsHp+PPEHEtx1U9YW+2+7
rxPXgHXnmPatvizWEhRFEvRRxu9blzT5MiSYARuuvZISKKpHHlJjKnsw/jSv
n+lScGFATxWXwma2RnRG/rR7OM5nXDwsr0+PDqM7ZbeonG9HObN7CUtsf07/
4e2BeVAxaajRNiEf6YZGPUjB+PzeM+kVB94nb3e+yH+rl43oESdqVbC/x9QU
iw72Jz4GjquU5KPWjO8D07g+nUmJZpppeA9/+5Jx1kwS3lsPjO/D/XnGYryC
H++9zn9dLttrMtCXU9fP1+E6V7BfnLHKIKBpoWRgS4g03NKWFlz7XEd1xd1l
tzfeh8a0wQ0vc1HvdrGt23F8hY3fFTMXGZD351ZKS2gVyt3yOTYdx9EQL3bz
xHFWWSQZ/DnScHajvu1ZPF9JFsmPmgoJOPCx1tBkXA4aU8+zHcM4bH9Moai2
lACo+P5zpUQBDmxhVnyP+/mjtfCGm5gnxmc3Kt8zKUKHymi1I3juFb3iDnW2
E3Bhn+Yw8y5lCJAqYj2DcVJkmpdvhwGeFz0uYZnFUvSqcDRgvTuer/zM9rXP
G1qsb4pxkkrRaZvkTxrY/7WyOdotzgC9zi8RBoPNqH+r0ZFPa3sh7N5XW5zP
ByE7ndoABUjPv2v6H86/sWODnEMJDcL27h7f+YKEWJ1FMjZj+0hiXih3EQGp
9VsafysdgGXpJvuVJgbSFG425Zqhw+bWPYYpQ+3ojYqT1pFqBrquOWfOhnXa
p+t8An37W1Bqhk6cWQMDvTf4sfFRIR0IifYLtxs6kHBnMcfSZQIV82sPett0
QerA1MgNdhpSnPn4wBXjYsLZ7kPPTcmwzzks5PYlMpLICPDhB/xe73u3amb1
gi5R4TMeSkGJBizK8tiu1jOpJhlOAUHPLfm5Kb2odtdqUfJJArVdan7itr0B
8iz0mEm1DHTo2nCMyDECFV3eFYyKGqCZNdj2RikDlRZEjZ1tZqDNz+bDD/5p
B/0zdvFmE3S0VXthWx7Of7jrdmVQdwecyBixNf9BRxfNQkNq8H1zf+TkHlVr
ge0RJo/vYr/XPrE3Ro8Q6MRf1atdvxjw0zM3t2d7A9oYZ6Rw/gqB6NV57J4c
NJCW+lq22bILxfUEhlzF+ZRcCaL9KGPAnl0nQC+xAXVqbrv/C8e5lU65Eco6
AEb7P2gcfgvgMzvIc1yNQPq7H/mpHyPgtr5lerF5NUo1q/9wFdvtu1f3S7MM
wPMAnU89QRrAyzE1mFDDQPY7KP2Nd7A9fEG5974OyPrQeUbtyWiPk7LdvQcj
sM/Bo5GmYQZk9ZO6Y1gXvcxuOvihgQaDW99udtvXj7wkCk+o5NHQf+r8/qmH
hkB14JqhpZkhVI+dGhY7T0cyvEXyTN4UiL/Z7zr3gIL8X3FzfiigoarR6p3x
J/qhumHdUEspDX1sezpg/pGBAss8bUTOacEHiSlmpqgBzFv5luOKaSjn/XjR
vk3n4IuAtIDLgSGk9vz61Rd1DDS7KzoQmDQheROPF7fTADoN23Jisc5pzTq7
qFwiD2EtnJcESATqml7s98dzpOy6T9bDRR76z29wVu7A+tXe2MRUBc+LgF9n
k7cS8DTvl+RlHUDibLE3d+C68eqKvOq+Ww3mmsEf+bQwfrmyCpRhu2HO+3t9
ZYpwVkdNpZZ5AMl9E9UQ+cBADflLjhzRA2Ad+LQ5U1cXSO55IX0YP8NPnjMl
cvOhaUa4uhzPebhhdboZxu2ZsWNTTXHCwHTO4057OsbZsmPIAdt3MlhV30bn
QovncftIH+x3XyreAu8Xif2p+pRBUWhajb7fmEmgPFFFvQiMk/uN9nPPvsqC
3vQnz0sxTil32cTtxjiWkn6aM74mHWreFfAdjiKQqPwXujXGq5nyFRmnyRpA
8vO3j7Yy0EOjY3Xu2L4hYKnjeXgVhNe7VUn+Y6DMkpS72Tj/gt1NQ2X1+SAZ
rNzqj/NXvx787yTOJ1KoJfAvixjc/Ld5kYHzEVHM8ac/xTg8dyAj3LoTwhRT
7B8+paGfV4t8OfHeRBdvCukzdwNjaZEabUBFNOkdHljvIA2Lqk9RRDEoTl5+
YYP3bsxtV2Dgc+VlfXS0amrht17J98N4rjbNqpjtwXwmXe8U12bWvdBwxyBh
qYhANpY+knfw3jl5yk9YqCkXtK3Ll/MwT7r148OVbHyvv5f02avGmoHyVqJJ
nZOBQttchnbgc5+wJcYP85WAaNlcYBXmDfaclmJ2OM+A6JCTlpnSkPpNTelD
Gd43W5PuHMH3vnd9SCSZpQyCzLnlPxtgHDFS75rC9vqYOPdXlEKYsTyasvZ5
iT1dkWMC21FNqvEjcinsnr29Of0izuPLSbde/J42462FKSp7YaFVeFi1mEAH
xF9UVeJzG0ZEgllspKED4uJO4HNXm357ueE4FI7ZvVFMrSB/8idz+TAd8Qp8
957HfX5h09jGmg4CVO/L3CK8leGOHsmsAsdfSerZ7UVvhs6Tp/179jCQNvMP
7lcY/1MTviis/X/c82qeLDsGS0HQuNE8Eu/9lUGrlgC89xe8z9RO1PwAvhm2
Ak18rk9UqQcr3kc0aaNFDvciSKoYlOHH7yKqcUXEDfMBmezWkKMSJTCYcMM/
E++d9QmyPlmHqNDGFbMUcqkb9r5r6/PCfFjbJPJ4pg0dnpdntso5t8MuxTvv
dmH/9qJt/w7rU4G9TkL32OZu+HFE+LE7Pjd3i9hRryE6VF24bWrP2go8Qhxq
//C9ioY2HH26mwFR+oIZosPNQDYI9H6E86f2ZP2JusuAuV6Hvq/8jcDbuf/m
2rlpqz6DU2IETP73r6BLoQqUvGdrOnB8990WOXH6WH/PbuY22lIGlg+to9/i
vt3XrtRR7UmDzxNiv045doKOtTSXMeY5K4ayy001VHiwwB1q9qoLtphtWKjD
fTio7MATVUyDzVdze/qDMa+fEpz3wvVJ+61UuNt67XvBnfMdM8VwJepaIocr
gfoaPI7VLVMg7/LVktiJbpi4UdezCZ/7tu+c7sA2Msj9y+fw5SfDJrsv91vw
nu1Obhn+sYUCJ1k6a4e29cF49PHj/3Df2uY+4q061w7ZTDbBewzoIDTVlOCA
eZG6kOeVhOx6uCul0V4VwADll3vNK7H/XoGu5t1BJKBoHhGzyaOBz5VsX16c
f1taQlLelkawo5w3OvqAAa01CdZHMZ78595T2WOC9XlhlodMEQWS+dI2Pcbz
nldlG/Svtgvy/m5fYE2lwtbR4z2B2P/0beYh37xO0LXfd9X2Cg1OKYVkHcHz
eJ71xPboF11gVhp/ULQB686+yBQnfK9NIfnrqtn64Cmb6zvYSoGNXn0lGXhO
3XUyRytT8qFP+RLPjocEcA1WiLzBunhIxKQp8p0wFB4t1X6fjHkc9YH1a2xf
9XW2rHqXC8aeAb1r/8+/IJGXkovrwD2XfMR9QBS0HDic72UTkO7Ud0kW42Hu
7t0vM13SoM6hrED2DQGy59Ryp3H+1+YySqfMMmG5bcd750gCohN7Te/ifKg3
h47Lt+YD1ZFSmfqAgJSVRfZe7C8QqJ1RMF4Dl/jJKdNtDHBWGSUFYZ4vbtnz
Lvp1FXyPPPotb54Bgz38gmu4evSIqah3Qy0cf3KTwon3uauNmN4ExnkB3tfV
jpK4nw5Zh8tRqbApnkwaxvitNyKYLNXTAvtUeHtv/KZDWNBV55s4vmXjIV2z
SBIkz2WwbEyiwZKasr82ziehwkWd3bgNgniq910MoIPO8K7ta58z1LNL/Os9
ToKF1euBPJU0MJpMfB+N4/y5PheZMdkMzqfu7nqymQHFJ5TPZmKdFXVd2znV
loAy3g0GviWlcCRp6CfC8xVVUKqnXUwBBy9V/mzbHpgu3GcrhussZPM2TGcP
GewnZlkDmMiwi4/5ugC2R678VuRf6Ifd+0dny4XJ8EfzzjV/XAeJLes0y79T
QU29/HdMaxe0mRQ8WF3rn/bsCUGsm1xu/0NdAy0QvyQp5IjzZ9MeC/fBusbn
kqbe18UaUN3Tz+6L7f78PgEqWAdNvTzofW+mGdKTTbzzsN3weSmvCebnW/iF
2HjfVYGB+DfuMrwHcjom4xRoVOCPkbk3rtQFx/byadrjfnhQ1ZXJjXUZvBaq
qz9DgvNVOkpDuM+HvoqFahvTwPJUbvev/zqBe6clCxOOrxLjNM+aSoOgwKxA
l2gS1IW77TiI7zXioXv1gR8dFvWu17uZt0Ff6g9TU+z/Vpxgnt/UC1OSaa2m
dygAssvbI9feN/dE1ahyD+w19xsoK6eAmc6txIDwtXPvzpUK9cGPzwMftGfJ
cHu64zQNx+nbwvj5144CisXH56u4e6EjtrGehv2f+xqwUibIcEV5eej1vj7Y
cuSqtha+l9qOXmYnRIFTOeK83zV7gIeuljSL4/hpTFxr2EQGn5dzcac4yCB2
KDY5Ds/p+uV4BSas41jLtohJ19XDsaB967tw3f7tl1P2xfrxn9k7zayWWvBS
zHJbxvax+RsDm7H+uuok8d3zF55X0dZf7vgdv6WuTvYGE3A3dtvBZZts6JGo
JP/E/iPbEqelse6rP9P91N2oHeTMRFb34T6hjsPPYziOJVWoKKYsH9oCHzSv
9T/tWrTO2FMC0nRXcnZ8zgUdnkNW6/G9YutyVNY+p6x/+L5NuT8DoklKXVGY
X3NmHhP5b5IO21yXk0aX2oGUI+9w+ijWL1GM9ye0CHjYSik64VYNqtUFx6Ur
MY9w5rr3r5EBSsVTQRlaLTBXrOcigvnddQZ3j3cpA34dXjVXr26AlL0uNzwP
4L2J9L83nyGDR7tlIL8+Ga6JP9HKxzzwdTFX7eFXFHhm2i6Vnd8LLFbM1iIn
sE681cbVs7UB0jmzJzsbGDDEM/UjDfML6Zg+PdYieXB/mS68+n8F1x1O9RvF
jRSlktWm0A8pNIwUL9GQLasiFSKyNVRURssqKStJSqWSyAwnm0LoIuu620zD
DPE7/vo+z3nOPe95z/icz7nrO4c4PJzprUW+M2M1/PeXTxU5N/j7wVsZDtH3
G9n9G3m+2a3VgVKgQmoMxtMuIt9Xr6bemkY71m86ky4vKCXd/1xnnH1wX+dt
Gd6I/pxivTTXnqkiC0cW3Ks6yCGWJpPbQrQ4wC7V2DGYV08cDF5LBGI+F9/c
JKJnw4Edec0MNyfsw5q+2gQhJkkx1L/C5YBzJMv1icCZVlKW98MtcphJXkss
atuK9tP+JKkde9dNTLZ9s9B7SCeBi6/xXT2C/K2KdnFkCZNUN2xcudSznfxN
yX4TgXhSdmJdm2sjjTQ+aMmKHqES90WyPIdQvv+9jVFTP5WUl2UwtFtw3tU8
c3rmiHWrc5u+c4BJBNdC4m/vVvIrQ45dvh/39JQ5VU4tmwy4vV5JlawnqiK9
k3HI5726ip6Kb+SQ1JXCRZmBVeQHhW+vrQ/uZwtyfvg60kmyq4OWPfZNbvmD
fvMENsgbWXIbHNQhGjYaf28n9pKah7pS5bgHRb+4k/GgtYX8K+cpZhazyJ8V
+yYgmwlza11+J/81JAk6W4SV1PqJT+ikaEwZGybDnhusV28iHQP7vfwQ/xeF
Rj/szmLCMksycky9h/jVCvs7NTCJxa7JQcA9xUdvk/RMPosUBLQ/1qO3kIrr
Dw2+on3LgR+rL1Uzydp7bOWgAz3kx7XxH+tdaJAZyOtduNKCsIPNHC39Bwnn
0GfjRjobTih5Kv/uoZCZJO2VdAaLrGI97TqtgvgWkmDSGKhK6nmdGAyBXkIt
XL7wZwUbzq2akNg/SciOaVOJfX69ZKWmulcL8kDTgYGTVkad5FfvzEENdQaJ
E/evnD6H8/qnykKwp5DSkQq5QgcW2dxfIbgN9Xd7ylSKcHUS14apgRxLBpEN
mp065o/184RLmjHbRLLFOuvP/GARtf4Wz8XIl7r7asYq7dqI+uWDMsYBTNJt
oMoA5Dk2JhfiZxiNRMXAM9pUkk08Kinr9ed/l+w6YGDL6SSBnCdK1jwMMreO
52AGyv3eB5S9pZaSpSMr7i+x4pDjJ96cGbmI81qlJqKDu4y081fc57XkkIUP
9BQjkeckOWlJ2ir/R17UFMnH5nFI+0nfx4qIb86yJ2KPi5UQedlkZTjDISf/
pL/1w3sdLRK0NnDaTJTC+5MjKzjk1VFtSzvU33HuokkeNYfcqawwCpn/nuIb
R9ujqJ/VfdlxR1khWRqnd8gtlEPMQ+Kevcdz9zrHiV5d8h8pjto+7YvnzlhJ
aMaiHbviCYowq5h82zLTaodz9chBWusjxD3iM+4dzSNNgl/4G0UiP+mrg8+b
vTnAGmto7JagkfyNlLD30jRikSbwLw3xITpXlfuEtzKxGw14JIi4cce/vePd
/J5LUo5ry1YRcV5BlVBZDmkwCwsRQT/5HI8/fvRuM3G+6XJ/GO8lrmtV/yQI
99yz1v8en2oDp6sVMWuCsF4Nhj8mIB8zWdab6RHcCr0xU6whYIJJpGP2cZTb
fH08sSC5Hb7nParPr2aAQIOWjzXyxoUzJ08VUxuhxVjw/On1bFCQEeS1RZ4g
pkzZArwNcKFy9uZtPzb0XrE/cgd5+2dl3U8lwjSIDl8+riBOg+aMl+ICVxFv
W7yGmDMdYOl1nMvpMAPU9/nK1GHcfN6pDrryU2GFotFxhWV0SFbvObAB71Vy
4m+dPrMTXgWLDU7P0WEmm4/rKfrzsufN0dPI95cH8HuspReDn+BVf1W0U7ur
p80V/fr7sDHil1Q+LG8aeW+H+rk119SWov4tD3PZ57PFkKJ+9PIFzKOHQgmf
ZAQbPO8OqOYU18GNOylzLljPuocOns3wZsPNsDtDFUsaQLSZwvPVA+ev0vjR
fY4UOH8iKjXAlQWacl5dl84jrygPkhS17IRK6zoDeU0GiAjuNZFG/0f4hQKC
pppgQnjpzuODLCihxm7+jX6EHQm/untNFYQ5GXwQ2IT4uHX1tzDcU1oyO1uK
xkthVuHv9Bjum9bX231HET+b6sTL7qSVglT7px2JiIPxa/TttqN9t7K4a1eq
P8I29znNFNxDR7Tub9VBucQ0wzTlWylcF6t6yG3BgVT/2F1meF/j4QSHrTwl
4GjDDuXCOtskzo56hfHqr01W8FPOg6GwE9p/cJ9xf6aXaYPPsNadqg25HNCI
md65qWQz0Zz5ESmJfKlLLTRRCuf/QlHejbtyP4DUry0Tk8g3FuoJz6hn4tyr
WanodXczievxYr1B+8Nd0ao+hRxwKq322vNLkbxM/rzdCV9/SkI+QAT7nuFj
VhUFBZApM/7cF+U7bL0LPiCehRtct9GtqgW5gNETk8gT3pAj1/O+soE29OhF
8HANpDR/8klEPjb+UNHqbCcLitQ27PzHaAJGnG+iGPIHSYYISZhkg+jZApXm
e1XQfK8xgQ/lQ99vXohcwoaFqfcTKocbwSCu9fhetJ8hmWUwXcyEYF7Ncvdj
reDx8MI1aeQz6zY+uGAQwQInAb4Ie4tvcOGh/e7H6KfmymO2PgwGFBsq1NzY
3g5J/He3u6DcoTHX9/FhJnzkMd7j3twG7++l1j9G++feAq/9WyYkDhvp6Ma0
gjLTPP0d6j8aP7nGwYgF2l+CZtVNKXDfwT5w/vOdEf51fvlFTGjn+rvd8HYr
BG6RXtc3/z684KcJuyI6cLubZK0/3QUyR5/xW6L+HZ+93qcqGLCHfUjc9Xk7
iKy/fvg/xJ/TFMO4y+8ZYHWuA1bWtENH+DOjjWgnai9/XO5iOuxMOpCgu5wK
tHBZ6yj0J/TrbT4jzIsQpcS55FUBTI9nrvuHcdt50NZXLYMDPHKWu07YyRKF
JN3Q5SgvTmLd+4H55zsoaFxyJQvCGqynJJGvFuxZ/2E5zoH1DaaBghG5MJL5
WigX6zAmeGrhTGMxsM96VaVgHd7e+PSuLfbv88ZN/BM5dRBOveQ+EcWGizcp
WtFnOCDVKJb7U4YG901mvm2Vo8E/McsBlQsc8Dx+wp+6iwHi8csMzx3rhNa4
uLwqrP8Bhuq11zN02NE4Ti/u7wRt+uv/BDCP5IUal86zAgj8ckdnGPtt8EDL
tnysHzgqPpzaWwO5W+rFbjezYVS/06wH6//KWzuBZYUFwGwMj/mA+rzCE1y7
0c5F9vPdylALGj2fg25Ws6Fz1670SLz/g1sX+JVu5QLUXNHLRRzM3hQWB2hf
f22lc3BYFUhRVrGcp9mQeCOj7QPG2U/r+5Ts1WxQTJ0WZ2B9OFRsF9s5z3tl
Inrk8jPB22k0yvAhB/Qk7hdSkS/9vvQ8W3cr8juFQPez8lVgS70iLIb8cKdp
m8YY4oT+8g4ef+4yCAt/leuJvK7WfM8lcwUOHDF/p+NpXwWWWq3SR71wz+J+
kxbmzILBSqPLemco4F6m0fcd7RwY9Hf408eExeYh65POtMLslzMuK89ywLvh
lEidUxVYf4q/tlkKedjJd1GheN6nxK4Sa0fsk3C3+4ODWNe0lKZ6zJdRJOHx
4VChVmDlBslmGnCkGoYW4PxKKMjd1ddAg1h2bmLjEBWuUp+PlGMcFBhy2b+6
myB0g+RcIJUFonsyRVdiPP87kT441N8IBydCf8cvY4PMn6OSaRgfuzupBpd0
WsE02/JIfjkT9Hnjt8VinfueXLiBd0s7iIUGb/7OZsAK67RP+zH+lOmkUQHs
292rrL9QbiFfpJUn6qL93MJTv1ZFtkJ+eaDH+0wm1DnSBVTQTrf6mXi5ujYI
XHe54o8VE4SeHVBchXKlNUEJuYcoUGtjveKWKQvt1i/bgfXQJBr4M7i0HdpH
PSdZHxiwrb6w33z+dxEvhTUs7btgzajsdBPQITJoIswP9xQt47qNcy1srP92
wa2r66FuQ2+l00kO6ARIr5LrQVy5ssCv564aOSqUNCuG+t+6bZqT8Smb9KRU
m1INDPFnWWIEec73L/tvc/VC5LvkdfH3tMjXoMnLvaocmPtUt3EeJ31pV0YX
JdZDYZzdMmLHAXmioxqwmAnc/yQG9pzGOS9VtRX3JSj9cSD9SBQdhh/UOV7J
7IYJQdGPbt/YsCm5Ten1MAvMOKM+40MUmKi77xonjfuO6wDfaksa1GhrPP9r
TYMHvMsvv0T/AoTL5Np5e+GbvbTFzmRC7L44FtKRP8+8PRc9j+expzI46dea
oD3D2DCtjg1/WoqWrHbvhU+GPhZT/vtJR+Mes8BdHFj2ta01VaQe+FOYmn7f
2RAir3GsGveRyLYHxt/sqiHm6yzUoN9Ss9nB+205IM33RSj9RDs4JNhfvbKU
CQ5cRok8uohL8E9B+mU9UAcuW2qhH3Mrujnt2sgn8+offEjvBrecN8fMoulQ
/TXclxf7XmTP0xuX+ing9dTlOvdvFuRkrfpgXITnh5aESRe2gNW1bp9TzSx4
mjEu+6yYDfEhNXeFGlmw8eLxhsziFmDY9OuQWjZ0RCkMOG5tgpapDRH9DWxY
7njggR7yLPfYoD55xX5QFS/ST3ewIKdSTF9WnsI568p8/7Ubedn60/BASI00
ZZsc9XqK55aPzK6O6YUQferUbaODZLZ8PCv2MAv2hqRxc/vToUyj7EntJTqk
72iRpCLe7Pc//ZoWyITUWm/rRJc2eK1VoHkX+bPmgJnoNlsG/Li81uHOVAeE
/EvfkI34GcRzSVi7FnnfUWo0u3o7Ee/W5aIgzr1kGO4zwme/kfGX2r4ieM7X
TdFHO0kfXp1/XYNzprAj8mPIdjK+RnPTuwAOyGhgGqTY8GTxhrfO2K+8pnl9
gyhvn5wyPd/Hgsa8qfdr5ppg8bajYcmBuKd/NXD1NENc6ruz3qKtFF48Glze
j/pDhwXUHE2x3kfdRM5PlQJdLdrJHedayb8i6ffIH0rs+9qq1ZWIucmqr6/m
57vVNld1N6zbFUYbxZZ1w57qzF2TOHe0DvfvyC2hQxZFWGN2Txc4L5Bizb8f
qOQ55b1sUTeERhpbVXnQYUCOImGH+ooydZt5Vbsg6EdAnU4ZHX4FTTndRTxe
kZLmHq5EBcfY67H0nzTIa5Kqo6I8R2/IzWCIBvz+sjNvVKlgvvqI81XEB+Fb
xRddBGlgYDFW8Gc5Dc6tSf47z5eErv95rTbeAxGLClwYEjTQPbzLahPKVSbH
M23W0uBovg459K8Hfi9ZuukR4vBF0xf8N6Rp8FThK4/JFhppvtywkB/58zIH
/wDvbQz49iJaWMmmk6StkFi41RN5onNXi/9pFvgG/l2R40Mhf9mF0UI4V4ub
c3m962mg8VNO/9UYlZj9Wu3igbgtu3uNXmYvE0Iv62YU+bYSiavVj97iufoR
t4uCmVTwWrFVwrCVRkL5xd1aMC/Cj3qLaQc6wXckKkNgF4PcGWOKHcP6kDCL
e3Zrmg4LE89s0vrdSfrWyN0wuMSBMpH7zgvonSD1R37vf7wMIrj4Wlc0xs3S
oj7klnQ7sNVbvPIYDLLzB/v9IpQrxxaujOHrhv3rPO/RvOgk5pm3RS/m5ZJT
nEnRvVYon9YY8H/NJAmSmV92YR6LLshLxu7sAtCpi9CroJM1jxXyLyGer416
t2i1IhUKzXdzJn/jPqUTqroV52Z1un3f/S0cMOQ6+uQBqSIXR/9+L8S+y5mm
nkzezIGxqZ/LvpyrIgIqj0gwxidjsNLFAZ8D6cpk1aoyMhl03F4B43CeE/4t
DfuH826rQJAVg4zJrNGvQpwPoTHfN9u0gQ1bNOUX7r/ODgkeIrh/yfadE89e
QYPzSydzdVfTiHnwkZs2WM+jyvlRlxdSAc4H8v8SohMurdacWeQ/IXUeguPB
7RB4Vtynup5B+AdpPudw/hYN+t6UOkWBJ8ZPKhPcWaQ4RyiBB+P8O0JopGGy
CeR5XMYWDLPIbcbLXm68b6qrjyXlZCuka44/8v3JJI4OP+O34t4QuTuJBK2s
ApFa28vcchyS2qv17xDO6zQeC28uhyr40keV2rqJQwpFnpjYYf30wedci9FP
UN3/8letD4dovHZqycM6X9Jf7PWezgDN1B/G3OrtpH6SZ/9tlEeSjjM95kxI
3/T9rsz3NpLP5FZSwfmYd33Vm+xMBmw+Z+mRVt9OfjGsoj9g3lW7tmy57EqH
aCvpSIpwN1ltmn9DCPO+eIa2mgv7F/5TufZGp4toG+q9YmN+X+dMxBa/YcKe
lribR+JbiUfHsU/tGE9cEtpLBOhguHBN0SExKnkaa/6rF/0JnewzeWfIgh4z
36wAKwoRuzQQRsd8hQtseB4VzgbFfW8ZZV/qiMOxzrEZ3H9XBupZ0D8ygX3s
joPw3Vay/UuvQiXmZdFm0WBh3AezvkRZO6xpIAnuqjRT3CtPFd2NFMN9LiZz
43jAXDGRDnP7swTlWcJJdR8xb4UtigyZ9SXEzTkxuxztdKrFUC58pIO72tnx
abcuMjQ0lqOJ5zabnc3zL2eASp1Pcu/rdjIsW/bnMMYtiqvW+v4SGijeTap3
E6aRKb8K0V6MgzV3VMa9QRocDPWjKe+mkilW6ORfvC/TPL4/aA0NOhOyDKW4
aYS5fwddBvlP1Z7EZ3xV7SClnXPgQQaDcNdf1fmD+h9NByTCR3ugZmZ2l+1G
GimStb3DnsfbDUlyt+264J1m9JkjZXSytihbfyviFWtalvsXuwYeyO2w1Kaw
if6RwXIb7MfSyXeK0t+bQNnMxb2mg0VEkgVFv+G57e3Bpz0raoG1O6Hm5Pz/
kC6LsaxCvrfdsyD+k/k3EO1WuFhzh0WaxBVLGzE+dxfd/OffUAw7Mr2EYl05
JLxzYrYN/fR7tVEvPb0Oju63dtsSxibmCbU9Lqi/RVRdMnWuGC7eatv09wyH
PP3L33EL4798UcpbU+4GiOA9r5Z+nk0W02pqvmJdtRZ8okRHVUHE2L+GyXE2
ETnUdXsa5Vwhv1htQ43AJV1+oE2ATW4NBUnfRv6f5aNzyUSfAg0R4hcfmbOI
5kNOtzzG4S9z15D3hzbwr/899fsYk/AprZw7ifW85elgvoY28lInd9uQSiZh
vcnS7sI4qF24sFw2sQCMj9Q7aV/gEK+PLx3zY7D+vd3UrMNz4cKZ9x8vXuWQ
bdskLZJQP7cg59YF3IcfLxq/236eQ/wWXid689+7u+rxPMf8HShqXEvXi+eQ
x8YTmivQn2YLp38bD2WBsOGE4t0HHCLzUbHjMeZx/60D5uu0c+HM18qIykgO
MbnSmbUf97qS4JigodFSOHCs3NrKkkN0/IMbdBHPGzVesM6qfgSVNBFDixAO
4Zx8b8KFOKPHt2iyrakUtpu/X2VnxSFVO1Y2miO+3bBzNNXoboTaOwHnOyTZ
5LrewOch5CFmnUf6P11vhWRXOw+zMiYxULsvFHmEAxai557dt2uHtjlp6w8r
mIS7i+7icQz5SZzdo9/8TDA7Y9mmPf+/0cdTbg9rIp+/aKzVmNYNn5Qsdr+I
pZOrZT4367Q4cP2s3j7nCDro5hVbXSrqJuECh/h4m9gQ6fay4NgQCyyaCsTV
uVqIvzp9V08NG0rV/aKzPrMhznl9ZYpeE8nkIrYHkJcJb54ttvzAAsXrbz98
ZbUQn21JFXoaiKv3yisoFORfec/NH6vUEyWXX/vfqnBgg4nhkyB8Hc8/T1p/
Xj1Z+kfJdBD9fBt3ReUc+lU+PRK95Go10VWW73y8gQOT5Zd29prToGlsn9i2
4zTiX27vMamHPGcb38dXM3Vg+6fkenoDm2QE1lQ4Ip/n2l9SY5ZaD7UL0gaP
VLHJpO/u01+R9/rmnS1Q7q2C6XXL3Pz0OeRmztayHfVsyOmQWUtlUSBehjon
P8Ei8hwRw8d4T6bJzlzvmhaIty6Ufwk4Lwi1UAD5N18qNUBfvglWpo2rDWL/
7l6scFs1jwldLls26EghDsRIXK1oZpINShM3rIxY8Er7T+oTXzro7znEdrlJ
J6qPQ5ccLmCC90/wDiphguHT2Yu6pj1EZXHb6cPz73v0CxmswPqKV7788md5
AfnvZ//MMMr1e1KWzONN3tMoh/jGDyTd94H8Fazn+C9lykexb8Seba4b35VF
RkTN036j/PFN+VD6NazHu02HJZ7lkjUFrV1yaCcs+55dG/LQhdset7a2F5DG
E4dO3cTXy9oomxzCfceJtSC5e6qGWJlYcBegPKDxxRrtSTZ4Su5cLJZURfic
a21bsG6z57a4Tgcw4VW4/LW7nm2Ek7/W0wN5aXSsYdOMMQPyxrc0dyzuJGbP
Fk9Pod8uD5O0tTF+idX/jOeaawm3lnTcKPbXh77WSTl8bvewjk3QySd+qZa3
uLB/pXVaJbo7WPCVXUt53tdEBgT5y/cibnubDCwVDmWB7ZxWpbP9N8LYUztm
jviz2/R2Ti3uBy83Tb3NNMS5c9Yv9xL6H1EzMya4hA1G+4yWbR1tJHyr2t6e
m//+9mGxsWHsy1PXbVTslxaT3Ttb832RnySMnq3/acIBD5bZvhTBMlL+x/mv
At5Lgx70aQZ5te7epRp2/aUk4pG9DjfqB8XkKz3qZYFMhoZ26qJm0hy+drjn
CvJq2vGo+I24PwbFqF//3UgSTMqWrAhjkCsxLwtNvDA+0ZKZt7wZIDzEVCxq
rQft8wXRGRcbCGv3KtN+hWFIFuIbK6tnwFmtkOQpoY8gGaBQ/PR1P1RsEV5R
UcOA5TTx1O6MfjhnmrTq2+aPMP3qRkvWCBO43Pe6zb6jw9WxaPuU93TQmWm9
9BntW816qPFsHoYo7U2vcx42kP8BQ3853g==
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{341.9137249111154, 342.1081725571949},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-10, 10}, {-10, 10}, {-10, 10}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-1.3857327433704039`, -2.833486457735109, -1.225193559313336},
  ViewVertical->{-0.974397902039981, -0.16181609041506662`, \
-0.15609061913794417`}]], "Output",
 CellLabel->"Out[61]=",ExpressionUUID->"4ed44765-e992-47db-bb34-7e5d28ea7799"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fig4pt1", "  ", "/.", " ", "transform4pt3"}], "  ", "/.", " ", 
    RowBox[{"\[Chi]", " ", "\[Rule]", " ", "1"}]}], "  ", "//", " ", 
   "Simplify"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["Z", "0"], " ", "/.", " ", "transform4pt3"}], "  ", "/.", 
     " ", 
     RowBox[{"a", "\[Rule]", " ", "1"}]}], "  ", "/.", " ", 
    RowBox[{"t", " ", "\[Rule]", " ", "1"}]}], "  ", ")"}], 
  " "}], "\[IndentingNewLine]", 
 SuperscriptBox[
  RowBox[{"(", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["Z", "1"], "/.", " ", "transform4pt3"}], "   ", "/.", " ", 
     
     RowBox[{"a", "\[Rule]", " ", "1"}]}], "  ", "/.", " ", 
    RowBox[{"\[Chi]", "\[Rule]", " ", "1"}]}], "  ", ")"}], 
  "2"], "\[IndentingNewLine]", 
 SuperscriptBox[
  RowBox[{"(", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["Z", "2"], "/.", " ", "transform4pt3"}], "   ", "/.", " ", 
     
     RowBox[{"a", "\[Rule]", " ", "1"}]}], "  ", "/.", " ", 
    RowBox[{"\[Chi]", "\[Rule]", " ", "1"}]}], "  ", ")"}], "2"]}], "Input",
 CellLabel->"In[62]:=",ExpressionUUID->"89545d77-e6bb-4134-8d72-0e5df53c24c9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cosh", "[", 
     FractionBox["t", "a"], "]"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "1", "]"}], "2"], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "1", "]"}], "2"]}]}], ")"}]}], "\[Equal]", 
  RowBox[{"1", "+", 
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sinh", "[", 
      FractionBox["t", "a"], "]"}], "2"]}]}]}]], "Output",
 CellLabel->"Out[62]=",ExpressionUUID->"94e15950-ff15-4ecd-92c2-e7d03ef72747"],

Cell[BoxData[
 RowBox[{"Sinh", "[", "1", "]"}]], "Output",
 CellLabel->"Out[63]=",ExpressionUUID->"b5da6064-722d-4401-8902-86a91803e1ec"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"Cos", "[", "1", "]"}], "2"], " ", 
  SuperscriptBox[
   RowBox[{"Cosh", "[", "t", "]"}], "2"]}]], "Output",
 CellLabel->"Out[64]=",ExpressionUUID->"efa1f4fc-737a-41f0-ae52-f9435916792d"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
  SuperscriptBox[
   RowBox[{"Cosh", "[", "t", "]"}], "2"], " ", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "1", "]"}], "2"]}]], "Output",
 CellLabel->"Out[65]=",ExpressionUUID->"1074e01e-fe55-4157-b21d-40e3619bdfd7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Solve", "[", " ", 
    RowBox[{
     RowBox[{"(", " ", 
      RowBox[{"fig4pt1", "   ", "/.", " ", 
       RowBox[{
        SubscriptBox["Z", "0"], "\[Rule]", "  ", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["Z", "0"], " ", "/.", " ", "transform4pt3"}], "  ", "/.",
            " ", 
           RowBox[{"a", "\[Rule]", " ", "1"}]}], "  ", "/.", " ", 
          RowBox[{"t", " ", "\[Rule]", " ", "1"}]}], "  ", ")"}]}]}], " ", 
      ")"}], "  ", ",", 
     SubscriptBox["Z", "2"]}], " ", "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}], "  "}]], "Input",
 CellLabel->"In[66]:=",ExpressionUUID->"88759826-65bc-4a04-9002-b8e49e8cae85"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox["Z", "2"], "\[Rule]", 
   SqrtBox[
    RowBox[{"1", "-", 
     SubsuperscriptBox["Z", "1", "2"], "+", 
     SuperscriptBox[
      RowBox[{"Sinh", "[", "1", "]"}], "2"]}]]}], "}"}]], "Output",
 CellLabel->"Out[66]=",ExpressionUUID->"38ad6ba9-a268-43ff-a851-7515c95f3ff6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ContourPlot3D", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"], "-", 
     SuperscriptBox["z", "2"]}], "\[Equal]", " ", "1"}], " ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"MeshFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["#1", "2"], "+", 
        SuperscriptBox["#2", "2"]}], "&"}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["#1", "2"], "-", 
        SuperscriptBox["#3", "2"]}], "&"}]}], "}"}]}], ",", 
   RowBox[{"MeshStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Purple", ",", " ", "Orange"}], "}"}]}], ",", 
   RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}], ",", 
   RowBox[{"ContourStyle", "\[Rule]", "Gray"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"REDO", " ", "THIS"}], " ", "*)"}], " "}]}], "Input",
 CellLabel->"In[67]:=",ExpressionUUID->"4ac65393-b8e8-41ff-8b66-a4f0e78404da"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJx0XXk0ld/3lqFkvrld1+26rqt5UirNvM1z+TRnJkkqFSVNUimSJBo0SxKa
VMgUx5DmAaWRBqVJ5hJNv/e7Vvscv93qL8uz9tr3vOc97zn7efY+55i4LJu+
QFlJSSlAoKSkwv/ts2lda5l2TTYXPMa2or7citu4fGBTXbkV4HOL1GXDv9db
PZ7QOHncz3qrMN2f+T+/1FP75V5TPsjeVVlZR7f+tuldObXHeNcv8mGZ7Wqo
f/ADOPhX8n9aeaBxiRX108Fr1xbV9xR/GXeljWF5HfUD/rmc79F7R3+wUpLv
1e5x2DUb7ME/4PBcSk5ybU1b+2zAU7NaGWeX1lEc/C+fdmvkxUEf6POCPbQf
7KGdeh8/OHxp12Dlm9VrpFVrVaIk+ZqbU6bKLb/k6XtZU5UD3Mn/ygq5iSYH
9l8tPLusXqdNZqY1qQ9urUPtpw/0dk+92IbhHUasbJNUbXXuVoT59jY6FAc/
gL/scVrmGc78UHu7l2GSaAG171N103h+kT7JdZaWtlITUvtN/b5K5DcFDP/z
u9B++fn0OZ7KqhQPctl14mPbhmz8HsF+5ZxY0T17Zfq7YN+nyfje1rGN1J70
baN/bHMT9QP2cue8bCNlFfq7YA9+oP9nf56WstxQwGnXn9+uo2ZIvi62Db2t
LuNk4r5bxepCiuf6bzFbfcuY4sqe4zfmpoiovVQrYmTOpnZcXNPrTZfUZGS7
74b6uVtNuAcr3Ec0aOtQvNfZg0vbnJNTPEdyVjB4muSv33VQXjQhQtOI+gEc
/HiH5ub5V5lwibbuUe2711h5Va7fvUhVSPsfnhfw6Wf8ujzep0/x1t1+JSVo
6tLxADi89/HTm7xKWmlT3PPN86HLN6vR/py7cMjN7alt6PgEP+LZapM3tFHh
oJ/pe/8zTgDH4/xl/Pg3WdHV1D71S0bQouOadBzCcyVeHeWnFaTGwXeE/QMO
4wf6mbbzz3gGfK3QduLgQ5rUf/r6FT8i7wioPR7PeB6A8Ya/azovbT2Vs8ik
5i97eF4Yt338ig73DmmifgCH9wvjsKwiY8C71ob0vQC++bx/+6tnxBQP2G5q
KnFk9lHdErd1WVtjBeMHxhvYA37u4maVi7lG9LsD/zoK8x7Ngwwp7n9NEHP+
nRH1Azj4EXVbVvWos4y+F8BtNPaP/m+hMbXXWaiY2n2lCR3nYD+r6MdI8Xs5
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
dv6ta/Ml87YVYhK8QsX6+iVjbnb/bifVe7DzHr3sFKF2+jIu9ML9lDJ+HQX8
4+7/HholG9P9tpMfDcgaaCchaW7uX5cJ2T7cw+3vdzjWX0r8zl5qE5jB7Ldp
v1P+VWVEknMTpc9PyDmfDar7D1cL2Hluo7ZFqLmwfcrPSxpfbHokIXZzT9U+
PS6neKrRy8FL4qTk9YPud2zt2bkfys3R5oeKBKTyRkVQso2Au5yvvUCeXG/V
+qh3uv4j/b/OCd8cE9Jl3m41csXu45Re7di9BsLpj1slrtYmzTO2DKxcpMVp
/XqifV6LnSep8M3hcrVUuUV97H4l7Vdj5zAbLtihzY8HeC8B5w54LHhYnR2t
bzk5so0q99jCjLw2ZudAdhpxvZvIQJX7vL57hyObtakfeI/0fPt5P8v9JSoE
7KGdB5Z3O/WiSEIU3e2fTNwkofjv8ibdUfx6brmx8PtXGyn1kyiJqrozT0Lq
jqdcORAkobhvtzd9A8ylpMJS2rG/DTu35HzF96guc2Wkf5v56V4pxhT/9WRp
Xn2DMVlVpKM1lX8vgPeO9Z1tmi0n3bbNC9dwYOfMv/w8dJ37bmNiN1+/ovpi
i/PqAycZu++SE9kWq2D7KDnFS3K3Xzk22YSUbg7xy+ff78hvt54dPaJCz8dz
C5p6v1GPnaPyY9b0Ke/WmZB8QZ5Nji7Dp2fcj5lQLCGJhy9+fWor5bjnbnKr
OSp0PG+1vnnXKIidY+9eG1JwyUtI1u4ardbbQ8TOu5jv/Dj2Ks8Hut5TjQ8X
03aOfPtF9bGFiGSte9Ok68HO1RHrnM985SAmWQ0Pbp0IZ+cjlZiva1OSLyJn
l110kruIKD7waIKS8isxmfwt6pggSMyNDLQ0DN3PzpUdav2lep0G/72Hxk31
nxdoZRnrE31oBasD97pSZUe82DnDTk/MD15uLSSP2s5aWblcyN30T/G8Gh6f
jc9NBT9zOl/Y3kmVzSdHB7T9UWqmIB/fG515coX1p0X2dpXaUgURN1dFr3Fj
+x+j5GM/HldVkElXs1udEiooLgmZWOF7UUF2Hhe6fiAMv/vAr368nSmRBbce
2HsRO8e+74Rw3/I+vH36xwuT9BUUd6kasCOW/92GTy9MOuQz/OAX5+aaAFOy
Yc5A6X/LmJ/UmCm2lfNkxIbkV/0WsfNzOp52+HaIH7dpA5ZNEPHjEHCz17In
d3PkxFVn9ccr/DgE/GuB6f6j/LiyN1jaMdOGH4e5uy1Twmvp+Z/7lh1XaxDI
OI/YPucM0tXo+WMPloTs7Owj4j72vD5TY7c2xQ86br+1e4eYC+dOFpY816Tj
0Df5Re/uC9n59gWPEmxWDBYRLf3t0pFB7HyhlzfVP1e6iMlTM8uOWvbsO735
3dJ7BT9+bse1etlmE7Nvql6gejdMTp7N0ViT3I6d26AXHrzi3BQTctEiYfCi
HAU3aKWJxeDhAvp92ffr1fe0Jztf4lx8n619bfn+fGtYf5H3A3hUkesvuyZj
MuPIyTHauQw3UQ+YMpjvz3axhkPWujM//Tt4bnLwFZIvg13jHjpKudvue960
eyGg/ZO0YtDboP0SbpRGWrbJOzW6Lph7tPUakm/M3dg/R315pjbF1xeGjNOL
ZfNPVndnnTJ+3nMZWFEwxJCdD/ZeKd7e+rMRWWLsmOipw9YpW81pk9NUFCTp
zgQrQ76dFYkOnTbratF+6GfslvGrgPWbzkPPcGm4MTmsWzpXYWfCLXlnMTlz
iIjO5+ZflcQ1K0WcbGS7JF1Hdg7nsWmud8+Eibmu2zmzpT7sHGaYZ5T2uK3u
c11E8c2VFnE2u8X03JLCVwsr1txRI+G9nn+1JsYUz4u19b4UpU0ebrym0cyv
p52n7XBziGfnbUI/vKkYMfykAzuvMrdpxKyCdjIuZty1L10HSSnueSTn5aV0
Yy7Jddarkhojiqtsyak5Ei2nfuC5QvdeDDgSKuFIUYXZrX5Sih89enO6lquU
nmuxocfsq53HqxDdxTuDyTYJV7Tl3vu6hxK23oXphYzk1x339pNPjX4jpvia
MvdPxRsl7F6Gl1U5v6fVZPtec24apC3kFE87T17VYt4LOVCpiGgv5Hq2z/pc
elVE8fbFe3fYeou4yW3rlbJeiym+R+Nel7gD7Pz//DFqzlyRJnk8P06np5uU
Uww1H7yQf790X1i3qZqtwvh+rLrwzNZNTHHlR7Pd7jhIaTs/WQ0q+lIiIJYL
TeKW7pFwhx3OeYvXs/PGYfyDvfF8heDLKTVSEW41qdiL3UMR2vloQPV2bfKg
LPaj4w7Wzq8H2vQ81kVA4zTAqzfVbJz9XJ8U9ElMX8DHdaNr3DwUd9i5ppM9
dB3K+PmwSph68/MHMcUDu+g+2MfbC1csLJ/xVMLuWaiNEVnx63tkV4/u3glS
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
BejDY+ujKqwN2XkvoA+n7lJb453Czo0BfXj540Bx/GE5wbp0es7byC1iGcG6
tHmj8OXodHavB+jGvzXarvaMYfeAgG4cEBgyvdrRhHT9JX7e4SPTnweNXtZx
Jf/esf5g0HavMOGqMcH6wzmJcUTtUTnBeg6RnBj83xIp7R/h95c/8/jvImdU
z6/NAWw8RzWfSGzrJSS3Y/Qq/1vC7jlyWVH+q3OBiKw638r3WRBbf2v29N9a
9lZMKpJ83n7jxzPWKx4WXuPCb7D+B31D3Vs/YOcidu4N6EIbNZb8Gt+e2YMu
NPuDZvaPPAXB+s9Yj1IXw/YMB/1HKfrcpAMt7EH/mVzX1GDB/y7Wl0QWX2x1
l7P2gK7S56FXx1t2JgTrKjBvYF2lYl9WxIsIMcG6Sm5DG71ZvD3WVa7/13xx
0z4xPQ9qjcpMrzjd2mwyIHqnET8f1ow95Klbw3jQ6/EmaskCds4P6Bhz71vv
fcfPS1ivgPcbZHRk0hIbppOMjjv/sWOwhLhs6ldqMYDpJDvdp006Zi8lWA+J
+VK8b5GjlIyWVFs8asG/tE7+fthqs4S8qTaIHtOCf5mGvMgMs+PH9ZkloWEF
TPdwDKjo2nqBiMw9frT0Rgvdw7ys5On9YDHBuof8xmLDGYulZIiZkYPWUKZ7
nDA/tHgN/7zN3XTHbmqhe8xZvK4sl5+Hu6Y/PJr1WMS927C5bFCjPo1DLDtZ
7j3XQveAeOb+liC70Ba6xM+Ok2Qy3h7rV7DuYN69fN2MCdrtZQTz7nRVm70R
F40J5t0hW22TpvLfKebd0ssblobZmhCsD3w0dJI3XzAmWB9QWvlk3tTjcoL1
gZEdJ+uudzAhmL+HHT8z7AW/XmD+Prnq06nO/DyP+fswnxmf7zuwc9uAv89O
7xafJ1CQhnyDdbtVFPR3Yd6OH5D+ffRFhr9Rfp/kzs//PgGTbObbsfMMfSca
3xnIz/9Ybxl3YsicSH6ex3rL5g6fTk92NSX9zycrbMwUtN+G6GyeN4qf5/f6
TJZ0LGW4/9rxxa/zFWSmcuCFtAB2vvesuhFZJivYuXOgFxVZGt7xczEhj4a/
29a0h+kGK1+khpTx8zDWK0QGGe7XdBUE6z+/bWoPPLmmIC4TV05Ja6EzKF9V
W/mM7x+T/ifSVrTQGRLiXsTNy2V+QKcSbuVWjVtmSrD+APMe1h9g3sP6A8x7
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
Lyfd+fgT6wOtfx60UufHf++j7gOblwu5hx/erziz/hSNk2meepNivOC1gBtg
3OHeUPsW97X90Qegf7A+kOz2Ivcj3z8eTX5a3cYzfWDZZnLhLN//4uq5H9+s
YPrA0ziDvsf5/jd99tuxZzHT2dxNnKt8BTLy2jjRybelzjZ0yawPaaxOb/OJ
pNGht0TUHnDF1L6jct+KuZpe7d5fT2fxLfD9abtdOy7jfxfrDKfHH3038Rar
ZwMdwLLXsbzfLercQAfo7z87e0aBglRkWHQ2qmN8H/yD/Y7LtstX8TwC6jfW
3JFvHNBCN2j/PTXtNj8fchtDfLr3Y7wenss5JDsrtwWvl8To7FueYUxwXinR
cHTh82Xs/jvITy2Y4GQzKILVjUN+yr/dHnnAfHZ/IuiruK4A9NX8Uws+y/nf
xfoq1GdifRXqM7G+OqqhcNGow3KC9VKo18L8vWDs7ieHQiQE8/cPw14Vh/A4
5u8h8V0ztPm4F+sVUF+HdQlc7wc41PthfQPq+rAuAXWGWJf4z7PZYz3v5253
vz0NdhKC9z+6HltjdtpcSnHIvz/I+Or67oGEnkcN+feVhZvPnTohpfiFqlsZ
Ct4ezs+5mGfwucdyFRIg233GJUTCkd47DhQ9lNDzri3aPjQWOEu521LTJMOB
Ivq7KU/PPTq9VMQ19Oje+pkLu3fjZe4U37wD7LzK1punf/2vtCb74rCX7V9q
CLn7PvIR27zZvQOQxz9atKzZ47qI4pDHP2eQaln8WszuPfmTx/+hO8tReyW7
12Nx4MCMi54iTsuKmP1v3wI9/98s+kAV3x7X3qEz9N6IKf7cY+Q8y23sPkHn
Hi7j8t5rkrVZ636OXSzlXp/pu6VhmIietwx52/FbLip3cBVT/PAcw/nJTlLO
r/ao+ORadt8H6KjQDyv127kkvhAQMmXUt/wIdi/bzXPLRqy5rkam7xuy23ed
iOIDv86cP+uwNhkqv2E+OkzMXe4T3UntJLsnBfKYcO5T67XddDZ+USMrOjxY
NTqfnQ98X2fyo4osbUK8R6SYH5HzcXT57wcO7N6Qrjk1l9QNZdxSzwX7l1hI
Kf7yeObaqcnGXGNaSIa41ojiSr9rW3c+zM4ZDv3v7Lm5/QT03A96/t79qPeW
7/XJwfKyXSHpxpyxq3ZT17vs/pT+byxDhToyrv2kO6/rPokpfrLIYpYgnbX/
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
    "], {{
      {GrayLevel[0.5], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
4VAj8O6onYcIBcxXprPFlzxW7/OUD7vn1TypnJKeITvToby1iVGLXzRHfipq
trrGceGIjVXZM7JrvtcexGNnpZWDolwU1bM+ZDn860KWV3jW+ZraU082Z2NU
cLa03pf+K0D+MfnJdNYmWfY1972Zavks8sXND1neR46Y5Zsq71Rn3quk2Ryh
b195cZWRP418BPiB187R68yHvl99x5009yF/F143zb7V9ym7k3KP+ez/BXZx
36Pob0+1+UpnXnT2RWO4Pc8yJ2TnNbQ328n1luDc4BXg7mHL9aogGxJ5MbVb
7zfN9mC611POtpSN2SVscefOYTubr3yuKpSthX6K64fOLl9dtqXesd619noH
oCt+O7PTBvmTbs0d6s6qaAwol2+LYmxxGycaXy9wvTtUBrwRWT/w8+hs5P7r
oQbg0cpHVtvAI539XE42b9TWHcn1HxHfubX1LfAPtOMh7TmtfWjE7vtG3PYy
sg9zx+x8kHy4n0Utf7g8eEvUzs60VL9ojDmnjc636L84moXsG/nPbgdvU6xN
uR9cLx233LMTrg+V26N90nnna5Wf9lLUznV9SdvuBu0eLV1ZjZXKbm1d72Iz
OiO2NmL5J62o877yfQMW89L7aqy4YtzODR1VLCRqezrlksmvO43rYZ/9b8KB
qMV4tHfQfzIoH6Zq3M4CNXX1XEi1XCf5h/UO9C5KuLV7BfJHYpZjpjjMz1oD
gxY/uh00X4H8UDqrpTNVPzv/1UHne9K5pO7Jlmuo/33Qu64iX1XU7KXW1PlD
1J2ZQr4VHItY/C5bzGwA2VSKbyqPWfnM5eMWy1NOZRZ0fudepQIWxyydZnGm
t6N2HkH5/iXSrD/rubK/oV8yYLFO7ce0L9N/XGh9z0QbmqaZ31jnbk7Bp8ds
Xyr/gNZcnaPReRrlGCsHW7nYu5G/z9wySP2nvbbXfAU+6g1R/xzZNjE7j6lz
mYohvos9M0JnSdC5n2TnBXSGRX57+e/T4naOQGcH9sTMz/gqOOryq3V+Qbb9
PflYY5bvoRiEYhE60zEf+StcvwtOog2zXRveQ95H+52I5SjVV/5s3OLlUyJ2
tuIc+BS6MXd+TWcoPuf3POS9ZWOGzf7JKvshZvlYzSJ29kR5zsp3zk3ZL4MW
48tG/RmSLef/u5jZ/bLTWlO+grO3TyfsnKr+W6NX1M7LKo72U8zOFKhtlWVL
BS2HX/06T/7YZMsNPuC+l3Tc94BbRypBvqDl8OeQje7exeW4/deN/n8mGje/
c3rKZkyztU3rXQrylcgzhG1fpryDY/oWonbuVudq63LtPa+dj7gMnsh3dyls
uUOKpyuuLl96Ha/VPzvJ/MkR7Wmjdo5W522rRO1sq/5joVfE/N7yOdeDFnrt
7InylxQLU0wszeVEKd+pNpTBnQWI6dug7vkRO0OhczqDI3YeswY6q9F5hjpn
UmdZ2YBQJ9q8T2M1YeeV9P8GRTQfey1H60HM5ZdEzN82xWv7yfOUmaWYaNjO
rMmvP1T71mTLmVOeXM40my/0PepMmf43YlzCxmBD5+fXeaFv3Dw2WXu/FNuv
FaT8x/L1wzO68bOANpTmflORFw7bN5Jwz7uXey9zz7s9Zrl38jtdc/tN7YOU
l6b8NOUbZ6DsGvlcw3buQ//zUC/V/P+NvfathZQjB84Ztj1PWRdfuBizc0Dq
k8fd2SX9V0ZW6kzv2qlzbfrfiKsJ21eVcjGCku7cq2zdI9TVlz48DF/CvZfS
hjnyqccsdqJvSv4z5c6N0DcZt//h0f8IdUHHi6yCvjvK96aeg/Czcfv/E/1f
yg/onEdnIjoDYuZTkz/wl7jlTum/g/RfOhUpuxt+ImbnoaS/knbsU55Aqp3Z
Cbg5RGesdE5N59WKOf+YfDs6j7YAeV/kU5xPoIWbZ5Qrlzluc4j+60b/eXMh
bv89pf99+h+1x5Dl
            "]], Polygon3DBox[CompressedData["
1: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
vEX4KGUmeUloaEvYELQlaKPQVqGOVr2r+ld1t62tgX0QA7GQ8jdXw99EHrpd
W+hMta+JsVCXqo1XW688lbyVPmjy0v7H/tfaNLRtrK98Xwk+YTztvVQKnmRp
6A3C47LB/zt34rX0wXIOxRCJJdKHUV/G2Wn+Tk39z68F3ugHeWTCz9dDd6oO
9WnyZxJvVwxMsNhgZcKDknyn/Pcfdf6SX4D+rsV/7N50j/rfy2PKC8oTnl4L
vJPY+YuSPVafg8OJV4vhi9BbXjkfuEyxpqdSvo2+Vs0GXlUMvmWtIzb/4EbY
Bmcke5+Y9BUNNwd+uR91NqHuJrRxQ8oXuy7mX+y/fW2dDwyoffqf1cg/pBj/
pTzbkp6rxeDl9F/tTHwd6GrC56s/IPwq7W1RDZ9WfVt7uIcbYfPQ9nF8Lnx0
lCGV/ZQBlS1PT/yy+qsRtfCDXYP8jsokhK+HNi6FT6O+jadSZod8YETEipg/
thE+mvpqGu5K2Y2z/99v0+8ep9zSCJnZb/GblKWHk7YU4VWygR84jXjVu9E9
XA181vaUv7A58O+rl0K29bwXC6cMbB3LKhs3yF8tG/jkDoSXp83nqHslbazR
CAy8vlRirsReaegVm79xOi/VOc5O+0NdpD45+uros6Ovjj47zcoTufDlOYny
m3umJX2N8kb3fKSZJ6ZTbOeajOXKRuBlxKqLkRYrLZ5LnxkxtGJpz0zzof5P
Xy99U+W15bn1UdXeKs5UvKnYezG9YtHFpIv1VWd1TmpfbK8YsREJf6NuS4yO
WJ0pzYH1dn/U5NWSPsr/yrW6aSn+M/E4KzcCB/xbJcJi98QEm7Y9Y1jJs6UU
eHBlePFW4q6U7XcibbVS7KE+hMfQx9B86MDUhR3eCN5cHv2wRshAykJ/Nwc2
VEyM2JhDqHNhLXhqy4tBldd2z7n3xLBoez8syZIzMuFPMNH1Q9/9XPONkDGe
I2+/fMgeDzRir7hn9mF89xPvrW6E+G7V6G9OwkcoS4iJEhvVV56gFjLI/DQe
sa/OkfMiTuCARHOL4Q9l3rFJvlGfdnwtvl980mepvjLzl0k+VP4VvySWQEyB
2F5lTmXPmjYpeZ1G4H7F/3ZtDYyTWKcPPUMawS/8yPeukfSVYhDEIiyfDfyB
Ojh1cer4Fun66oGNEa+s79R9lO9SCp9hfYdXpZ326hmhLvnQAaoLFBMqNvSz
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
+H+YCcHX
            "]], Polygon3DBox[CompressedData["
1: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
jJlcdC7iTmtMkS4/2TTRXTmy4zHDs9Dttd6ETEdzvub+K+B1+UaQ7z3ou+C+
q1PS1U/rx1vgPScbTvrO5N8bvj8YCf8neq2hW4EnwV/U5Y7WVuhOmmfdWnZW
a7fskLJVQJ93aIusGXm2SzGdliHzDSkCXwy0gN+k8z30I7oXc+39EVnNkPX9
avr+J/iDrD8HwH7Z2WQvQdZJZ2nye4505cE/pG2L7ClX38pa40KWrgBpOmif
ErQ8OiJ/Xn4+oAZ6HeDbuTW0FLJnwI2I/Tb6jdqASi6/LZSdFT6T/DlAc7cm
d9F6rLt7wmvwt2PWl92RvU14K2b+YRHOHg10JwDqgUZakwLm05eJ8DX5boTM
ti0fMvmSvS6/AmR70JFj4n35KoUsn/ry8dE9TYrlqTvXqVrfUqxO2h9MQrcj
SYfKzkp8Im57E+1JtDdZ4NbuqcSPdb412hPMhC8on4sUq6fq1hDcoC09kfVI
sf1EDJ0qyCuDwtCH1F/y3yD9WvJbBzaANfo9SFuf+Hqu/2/Tz4f0G4PDoCGy
lKjNuwOge3tsT6U9ksZCbcL6IbORa6y8Bv2Q9gVa38Ef5HdC9jOt42oXcQ3R
iVKfMfBDtcchjMTttywKXdRjeZyUTSVm41HjMruzYVfQnSP05+gsAKvcfk37
Id0v6zyQLWrfrb7lMyA3sjOkHYxuU32/KfZNDAiZzXy120M9Cl3I7WVkRy/o
+MJxi9NeawrpZ4L5uiNGNhLZCPCD6hk12Vp9Q1G7+54N0qOmpzjxH4fs7PIM
eNbtNVXnxchnkfd08JP6Im52/mbQIeKLxE22AL0+6AzWtwv6wT+ps32KnYN0
367ylXcZUBascfvZIrK5QV8EWzUeQra/1T53LvQMZJ+4OackOlcjtnfVHlZz
jvbN2lNrLIwKmb/eRmQvuDGnsbda9mbiD6fY+NM4lJ+l/D/l0yffvvLuO9qN
3tUU+2b07eg+b7VLuz3F/D11htNZ7ouQlSWfQEF5zUV3nsd0NNdp3hsE3dpj
v2+JuP02/eGHp9j9h/qxucYz8QvBImdzb6l9MumLh8wm/wV0Ee3ZoZuCZuCX
iNnoZUOXLX0zfH3kfndXshd8Trp1shmHzFZ4UOdnrYHIGyCrAdK0frh5+kXo
rsgGhqzux2I2RjVWW3isnj3cHNsrZN+nvtPm7t5Ad1aFQ1ZHtVe+x0+6cagx
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
rYz86h4nn6Lp9jbj/wCnFUOa
            "]], Polygon3DBox[CompressedData["
1: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
i2otqo2Uhy+FH2a80e6/0D+N1Ljh7WhzIMjqTknolgVL+P5DwGJvxWNHlFv7
LPeJibA1r/O/HtiEnfQoSw5f0UcQz3jkHyP/FvklZA7vIaAasgbgMrIP6GMC
fDM63XQ2wTfB26uGBu8EWsKXIFsK3oePRbYxyu7+ce78n9U5j4/XPVZTU21N
d18fdOa5vqXCN8IPwnvD57p8JHyDe9fUirbammps/RjDdWwN0j7j/XPkI8BT
7XXOh1TkRxnDVYaWQ7UM2p9WzQ9Mh08DBfy2ZhPc9TVMeTfv5xw7D5VrlMX3
enzL6e61OvA3XXs18WcAfd6iz5vgNhhAv934lgIqqK6jdefuyyERpnMHDKZd
IdBC48CnVm7NRbWXk/iwGVlLwDS9Pv/jkGUDl/EnBXl1x87bJGRlwf3I1105
XsWJjtU9PfZbnXsxtga0FsZ7LAeZgP5Q+n6g/+6186YGdsfQ4SHWVSbv663g
FOSZH9yMtHNesbdi8BPwuvDnLlfsrRj8V3g9+ItIs1MAXti9vzSWS8gPIM+N
/Ar8IPwt3TWRFjdOCrO89TOP7WXt6co4ksKA/uD9a5APXlF7jrZx+JwFfIN+
Vp5N6SSd53/p61NkBUE2bD7B9gX02+pcxeZFeEflC/CjAavhqJZzTDk1/BG8
q9/uAp0npcAkdy/sRycXOn+7Y8kLvxZp96xiSMWSR+Al4Lfhf3ntnlZcq5qL
ai8dsXUJnVZ8G4C/bUEevg/n+W+M7QXtCf27haoJqC6nmBKs0vypruTmo2cC
lrM3ce9frY179FuV9mEhNvZ66GQNs5hf9YfQMIvDVZ9ULK2YOpk2dcIsx1Dc
UJ/3BpGW1ywJs7xV60expWLMfsp96fc31d40Buz0Dbf862Go5VnZPFZ7UQ3m
dMBq3ap5y+cy8H+xfypgtfFgVycRfjfS7gjVjlRDKgevq7jU5artqMZTHl5P
sSv8ZMByBOUKspmgWmW46ehsPOLW7XWWfuOuVdWoVatuBVqAl6p3aa5Vq/fb
mumgfNPNzXUW6UzSP1rAnAxXPhhjMYxiGY1XOWaFgK0l1ToquHFXffAY+wPQ
fxlq9W7VGRXLKaYb7bdYQvlyZ/AjfR1y79MWPrvHVb9Vzq7cfYfqbbSLUP0B
vFC8jOxFjK1VrVntI9WCBgQsJ1VsrBj5oeoS6H+M3AdGc2icxeYN5Wj4/FD3
kt9iJNVpdSY+d2vLoQGrAY4Mtr2tPf4o2mo1WmNaa2NVw9VaUs0hYLUR5fU6
K3VmKl+Ox5emtF+n+Bjc4Ntxn52r/Xn+xfuVIMu1lXO3YYw53NxYOa1yK+VY
Q2Os1p3knuFe+q0SsDEq11PON5k5mARGIvcwxqP4Ho5eAORCXh7ZUr6FYq8q
vi2Be1XjUs6NP8N8VidVXVVnps5O5cW6E3U3as6nYqu/zk7V+PDnMxCnnJ85
84D7im347/uwdxX+WHVP+IfhtjZex+daj2BguOXXWgNaC6ofKsdPDVhOqpq/
av8au4d+KyN/wXtu7L8FXmo/YPsUeIav3zHeJ6rhuDWlBNX83DE2YowNQWbl
JwHLMZRr6P+q3lsr1NbDA8XnqsPCr8Gf+Gws+tc6Y3XWFgD5QZ2A3dcDfXbf
6X5UbUc1nnC+tcROW1AO+1d1b0db/qXa3TFsfa6zAp+SY+2cfI/xdsKn93m2
1H1F/3mZm5XIDunu8tpa0pr6P7OPjtU=
            "]], Polygon3DBox[CompressedData["
1:eJwl0ktIlmEQBeDxln9WZpvu98zMRVcrV4pBYBckXCZFWRSW6apdbjI0S6mV
EBq1CVpUlpjdCQnCLlhURO1yEUXlwsAsKuj5+BeH98w7Z87MN++3pK6ppjEz
IhZCLrRMjXiYE3Ef9mRE1MID/Fl+xJrpEVsmRdxxNwD78iLWuVsPNydHXFb/
OjviDdzAXzkr1HVMixhKRTTPkJ8SMZIVUUN/XLxLvwb+PXS1+F91peJucQNN
tTjHYHvhgkHrnTMLIjp5Pud5kEcfXko7Ie7nX8enzHwbIMuM2dDKs59np9pR
cw3Sl9HOM8tS2MxjO+82PdqhFU7Badjm/gn9P3XVPDby/42PwWP3y8TD+Eso
xPvdvcDLaTP16Elmh8V6lOjfjS9KOO0nus9wz3cOwhe8Sl0r3Vm6Af3zzfcL
n+v7KvgVy50XDyUPJ14p7hLP57mW513XH/mMwAA+7tzBs9I7HfF+I/Zy1LkK
+vBG+/nGp4huK58WviehCp9QM8x3tdwozX7fVs6zEg7g18y0Myu9q2RnLKNL
fNV9Dt82e7+l9yFzteMdUI+fM3MhTUmyf2dRKj13Mv93dVd4XYKxvHTfpP8c
NSvk3+MfoBi/bYZ3eKUeF805zucnPOLbC2/xTf6Rp3KFdF957VazHJ+V7Eh8
Qq6X7noqPXuy1sP2skDvPwXpfyf5h87Qtso3Q5OaY3I/7ChXPBsyUun3TN71
P3smcDg=
            "]], 
           Polygon3DBox[{{2413, 1090, 1091, 78, 2412, 3535, 1086, 2410}}]},
          Annotation[#, "Charting`Private`Tag$19322#1"]& ]],
        Lighting->"Neutral"]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0dkqhHEcx+E/jnAVzhUHlkIiipTsY8mUpSRqRrZSDMOhNbJlKcsQLkFx
hixZyjVwGZ7JwdPn+zt4p+l98wbirbGMEEKSTiJ00c1ZZggpernLCeGeHvtW
u7WfF/uVN+LuZ43pt47ru47ph37yxYR7hAd7WB/1iVF7lgRz6d/PCqGPKKO5
niFiD2mX1hCxO2in2t2ihVqr+enntVUHdYB+2tyTzNhTOq+JNHuZFZq8lEaa
iVDn/9VzbDfoiW5TZpdTwY67Ule0QDe0VLe0SIspYdO9R5W9qzVaS9KeYoZp
fvlhybfYyA5hnQV7TRd1lQs7xTmH6W+mB3qq+3qpR3qj11zR546yYA/qvCay
/7//H3R9Qrg=
        "]], Line3DBox[CompressedData["
1:eJwl0VkrRGEAx+EX2UZZixpjX8bn8RHcCp+BC0tZ4lIoWa6ElMI9yd5MKXNj
yxImXJAteSYXT7//25lzZk7T0NHT3p0VQujlkisShSEkebDP9EnTPGY2aWJu
+tI2/dVGfdN6fdYXXil1LufertBbvSPfLqCICD988MlEJIRxqrNDGNNczWbI
HmSATp+LaZf2aZnr/VqlozrCMFHnZqbsFp3RaZLuO2CPfb5zvA8vHBSFcMid
vas3usOyvcIq285LOquTOq9zuqbzusAi687HbNlHuqGbmefbp6T48Ls+eeeC
KtcrObejeqvXmfewm2jk0blB0xrXe43pg9ZpLTUknU/IsxNaosWk7FbfHaeN
kZz///8PcTpQFA==
        "]]}, {}, {}, 
      {RGBColor[0.5, 0, 0.5], 
       Line3DBox[{1043, 1044, 3530, 1063, 4087, 1864, 1878, 1909, 4117, 1872, 
        1875, 2126, 4275, 2125, 2129, 2217, 4350, 1470, 3786, 1468, 1476, 
        1477, 3791, 1481, 1200, 1198, 3612, 1065, 1043}], 
       Line3DBox[{1045, 1046, 3529, 1060, 4086, 1863, 1876, 1877, 4116, 1871, 
        4088, 1870, 1910, 1911, 2135, 2128, 4276, 2127, 4277, 2130, 2216, 
        2218, 4357, 1480, 3790, 1479, 1478, 1475, 3789, 1474, 3788, 1473, 
        1472, 1203, 1202, 1201, 3613, 1068, 3531, 1049, 1045}], 
       Line3DBox[{1047, 1048, 1191, 3604, 1190, 3603, 1189, 1196, 3609, 1197, 
        1144, 1145, 1423, 1424, 3773, 1431, 1430, 3774, 1427, 3768, 1421, 
        1422, 3767, 1420, 1417, 2214, 4352, 2224, 2225, 4359, 2234, 4358, 
        2231, 2229, 4355, 2230, 2170, 1756, 1755, 1889, 4096, 1883, 1879, 
        4089, 1880, 4091, 1886, 1887, 4095, 1888, 1797, 1094, 1091, 1090, 
        3614, 1061, 1047}], Line3DBox[CompressedData["
1:eJwl0L0vQ1EYgPG3yS1XKE0kQlPCH2A0iViYJUxWYdK0tdnFbCAmBgwM0mCw
GX0MRhsRbSIiKnTWwU8MT57n3Pec3JMztlSZL2ciYhHXuYhiEjGChq5jWa9g
AQ/Wc5zkfeuMWEcVPdY5rOkyunWBb/si7tDqiKjxFzdxqt/5ilP7ujCB1TSi
hHvnZ/iEp3kWNT3FR3yISV3nHd7Fp25iXx/jAN/WF9mIm96Icz7DJQb9dwj9
7jCA4b97cIZfzR/tf8KLbuBZv/GoedG+D73tHbawh9S8wi3vU+UNtPUPNvW4
eSH5f99fg6MzpA==
        "]], Line3DBox[CompressedData["
1:eJwl0EsrhGEcxuE/ZhxqZl6KlEnyBagpSmmShbXsbd6VDRNfwWFtQaOUFQtK
o3wHp70kyWGkSTnNnlxl8eu6n3pm3nqG08rcUktEzGswE1HUSCFiVBv2Tz5i
jb9cZpOLrCrjzia31MhGPDrf8VYPdp03fOI9X9mWRLSqqz2iX312L4scUM7e
cW9X535zyu/uiL3OiHWt6sP5U1X7mduc1L59oLJd4wyPOMVDTjPVhb3A8Y6I
khq+O8E33z6233nCL9bY5BUvVXSvoh7/scKEBSV2TqmyzrPe5NpbjbGkVHXn
Fw3ZZ/n/9/4Di/w0nA==
        "]], Line3DBox[CompressedData["
1:eJwl0D8rRWEcwPGfOvf4U5ebIsMdsAvRVTZ5BbwDzmS5ircgZsOtS8pmYSGr
gRIiG3FJCcONDLKY+JwM377f5zn/nvMbmF+crbZExBzOihGDScRYZ8QJj/Ao
jvQafl0P6yVdRbuuc4HXuYZmIeLZ+pFvuMGvuNd3eNJfKHRFJEjTiB/7Cfda
93CZi9zBG+7dwrl7DvNnSxHbbRGraOgHrOg6XvQ4b3KFd3iIazzMu7yHKT2N
U53xBS/wRKt/R9N3J/mD353jEwd6H9/5OV270pfo09dc5m7vWeYSl/g4/w/O
kNqbMZ9bM6zkM85npTN+4/7kf/5/1Mw2XQ==
        "]], Line3DBox[CompressedData["
1:eJwl0U0rhFEYBuBnaj6EGYzFZGExyVaSiVK29vMHlEbJgp9hbC2mxkfsrKxk
S5kSSpSMkkkspJEsJhs2LlncXfc57+m8b89bXFgtryQiYlHOsxEjyYjJXERJ
GvoEjznKKhNcZ5a77GadaW6wJu1UxIt1i002ecs7PvCJr+ww3ReRSUf8WH9L
Si/YyzMnvXqPbDq7IxfOHLHTH7HXFbEmj3pLqvob6yzJlr4tU/o+x1jjOA84
xxPO84wVXnKZ0xlzkLZ3z/CDs/xkx3cd8ovPLNi/4hBveC3D+qC78hyQhr1T
yekVyXhWNqt7M5/6m/nf3PR3WdKLyf//8QvUPTnO
        "]], 
       Line3DBox[{1062, 1064, 3532, 1069, 1067, 1066, 1199, 1465, 1464, 1463, 
        1471, 3787, 1466, 1467, 1469, 2219, 4351, 2223, 2222, 2220, 2221, 
        2134, 1874, 1873, 1866, 1867, 1868, 4097, 1869, 1865, 1062}], 
       Line3DBox[{3533, 1072, 1083, 1113, 3545, 3546, 1111, 1121, 3611, 1151, 
        3575, 1149, 3573, 1143, 3572, 1141, 1139, 1181, 1571, 1570, 3879, 
        1563, 3870, 1561, 3874, 1409, 3762, 1410, 1446, 3780, 3779, 1449, 
        1454, 1411, 3763, 1413, 4346, 2187, 2185, 2186, 4324, 4325, 2203, 
        2228, 4364, 2159, 4302, 2160, 4306, 2166, 4308, 2167, 2168, 1749, 
        1747, 1751, 4005, 1761, 4006, 1763, 4008, 1766, 4099, 1795, 1792, 
        4025, 4024, 1791, 1899, 1900, 4120, 1070, 3533}], 
       Line3DBox[CompressedData["
1:eJwl0L+LgXEAx/EP9+AWv3IDFonBJqu/4G6wGHSj7EhdSkkGmc4/cF0Gix+L
xYTV6Ki7pAwk3B+gdJeStwzvXp/vd3iepyeYySdzJkkJ+rJLMUOK05qdwhW+
4gbTWKU/9j9V2CcsY5GO7DdsUtgqRZxSAL0UYPsxjCF6YJvJw25bpIlD6uAT
5z7WaMBdHc8u6f1RatAv+wMP+Ilmt/SMLzTjbk4Fdpam7Bx+YwkXvO+HWrxj
iVtqs3fYwy7tb99lk0ZsEw7xwt0YDc5Z8vG8qHH/X1c1yS2G
        "]], 
       Line3DBox[CompressedData["
1:eJwl0b8rxHEcx/G3wik5V3Y/JpGShVMkZSETGykpRlJW+TOInF8bKykGlFJK
OQYGEwPy+0eRnDxkePR8fb5d9/3efauGxnpG8yJinHR+RDP3JREP9NkXOqA7
NCYjmkiz5bxOhV3Jpr1M0i5l0S7WOU3orI4WRhwVRBxy/Mf1rGb1VN/0lQ/7
nRv7mif7nh87xzdfzjlSpe7ne5Nawqpra2TY8bmlv+9KRawUeT4mOXM+Z8q+
1V5NM29nWKDWuZppe4YGu4tde49B+0D7dFv7dZiOREQ7Ldx5nlZ91DZ90Wfq
7Bqu7Evq7XJO7ROyVDmXsW9/+n0bus6HPeH6CEXu2+1/zXpHnfn/7+8XX8dG
Ng==
        "]], 
       Line3DBox[{1084, 1086, 3535, 1088, 4118, 1897, 1786, 1788, 4092, 4093, 
        1884, 1881, 4090, 1767, 1759, 4003, 1753, 1757, 2171, 4309, 2164, 
        2162, 4356, 2232, 2235, 4361, 4360, 2226, 2194, 2192, 4348, 1418, 
        3765, 1415, 1444, 1425, 3769, 3770, 1405, 1407, 3772, 1428, 1565, 
        3877, 1568, 1146, 1129, 3567, 1131, 1153, 3608, 1194, 1192, 3606, 
        3605, 1108, 1084}], 
       Line3DBox[{1087, 1085, 3544, 1109, 3607, 1193, 3610, 1195, 1154, 3578, 
        1132, 3568, 1130, 1147, 1569, 3878, 1566, 3873, 1429, 1408, 3761, 
        1406, 3771, 1426, 3778, 1445, 1416, 3766, 1419, 4349, 2193, 2195, 
        4353, 2227, 4362, 2236, 4363, 2233, 2163, 4305, 2165, 4310, 2172, 
        1758, 1754, 4004, 1760, 4011, 1768, 1882, 4098, 1885, 4094, 1789, 
        4023, 1787, 1898, 4119, 1089, 3536, 1087}], 
       Line3DBox[{1092, 1093, 1226, 1227, 1370, 1236, 3648, 1235, 1234, 1382, 
        3724, 1380, 1246, 3650, 1242, 1243, 1230, 1231, 3654, 1249, 1248, 
        1247, 2086, 2082, 4235, 2081, 2078, 4231, 2075, 4229, 2074, 2040, 
        2041, 4211, 2044, 2083, 1964, 1961, 2286, 2287, 2285, 4399, 2282, 
        2294, 2293, 4406, 2280, 4395, 2279, 2380, 2281, 2273, 4394, 2274, 
        1619, 1618, 3907, 1649, 1636, 3901, 1573, 1574, 3882, 1575, 1582, 
        1645, 3909, 1587, 1589, 1591, 1650, 1710, 1092}], 
       Line3DBox[CompressedData["
1:eJwl0b8rxHEcx/G38js/TtnFgEjJxiSRIotsfhQDG5NV/gAZbCY/R4PFpUgi
05XhOoli8aMoEk6k8LgMzx6vPnd9f9zVTswMTudFxKz68iN6dV8eMcVnDvOK
Y2yqiDhkOzu0Z9dxh7XcZT03mGCV1uwyLnJB3ZURM4URpwURKWV8ds50LjvD
LN/1aT8yywe+8IZPDNf5tb/tZ/6wylnCtStZyiJuOV/Roe+s566diNgs9jy6
tud4wXk+cohJtnOVa2q2l9jIZbZxm/084rHG7RHt26NMcZI9RRFdynqWBp6z
np16s1/VYl+zibds5R1reMaM6uxLVvOEX94vyQ8e5N7X+ZRK3HfA75wu//8/
/wBa+keu
        "]], Line3DBox[CompressedData["
1:eJwl0c0rpWEcx+Gf13OQ8VL2hIZoSnYslZRpFkpRGmUxrLC1ZDnSLPgDFJYW
LLyFmVOyUhZKhGHBUBiUDmqKS7O4+n7uu9M5p+ep6BvqGMyIiBHasyPauCyM
uOKb7uG37rV1HyLqSelmu24rbRVLepWPuoZaZp1L7Xc7TqbOYkIP50bs5kTs
cMCz+ycy3Adp/eL+1t5wTdr5gQt9zl/97/1O33PHq3NpUUSJ7yggTyeZdz9N
ymdmbLo4Yi4Z8YNTfcaoHuNad9plu8IqTc71TOopanUjC3qRz3rLdtk12203
7CZfdT+tiYgWajj0nw6o1vu2yj7aT/bMnlKnG7jUfyjXlZzoY44oc962CZvL
L/2TAj1Avt//4nnvFf5/v2+Wjkf4
        "]], 
       Line3DBox[{1220, 1222, 3647, 1232, 1316, 3691, 1314, 1327, 1745, 3999, 
        1742, 1643, 3905, 1641, 1639, 3903, 3902, 1637, 1630, 1616, 3892, 
        1620, 4467, 2369, 2359, 2277, 4396, 4397, 2275, 2291, 4407, 2260, 
        2262, 4439, 2334, 1962, 1923, 4123, 1925, 1935, 4230, 2076, 2079, 
        4233, 4232, 2062, 2064, 2084, 4240, 1267, 3660, 1269, 1302, 1244, 
        3651, 3652, 1220}], 
       Line3DBox[{3644, 1221, 3653, 1245, 3674, 1303, 1270, 3661, 1268, 4241, 
        2085, 2065, 4219, 2063, 4234, 2080, 4239, 2077, 1936, 4131, 1926, 
        4124, 1924, 1963, 2335, 4440, 2263, 4383, 2261, 2292, 4405, 2276, 
        4398, 2278, 4458, 2360, 2370, 4468, 1621, 3893, 1617, 1631, 3984, 
        1638, 3904, 1640, 3906, 1642, 1644, 3993, 1743, 4000, 1746, 1328, 
        1315, 3692, 1317, 3701, 1233, 1223, 3644}], 
       Line3DBox[{3645, 1225, 1237, 3672, 3671, 1301, 1271, 1262, 3657, 1260, 
        4236, 2055, 2054, 2060, 4223, 4224, 1949, 1948, 4238, 1930, 4126, 
        1928, 4133, 1927, 4125, 1919, 1915, 1913, 2332, 2331, 4438, 2329, 
        4432, 2265, 4384, 2264, 4408, 2295, 2356, 4452, 4451, 2351, 2350, 
        2371, 4469, 1624, 3894, 1622, 1614, 1615, 3979, 3980, 1730, 1635, 
        3900, 1634, 3922, 1682, 3991, 1741, 4001, 1738, 1739, 1325, 1322, 
        1320, 3693, 1321, 3695, 1330, 3697, 1224, 3645}], 
       Line3DBox[{3646, 1229, 1257, 1258, 3723, 1381, 3725, 1368, 1369, 1379, 
        1588, 1584, 3883, 1576, 3881, 1577, 1655, 1653, 3911, 1654, 4474, 
        2383, 2389, 2381, 4473, 2378, 4472, 2283, 2284, 2045, 2043, 2042, 
        4210, 2039, 4209, 2033, 2032, 2038, 4214, 1228, 3646}], 
       Line3DBox[CompressedData["
1:eJwl0L8rhHEAx/GPOhyDHyVJiceIlK5LRmVSFnelK4MUizqiDLqBUTo/Iill
9H/I6GbK/yCr0UuGd6/P86Onvk+xvb/e7EqypuWB5L2UNDjSnWzyx/W3Vu0v
toeScjnpV8se5RmfepMZPvJCk/aUzu1LFfYpx9niiSb6kvqwe6xxjJ++N20X
6thv2rWrnu2wwj0ucUXHdqMnWRxMNrilG/uFbb7yis+8U82u69Z+4PXf+7q3
O5x37lk1nXeOCzqwKzzioar2R+n/f/0CtoAk/w==
        "]], 
       Line3DBox[CompressedData["
1:eJwl0b8rxHEcx/G3H4cj58iPmXSWkx8JGZVJyc+Fwa/Rr4VMd3IzirtCSvkf
xGiRMoiysPgbsNk8ZHj0fH0+d327vte+sjW9WRYRq7xVRryzkIqoT0TUMmvP
8O3+k3H7S3/YTUckanyXJHXk3OW5qo44pUjG+VhH9FYXdYkP+4BDOpz3tUDn
3zM0xyvlyYgK5hojWnVCW7SNJtJMu5vi2W9o1ict6IzPJtmz8/TbWbpZd56v
ihhuiOjRbrIsM0av+z5G7TuO7Bvd1h2u7RO91wdK9qNe6oue/T3bO8zQxbZ3
N6TnuqFrXNgDOkjJLqb+/4dfSRovPA==
        "]], 
       Line3DBox[{3655, 1251, 1255, 1253, 2049, 2048, 4212, 2046, 2047, 2036, 
        2037, 2375, 2374, 2373, 4483, 2382, 1656, 1657, 3912, 1658, 1659, 
        1590, 1586, 1372, 1371, 1375, 1252, 1250, 3655}], 
       Line3DBox[{3656, 1254, 4213, 2034, 2035, 2031, 4208, 2030, 2029, 2377, 
        4471, 2376, 2379, 2390, 4484, 1652, 3910, 1651, 1578, 1579, 3884, 
        1585, 1373, 1374, 3726, 1383, 1259, 1256, 3656}], 
       Line3DBox[CompressedData["
1:eJwl0L8rxHEcx/E3fR2S48iPkQwGJiY/ypVSDHRyFlFuMHHKcJQFZbDiW7qU
mcUkRotsMiglJf+GUh6X4dnj9fnW9/vt++0vbS+W6yJiVfPZiJ8kYq89or4p
4rYx4kpDzsO6sAd5zlNN2JN6sNf5xRI/ucYPbvCb73pTa3NERvlcRMIFdnKO
Ob56b4/drS69OC+5vm8XeMgDDdh9GteW80omYqwtYpYzymvEeVTT9gkfea+K
vas7+4xPrPKZKY94rKKd1p7b4DtV8X+muKyqXWbKTV5yhze8Vq+dVcFuqd3D
ojrs0G/y/7//AOdpLGU=
        "]], Line3DBox[CompressedData["
1:eJwl0L8rxHEcx/G33DlKdy4GxiuDnYnElbr8KLmByOJHnemODFx3mxjsTkJJ
NoZLGQwyIrNSsvg3lDxkePZ4Dd++nz6f3GqlWG6JiBXNpiO+ExHVrojW9ohm
KmLQHtKFfaIB+4hjvOco7zjHV65xXZ/2h0r2F8t855vSHRGFbESKeSbZoxl7
Wo/OflCf3asXO8sn1ln0bb+W7EXl7BGV7eW2iOFMxBQLqtl15e0JHdpNbvGW
u6zq0r7SqX2mZ3tPk/YB59n4+3fSnbXjrca5zwVWdGw3tGnXdGNfa9s+Z4ZF
drJbG3ZJLfZP4v/9fwEDIC/y
        "]], Line3DBox[CompressedData["
1:eJwl0UsrRHEcx+HfaDAWzGBnN8rCC2BDbqvJUJqNhctCjWuZXBbIWEi8A6Sw
kLKRhpIkWUrWyk7xMhSPLD4938Xp/Dv/k50qFRYTEVHUSEPEdzJiIxORTEVU
aiM67E5d20dqt/fZx37d2z28ZYGvLPKDC/ziLD9Z4jvflK6LyDVGpDjABHsZ
HOaT8+v5yBa+sJlNerbL7PRsm8btMbXa3SrZEzURXemIPHMq21u6s7f5wIqW
7RXd2Bs84yTPecwrznCHg9zjKA/+3l/t27Xm3vq5yyGuM89DLvGCm7zkKk95
oozdqGk7y3nOqcr+Sf7/j18q4zIg
        "]], Line3DBox[CompressedData["
1:eJwl0c0r5AEcx/GvxJo9eDzswTqIC6W4mS2lHYqsMJTDIOxhHWZm10HJcw5q
c3BWW4s8lPIPOCHKRXFWboo9uUku+5LDq8/7O4ff9JupnfyZzhdExDSFRRHF
PJdHfCqJWLVVtpKjDxHN7hYOdJPdtRcM6iGu9LC9thk7wqU+o0N3cqKz9tHm
7IO95x8fExEJuisiXn1n0r7YDpviTt9Sr+s416d81tXc6Gb7ZH/YRs8as6M0
6Hba+OVuK/YOZRFfbCtJlt0rHOs1e2gPyOocef64N8noEf7qdXr0N37rfjvA
hl54ey5dftcUX+llvjRijj69ZBdJ6yn29R6zeoYdvc0W4+4avutqO/H2GYmi
9//vPyGhN+k=
        "]], Line3DBox[CompressedData["
1:eJwl0T0ohHEAx/G/8po6lIHiykBKCYuibhCnKycRWa7zNtwtjoFS5G24ktiV
UohSFpNkQJRFMSubxWS7lPIpw7fPb3h6/j3/p2kmNzpfFEJYUnFJCGUqVIdQ
Vx7CNmt5VRZCt33JLp6znadM8InjnNCLPclXpvjMJB8Y56Du7Fv12TfM8pNf
qqwI4deZvTUh9Khg/yhuD+jDbuE7m/nICO8ZZaPe7E5+M8M270yzlVPsYEyL
dqzUt1Q5j0Patq+5yRvmecFZnjPHBR3akzxgikdMc5dJDmvH3lPGzmrN3lDC
Hfcrrq2IZ7nKEW5wXWP2PrM84wovucwTHmvazjPKOTZwhvVMRf7/5x+A9DuC

        "]], Line3DBox[CompressedData["
1:eJwl0T8o5gEcx/GvwaEuD4OBxVkOk/wZKH8GiRwedzEwcJ5QHkVZxKDkUQ+l
sF4prq4UMdzoGOiuLOrMymYx2ZTwkuHV5/2tp+fX73kqUrPfZnIiYoHc3Ih8
HosiSvMjMrbE/s6LaNRN7Omf1Ohfttt+oYd/7iuG9DD/9SV9Okk/F+4zuvSp
bbcnNm3v7D0fCyKePbelOKKZJ91qX+wt1bqKSm7cfynSCc71NQ26njoe3FNv
n/e9n0npMWp1G3O67YN3Snie7SWjV/mjT8nqAztuJ5hk373DkB7mh97lux4j
xYY7abP2kLSeZkkv0+337qCTTGHECoP6K8t6wG7bLTZJuxc51kfM6xTreo0s
5e4J+8mWMapHCt//31cQpj2B
        "]]}, 
      {RGBColor[1, 0.5, 0], 
       Line3DBox[{2430, 2415, 3070, 3539, 3072, 4106, 3345, 2749, 2750}], 
       Line3DBox[{2432, 2429, 3560, 3558, 3066, 3068, 3537, 2416, 4104, 3343, 
        3311, 4030, 4032, 2746, 2747}], 
       Line3DBox[{2446, 3091, 3602, 3601, 3599, 2453, 3597, 3090, 3584, 3582, 
        3088, 3580, 2444, 3577, 3575, 2442, 2458, 3610, 3095, 3606, 3604, 
        2398, 2392, 3041, 3529, 2396, 4086, 3334, 2781, 2784, 4091, 4093, 
        3338, 4098, 2791, 3296, 4008, 4010, 2733, 4014, 3299, 4016, 4018, 
        2737, 4079, 2776, 4081, 4083, 3327, 4054, 2758}], 
       Line3DBox[{2447, 3586, 3093, 3596, 3595, 2452, 3594, 3593, 3084, 3570, 
        3569, 2438, 2440, 3574, 3573, 2441, 3578, 3087, 3608, 2454, 3603, 
        2399, 3531, 3042, 2391, 3040, 3530, 3051, 4087, 3335, 2779, 2780, 
        4116, 2782, 4089, 3337, 4090, 3297, 4011, 2732, 4006, 4007, 3295, 
        2736, 4012, 4013, 3298, 4076, 4077, 2775, 4078, 3328, 4055, 4056, 
        2759}], Line3DBox[{2466, 3619, 3099, 3642, 3639, 2476, 3636, 3049, 
        3527, 3045, 3556, 3553, 2425, 2408, 2404, 3534, 3052, 4121, 2796, 
        2743, 2744, 4108, 4111, 3349, 4114, 3323, 4047, 2755, 4050, 4053, 
        3325, 4070, 2773}], 
       Line3DBox[{2467, 2464, 3620, 3618, 3098, 3640, 2477, 3637, 3635, 3048, 
        3526, 3044, 3554, 2426, 3551, 3061, 3054, 3533, 2402, 4120, 3347, 
        3310, 4028, 2745, 4109, 3348, 4113, 3322, 4046, 4048, 2756, 4051, 
        3324, 4069, 4071, 2766, 2767}], 
       Line3DBox[{2468, 3623, 3097, 3617, 3615, 2461, 3102, 3634, 3632, 3630, 
        3043, 3525, 2395, 2420, 3547, 3545, 2421, 2411, 3064, 3536, 3065, 
        4119, 2794, 2795, 3306, 4024, 4026, 3308, 2742, 4107, 3321, 4041, 
        4043, 4045, 3320, 2771, 4066, 4068, 3331, 4063, 2768}], 
       Line3DBox[{2471, 2465, 3100, 3643, 3641, 3638, 3103, 3079, 2424, 3047, 
        3528, 3046, 3557, 3555, 3082, 2405, 2406, 3540, 2414, 2403, 3053, 
        2801, 2793, 4100, 2792, 2799, 2797, 4110, 4112, 3350, 4115, 2798, 
        2757, 4049, 4052, 3326, 4061, 2761, 2762}], 
       Line3DBox[{2473, 2422, 3550, 3078, 3566, 3564, 3060, 2407, 3059, 3543, 
        3075, 4103, 3342, 2800, 3302, 4020, 4022, 3304, 4038, 3318, 2763}], 
       Line3DBox[{2515, 3678, 3134, 3137, 4344, 3402, 4227, 3400, 3371, 4152, 
        2831}], Line3DBox[{2521, 3144, 3679, 3677, 2504, 3136, 4343, 2877, 
        4226, 3399, 2829, 4151, 4153, 3363, 2822}], 
       Line3DBox[{2535, 3716, 3714, 2531, 3707, 2530, 2528, 3704, 3703, 3702, 
        2527, 3700, 2523, 3694, 3151, 3693, 2522, 3692, 3691, 2485, 3648, 
        2486, 2537, 3725, 2542, 3726, 2492, 2493, 2491, 3655, 2490, 4212, 
        2868, 2870, 2860, 4208, 2861, 4210, 2866, 4211, 2867, 2802, 4123, 
        4124, 2803, 4125, 3351, 4122, 3352, 4132, 2811, 3381, 4198, 3385, 
        4206, 4207, 2859, 4205, 3386, 4201, 4202, 2836, 2839}], 
       Line3DBox[{2536, 3156, 3713, 3712, 3710, 2529, 3705, 3154, 3735, 3733, 
        3162, 3739, 2525, 3699, 3697, 2483, 2480, 3644, 3104, 3652, 3650, 
        2489, 2494, 3107, 3646, 3106, 4214, 3389, 2863, 2865, 4231, 4233, 
        3405, 4239, 2882, 2804, 4126, 4128, 2807, 4192, 3383, 4194, 4196, 
        3384, 4203, 2840, 4165, 4167, 3374, 4168, 2842}], 
       Line3DBox[{2541, 3721, 3719, 3147, 3683, 2518, 2520, 3690, 3687, 3132, 
        3129, 3662, 3126, 4216, 3391, 3368, 4147, 4150, 2828, 2824, 4141, 
        3364, 4169, 4171, 2847}], 
       Line3DBox[{2545, 3730, 3157, 3711, 3709, 2533, 2551, 3736, 3734, 2550, 
        3740, 3163, 2547, 3732, 3153, 3698, 3105, 3645, 2479, 2478, 3653, 
        3651, 3113, 2488, 3654, 3108, 2484, 2869, 4235, 3406, 3404, 4232, 
        4234, 2880, 2881, 4238, 2818, 3359, 2805, 4127, 2806, 4191, 4193, 
        2856, 4195, 4197, 2857, 2841, 4164, 4166, 3375, 4176, 2852}], 
       Line3DBox[{2549, 2548, 3760, 3758, 3164, 3746, 2553, 3743, 3741, 2507, 
        3665, 3138, 3668, 2509, 3676, 2501, 3118, 3657, 3116, 4236, 3393, 
        3395, 4220, 4222, 2821, 2815, 4135, 3355, 4159, 4161, 2835, 3379, 
        4183, 4184, 4186, 2848, 2849}], 
       Line3DBox[{2554, 2538, 3722, 3159, 3747, 3744, 2510, 2511, 2519, 3686, 
        3150, 3688, 3141, 3669, 3120, 2500, 2502, 2499, 3659, 2498, 2497, 
        2872, 2871, 4215, 3390, 2875, 2819, 4139, 3362, 4148, 3370, 2816, 
        4137, 3358, 2825, 2814, 2813, 4179, 4181, 3376, 4172, 2843, 2844}], 
       Line3DBox[{2558, 3759, 3165, 3748, 3745, 2552, 3742, 3140, 3666, 3139, 
        3670, 3667, 2508, 3125, 3119, 3658, 3117, 4237, 3394, 3396, 4221, 
        2820, 4140, 3357, 4136, 3356, 4160, 2834, 4180, 4182, 3380, 4185, 
        2855}], Line3DBox[{2588, 2587, 3930, 3928, 3275, 3950, 2709, 3955, 
        3953, 2710, 3977, 3241, 3889, 2659, 3985, 3261, 3255, 3894, 2665, 
        4469, 3518, 3510, 4459, 3029, 4479, 3522, 4475, 3467, 4369, 4371, 
        2972, 4380, 3465, 4366, 4368, 2969, 2979}], 
       Line3DBox[{2607, 3812, 3214, 3840, 3837, 2629, 3834, 3224, 3862, 3232, 
        3867, 3864, 2638, 3197, 3170, 3764, 3172, 4347, 3439, 2940, 2947, 
        4332, 4335, 3447, 4323, 3414, 4251, 2889, 4254, 4257, 3410, 4243, 
        2884}], Line3DBox[{2614, 3821, 3218, 3828, 3826, 2600, 2601, 2611, 
        2598, 3802, 3800, 2599, 3805, 3803, 2602, 3875, 3168, 3762, 2559, 
        2561, 2577, 2568, 3771, 3769, 3178, 2566, 2565, 3177, 3767, 2567, 
        2594, 2960, 4352, 3459, 2959, 4360, 4362, 2963, 2962, 2961, 3460, 
        4364, 3427, 4303, 2898, 2893, 4259, 3417, 4271, 3420, 4267, 4269, 
        2895, 2894, 4288, 4290, 4292, 2903, 2902}], 
       Line3DBox[{2615, 2606, 3813, 3811, 3213, 3838, 2630, 3835, 3833, 3223, 
        3861, 3231, 3865, 2639, 3860, 2581, 3169, 3763, 3171, 4346, 3438, 
        3440, 4327, 2948, 4333, 3446, 4322, 2888, 4250, 4252, 2890, 4255, 
        3409, 4242, 4244, 2883, 2897}], 
       Line3DBox[{2620, 3824, 3822, 3221, 3856, 2635, 3227, 3852, 3850, 3180, 
        3183, 3783, 3198, 4337, 3451, 3434, 4314, 4317, 2938, 2949, 4329, 
        3423, 4278, 4280, 2915}], 
       Line3DBox[{2622, 2617, 3825, 3219, 3839, 3836, 2616, 3220, 2636, 3230, 
        3863, 2640, 3868, 3866, 3201, 2574, 3182, 3782, 2583, 2563, 2564, 
        2955, 2953, 4336, 3450, 2956, 3449, 4334, 3433, 4315, 3436, 4328, 
        2950, 2951, 2891, 4253, 4256, 3415, 4281, 2911, 2912}], 
       Line3DBox[{2624, 2623, 3830, 3829, 3827, 2597, 3795, 3209, 3801, 3799, 
        3212, 3804, 2603, 3876, 3874, 2562, 2560, 3761, 3167, 3770, 3768, 
        2569, 2591, 2593, 3790, 3206, 4357, 3457, 2907, 2908, 4359, 4361, 
        3462, 4363, 2964, 2929, 4302, 4304, 2899, 4270, 3419, 4266, 4268, 
        3421, 4287, 2924, 4289, 4291, 2917, 4282, 2918}], 
       Line3DBox[{2628, 3832, 3210, 3796, 3207, 3792, 2595, 3810, 3809, 3808, 
        2605, 3872, 2642, 3880, 3234, 3879, 2643, 3878, 3877, 2571, 3773, 
        2572, 3204, 3788, 2590, 3791, 2584, 2585, 2586, 3787, 2589, 3458, 
        4351, 2958, 2904, 4275, 2905, 4276, 2906, 2916, 4355, 2933, 4309, 
        4310, 2932, 2931, 3429, 4308, 3430, 4307, 2927, 4300, 2926, 4296, 
        4297, 4298, 2920, 4283, 2919, 4299, 3426, 4286, 2923}], 
       Line3DBox[{2632, 3848, 3195, 3186, 3776, 3189, 4341, 3454, 3441, 4319, 
        2943}], Line3DBox[{2634, 3226, 3849, 3847, 2580, 3185, 3775, 3188, 
        4340, 3453, 2941, 4318, 4320, 3432, 2937}], 
       Line3DBox[{2690, 3929, 3276, 3952, 3949, 2708, 3954, 3286, 3978, 3242, 
        3891, 3888, 2658, 3262, 2664, 3895, 3256, 4470, 3033, 3027, 3028, 
        4478, 4481, 3523, 4476, 3468, 4370, 2971, 4379, 4382, 3466, 4367, 
        2970}], Line3DBox[{2694, 2693, 3942, 3282, 3951, 3948, 2707, 2719, 
        2715, 3970, 3289, 3964, 3240, 3890, 2657, 3243, 2660, 3896, 2656, 
        2655, 3030, 4460, 3031, 3496, 3012, 4480, 3499, 4442, 3013, 3026, 
        4477, 3508, 3025, 3484, 4400, 3472, 4381, 3473, 4404, 2987, 2988}], 
       Line3DBox[{2695, 3936, 3278, 3933, 3931, 2691, 3280, 3962, 3960, 3958, 
        3288, 3982, 2722, 2720, 3981, 3979, 3251, 2662, 2663, 3893, 3254, 
        4468, 3517, 3017, 3018, 4451, 4453, 3507, 3023, 4482, 3470, 4373, 
        4376, 4378, 2965, 2967, 4387, 4389, 3477, 4391, 2980}], 
       Line3DBox[{2700, 3285, 3976, 2713, 3969, 3967, 3235, 2652, 3248, 3899, 
        3259, 4463, 3513, 3034, 3501, 4445, 4447, 3503, 4457, 2989, 2990}], 
       Line3DBox[{2703, 2683, 3919, 3918, 3916, 2684, 3943, 2704, 3996, 3994, 
        3293, 3986, 2687, 3924, 3922, 3263, 2668, 3906, 3265, 3903, 3901, 
        2645, 2644, 2678, 3911, 2679, 4474, 3521, 3519, 3482, 4395, 4397, 
        3480, 4405, 2994, 3475, 4384, 4386, 2978, 4434, 3493, 4426, 4428, 
        3489, 4415, 3003, 4420, 4422, 3488, 4414, 3002}], 
       Line3DBox[{2705, 3946, 3944, 3270, 3920, 2682, 3914, 3913, 3268, 3989, 
        3988, 2686, 3273, 3992, 3991, 2725, 3993, 3266, 3905, 2670, 2647, 
        3882, 3881, 2646, 2680, 2676, 3910, 2677, 4484, 3524, 3039, 3520, 
        4473, 2995, 4406, 3487, 4407, 3474, 4383, 2976, 4432, 3008, 4435, 
        3494, 4430, 4431, 3491, 4417, 4418, 2998, 4409, 2997, 4410, 4412, 
        3000}], Line3DBox[{2716, 3291, 3973, 3971, 3249, 3236, 3885, 2654, 
        4464, 3514, 3504, 4448, 4450, 3015, 3016}], 
       Line3DBox[{2717, 2661, 2653, 3887, 3239, 4466, 3032, 3019, 3020}], 
       Line3DBox[{2751, 4031, 3312, 3344, 4105, 3071, 3538, 3069, 3067, 3559, 
        2431}], Line3DBox[{2760, 4057, 3329, 4085, 3333, 4075, 2774, 4074, 
        4073, 4072, 2748, 4029, 2729, 4002, 2728, 4005, 2731, 4004, 4003, 
        2730, 4096, 2786, 3336, 4088, 2778, 4117, 2787, 2788, 2789, 4097, 
        2393, 2394, 3532, 2400, 2401, 3612, 2459, 3613, 2460, 2456, 3609, 
        2434, 3567, 3568, 2435, 3572, 3085, 3571, 2439, 3592, 2449, 3588, 
        3589, 3590, 2450, 3591, 2451, 3908, 3092, 3587, 2448}], 
       Line3DBox[{2765, 4060, 4058, 3316, 4036, 2752, 3315, 4035, 4033, 3313, 
        3340, 4101, 3073, 3541, 3057, 3055, 3561, 3563, 3083, 2423, 3548, 
        3080, 3626, 3628, 2475}], 
       Line3DBox[{2770, 3332, 4084, 4082, 4080, 2739, 2738, 4019, 4017, 3300, 
        4015, 3301, 4040, 2754, 2734, 4009, 2735, 4099, 2790, 3339, 4094, 
        4092, 2783, 2785, 4095, 2777, 3050, 2397, 3614, 2413, 2410, 2409, 
        2455, 3605, 3607, 2418, 2417, 2428, 2457, 3611, 3086, 3576, 2443, 
        3579, 3581, 2445, 3583, 3585, 3089, 2463, 2437, 2436, 3598, 3600, 
        3094, 3625, 2470}], 
       Line3DBox[{2830, 3372, 3401, 4228, 3403, 4345, 2505, 3135, 2514}], 
       Line3DBox[{2838, 4163, 4162, 2837, 4204, 2858, 4200, 4199, 3382, 4190, 
        2809, 4130, 4129, 2808, 4133, 2810, 4131, 3353, 4230, 2879, 4229, 
        2864, 4209, 3387, 2862, 3388, 4213, 3114, 3656, 3115, 2496, 2495, 
        3723, 3724, 2482, 2481, 3647, 3109, 3701, 2524, 3695, 3696, 3152, 
        2526, 3737, 3738, 3158, 3717, 3718, 2532, 3706, 3708, 3155, 3715, 
        2534}], Line3DBox[{2845, 2823, 4143, 3367, 4146, 4144, 2826, 2878, 
        2873, 4218, 3128, 3664, 3131, 2503, 2506, 3680, 3682, 3146, 3685, 
        3149, 2539}], 
       Line3DBox[{2850, 4174, 3378, 4189, 4187, 2853, 2832, 4158, 4157, 4155, 
        3354, 4134, 2812, 3361, 4225, 4223, 3397, 2874, 3408, 4241, 3122, 
        3661, 3124, 2517, 3142, 3671, 3673, 2487, 3112, 3675, 2513, 3753, 
        3755, 3757, 2557, 2555, 3749, 3751, 3161, 3728, 2543}], 
       Line3DBox[{2900, 4273, 3413, 4249, 4247, 2886, 3411, 4263, 4262, 4260, 
        3416, 4321, 2944, 2945, 4326, 4324, 3437, 2939, 3444, 4349, 3176, 
        3766, 3174, 2582, 3194, 3779, 3781, 3193, 2637, 3869, 3225, 3842, 
        3844, 3846, 2608, 2609, 3815, 3817, 3217, 3819, 2612}], 
       Line3DBox[{2913, 3425, 4331, 2935, 4313, 4311, 2934, 2954, 2952, 4339, 
        3200, 3785, 2576, 2575, 2579, 3853, 3855, 3229, 3858, 2621, 2618}], 
       Line3DBox[{2922, 4285, 4284, 2921, 4295, 2925, 4294, 4293, 3418, 4265, 
        4264, 2896, 4301, 2928, 4306, 2930, 4305, 3428, 4356, 3461, 4358, 
        2910, 4277, 2909, 2957, 3456, 4350, 3203, 3786, 3202, 2592, 3205, 
        3789, 2573, 3774, 2570, 3772, 3179, 3873, 2641, 3870, 3871, 3233, 
        2604, 3806, 3807, 3211, 3797, 3798, 2596, 3793, 3794, 3208, 3831, 
        2627}], Line3DBox[{2942, 3442, 3455, 4342, 3190, 3777, 3187, 3196, 
        2631}], Line3DBox[{2982, 4393, 3478, 4421, 4419, 3004, 3007, 4429, 
        4427, 2966, 3463, 4375, 3471, 4433, 2977, 4385, 2974, 3469, 2996, 
        4408, 2993, 3481, 4398, 4396, 2984, 3479, 4394, 2983, 3267, 2674, 
        3907, 2673, 3264, 3902, 3904, 2669, 2667, 3900, 2666, 3923, 3274, 
        2699, 3957, 3287, 3987, 2723, 3995, 3997, 2726, 2685, 3915, 3917, 
        3269, 3938, 2697}], 
       Line3DBox[{2992, 4403, 4401, 3485, 4455, 3024, 3500, 4444, 4441, 3497, 
        3511, 4461, 3257, 3897, 3246, 3244, 3963, 3966, 2711, 2714, 3974, 
        3283, 3939, 3941, 2702}], 
       Line3DBox[{3001, 4413, 4411, 2999, 3005, 4425, 3006, 4424, 4423, 3492, 
        4416, 3490, 3495, 4437, 3010, 4436, 3009, 4438, 3011, 4440, 4439, 
        2986, 3483, 4399, 2985, 4472, 3038, 4471, 3037, 3035, 3036, 4483, 
        2681, 3912, 2672, 2671, 2650, 3884, 2649, 3883, 2648, 2651, 3909, 
        2675, 3999, 4000, 2727, 4001, 3294, 3990, 2724, 3998, 2689, 3925, 
        3926, 3927, 2688, 3272, 3921, 3271, 3945, 3947, 2706}], 
       Line3DBox[{3021, 4449, 3505, 3515, 4465, 3238, 3886, 3237, 3250, 3972, 
        2718}], 
       Line3DBox[{2469, 3624, 3622, 3096, 3616, 2462, 3621, 3101, 3633, 3631, 
        3629, 2472, 2427, 3552, 3076, 3546, 2419, 3544, 3062, 3063, 3535, 
        2412, 4118, 3346, 3305, 4023, 2741, 4025, 3307, 4027, 3309, 2753, 
        4039, 4042, 4044, 3319, 4065, 2772, 4067, 3330, 4062, 4064, 2769}], 
       Line3DBox[{2474, 3627, 3081, 3549, 3077, 3565, 2433, 3562, 3056, 3058, 
        3542, 3074, 4102, 3341, 3314, 4034, 2740, 4021, 3303, 4037, 3317, 
        4059, 2764}], 
       Line3DBox[{2540, 3720, 3148, 3684, 3145, 3681, 2516, 3689, 3133, 3130, 
        3663, 3127, 4217, 3392, 3369, 4149, 2827, 4145, 3366, 4142, 3365, 
        4170, 2846}], 
       Line3DBox[{2544, 3729, 3727, 3160, 3750, 2556, 3752, 3166, 3756, 3754, 
        2546, 3731, 3111, 3649, 3110, 3672, 2512, 3674, 3143, 3123, 3660, 
        3121, 4240, 3407, 3398, 4219, 2876, 4224, 3360, 4138, 2817, 2833, 
        4154, 4156, 3373, 4177, 4178, 2854, 4188, 3377, 4173, 4175, 2851}], 
       Line3DBox[{2613, 3820, 3818, 3216, 3816, 2610, 3814, 3215, 3845, 3843, 
        3841, 2626, 2625, 3859, 3192, 3780, 2578, 3778, 3191, 3173, 3765, 
        3175, 4348, 3443, 3445, 4353, 2946, 4325, 3448, 4354, 3422, 2892, 
        4258, 4261, 2885, 4245, 4246, 2887, 4248, 3412, 4272, 4274, 2901}], 
       Line3DBox[{2619, 3823, 3222, 3857, 3228, 3854, 2633, 3851, 3181, 3184, 
        3784, 3199, 4338, 3452, 3435, 4316, 2936, 4312, 3431, 4330, 3424, 
        4279, 2914}], 
       Line3DBox[{2696, 3937, 3935, 3277, 3932, 2692, 3934, 3279, 3961, 3959, 
        3956, 2698, 3281, 3983, 3292, 3980, 2721, 3984, 3260, 3252, 3892, 
        3253, 4467, 3516, 3509, 4458, 3022, 4452, 3506, 4454, 2973, 2975, 
        4372, 4374, 4377, 3464, 4365, 2968, 4388, 3476, 4390, 4392, 2981}], 
       Line3DBox[{2701, 3940, 3284, 3975, 3290, 3968, 2712, 3965, 3245, 3247, 
        3898, 3258, 4462, 3512, 3498, 4443, 3014, 4446, 3502, 4456, 3486, 
        4402, 2991}]}}},
    VertexNormals->CompressedData["
1:eJwUW3c8110UTmSVCmmQskoopJDCRVEphJQysouKzKzQMLMyKlSEiors7JO9
Ze/xm19bUhLCe9+/fHqczj333Oec8xx+BC0c9Kw3btiw4Qnnhg2M+Kvy1SM3
j7GNo6rncTu7SMNwWf/Vyr3RYdQdKp72M34USVT1PN74mQqEh/IrpkwqYlv8
a/owaAwZWksIswf0goLrrK+7PAXNdocybHPrRRauenWXwsbgfJUayy05Cqrr
t3lp2zyM2C1nPu3dPg7yn6smooeHEfcb1Uv8H6joYY/eUcf3o7Bt4f4WTeyf
M5mpI4hsCenfXju53Z2CgpWTSXQvEvpDSev+lWMNsw7iX/ouTEPc9Onz4tRh
pOvCbHCshYpSWMdPSgtPgL4FW+qMnxVEZf3xru6+A0j4if30+g/4LGXtufuJ
FSgn+Gz7s/4DHWtPf8Z02gT5p32bvPjUCkwkM67xa04jcSrJwGDjFfT0r3Hm
94lh1DIi8fn97gnk2cX6IHSACuahLFYrD63A9e+ugMjbU+j7LQGjL2KXkbh5
e8pOXxJ6mzXtY7/SBbaFm48cmKWhhaNFLM5tdKR+P0tN5joJ5h6XsZUakFCK
iYCEtyCBCoJuParIaYGi4VLJtVY6yn2VczVZlkC3BSzrz+cPQ0vGR+0HEWTk
Xa3aG4YIlLN0S1zauw4Q8/HxamUCbXrqQ2lSIpDQGf/Lb6RbgPDhMDvTTUc5
5lpKKicJtMPwS8zF2/2w6tK+zMdORZmxXI2CxgQ6wsxsleFUC/uYOvTcxQkk
ErEcwG1JICfmj9fT7XtggbXNWXucig41/VMTvUmgyiez00aq7XCoTNdPqpmO
SOHj3Kz1dOSh8+ddjfootLLtpylUU5FyxpWHlV+pqHX9ZvSHrbowHy0VeDB2
DG2M+9aq+ZaObDILvEYfkmFjaUrhPw8ykv3+lvPdRRpa/O0xtRpnDBKH3sxJ
Sk+gaiVBz8xSKlo9c3k0bbQb0nWqfI0KaOh79tfg9y10RIz8Xe/osYSjUtea
Gp2m0MuuSxeYnElIqk9hs8T7fvhFaFxrrqKgQ15zBxMCCPRKLnlXnvUQMGt+
H1wqIaM4qUQxw2AC2QzyJX7cOgIdI49Z/djJyN3+6vMHQQRSrrBqGuroBY4C
vpAhPSpSKZiizYURSNe7O55drwu2f+kUdMNx/3Wo3LM3nEBGUTNK2572QM3j
qrEfJVTEhyJMjgYSyDnypeLPun6w9y+9PpBFQT4b/dcLQjEe31V/V6Yf0pVD
ttWQKeh4sr62HPazms7H476zEoiTWxMP2RDoulglWyf+erin3etyqArEcB32
HR3BuOCrmi/mBKoRrv16z00dGj3iRtI3jCEf7+iMX5gXurYjsa+PacCzWiKI
jWkMjRn5bHM7RaD108OHo8J0gMhVDFm5O4ZaBdjFcproSFLtTXBQNBn0V9uE
Sz4Po+M68kge8+1atVlEXzENVmdfnzHt6kbBUkpf5fD7F4iFyd6dp0HsTXra
07kuZKMga/0b8zeVHlys2EaHy7PzHs5y7SiKP3NFsJaOTmgl8YfMjsDQroRx
pu8klMGUtueqLYFeR66rtd8bA/oDBpU7Cwh90ezOeY951W+YNb3r5Rjc0b4u
/F5DFekd/iy38w0deVWzm4RzUKHmy83MIMt+dE9VuMnGiECnktpLfTtIYFia
HX1zbATF6jmnSWP/qRp2n69PUWF/L10m7mYPquI15ZbD+ZSxYPi+gPtC2L+I
jdffmiDWq2J1gS1WYHD9McHlNgXiZs77NHZcRq4H1Pmi7pJQlZZwamDJHdjg
uT0K9xNEOu7uftfRCnZMhPRqN1NhND/a9uaxUXRWnoV7poCKDruUjtUem4Dn
85PTrgsXkcXS1jt8hVRUvWtY4PbmMhiYcWa29CTQY22uzM3eOJ7VLO9Js5Pw
ya7lTkY9gcpKLxSedSdQSu9xr9cbT4KW/NZPOzDupy0XT8F4TcXYX+OvhSDT
sEPX+gmBduXH8RdinvP3uWa7zcjC3D7zoOkiAvHGXcw4hnlY4X6V49xYBYgW
r415XCLQ9nfSOvU+uA/wGLPu4C2Ho4FSbQx3CMQWXxjWjf191JC64fSvDHiD
l7yuY5x+pdmKzx/XyxqPJU9tM3AYxjiyh9LRN6fAH124jkSct7l79xbBTT7W
oYX7BIoqf6y/A/PZWc/RgbO1AdhdGO0jq+jo3iWluTVcR+F+Yl9fVhTB1aKJ
DVL4PkfJe8IQtk/WzO9lWK2HLxc2uId30dGX3E3W53G9vDh+XWptpg30vW8F
WgnSkSmz+qaSBwT64bfCfGNHK/wMa+J5e4+OLB07P2Xj+o2OFTb1V6wF+6Qd
jrcO43+f+vQzyIpAv1mX/eXsuyCxQaik2gb3k3STP7MOBErkEOp4wl4J2+Y2
fnDQwe8i8HqeA+eHfVvu3U7GDliXS6OFjtHQ6zipxQ58rl2MtNp5GRUw23Jc
33eYQNN5ps924f6p8oj/Q2CxLDhJ9l35hPP/iPedoyvOv0nHkyIhuXzwMbSc
uviUQPpL88/34PumpKTW3KiXgbI34Xn0fFyfoqlUNfz9b/EHjvxOlgHThw61
+RgXDvQ57IzxvYUNO9KGCNjn5jl7wUYaNUfxv/9lSQBczfdbHSZAgGvu7q0K
acQm1/TruQUBkoaDk5+tCfBorWraylaJFotUc1duEnB4RmevcnIBHHn4cYDi
SyDz2vr1P9G4b3zeOzr9shZ87Y0fWS/ScXy6pm1RBOJ4lasxP50Drkf8HKQj
CEQzVgwwxLjq3a5AEVtpuNsS3H8sA/PK62AfQwyBNnj0e04ZD4Lb3CM/HwUK
OhZb2seJeRHQIFvG+m8AbmqOX68zoiCLIrk+Z/z+tp93shjY9cLfz1YHD/lQ
US9Dx/bNmIdrbprOCUY9UKTGc4O3jIrOVYQ0rjwj0Lm8keTvtHbwvfPLwWSA
hvZzOloqRBKIwXC54diVTmg6e7daJ5SGZr3DQ1Nx3s55vbAzi+mBC1oBRx5+
pqKWIkT/P/4aknTg1OQgdBmsGV/9R0b+vbo2n3E9NkY89wQeEmimiuo0cpGQ
pVxz/PfHuB/mTBVFz7UB0UA0O7PTEfOmlnsF2M8Lcnfy1kkaLP2ZUl1ZbUfz
25+XpWM/kv7l5Ke6BEz7ce/YzVCJOFqKq+wxztl9fXOkLQ2eeL5uyLjZhRiU
u+kkewLtzP+0jUeEgIci207vPliLelYfuohinK/uxVuDXApUoldJLyv7kfL9
jEtSuC7q9bNrjtMoYJ1jsX7oSD+qFj8WlYrrK8FP9coZAyo8t1pmj2vpRX9P
vpo4g3HTC8btTuVUMPA2KHTy70FK15ZOWuO+UZXQqPfdiQ5IqvGND3sr8rDT
OuaIefuO8ctUtTYN1ixcO0gXu9DeHreeo9hPgYGbk2g4HVifTh9+U9qM+rN+
t0fiujvodis1Wo+A8OuccrPDFchGpy1bDNeLpYCETf8DAi6vGT7/fLsUiRLv
umq8sJ7J37WuZkOAoUaAifaOcvTpzj6bTyEEcp2jPagVpgPHmzf+7uNtqMRH
Oy0Q5+2KZxJfRBcB1ksVAlH3pFFGecd5Wdyf0rkenneoIED8t6hQSKY4annv
9vw15nXVHDLJsiOgSMlRKSC3Ah1+2BJ5CusZ2eGb7u/0KKAWlhRiujaAXBgK
g45he+4+e75vfrifr9l9DLfqRWHv2E5fxO8eIzfXqs1BhiM6jtJk1hE0V/Pr
4wV8Xyevtw5662RoWfv+Mpw2iN5sVT55GseZSIzHONZSQIlyf69dUj86Zhn8
gw3nWSa76567IgUUiKctj64MotgRQ3q8G86nkFN1WjkZeF+5Xd9mNoTUyo/Z
bMR9FdJehdmUEGDCHmZsx3gQjeZTjQpwH37/zUgjHeOR14I+b5Q/iNQz+Rmd
Mc5MZv2gGkTATOSL4hfFX1H4Qth2PvyO85kXDd230OFSftFxiek2dKfD3DUN
15HTUS0htyEa/AmyMpMktaPYjLcCx3F9Gx3/5H8ZqBDUyxlZdqUHzUX2uihh
+6yfm7Tll+jga8f7xuVZLcrQGQl7hHFn8Zp0bzz3B3ndvhIz9ejavd60Mxj3
cy7JL/IgQOHKzlq+xiIkln3aIALzNjP0lj8Zv/tGPbmtzNQyFBtkzrkD1+n9
6/baHNkEmM2NuGzaKIykmKJ9hHFdB/LE6j8KJ0CEdL+zwTgP9c30PN+E+6fS
uwjxeez/U+vsp9N5RajaO7ezGPt/7uzGFFRDh2uF9h5hNQ1I7/bhj3kYr1qI
1t6GebK6KNOkbCWOylTH0tbwuz/Y47z6O4AGyXHVRspXOhHbJZrLI3xulVFH
cFkmFY5s3TbnE9GDaJWNSm/wvWbfZL1PPUSCuNF7p48eICF6+c/rHFhvuFEP
HFIWJMA0cCN7hWMtalEds1TF/BT2kX4rUkmHrWXe/L35LSig8q7JoirOW0+8
ii3zGBQXcT0xfCCH3l4uPcKggHkY8WHwrSoBTw69G7W6W4fstxQdGcf6TZVz
7qdXIx3UpY1dRra2oGEeofiYswTq1C8aW9s4BjPL9ppVZbJo39fNkSGKeF5/
+mk5S8J+9snujqySRrcaWVxjbxCoPShDbXUrCc6ZzofqbSGh4oqwTiVc15t4
EgIu3CXD6qM6GVOWYcSmf+7bCTwXziV7M0/xk+DIH1V77j+jaPmW3othnP9h
yYnR3OMjsHChJ+jvFAmlLf+br8H90I2SUhewZRi2m95fabUjo8wd2npe2I+n
pN4r11kSDNk07H8lNYLMXjYqvsL2v2tVrrnVk4H/V9T4pPQQesTUUcyJ8/9u
pezjRrkhEPtzQIOllox4j0+ft8a4pKLu1O2VUSC2fltAfDj/FjWRJBxPhGWF
vtimITjpsSGO9w8Z3UoQivHF/Ij5/TqP9/ogVLinOL7B+2rCv93+ThinXdSR
/HKQBCKRB+UUhUlIIkYzcvQ2ARZP7ERfnqTAl3aiJUd/EIm8jHu94k6Aw60t
0j6rZBBZuE8rJA+iqTM3uuJ9CMhi/rxxYssoCNmam8jV4XnxxsQwy4oAm6Rz
D7IbSQCFAnX1m0bR+YddXqEYP/zq2MK5HSRoiUneepmThNri3okS/gSwxqS0
8osTYMcl+orTqhYdexwqdRXbe/40Y99+mIBt4LbILVmLxNf1kmrwXP94oM5o
7HYlNEkksPLifeD1+cbVADzfj52h7oHJOtDs2zyrLo/3GYlOYlqJAHv73ifH
QlQgx0RDb3YQ6w0ZqY3Z2L92qJv1qEQLnDXSePe1nY5OH9EZ369MwHi066d+
h1roEpTPyRDFfUFpmIsJ1+077X+vyE7qsIWhyqr/H4FEBeyzaWq4T8WU1vSO
U0Fsjw5PrVUPuiOvoXzQloD8RUl++Zs0cGYd4zKw7kLyBTr/njpiPylnXl5Y
GoBLbSFXJ69R0PY3fR1NngTMmc/+/pfSDy36LzmOV1JQGrvychjuazXZOkxn
bvXCrgW7SgdvKrJ/bfiFM4CAWU6/ZJHgHlDSj7FXK6YiOdVLIiLBBLy6ek85
gWkEuvMzdjZyk9FcY8Xx708IWHP0ZQeFWvhodUggVQzrAPnD7E44b5frTXqG
bncBf2M1cduKhtiVO2bjnAhIuYb2dt/uAf+H3kVNdCq6rP3l0i48VwQabXmQ
tApYqRUfeDOA6yehei8rzs/1ySPBXWHtMNamk/KznI5Ca4xer+J+FCzWxDyS
NQqlBu8ZclKpKM1e59mjz1Q4RJJOOseuC1tU5x/zReA9bo357egHOtBNbLem
eJGhsNWWt8qZjM7vrzlicpUGAf0DDnJ13RB296FCUiPen+sXTrt9owO/Scvt
wqvGwK36+J3QmQkUf8HHnz+FCvwOprk832nAcfqT6++SbmS45YwuI9ChVKjL
8c2fLrh5hv+w4QTWw2lhXLI9dNAqPrqocJUE3PPZYdV6JHTuBkvO8AECxEwC
yIkzNKC9OF1VPtWFkkXjiwu66MA+sLmVsYoOHzf6948/akf7T33cs7+aDnGb
HY91tFjCtwCBdQObKZQqbp1YEkgCQYeonlTbKRhVjnaS2nwZMWSGBJ59RIIU
OVJZE86HxgnBfylvRpGAxvw5+ESFbUarR94oa0DnwEU7x21jyKqk+thbKQJ2
u5lP9mW0QNmGFTtLvMd+vmjSGKNAwCbpHja2AB2QtNDabnlrDN15UuaZ106H
33tNj9W59kPg0V16C5xU9JJFxcAF6xVjx7UljbfDkMT1ckXxLdaB3K17pE4Q
oNvGuHrkcBHk7/Ha4/IQ9/Fr16xSAglwu2j6SlKkHIrswzOlXHH/enJk5r4X
Ad+HPXbFTsnCiwd1lktfCURyl2SXwDwMf6tQ6jddAS4luhMrV/C+FLL75Dbc
T8jHkZv/rnJo9kpT5rUjkO+/kYB6zOdxzj+hS+sKsC1vW2p1DYE2L40Fn8T+
8wd1msaXyuB44Y9SF2zv4SxzcwuOZ/+xyz/Kqpohovti6PkQOmKMSKvKfkrA
n4m67W2crSD9sVi51Z6ONMzv6aWGEHBVouDaMdOTcPOSEpNBLYG0LN+rp+G6
45BwFfnCWgnjLQFd4lp4/i2euGHth+PkUWYxm26DEyMWCTf205HWhTirWV8C
dnpWK0oxFMBi8Xnv/VgPzQ9W6CjiOX3C5P3BtVoZYPFNFjqZR6CRZ5d8foYS
oJokfTauuwhcl+zLdLHueZcjaAIRBIzurCjOLJSFH+zmRaU4b5sf5Mvcwnnr
DMtkfvlWBvpOSQZxYD97zRNs9oURYDBByi2EInhr1qsciv0E5/QfnMB+LIaU
5yWbG6Ax84HvUgUdzSGblXSMpzLYhCit1EPfu52XGTvpSGh/tcQY9mN0nzNJ
OqEAdhbwOongfWP1HV9GF7Y/dNw/wvNFLWySag5eXaCjc1lFJeox+NyTK6MX
xnphVnIpJEybinTlrpYp4Hvt9l56//RKF2z6ePXnwiUakk3z/MKO489XPjl0
23II6+rHG8KKyUg1+qa4FH6X9uj0W9tq+yE51pntwRcKsqboClngvG2jn7n9
Vrofio/bcN8hURBZxjC8F8dz+F2JgtVKO/xYexNW8IOGmo0s3CbvE1DeL8cW
T22HA6abUn730RBvegZ/9TMCrly8Jezzow0YLHQ38rHR0W+ege8SOP7kgPqg
xsudkPjrM/l7CA3JUfirdHAeziR7SRy53gMHusfWe0qoaKf+XVnHaAKi7ne7
zEb1wMFsaqfyJypitT2l2YpxZu2E27NjNFhOCdsh+q8d1S2EajFgPjCMbDl8
Vgf371btxNPrFUjvV8i1Wjwfv48bGzLcIUCmPd+RxFKOXtdYKsjjebdaqjB0
HeOTaU6v9CfLUGNlnq0Xxk3WLr42xH1axmWnlMv7QuTxMGJ6K+a5DbUyvEKQ
DrdQyfZBog0Fql4UKcH+dw4aSelfImCgkaVdYKgCBa3FRHjjeMqlef3+3aPD
Puaz9XMsrag4ofC3JX6Xbv24lsQ6AhpPLwwwXxVHVqwUpWtYD/RmKJ4vKCJA
cJ1nG5/sQXTjbou/HT6Xx/WM8kFcH8yh2qSvf0pRnKi2cq43ztvo2pJMPdZX
ui/j3QvEEUk0eUs1ruvkox1RA8YUeH3qj9jP+QGULaMqr4X/f4EYUzyLLxVi
Zrm1fCx6kU4217wevi8TlEm83EkGStieyfa1YcSqte1nAr7/BtZTIv3VFPj5
0T5R8U0/Siz90/oPx+O3axrVlFLh0Z28oqDHPYgtqY7LEM/Hezwx0TahdNCY
el5xtrgZNZzd/O0urneXLUWZPDiuLCPNNoX6IrRn47TnScw3xd37d7nj+5qO
cQY9ZTiI0p5qqqVj/4qWvm0j+fgeHvyFW5mFkcfS2tR5zNuMUfKaJf6auW3X
5R+i+Wi16v2o/P+6XD5v/0/c/9UhtONTVQOy0hdpuYFxbTlGPx187oXCGLJV
ThFiY7YItsL4Tm1Pnmzs/7D70b8SJCFE6zm4eh/79ZJTMP++SIdRj6RfGyNr
UZ6Dw4a/UXgfbp+M34v7ULqvrdP+2AKUXXZ0/Sfm4ZxUZf8cnj/a6XYFq/P1
qDBOKD7h/3pMCj6km0FA6AvLKeVEATQRzepJw/YCBSBoheupVEzTKZWUg2Y/
pXNqY/+HdnHxsYbRYNESBnp0OlHdet2za9iP5KcVSTktGvTLUk/qXehCSq1G
9+dx/Mdd7s0P6FNh9bLZ7qGmXuQqJrVxDuPmzSW6HIM0sBf7LrM00o7az+pP
l0cSMMZrLuCVQQV0UsSCI7wHeQ/HZ3LjeA70OmcOUijgF3lhj4lEP6oVeDCk
juMLPaqzixPv6Utpu7J0DHqQJ1fDVA6Oc/HTcOj+zXRIvnFtw86pNsQoH0rn
x34WBaxe3eKhwrwsn9363X7EQ1LkKNLF/HxXnVCI8xNZdmSX/94W5NSmd9BB
kYBzZ3nmHFrpcHMk2+Tkmxa0r+KbL02eALlTjfEHThLAUtHuNjZYh77L9o5u
wfa2ct6fFG6PgWJPwL3mGYQ4+EffpuP/n7n48dN9vHe41W+19fGQQ/kmjd47
sc5c6tKZ54gaA80/8gdPqqmiXqfy3E+pdKi+Rbm+lWsYOPwsS/fbk9Hbjr/6
Ivi+WT8Fvh0/PgQF8a9UadVkFJgT2jqA+1hb3dURyXUCrJjKhMWKZdGZVIlf
XioEJNqIiKm/I8NI3+rLopfDaORqslI3jj/p8oaECbEJ2K8pJScweRFVpG++
m1VNhchd52X168i4/+WY8ksNod9QciYQ+1/M35vx6h6uu9hNH2lbhpHSlG0+
Gb/jkePMEmYzJPC8/vFBxpERlMj78DUn7p9x09dk/mZT4IKX3Nmv3/pRA14d
B3D/5NrTVHqqjAytfx6l1pkMIQdq9d1+XHekOdUWGWYSMGVyGHfvJCH/Wyd1
GDCv1mCAp4ODBP7vW5+JbiahmYZO3zF87ptAmad+e0igThseD2AkIQbzzYHr
uC4aJkOXzp8ZgQtHLcK5xkmo/n22qwfmVeW6oyXZoRI2TLp/6jTHfX+p8mic
DYHSWgqUyGEqIM9VJtYxRACFstuq3pJAt4tnFGuOqYDLXZUJ70ECYnd8qxex
xvvsDFgHTw8C76H0Sp5lMsSzLVYuPSDQH8H6v+/ESJBk37FRRYgEkx5NJ52w
7qBU6EedU6IA1xzbgS26g3DirJZ6wn0CZSVyLD81HQTu3k3OivIU6F/ub7zp
TqAc69wzghsosKnRjSo3OgiV0qYp6tj/iuKr8Qc7SdBwnVn8+XYSfMyIODSA
5/C1aLWMgIQykMwcpp3Bc66MWy5EwZtA0TfUkkkWJwE4R11ZcP8OcI93/eVB
IA7r4Pf+TCeB59rAI5danF91d9MgTwK9cHQq65Uqgq/6khNLDwmYPpZlwBFI
INgy+Tt8vAKEmzkvNWlj/Hn8Vks/ApU9sWhsm5WFpeIff58WEiC0XKPyAusa
S7ObujS+cni0/dOhBKz77z+wJksHEEiuK9fLUxnrBOvDchfw3lb8bTnmIc7/
QxvugrbNlfDaf/FlmRYBe7uGiz75EmjmwoBaqUMXXPgZoRBqRYNfJbwr8Y4E
2nkweeKTSy0sVBEvDQ4RMGJen74dv0sti0eH870e6BhWqG2gU+GUjqHgz1sE
+nKlJbpMkADx8ugL7ea1ECTu7lt5h0Bb4hf36GJdzKrmO8YtWAvJp1MuX8fv
fs40lGUn3mtNvhzXtk2pgA6xuxJvbxJI5enxBDRNheUQCyUrsx4wZo94JI/x
1VO3oz9spcIMe3JLllE/OGxuqMkyJpAJEyU5pJMEPfe1j/OSR0ChO1ohBvPh
SLQIU9LcCDxN1RHZ3EyCvVfv/ujH+MgdlSQ9OxpsWOYLWzDrAoP47eUFDgSy
oaztQ2tlMJ6qobKA83lMh/uOK86n5CX3Nxl1zVAw+KslLoQOp5oGc///uZDW
wyTDzr4isD9wU77KjQBY2PASReC99tx9bpPvDUBfN7a4UEkHgnjdKoBxbesM
1x+MBbCQ8+hvNJ6L/gp1x8rCCDTWaRNk0iAD855tF7/mEWD99fJ951ACfd+c
sDaTIgO6c5fzgjH+7LCR+VuMx+3Rz9d+mwvWpx44/sJ128jGO3M4ikABc+JX
ZyqLAOIZbVZxPIwhp/tt8bnpZ0pFNtpLA89hQ9W+bLxX5Dy5eBXja9Nefuop
BVjPbtzYi/XKLLmlbDWGQPsDy2bYNnXA9mDRqjQ6DdYstROvYJ6cD56pSVod
AKuOSYNn1yig66GfWId5LsriYcKNdV2CPe+P1P10MOj0UJXA9tXL0aoJt3sh
Xsclz8ibCtO2I5Vn/AnUHtxXo7BWD2+tdpoadNJBsKB8yALn4edAe9hMXC3s
meh00fqD/eQm1LVFEyjv2OcfvDtb4cnptpC9DnTQkzmssBZMoIl9z70GS2TB
XSZ9XgvXhQDTwaZuXBdNtTSTV6U0EB06a3SqthvKvzU1cbbSUX+q0BnO3zTg
lPk22Uvpgi8L/MXpbXRUTf06WLjWBbtvHPf7NkGDfZtcm0ewHu+rPLRSYUSC
r8bRYtq6JKhLKRCOEyaQmd7G+cnv3bBrlm7wp5EGDy4ZRC2U0VEPb73Uakw7
zBZwWXfhPbZOKvZyehUdwemXG3Pxnvfh8Q9ykmg7iOkYP39Rh/fvaxLsQT/r
oPrL0qgw3uto/JeM4xVx/rXqE+eOtYDc1Icm2w46hOfmFtZh/GXvbJZ0QQuY
2J2+zdNMBxajfV3HThDIqG7HydPqGkDl8LLN2j4GYvzeEQaSBEp8Hrlpu4c6
SCRxvmNdIyDCacrzkyqBFlvlhTm4dGEkJPO2zLMxWHsV5B33jo5IwoknDKN1
4LI1eb+63RiMF0mJfPmO95UvPB0LNaOwfi6J0xDv7Ve1I89ee0dF2wv1H+X4
k8HqC/+hNTyvpPMWT+7QpSGn7MNMn9uosP3ws0kt/lFonNwbrI71e+sL10SZ
VGPQ/D0WkyY+AfXe+neKqqhIRjo2tQvPQWp9i2q9xBDkWStGS2BdkXfcOkrY
kQyva0wDHrENQwXfg6OReC6LfPZf4Z4iQbSzWua/UyPQdNZ/OwOem80qRkf2
9NOhvuesHhNHC+Qwr1fZKBCo/M3wZz013JdqeY+YG9ZB+LRT+0ucz6o7iUc2
YH2o92xpSfltC5gypfzqVSOQ1Ovjy5MxZMhZ2fdIOnUYLlh/Gl1UIdCzjH1T
iV79kBLmfOIzJxX6FLOrWHQJ9OMBG8O2wmEgzHb0fXlKhkXF6b9JOM/ovavD
ryysw3eLN/8khFBIuepjpUgCGRYKS2fivt+Zo9N1MKAAhNP8nrzG9UuxvpFa
m4l16CfGzEtJAkjZ9obqXYyXdHe/3It1etgxEZmkt0Ww1cnBmo77wOMzZeKp
eD6HqgUdYdTMA4bl03dFw/G86I+m7MT5e7aQMzrFnwMHnSoa92A/F/903qbh
fULlB0P9ra9FcGb5oNT/P5e2ka2vGaihw98Ifa0HpQ1QwvjMjB3XY11UEmps
o4PlvOzFvfR62FtvOB3zjECniqNFV8NpkM0YxrRwsRNuHBgrksT98Mdzr8nB
IRq8fHBGSHSoHY5NTx9Nxn3m1qct+Wd0aBD91OyG3bkuUN9jVw7Y/wOO8IPN
BlTYot7MGNjQC82xHleoGA+aP3r9/hIdLt11Jt0LroX343MGeH9E6TRCNyyc
DimCmgmvc5rh5deRSyu43hdmfpVsBirEOn1YSPTrgWc3Yr5w43na9IiznppL
gYaUMduU8n4IjrfJH8D3XU285nARyKCsvVmDbDQERvynVTpwP/mzy3HLrjoK
RHy63tOY0A/G8VvuteH+P31Uaq6MRoHNpy0Pq4n1Q0GTlP45nOemSA3mdQ4y
9P/JGIplwjxk7ntyHPtJF5fjVXamg8vT0Q27NrTC4E3fCDqO54P8CN3DHu9r
kzwPFXvLQM8+hFz1mEB2PwbCHfA8iHX4sK8q9Sts7mP5cw7bxwg/FC2VHYFq
IfPNXpNY51jyOj/F/XA4sJUas40Ead6OrhHsJLg0JlzNheO5mLK4r+MuGWKy
npj+YxyGDu8nfGPYvuzZ2x/MPMMQWLpfohZ//+xZdkcXbF8j87J4aZYEO4Sj
kqwOj8Cpwh83LmJ777uu/I/3kSDT/Zld4PwokF9R3HLwO7YmXdOU/kKF95pb
U0ef9kDxY+4OQcyrz2vW5MV6MhwZNPoSe2QI1vILuQswz2Nv/z3nd6wffp26
PnSaRAHahxSWw9iP/6jTHo3YHrDTjWyQ/0QFUQ83X2V8rlnMVNsm+SHg4VqV
i6smg5xfQORx/O7b093Mu7bQ4afsPUu98Tb49FFDZDM+N1ha8XEtfvd2snQF
n34PnJV4XgTYnoPTXHDz9hFoLV5fC2AlQ2zs6wH//z9XA7K8r/6NQujuNQNv
rGef5A/yf8XxaFhrh67YDMGEo6v14WIyPDG+yGYcgufjPa1cjoZ+cFc48+/C
Fwp4rhW3fsH8vKSW45RAb4czmRJRfP00eD263/IkPrem5i3LxZ9tsOf9Pomz
bHRAj4ZZP+N7fT/004VdvwvsfjG4LGvSwEk3e+cJfG7NYvelfVc7QaVlwHs6
hAZ0fZ21fMzPpqE/r3yNe8D39ge9jhIqbBgR2E/B95WpzEic7uwFhn2emsa6
VBh36lHCex8SFPY+6vahH1a3y/1craDASUOl5TLMHz6uEhPV0B44sVNb8FQx
FfbWDJyzxPWStPHP2/RJGiTfjNIbX2yHqof3rC5h3Tu4MSrn8Q0KDK3eaVCd
GwBzqfWoWayTN+bW9l0SoYPK4Vvv8ihtoM8a1MmL7dkUHLktH1JhrKP9ZvyN
XiBt6zZnxTr5kfrRd0KY5ztkip8W/S6DayhbwgfzvObCxLMRvP+tJhLh4r8r
wMaggasS62dLp9CddD0CblqX/djdXgF1Ngbg9b//L4FCfFiXLO4q3pqkWwrf
++dCWLC99mgb4/rWUXi8qD6rWE0Cn+g1t6M2BPw+zjHz734/PL/gFPYL68Q2
2Q0GVpcJ8LZIIt7c7QG3+Kw/GlQq+Mg9WiRh3emwiVngw3tcL4ORz49GDsMJ
jviZKAW8X//jlXq8E8+vx7seH7DphzADchCjPgEuH8IdS5tIcIPjw+5H6yPA
4nXba86agBltE7XNeE6oR0xZur4mQyZbrJIa3lczz8131xuSwKEgb/KKNgky
pjfqLosScEdVYmf+Shm46h+13mZLwI2YAl0bXP+HEiqTnFqbIbqg8cfHCDqQ
HL+mZ/sTUPh49ZzBnnJg3E3zzL2F50lyVJkwtlfeIijJy94KriO308Nc6VD4
oD9+6AkBn5eck3fllYONiQAbkxPOK/cz/xdeBLymnqisn6mAmFO9FVoGWC9x
X7D/iOfB/U11G6c3VsK6huJaLs4X48+05uMY/6u/aFI6QYXRWy/rnpn0wLD/
+XBRrIt5Fd2KrPmKoRqecfx6QMDGS+GKlAAC0orOJ2h+p0NU1mHICm4B7RiH
i1VY18SZhe0O7aZDUd+14AusLZAu0hWhgfdxOU7L72o/aNC67GLLMYIVU4dG
8e0eOtCiGuT6cf5Cbl0s/1lbB0YbTjz9hvf9ptrIJp9qOrTrsYSJubRDxJCL
eDyeW+yJU+2v8J7jdCL/r/jlWngk7eXXa0VA/yVu/R3//x6fdfnJ378VoKMv
eNAS5++zly8bR0URRIXMh193JUBPL9SEG+uHw5Zmcq7/6mEDahZrxHrNLLAv
YsP/eqPv7dCPniIQYM1g3I/tJx4yhU7iPXeOmqDl2dIAe/6VW+R9o0NP9kB1
E8Z759bWm1sLQKgi2MEQv9/UVU+7dryP/1OQ07PSzwOHQw4vzuA9fPEgxccK
z2m2Hk2zX3ek4YedkJIF1gsURluX79iP3O+JZ/KvCoBkOaGz5zEBfSpdvIMY
l33i8vZZsgzkhT67Qc7B/Mgr8L+IdcDVA3ezV+pkYONb5tTNuQRIrY2vCGJc
Pfy1kupvWXBQcnGWLCfgqJu88dgjrJcSwk9sLJaFkW9+cjcK8L5JK7Wvx3GN
t1hJhF7tgoM+jWaeeG6zZ3hMHsR4z1MllyshmAc/CxPDCqlQwM7yxwDjpfLk
PqZoPKef1gkOLtNBKH//hzact41VCrRDZifBMu/JaGY13i/EdvXpexNg6pYq
TGY4Cd2bjHVEMP6p2k2EhPE4oQm6y0wbVFbXTyXy02F0220fU6yTcr+Lb4//
1w7Za39uds3QIErXKv4u5qdaKb+XTE0lvHn5WaHEmACrXrHzajcJaFf2vZN7
qhYqJGU+B+B6e6TP5miH62zHvld+xUdVgPHUM9eEPgKSx77u4MF84Kuq2GJx
twtMjYW1jlnQoF1mvErdhYABRb0XdcxD0Fb2YGv/L9wnZHIH/v89oByoS7Hw
kOD23Knl/XgOx+xNfD2H+S/1+bQifYkMe66leXksDYIHX4omH7bv1OkVyhIl
QajyC64LAiQ4v+ytceYuxqM0couNBkGXK87GWJYCIu5rl+ux/WzcX/ulmzQg
nJ85vDbtAktaTak5ruNrX7NYb52iQHGXhKui9iCeP5PUFZwHj5VzGr1tNGjY
Mao4nNENwstNwv2Yj2uRB54SS13Adc97wy8aDQJddx9OwvrYkG4+XtLYDT2/
3lzaVEuDyzu3vlvGOnh1k4xeS2Q72FDq3N8X43ccOXAmo4EOiaRmszD8DrSY
tMhnzwtQQbPHK288j7J+v7P9h+umas6mx1wyB2mItOmu/z+vz8vf63WsBc99
F8tDDhBg/1vy7wac54ZOckHoYfw+zTsu6O6rhalK/WencX3mak/xdN+oh/vL
ybMx0ng/tZ4VTMf13r0vj89RVQMuq723KtkyBsrXzU86yRAQ+f2QoPJNdahx
5ST8WcdAe17zSpsc7ouvOKw1slvgrbmLlmc9HRaytlMOYD9PGGN+Od/RgQzL
uJle9zGYbDr0cB3vZy9GOLmkpVrgiM3eoqFWOkjZNzJ8UMH+s1My4KkK+HW4
55L6CbglGmLagONkVDdOKNynCxwZPueyksdAhu8mxSeKDhHrj9NeF43CC5WL
owUJVPhXrfVzLhvrWiW7dUdfMnxgt2StsSND+ouCx01GNBAI3PivxtwYIiYV
VL8qT8AMi/2rHR+psPDvkYNHnyXMqH17/8dsCgacJDclRZLg9wLbrBj2l+CZ
szYUNArnOh4p8WdR4YLsgqWSHwElPUPl+U8KoMtciM4VQwBPNK/5tr90SPjS
n7UeWAssglerFaIJQHPMdA93AhpNZ0sqE4tAw23b7gjcH7qijyQq4/4cf5+e
cnSyHiiGXTNToXhfolu89MV1fFQsm02mLQeGJvue2uJ+5eEtI1CL677y6lcf
R698uGYkPhOH+9u3A2Otp3F/Zk4OVX1V3AAVv4we5GP/xpe9hB6E0SBhsdEn
9EInmDrN/e3H/n8viF1vDsW6YlFq8mxWM5yqtJfrw37Z9s2sVevToGndSWTi
Yhcsn1tEmXjehUhQGmcyqPBWOE3FHvehK0xhJ1/ge5X/OL/JeZAGv9BzyfmB
dpAzPPPnMOZlMv/zEisq1m3w0NlNtB8yD/x49v/v4/QFN6w/KqdC6kv5LZm6
PSAoefaQLPajyeA/9QDrql0VNvaLw72QnHmz7wiOc5driVIQnqs8SppSHyIL
gTu4OEo5kICkSxoStx3psDjgNR+82gI/N0mf7QvGPCEFMZqWUeFs3nW1Ap8e
4Drf5s6M8eVKhsoLQnRoSrdK20VuA3p2i6q2L54/Rwmbj75UmE6euRpi0guf
hV5s2Ib7ia7/c0efGgrY+Qa+eB3XD7eaCOUqnIfSr3UK700okK+aWug/MwDN
ux891MDzfVdYy8Vzu8jQxCkkH7g8DD9usLM9wfPnZPR9IxX87maxQYeC8otA
dneRrjV+lxuTX2Vi7hCQ46phVtBVBn/uOm/Ix/aKrEE6euoj0LYpXySWIIFT
fkWAMs6nKKLE2m4lgTLzbn8rNhLkCO81L8X5/BhWJr+XexiENJV5ku6Q4U97
a/kCxh/dyVMIyKHA6a4xpcrSfiAGk7r98blV54MSd/OS4IP7e8ZKBhLMHZV/
1IXzfG8AqYyW4f6pua007toQFPBYyKc/JYCu+TxPXnYI3vKuHXerIgO7GCvr
R8zD4jOfYlY2jcChE1yRHZxkSFa+7N+L4+fzSc3KPdoPtSrGI5MjFKhV0Jdr
wXNza29C5Fx4D1xmeT+yiOsn+sBd5f/n1I03Jk+8NtNBoPGNldJYG9hISIf7
YT7ssyeRG5lJwPrkPI0T9/sWaYcLvTjO7zzcbyXq+uEc61L6bAYFxFZfjl7H
fvrc/jDkWg0BSedmOBSSgcH20YLM//f6c3Eoz6AT9AMyIu4E0+BUiaSgOc5D
EwenqgveS9WunT05UkqBOBZVshOOfx+D43iwbS/MW8mfT/Gkgp+kgsYFzDdp
5cIv1rR2WFgcK87pxX6yJbbU4DzU+rUJG4/3QoVJnzKHFta3SssRJ3E9hj3V
lxmy74G08C51ATyvrVBbfzh+R76vimc1p9sguPuYwOWtdLCP+15B4PhTwqtE
qMsDsOtInn7eVQrs6rVw34/ncrNWwqMlzB+XNwesntqVwT/JJ2YBmG83P7vs
P4X507bzrrPkfBmYSjipOuL4O2WHglIvEQD71+svfq+ArNubYlsxz/XVvE4F
j9Pg/i+ZtB1/2oEzaIT6AePnbRmr4nRwX7FZNb46XwFfTK8k7cG4uNgu6wO3
8X580Ht8naMcCZXuevzTn0CvOYWaimsJ9MJF8/JjE3HkTs27rOpJIIvvvwzU
dAg0Y9cv7USqQN+a105f9sP72mrn6M9CAtVOl5YWKBxEqPLHG2m8B40VcED2
fQKFPZg+X/m0DH3Le1KK74vu+k1mPnhEIPTTu9deqAgpt+nE1AQQKCP10myb
Ax2lr9o3T3C0oq+nNwcz4D1x2+67r/QF6Eh5mI05YbINRVMvuZn6EkjsWzxV
s45AKQez7ouUiSOJGYrWFw8CbXoRCse0CfSJ+oT8jrESvZO4rJuI7Z9XRF6N
GiSQ5reUq5dvS6NjJ1olt1kTKGGhrShNnED6tiPvco/Xoj7QQt9sCLS4RzFZ
yIJA4gL25RdsKpE6acG8HuPX+Foy9AkaekF94XljQwfiZS8df4/9D5AWkySt
aagxW0A3064Lqbqbth1xItDx49sPGl2noOrsCL+OvwNof0YARwzOZzTry6Zj
D6goIHRRmOtmL+JGmkFfcf5f/FXZJb6DjCZ/R7TwMI2glyd+DufgvY+s62Ri
w0lCTrY/d6vtIKH0+5TVYWwf7/QvzfUPGakIjjzpYRpC98amEy7hPGR2HTUm
V1IQ69z6jcXkfnRms+iec/hdAqQi2JhOUJCA1Jx74bVBJKD+gUP5/58zb12W
5SmhIsXQ3ietgT2o5QBZoALbB5FC74zp0lDK9Lfaictd6N/kjEIExulf+HQv
PaUj34+09UpoRnac5eMsTwm0/9bsNd4SMjLRt7sbazGExF0d/Bgx7huYXXo6
i4Ka4p+0NVT3I01zjSe8eL8e+TGkr61HRTtvi6pmf+9FL85W/lDB+7vc29ph
RTIFyanrPNGQ6kfc3G6fgjFul8YVZkYaRAv6SfE/Vsko1CX9+0cfApl9e2su
rDeIFr9x6u45RUEGAbwqW/C9lt+vC1z5OYCeqwa3XTOhIObIZicznP/vWbmy
Q0PtSIlkan1wkIa4jnh2cWF9tWH0oHrKVD2a7tcUP9RNR/cOjoiMhxKo8bW2
Y4lWJ+J2E98kH0ZDvaWzZ5MxHtDSGHOktAFV6/3qOVZNR1trdp1Pw/cK9Xwx
tvl1P4o4LLDEVUNBl4YSlPBeifb1vGION+tF5yrTRmx9qcgztDjD5/+/szjz
TifkYQ/iiiM18JdRUdW0zmowtme02Hr0l1kXGj70cOzMLRpSVE92j3XE+3uc
uUrPYjs6J545Uz5OQ4KTM6f2Yh5+WNdkek1pQ7bzFwpchehI9dnrpmGcHzTz
0f3L2jASl3VTi9tJRgpvBmLfY179jLfS715vQRK3jDq9HOloh1VZ1ItgXLfb
U/ly/lQgx/PbRRYw76VRX0ziTQKdZvxrc+9yDxLN3X9rBccZogB8q1ivPnp/
anxlvA2dO7DRX2wzHVEkPlp5ROM87NtH88V9xmOFQ/DmXBnSajvNK4vrvW/L
TB9vcC06bcG4Ql2kI+OtDQZ62N74w9PqU+e70Kmk2NtOWjQ0Yr9q///nkysr
f227mtOMQqpS4zpD6SjccdzwA+4PrDLb9Lsae9ETvWvvxvWpiHLNs1MM2zdU
O70rFu9HCo5DHZ0UXAeZt8AD49JXDQxOhvUguWCOr5YZVPQ+o7PZGJ97ecTR
nsRIQudCY05L7iGh/irp7GXM29M2Qb4uJkNoIUKUrlhGRtK/TD7P43PnGe/f
lNlFQlS3iJsjm0jozNQ49X/7sb2WxYLf+pGkwbVf89mYh+y2AWyYD2+PB4Vc
4BhGybezz126R0aHVDpSVzAuFHJG/vFmEvLbkV/7gIOEoh5HX6JgnO82z1VR
djqK/Ej98HymDblsKTgShuOM1duntNKPeVDKoPON3I42cXPckMK81XmcZ9VS
iuuXo/2Nr2EPGlc4vI8J2zt+ZZ7civN7yOJKon10Lar+phfpjXH3X7w3uLro
aO/OILFDi/WIi64oKxaG6/FbsRxliEDOa0wu6bXS6O5rzvOFlgRi4s7OoqIR
pPlD5NLhSRIa04jdZBaJ+c+xvsFBagj16QnOMdeRkZn+q6F0HA8TR69oag0Z
nWO5pjApM4T6I0/8+Yjxa72iiy32ZFRblfqZun0YLW46PbmK7yupY384b5yE
GPSin0ucHkGGGlst//e/+0Rs5bHPVLTUlb5++lkPKpZgcrfE8d8YtCUb4/nS
C1slobkIVWgzkf7/fHJrscLNfDyPjkbfp3EyH0Sn987H3cV1ZNt8rUE2H/d5
/f3H7rEJo2jdW0d+4/eK/fDi0yzmu2fSlkfLz/LRxlOL8nzYz4nbnSTmKjri
NixX56tvQJ8DOIvmMN4lYmLxAp+bfYg/lVJQhKQib7iwYF49a+CTa3pKQ1lj
8qJb9TtR284hxkbcHxxCmw3Y8Ll1v/ey+FGF0LMs7nkBjPevy3I9wPXKMsdr
9fJlAXqRIc71OIZAO6i7fpR8xvV3pdS5860ASpFIveqJcSOSRZ40Pv+98aUh
daVctHKv0OUcrjvz5JUZrZo65BSgaX5VEc+VL5VupqcI1KTY8/ATaws6dCC4
neiho4ECGeVJjMuo6HhKh7Sg54Js/ZltdLRSpvvnujzOs5xNi7p+LfoYlO7v
LEEgYlH3FKcVgY79ltUddWlHk/5frTjq6Oh4Rek8UUlHjFc01SxIXSiimzfZ
4icN+dTu8+/spKMDF7q15htpyDMq8B53fTfKhjTPOaCj6eSkPfUaE8hgU3fn
+/aLKLvaUKYokYq6v4raC+B6kF8Pfh70kIz6Fd8t3zKgIaMTlJwLkWNod8/A
4D0tVUSbiKLEvqejtH/Ch4uSqUjJIMcClY6ih3O/tWjpmB9Db5KL8TlByxTl
+dB2JOSl4GJRQ0dfurTWJaJG0Y/JLVz/8qgoi8Z5MTyNiorbsyPCsrrRuzrm
n+ydNHT79Z85znI62mN6J1erGd9vnn+Smt6CoqMvP2X8//P5S5NaqR10JNm7
SbRZtAX5L3XLhykRyCdQXe7sCdwn2u6s29LrUEFL7ouzGK+pZE0rTiKj8Xu9
f3lShlGJ+HbBfzjPadZfdh/joqKhqtOtq679aO7ftxUpPawTEGOuj+0YypFd
7/HaoIKaWJyl/fH7VNUhSuUEDZWc2/mDZbELXYseD8vHc+nrquni7e1j6PWO
uH0bouTQ5hdiKq8lCfTUb1J2wrYfabcVfRnaSUVs0Um1qbpYv91d7DGIHUax
ng82UN+Tkb5G0t0MHE+5SOaKg1kP0hAuu801SUUPdRYpwv//XYMBfdlFl4SO
DgrVtxmSkIVUfE3aATzHt1ced2AaRe6bOScsmkgoPlWLzxfz5Nq2RJseIRJ6
y7qX/Ygotid9kWjFfX9mytBgrpaECnd3iLZxjKL0jtXMGGxf77b9rwVBRRt+
xF0RvN2DChR2rZfhcz+9f9FrxV+L6Khr440jeN53h/56iHVaNHT9yT5EIIE3
u6Ta7WpRjhiHoj7GRR5MHXG7n496+Ky123FfBv6Eyde4j8X4jf7VCS1ErBl/
3arwnCsPPa61MxDP2c53/VXtZUihu6Wz6Q6uTwoohOH5aw60z1E5RUhjzO+4
pjuBTm3btH4L19uFXzXRJw/mIuutmq3f8b/5x/16F3EfW5n6G9byqgjV+oc2
PcL2sb1MH6Px95tvc5d2PyxAZV533gljfWzZa8x0AtevFKEZsD5XgQJ1D89z
XSLQOfZ/UTl4LreUbEqcb6lAhjl7gBe/0z4NThc73BfCk0QfKv4oQ4ajBcwu
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
gOcP7mngvic37jtWECjy9TWTD9DftV922tYLV+JV18L4j7DegevqKOI2gbsW
NjYbsX/BXLaLGn0OEK9TRw6xwbr4+UKtnzW2YOZOhb72CMhHU72QHLBf0MDB
Uv6fLlbKK7Z62kUgxM3VreZB4LTlHXSD7Tp4g57Cj44GAv23Ipe/C/ZL2j25
YZt5DTbw3BzxUptAtHzd2kQvAreRtb66XqzCXrvemN08RqA+HYnGOLA/W4hn
ju1yG77v9x9biTMdJQn+bqYC71t2Sy77+30fFm98tbMZ6phmxnShLeC0ziG1
AJ5VVXyvfKtpZiHkw4JPcRDYSRmxE9m9XhWPSq2+D/oI9SXK0+dtFNhv55Ow
7305Drj3StfGA+rFKrn2B+jf9HvvX67zZTg4JZS07TqBRIKZJBjvhbEWdPt+
4C7FqlNXIgshrw7GcceYAo7qDpdw9XvYjP8LuH/NIZWO9KvbLxUDnjQ7J9X8
yqIJT/MqN50vpqOj42m6ajD+RZ4/EQV9JD+r0jttko7GNNVvcAIurf/OkYjy
6vDkpfWDSQt0lJbfeHYz4Oqx1a137m4vwYePjnx0hf7ydsN+32XQUxom5s2v
W4wPvBwJUr4DeT56I/U3yOdf+I4NeffhrZ9Lu55iKgpjG3hlCOuiVa3eNXPq
xXe6yC9c2Wgo9UpjrSL4reio5KlGkyG8/7Xd9I8ACtK+cUp9BnDsBJMU340v
XTipN5A9+y0NbUFv3oSAfsmkK1/Z9Drxu9fMm0Z56AgP24ZmAO+rCjqVKlbW
hVuHL58Wq6Mhh15B0hngre4k/vENXp24OOZUrt0sDVm4pCdzA/9qv3nK0rqm
Cx92YrnTl0VDNYbi8X6g32tddvlXni6sp6svFtNOQ3vEpORdGO++Bds7bbkw
gJc7QgIOilORycHNWcHgt4a32Y2K0Eemnzys8LGnoodbBTyooP9YWWC4y/s+
/NT4Sl5oGhU1SQ5IECCvNEiVf2Deg9sOuqpst6Ch5OuJ8pLgn4rR8U3DwBNK
xdnOjVV0oJW4Q4eLId+zA0f2p0xR8bOE8AzLoV600lunFQZ+e+Jl+PQ18G0v
4QeqkfpjyPGwQLYn5LvzzXo1v09Q/+s2Mg959qHUXoeVV2B/AS0q0EWYji9e
Kd9/8nEHOr1B9izTY8b7JsNXQ6Av2KpsqjlX241OZ1XMDwGf5ZGKuMR6FviD
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
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{416.79555689269625`, 402.7235662473001},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-10, 10}, {-10, 10}, {-10, 10}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-2.3770778505599175`, -2.0227589708696785`, \
-1.3068844777346154`},
  ViewVertical->{
   0.03160494807603801, -0.44892426496286436`, -0.8930107119092486}]], \
"Output",
 CellLabel->"Out[67]=",ExpressionUUID->"2cb550bd-2bb0-4613-b773-caedfa390b6f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"use", " ", "this", " ", "as", " ", "an", " ", "example"}], " ", 
   "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{"ContourPlot3D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"x", "^", "2"}], "-", 
      RowBox[{"y", "^", "2"}]}], "\[Equal]", "z"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"MeshFunctions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"#1", "-", "#2"}], "&"}], ",", 
       RowBox[{
        RowBox[{"#1", "+", "#2"}], "&"}]}], "}"}]}], ",", 
    RowBox[{"MeshShading", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Yellow", ",", "Blue"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Green", ",", "Cyan"}], "}"}]}], "}"}]}]}], "]"}]}]], "Input",\

 CellLabel->"In[68]:=",ExpressionUUID->"53cc3ef9-43cc-45a1-8ca7-084d942d6bc1"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJx1fXlczc/3/73te2khSaKdJAlRmhBCZVf2siT7vodQhFKyhVCkDZV9N9da
om4bRaW9bvtKe/1e/b73zKvH9Hn/1cPzcZzXzJmZM2fOec7coau3zV8nwuFw
hklyOKLM3yAPruWPgApU1Tbour+YAMcpNsy4247RtXs+1rZSAoJzIg2CopNm
EFzu+87MMVYlRD7u+Jr16dxaIm9z8eKWNrEsNDTX4XF3N4uvNb382at/DsHV
Z4vWv15eTuTT7hTELimoIvKqvgl59dwUZLjy5TIjaRY3nbJtX9TQRIJnFt8M
2yZXRuTfKQ/3uRVSjqz8l4TKihUTHNoPuLr1aVM97S8E/5N4w/dLZQGR33hz
T27Y6Bp03e3PRRXxKtJfaD/gNtMXvRupk8ziA76fXthZTeShnccPnbT5cr+8
jx7hX8ypU7Ku9TDFfXCh/UEPfJfGd1amBqvKV/XRI/Xa0UHmbWWffoEdzB3j
DnPF8kl7AE9eMcPW2a+I4O+izaetuV9K5OG7ID/XOO4IRy2L4L//fjC5ejaf
yF+rv4cGvq9EfjpXIk6J5vfRA/i73xqKY33Z9gC+crGHrIykoA/uNkxGVV6R
xddGnon1kWXlp1y4ffZyfTWRt5t/+ZO3eDGRb/9VOJNzv4jgnzqOnDfgsv2C
+fndtjDUb2450QM4zB/ArQwTx3uoZJB+qao6RMnJsXrk1u2foN+eiTqOofIa
SR6ZD/cjtu3LvPYTcTgOmVIeBgTPMqhOMpLNIvIt402//BnMIzjIS028Ux6i
9YHgqm+i7NrXs/pffDh7YZV0CtGj/fzTgrnukQQHPSGrErbfHxuHjBN/7arr
yCM4zB+P6QZiByXyiR6Y/4Dn150r22l2ncjvlvsp1vk6Gy0P0nXvFkvp0y+C
r4l5bjr+CdEDuLZNx4Iy7QTSHrAzzHOQJ7hwXYD+N9uilklKZBEc5AHP33Rw
2oSJb4j8xgMBm6T7ZxH9MF5EjxAHu0E7QT/gcrdl93PVUvq00y3sqXzO05/E
DgGDRUZKc8rIfAM8w3fao8ZbpaRfYE+ZVqehqySLCQ7jDjisO9ADOOiHdsI8
J/5E2E6Yzx+PKt4JkBMQPPzKYKcV3UWsHiEO+mGe0/2F+WOoW1zX3C8Fmc9y
3D2F02t/EcoLJFxzZtwqIv2C9oMeWNcgD34MxgXWO+wjMC6Aw3oE+blaukk+
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
rVw/AU3glzP6s0i/rCbXDHQZyiPxVeWNJPfRHB5qmlc+OXcgD3VGP815zfg/
Ok9FeLmvfatHKvVDN6vCYu6NiUOV0g9upvfi3+5MESj+mGSHkmVdjg9yzcUq
aZ+SCm+kkXE3y1A6f6Gb5cf6btxne8NxFjr0Q/vL+eZMDOcp8i6iJ099NLN/
w7kb1mP+zx0bhz2owXHfoye0OxaQcQE72MwLiOf+08K7JbV8bhXxSfvnh1dG
aPfkm8Mmz9P/PhU9yz8ywL+Sj0l+j+LfLnaJrxotxpzvbJ6r2l5CqMl4/7S/
fEzaCfKTZaTuDN4Tg8pLcrYFDWLjCogH6PxYqfS6Qcv+5pF+0fzbOxaPXd0Z
e3qWzVI86DCDxNUwjhA/g91InhD4xvlG8mEza/ALo4F1Ko/LyXq0mDn2i4Ju
Nfb03MxJSqsgdgb/TPJmHIubPs9z3+2e23lveUclhjwJzb/V5F3Wq2yrRFDf
Bz1wDrU9mF3fLsXyYOk8nsfe/Z+aO1l+rPHI0jhXhRwE3x3ff9JkTZHiPvOf
zkeB/4G8Cs2PbTV4c4/5f0jd9lNC5q8FqP+qgOolo8rw2Pa5oz8ksvcRlCtU
EvZ19OLNCu1QcuP7uX3tZbjsWPfEEBGWTzvf7w9X80YJtm1fEt7mWkjsOfee
jrf41lo8Ls7sjtd59n6K2uvC2yMvpeHFjtf1N67NJXmYA8FV0uM7WR7shCPW
t+bUxZP4FtZLx3UfqYrIWBwzY2hqRGQpVq4oaEOLy4kesA+dxwD7QH6M5Kk0
nvZzmleC0fxPr/KiKkh+gIpXEcSry0cuGjH8bCqOGTPfbp5FbR9e1qPD268b
irD5IlgvMD9p/t5OmzvqbZ21yPnZ0bfGjB+n4meS37t+rEk6IzwDP8hVnj8x
oroPv1TcetWn192VyPbR1b2RTP99z21PmD40Gz+77DHoydYKkm+sVgm26Gpm
ea1JYYnvvH9hYmew/yF0csTCRj7LJxTO21ebvgR8a0zHC7zf3Jr1KR/P97k3
5N/4MmK3NbNvan7OqsArV3c/NjOoZsfX5pNC/yfl+PmCpQ+r7WqIfHvt+HXl
oYV4+XvXDN8V1aSdbj8m9uPYFWCUv1h0zaMakk+D/aXYeeb02o5atD9qeUhh
QzY+88bfYVOggImj8kOMt9T24TknKWT4VHdWokL+W/+ZtUy8bRxxJJKN51GT
bMyo3xI5WK//buPZqwtxnNEGrcPBJaT9E4uOLOhsZHmG/Vc9jE3ryMQ31+0s
tZ+ViL0H6FeGb2L5kLCP0PmlpIPulquW/sFJVmNHD//O8iHBP6seG/kmnrEz
xOHgn0HP5iqLsUPEWB5jRe5b0+BeeU6YDyKK3x/cYda7ZtDNU1uL+UR/0KGx
45S5+eh2ffPHhY3xGPwnnTdDn3McdwmycXHyMLF7koXEDglhogUBjZnEz0B/
73crbeqfJMAayZUZS5b+Iet9+EbRh/UYY+uZY0s1Jdn8sO28iQpDs+5gZ6tp
hw98YHmY847aOvgV8THkdQH/pMZNd11kQvJ1U1KnJGAmnm+ftnB+VQTG3LjX
L3Ql2fz25rm84MPuMfjg0X6tLepsHpU6LyM4L4MdwG941ml53BEvJv0FvwHz
cKjLIdWo0nSc5XLrQK1sX36jot62L9+Y9Qjreuv2WWefRcVjkag1N73UWP4k
2Ae+e+FYAcdAXEDqKRJGWeqq0lWYrr+Ef1nNa+/1+6dQx8kxddVzlmTiSj0N
nSWybB0H6v52LsP2dsplkToRnF8Ar3Na9FGtNRNVlX69nZnHvq8CeVf01XhP
nQoPQ7xEfv/CJG6+Ks8SQ1xEft/K7E6epAwTfwnjh2ExQecPiPX63UkhDnUQ
cs4V4qA/YalWVbdUCsHJ+7pGibZxsilYYGWPPqknsO+E56jn+ksIiDz0l+QN
hPYc7rpefYU4+zukFWG7ZdRl2d932Ll9cZGsRDHR89Dla8xK8V6/C0m1Z/um
jyHYZSpOeHor63m/FGSj0vZtqkSv322k5D+IXSw/Jc7aAcYL+DZw7gtqP3rz
A+MXnl3a+1K0gX1nD+pWcE63MG/mikqxfDnIr55EhgemyxWigMP9Mmq47O8P
RqhvMrslWog+bNJP7u6qRJbDbFKk29j3ZMBuMC7QHtAPfAb47t5J+EETrkHb
tEclOLUmkvwq6IE8HpzLoL/9HbUP1w/i4RL3lkdyCgI0MCLxb/bmctS/64y3
2ys2v2eaUTRvMHNuDMof+12q13t0UL+AdsK5AMYR7EnjMJ8dX/q+6VbOInrI
uzfCdUF+p+Cr5a1YZhyDJqm+ncTsi9cGOGeu00tBF5qPOEkrs/k6kM8Pl44/
xPjr7Q06p1f8jcddtWZDnCTZ35XbWn8/MK0hntRlzNpdP2cy699E5MwAXnc6
zjD990xbnP0dt4vcqBMTutJJPUsrJUJ9iyKbz3lQO8F7SK/fy4N2Qr2GfzdI
W5dTjA3fzd4xuSkTu9zT3H84ZQWynydVINUrT2Xz4bFE2tXZiM4viRz5Ot1k
CPt7bZBfgvWe2e30QZbxm5y8P0qLW/g4VaHfe7MxWUj8mvNSk4F9f1/MKT/C
Q1IyCy98Pt3NJx/jP8O+oOHy7O+aAX7EfyUzT9jfcQP90B46nwP2qRpsXe2l
yOYtoV90XuiXrUvLTelvqKNoIk++V1505/KpASs5bP7bPTFNc7BkDX42POD8
0gvh6OdNwaGn7mw+SkXNzsvUKAtduXTGd4kqmxfdfvjQ/f0cNp9xZb2ht6E0
W7cV3Fxx9wLTfqsyF8NhIsX4Xvbdi0Yy7O95AQ52c7edsKVWljkPCc9x3mfG
M3p6/X6TEJcI3Mr4q158JKGfARz8wDWJlcOjR8WR32NKCVvzRxOZY96MlwsC
/WbQ9TsM9buOtdUTxs/goQExxgqvh/X9vbkt9TV7Noqn4OTj7fOaYmKxXCqe
vlarGBVym38s1mL5P+pXHaXOcNg8TeBYKXd5tRwM/hbsAPViWL8pM7J/qkiy
+Ksx+w6tZvRoj1nWyetm8xLjB965uVepFGmXrBmlncfmE0APnX8A/5bgJq8i
qM1DE2XdXXg6GcQ/QDwP/mfu2eB8O6lCVOg3d1h0LZvngXVN53m6R93/uoLL
8n8G7lRc28iMx5yuum3HVCvQLMmvAaOesvkW461y5/W4VWjd9KhI12bc53dw
IO9xJC5rgLc8+zsg0UPkNyx5jlHysJC9/ZQEhP88oilggPaIMPZ3Q1p+nS5I
EyCvh+obGFuz5025zp/WuyuQ2burdec02fwk7DtwLgP/D/MZ7Km+5HHYK8Fc
Ygc6PwP3BYD/Q363dHWsxJ4NuWjWXTvDP0Fpffg89Hkf/C3oBz4/3FMA3g4d
zwBfCO47sDzq/8NTS97ncfpnofmPT61TX1eA5j08Yn9mT2IfHhe5zy7cL4Cn
Qfg/FE9Gc6S2yLaWIuReUiaWb5iFAlNnanQuq0b27jW5p6LY/OeXBu4pbq/f
W0kwsbbcpZxDxte5Pv755eZKBPdiTFG0sxGnCtlISzb2zBc6PsRqzyRmtJaR
fMXI7Y/Pj19SjuLju0SW32Pzt/07kv0NHlSgdc73YqcuYPO3CpMGpVQzcS2c
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
yjH2HvH0+9fym10KcRM/4eCcm+y9rbT1QSFr24vIulPzibxtJ+lK6j6Oj4sS
z/Ssr44Pyh7HrPALqUOOzvH52MrlroOLBXvPC+pKPrPK7jn2rI9/GyLHHh2H
J+8YML6WiXfAX+kmXzYd3r2O1AUgL3F8zRTrMMlivE1uz9aA+kw8LjPnqYoE
m//ZtVygozRXmtg7fpTUwcfM3wPH9z/bpB6D6bo51N3m71aVqGbWAdQR7Dfd
KlneyfLroF6wxnx5kvfpVJzskefrOJG9t8ifv3j1g26Wd3cwavLfZLEaUk+k
7/e159d8slXPxvR9Vf8/fLeK9Aps6Ob7PlKPvXcGdT2JI+bmp2ax9/sWyA2w
WMz4Q7DPyBbnIbPb3PH3ma98V4QU4piYPU9PrGLvZ5XaVd4fPacAmw3lrR8U
w97nwkej1Fp8Bdizbn3aqY1939ENjfqu2sIsZCnzkTfPKefgwkf32l61FZHv
hiZqf7trzNYBLZ5F3U3rqfObJe99qZCFdyK5i5cjSjHf8d5yK2f2/iDUhfMs
8yz599n7g2ZK2/wbe/EA3VR/Sxvq5+CwcLMhqow/V9bYeCOw1zu94H9gf4d7
DVA3fJZ/Na7Enb13DP6Hvs8LfAnQ86y/hZ5d1EpSL4N6B9gTvgvzFuqG5HcW
YtKeFzD7S4hh9ZwVdXmkDgX1Dmj/hwdZM5Uv38H0vVeQh/oO2A3aT98jBv8G
eFuI11B9ySWkPc6j8q1mM/M94Pxwr30l8bhxcvW+LRfTsMtla7lI19w++mF8
oT4OdVX6/rWH2aOSjU15xA7//GWG+xtkkPZD/hDmv9tRiSWvXsXjLx3qJsP6
sfeIu97dPbunIRtvcetonifB3qcGP3+tcnW2TBfLG4T+wjg2Xnw5WX1ICt46
auWoyMJ0vPlJes4/efZeuU991IhjbSw/jX4/FvJdUH9JOLlKu4qJVyDPBv72
5oB9UfbKAjxvRZyfngF7z/GP4W+J17wa7OB3vuiGPHt/qtTm2OuTClVYYuiu
QouJvD78QGnTLodhyArVvu42Wt3zO6lCvgqcU6S+9Ktd1lnN5rV3yfuESzDn
3dGuP9S6WTyE26mmzpzHzxUdsz6syPIJ4R4f8P9hnY4SnmdzJdymqTRkohTj
nI3Vvfh4Ofuua3TVZKKMfZU/XBqL8D/5q5P1BOz9SvCfhosvTkkVT0FQH5w7
Yuu7ZPlinIL2hlhYsL8HHaJ641FiB8ujM9R2zNIS5BE+vHZpGL6ssojo90pr
yrNYX47pe5cwXpBvbIg8afilo4z0i75PCnaA/IBosEK/QY15aKw7h4kTWJ6b
jvWNzf/kU0icQN9n9Bp6ZuGdqkz8O6mfxJInfd+rDFl60391F3Nel22/navB
Y/lsQv7nkPBnivfN44i8ydomu0jm/HcnyHJq2RY7Ii8SlX/apoOPPiXsXNfo
Z4d+WR7XutDJ8tmmn55To6Mwk9j/88mxWTenWKDH1gv75xXwSdxlaPbkvUsd
RhBHgTx9XxL2O8IfE9YvyHvuZo8f9NQl8qWG3gjIZd85pO8tGhzTOL+C0+u9
RIvKk5aB44n96XuUE6MPFVfXVuL5I5bUDqwr6vOeYYfRveoZHAFKafs2da9G
DvkunKMhD0x+d0l4fw3q8jAf6HuIMO6E3yXsb1By+a793b14WcL2w7gopKaL
S3XnIXf9y55Lq+NZP/8wdEJbVy0CPv+vwUdPBBtk4Zhip2U/Vdh8IPgxsM9v
8VaHAqYdr0rXiHR1s3yhy9P+LPP+iQmfXHbM+RMe2n3fzaPzYBZSxhrXuey7
bcsHDUh+2pqO0/akDGjs9Q5h0NaEXeYdmThyW6jZ66HF2OXxwHA8tKoPv2LO
UvGyVd1FaOv9X/MntDLxtPAeEOhXeDt+2ytm3jyo3VGfwvjd0gkKndOUBH3e
+zKdOaByDDOOQU/u5k/uyMO3h/o3SRny8JFS3yuH5di8H6yLf92hotacYvQp
ZInssjo+Bn4peX+s9pdFOoPXx/40uzUmC8efNVg2SoPNqyx9PKIUTZyP76+v
XjVQhr1fCd+1N9fZfEmOzad5cUUeb69IxMMCeGbv3rJ5M+Cxk7yQsO4J9pl+
p/JbSFclcjcKbR3NxLMNA+5FVblFYLmtMZa2+9j7iSl+0ec12yvRQtXsFvl2
9lwJ/JiZT/fMMmfmXcXx3S0T9XMIT4Pc3xHe717q8dXWhpnf5Hdq3oTrn2D8
bfDXDyX7uez7RZolZvpNjJ+TcHBzXsuc5xTM5W1Uev1ODXk/sfXTx37teXjG
vM65DqosDufHYKvjQRdUahDXp8JvALeKvPcCekLOzFxY0lWE7FZ9vpdfxp5T
IN8I93roPKexVMLgfdwqbHUmv2NUzzlAKH/HYprxGG7PvZfQf/XtBXj0z9S1
v7rLSJ45+OeWeQbt6Wjv+i4fbk/dReifu8rGN36VECB1E93zBtxe9+VD7B9E
mWqhoB1/mvtz2XvxAwTOH6/IJaBpBzclGoiw99ZLjesbMmV5SDdPhr+n572/
yO9DF6qx+xfUl4mfFPI2wW60v7p5NCSpkMHjb1hpOf+P35d3vP50zd7Rk8m/
4e/u53E+icz+rukQXSCtyN53pvd36C/MT260ae4diT51cAR1cK8FC7QmdrC/
Zz1xSqNbFzM+mx753U9qZ38fua11eKUKJwu7+8pv2Mdh79V+V5Y8WSgqoOv1
COr1VH0ZQX05bYkGM597/Y6q0N+aq10tFOOw90PXLNKTzpZk74dmZA9/K8ec
+xdbSsuEc9j3pbdHVjxvrmfi7qrq11yRfLKvuayssuL84+NAc+76uYJ44v+H
11lhb8Z/hYqrqRcw/VcIPrNHs479PS8JbuCf++nse85npxuJd/f4ORlpjrfC
LJRgZXKsh28M8vZnVccN/ltGvgvneo7Xq11iU23JuRLWtd0Zs+9eshksb1B6
2y8tZp/Mf5SweFdrEfEnIg+bZ65j2jvfc2KgVTPLM4yRftlPgvHXoP/F5ZmX
pIzHEj9gc3f68k332XtDcL8J9gXAz28X4QQw3zUw2rD5UXsZ0V987ejQEZxi
/C95wv5dyilYKXvv7txe92Lk1NwOSMoUEzvAOIIdtjtWhy/nsO+Bp+lNF7jK
Z6AjOi/T5TpZnj/Eh+4bu6J75hfoz564WKLjgR0C3izo9yl/a2blOJPEFTA/
Z6VPs+hSyEIDfNbEIE4K+a6Lh+UQp5p4fHe1xfrUu6pkvUeLqqtvjIylz+kI
zunUeZ/wA8E+niv6VdVyqpDLH4vxd5n9WpAR+mlhcMU7+K5hhJplRgPL4w0b
/FO0icPuv+Q9Xv91U24wfkvhne+9Pe2Z2PbpC58fvfixPNk1XU4SOfjZWd6u
bi6P9Negw9BxPiNfJ/wurJeuXWK8o5xCOu+BIO/h/GpBoh6zbl3+imvUM+0O
6noxpoGxG+wvcK92h94TrZz+PGSQ9OZuOdMfrtqNEZOYePPTuI+PniklIO30
SSK/Gbx8Q3LM3K48vHaevbVipQ36/ch1SE9d+tlh9SFOPb/7EcLfM/b4ePRv
otI3GaafN2Z9Rt+ZcYtZcqHE9z5CNatu9JvErNcXap99y6xM8MpDSc939/ze
fMS7W3sYe/lXhjhMY+bRykwZ7wk/rFCs99YhuIe/kTvM3ptp/7iAccm/I6eh
Tr3VqYVM/+E9nCGrMq41SOQjef2RJTeY/s46+NxMojMTa3JfW61nznFp4hMP
Ymb88JZZIjUcHr55oPH3aWa/uBv/61EzE2ckXRjjfZJp//cfbhdUmfZ47Ri7
SoTR33ZS2968Ow8ftBx4oVQ8A4UZ3/08m2nPzj1hr34z8zR45x5DX+ksdHqb
fdQbxh9qxbkvn820/0RjWVgoE+fsf392j6E4Dw3PT+BoMePvsM0p9igzjt26
HonSjN8ePHfPwSamXwOnuCU2N/Gx1LpEQ3fGzg9uHh/Zcw/Sd074rkHM/JFq
j/0WJcFD+4MbQsOZdalqqXZzLHOOAj0yu7e9WsvY2aLAiYeZ8xv4W3Jveqia
pug3G8JHIvejdXzQ529T0NTBv6MdGRzyA58Dq+55CeKJHvAni4dvNDxdiLGZ
f7mldg8/Wy1rfQbTnvz9Q9ocWzLx4nvrdoztxQvKyNu07r1oProov3T7awb/
5Sl/uWf/eh6p9eduVzp6ct27+AejZ/rrvQMMuzIRxC0XDyYf5jPjdVLh++nR
XB7hJwCv0iWwX8HYfgPRQU2tAU6ihSjwfVhiz32A+cMvWxgx5ymI8xdJ3ToY
xez7C8OmnpnK+P2912pSQxUTUEr3sMLzjHzij+hTrv8wWl8qsjCLOQcPmsRH
W0WL0fjmo6cbpHhoenXX4w6ZLCRQ6ig5wOjx8Z8ka8bE/6D/qY6n2HDRKhQe
JJWmx2HPQSWhFVlDmH9XO68vH8zMrygl+6ZfolloVtDXijkMLqojLx3FtNPw
9sbX08SKkf6OOWW2IgLUYjw9K7TnPUWhnivvtBJXMfaxe3/iz+Ce93KEePD9
DIlxjL6X3OtThjP6IlF7S1gP/740otSDaad+eWacKOMHku0XrjaUEGBfG+/h
a3p+N/jKFd/bzDhsLrm+Ywgzzsdu7Ww2Zebn2Q2nx2sx7Qx22Gk+jtlnnMxq
A1yZ+dxiNjZxIDNeTdIuevP+xePNafmnDUV4aNnMQ0d6zq1tdz3Oni7C+KLt
mzplRg+Pk7rjD9OeWyZOezcwcdzvX1j/I6MnetXSrY+Y9nSf+RK9VaIGQ7/u
1zcY9dgtYavP8LHMuehkS2zdG6Z9XlLa6sd7/HN+i0pPvhHmIbknJbQD4dcJ
74sFXZjoHjUyDr0IGVU4ielvzMhwUW6vdy0C1b8IjBn7eAZ6199hvmOyzn9C
ukgGfvjm8nkjZh15Raxq1GTscGHAt7/GzP5/0Wv5Kr+uMvzlU6OVDuP3+gcF
/D1Wl45S1kf2u9hZhAMk2vtJMfbSVhlo9DOPjyJLm9t77pO+Uqn3Pcus66by
iMlN9ZlIw8sycgizAb+ynHMul4l35U9/6n+7LRs5qu0uP9JZi9OnrTvS0czE
LXsdnmt0VZN9EOJtGeF7BS8ue5fuZeKhwyqaU02ZOOfJ9BG6m37HIzdtryuP
e955vnq2fCSHfc/hfu3EksAOPrZWiG46wvTH4e4hv2KZ2Sh1/KltwUz7Pfcu
OmxZg/GdWwtljlVnos3X7PYpM+3cbZcxYzRzLrh3rN9Uuc4ytFXe5MYJxg5i
4l4Zmm18rP8rqbBfXR5qyDA5sqyrErt48HVk2zG2Um9sHdBchk7X+z4UY+KE
cXie07CuTGyoKv/4wt8itHtl8eBLPfcKBWHZcj15JuE9a7F+apYHGf3GC9f/
CGD+Ag79qjT/vlqG8W/JhrE+U5l4qWGP2kQV5v8/PJWUbsHYe/KwdEer/lk4
8OM051U99/bNJOtUGPmun97iZ4bNx4lO67kujN3gvAP6h9VcM8is5OP9+5bd
+dLJ5mnhHoqj63rLJiYuemLrJf/nbyapT71JvW57ilk/Ozg/XOaW88l9B/Cr
deWPD5UEx+J331fuG/0vE4v/ER16nfGPId1fCjaXzcG/fz6TRcz+OlPeZPFx
Zn/BE46vO14YT+4NaXx/dEmCiY+sv/AUPBMx+e6RzF9NXsy+8OLvjfalrQVE
HuK6KydE7OYzcV3bbnuRtUx/Y9X4WwuYfj3YcGTcZcUMYs/fj7cNGdTrnrW4
lJ7bDcZukI+qXVK5rYbZN1fKhzb366rFlTY5/u0TDNA+m1m/BO216A3/YsAW
Br+wYEZrh0gK0jBduWhwZzX6bCLpFsTg4YHtMqaMnzTf/2lalZwAWRzQftFT
79lYprxJQVobQT3U9MmFeR7MOF5sejDNtQmjOddXDOLUZqKMmdYDUpn50/hW
tuSvKI/EmQM1vTY6Mv2HPEy69K2jDnIZaOUiDb/7jP7xj+1LxURTSF5RSvPl
4guMfthfRBr5OuPkU5D1+vHOxW15+Ht80QybNj46l3pu+pj+CeSeqeW34LjV
3Rjl1pYHJ2nwENyb43wydc8vSLG+GGN3U3cc42eCvuuUM/Lvt6xIUWbioJrd
ums2HbZDo782cVYy9oe8XExmrF1uOh/BPOEYzCl7qKSGvIR5OcjvPR9bfVKb
8ZfTT+UkusrPQA1pSruWM/MV7KmLO0WKLloT/wD3an1KMiuf209DxedGWeYy
6/GDg0XWIsav6lrrqS57PJngR5/5NSUw+0i9e/fYFiYOTDYqet3exebZzFt3
vVzbP4fYbYyEluhExh+qR14XtfZm82PD1t1OP8zsU7q2R46EPp2B4gLb5x/v
Yubz1ud+tr3icL8Hzf+eRaojndStlu87+ShotuTX6ohYLLNV1MmaicPvH/Z8
W9pzTmw22xHbKw5PPNdS0tFVi/YummIznDlvDsu/ptnG+BfY3yc+jrvh+wNj
ycJU+wHbpUlccXls4xkn5lyoXB8rinvew3lZMqqsJ2/pOWbXRCauhrxf8efZ
yVKMfexSRj9DbZl41OXXoQ5dGC8aGLYulbHP6IneK38x63XQlJcFAY1s/srR
Ye+jocy6N5GwZs6JmSQ/dlE1KnAtE7/9OFn2+edbVbRv0dpGF0Z+qoK5UXxX
AV7d2FRQKq6GLl/am/aBaY+zZ/0cWyY+Bz1wvlg9b3nrXWYfh3MTjMuH8Quv
Jren44X47KwfjF8yHXbXfF53JcrfFrBsFOMv/x8awVXe
    "], {{
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[Polygon3DBox[{{1601, 1198, 1808}}]]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{Polygon3DBox[{{1597, 732, 1598}, {728, 727, 726}}],
          Polygon3DBox[{{1808, 1199, 739, 1601}, {1598, 732, 1196, 1806}, {
          1196, 732, 726, 1193}, {1208, 746, 739, 1199}, {1192, 730, 746, 
          1208}}], 
         Polygon3DBox[{{1193, 726, 727, 730, 1192}, {1596, 728, 726, 732, 
          1597}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{784, 788, 783}, {1806, 1194, 1598}}], 
         Polygon3DBox[{{1233, 792, 791, 1234}, {1696, 792, 1233, 1817}, {1234,
           791, 787, 1230}, {1229, 784, 734, 1195}, {731, 734, 784, 783}}], 
         Polygon3DBox[{{1598, 1194, 1195, 734, 1597}, {1230, 787, 788, 784, 
          1229}, {1597, 734, 731, 733, 1596}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[Polygon3DBox[{{1817, 1236, 1696}}]]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[Polygon3DBox[{{1571, 1150, 1790}}]]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{Polygon3DBox[{{716, 715, 670}, {1602, 671, 1687}}],
          Polygon3DBox[{{1687, 671, 1145, 1807}, {1179, 714, 678, 1149}, {
          1180, 713, 714, 1179}, {1790, 1149, 678, 1571}, {1145, 671, 670, 
          1146}}], Polygon3DBox[{{1146, 670, 715, 713, 1180}}], 
         Polygon3DBox[{{1808, 1198, 716, 670, 671, 1602}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1807, 1197, 1687}, {1199, 668, 1208}, {664, 663, 
          662}, {729, 663, 659}, {1599, 660, 1606}, {1193, 729, 1196}}], 
         Polygon3DBox[{{1606, 660, 1142, 1810}, {1142, 660, 659, 1143}, {1208,
           668, 662, 1192}, {668, 669, 664, 662}, {1144, 664, 669, 1200}}], 
         Polygon3DBox[{{1602, 669, 668, 1199, 1808}, {1687, 1197, 1200, 669, 
          1602}, {1192, 662, 663, 729, 1193}, {1143, 659, 663, 664, 1144}}], 
         Polygon3DBox[{{1806, 1196, 729, 659, 660, 1599}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1194, 735, 1195}, {754, 760, 782}, {762, 760, 758}, {
          1810, 1205, 1606}, {1234, 793, 1233}, {1695, 1235, 1818}}], 
         Polygon3DBox[{{1212, 754, 736, 1206}, {1230, 762, 793, 1234}, {1817, 
          1233, 793, 1616}, {1195, 735, 782, 1229}, {735, 736, 754, 782}}], 
         Polygon3DBox[{{1229, 782, 760, 762, 1230}, {1606, 1205, 1206, 736, 
          1599}, {1599, 736, 735, 1194, 1806}, {1615, 758, 1215, 1235, 
          1695}, {1616, 793, 762, 758, 1615}, {1215, 758, 760, 754, 
          1212}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{Polygon3DBox[{{526, 525, 524}, {1695, 756, 1615}}],
          Polygon3DBox[{{1615, 756, 757, 1616}, {1818, 1213, 756, 1695}, {
          1220, 773, 790, 1232}, {1691, 773, 1220, 1814}, {1231, 526, 757, 
          1214}, {1214, 757, 756, 1213}}], 
         Polygon3DBox[{{1232, 790, 525, 526, 1231}}], 
         Polygon3DBox[{{1616, 757, 526, 524, 1236, 1817}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[Polygon3DBox[{{1814, 1221, 1691}}]]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[Polygon3DBox[{{1570, 1147, 1789}}]]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{Polygon3DBox[{{1563, 643, 1681}}], 
         Polygon3DBox[{{1681, 643, 1137, 1787}, {1789, 1148, 673, 1570}, {
          1562, 640, 643, 1563}, {1137, 643, 640, 1141}}], 
         Polygon3DBox[{{1141, 640, 674, 673, 1148}, {1790, 1150, 674, 640, 
          1562}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{644, 645, 641}, {1146, 672, 1145}, {1603, 701, 
          1683}, {1787, 1136, 1681}, {672, 645, 648}, {1149, 642, 1179}}], 
         Polygon3DBox[{{1683, 701, 1165, 1794}, {1179, 642, 641, 1180}, {1600,
           737, 701, 1603}, {1562, 642, 1149, 1790}, {1165, 701, 737, 1250}, {
          1250, 737, 648, 1135}}], 
         Polygon3DBox[{{1563, 644, 641, 642, 1562}, {1180, 641, 645, 672, 
          1146}, {1681, 1136, 1134, 644, 1563}, {1135, 648, 645, 644, 1134}}],
          Polygon3DBox[{{1807, 1145, 672, 648, 737, 1600}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1143, 661, 1142}, {1604, 741, 1605}, {1794, 1166, 
          1683}, {667, 666, 665}, {1197, 738, 1200}, {661, 666, 745}}], 
         Polygon3DBox[{{1200, 738, 665, 1144}, {1203, 741, 745, 1207}, {1600, 
          738, 1197, 1807}, {1605, 741, 1203, 1809}}], 
         Polygon3DBox[{{1207, 745, 666, 667, 1204}, {1603, 667, 665, 738, 
          1600}, {1144, 665, 666, 661, 1143}, {1683, 1166, 1204, 667, 1603}}],
          Polygon3DBox[{{1810, 1142, 661, 745, 741, 1604}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1809, 1201, 1605}, {798, 759, 753}, {1205, 744, 
          1206}, {761, 759, 763}, {1694, 1227, 1825}, {1215, 761, 1235}}], 
         Polygon3DBox[{{1206, 744, 753, 1212}, {744, 742, 798, 753}, {1237, 
          798, 742, 1202}}], 
         Polygon3DBox[{{1818, 1235, 761, 763, 1614}, {1212, 753, 759, 761, 
          1215}, {1228, 763, 759, 798, 1237}, {1605, 1201, 1202, 742, 1604}, {
          1604, 742, 744, 1205, 1810}, {1614, 763, 1228, 1227, 1694}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{779, 777, 789}, {1692, 1223, 1824}, {1213, 755, 
          1214}, {1694, 785, 1614}, {1232, 774, 1220}}], 
         Polygon3DBox[{{1609, 774, 777, 1610}, {1814, 1220, 774, 1609}, {1825,
           1240, 785, 1694}, {1241, 794, 785, 1240}, {1214, 755, 789, 1231}, {
          755, 794, 779, 789}, {1224, 779, 794, 1241}}], 
         Polygon3DBox[{{1231, 789, 777, 774, 1232}}], 
         Polygon3DBox[{{1614, 785, 794, 755, 1213, 1818}, {1610, 777, 779, 
          1224, 1223, 1692}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{Polygon3DBox[{{772, 771, 770}, {1692, 778, 1610}}],
          Polygon3DBox[{{1259, 775, 778, 1258}, {1222, 772, 775, 1259}, {1610,
           778, 775, 1609}, {1690, 764, 1217, 1813}, {1824, 1258, 778, 
          1692}}], Polygon3DBox[{{1217, 764, 771, 772, 1222}}], 
         Polygon3DBox[{{1609, 775, 772, 770, 1221, 1814}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[Polygon3DBox[{{1813, 1216, 1690}}]]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[Polygon3DBox[{{1568, 1140, 1788}}]]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{Polygon3DBox[{{1162, 698, 1161}}], 
         Polygon3DBox[{{1161, 698, 652, 1139}, {1566, 653, 652, 1567}, {1567, 
          652, 698, 1581}, {1581, 698, 1162, 1793}, {1789, 1147, 658, 1569}, {
          1139, 652, 653, 1138}}], 
         Polygon3DBox[{{1569, 658, 657, 653, 1566}, {1788, 1138, 653, 657, 
          1568}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1159, 696, 1160}, {1566, 655, 1569}}], 
         Polygon3DBox[{{1141, 654, 651, 1137}, {1569, 655, 1148, 1789}, {1581,
           651, 654, 1567}, {1567, 654, 655, 1566}, {1148, 655, 654, 1141}, {
          1564, 650, 649, 1565}, {1164, 649, 650, 1163}, {1160, 696, 649, 
          1164}, {1565, 649, 696, 1583}, {1583, 696, 1159, 1795}}], 
         Polygon3DBox[{{1787, 1137, 651, 650, 1564}, {1793, 1163, 650, 651, 
          1581}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1136, 647, 1134}, {702, 703, 699}, {1582, 700, 
          1584}, {1250, 702, 1165}}], 
         Polygon3DBox[{{1564, 647, 1136, 1787}, {1584, 700, 1167, 1796}, {
          1583, 703, 646, 1565}, {1134, 647, 646, 1135}, {1167, 700, 699, 
          1168}, {1565, 646, 647, 1564}}], 
         Polygon3DBox[{{1135, 646, 703, 702, 1250}, {1795, 1168, 699, 703, 
          1583}}], Polygon3DBox[{{1794, 1165, 702, 699, 700, 1582}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1166, 686, 1204}, {1796, 1169, 1584}, {1594, 692, 
          1595}, {688, 687, 686}, {1207, 743, 1203}, {743, 687, 690}}], 
         Polygon3DBox[{{1595, 692, 1156, 1804}, {1156, 692, 690, 1155}}], 
         Polygon3DBox[{{1582, 688, 686, 1166, 1794}, {1204, 686, 687, 743, 
          1207}, {1584, 1169, 1154, 688, 1582}, {1155, 690, 687, 688, 1154}}],
          Polygon3DBox[{{1809, 1203, 743, 690, 692, 1594}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1622, 1245, 1821}, {1228, 786, 1227}, {1201, 740, 
          1202}, {797, 796, 795}, {1804, 1187, 1595}}], 
         Polygon3DBox[{{1825, 1227, 786, 1624}, {1202, 740, 795, 1237}, {1248,
           797, 723, 1188}, {1624, 786, 796, 1623}, {740, 723, 797, 795}}], 
         Polygon3DBox[{{1594, 723, 740, 1201, 1809}, {1595, 1187, 1188, 723, 
          1594}, {1237, 795, 796, 786, 1228}}], 
         Polygon3DBox[{{1623, 796, 797, 1248, 1245, 1622}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1240, 803, 1241}, {1620, 1242, 1820}, {824, 804, 
          803}, {1622, 813, 1623}, {1224, 780, 1223}}], 
         Polygon3DBox[{{1623, 813, 815, 1624}, {1260, 824, 815, 1249}, {1249, 
          815, 813, 1247}, {1619, 780, 804, 1618}, {1824, 1223, 780, 1619}, {
          1821, 1247, 813, 1622}}], 
         Polygon3DBox[{{1241, 803, 804, 780, 1224}}], 
         Polygon3DBox[{{1624, 815, 824, 803, 1240, 1825}, {1618, 804, 824, 
          1260, 1242, 1620}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1620, 805, 1618}, {822, 823, 821}, {1258, 821, 
          1259}, {1608, 766, 1627}}], 
         Polygon3DBox[{{1618, 805, 806, 1619}, {1253, 806, 805, 1243}, {1626, 
          776, 823, 1628}, {1222, 776, 766, 1217}, {1627, 766, 776, 1626}, {
          1262, 822, 806, 1253}, {1820, 1243, 805, 1620}, {1813, 1217, 766, 
          1608}}], 
         Polygon3DBox[{{1628, 823, 822, 1262, 1826}, {1259, 821, 823, 776, 
          1222}}], Polygon3DBox[{{1619, 806, 822, 821, 1258, 1824}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{Polygon3DBox[{{1263, 825, 1261}}], 
         Polygon3DBox[{{1608, 765, 1216, 1813}, {1255, 817, 825, 1263}, {1628,
           825, 817, 1626}, {1256, 816, 817, 1255}, {1626, 817, 816, 1627}, {
          1826, 1261, 825, 1628}}], 
         Polygon3DBox[{{1699, 819, 816, 1256, 1823}, {1627, 816, 819, 765, 
          1608}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[Polygon3DBox[{{1823, 1257, 1699}}]]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[Polygon3DBox[{{1486, 1067, 1760}}]]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{Polygon3DBox[{{1083, 545, 1082}}], 
         Polygon3DBox[{{1485, 507, 545, 1507}, {1082, 545, 507, 1066}, {1507, 
          545, 1083, 1768}, {1484, 508, 507, 1485}, {1788, 1140, 516, 1488}, {
          1066, 507, 508, 1065}}], 
         Polygon3DBox[{{1760, 1065, 508, 515, 1486}, {1488, 516, 515, 508, 
          1484}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1507, 511, 1485}, {1139, 656, 1161}, {1484, 509, 
          1488}, {656, 510, 517}, {510, 511, 517}, {1059, 502, 1060}, {1793, 
          1162, 1682}}], 
         Polygon3DBox[{{1060, 502, 546, 1084}, {1580, 546, 502, 1572}, {1572, 
          502, 1059, 1791}, {1488, 509, 1138, 1788}}], 
         Polygon3DBox[{{1485, 511, 510, 509, 1484}, {1138, 509, 510, 656, 
          1139}}], Polygon3DBox[{{1768, 1084, 546, 517, 511, 1507}}], 
         Polygon3DBox[{{1682, 1162, 1161, 656, 517, 546, 1580}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1573, 684, 1574}, {1164, 677, 1160}, {1795, 1159, 
          1578}, {1580, 697, 1682}, {677, 676, 675}}], 
         Polygon3DBox[{{1682, 697, 1163, 1793}, {1157, 684, 693, 1158}, {1158,
           693, 675, 1151}, {1572, 676, 697, 1580}, {1577, 693, 684, 1573}, {
          1574, 684, 1157, 1792}}], 
         Polygon3DBox[{{1163, 697, 676, 677, 1164}, {1791, 1151, 675, 676, 
          1572}}], Polygon3DBox[{{1578, 1159, 1160, 677, 675, 693, 1577}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1792, 1152, 1574}, {1577, 694, 1578}, {1576, 691, 
          1684}}], 
         Polygon3DBox[{{1684, 691, 1170, 1797}, {1170, 691, 683, 1153}, {1573,
           685, 694, 1577}, {1168, 694, 685, 1167}, {1575, 683, 691, 1576}, {
          1578, 694, 1168, 1795}}], 
         Polygon3DBox[{{1796, 1167, 685, 683, 1575}}], 
         Polygon3DBox[{{1574, 1152, 1153, 683, 685, 1573}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{681, 680, 679}, {1169, 689, 1154}, {1797, 1173, 
          1684}}], 
         Polygon3DBox[{{1154, 689, 679, 1155}, {1575, 689, 1169, 1796}, {1155,
           679, 680, 1156}, {1804, 1156, 680, 1685}}], 
         Polygon3DBox[{{1576, 681, 679, 689, 1575}, {1685, 680, 681, 1176, 
          1800}, {1684, 1173, 1176, 681, 1576}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1191, 725, 1189}, {1248, 814, 1245}, {1187, 722, 
          1188}, {1800, 1175, 1685}, {725, 749, 722}, {814, 749, 747}}], 
         Polygon3DBox[{{1688, 747, 1209, 1811}}], 
         Polygon3DBox[{{1188, 722, 749, 814, 1248}, {1209, 747, 749, 725, 
          1191}, {1821, 1245, 814, 747, 1688}}], 
         Polygon3DBox[{{1685, 1175, 1189, 725, 722, 1187, 1804}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1239, 801, 1246}, {801, 799, 812}, {1811, 1210, 
          1688}, {1260, 810, 1242}, {1247, 812, 1249}}], 
         Polygon3DBox[{{1820, 1242, 810, 1621}, {1621, 810, 799, 1697}}], 
         Polygon3DBox[{{1249, 812, 799, 810, 1260}, {1697, 799, 801, 1239, 
          1819}}], 
         Polygon3DBox[{{1688, 1210, 1246, 801, 812, 1247, 1821}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1243, 808, 1253}, {1251, 811, 1244}, {1819, 1238, 
          1697}, {809, 818, 808}, {1629, 826, 1630}}], 
         Polygon3DBox[{{1630, 826, 818, 1698}, {1826, 1262, 826, 1629}, {1252,
           809, 811, 1251}}], 
         Polygon3DBox[{{1253, 808, 818, 826, 1262}, {1698, 818, 809, 1252, 
          1822}, {1697, 1238, 1244, 811, 1621}}], 
         Polygon3DBox[{{1621, 811, 809, 808, 1243, 1820}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{390, 385, 384}, {1423, 391, 1422}, {1822, 1254, 
          1698}, {1026, 386, 1030}, {1420, 384, 1660}, {1629, 1261, 1826}, {
          385, 390, 820}, {1263, 820, 1255}}], 
         Polygon3DBox[{{1823, 1256, 391, 1423}}], 
         Polygon3DBox[{{1698, 1254, 1030, 386, 1630}, {1422, 391, 390, 384, 
          1420}, {1255, 820, 390, 391, 1256}}], 
         Polygon3DBox[{{1660, 384, 385, 386, 1026, 1747}}], 
         Polygon3DBox[{{1630, 386, 385, 820, 1263, 1261, 1629}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1011, 352, 1012}, {1747, 1027, 1660}}], 
         Polygon3DBox[{{1420, 352, 388, 1422}, {1423, 392, 1257, 1823}, {1029,
           388, 352, 1011}}], 
         Polygon3DBox[{{1422, 388, 387, 392, 1423}, {1661, 387, 388, 1029, 
          1748}, {1660, 1027, 1012, 352, 1420}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[Polygon3DBox[{{1748, 1028, 1661}}]]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[Polygon3DBox[{{1503, 1078, 1766}}]]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{Polygon3DBox[{{1085, 532, 1074}, {548, 541, 538}}],
          Polygon3DBox[{{1502, 531, 532, 1504}, {1760, 1067, 514, 1487}, {
          1074, 532, 531, 1075}, {1504, 532, 1085, 1769}, {1487, 514, 547, 
          1509}, {1501, 538, 531, 1502}}], 
         Polygon3DBox[{{1509, 547, 548, 538, 1501}}], 
         Polygon3DBox[{{1766, 1075, 531, 538, 541, 1503}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1509, 513, 1487}, {1048, 437, 1049}, {1666, 1047, 
          1767}, {1504, 540, 1502}, {1768, 1083, 1671}, {539, 540, 543}}], 
         Polygon3DBox[{{1506, 543, 437, 1450}, {1065, 513, 512, 1066}, {1487, 
          513, 1065, 1760}, {1501, 512, 513, 1509}, {1066, 512, 539, 1082}}], 
         Polygon3DBox[{{1450, 437, 1048, 1047, 1666}, {1502, 540, 539, 512, 
          1501}}], 
         Polygon3DBox[{{1769, 1049, 437, 543, 540, 1504}, {1671, 1083, 1082, 
          539, 543, 1506}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1499, 1076, 1765}, {501, 439, 499}, {1791, 1059, 
          1481}, {1506, 544, 1671}, {1081, 542, 1079}, {1666, 439, 1450}}], 
         Polygon3DBox[{{1084, 544, 501, 1060}, {1671, 544, 1084, 1768}, {1482,
           499, 542, 1505}}], 
         Polygon3DBox[{{1505, 542, 1081, 1076, 1499}, {1450, 439, 501, 544, 
          1506}}], 
         Polygon3DBox[{{1767, 1079, 542, 499, 439, 1666}, {1481, 1059, 1060, 
          501, 499, 1482}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1482, 500, 1481}, {1080, 533, 1077}, {695, 537, 
          534}, {1158, 695, 1157}, {537, 536, 534}, {1499, 536, 1505}, {1592, 
          1181, 1801}}], Polygon3DBox[{{1481, 500, 1151, 1791}}], 
         Polygon3DBox[{{1151, 500, 537, 695, 1158}, {1579, 533, 1080, 1181, 
          1592}, {1505, 536, 537, 500, 1482}}], 
         Polygon3DBox[{{1792, 1157, 695, 534, 533, 1579}, {1765, 1077, 533, 
          534, 536, 1499}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{Polygon3DBox[{{1152, 682, 1153}}], 
         Polygon3DBox[{{1801, 1171, 707, 1592}, {1579, 682, 1152, 1792}, {
          1153, 682, 707, 1170}, {1592, 707, 682, 1579}}], 
         Polygon3DBox[{{1797, 1170, 707, 1171, 1798}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1173, 706, 1176}, {1178, 708, 1172}, {708, 710, 
          706}}], Polygon3DBox[{{1589, 710, 1177, 1803}, {1177, 710, 708, 
          1178}}], Polygon3DBox[{{1800, 1176, 706, 710, 1589}}], 
         Polygon3DBox[{{1798, 1172, 708, 706, 1173, 1797}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1183, 718, 1182}, {1175, 711, 1189}, {1607, 750, 
          1612}, {718, 748, 724}}], 
         Polygon3DBox[{{1589, 711, 1175, 1800}, {1189, 711, 724, 1191}, {1612,
           750, 748, 1611}, {1811, 1209, 750, 1607}}], 
         Polygon3DBox[{{1191, 724, 748, 750, 1209}, {1611, 748, 718, 1183, 
          1815}}], Polygon3DBox[{{1803, 1182, 718, 724, 711, 1589}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1219, 769, 1218}, {1815, 1225, 1611}, {1210, 751, 
          1246}, {1617, 802, 1625}}], 
         Polygon3DBox[{{1819, 1239, 802, 1617}, {1625, 802, 781, 1693}, {1607,
           751, 1210, 1811}}], 
         Polygon3DBox[{{1612, 769, 781, 751, 1607}, {1611, 1225, 1218, 769, 
          1612}, {1246, 751, 781, 802, 1239}, {1693, 781, 769, 1219, 
          1816}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{369, 368, 367}, {1238, 800, 1244}, {1408, 367, 
          1659}, {1013, 356, 1014}, {1421, 370, 1409}, {1816, 1226, 1693}, {
          368, 369, 807}}], 
         Polygon3DBox[{{1244, 800, 807, 1251}, {1822, 1252, 370, 1421}, {1617,
           800, 1238, 1819}}], 
         Polygon3DBox[{{1693, 1226, 1014, 356, 1625}, {1251, 807, 369, 370, 
          1252}, {1409, 370, 369, 367, 1408}}], 
         Polygon3DBox[{{1659, 367, 368, 356, 1013, 1744}, {1625, 356, 368, 
          807, 800, 1617}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1419, 350, 1403}, {1402, 348, 1658}, {1254, 389, 
          1030}, {1744, 1021, 1659}, {349, 359, 348}, {1015, 360, 1017}}], 
         Polygon3DBox[{{1421, 389, 1254, 1822}, {1408, 360, 359, 1409}, {1747,
           1026, 350, 1419}}], 
         Polygon3DBox[{{1403, 350, 349, 348, 1402}, {1409, 359, 349, 389, 
          1421}, {1030, 389, 349, 350, 1026}, {1659, 1021, 1017, 360, 1408}}],
          Polygon3DBox[{{1658, 348, 359, 360, 1015, 1743}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1027, 351, 1012}, {1743, 1016, 1658}, {1006, 338, 
          1020}, {1400, 347, 1401}, {1395, 331, 1656}, {332, 337, 331}}], 
         Polygon3DBox[{{1402, 338, 337, 1403}, {1011, 333, 347, 1029}, {1401, 
          347, 333, 1396}, {1419, 351, 1027, 1747}, {1748, 1029, 347, 1400}}],
          Polygon3DBox[{{1658, 1016, 1020, 338, 1402}, {1403, 337, 332, 351, 
          1419}, {1396, 333, 332, 331, 1395}, {1012, 351, 332, 333, 1011}}], 
         Polygon3DBox[{{1656, 331, 337, 338, 1006, 1741}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{353, 334, 340}, {1741, 1007, 1656}, {1008, 335, 
          1010}}], 
         Polygon3DBox[{{1401, 345, 346, 1400}, {1400, 346, 1028, 1748}, {1395,
           335, 334, 1396}}], 
         Polygon3DBox[{{1396, 334, 353, 345, 1401}, {1656, 1007, 1010, 335, 
          1395}}], Polygon3DBox[{{1657, 340, 334, 335, 1008, 1742}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[Polygon3DBox[{{1742, 1009, 1657}}]]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[Polygon3DBox[{{1477, 1056, 1759}}]]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1473, 1055, 1758}, {1058, 494, 1057}, {453, 454, 
          452}}], Polygon3DBox[{{1456, 452, 494, 1478}, {1455, 450, 451, 
          1454}, {1766, 1078, 450, 1455}}], 
         Polygon3DBox[{{1454, 451, 453, 452, 1456}, {1478, 494, 1058, 1055, 
          1473}}], Polygon3DBox[{{1759, 1057, 494, 452, 454, 1477}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1473, 493, 1478}, {1454, 449, 1455}, {1665, 1045, 
          1756}, {1769, 1085, 1508}, {435, 436, 434}}], 
         Polygon3DBox[{{434, 436, 493, 431}, {1455, 449, 1075, 1766}, {1478, 
          493, 436, 1456}, {1075, 449, 435, 1074}, {1451, 434, 431, 1449}}], 
         Polygon3DBox[{{1758, 1046, 431, 493, 1473}, {1456, 436, 435, 449, 
          1454}, {1449, 431, 1046, 1045, 1665}}], 
         Polygon3DBox[{{1508, 1085, 1074, 435, 434, 1451}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1053, 455, 1050}, {1451, 440, 1508}, {441, 433, 
          456}, {1665, 433, 1449}, {1668, 1054, 1757}, {1048, 438, 1047}}], 
         Polygon3DBox[{{1508, 440, 1049, 1769}, {1457, 456, 455, 1458}, {1767,
           1047, 438, 1460}}], 
         Polygon3DBox[{{1049, 440, 441, 438, 1048}, {1449, 433, 441, 440, 
          1451}, {1458, 455, 1053, 1054, 1668}, {1460, 438, 441, 456, 1457}}],
          Polygon3DBox[{{1756, 1050, 455, 456, 433, 1665}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{458, 459, 460}, {1457, 457, 1460}, {1668, 459, 
          1458}, {1667, 1051, 1762}, {1081, 535, 1076}}], 
         Polygon3DBox[{{1460, 457, 1079, 1767}, {1765, 1076, 535, 1500}}], 
         Polygon3DBox[{{1500, 535, 458, 460, 1459}, {1459, 460, 1052, 1051, 
          1667}, {1757, 1052, 460, 459, 1668}, {1079, 457, 458, 535, 1081}, {
          1458, 459, 458, 457, 1457}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1061, 503, 1062}, {1080, 527, 1181}, {1459, 461, 
          1500}}], 
         Polygon3DBox[{{1801, 1181, 527, 1495}, {1500, 461, 1077, 1765}, {
          1496, 503, 1061, 1763}, {1667, 463, 461, 1459}}], 
         Polygon3DBox[{{1077, 461, 463, 527, 1080}, {1495, 527, 463, 503, 
          1496}, {1762, 1062, 503, 463, 1667}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{Polygon3DBox[{{1587, 705, 1585}, {528, 529, 530}}],
          Polygon3DBox[{{1763, 1072, 529, 1496}, {1073, 530, 529, 1072}, {
          1798, 1171, 705, 1587}, {1496, 529, 528, 1495}, {1586, 530, 1073, 
          1799}}], 
         Polygon3DBox[{{1585, 705, 528, 530, 1586}, {1495, 528, 705, 1171, 
          1801}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1803, 1177, 1591}, {1586, 704, 1585}, {1190, 709, 
          1174}, {1587, 1172, 1798}}], 
         Polygon3DBox[{{1590, 709, 1190, 1805}}], 
         Polygon3DBox[{{1799, 1174, 709, 704, 1586}, {1585, 704, 1178, 1172, 
          1587}}], Polygon3DBox[{{1591, 1177, 1178, 704, 709, 1590}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{721, 752, 717}, {1590, 712, 1591}, {1613, 752, 
          1689}, {1185, 721, 1184}}], 
         Polygon3DBox[{{1182, 712, 717, 1183}, {1591, 712, 1182, 1803}}], 
         Polygon3DBox[{{1815, 1183, 717, 752, 1613}, {1689, 752, 721, 1185, 
          1812}}], Polygon3DBox[{{1805, 1184, 721, 717, 712, 1590}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{381, 380, 767}, {380, 381, 379}, {1416, 379, 1417}, {
          1812, 1211, 1689}, {1225, 768, 1218}}], 
         Polygon3DBox[{{1613, 768, 1225, 1815}, {1218, 768, 767, 1219}, {1418,
           380, 379, 1416}}], 
         Polygon3DBox[{{1816, 1219, 767, 380, 1418}, {1417, 379, 381, 1025, 
          1746}}], Polygon3DBox[{{1689, 1211, 1025, 381, 767, 768, 1613}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1407, 357, 1406}, {1226, 354, 1014}, {1022, 373, 
          1023}, {1746, 1024, 1417}}], 
         Polygon3DBox[{{1418, 354, 1226, 1816}, {1744, 1013, 357, 1407}, {
          1406, 357, 355, 1405}}], 
         Polygon3DBox[{{1417, 1024, 1023, 373, 1416}, {1416, 373, 355, 354, 
          1418}, {1405, 355, 373, 1022, 1745}, {1014, 354, 355, 357, 
          1013}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{363, 365, 364}, {1404, 361, 1443}, {1745, 1018, 
          1405}, {1439, 364, 1440}, {1021, 362, 1017}}], 
         Polygon3DBox[{{1407, 362, 1021, 1744}, {1743, 1015, 361, 1404}}], 
         Polygon3DBox[{{1405, 1018, 1019, 365, 1406}, {1406, 365, 363, 362, 
          1407}, {1443, 361, 363, 364, 1439}, {1440, 364, 365, 1019, 1755}, {
          1017, 362, 363, 361, 1015}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1442, 423, 1664}, {1016, 358, 1020}, {1397, 339, 
          1399}, {1755, 1042, 1440}, {424, 426, 423}, {1043, 421, 1041}}], 
         Polygon3DBox[{{1439, 421, 426, 1443}, {1741, 1006, 339, 1397}, {1404,
           358, 1016, 1743}}], 
         Polygon3DBox[{{1440, 1042, 1041, 421, 1439}, {1020, 358, 424, 339, 
          1006}, {1399, 339, 424, 423, 1442}, {1443, 426, 424, 358, 1404}}], 
         Polygon3DBox[{{1664, 423, 426, 421, 1043, 1754}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1754, 1044, 1664}, {1429, 406, 1430}, {1398, 342, 
          1448}, {1007, 336, 1010}, {343, 344, 406}}], 
         Polygon3DBox[{{1397, 336, 1007, 1741}, {1742, 1008, 342, 1398}, {
          1442, 409, 344, 1399}, {1431, 409, 1033, 1749}}], 
         Polygon3DBox[{{1399, 344, 343, 336, 1397}, {1448, 342, 343, 406, 
          1429}, {1010, 336, 343, 342, 1008}, {1430, 406, 344, 409, 1431}, {
          1664, 1044, 1033, 409, 1442}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1031, 400, 1032}, {430, 408, 411}, {1431, 407, 
          1430}}], 
         Polygon3DBox[{{1032, 400, 407, 1034}, {1749, 1034, 407, 1431}, {1448,
           429, 341, 1398}, {1398, 341, 1009, 1742}}], 
         Polygon3DBox[{{1430, 407, 400, 408, 1429}, {1429, 408, 430, 429, 
          1448}}], Polygon3DBox[{{1662, 411, 408, 400, 1031, 1750}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[Polygon3DBox[{{1750, 1035, 1662}}]]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{Polygon3DBox[{{1470, 489, 1471}, {484, 485, 483}}],
          Polygon3DBox[{{1464, 471, 476, 1466}, {1759, 1056, 470, 1465}, {
          1471, 489, 1104, 1774}, {1105, 487, 488, 1106}, {483, 485, 488, 
          487}, {1465, 470, 471, 1464}, {1104, 489, 487, 1105}}], 
         Polygon3DBox[{{1472, 483, 487, 489, 1470}, {1466, 476, 484, 483, 
          1472}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1470, 474, 1472}, {1514, 1092, 1771}, {473, 474, 
          472}, {1058, 492, 1055}, {1464, 469, 1465}, {473, 480, 475}}], 
         Polygon3DBox[{{1466, 475, 469, 1464}, {1474, 492, 480, 1467}, {1774, 
          1111, 481, 1471}, {1465, 469, 1057, 1759}, {1468, 472, 481, 1469}, {
          1758, 1055, 492, 1474}}], 
         Polygon3DBox[{{1472, 474, 473, 475, 1466}, {1469, 481, 1111, 1092, 
          1514}, {1467, 480, 473, 472, 1468}, {1471, 481, 472, 474, 1470}}], 
         Polygon3DBox[{{1057, 469, 475, 480, 492, 1058}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{478, 443, 477}, {1514, 482, 1469}, {1512, 1087, 
          1770}, {478, 479, 491}, {1467, 477, 1474}, {1046, 432, 1045}}], 
         Polygon3DBox[{{1453, 432, 443, 1452}, {1475, 491, 490, 1476}, {1469, 
          482, 479, 1468}, {491, 479, 482, 490}, {1756, 1045, 432, 1453}}], 
         Polygon3DBox[{{1468, 479, 478, 477, 1467}, {1452, 443, 478, 491, 
          1475}, {1476, 490, 1091, 1087, 1512}, {1771, 1091, 490, 482, 
          1514}}], Polygon3DBox[{{1474, 477, 443, 432, 1046, 1758}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1672, 1088, 1775}, {1452, 442, 1453}, {1512, 446, 
          1476}, {448, 447, 445}, {1053, 467, 1054}}], 
         Polygon3DBox[{{445, 447, 446, 444}, {1453, 442, 1050, 1756}, {1476, 
          446, 447, 1475}, {1461, 445, 444, 1462}, {1757, 1054, 467, 1463}}], 
         Polygon3DBox[{{1050, 442, 448, 467, 1053}, {1462, 444, 1086, 1088, 
          1672}, {1475, 447, 448, 442, 1452}, {1770, 1086, 444, 446, 1512}, {
          1463, 467, 448, 445, 1461}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1672, 466, 1462}, {1052, 462, 1051}, {1461, 464, 
          1463}, {465, 466, 495}, {1676, 1114, 1780}, {465, 468, 464}}], 
         Polygon3DBox[{{1483, 462, 468, 1479}, {1762, 1051, 462, 1483}}], 
         Polygon3DBox[{{1480, 495, 1115, 1114, 1676}, {1462, 466, 465, 464, 
          1461}, {1479, 468, 465, 495, 1480}, {1775, 1115, 495, 466, 1672}}], 
         Polygon3DBox[{{1463, 464, 468, 462, 1052, 1757}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1479, 496, 1483}, {1676, 498, 1480}, {1497, 504, 1498}
          }], 
         Polygon3DBox[{{1483, 496, 1062, 1762}, {1780, 1064, 498, 1676}, {
          1763, 1061, 504, 1497}, {1063, 497, 498, 1064}}], 
         Polygon3DBox[{{1498, 504, 497, 1063, 1764}, {1062, 496, 497, 504, 
          1061}, {1480, 498, 497, 496, 1479}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1588, 520, 1489}, {1497, 1072, 1763}, {1069, 518, 
          1070}}], 
         Polygon3DBox[{{1799, 1073, 520, 1588}, {1764, 1070, 518, 1498}}], 
         Polygon3DBox[{{1489, 520, 518, 1069, 1761}}], 
         Polygon3DBox[{{1498, 518, 520, 1073, 1072, 1497}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1071, 521, 1068}, {1588, 1174, 1799}, {1805, 1190, 
          1686}}], 
         Polygon3DBox[{{1761, 1068, 521, 1489}, {1593, 521, 1071, 1802}}], 
         Polygon3DBox[{{1686, 1190, 1174, 1588, 1489, 521, 1593}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1593, 720, 1686}, {101, 100, 719}, {100, 101, 99}}], 
         Polygon3DBox[{{1686, 720, 1184, 1805}, {1184, 720, 719, 1185}, {1414,
           100, 99, 1415}, {1037, 99, 101, 1039}, {1415, 99, 1037, 1751}}], 
         Polygon3DBox[{{1812, 1185, 719, 100, 1414}}], 
         Polygon3DBox[{{1802, 1039, 101, 719, 720, 1593}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1211, 382, 1025}, {1411, 375, 1434}, {376, 383, 
          375}}], Polygon3DBox[{{1414, 382, 1211, 1812}, {1410, 376, 375, 
          1411}, {1751, 1036, 383, 1415}}], 
         Polygon3DBox[{{1746, 1025, 382, 376, 1410}, {1415, 383, 376, 382, 
          1414}, {1434, 375, 383, 1036, 1753}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1753, 1040, 1434}, {1412, 374, 1413}, {372, 263, 
          259}, {1024, 371, 1023}, {1361, 259, 1646}}], 
         Polygon3DBox[{{1410, 371, 1024, 1746}, {1745, 1022, 374, 1412}}], 
         Polygon3DBox[{{1411, 263, 372, 371, 1410}, {1434, 1040, 971, 263, 
          1411}, {1646, 259, 263, 971, 1731}, {1023, 371, 372, 374, 1022}, {
          1413, 374, 372, 259, 1361}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{378, 418, 377}, {1441, 418, 1438}, {1018, 366, 
          1019}, {378, 269, 276}, {1368, 276, 1650}, {1731, 972, 1646}}], 
         Polygon3DBox[{{1413, 377, 366, 1412}, {1412, 366, 1018, 1745}}], 
         Polygon3DBox[{{1438, 418, 378, 276, 1368}, {1646, 972, 976, 269, 
          1361}, {1361, 269, 378, 377, 1413}, {1650, 276, 269, 976, 1735}}], 
         Polygon3DBox[{{1755, 1019, 366, 377, 418, 1441}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1445, 427, 1447}, {1735, 983, 1650}, {1444, 425, 
          1446}, {1042, 420, 1041}, {422, 419, 427}}], 
         Polygon3DBox[{{1754, 1043, 425, 1444}, {1394, 277, 984, 1740}, {1441,
           420, 1042, 1755}, {1368, 277, 419, 1438}}], 
         Polygon3DBox[{{1041, 420, 422, 425, 1043}, {1446, 425, 422, 427, 
          1445}, {1650, 983, 984, 277, 1368}, {1447, 427, 419, 277, 1394}, {
          1438, 419, 422, 420, 1441}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1432, 397, 1425}, {1044, 410, 1033}, {1424, 393, 
          1428}, {395, 428, 393}, {1394, 330, 1447}, {395, 397, 403}}], 
         Polygon3DBox[{{1001, 329, 330, 1003}, {1446, 403, 410, 1444}, {1392, 
          329, 1001, 1739}, {1740, 1003, 330, 1394}, {1444, 410, 1044, 
          1754}}], 
         Polygon3DBox[{{1428, 393, 428, 329, 1392}, {1447, 330, 329, 428, 
          1445}, {1425, 397, 395, 393, 1424}, {1445, 428, 395, 403, 1446}}], 
         Polygon3DBox[{{1749, 1033, 410, 403, 397, 1432}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1437, 415, 1435}, {1034, 399, 1032}, {1392, 327, 
          1428}, {396, 398, 415}, {396, 402, 394}, {1426, 401, 1427}}], 
         Polygon3DBox[{{988, 294, 327, 1002}, {1432, 399, 1034, 1749}, {1373, 
          294, 988, 1736}, {1427, 401, 402, 1436}, {1750, 1031, 401, 1426}, {
          1739, 1002, 327, 1392}, {1425, 394, 399, 1432}}], 
         Polygon3DBox[{{1435, 415, 398, 294, 1373}, {1436, 402, 396, 415, 
          1437}, {1428, 327, 294, 398, 1424}, {1424, 398, 396, 394, 1425}}], 
         Polygon3DBox[{{1032, 399, 394, 402, 401, 1031}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{417, 414, 413}, {1373, 291, 1435}, {993, 310, 992}}], 
         Polygon3DBox[{{1427, 404, 405, 1426}, {992, 310, 291, 989}, {1426, 
          405, 1035, 1750}, {1736, 989, 291, 1373}, {1436, 416, 404, 1427}}], 
         Polygon3DBox[{{1435, 291, 310, 414, 1437}, {1437, 414, 417, 416, 
          1436}, {1038, 413, 414, 310, 993}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1105, 585, 1104}, {587, 588, 586}, {1532, 602, 
          1537}}], 
         Polygon3DBox[{{1528, 585, 588, 1526}, {1527, 593, 600, 1531}, {1774, 
          1104, 585, 1528}, {1531, 600, 602, 1532}}], 
         Polygon3DBox[{{1526, 588, 587, 593, 1527}}], 
         Polygon3DBox[{{1106, 589, 586, 588, 585, 1105}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{591, 594, 606}, {1526, 590, 1528}, {1532, 601, 
          1531}, {591, 592, 590}, {1534, 1108, 1773}, {1111, 564, 1092}}], 
         Polygon3DBox[{{1531, 601, 594, 1527}, {1771, 1092, 564, 1515}, {606, 
          594, 601, 607}, {1515, 564, 592, 1535}, {1536, 606, 607, 1538}}], 
         Polygon3DBox[{{1535, 592, 591, 606, 1536}, {1538, 607, 1109, 1108, 
          1534}, {1527, 594, 591, 590, 1526}}], 
         Polygon3DBox[{{1528, 590, 592, 564, 1111, 1774}, {1537, 1110, 1109, 
          607, 601, 1532}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{559, 553, 558}, {1673, 1089, 1785}, {1534, 603, 
          1538}, {1535, 558, 1515}, {1091, 552, 1087}, {559, 561, 560}}], 
         Polygon3DBox[{{1538, 603, 561, 1536}, {1770, 1087, 552, 1511}, {1773,
           1107, 603, 1534}, {1511, 552, 553, 1510}}], 
         Polygon3DBox[{{1510, 553, 559, 560, 1513}, {1513, 560, 1090, 1089, 
          1673}, {1090, 560, 561, 603, 1107}, {1536, 561, 559, 558, 1535}}], 
         Polygon3DBox[{{1515, 558, 553, 552, 1091, 1771}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{550, 563, 635}, {550, 551, 549}, {1673, 563, 1513}, {
          1510, 549, 1511}, {1086, 557, 1088}}], 
         Polygon3DBox[{{1542, 557, 551, 1558}, {1559, 635, 1132, 1786}, {1775,
           1088, 557, 1542}}], 
         Polygon3DBox[{{1513, 563, 550, 549, 1510}, {1558, 551, 550, 635, 
          1559}, {1785, 1132, 635, 563, 1673}}], 
         Polygon3DBox[{{1511, 549, 551, 557, 1086, 1770}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1115, 614, 1114}, {615, 637, 627}, {1130, 636, 
          1131}}], 
         Polygon3DBox[{{1559, 636, 637, 1558}, {1558, 637, 615, 1542}, {1552, 
          627, 1123, 1781}, {1780, 1114, 614, 1550}, {1786, 1131, 636, 
          1559}}], 
         Polygon3DBox[{{1542, 615, 614, 1115, 1775}, {1123, 627, 637, 636, 
          1130}, {1550, 614, 615, 627, 1552}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1670, 505, 1491}, {1125, 628, 1122}}], 
         Polygon3DBox[{{1124, 626, 628, 1125}, {1552, 628, 626, 1550}, {1781, 
          1122, 628, 1552}, {1064, 506, 505, 1063}, {1764, 1063, 505, 1670}, {
          1491, 505, 506, 1490}}], 
         Polygon3DBox[{{1550, 626, 506, 1064, 1780}, {1490, 506, 626, 1124, 
          1782}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1492, 523, 1493}, {1490, 522, 1491}, {625, 523, 
          522}, {1120, 625, 1121}, {1761, 1069, 1669}, {1670, 1070, 1764}}], 
         Polygon3DBox[{{1782, 1121, 625, 522, 1490}, {1493, 523, 625, 1120, 
          1779}}], 
         Polygon3DBox[{{1669, 1069, 1070, 1670, 1491, 522, 523, 1492}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{207, 213, 201}, {213, 207, 486}, {939, 201, 940}, {
          1802, 1071, 1494}, {1492, 519, 1669}}], 
         Polygon3DBox[{{940, 201, 213, 951}, {1669, 519, 1068, 1761}, {1493, 
          486, 519, 1492}}], 
         Polygon3DBox[{{1333, 207, 201, 939, 1721}, {1779, 951, 213, 486, 
          1493}}], Polygon3DBox[{{1494, 1071, 1068, 519, 486, 207, 1333}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1333, 206, 1494}, {943, 205, 944}, {1751, 1037, 
          1663}}], 
         Polygon3DBox[{{1433, 205, 943, 1752}, {1494, 206, 1039, 1802}}], 
         Polygon3DBox[{{1721, 944, 205, 206, 1333}}], 
         Polygon3DBox[{{1663, 1037, 1039, 206, 205, 1433}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1433, 412, 1663}, {1363, 270, 1648}}], 
         Polygon3DBox[{{1362, 271, 270, 1363}, {978, 270, 271, 977}, {1648, 
          270, 978, 1733}, {1663, 412, 1036, 1751}}], 
         Polygon3DBox[{{1753, 1036, 412, 271, 1362}, {1752, 977, 271, 412, 
          1433}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1360, 264, 1647}, {261, 267, 264}, {1733, 979, 
          1648}, {1040, 260, 971}}], 
         Polygon3DBox[{{1362, 260, 1040, 1753}, {1357, 261, 264, 1360}}], 
         Polygon3DBox[{{1647, 264, 267, 973, 1732}, {1731, 971, 260, 261, 
          1357}, {1648, 979, 973, 267, 1363}, {1363, 267, 261, 260, 
          1362}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1345, 239, 1348}, {972, 262, 976}, {245, 244, 238}, {
          1732, 974, 1647}}], 
         Polygon3DBox[{{1347, 245, 238, 1346}, {1346, 238, 239, 1345}, {1357, 
          262, 972, 1731}, {1348, 239, 963, 1728}}], 
         Polygon3DBox[{{1735, 976, 262, 245, 1347}, {1647, 974, 962, 244, 
          1360}, {963, 239, 238, 244, 962}, {1360, 244, 245, 262, 
          1357}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{241, 236, 234}, {1728, 964, 1348}, {241, 326, 240}, {
          983, 246, 984}, {1393, 326, 1391}, {1390, 234, 1644}}], 
         Polygon3DBox[{{1346, 240, 246, 1347}, {1347, 246, 983, 1735}}], 
         Polygon3DBox[{{1391, 326, 241, 234, 1390}, {1345, 236, 241, 240, 
          1346}, {1348, 964, 960, 236, 1345}, {1644, 234, 236, 960, 1727}}], 
         Polygon3DBox[{{1740, 984, 246, 240, 326, 1393}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{297, 298, 296}, {1727, 961, 1644}, {297, 295, 325}, {
          1374, 295, 1375}, {1003, 328, 1001}, {1376, 296, 1377}}], 
         Polygon3DBox[{{1393, 328, 1003, 1740}, {1391, 325, 328, 1393}}], 
         Polygon3DBox[{{1644, 961, 991, 298, 1390}, {1390, 298, 297, 325, 
          1391}, {1375, 295, 297, 296, 1376}, {1377, 296, 298, 991, 1737}}], 
         Polygon3DBox[{{1739, 1001, 328, 325, 295, 1374}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{287, 280, 278}, {287, 288, 286}, {1380, 279, 1371}, {
          1372, 288, 1383}, {1002, 292, 988}, {1737, 990, 1377}}], 
         Polygon3DBox[{{1375, 286, 292, 1374}, {1382, 278, 279, 1380}, {1374, 
          292, 1002, 1739}}], 
         Polygon3DBox[{{1377, 990, 985, 280, 1376}, {1376, 280, 287, 286, 
          1375}, {986, 279, 278, 280, 985}, {1383, 288, 287, 278, 1382}, {
          1371, 279, 986, 987, 1651}}], 
         Polygon3DBox[{{1736, 988, 292, 286, 288, 1372}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1651, 289, 1371}, {993, 311, 1038}, {308, 313, 307}, {
          989, 293, 992}}], 
         Polygon3DBox[{{1372, 293, 989, 1736}, {1383, 307, 293, 1372}, {1371, 
          289, 303, 1380}, {1380, 303, 309, 1382}}], 
         Polygon3DBox[{{1382, 309, 308, 307, 1383}}], 
         Polygon3DBox[{{992, 293, 307, 313, 312, 311, 993}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{597, 598, 599}, {1520, 580, 1521}, {1109, 605, 
          1108}}], 
         Polygon3DBox[{{1530, 595, 580, 1520}, {1773, 1108, 605, 1533}, {1533,
           605, 598, 1529}}], 
         Polygon3DBox[{{1110, 599, 598, 605, 1109}, {1529, 598, 597, 595, 
          1530}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1520, 581, 1530}, {1090, 562, 1089}, {1529, 596, 
          1533}, {583, 584, 596}}], 
         Polygon3DBox[{{1103, 583, 581, 1100}, {1785, 1089, 562, 1555}, {1555,
           562, 604, 1554}, {1107, 604, 562, 1090}, {1554, 604, 584, 1525}}], 
         Polygon3DBox[{{1521, 1101, 1100, 581, 1520}, {1530, 581, 583, 596, 
          1529}, {1525, 584, 583, 1103, 1772}}], 
         Polygon3DBox[{{1533, 596, 584, 604, 1107, 1773}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1680, 638, 1560}, {634, 639, 633}, {1545, 1119, 
          1776}, {1554, 633, 1555}, {1093, 568, 1094}}], 
         Polygon3DBox[{{1772, 1094, 568, 1525}, {1786, 1132, 638, 1680}, {
          1133, 634, 568, 1093}, {1560, 638, 639, 1561}}], 
         Polygon3DBox[{{1525, 568, 634, 633, 1554}}], 
         Polygon3DBox[{{1555, 633, 639, 638, 1132, 1785}, {1561, 639, 634, 
          1133, 1119, 1545}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1680, 1131, 1786}, {1545, 617, 1561}, {1551, 608, 
          1539}}], 
         Polygon3DBox[{{1539, 608, 610, 1540}, {1130, 610, 608, 1123}, {1776, 
          1118, 617, 1545}, {1561, 617, 616, 1560}, {1781, 1123, 608, 1551}, {
          1117, 616, 617, 1118}}], 
         Polygon3DBox[{{1540, 610, 616, 1117, 1777}}], 
         Polygon3DBox[{{1560, 616, 610, 1130, 1131, 1680}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1551, 1122, 1781}, {1112, 611, 1113}, {1678, 624, 
          1549}}], 
         Polygon3DBox[{{1125, 623, 624, 1124}, {1540, 611, 609, 1539}, {1777, 
          1113, 611, 1540}, {1549, 624, 623, 1548}, {1116, 609, 611, 1112}, {
          1782, 1124, 624, 1678}}], 
         Polygon3DBox[{{1548, 623, 609, 1116, 1778}}], 
         Polygon3DBox[{{1539, 609, 623, 1125, 1122, 1551}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1548, 622, 1549}, {158, 216, 622}, {906, 155, 907}, {
          1779, 1120, 1677}, {216, 158, 155}, {1678, 1121, 1782}}], 
         Polygon3DBox[{{907, 155, 158, 909}}], 
         Polygon3DBox[{{1336, 216, 155, 906, 1724}, {1778, 909, 158, 622, 
          1548}}], 
         Polygon3DBox[{{1677, 1120, 1121, 1678, 1549, 622, 216, 1336}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1336, 217, 1677}, {203, 214, 204}, {941, 204, 942}, {
          1721, 939, 1330}}], 
         Polygon3DBox[{{942, 204, 214, 950}, {1677, 217, 951, 1779}}], 
         Polygon3DBox[{{951, 217, 214, 203, 940}, {1329, 203, 204, 941, 
          1722}, {1724, 950, 214, 217, 1336}, {1330, 939, 940, 203, 
          1329}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1329, 202, 1330}, {843, 38, 844}, {1752, 943, 1332}}],
          Polygon3DBox[{{1269, 38, 843, 1701}, {844, 38, 43, 852}, {1330, 202,
           944, 1721}, {1271, 43, 38, 1269}}], 
         Polygon3DBox[{{1722, 852, 43, 202, 1329}}], 
         Polygon3DBox[{{1332, 943, 944, 202, 43, 1271}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{Polygon3DBox[{{1271, 44, 1332}, {1359, 45, 1635}}],
          Polygon3DBox[{{1269, 39, 44, 1271}, {977, 44, 39, 978}, {1364, 41, 
          45, 1359}, {1635, 45, 845, 1706}, {1332, 44, 977, 1752}, {845, 45, 
          41, 842}}], 
         Polygon3DBox[{{1733, 978, 39, 41, 1364}, {1701, 842, 41, 39, 
          1269}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1706, 859, 1635}, {1649, 980, 1734}, {266, 268, 
          273}, {979, 265, 973}}], 
         Polygon3DBox[{{1358, 266, 273, 1366}, {981, 273, 268, 975}, {1364, 
          265, 979, 1733}}], 
         Polygon3DBox[{{1366, 273, 981, 980, 1649}, {1635, 859, 975, 268, 
          1359}, {1732, 973, 265, 266, 1358}, {1359, 268, 266, 265, 
          1364}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{Polygon3DBox[{{231, 275, 226}, {974, 243, 962}}], 
         Polygon3DBox[{{1358, 243, 974, 1732}, {1342, 226, 959, 1726}, {1366, 
          242, 243, 1358}, {959, 226, 275, 982}, {1734, 982, 275, 1649}, {
          1343, 231, 226, 1342}, {962, 243, 242, 963}}], 
         Polygon3DBox[{{1649, 275, 231, 242, 1366}, {1728, 963, 242, 231, 
          1343}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{964, 232, 960}, {229, 237, 228}, {970, 230, 958}, {
          1344, 237, 1354}, {229, 230, 233}, {1355, 233, 1386}}], 
         Polygon3DBox[{{1342, 228, 232, 1343}, {1343, 232, 964, 1728}}], 
         Polygon3DBox[{{1354, 237, 229, 233, 1355}, {1386, 233, 230, 970, 
          1738}}], 
         Polygon3DBox[{{1727, 960, 232, 228, 237, 1344}, {1726, 958, 230, 229,
           228, 1342}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1369, 285, 1370}, {300, 285, 258}, {1379, 299, 
          1381}, {1738, 995, 1386}, {961, 235, 991}}], 
         Polygon3DBox[{{1344, 235, 961, 1727}, {996, 299, 300, 994}, {1354, 
          257, 235, 1344}, {1652, 997, 1005, 1655}, {1355, 258, 257, 1354}}], 
         Polygon3DBox[{{1737, 991, 235, 257, 1378}, {1378, 257, 258, 285, 
          1369}, {1381, 299, 996, 997, 1652}, {1370, 285, 300, 299, 1379}}], 
         Polygon3DBox[{{1386, 995, 994, 300, 258, 1355}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{301, 290, 284}, {283, 281, 282}, {305, 306, 304}, {
          985, 281, 986}, {1652, 304, 1381}}], 
         Polygon3DBox[{{1655, 305, 304, 1652}, {1378, 282, 990, 1737}, {1369, 
          283, 282, 1378}, {1370, 284, 283, 1369}, {990, 282, 281, 985}}], 
         Polygon3DBox[{{1381, 304, 306, 302, 1379}, {1379, 302, 301, 284, 
          1370}}], Polygon3DBox[{{986, 281, 283, 284, 290, 987}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{555, 556, 554}, {1522, 582, 1523}, {1674, 566, 
          1516}}], 
         Polygon3DBox[{{1772, 1103, 566, 1674}, {1100, 570, 566, 1103}, {1516,
           566, 570, 1517}, {1517, 570, 556, 1524}}], 
         Polygon3DBox[{{1101, 554, 556, 570, 1100}, {1524, 556, 555, 582, 
          1522}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1517, 565, 1516}, {571, 567, 565}, {1097, 577, 
          1098}, {1133, 620, 1119}, {1674, 1094, 1772}}], 
         Polygon3DBox[{{1776, 1119, 620, 1544}, {1544, 620, 569, 1543}, {1099,
           578, 577, 1097}, {1522, 577, 578, 1524}, {1093, 569, 620, 1133}, {
          1129, 571, 578, 1099}, {1543, 569, 567, 1557}}], 
         Polygon3DBox[{{1557, 567, 571, 1129, 1784}, {1524, 578, 571, 565, 
          1517}, {1523, 1102, 1098, 577, 1522}}], 
         Polygon3DBox[{{1516, 565, 567, 569, 1093, 1094, 1674}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1126, 632, 1127}, {1543, 619, 1544}, {1675, 613, 
          1541}, {629, 621, 619}}], 
         Polygon3DBox[{{1541, 613, 618, 1546}, {1118, 618, 613, 1117}, {1128, 
          629, 632, 1126}, {1777, 1117, 613, 1675}, {1784, 1127, 632, 1557}, {
          1546, 618, 621, 1547}}], 
         Polygon3DBox[{{1557, 632, 629, 619, 1543}, {1547, 621, 629, 1128, 
          1783}}], Polygon3DBox[{{1544, 619, 621, 618, 1118, 1776}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{903, 140, 926}, {1546, 612, 1541}, {918, 171, 919}, {
          142, 141, 140}, {1675, 1113, 1777}, {1641, 145, 1312}, {141, 142, 
          612}}], Polygon3DBox[{{1312, 145, 144, 1311}, {1778, 1116, 145, 
          1641}, {1783, 919, 171, 1547}, {1112, 144, 145, 1116}}], 
         Polygon3DBox[{{1547, 171, 141, 612, 1546}, {926, 140, 141, 171, 
          918}}], Polygon3DBox[{{1311, 144, 142, 140, 903, 1716}}], 
         Polygon3DBox[{{1541, 612, 142, 144, 1112, 1113, 1675}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1724, 906, 1317}, {1316, 157, 1335}, {895, 129, 
          902}, {1641, 909, 1778}}], 
         Polygon3DBox[{{894, 127, 129, 895}, {1311, 129, 127, 1312}, {1716, 
          902, 129, 1311}}], 
         Polygon3DBox[{{1335, 157, 127, 894, 1723}, {1317, 906, 907, 157, 
          1316}}], Polygon3DBox[{{1312, 127, 157, 907, 909, 1641}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1722, 941, 1331}, {1316, 156, 1317}, {948, 212, 
          947}}], Polygon3DBox[{{1723, 947, 212, 1335}, {949, 215, 212, 
          948}, {851, 58, 215, 949}, {1275, 58, 851, 1704}, {1317, 156, 950, 
          1724}}], 
         Polygon3DBox[{{1331, 941, 942, 58, 1275}, {950, 156, 215, 58, 942}, {
          1335, 212, 215, 156, 1316}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1275, 57, 1331}, {1701, 843, 1633}, {847, 48, 853}, {
          42, 49, 48}}], 
         Polygon3DBox[{{853, 48, 49, 850}, {1331, 57, 852, 1722}}], 
         Polygon3DBox[{{852, 57, 49, 42, 844}, {1704, 850, 49, 57, 1275}, {
          1633, 843, 844, 42, 1270}, {1270, 42, 48, 847, 1702}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1270, 40, 1633}, {47, 46, 115}, {892, 115, 885}, {
          1640, 893, 1714}}], 
         Polygon3DBox[{{1633, 40, 842, 1701}, {885, 115, 46, 846}, {1706, 845,
           47, 1282}}], 
         Polygon3DBox[{{1702, 846, 46, 40, 1270}, {842, 40, 46, 47, 845}}], 
         Polygon3DBox[{{1282, 47, 115, 892, 893, 1640}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{859, 69, 975}, {872, 88, 873}, {981, 274, 980}}], 
         Polygon3DBox[{{1282, 69, 859, 1706}, {873, 88, 120, 891}, {1365, 120,
           88, 1353}, {1734, 980, 274, 1367}, {1353, 88, 872, 1730}, {1640, 
          122, 69, 1282}}], 
         Polygon3DBox[{{1367, 274, 122, 120, 1365}, {1714, 891, 120, 122, 
          1640}, {975, 69, 122, 274, 981}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{966, 247, 967}, {1341, 227, 1356}, {1365, 272, 
          1367}}], 
         Polygon3DBox[{{967, 247, 252, 969}, {1367, 272, 982, 1734}, {1726, 
          959, 227, 1341}, {1351, 252, 247, 1349}, {1349, 247, 966, 1729}, {
          1353, 256, 272, 1365}}], 
         Polygon3DBox[{{982, 272, 256, 227, 959}, {1356, 227, 256, 252, 
          1351}, {1730, 969, 252, 256, 1353}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1341, 958, 1726}, {1351, 253, 1356}, {250, 251, 
          255}, {968, 251, 965}, {1000, 318, 998}}], 
         Polygon3DBox[{{1385, 255, 318, 1387}, {1349, 249, 253, 1351}, {1389, 
          249, 250, 1384}, {1384, 250, 255, 1385}}], 
         Polygon3DBox[{{1738, 970, 253, 249, 1389}, {1356, 253, 970, 958, 
          1341}, {998, 318, 255, 251, 968}, {1387, 318, 1000, 1004, 1654}}], 
         Polygon3DBox[{{1729, 965, 251, 250, 249, 1349}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{994, 317, 996}, {1654, 320, 1387}, {315, 317, 316}}], 
         Polygon3DBox[{{1385, 314, 315, 1384}, {1384, 315, 316, 1389}, {997, 
          314, 319, 1005}, {1389, 316, 995, 1738}, {995, 316, 317, 994}}], 
         Polygon3DBox[{{1387, 320, 319, 314, 1385}, {996, 317, 315, 314, 
          997}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1102, 576, 1098}, {1679, 631, 1553}}], 
         Polygon3DBox[{{1099, 579, 631, 1129}, {1553, 631, 579, 1556}, {1097, 
          574, 579, 1099}, {1784, 1129, 631, 1679}, {1519, 574, 572, 1518}, {
          1556, 579, 574, 1519}}], 
         Polygon3DBox[{{1098, 576, 572, 574, 1097}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1186, 575, 1096}, {174, 175, 630}, {1679, 1127, 
          1784}, {1556, 630, 1553}, {1643, 170, 1321}}], 
         Polygon3DBox[{{1126, 177, 170, 1128}, {921, 175, 174, 920}, {1321, 
          170, 177, 1324}, {1783, 1128, 170, 1643}, {920, 174, 575, 1186}}], 
         Polygon3DBox[{{1518, 1095, 1096, 575, 1519}, {1519, 575, 174, 630, 
          1556}, {1324, 177, 175, 921, 1719}}], 
         Polygon3DBox[{{1553, 630, 175, 177, 1126, 1127, 1679}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1643, 919, 1783}, {1310, 143, 1313}, {914, 161, 
          915}}], Polygon3DBox[{{1719, 915, 161, 1324}, {918, 138, 139, 
          926}, {1324, 161, 160, 1321}, {1313, 143, 139, 1308}, {913, 160, 
          161, 914}, {901, 138, 160, 913}, {1716, 903, 143, 1310}, {926, 139, 
          143, 903}}], Polygon3DBox[{{1308, 139, 138, 901, 1715}}], 
         Polygon3DBox[{{1321, 160, 138, 918, 919, 1643}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1723, 894, 1305}, {1310, 902, 1716}, {896, 131, 
          897}}], Polygon3DBox[{{910, 146, 131, 896}, {1715, 897, 131, 
          1308}, {1304, 130, 911, 1717}, {911, 130, 146, 910}, {1308, 131, 
          146, 1313}}], Polygon3DBox[{{1305, 894, 895, 130, 1304}}], 
         Polygon3DBox[{{1313, 146, 130, 895, 902, 1310}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{904, 149, 905}, {949, 56, 851}, {149, 152, 151}, {
          1304, 128, 1305}}], 
         Polygon3DBox[{{1305, 128, 947, 1723}, {849, 55, 152, 908}, {1704, 
          851, 56, 1274}, {1272, 55, 849, 1703}, {947, 128, 151, 948}, {1274, 
          56, 55, 1272}, {908, 152, 149, 904}}], 
         Polygon3DBox[{{1717, 905, 149, 151, 128, 1304}, {948, 151, 152, 55, 
          56, 949}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1702, 847, 1634}, {1297, 883, 1712}, {1272, 53, 
          1274}, {59, 54, 117}, {889, 117, 888}}], 
         Polygon3DBox[{{888, 117, 54, 848}, {1274, 53, 850, 1704}}], 
         Polygon3DBox[{{850, 53, 54, 59, 853}, {1703, 848, 54, 53, 1272}, {
          1634, 847, 853, 59, 1276}}], 
         Polygon3DBox[{{1276, 59, 117, 889, 883, 1297}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{892, 121, 893}, {1286, 871, 1709}, {119, 113, 116}, {
          887, 116, 886}, {1276, 50, 1634}}], 
         Polygon3DBox[{{1297, 111, 50, 1276}, {846, 50, 111, 885}, {1714, 893,
           121, 1301}, {886, 116, 113, 882}, {1301, 121, 119, 1300}, {1634, 
          50, 846, 1702}}], Polygon3DBox[{{1712, 882, 113, 111, 1297}}], 
         Polygon3DBox[{{1300, 119, 116, 887, 871, 1286}, {885, 111, 113, 119, 
          121, 892}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{881, 105, 880}, {1730, 872, 1289}, {1300, 118, 
          1301}}], 
         Polygon3DBox[{{1296, 105, 881, 1711}, {891, 118, 85, 873}, {1286, 85,
           118, 1300}, {1288, 87, 105, 1296}, {1301, 118, 891, 1714}, {880, 
          105, 87, 870}}], Polygon3DBox[{{1709, 870, 87, 85, 1286}}], 
         Polygon3DBox[{{1289, 872, 873, 85, 87, 1288}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1288, 89, 1289}, {1729, 966, 1645}, {879, 102, 878}}],
          Polygon3DBox[{{876, 97, 95, 877}, {1289, 89, 969, 1730}, {969, 89, 
          106, 967}, {878, 102, 97, 876}, {1350, 95, 97, 1352}, {1352, 97, 
          102, 1388}, {1296, 106, 89, 1288}}], 
         Polygon3DBox[{{1388, 102, 879, 999, 1653}, {1711, 877, 95, 106, 1296}
          }], Polygon3DBox[{{1645, 966, 967, 106, 95, 1350}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1350, 248, 1645}, {1000, 324, 1004}}], 
         Polygon3DBox[{{965, 248, 254, 968}, {968, 254, 321, 998}, {1645, 248,
           965, 1729}, {1388, 321, 254, 1352}, {1352, 254, 248, 1350}}], 
         Polygon3DBox[{{998, 321, 322, 324, 1000}, {1653, 323, 322, 321, 
          1388}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{165, 163, 173}, {1095, 573, 1096}, {1642, 163, 
          1319}, {920, 173, 921}}], 
         Polygon3DBox[{{1322, 172, 176, 1323}, {1320, 165, 172, 1322}, {1319, 
          163, 165, 1320}}], 
         Polygon3DBox[{{1186, 172, 165, 173, 920}, {1719, 921, 173, 163, 
          1642}, {1096, 573, 176, 172, 1186}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{917, 169, 916}, {913, 137, 901}, {1302, 125, 1303}, {
          1642, 915, 1719}}], 
         Polygon3DBox[{{927, 164, 166, 928}, {1322, 169, 166, 1320}, {929, 
          162, 164, 927}, {1320, 166, 164, 1319}, {1309, 137, 125, 1302}, {
          1715, 901, 137, 1309}, {928, 166, 169, 917}}], 
         Polygon3DBox[{{914, 162, 125, 137, 913}, {1323, 922, 916, 169, 
          1322}, {1303, 125, 162, 929, 1720}}], 
         Polygon3DBox[{{1319, 164, 162, 914, 915, 1642}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{900, 133, 898}, {1314, 153, 1315}, {132, 124, 133}, {
          1302, 123, 1309}, {910, 159, 911}, {899, 126, 923}}], 
         Polygon3DBox[{{1309, 123, 897, 1715}, {1720, 923, 126, 1303}, {1717, 
          911, 159, 1318}, {1318, 159, 153, 1314}}], 
         Polygon3DBox[{{897, 123, 124, 132, 896}, {898, 133, 124, 126, 899}, {
          896, 132, 153, 159, 910}, {1303, 126, 124, 123, 1302}}], 
         Polygon3DBox[{{1315, 153, 132, 133, 900, 1718}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{930, 190, 937}, {150, 148, 190}, {938, 154, 912}, {
          1314, 147, 1318}, {908, 51, 849}}], 
         Polygon3DBox[{{1273, 51, 72, 1284}, {1318, 147, 905, 1717}, {1703, 
          849, 51, 1273}, {1718, 912, 154, 1315}, {1284, 72, 861, 1708}}], 
         Polygon3DBox[{{1315, 154, 148, 147, 1314}, {937, 190, 148, 154, 
          938}, {904, 150, 72, 51, 908}, {905, 147, 148, 150, 904}, {861, 72, 
          150, 190, 930}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1284, 52, 1273}, {858, 61, 854}, {114, 62, 61}, {889, 
          110, 883}, {63, 62, 71}, {855, 63, 856}}], 
         Polygon3DBox[{{848, 52, 71, 888}, {1273, 52, 848, 1703}, {1298, 110, 
          114, 1299}, {1712, 883, 110, 1298}}], 
         Polygon3DBox[{{1299, 114, 61, 858, 1713}, {854, 61, 62, 63, 855}}], 
         Polygon3DBox[{{888, 71, 62, 114, 110, 889}, {1708, 856, 63, 71, 52, 
          1284}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{109, 108, 107}, {890, 109, 884}, {868, 82, 869}, {
          1299, 112, 1298}, {887, 84, 871}, {91, 108, 82}, {1290, 874, 
          1710}}], 
         Polygon3DBox[{{1298, 112, 882, 1712}, {1709, 871, 84, 1287}, {882, 
          112, 107, 886}, {1287, 84, 91, 1292}}], 
         Polygon3DBox[{{869, 82, 108, 109, 890}}], 
         Polygon3DBox[{{1713, 884, 109, 107, 112, 1299}, {886, 107, 108, 91, 
          84, 887}, {1292, 91, 82, 868, 874, 1290}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{865, 78, 866}, {98, 76, 74}, {1639, 94, 1294}, {1292, 
          86, 1287}}], 
         Polygon3DBox[{{1287, 86, 870, 1709}, {1290, 90, 86, 1292}, {866, 78, 
          74, 863}, {1294, 94, 98, 1295}, {870, 86, 90, 880}, {1711, 881, 94, 
          1639}, {863, 74, 76, 862}}], 
         Polygon3DBox[{{1295, 98, 74, 78, 1293}, {1293, 78, 865, 875, 1638}, {
          1710, 862, 76, 90, 1290}}], 
         Polygon3DBox[{{880, 90, 76, 98, 94, 881}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1639, 877, 1711}, {1295, 96, 1294}, {879, 103, 999}}],
          Polygon3DBox[{{1638, 93, 92, 1293}, {876, 96, 92, 878}, {1293, 92, 
          96, 1295}}], Polygon3DBox[{{1294, 96, 876, 877, 1639}}], 
         Polygon3DBox[{{878, 92, 93, 104, 103, 879}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{182, 186, 180}, {1327, 183, 1325}, {922, 168, 916}, {
          927, 185, 929}}], 
         Polygon3DBox[{{916, 168, 167, 917}, {1720, 929, 185, 1328}, {1328, 
          185, 183, 1327}}], 
         Polygon3DBox[{{917, 167, 186, 182, 928}, {928, 182, 183, 185, 927}, {
          1325, 183, 182, 180, 1326}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{134, 179, 221}, {954, 221, 957}, {956, 184, 924}, {
          1327, 178, 1328}, {1718, 900, 1307}}], 
         Polygon3DBox[{{899, 134, 135, 898}, {1328, 178, 923, 1720}, {1306, 
          135, 953, 1725}}], 
         Polygon3DBox[{{923, 178, 179, 134, 899}, {953, 135, 134, 221, 954}, {
          1307, 900, 898, 135, 1306}, {1326, 925, 924, 184, 1325}, {1325, 184,
           179, 178, 1327}, {957, 221, 179, 184, 956}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{936, 199, 955}, {933, 187, 935}, {930, 67, 861}, {199,
           188, 200}, {1306, 136, 1307}, {189, 188, 187}}], 
         Polygon3DBox[{{912, 136, 200, 938}, {1281, 67, 68, 1280}, {1708, 861,
           67, 1281}, {1307, 136, 912, 1718}, {1280, 68, 860, 1707}}], 
         Polygon3DBox[{{937, 189, 68, 67, 930}, {938, 200, 188, 189, 937}, {
          935, 187, 188, 199, 936}, {860, 68, 189, 187, 933}}], 
         Polygon3DBox[{{1725, 955, 199, 200, 136, 1306}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{3, 11, 60}, {12, 11, 10}, {840, 10, 831}, {828, 3, 
          827}, {1631, 839, 1700}, {1280, 64, 1281}, {1713, 858, 1279}}], 
         Polygon3DBox[{{1281, 64, 856, 1708}, {856, 64, 60, 855}}], 
         Polygon3DBox[{{855, 60, 11, 12, 854}, {1279, 858, 854, 12, 1266}, {
          831, 10, 11, 3, 828}}], 
         Polygon3DBox[{{1266, 12, 10, 840, 839, 1631}, {1707, 827, 3, 60, 64, 
          1280}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{77, 28, 32}, {836, 26, 835}, {838, 32, 837}, {26, 28, 
          27}, {868, 83, 874}, {1266, 36, 1279}}], 
         Polygon3DBox[{{884, 36, 35, 890}, {1631, 35, 36, 1266}, {890, 35, 27,
           869}, {1279, 36, 884, 1713}, {1291, 83, 77, 1285}, {1710, 874, 83, 
          1291}, {1636, 864, 867, 1637}}], 
         Polygon3DBox[{{837, 32, 28, 26, 836}}], 
         Polygon3DBox[{{1285, 77, 32, 838, 864, 1636}, {1700, 835, 26, 27, 35,
           1631}, {869, 27, 28, 77, 83, 868}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{Polygon3DBox[{{1285, 75, 1291}, {865, 79, 875}}], 
         Polygon3DBox[{{1636, 73, 75, 1285}, {862, 75, 73, 863}, {866, 80, 79,
           865}, {1637, 81, 73, 1636}, {1291, 75, 862, 1710}}], 
         Polygon3DBox[{{863, 73, 81, 80, 866}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{925, 181, 924}, {954, 222, 953}, {219, 225, 218}, {
          1340, 220, 1337}}], 
         Polygon3DBox[{{1339, 222, 220, 1340}, {924, 181, 224, 956}, {1725, 
          953, 222, 1339}}], 
         Polygon3DBox[{{956, 224, 225, 219, 957}, {1337, 220, 219, 218, 
          1338}, {957, 219, 220, 222, 954}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{196, 198, 208}, {1340, 223, 1339}, {946, 208, 945}, {
          933, 70, 860}, {932, 193, 934}, {194, 198, 197}}], 
         Polygon3DBox[{{955, 223, 197, 936}, {1277, 66, 857, 1705}, {1283, 70,
           66, 1277}, {1707, 860, 70, 1283}, {931, 194, 193, 932}, {1339, 223,
           955, 1725}}], 
         Polygon3DBox[{{936, 197, 198, 196, 935}, {935, 196, 66, 70, 933}, {
          1338, 952, 934, 193, 1337}, {945, 208, 198, 194, 931}, {857, 66, 
          196, 208, 946}}], 
         Polygon3DBox[{{1337, 193, 194, 197, 223, 1340}}]}]}, 
      {RGBColor[1, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{840, 34, 839}, {16, 8, 1}, {9, 8, 7}, {829, 4, 830}, {
          834, 16, 833}, {1277, 2, 1283}}], 
         Polygon3DBox[{{4, 37, 9, 7}, {1700, 839, 34, 1268}, {830, 4, 7, 
          832}, {1283, 2, 827, 1707}, {827, 2, 1, 828}, {1268, 34, 37, 
          1267}}], 
         Polygon3DBox[{{832, 7, 8, 16, 834}, {831, 9, 37, 34, 840}, {828, 1, 
          8, 9, 831}}], 
         Polygon3DBox[{{1705, 833, 16, 1, 2, 1277}, {1267, 37, 4, 829, 841, 
          1632}}]}]}, 
      {RGBColor[0, 1, 0], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{24, 23, 22}, {31, 30, 29}, {1267, 25, 1268}, {838, 29,
           864}}], 
         Polygon3DBox[{{1268, 25, 835, 1700}, {835, 25, 22, 836}, {864, 29, 
          30, 867}}], 
         Polygon3DBox[{{837, 33, 31, 29, 838}, {836, 22, 23, 33, 837}, {1632, 
          24, 22, 25, 1267}}]}]}, 
      {RGBColor[0, 1, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1264, 20, 1265}, {952, 195, 934}, {210, 209, 211}, {
          946, 65, 857}}], 
         Polygon3DBox[{{1278, 65, 20, 1264}, {932, 191, 192, 931}, {934, 195, 
          191, 932}, {1705, 857, 65, 1278}}], 
         Polygon3DBox[{{1265, 20, 210, 211, 1334}, {945, 210, 20, 65, 946}, {
          931, 192, 209, 210, 945}}]}]}, 
      {RGBColor[0, 0, 1], EdgeForm[None], 
       GraphicsGroup3DBox[{
         Polygon3DBox[{{15, 14, 13}, {1264, 19, 1278}, {829, 5, 841}, {1334, 
          17, 1265}}], 
         Polygon3DBox[{{832, 21, 6, 830}, {830, 6, 5, 829}, {1278, 19, 833, 
          1705}, {833, 19, 13, 834}}], Polygon3DBox[{{834, 13, 14, 21, 832}}],
          Polygon3DBox[{{1265, 17, 18, 15, 13, 19, 1264}}]}]}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ktIFWEYBuDfc45tKkW76KbyaKtEpZtmGKlJUmLlvQShFC0IbFEqEblp
07aojSJoQbVRWhhILZLkBFkEUWioYaLShRKkrUGPtHiY93u/mTkzh4m3Xqnt
TAohvCCZDWwjhVTSSaPQ8qPjB8Z5yQRj0RAO283IC3zlGQP6fP2o/JzHPKFP
n6t/Kh+JhFAZC2HFXCKXcsr8x3xczmUP1bpVXYVcRwNNNOqTPHCzfJYaqji5
fg219t+93DJLzDHNFFl2Cfd8LSeY4BWF+nn9DtfvJofI+rPo3+ujcoxr5iy/
fUe+yw1ztnlIfkCvOcf8SJ7kDW95x4hdmd2i/JMZpvlMif6L4yyp/qutbCGD
TAbtP7l+k/1mtuuS6dcn9BE5yppdn25c91fer3to/mG+7T1vcdMcMzfL57hA
Pdf1q85vkIcZoZ9e/Ubn35fvMcgQA6ToixwPUcwBDlJAnKuunXXPbDmPfPax
lx6733ZH5VK6zb/MFXI5x+jSfdNd9N1cooUO3WXdafkMNbTr2nQ75V3EySCT
83Ynov+/83+calZV
        "]]}, {}, {}, 
      {GrayLevel[0.2], 
       Line3DBox[{841, 829, 830, 832, 834, 833, 1705, 857, 946, 945, 931, 932,
         934, 952}], 
       Line3DBox[{867, 864, 838, 837, 836, 835, 1700, 839, 840, 831, 828, 827,
         1707, 860, 933, 935, 936, 955, 1725, 953, 954, 957, 956, 924, 925}], 
       Line3DBox[{875, 865, 866, 863, 862, 1710, 874, 868, 869, 890, 884, 
        1713, 858, 854, 855, 856, 1708, 861, 930, 937, 938, 912, 1718, 900, 
        898, 899, 923, 1720, 929, 927, 928, 917, 916, 922}], 
       Line3DBox[{987, 986, 985, 990, 1737, 991, 961, 1727, 960, 964, 1728, 
        963, 962, 974, 1732, 973, 979, 1733, 978, 977, 1752, 943, 944, 1721, 
        939, 940, 951, 1779, 1120, 1121, 1782, 1124, 1125, 1122, 1781, 1123, 
        1130, 1131, 1786, 1132, 1785, 1089, 1090, 1107, 1773, 1108, 1109, 
        1110}], Line3DBox[{999, 879, 878, 876, 877, 1711, 881, 880, 870, 1709,
         871, 887, 886, 882, 1712, 883, 889, 888, 848, 1703, 849, 908, 904, 
        905, 1717, 911, 910, 896, 897, 1715, 901, 913, 914, 915, 1719, 921, 
        920, 1186, 1096, 1095}], 
       Line3DBox[{1004, 1000, 998, 968, 965, 1729, 966, 967, 969, 1730, 872, 
        873, 891, 1714, 893, 892, 885, 846, 1702, 847, 853, 850, 1704, 851, 
        949, 948, 947, 1723, 894, 895, 902, 1716, 903, 926, 918, 919, 1783, 
        1128, 1126, 1127, 1784, 1129, 1099, 1097, 1098, 1102}], 
       Line3DBox[{1005, 997, 996, 994, 995, 1738, 970, 958, 1726, 959, 982, 
        1734, 980, 981, 975, 859, 1706, 845, 842, 1701, 843, 844, 852, 1722, 
        941, 942, 950, 1724, 906, 907, 909, 1778, 1116, 1112, 1113, 1777, 
        1117, 1118, 1776, 1119, 1133, 1093, 1094, 1772, 1103, 1100, 1101}], 
       Line3DBox[{1009, 1742, 1008, 1010, 1007, 1741, 1006, 1020, 1016, 1743, 
        1015, 1017, 1021, 1744, 1013, 1014, 1226, 1816, 1219, 1218, 1225, 
        1815, 1183, 1182, 1803, 1177, 1178, 1172, 1798, 1171, 1801, 1181, 
        1080, 1077, 1765, 1076, 1081, 1079, 1767, 1047, 1048, 1049, 1769, 
        1085, 1074, 1075, 1766, 1078}], 
       Line3DBox[{1028, 1748, 1029, 1011, 1012, 1027, 1747, 1026, 1030, 1254, 
        1822, 1252, 1251, 1244, 1238, 1819, 1239, 1246, 1210, 1811, 1209, 
        1191, 1189, 1175, 1800, 1176, 1173, 1797, 1170, 1153, 1152, 1792, 
        1157, 1158, 1151, 1791, 1059, 1060, 1084, 1768, 1083, 1082, 1066, 
        1065, 1760, 1067}], 
       Line3DBox[{1035, 1750, 1031, 1032, 1034, 1749, 1033, 1044, 1754, 1043, 
        1041, 1042, 1755, 1019, 1018, 1745, 1022, 1023, 1024, 1746, 1025, 
        1211, 1812, 1185, 1184, 1805, 1190, 1174, 1799, 1073, 1072, 1763, 
        1061, 1062, 1762, 1051, 1052, 1757, 1054, 1053, 1050, 1756, 1045, 
        1046, 1758, 1055, 1058, 1057, 1759, 1056}], 
       Line3DBox[{1038, 993, 992, 989, 1736, 988, 1002, 1739, 1001, 1003, 
        1740, 984, 983, 1735, 976, 972, 1731, 971, 1040, 1753, 1036, 1751, 
        1037, 1039, 1802, 1071, 1068, 1761, 1069, 1070, 1764, 1063, 1064, 
        1780, 1114, 1115, 1775, 1088, 1086, 1770, 1087, 1091, 1771, 1092, 
        1111, 1774, 1104, 1105, 1106}], 
       Line3DBox[{1216, 1813, 1217, 1222, 1259, 1258, 1824, 1223, 1224, 1241, 
        1240, 1825, 1227, 1228, 1237, 1202, 1201, 1809, 1203, 1207, 1204, 
        1166, 1794, 1165, 1250, 1135, 1134, 1136, 1787, 1137, 1141, 1148, 
        1789, 1147}], 
       Line3DBox[{1221, 1814, 1220, 1232, 1231, 1214, 1213, 1818, 1235, 1215, 
        1212, 1206, 1205, 1810, 1142, 1143, 1144, 1200, 1197, 1807, 1145, 
        1146, 1180, 1179, 1149, 1790, 1150}], 
       Line3DBox[{1236, 1817, 1233, 1234, 1230, 1229, 1195, 1194, 1806, 1196, 
        1193, 1192, 1208, 1199, 1808, 1198}], 
       Line3DBox[{1257, 1823, 1256, 1255, 1263, 1261, 1826, 1262, 1253, 1243, 
        1820, 1242, 1260, 1249, 1247, 1821, 1245, 1248, 1188, 1187, 1804, 
        1156, 1155, 1154, 1169, 1796, 1167, 1168, 1795, 1159, 1160, 1164, 
        1163, 1793, 1162, 1161, 1139, 1138, 1788, 1140}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1323, 1322, 1320, 1319, 1642, 1719, 1324, 1321, 1643, 1783, 
        1547, 1546, 1541, 1675, 1777, 1540, 1539, 1551, 1781, 1552, 1550, 
        1780, 1676, 1480, 1479, 1483, 1762, 1667, 1459, 1500, 1765, 1499, 
        1505, 1482, 1481, 1791, 1572, 1580, 1682, 1793, 1581, 1567, 1566, 
        1569, 1789, 1570}], 
       Line3DBox[{1326, 1325, 1327, 1328, 1720, 1303, 1302, 1309, 1715, 1308, 
        1313, 1310, 1716, 1311, 1312, 1641, 1778, 1548, 1549, 1678, 1782, 
        1490, 1491, 1670, 1764, 1498, 1497, 1763, 1496, 1495, 1801, 1592, 
        1579, 1792, 1574, 1573, 1577, 1578, 1795, 1583, 1565, 1564, 1787, 
        1681, 1563, 1562, 1790, 1571}], 
       Line3DBox[{1334, 1265, 1264, 1278, 1705, 1277, 1283, 1707, 1280, 1281, 
        1708, 1284, 1273, 1703, 1272, 1274, 1704, 1275, 1331, 1722, 1329, 
        1330, 1721, 1333, 1494, 1802, 1593, 1686, 1805, 1590, 1591, 1803, 
        1589, 1800, 1685, 1804, 1595, 1594, 1809, 1605, 1604, 1810, 1606, 
        1599, 1806, 1598, 1597, 1596}], 
       Line3DBox[{1338, 1337, 1340, 1339, 1725, 1306, 1307, 1718, 1315, 1314, 
        1318, 1717, 1304, 1305, 1723, 1335, 1316, 1317, 1724, 1336, 1677, 
        1779, 1493, 1492, 1669, 1761, 1489, 1588, 1799, 1586, 1585, 1587, 
        1798, 1797, 1684, 1576, 1575, 1796, 1584, 1582, 1794, 1683, 1603, 
        1600, 1807, 1687, 1602, 1808, 1601}], 
       Line3DBox[{1477, 1759, 1465, 1464, 1466, 1472, 1470, 1471, 1774, 1528, 
        1526, 1527, 1531, 1532, 1537}], 
       Line3DBox[{1486, 1760, 1487, 1509, 1501, 1502, 1504, 1769, 1508, 1451, 
        1449, 1665, 1756, 1453, 1452, 1475, 1476, 1512, 1770, 1511, 1510, 
        1513, 1673, 1785, 1555, 1554, 1525, 1772, 1674, 1516, 1517, 1524, 
        1522, 1523}], 
       Line3DBox[{1503, 1766, 1455, 1454, 1456, 1478, 1473, 1758, 1474, 1467, 
        1468, 1469, 1514, 1771, 1515, 1535, 1536, 1538, 1534, 1773, 1533, 
        1529, 1530, 1520, 1521}], 
       Line3DBox[{1518, 1519, 1556, 1553, 1679, 1784, 1557, 1543, 1544, 1776, 
        1545, 1561, 1560, 1680, 1786, 1559, 1558, 1542, 1775, 1672, 1462, 
        1461, 1463, 1757, 1668, 1458, 1457, 1460, 1767, 1666, 1450, 1506, 
        1671, 1768, 1507, 1485, 1484, 1488, 1788, 1568}], 
       Line3DBox[{1632, 1267, 1268, 1700, 1631, 1266, 1279, 1713, 1299, 1298, 
        1712, 1297, 1276, 1634, 1702, 1270, 1633, 1701, 1269, 1271, 1332, 
        1752, 1433, 1663, 1751, 1415, 1414, 1812, 1689, 1613, 1815, 1611, 
        1612, 1607, 1811, 1688, 1821, 1622, 1623, 1624, 1825, 1694, 1614, 
        1818, 1695, 1615, 1616, 1817, 1696}], 
       Line3DBox[{1637, 1636, 1285, 1291, 1710, 1290, 1292, 1287, 1709, 1286, 
        1300, 1301, 1714, 1640, 1282, 1706, 1635, 1359, 1364, 1733, 1648, 
        1363, 1362, 1753, 1434, 1411, 1410, 1746, 1417, 1416, 1418, 1816, 
        1693, 1625, 1617, 1819, 1697, 1621, 1820, 1620, 1618, 1619, 1824, 
        1692, 1610, 1609, 1814, 1691}], 
       Line3DBox[{1638, 1293, 1295, 1294, 1639, 1711, 1296, 1288, 1289, 1730, 
        1353, 1365, 1367, 1734, 1649, 1366, 1358, 1732, 1647, 1360, 1357, 
        1731, 1646, 1361, 1413, 1412, 1745, 1405, 1406, 1407, 1744, 1659, 
        1408, 1409, 1421, 1822, 1698, 1630, 1629, 1826, 1628, 1626, 1627, 
        1608, 1813, 1690}], 
       Line3DBox[{1651, 1371, 1380, 1382, 1383, 1372, 1736, 1373, 1435, 1437, 
        1436, 1427, 1426, 1750, 1662}], 
       Line3DBox[{1653, 1388, 1352, 1350, 1645, 1729, 1349, 1351, 1356, 1341, 
        1726, 1342, 1343, 1728, 1348, 1345, 1346, 1347, 1735, 1650, 1368, 
        1438, 1441, 1755, 1440, 1439, 1443, 1404, 1743, 1658, 1402, 1403, 
        1419, 1747, 1660, 1420, 1422, 1423, 1823, 1699}], 
       Line3DBox[{1654, 1387, 1385, 1384, 1389, 1738, 1386, 1355, 1354, 1344, 
        1727, 1644, 1390, 1391, 1393, 1740, 1394, 1447, 1445, 1446, 1444, 
        1754, 1664, 1442, 1399, 1397, 1741, 1656, 1395, 1396, 1401, 1400, 
        1748, 1661}], 
       Line3DBox[{1655, 1652, 1381, 1379, 1370, 1369, 1378, 1737, 1377, 1376, 
        1375, 1374, 1739, 1392, 1428, 1424, 1425, 1432, 1749, 1431, 1430, 
        1429, 1448, 1398, 1742, 1657}]}}},
    VertexNormals->CompressedData["
1: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
S8MrlkeOqkjRYH3Wa95CcT5s9mZnsbMoODbgxl0ySYN7g1L5mtV8OH/IQ9ci
lYolUZn3OIQ3bnAHnF+w+MB96TleeIaKJ0PYlmGET0o58fXXv/GB8lZs4xH1
Luxo3vFL3okKUTXtyWlvBOCqo7ZzWKURm2Noq1IJRzV8NQu6/1IArZd7I9LU
G/GE8IvFeuK/3kMdOw8T3jLKVHj+bS7hr7K1OZdUGKC/a/4ixZUCsD/YzTn1
sg09eiN3br9E+MHTBfbd58PoMrPVsx62I8+w5SWf1MX938UL2ulER2yujMZO
0nDxMqNrZ4dpcH7zufAuMs9vKGuafZh0bNyydlRGtxtqzSxXjP3HBC9J2S2S
4Ux87rBSMEj8Lq/s/bjRABucer/v1VvEQK1l5i/2kPds8H//24nwbsRUUU/D
exYeYGbL+FymQe6/oBUm0zkQPzLbNWMTA0+/60lrIPU1T7E2ECwl8xCfesNr
iI4eM7p3Pxigg+Ts3ItDlwVwbMayRM4mCq4tjdanr6NAaHngyd+aQpCQTf1q
taQTrTqO1QQTblx7a2jfIxUBfLypsAyKuvFjjcP7NYod8MCAfsT7EB8cxnsW
OxvQ8fP3Xt4Bog+CYLc1xeN8eBORvrljFQ1PP1B+fpT0if4fz1Q7cz4Ymi67
vFKRgZqCvpwZS9vBQXZ9rUQGF6yv9drZ6FIwbfDE3n4yL1eshjJNtfhwzcts
5IRtB572vJi+gHyvxtK+pqrjfKheWprmGtWEU967tl8MZ0L9XT3PxZ082Cn1
McxP+Scu3vVz0X7CORd9j1usIHN4P2KJX70aBfdXBs4uIJzzy7fZKoLsxwcY
zr0Lzdg30iSwt2ZD97DMwjdJXFCe/t+Hb+LlqGT/PKdziAOrHwY4KpN8OCX7
Ma3DtwWbXsurLyUcFHlhK9eL+MeR3RTHo57lqP76k/8ewodi2mOMjm1ssNYf
zpl61YXb7klOfSZcZOzZHSYivONox7RLFe9G8wK9GfPJ9VXjVUXcSCbsZPWW
9Acz8XDmmQI1cr0w4tSfs4RDxWTabr4iuuK+33X6baIzpTKn/a4AG2z/NlVh
PBU9XdvmvSQ8ElAac+zmYR4YKWoq5ugycfG9dDtJore7Di6nMb7zgLP//p23
zaRPLn19kUN8ofqlodivXTxIvl7ZEB3GxOmrJGwaiI8kqK9qTXrFgRwTrrL4
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
Pz+8qhENTP/+ItVLRUETbyweYXuLu7qRfyAVrdLbfK/pGhVtv2st8h6v71jv
wp3vHsboT7DzxXm8zsxtiW9Mng0Dn0/J9AdpIrobN998+PkwchAsyHbDvGjW
0rlr0yYiWmv2YfVXjLfjy5Kdt7D94dGzf15LkNBz/+Snu/cyUJhJipHkOhJE
0MEueX07UicG/GF7PYpWG0tcuIDn54yx862H2g1oMZz7XvIXJno6ZDg66UsG
KU72KPbnCO0l7njDh+NmTd+aF3K3SKD0zm5v8VIzClG4vH1iYgyFivr9ssU6
22Zbom7gfCuian2ffpU1hhTe2OVdtumHM4zEFjv7HHRM/d5pQSUmOm7iX/TB
lQrydq+y+t/rIWHJnYsCON/s/ySbV4XzTIuT9fo9jgjJhlM6TyWOoeDfe0bM
w3H+z31q9BbbdTd/KXPCdiPmRIUdtkuckfN9wGxG6ZQls2qcX3uJ5BP9TCKw
3xBS1DrZjf4IUN8UcDJRBff9NaL1A+AU4u2np0JA8ncNip5tYqL3V6acc7BO
nDaz2/RmI+ZUtoH9JvJMJJfMeQd/BlnC0hHKyzrk+r3nyyT2k3O8kjP7sJ+s
Mly3v2B/Nzp8cuen9etwvnS/seiOdZ/9Qvs6u/wOpD7rZsk/xUQ8rgcZhsID
EAQPDLaZdSN1k+uSL/iY6AJJ/Vol/v6Aj92q0oIhVO6+Q5z+bgil7Xrexo9x
R3c7k4egMYQ2SPzqlcP4uei8hsGc7YGGttF/U/upKHp1fPTqcwxUZbfewQTz
MbNWjbdp/jRUWN1i8PgqDdn8PPtiH8a1dtETPS29FBS4eUuOzScG0jBNeROL
9VSWS3Tsdsz/wre4pHRhPigWmvySgnmgkL9rtqAAFbXt29LSjv1Nj+L8rFOL
CDPU5NU/OKmItivUNxnj9onfVzrkY0mQeYuz/ekxMiI8vatg9WIY2bgHuynr
k6DNf0zmlnQrenXeScR/dyuSqil8cG3bJAiN/dkpJdyKEq9OyhNNWlGU3IkN
LPtRU4XVCeIExDfifHFYiYDOme1WrpZlwoKdUou+GAG97ariMsTrFnj0tQjL
rjV0dXNgSj+a3F7SeHK1DuJpNMx+mDkOq7KpSYpmrUhN1rGjZF0rciBOGt7H
14+tbVzkl6ChC7t/Zfp10NGY430Hs6UeGCmubSfM0BC3PJt19jINKQ1ciRDD
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
QA==
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{388.85107413668766`, 372.4006181535933},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-1, 1}, {-1, 1}, {-1, 1}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.3143458211097223`, -2.766437155901791, 1.4385133037193014`},
  ViewVertical->{-0.12697792428644133`, -0.2900438245532594, 
   0.9485521528004799}]], "Output",
 CellLabel->"Out[68]=",ExpressionUUID->"731b141f-a115-4df0-8584-fd802a1e350a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Use", " ", "as", " ", "example"}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{"ContourPlot3D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"x", "^", "2"}], "-", 
      RowBox[{"y", "^", "2"}]}], "\[Equal]", "z"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"MeshFunctions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"#1", "-", "#2"}], "&"}], ",", 
       RowBox[{
        RowBox[{"#1", "+", "#2"}], "&"}]}], "}"}]}], ",", 
    RowBox[{"MeshStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Purple", ",", " ", "Orange"}], "}"}]}], ",", 
    RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}], ",", 
    RowBox[{"ContourStyle", "\[Rule]", "Gray"}]}], "]"}]}]], "Input",
 CellLabel->"In[69]:=",ExpressionUUID->"177e941e-6a3b-4c11-b220-5c2d9b20ba6e"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJx1fXlczc/3/73te2khSaKdJAlRmhBCZVf2siT7vodQhFKyhVCkDZV9N9da
om4bRaW9bvtKe/1e/b73zKvH9Hn/1cPzcZzXzJmZM2fOec7coau3zV8nwuFw
hklyOKLM3yAPruWPgApU1Tbour+YAMcpNsy4247RtXs+1rZSAoJzIg2CopNm
EFzu+87MMVYlRD7u+Jr16dxaIm9z8eKWNrEsNDTX4XF3N4uvNb382at/DsHV
Z4vWv15eTuTT7hTELimoIvKqvgl59dwUZLjy5TIjaRY3nbJtX9TQRIJnFt8M
2yZXRuTfKQ/3uRVSjqz8l4TKihUTHNoPuLr1aVM97S8E/5N4w/dLZQGR33hz
T27Y6Bp03e3PRRXxKtJfaD/gNtMXvRupk8ziA76fXthZTeShnccPnbT5cr+8
jx7hX8ypU7Ku9TDFfXCh/UEPfJfGd1amBqvKV/XRI/Xa0UHmbWWffoEdzB3j
DnPF8kl7AE9eMcPW2a+I4O+izaetuV9K5OG7ID/XOO4IRy2L4L//fjC5ejaf
yF+rv4cGvq9EfjpXIk6J5vfRA/i73xqKY33Z9gC+crGHrIykoA/uNkxGVV6R
xddGnon1kWXlp1y4ffZyfTWRt5t/+ZO3eDGRb/9VOJNzv4jgnzqOnDfgsv2C
+fndtjDUb2450QM4zB/ArQwTx3uoZJB+qao6RMnJsXrk1u2foN+eiTqOofIa
SR6ZD/cjtu3LvPYTcTgOmVIeBgTPMqhOMpLNIvIt402//BnMIzjIS028Ux6i
9YHgqm+i7NrXs/pffDh7YZV0CtGj/fzTgrnukQQHPSGrErbfHxuHjBN/7arr
yCM4zB+P6QZiByXyiR6Y/4Dn150r22l2ncjvlvsp1vk6Gy0P0nXvFkvp0y+C
r4l5bjr+CdEDuLZNx4Iy7QTSHrAzzHOQJ7hwXYD+N9uilklKZBEc5AHP33Rw
2oSJb4j8xgMBm6T7ZxH9MF5EjxAHu0E7QT/gcrdl93PVUvq00y3sqXzO05/E
DgGDRUZKc8rIfAM8w3fao8ZbpaRfYE+ZVqehqySLCQ7jDjisO9ADOOiHdsI8
J/5E2E6Yzx+PKt4JkBMQPPzKYKcV3UWsHiEO+mGe0/2F+WOoW1zX3C8Fmc9y
3D2F02t/EcoLJFxzZtwqIv2C9oMeWNcgD34MxgXWO+wjMC6Aw3oE+blaukk+
8sUEB/k/+bsOHDpXSnCYD+AfYL8D+Z1LV88/J1VF/AngXoZrjizoV0NwGHda
HtrTsk4lzSWgkuxfgIOfhPECHNoD9oTvgjzMK1inxA8LxxfkrTSsT4rJsTjI
f1qWoX3Zt4DMQxhHWg/g0zUfRn2RK0QQV4B+aCeJH4TrAvTAOMJ3afsALrex
Vb3kfC2xA+AwvrC/QHvocQd52C8AB3lBYWnwJH8WTymc5iMayeq32fRTecYf
jDjPI766tjB/hfOQU1egc8h4PIuHP/Cb4X+O4LzYb+kW6QFEHvYj+C7dX8Cp
OABpF5/e8vZqKMFhnkC/wM6wT4EewGE+wPyh9y/AXWJzHuv0zyb4ynfP9Lx/
ZhN58AMgD34p8cX1W0V/Csi40/4K5MEPAA7yNlEnZuaq/CA4rDvQ494emHvx
CLvvAB4pl7AsdFQJq0fYTpCH79L+EPRA3EL8mHDfBD2Agz0XPtgQ4Kr2i9iB
7INCefBjIA847Avg99wlGuIGc/Ix7DuAPztlK7246zfZX8APb087+lJbipVP
33HL9FNwOcEtXi98NFyRR/xn3T/dDYGNSUQP4Bl137pm18cTedgvzl1c72Qq
k0LkIR6m8RUfzsaPNi7BL4LHlFjIZ5H2GGY/v7ilo5TgsO9DvwAHfw5xKbQf
8I2TNQte2pf3kQc9gRwzv5j2dJzfPbLreQOf4LQdoD00DvsU6Id1Dfsa4LB+
Ab/vnVpyoZPF7VPaJ3RdLyLyoB/kw8XUM8w6M4k87F9gT8BhXDparvgubOIT
O4OeoGOVNxU7MoidAQd5sA/gTyp2XhSvfU/kYXwT1MdfmKPAI/LQfsAh/oT2
AA56SNybNPC6SPZrgoM9oV+gH84LgIOdYT2CfrAb2ZdTuwtO5mCCgx8AebAb
yEN/IU4DO8B3QQ/Mk7oZPrNjPQsIDuvI6+c6zl3pYmJ/JVGjIUW+FQQHeYiX
ziu8s9YXFRB5wKWTDMIuHi8l8nAuu/p79gwjWVZ+/ga/TaNyWRzsD+e+mD+j
zz2QqyLygMepDojaLF5D8FOPrHz2dNYQebAP9Hen1LqMPE4hwWFc6HWx2Nr9
6/JJrB4YL+gXtBP0AK7Kvxa/+ASLw7oGedAP7R+/+MHULu9aIg/rHewM8wr0
e8hkNYdyi8m8ArziS/IER898DOcC0A/fBXnAYbxAP/QX5AGH8YL2kO8Kz/WA
w3yD9tDth+/qzI/vOOBViWGfgnGB+Qz7C8FrnLNP130mOPgxkId9DeY54LDv
w3fBL0FcBDisC9jfx73RCdon30teiMP8pOVBzxupLo3nXdkEh/UC7YF4A+xD
6wE8p8F6mELDV9JfyJOAPMQVYB/an8D+C/EVzDeCC887gC+/JC/daMDKwz5C
znGUHtjHPR2WbD/yqSeOE8Z7Qhz0Ax5SZNhsOPo80QNxGvQX7ANxJtgT9mvA
YX6CPMSNIA84+AGRewLxY8+y+/hJYgdhXErsIOxv/gHR7sKoCKIH/Kr6Zwf5
tszHRA+cX2j9xG7H+b6V92MxnBegneBnYHyhXzQO6w7mIcxzsBvIQ9wFOMiD
HsBh/4V4DNoD6xTkAW+b2b51x7Eisk4tzuR+s+niI4jf4JwFOH3O8gjetcSQ
k4XouBpwOq42LLxzSX9UCtED7SHfpeJh0APxM8wrwEEP2L9mgod+ECcf0flP
wCFPBfqNw5duGK6U1Udeu9JTJzwlG9FxNXwX4moYF8BBD9gfvkvH4YBDHgPW
O9iBzjsBDnkhwHVTj8p2xv5EdN4A2gN5HsDhu7B+wZ5wjqPzgYDDeRDOudAe
kIf1CzidT5hr9fvEtGAe0UPO0UL9cO4GHPTAOZ2cW4XycJ6FvAfIg36YnyAP
8wT2C7ADmbfC/QJwkIf9DuxJ58Hgu3T+DXDI7wFO9FB5s+/JP/YMU0wh+uEc
QfRQ+UPoF+RFSd5JiEN+EuSD1KxtJy3n9ZknvDejPx3PuEbmG8jDuqDzgaCf
zq8CDvlVcn4U4nDehHUEOHwX1hFpP3UOhfYDDvEPmc9U/u3Tu20mV6VYHOaJ
fT+uRghXQL4LeS3AQT+Zz+0ndDylyxBdl9k93MxwsHQxkYf1EnzXWluTW9xH
D+BgB8j/AE7XBSbKRT6I8mHnIaw7aCddZwGcrhMVnt+Ef0aVI7r+AvJ0fUrr
/cBPu6JKEZ1/a/P4qKIrUoXofCnooesyRJ6qow273DQ0VFrQR8/mQqfFthNK
SDvBL4F9aP8MOF3Psi44LpspKCDyED/APKH9FeB0/QX00/Wg5XXxCUpRRYiu
p+x3FWz7vqQc0XVA0E/XcQCn6zgwb0Ee5gnYkx5HwOl6nHvqmO8aryr7zNs0
7vNBejLsONL5tv/E20LfH2pdx+YnRz6UWtdWTdoD7QT/RuchAYf8M8wrwOlx
Af9D55/BH9L5Q9AD+WTAvYodRnBTfhJ5aCf4mT55SCEOeVeCl8xeWrrxNl2/
JO2BvDfsOzB/6H0f1jXgEF+RdUTVF0APrCPAwf/QdQoiT/ltmCf0eR9wOL8D
/ujozgr0uwrR58RnCx3stkys6YPDvKLPg6AfzrOgf/tAhZuNpyv6tAf8A533
Az8GOHX+Rf9x/kVw/iX1O+G8pc+50E44XwMO6wi+S+Ur0H/kKxCdr7icJjXA
R6aXfNPS+1GP+GTc6bwE4HTeBuxA52eg/dBfwGFc6PGCdsI5Hc414JcgzwZ6
AIfzGsiDv6LzTjDP6Twq9AvywCDvUx+scqS1tI8dYJ7DeQf0wH5B5yFh/sM5
COQBh7wirAvA6XbCPkLjYAfIJ9ctNN02fCUmeug86v3S/BcKV4v64CBP51dh
/6XtQPynME8I7QEczq0gD/6TPi/DuQZwyAOQOJbKAwAO52WY/2AHOl9K4mph
vhTsA+2kz9GAQz4TcDjX0PKkncJzN7QzqyZUbKwmj7Q/xPrMN/k/78i6oPN4
sK5pHPZxen3BeoE8HuDgD+k8JMxzOg8J7aHzh+CXaD00LwbO6aCfzjuBfpi3
sF8QeWGeDeIlkKfzUeBn6PyVts7fB3+vViA6jwd6YN0BDv6HzrOBP6Rx2Hfo
PBi0H3Aq79dHD6kzC/N1cO6AdtJ5FcDpvAqML12vgXlC12ugnVCvofJCfdY1
qZ8K93cq34XovBm0B3CIk6H9gKeYjL+n9pCNg8BuVP6N+HNYv+C36boJ+DF6
vYMfg/0CcPDbdH0E5GG9wzkX7EbX1wCH+iDoAT8J+sm5W3heo/Np8F163oI8
4Fq2VTNs/dl4/z/yZgjyZnPtB574MKsc0/worcd4yAERAcE1WwLVtjemExzy
liA/pLVQ2/F1JaZ5Yg/W1VmtFK0ieMyU7k4TDxY3rsrWunKIlT+u2lZ+UEaA
aV4EfBdwZ7FpFR3NeSw++FBcWzmfyE/RcN2Qca0c03wMkCf19KN3zw/49xsN
c6o3MI4uxTRvB+RpnuHa2KDYOGYd0LymzQpBbz2uFmGaD3OO4y9ykYkf18m4
XZXpKCLygIMdaHnQw/tlftfnz3v0+dqvzd8qq/F/8OIIvvBMjYhkdxnBoW4I
8i/chy7ItazB/8EnJPi7zyPGzD/M5mGVQh3GugazfMIm16/fLzHzi+YVqOpN
ULBuK8U0b8FYtdvqp1EJpuv+0F/CHztgb5DamEFwObcPs8X/ZRL96idmqGmW
F2Cat1Alkvju6/58TPMNuh1WlsQw8RrJn+f5KfLz4wlO8u2lpQfUipKIHpqH
APKEd3HvxhupV68JvnnSDCTfnNdnfEFeSrDkRmYRn8hLnS+rzrzE8srGnLlm
J9VRg/+Dl0twW86qO/v/ZRMc6nEgr+lloSlztgLTPGFYd6SuWsAZc77gK8Gh
rgryTvfUz5/LZuXBnvBdmqcK647m8cI6AjwrV6NKLv8zwYGfQLcT6migB/wD
zUMDPap7DS+c6yhj+X7Cef4ffGCCw7gTO8uXHJhfzfKBXSLOadbEYkzXrZTj
h0u6yFZhmo8HenY5PDh5uZPlCUO/PhVU+Cp3VhIc1hHN04N1RPMMQQ/gph37
lzc1ZRIc/AzMB2gnzY+NbuXrXlHMwjRP0mOQbbxbXDam+Z/545YFXOjOJLjp
nVQTzvPHBId1Sref5rOBv6X5aTCOIP/k4wvFAI8CgoP8OK9LQbyOAtJ+mpcL
7QF8e+wJUb/XGHneabwX2M7HNP8TcJr/CXajeWswr2j+G/hnmicG4wJ41qxv
Z8cfFRDcJrcw8AcfE/2w7mg+JPiH/+AxEnx3wIwtDlzCYyTt7EjNlcw71oun
TvHWYB+n+XhgH5qH7PPIdWtHba91QdmT5ieDPF2frRosc+Jsdq9xEdof5On6
r9NFjwuG10oxHZeCv6XjHMDpeBj8MOFjC/0zzB+apw04jBfMtyfPcidM9v+J
aR44zB+a/wnjTvbHk1JvjncWkbiC5m9DXEHz06BfYH/wA4BDO2l5su4Om21d
9DeLzGealwvthHFJtnN233OklOCw3uk4BPZB0AP+jebdwT5F805hH6F5kvBd
wCHOgTiW5k+SfUq4z9LrBfpbmtTMW+pZSfZ9mqcB8wTwplkFWYNHfSA4zcsC
OxN/bq9Zaa+3kOA0P8T814xxS+vzyL4B53qYbzQvBXCaDwPtIXGp8LsQd9E8
FmgP4FJz4ofcNv2CIb6i+RsgD3EC4PBdkH9kuiH21aAMgtO8MvDnZB8XtrP/
7tJ2/9pMTPNzoL80vwj8DM37AnmabwnyND8T5GkeEcjTPDHwS//FjwIc/oI8
zdcivCwhTwlw+C7NHwOc5o8BTvPT4Ls0nw3GheZZkXEUxj9gB/BvNM8N5Gl+
F4lvKb4orF8SLwnHHfZNmicD8oCbO114ED0mmeA034a2O+gHf0LzeWAeAq65
4IGbvlkiwWl+FOyPNC8L5Gn+FfhtmscCfobmyVD7F6b3L5qHA3EUzdsBf0jz
yqCdMH9oHORzLMZO+qiVQ74L8SrIw/jSvF+QJ3Y2n/PPenAWiQNpXhnsCzQv
COYzzX+G+UzzpUGe5j+DPJyvAYd4nuYPgzzNBwb/QOJk4bwCnJzT/f7pjFn2
hrSH5gMDTvOx4bs0zxniIpovDXpoXjrooXnU0F+axwvyNF8XcJrfS+IxiocG
7aF5aHZW8avtYn9imp8M8jT/DfTTvF9oP81rBXma3ws4zROGcw3Nb4dxpPn8
cL6g+ckgD+csGof5RuoUQhz03DQ+4T5Og5WnefgQj9H1aPCTNB8g81mp/2Sm
w3S9HvwkXb8m+TeqTg04zSsA/0nz1uzEnu1c3l6J6To4+EmajwTnd5qPB3Eg
zcuC9gAO8SfE1TS/C+xG18fhPEXzrOA8RdflybksQPbMkheY5j8Q/fR5CvTA
+Qv6RfNewN/S/BOSn8zaPn2KEcsngfbT/B9oJ82fARzqknR+hualwHdpXgrg
NC8F7EbzjuC7NL8IxoXmC4E8zS8C3Ffk/Y2I/ez8ATtDfY2O52keBew7NI+O
5BOEOJ1nyN+reN/qD7/Pd2neC+zjNK8S9keaxwg4zXsEPTSvDOJwmldJznFC
efrcR/NR4bxM80tBnuZzkrw0xS81urXQIrC1CNN8UYhzaL4o9JfmfwJO8zkh
HqB5dHB+ofm95JwrXKd0/QLkoV4A85/mi5L8jBCHcyXMH5onDN+l+b3wXZqv
Czgv85Ho7bjsPu2k+cZwDqL5iiQvQfMnhfsazbck+Q2KVwl6oO4M8iRvQ/Eh
QZ7mhQJO80JBD80vhXUE9Tj6nE7zxwD/Dz4bpvl+EC/RfABoD81ThbiCvh9K
8lRUfRNwul4P53eazwn2p/mcML40L5fEDxR/Ffznf/Do8H/w6DDNc4N5bu7j
FZtxtQ+vEtO8O4graH4d6KF5ktT5i+AgT/P3IH6g+ZmwLmi+JZxraP4z6KH5
q6T+RfFFwY/RfDNY1zRvDXCatwY47FOEVzzPe9G+tjJM8+LAn9D8OmhnohPX
JXEmy8OEczfNV4H5TPNnYP7QPBaQB/9D66F5QTDPaf4M+GGavwHjBbw4wMHO
ND8B7EbzLgCneRdgN5ofAvI0PwTaQ/NDQB7mP31+p/kbDrw0T/VfBZjmb1D5
EPQfeRtE521KE4ZKnmxj+Tbgf2h+Edif5k2R8yzFj6Lyh+g/8oeIzh/SfEgq
L4TovBDNPwQ9NH8S+kvzMEEPzVcEPTTfEuRpHiPIwzgCDvah+X6w79M8Eyrv
hOi8E81XIfleiicDOM3roPJFBKfyWqSdEAfSPB8qj0TsTOV50H/kcwiPCHCY
h3Q+B/wPyT8I20PzT0Ce5sMATvNtYN3BeYT2PzS/EcaR5kOCPM1vBHmatwlx
Ec3PgflD83NAP83zBJzm9yqdF+xPHcW2k87b0PxYaCfNFyX5E+G5j84L0TxS
iB9o/if0i+Y1AU7zowCn+U7wXZofCDjNywWc5v1SeXLCPwS70fxG6BfN9wb7
0LxrwGkeOPQL7Ezbk+YbA07zk4GPF3RsRJd0SxkeV3rZ2vTnemT4a1+O3OJy
Jt5c1y81upTU+85at1SeamffT9M3kskcK5aDslw2DlDYUoveBSyZ8+ESy+vY
bl4yq/FeBVp661NXzMISUu8T09jpv8yRWZ/GfjF5z8v7vKt2tZ+iTc6/Svz1
LcdURm4rknms6Z+vU434+2PT/uZV9HnHbPs37qzbzD4cMkn/5C/jLGQ6XtKV
51yNJLaveDwlopDU3zvGXXttE1ODTL68LzJcUEDqaFmj9WfVd7Lvdy3dPvaU
lCizPkxO2fK7K5FEzPJVsiIsr2CB4abtGh2V5L5z7JT17Y2Nmez9HePtU/K4
Amz1mfthvVYOubd1rS7u0a+e8Yle4JM3hId2fnkkaijKvqMluKX6NEueh/Cl
S1oG3ZnouJIGt2EIW/efsv1wwPbOPKa/v7ytd8zt8/6VrtWRrW1lfOww6abR
/ZEJqNTSRV6/PY/ch80yC7+5uDuevY92yOG1XGMe/q03RWT/lhVIbI6pSFNb
HsqI/X3ytAjL+yL30P9+HC7+NxOnJ7tF5pxZjKZIKAyOaMtEeWNnz/YR7/sO
lbTBal5HKx9rx3iK1PMdkGH4yLP263ORWNyIN2uvp5F+BTotkdMbW4Z+FG96
9DCJ5addlrg8dOfNElTnp7ZVYX1hn/dSYNx1A5Vda/JcUfCxH0NGMONleHTd
ggGiLF8l55hoeERHGRnfJo3dxyvr09FXNRlmv2Dfg9JyXixo6nknix8mMr2r
DO1XubPkggjLw1H+bae1qqsIHR90w1NelOWxwDwcV5A8VawmEwfJG92VVStm
+mv62DK8GjV2/qi9+iSD1ItF6gu91Zl54jTl2rpTXPZduM1Sz5aKdrHvNQn0
ZZsmy9cgH+/C4PVWtWiYhMOUD/6pfd7nAT1SBuVvk5QE6HfEHun4rkpyb9p2
8xwbL8ZfVs8ees1kVwWS4P/YukUru8+7SSeCTkW2FjD+9LxNw2fFfKQVFu30
obsM1f0YXtzFYfmKhepoWRqDEx7IgCiZQE4hujVu0JGl70qR/jlkpL40jMiL
vVvgvo1TheY+iM2UEMnq894d6L+7yzReRbmGrOtz6e3H0zHGdrNc/ByYflmr
LD4jya1CM9uufMjuZvkkukWDdh9WYtZ1x70Xe9tjiH08JF8daeli3y9yWX+j
rce+1wIHLJJWrUB1hpP9ql7Ek/aA3WA9gh+A+Xb7TkK8WEMmbno0OcZDKwWZ
PI+1+MHMh5Pn7g+UFGP5gWDPrfUrgzUb8rCzZmbMGIMM1BSjb+2+tgC1pv2z
m3Egkcin+I/fcU+xFE0xGfLuSEE68TNqkh90fjPzEOaDWbbvaw4zX+W6PG5o
ShaiuYpn3/s0ZJN14ZyW3xDcyb6DpG0v+jy/nY8Mg1zT7vMFqOpXaT/u6j99
3hFyc649kxGP8SN59SWTB2ShbvNu3cNd7DtC1kN33GsVyULHBe/mTesuQgF4
2roaUZbn8GXJmYLxDXyyviL/pt/w7IzHygvFBLsdEtH12LNj/mxm61bLnGzV
JgnSkXN6a+w1uV51AaHfmDIr9JhERxn2bN+ydLUgD3/e1Lb/77o/aIv+3EcD
+WxdozHVUyRbJxvpWD53QNsqSD1or9mksaua88g+dVOqwkZCKQO/8PLyfV3H
Z/x69uWt/+N9ntVvMm9ZdRTh6H1HFeZWZuKsOmzp2MW+wxObcjdnLOPnJjzb
6ivdlI28XkzyviZT2Oddmjf9LU+sbC/C308ael76zid6YFy2c8eLXejABL/Q
FLxGSoGtT2WnnwxobmHfFTRM7lIxW21N6ulTPkycodCdh2vSb02aU8rHxeXJ
8Uat7Dszp/dM4G+WTSH4bBfVAG/Rvu/heIoWmt1pLcPFjW82hWWnY3/pbA1c
w75fdG6hbu6Rnvra/K0SRbx4FHzGUl5Hqe/7M2+jHob/7qzEAnHR1xOay8g4
Fij6TtvdXosnyWs5+HVU4+0TRetNAlJRzSh013cCW2c/NdZ93KeGOyhG/92u
/p/Zuh70d+nerW9/dpbhtef+qIs1F+Da3SdGOf5m34HZX9xub8HEV4CH7356
QaZXHW2B67yvK3rxOhuiH06slqgh4yW7bPfUrLZKfE7FP/BtXRGxT4pT6sPm
1lrSL9gvQM+lJrGPBpICMo6R8xboyUmx9c3XW/UWj2xm32M5+nz8/gKZYnxh
58kZGx9lIIf4kelG0dWknTBeU1p5Pk/FWJ4GrGsYX0PPDGPPyTa4/PjmSL/n
5ejdXcmd5+1qyPha7t9p/jFQgDSOXxX9uoutj//7ODZ9R2cZGd+5PiGvfGzt
SBwo0+xm0tBci/VTzDea5WbjM0clHa7dK0XRX/YbRiwuZ+t979xyTOeVoB3X
1BMUH1aQ796Z2erpt7YQiT0NmLQ7uITIpxz2fqeWmI8adnwJKZlYRuTBboRf
52LdsE5rFAL8/ln91roBLC9uoXAcCY9OKA+4+WD17Rx5ll8H4w7+/+KDxqII
ozjy7grEY1LR115vTp6JFrltVtTKqUCcOp5MgUE1af+hyPWTxrVXknFcO1fE
LFXfmczzwtfXzbZ25WHd+CbxkwXx2IUTOk3vWhraMXNTa+26XKJnf8QdjmEb
+26nd2lawZ+/ZmQdFVc8XSDRlYmtFtywP5qAyfyHOEowWH9X4cVYzFn+7d5E
Lps/TlB6lqygkoOPaO4ucWHmiY+3mPtz0V7vkMiHnctpZ98n4bm/r7ZUY+/R
iMZaKC9trcR7AyPjd/3IxIVJoqbfHApQioWf64wnNWQeHtB5+3JEWCHSH2on
Z7uymqxTNDjk+HGOAIlt3XwlhMO+H7J5wggXARMnkLrhDgOHY6LsuyILh653
NZLKQhB3Qb8gv2Gqreyl251O4tVpNmIjq+WYeHfCvFYtpQQUr+aWa8X0N2yA
5zyDlkyS13VOmGi1UpR9nwT0/749LCaCiR/8Jn8yMZNg37uYM/+gQzMTN0I+
fHmR80xpcQHifHvbJbqlHB3YF31h573wPvegi/8V9z+py0NH3FfPlZJn380w
PS0SGKrniC6OOGwVLltI8FVyOfVDZVPQxAiNT6Iy+eR9hqaZhVuGSjL9F85n
OBeQ/DmsC6G/ktgY0zFGlYfqNt1+m63GQx1JOvJGIuw7JHETgoeHKrHvkPD6
y4fs152G3Gcs4+3rx74jAfYH/dAez9zNqwdNN0fBB45VRY+OQ47Ln1V8ZvzS
7Tu/olZksfUaaCfYDc4vxsemrzzMxAmpUneMV7ezdauOrkuz9Hq9I+H5XHbS
wV5xCPTLfvqGti6lLBKfk7qDsJ3QryUde6KDxFgcxuX1gHdGRsx5X2nFTtff
jP4Dr6WHTmbwyhczq6yk++TP0f0pi97XMnEWnNdgvJ6nt90I6ZkHQv17Rwbv
NRTv9X6CEN+euVJRq9f7EvBd0BMukP1oI5WPvry3SdATZd9hdkNvr+hKsHp8
vfe9aWfac2barrftveoRIB/ilx6tr5yFNja6b48QK0ZnIjy2+XPYe/rxQV5r
vBn8w/x5gYNlqpDKHvuqYaosb6FQbL/zaCb+FasVmzaqNY/M//TwyrIWXg2S
mR7mFMz91vfevUVEytVSUZLnOFM40ZDX6379XEN1h1Qm/oZxlHK3CNNkvgf9
Kju4aclUsV736IU4rFNSjxDi5LuFCmJ/u/loY+Tbdcq93q2F9kePSFh/TlmA
ykonNqwdmoL6t3//cEyBzUfpNfMFhpLsPfcjh9tf3mbiIEn7YONROllocd3h
7L+KbB6G2t8R2d+F68V0JW+RrhirZ7qTWka/UTzklK318KMsm+cBf36p+r25
rmgVUk7g39Jn9tuWqmGxNskLkL2r4+wD0mwej9yrHXTAPYj5vthnvUtOHXwc
0vQvdLQJD/lcGLR7oyybH7vfmme5UpS9r12ORZW1uGwcm3bScrUmY9foipXO
5twssg/COvo9c9w0x+Z49l3HGdPD3Jl1ZNs8wjCQm0Dw4w2dy0KY88/GA2q7
tETysXFD5FIjafYet8E7o7FjmP3qsujjbWMRD7Wrn87ZNIjN20N7BCu35Boy
68Flw6BG3yqMtY06RQxF2XvTzjf8Kk4Xs/vdbb/JGftFUtB2n1HPRr+NxZ9T
G2J9d0UgBZlvJvl72fzVEuu6C0Yy7P36Bg8RJzfRPvEegnhPu91NImLkN7Rc
1LmkMrHvveAmMWNTexEB+iXVPq6YW4iHnY1NcVUpZuwSaauv0vf+KaxfOBeQ
d0Hz7u+cy8z3RNHC0FTRDAzzHNoJ8tQ+jmAfJ/fES141mcnxEB0Xkbot+KWn
xWGdvd/l1bZzaQ9m3wH2VHFctWL6OMQx2HpyZtJ0Ei+ROjK1v8D6PZnwy3Gk
SAoGPw/jDjisI4sCceMuJTa/CvsRzE+wA+Tnf7clXepk5tOJFsP9u5vSUcWq
HbaDRdn7mBUt737v/8vex8wM01zfzMR7uoEO1WLMuWhOSpj24V73JQHv3zle
p0lRgB3LW0RFh7L5indG59+86F+M6yU3nZAzyepzb07/uYF+N9OfYXsNQ+cU
xqNrU/4NusNl79N5FJRczS+OR6/tf1peFGHvu8klhwz9VcYn9VPIAwBO+GaL
fwecZfzFw6dn3jb9JXlCbLFyrjXmCrCHqOKL613ZyP1HU0jTkCpskj9ykqI2
m2/8JHtxyZ9e96FAj1v/FO+E7jJyLyDx5SoNfgvL83lTk6OpXDAN742Qc7fp
KECB6/fvuSjK3ifynHFL9cI3jJQWP79wQCMLS91qUv87ns037hQZYJnITSF2
aOnwTz4Ra49QjM08+YgfOOT3a+OBzF/Yp0Y0bvhyDdfg6XeHpThzv5E8zLuA
hMAU+Sqin+Y/QP7nUrbqM3mRGsJDgDyPmFFBlGyyHYqauInL4fBI+5VGLExK
Sp5F+BigB/A6uxlnlz0dyt5zEcb5kD+fJdQPdnj0sbKfMtNfkN/fNGaL/6Q4
Mo4Xhef0Do9Z7ty2IrTbQDbmo3IV/j6rZeNZPTavBfPBtd/khBoJHq7L4vrt
ZsZr5dQvbRyZfKyhv/9vUMPSPvcNIY+3uLPfZ0lm3ciIapz7J1dM7AbzoX8T
V2QUl71HI7Ps8KqsEj66mp6vlNHrvgx8F9p/T3ieUm5asOMkcw5c/VPz8V8O
e99E0yzumHx7GeK7DfrMcyvHSzNrpq08GE76BfLkvqdJ4sTTrUXIubTKKVak
170Mu3FhCTpzSV0M8ueAw7qD/tI45M8Pjnx57YpKBt6o/Q4fFWPvXwAuCBrM
zOde91CEemD+Pxs4ZIl/T/5WiL98MXhmml4KPjInPcxVte/9iAwXo6q/3ZVY
3H/M51GtRVjpiseba3c0yfj8kbv86EM3ew9i+TJdqc7OWjzsvaGrHDNhH+s9
7LdXhJn3L1qzkt73vb/w79swo86uWnxwVEf5LtEanDbNeoGCDQ8bjd+t9laJ
zVds+sY5ddM0C4dz3gwIVGfzAFcnHucsb2Xv0UB8svNSyfrsLvY+xeplcw/U
iNXgaUGXll6SzCL8YQuuRph2VxGpz3L+5e1SEWP+zoqKP6M7H/9+OH7vSrFe
9xeEOOj1jCuO+/88GlPZEiu9hXjwz8j8gMYiHHju/OKoxso+PHk374L5Kj33
QR2ldk4amEXGC/QDDn4MvvMkKWRCuH4O3jfbMfCAWK97NMJxDNVx2anusRR3
rX+9wV4+vw8f/mq/TOMTnGI8buH1VPSX5bdD/hn0gD8kvHchDn4D5nOb9+7E
BQ18rBB89xtXikfmm05WYdzotkwyjromi+YO7lfch+f/ZKPdpOfMfHZZvn6V
XUse0U/86tPJXoKwWNJ+Og8Aeug8w/BbEj8OMv+fvNe9zEVkQ3k8aSfJ/w8Z
seh4CsYWEfsHK9nx8Gqzi+9HGLL5RvWY9H/P9oZjqWEWJ8U3sHxywpP5uiZZ
gVkXYma3D41rLSPtJ/ehRuTcWcUpJN+F8Z27X+fBXabfxhpn1JXqMvHG6X5q
si19+eQp31cNlmXG67LL31VjlFPIvAU7A643xlz7m3gK+e7sLWc9JrTn4dBg
25LlPflHYZwJ/mrV+dyWi9sq8GfNdA++djbJS7SZpzut6GZ53fYWuXanpFme
JOQTDs7HL1sVmbhb44iErXIN/uU46tTB+zHkfCTRdSR2JdPPuqsNV5cl/A8e
9TT590Vl8liLqzMiv4dv8l7SPTiyGu/rf0/iVUQGkQd/1fJiqt8yxi/remhK
Lkl3QhXG6+wnOJXj3VrqgbURpeTc7bv0I2qNrsBa0+4tx3NL+vClDcsP7uC3
F6EW800i1drMOZpvmbxkZTVeMNrtVVxIYR/e76EaCdFq5pyVNGbtIgVuDeoY
Hr+4Zlwt/hm6Y43ZiVTS346Z10K1u1ie8Gqrj/6ysmx/6XNZ3FFuTMGHUvw0
3DlI8d4d9n1ay9kWsowfgjiWN7tjCbc6E70YM3xk0voCzBEL3XtqVSLp1/Hx
RdGB7UVkfEmdJf3R6J1ihVjAs4uPbsruwwuF9ugu00/wKJ9P9uUQYR7DIkFi
XXNHJgK/BOMI++zRhhyPEMYvQZwsWJBQJl3Hvsvh6/nvtXUNH7mkpDV0d+cR
+4P+JcL60RuFMVvfM/ONxO0S/d4rtTL7r8HWAxsVK7Cv4zPN0e/jybwFv/es
XeTJpFJ+H153mGCdqT8T76q+HWu+alAG+lCuYWLTVUbGxV3nQ9AMSfZ9CZjP
Dz5a/Wztn4LWpqJXcbKl+HdezseQonTS3xz+jsEXOln+M+TNwJ6nhf3Vv+p2
rVw/AU3glzP6s0i/rCbXDHQZyiPxVeWNJPfRHB5qmlc+OXcgD3VGP815zfg/
Ok9FeLmvfatHKvVDN6vCYu6NiUOV0g9upvfi3+5MESj+mGSHkmVdjg9yzcUq
aZ+SCm+kkXE3y1A6f6Gb5cf6btxne8NxFjr0Q/vL+eZMDOcp8i6iJ099NLN/
w7kb1mP+zx0bhz2owXHfoye0OxaQcQE72MwLiOf+08K7JbV8bhXxSfvnh1dG
aPfkm8Mmz9P/PhU9yz8ywL+Sj0l+j+LfLnaJrxotxpzvbJ6r2l5CqMl4/7S/
fEzaCfKTZaTuDN4Tg8pLcrYFDWLjCogH6PxYqfS6Qcv+5pF+0fzbOxaPXd0Z
e3qWzVI86DCDxNUwjhA/g91InhD4xvlG8mEza/ALo4F1Ko/LyXq0mDn2i4Ju
Nfb03MxJSqsgdgb/TPJmHIubPs9z3+2e23lveUclhjwJzb/V5F3Wq2yrRFDf
Bz1wDrU9mF3fLsXyYOk8nsfe/Z+aO1l+rPHI0jhXhRwE3x3ff9JkTZHiPvOf
zkeB/4G8Cs2PbTV4c4/5f0jd9lNC5q8FqP+qgOolo8rw2Pa5oz8ksvcRlCtU
EvZ19OLNCu1QcuP7uX3tZbjsWPfEEBGWTzvf7w9X80YJtm1fEt7mWkjsOfee
jrf41lo8Ls7sjtd59n6K2uvC2yMvpeHFjtf1N67NJXmYA8FV0uM7WR7shCPW
t+bUxZP4FtZLx3UfqYrIWBwzY2hqRGQpVq4oaEOLy4kesA+dxwD7QH6M5Kk0
nvZzmleC0fxPr/KiKkh+gIpXEcSry0cuGjH8bCqOGTPfbp5FbR9e1qPD268b
irD5IlgvMD9p/t5OmzvqbZ21yPnZ0bfGjB+n4meS37t+rEk6IzwDP8hVnj8x
oroPv1TcetWn192VyPbR1b2RTP99z21PmD40Gz+77DHoydYKkm+sVgm26Gpm
ea1JYYnvvH9hYmew/yF0csTCRj7LJxTO21ebvgR8a0zHC7zf3Jr1KR/P97k3
5N/4MmK3NbNvan7OqsArV3c/NjOoZsfX5pNC/yfl+PmCpQ+r7WqIfHvt+HXl
oYV4+XvXDN8V1aSdbj8m9uPYFWCUv1h0zaMakk+D/aXYeeb02o5atD9qeUhh
QzY+88bfYVOggImj8kOMt9T24TknKWT4VHdWokL+W/+ZtUy8bRxxJJKN51GT
bMyo3xI5WK//buPZqwtxnNEGrcPBJaT9E4uOLOhsZHmG/Vc9jE3ryMQ31+0s
tZ+ViL0H6FeGb2L5kLCP0PmlpIPulquW/sFJVmNHD//O8iHBP6seG/kmnrEz
xOHgn0HP5iqLsUPEWB5jRe5b0+BeeU6YDyKK3x/cYda7ZtDNU1uL+UR/0KGx
45S5+eh2ffPHhY3xGPwnnTdDn3McdwmycXHyMLF7koXEDglhogUBjZnEz0B/
73crbeqfJMAayZUZS5b+Iet9+EbRh/UYY+uZY0s1Jdn8sO28iQpDs+5gZ6tp
hw98YHmY847aOvgV8THkdQH/pMZNd11kQvJ1U1KnJGAmnm+ftnB+VQTG3LjX
L3Ql2fz25rm84MPuMfjg0X6tLepsHpU6LyM4L4MdwG941ml53BEvJv0FvwHz
cKjLIdWo0nSc5XLrQK1sX36jot62L9+Y9Qjreuv2WWefRcVjkag1N73UWP4k
2Ae+e+FYAcdAXEDqKRJGWeqq0lWYrr+Ef1nNa+/1+6dQx8kxddVzlmTiSj0N
nSWybB0H6v52LsP2dsplkToRnF8Ar3Na9FGtNRNVlX69nZnHvq8CeVf01XhP
nQoPQ7xEfv/CJG6+Ks8SQ1xEft/K7E6epAwTfwnjh2ExQecPiPX63UkhDnUQ
cs4V4qA/YalWVbdUCsHJ+7pGibZxsilYYGWPPqknsO+E56jn+ksIiDz0l+QN
hPYc7rpefYU4+zukFWG7ZdRl2d932Ll9cZGsRDHR89Dla8xK8V6/C0m1Z/um
jyHYZSpOeHor63m/FGSj0vZtqkSv322k5D+IXSw/Jc7aAcYL+DZw7gtqP3rz
A+MXnl3a+1K0gX1nD+pWcE63MG/mikqxfDnIr55EhgemyxWigMP9Mmq47O8P
RqhvMrslWog+bNJP7u6qRJbDbFKk29j3ZMBuMC7QHtAPfAb47t5J+EETrkHb
tEclOLUmkvwq6IE8HpzLoL/9HbUP1w/i4RL3lkdyCgI0MCLxb/bmctS/64y3
2ys2v2eaUTRvMHNuDMof+12q13t0UL+AdsK5AMYR7EnjMJ8dX/q+6VbOInrI
uzfCdUF+p+Cr5a1YZhyDJqm+ncTsi9cGOGeu00tBF5qPOEkrs/k6kM8Pl44/
xPjr7Q06p1f8jcddtWZDnCTZ35XbWn8/MK0hntRlzNpdP2cy699E5MwAXnc6
zjD990xbnP0dt4vcqBMTutJJPUsrJUJ9iyKbz3lQO8F7SK/fy4N2Qr2GfzdI
W5dTjA3fzd4xuSkTu9zT3H84ZQWynydVINUrT2Xz4bFE2tXZiM4viRz5Ot1k
CPt7bZBfgvWe2e30QZbxm5y8P0qLW/g4VaHfe7MxWUj8mvNSk4F9f1/MKT/C
Q1IyCy98Pt3NJx/jP8O+oOHy7O+aAX7EfyUzT9jfcQP90B46nwP2qRpsXe2l
yOYtoV90XuiXrUvLTelvqKNoIk++V1505/KpASs5bP7bPTFNc7BkDX42POD8
0gvh6OdNwaGn7mw+SkXNzsvUKAtduXTGd4kqmxfdfvjQ/f0cNp9xZb2ht6E0
W7cV3Fxx9wLTfqsyF8NhIsX4Xvbdi0Yy7O95AQ52c7edsKVWljkPCc9x3mfG
M3p6/X6TEJcI3Mr4q158JKGfARz8wDWJlcOjR8WR32NKCVvzRxOZY96MlwsC
/WbQ9TsM9buOtdUTxs/goQExxgqvh/X9vbkt9TV7Noqn4OTj7fOaYmKxXCqe
vlarGBVym38s1mL5P+pXHaXOcNg8TeBYKXd5tRwM/hbsAPViWL8pM7J/qkiy
+Ksx+w6tZvRoj1nWyetm8xLjB965uVepFGmXrBmlncfmE0APnX8A/5bgJq8i
qM1DE2XdXXg6GcQ/QDwP/mfu2eB8O6lCVOg3d1h0LZvngXVN53m6R93/uoLL
8n8G7lRc28iMx5yuum3HVCvQLMmvAaOesvkW461y5/W4VWjd9KhI12bc53dw
IO9xJC5rgLc8+zsg0UPkNyx5jlHysJC9/ZQEhP88oilggPaIMPZ3Q1p+nS5I
EyCvh+obGFuz5025zp/WuyuQ2burdec02fwk7DtwLgP/D/MZ7Km+5HHYK8Fc
Ygc6PwP3BYD/Q363dHWsxJ4NuWjWXTvDP0Fpffg89Hkf/C3oBz4/3FMA3g4d
zwBfCO47sDzq/8NTS97ncfpnofmPT61TX1eA5j08Yn9mT2IfHhe5zy7cL4Cn
Qfg/FE9Gc6S2yLaWIuReUiaWb5iFAlNnanQuq0b27jW5p6LY/OeXBu4pbq/f
W0kwsbbcpZxDxte5Pv755eZKBPdiTFG0sxGnCtlISzb2zBc6PsRqzyRmtJaR
fMXI7Y/Pj19SjuLju0SW32Pzt/07kv0NHlSgdc73YqcuYPO3CpMGpVQzcS2c
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
yjH2HvH0+9fym10KcRM/4eCcm+y9rbT1QSFr24vIulPzibxtJ+lK6j6Oj4sS
z/Ssr44Pyh7HrPALqUOOzvH52MrlroOLBXvPC+pKPrPK7jn2rI9/GyLHHh2H
J+8YML6WiXfAX+kmXzYd3r2O1AUgL3F8zRTrMMlivE1uz9aA+kw8LjPnqYoE
m//ZtVygozRXmtg7fpTUwcfM3wPH9z/bpB6D6bo51N3m71aVqGbWAdQR7Dfd
KlneyfLroF6wxnx5kvfpVJzskefrOJG9t8ifv3j1g26Wd3cwavLfZLEaUk+k
7/e159d8slXPxvR9Vf8/fLeK9Aps6Ob7PlKPvXcGdT2JI+bmp2ax9/sWyA2w
WMz4Q7DPyBbnIbPb3PH3ma98V4QU4piYPU9PrGLvZ5XaVd4fPacAmw3lrR8U
w97nwkej1Fp8Bdizbn3aqY1939ENjfqu2sIsZCnzkTfPKefgwkf32l61FZHv
hiZqf7trzNYBLZ5F3U3rqfObJe99qZCFdyK5i5cjSjHf8d5yK2f2/iDUhfMs
8yz599n7g2ZK2/wbe/EA3VR/Sxvq5+CwcLMhqow/V9bYeCOw1zu94H9gf4d7
DVA3fJZ/Na7Enb13DP6Hvs8LfAnQ86y/hZ5d1EpSL4N6B9gTvgvzFuqG5HcW
YtKeFzD7S4hh9ZwVdXmkDgX1Dmj/hwdZM5Uv38H0vVeQh/oO2A3aT98jBv8G
eFuI11B9ySWkPc6j8q1mM/M94Pxwr30l8bhxcvW+LRfTsMtla7lI19w++mF8
oT4OdVX6/rWH2aOSjU15xA7//GWG+xtkkPZD/hDmv9tRiSWvXsXjLx3qJsP6
sfeIu97dPbunIRtvcetonifB3qcGP3+tcnW2TBfLG4T+wjg2Xnw5WX1ICt46
auWoyMJ0vPlJes4/efZeuU991IhjbSw/jX4/FvJdUH9JOLlKu4qJVyDPBv72
5oB9UfbKAjxvRZyfngF7z/GP4W+J17wa7OB3vuiGPHt/qtTm2OuTClVYYuiu
QouJvD78QGnTLodhyArVvu42Wt3zO6lCvgqcU6S+9Ktd1lnN5rV3yfuESzDn
3dGuP9S6WTyE26mmzpzHzxUdsz6syPIJ4R4f8P9hnY4SnmdzJdymqTRkohTj
nI3Vvfh4Ofuua3TVZKKMfZU/XBqL8D/5q5P1BOz9SvCfhosvTkkVT0FQH5w7
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
    "], {{
      {GrayLevel[0.5], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
            "]], 
           Polygon3DBox[CompressedData["
1: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
nrWk/H3Kn1R3lZE7awjuhP8Xx2a/6A==
            "]], Polygon3DBox[CompressedData["
1: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
/ZeyNLT6Qn/Pzrr+G/s/lUnwZg==
            "]], Polygon3DBox[CompressedData["
1:eJwt1nmQz3Ucx/GvXawrR1uGtdi1hFF0uO+S3GItUhu1w9hcS86VXJNIKTmK
DslomqJy5g8RxrLJ1UQjS+S+x2QkYerxmd/vj6d9f56f1/fz+Xy/n+/385Oe
k5c5KiGKohyUxEj/7EqMot0Ypj0Iz5SIohbYrt6BApxAa26v/BHZv7Wvh2yx
KBrDl0Yu/wr68v1RisuUr801x5XiUXQUWVzFpCj6Vr3XYpbhMzzFl+dX879r
L8QitOMT+Hn8Vu3N+AEN+f5INXZ1nNR/HP24SvLr1efl1mEDWvL38xP4xdoX
cRZP84dRmv/I/SzEPCyx/q7BG7ssCvXvxifcNNynroD97nUflsqXNP4ibqdx
d2CxugS3Sr6VMRLDc0R7RPJ39bdSjke+zrGoxD+Aidw4TOSGoiSXgEbcWEzh
Xkeusb/Ck+qKvKVHYY/vhbnle6jTwl7pfwmDZVeigzqFr4aMsPdcY/nv+DXY
wzXALeP8hXLqMuisr1NiLH+Dr8P5E7XhuoQ5+CLcUY+ymHyswOfGLsb3E+6L
QRY5AHf5o+HZqUvhMX2PhneAaya/NOwLtukrQFOugmeazy3XnoM/0Z6vGvZG
PRkjwxwozT2E6eoZWKXvG9ThyiTF9nCI9R/gDqIFX5ZfFvZW+xB2o0nYc345
/4v2PhTG11MFueocDNM/HPO5RLzM5WEIlxPemfDhGWeWehNfGQ+iAX8x3AO/
0fOqyaXipOdwBm34x7Fe3zqs4o7Jp4T3UrsQazGDq6lvvmnexTuYbS828CeQ
Ln9Nbid2oUD2HP8En2y+FFTHCf4834yvoX1DdhNmchfQmq/Fl8B//Gn52eE9
51uiWkLsHk7xPyGDq42bxWJj7eHOyjcpHrv/8ByqoIhfy4+z5pHWPhyjkcyX
wwvqTAwOZxbKcKvln1O34zuhcXgn+WQ+PyH2TkzFCHPd5iYkxsYdEcXGy4p/
ZxmuWap+A7PCX+57+VIYHt6psL8YaJzr3Hj9eXJjotj3mh//LiclxtbRFq9i
VPz7Poqq7r0aUlELRdwm8x5UH8L+0BfOMuPv4I9rb8YaVOb/4De45kNjLkEz
NMfG8L0hW/0icjEUedxoPK/uHj/7B4Y1c1PCdxHembCvSDD+r9wkdNPujUxc
k93HTUa29lDk4hZ/IDxjZGn3xLO4zu8PY+NL7a/xBZLDbwA3JDF27qRGsfOp
T3w/093vAvVMTNN+EzW4qa75OJzJmI8k4/wW9sXf97TnYgHej/d10Zfk2uJI
QAFXOSn27h8OzxwncSXsAfePOXra115ojP7hGwnvFBrFf78ycIRPN06a/DRr
/BRv8/PCb59sn3DWqJuiCS7Jp8n3DL9J4bzFDeNv4VP4Qv4YV9s6aiAN2cbu
yzfg66MeiuRT5Qfwg2VGoy6fht7cMNecVp/Cw2Ef0Y37OZwpXGftjuEaDAy/
y8brYR1d0R1d0DucO/JvyS+OYu/XdFSRf43Pi88b5r8pc5Dbgs3h/w9yhZiD
FPm6WKlegQX6F4ZvVfY8X8dcdfEI2przEv8jtslckD+Dq+E3UnYrv5U/p302
3teW78XfdH15lAtntHGqej7b+QL5O3L/4jY6yt9DllxnZKOP/FXZ+vxymbn4
IHxT4VzgL/MN5eqjHjrIX+b/B+DsFSA=
            "]], Polygon3DBox[CompressedData["
1:eJwt0D8vQ1EYwOG3uG0kRKqzoRIDuYlBm+oHYOti0oFBhI3NZmBBJTQSxSys
YrDwIaQSRn8WE8En4LmJ4Unf/s65vee0vLQ+t9YTEYMU+EgiqkKNOjN9EbO0
8hEJy9qBfW3m9Sb7epENa1f6NSv6Kof6a2/EWC5iijrT1HjTz6zf2ZdjU/vN
DqM39CNa+h5tPWGUVD/mRL/gUXvg3DzgEqfWbs3PlP1Wyot5xFrH2qW5Q8Xc
dd/+7K7mH63o9cMM/f8nJb71J/smfaYU7H931ntrVX3Rs9u+b1Hxri97PlnQ
J9gx72Znzc7IDeP6H6PNK0g=
            "]], 
           Polygon3DBox[{{1669, 1069, 1070, 1670, 1491, 522, 523, 1492}, {
            1677, 1120, 1121, 1678, 1549, 622, 216, 1336}}]},
          Annotation[#, "Charting`Private`Tag$19355#1"]& ]],
        Lighting->"Neutral"]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ktIFWEYBuDfc45tKkW76KbyaKtEpZtmGKlJUmLlvQShFC0IbFEqEblp
07aojSJoQbVRWhhILZLkBFkEUWioYaLShRKkrUGPtHiY93u/mTkzh4m3Xqnt
TAohvCCZDWwjhVTSSaPQ8qPjB8Z5yQRj0RAO283IC3zlGQP6fP2o/JzHPKFP
n6t/Kh+JhFAZC2HFXCKXcsr8x3xczmUP1bpVXYVcRwNNNOqTPHCzfJYaqji5
fg219t+93DJLzDHNFFl2Cfd8LSeY4BWF+nn9DtfvJofI+rPo3+ujcoxr5iy/
fUe+yw1ztnlIfkCvOcf8SJ7kDW95x4hdmd2i/JMZpvlMif6L4yyp/qutbCGD
TAbtP7l+k/1mtuuS6dcn9BE5yppdn25c91fer3to/mG+7T1vcdMcMzfL57hA
Pdf1q85vkIcZoZ9e/Ubn35fvMcgQA6ToixwPUcwBDlJAnKuunXXPbDmPfPax
lx6733ZH5VK6zb/MFXI5x+jSfdNd9N1cooUO3WXdafkMNbTr2nQ75V3EySCT
83Ynov+/83+calZV
        "]]}, {}, {}, 
      {RGBColor[0.5, 0, 0.5], 
       Line3DBox[{841, 829, 830, 832, 834, 833, 1705, 857, 946, 945, 931, 932,
         934, 952}], 
       Line3DBox[{867, 864, 838, 837, 836, 835, 1700, 839, 840, 831, 828, 827,
         1707, 860, 933, 935, 936, 955, 1725, 953, 954, 957, 956, 924, 925}], 
       Line3DBox[{875, 865, 866, 863, 862, 1710, 874, 868, 869, 890, 884, 
        1713, 858, 854, 855, 856, 1708, 861, 930, 937, 938, 912, 1718, 900, 
        898, 899, 923, 1720, 929, 927, 928, 917, 916, 922}], 
       Line3DBox[{987, 986, 985, 990, 1737, 991, 961, 1727, 960, 964, 1728, 
        963, 962, 974, 1732, 973, 979, 1733, 978, 977, 1752, 943, 944, 1721, 
        939, 940, 951, 1779, 1120, 1121, 1782, 1124, 1125, 1122, 1781, 1123, 
        1130, 1131, 1786, 1132, 1785, 1089, 1090, 1107, 1773, 1108, 1109, 
        1110}], Line3DBox[{999, 879, 878, 876, 877, 1711, 881, 880, 870, 1709,
         871, 887, 886, 882, 1712, 883, 889, 888, 848, 1703, 849, 908, 904, 
        905, 1717, 911, 910, 896, 897, 1715, 901, 913, 914, 915, 1719, 921, 
        920, 1186, 1096, 1095}], 
       Line3DBox[{1004, 1000, 998, 968, 965, 1729, 966, 967, 969, 1730, 872, 
        873, 891, 1714, 893, 892, 885, 846, 1702, 847, 853, 850, 1704, 851, 
        949, 948, 947, 1723, 894, 895, 902, 1716, 903, 926, 918, 919, 1783, 
        1128, 1126, 1127, 1784, 1129, 1099, 1097, 1098, 1102}], 
       Line3DBox[{1005, 997, 996, 994, 995, 1738, 970, 958, 1726, 959, 982, 
        1734, 980, 981, 975, 859, 1706, 845, 842, 1701, 843, 844, 852, 1722, 
        941, 942, 950, 1724, 906, 907, 909, 1778, 1116, 1112, 1113, 1777, 
        1117, 1118, 1776, 1119, 1133, 1093, 1094, 1772, 1103, 1100, 1101}], 
       Line3DBox[{1009, 1742, 1008, 1010, 1007, 1741, 1006, 1020, 1016, 1743, 
        1015, 1017, 1021, 1744, 1013, 1014, 1226, 1816, 1219, 1218, 1225, 
        1815, 1183, 1182, 1803, 1177, 1178, 1172, 1798, 1171, 1801, 1181, 
        1080, 1077, 1765, 1076, 1081, 1079, 1767, 1047, 1048, 1049, 1769, 
        1085, 1074, 1075, 1766, 1078}], 
       Line3DBox[{1028, 1748, 1029, 1011, 1012, 1027, 1747, 1026, 1030, 1254, 
        1822, 1252, 1251, 1244, 1238, 1819, 1239, 1246, 1210, 1811, 1209, 
        1191, 1189, 1175, 1800, 1176, 1173, 1797, 1170, 1153, 1152, 1792, 
        1157, 1158, 1151, 1791, 1059, 1060, 1084, 1768, 1083, 1082, 1066, 
        1065, 1760, 1067}], 
       Line3DBox[{1035, 1750, 1031, 1032, 1034, 1749, 1033, 1044, 1754, 1043, 
        1041, 1042, 1755, 1019, 1018, 1745, 1022, 1023, 1024, 1746, 1025, 
        1211, 1812, 1185, 1184, 1805, 1190, 1174, 1799, 1073, 1072, 1763, 
        1061, 1062, 1762, 1051, 1052, 1757, 1054, 1053, 1050, 1756, 1045, 
        1046, 1758, 1055, 1058, 1057, 1759, 1056}], 
       Line3DBox[{1038, 993, 992, 989, 1736, 988, 1002, 1739, 1001, 1003, 
        1740, 984, 983, 1735, 976, 972, 1731, 971, 1040, 1753, 1036, 1751, 
        1037, 1039, 1802, 1071, 1068, 1761, 1069, 1070, 1764, 1063, 1064, 
        1780, 1114, 1115, 1775, 1088, 1086, 1770, 1087, 1091, 1771, 1092, 
        1111, 1774, 1104, 1105, 1106}], 
       Line3DBox[{1216, 1813, 1217, 1222, 1259, 1258, 1824, 1223, 1224, 1241, 
        1240, 1825, 1227, 1228, 1237, 1202, 1201, 1809, 1203, 1207, 1204, 
        1166, 1794, 1165, 1250, 1135, 1134, 1136, 1787, 1137, 1141, 1148, 
        1789, 1147}], 
       Line3DBox[{1221, 1814, 1220, 1232, 1231, 1214, 1213, 1818, 1235, 1215, 
        1212, 1206, 1205, 1810, 1142, 1143, 1144, 1200, 1197, 1807, 1145, 
        1146, 1180, 1179, 1149, 1790, 1150}], 
       Line3DBox[{1236, 1817, 1233, 1234, 1230, 1229, 1195, 1194, 1806, 1196, 
        1193, 1192, 1208, 1199, 1808, 1198}], 
       Line3DBox[{1257, 1823, 1256, 1255, 1263, 1261, 1826, 1262, 1253, 1243, 
        1820, 1242, 1260, 1249, 1247, 1821, 1245, 1248, 1188, 1187, 1804, 
        1156, 1155, 1154, 1169, 1796, 1167, 1168, 1795, 1159, 1160, 1164, 
        1163, 1793, 1162, 1161, 1139, 1138, 1788, 1140}]}, 
      {RGBColor[1, 0.5, 0], 
       Line3DBox[{1323, 1322, 1320, 1319, 1642, 1719, 1324, 1321, 1643, 1783, 
        1547, 1546, 1541, 1675, 1777, 1540, 1539, 1551, 1781, 1552, 1550, 
        1780, 1676, 1480, 1479, 1483, 1762, 1667, 1459, 1500, 1765, 1499, 
        1505, 1482, 1481, 1791, 1572, 1580, 1682, 1793, 1581, 1567, 1566, 
        1569, 1789, 1570}], 
       Line3DBox[{1326, 1325, 1327, 1328, 1720, 1303, 1302, 1309, 1715, 1308, 
        1313, 1310, 1716, 1311, 1312, 1641, 1778, 1548, 1549, 1678, 1782, 
        1490, 1491, 1670, 1764, 1498, 1497, 1763, 1496, 1495, 1801, 1592, 
        1579, 1792, 1574, 1573, 1577, 1578, 1795, 1583, 1565, 1564, 1787, 
        1681, 1563, 1562, 1790, 1571}], 
       Line3DBox[{1334, 1265, 1264, 1278, 1705, 1277, 1283, 1707, 1280, 1281, 
        1708, 1284, 1273, 1703, 1272, 1274, 1704, 1275, 1331, 1722, 1329, 
        1330, 1721, 1333, 1494, 1802, 1593, 1686, 1805, 1590, 1591, 1803, 
        1589, 1800, 1685, 1804, 1595, 1594, 1809, 1605, 1604, 1810, 1606, 
        1599, 1806, 1598, 1597, 1596}], 
       Line3DBox[{1338, 1337, 1340, 1339, 1725, 1306, 1307, 1718, 1315, 1314, 
        1318, 1717, 1304, 1305, 1723, 1335, 1316, 1317, 1724, 1336, 1677, 
        1779, 1493, 1492, 1669, 1761, 1489, 1588, 1799, 1586, 1585, 1587, 
        1798, 1797, 1684, 1576, 1575, 1796, 1584, 1582, 1794, 1683, 1603, 
        1600, 1807, 1687, 1602, 1808, 1601}], 
       Line3DBox[{1477, 1759, 1465, 1464, 1466, 1472, 1470, 1471, 1774, 1528, 
        1526, 1527, 1531, 1532, 1537}], 
       Line3DBox[{1486, 1760, 1487, 1509, 1501, 1502, 1504, 1769, 1508, 1451, 
        1449, 1665, 1756, 1453, 1452, 1475, 1476, 1512, 1770, 1511, 1510, 
        1513, 1673, 1785, 1555, 1554, 1525, 1772, 1674, 1516, 1517, 1524, 
        1522, 1523}], 
       Line3DBox[{1503, 1766, 1455, 1454, 1456, 1478, 1473, 1758, 1474, 1467, 
        1468, 1469, 1514, 1771, 1515, 1535, 1536, 1538, 1534, 1773, 1533, 
        1529, 1530, 1520, 1521}], 
       Line3DBox[{1518, 1519, 1556, 1553, 1679, 1784, 1557, 1543, 1544, 1776, 
        1545, 1561, 1560, 1680, 1786, 1559, 1558, 1542, 1775, 1672, 1462, 
        1461, 1463, 1757, 1668, 1458, 1457, 1460, 1767, 1666, 1450, 1506, 
        1671, 1768, 1507, 1485, 1484, 1488, 1788, 1568}], 
       Line3DBox[{1632, 1267, 1268, 1700, 1631, 1266, 1279, 1713, 1299, 1298, 
        1712, 1297, 1276, 1634, 1702, 1270, 1633, 1701, 1269, 1271, 1332, 
        1752, 1433, 1663, 1751, 1415, 1414, 1812, 1689, 1613, 1815, 1611, 
        1612, 1607, 1811, 1688, 1821, 1622, 1623, 1624, 1825, 1694, 1614, 
        1818, 1695, 1615, 1616, 1817, 1696}], 
       Line3DBox[{1637, 1636, 1285, 1291, 1710, 1290, 1292, 1287, 1709, 1286, 
        1300, 1301, 1714, 1640, 1282, 1706, 1635, 1359, 1364, 1733, 1648, 
        1363, 1362, 1753, 1434, 1411, 1410, 1746, 1417, 1416, 1418, 1816, 
        1693, 1625, 1617, 1819, 1697, 1621, 1820, 1620, 1618, 1619, 1824, 
        1692, 1610, 1609, 1814, 1691}], 
       Line3DBox[{1638, 1293, 1295, 1294, 1639, 1711, 1296, 1288, 1289, 1730, 
        1353, 1365, 1367, 1734, 1649, 1366, 1358, 1732, 1647, 1360, 1357, 
        1731, 1646, 1361, 1413, 1412, 1745, 1405, 1406, 1407, 1744, 1659, 
        1408, 1409, 1421, 1822, 1698, 1630, 1629, 1826, 1628, 1626, 1627, 
        1608, 1813, 1690}], 
       Line3DBox[{1651, 1371, 1380, 1382, 1383, 1372, 1736, 1373, 1435, 1437, 
        1436, 1427, 1426, 1750, 1662}], 
       Line3DBox[{1653, 1388, 1352, 1350, 1645, 1729, 1349, 1351, 1356, 1341, 
        1726, 1342, 1343, 1728, 1348, 1345, 1346, 1347, 1735, 1650, 1368, 
        1438, 1441, 1755, 1440, 1439, 1443, 1404, 1743, 1658, 1402, 1403, 
        1419, 1747, 1660, 1420, 1422, 1423, 1823, 1699}], 
       Line3DBox[{1654, 1387, 1385, 1384, 1389, 1738, 1386, 1355, 1354, 1344, 
        1727, 1644, 1390, 1391, 1393, 1740, 1394, 1447, 1445, 1446, 1444, 
        1754, 1664, 1442, 1399, 1397, 1741, 1656, 1395, 1396, 1401, 1400, 
        1748, 1661}], 
       Line3DBox[{1655, 1652, 1381, 1379, 1370, 1369, 1378, 1737, 1377, 1376, 
        1375, 1374, 1739, 1392, 1428, 1424, 1425, 1432, 1749, 1431, 1430, 
        1429, 1448, 1398, 1742, 1657}]}}},
    VertexNormals->CompressedData["
1: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
S8MrlkeOqkjRYH3Wa95CcT5s9mZnsbMoODbgxl0ySYN7g1L5mtV8OH/IQ9ci
lYolUZn3OIQ3bnAHnF+w+MB96TleeIaKJ0PYlmGET0o58fXXv/GB8lZs4xH1
Luxo3vFL3okKUTXtyWlvBOCqo7ZzWKURm2Noq1IJRzV8NQu6/1IArZd7I9LU
G/GE8IvFeuK/3kMdOw8T3jLKVHj+bS7hr7K1OZdUGKC/a/4ixZUCsD/YzTn1
sg09eiN3br9E+MHTBfbd58PoMrPVsx62I8+w5SWf1MX938UL2ulER2yujMZO
0nDxMqNrZ4dpcH7zufAuMs9vKGuafZh0bNyydlRGtxtqzSxXjP3HBC9J2S2S
4Ux87rBSMEj8Lq/s/bjRABucer/v1VvEQK1l5i/2kPds8H//24nwbsRUUU/D
exYeYGbL+FymQe6/oBUm0zkQPzLbNWMTA0+/60lrIPU1T7E2ECwl8xCfesNr
iI4eM7p3Pxigg+Ts3ItDlwVwbMayRM4mCq4tjdanr6NAaHngyd+aQpCQTf1q
taQTrTqO1QQTblx7a2jfIxUBfLypsAyKuvFjjcP7NYod8MCAfsT7EB8cxnsW
OxvQ8fP3Xt4Bog+CYLc1xeN8eBORvrljFQ1PP1B+fpT0if4fz1Q7cz4Ymi67
vFKRgZqCvpwZS9vBQXZ9rUQGF6yv9drZ6FIwbfDE3n4yL1eshjJNtfhwzcts
5IRtB572vJi+gHyvxtK+pqrjfKheWprmGtWEU967tl8MZ0L9XT3PxZ082Cn1
McxP+Scu3vVz0X7CORd9j1usIHN4P2KJX70aBfdXBs4uIJzzy7fZKoLsxwcY
zr0Lzdg30iSwt2ZD97DMwjdJXFCe/t+Hb+LlqGT/PKdziAOrHwY4KpN8OCX7
Ma3DtwWbXsurLyUcFHlhK9eL+MeR3RTHo57lqP76k/8ewodi2mOMjm1ssNYf
zpl61YXb7klOfSZcZOzZHSYivONox7RLFe9G8wK9GfPJ9VXjVUXcSCbsZPWW
9Acz8XDmmQI1cr0w4tSfs4RDxWTabr4iuuK+33X6baIzpTKn/a4AG2z/NlVh
PBU9XdvmvSQ8ElAac+zmYR4YKWoq5ugycfG9dDtJore7Di6nMb7zgLP//p23
zaRPLn19kUN8ofqlodivXTxIvl7ZEB3GxOmrJGwaiI8kqK9qTXrFgRwTrrL4
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
Pz+8qhENTP/+ItVLRUETbyweYXuLu7qRfyAVrdLbfK/pGhVtv2st8h6v71jv
wp3vHsboT7DzxXm8zsxtiW9Mng0Dn0/J9AdpIrobN998+PkwchAsyHbDvGjW
0rlr0yYiWmv2YfVXjLfjy5Kdt7D94dGzf15LkNBz/+Snu/cyUJhJipHkOhJE
0MEueX07UicG/GF7PYpWG0tcuIDn54yx862H2g1oMZz7XvIXJno6ZDg66UsG
KU72KPbnCO0l7njDh+NmTd+aF3K3SKD0zm5v8VIzClG4vH1iYgyFivr9ssU6
22Zbom7gfCuian2ffpU1hhTe2OVdtumHM4zEFjv7HHRM/d5pQSUmOm7iX/TB
lQrydq+y+t/rIWHJnYsCON/s/ySbV4XzTIuT9fo9jgjJhlM6TyWOoeDfe0bM
w3H+z31q9BbbdTd/KXPCdiPmRIUdtkuckfN9wGxG6ZQls2qcX3uJ5BP9TCKw
3xBS1DrZjf4IUN8UcDJRBff9NaL1A+AU4u2np0JA8ncNip5tYqL3V6acc7BO
nDaz2/RmI+ZUtoH9JvJMJJfMeQd/BlnC0hHKyzrk+r3nyyT2k3O8kjP7sJ+s
Mly3v2B/Nzp8cuen9etwvnS/seiOdZ/9Qvs6u/wOpD7rZsk/xUQ8rgcZhsID
EAQPDLaZdSN1k+uSL/iY6AJJ/Vol/v6Aj92q0oIhVO6+Q5z+bgil7Xrexo9x
R3c7k4egMYQ2SPzqlcP4uei8hsGc7YGGttF/U/upKHp1fPTqcwxUZbfewQTz
MbNWjbdp/jRUWN1i8PgqDdn8PPtiH8a1dtETPS29FBS4eUuOzScG0jBNeROL
9VSWS3Tsdsz/wre4pHRhPigWmvySgnmgkL9rtqAAFbXt29LSjv1Nj+L8rFOL
CDPU5NU/OKmItivUNxnj9onfVzrkY0mQeYuz/ekxMiI8vatg9WIY2bgHuynr
k6DNf0zmlnQrenXeScR/dyuSqil8cG3bJAiN/dkpJdyKEq9OyhNNWlGU3IkN
LPtRU4XVCeIExDfifHFYiYDOme1WrpZlwoKdUou+GAG97ariMsTrFnj0tQjL
rjV0dXNgSj+a3F7SeHK1DuJpNMx+mDkOq7KpSYpmrUhN1rGjZF0rciBOGt7H
14+tbVzkl6ChC7t/Zfp10NGY430Hs6UeGCmubSfM0BC3PJt19jINKQ1ciRDD
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
QA==
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{364.10996379125135`, 397.4241120466886},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-1, 1}, {-1, 1}, {-1, 1}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.0302936214347571`, -1.8454727446617571`, 2.642484702385513},
  ViewVertical->{-0.057716882760593315`, 0.2630262937497497, 
   0.9630607095301263}]], "Output",
 CellLabel->"Out[69]=",ExpressionUUID->"d0805a45-71cd-449e-820c-09b6f2f8f019"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "MeshFunctions"}]], "Input",
 CellLabel->"In[70]:=",ExpressionUUID->"5985c4fd-524d-416e-b334-7f9726f5f36a"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/MeshFunctions",
              ButtonNote->"paclet:ref/MeshFunctions"],
             "\"paclet:ref/MeshFunctions\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"MeshFunctions is an option for plotting functions \
that specifies functions to use to determine the placement of mesh divisions. \
\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/MeshFunctions",
                     "paclet:ref/MeshFunctions", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/MeshFunctions.\
html"], None}, "http://reference.wolfram.com/language/ref/MeshFunctions.html",
                     "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`MeshFunctions\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/MeshFunctions",
              ButtonNote->"paclet:ref/MeshFunctions"],
             "\"paclet:ref/MeshFunctions\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"MeshFunctions is an option for plotting functions \
that specifies functions to use to determine the placement of mesh divisions. \
\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "MeshFunctions is an option for plotting functions that specifies \
functions to use to determine the placement of mesh divisions. ", 
    "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/MeshFunctions", "Web" -> 
      "http://reference.wolfram.com/language/ref/MeshFunctions.html"], 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
    "FullName" -> "System`MeshFunctions"], False]]], "Output",
 CellLabel->"Out[70]=",ExpressionUUID->"fff6b2ca-ce65-4210-8686-ee98c2cee742"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Example", " ", "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{"SliceContourPlot3D", "[", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", "^", "2"}], "+", 
        RowBox[{"y", "^", "2"}], "+", 
        RowBox[{"z", "^", "2"}]}], ")"}]}], "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "^", "3"}], "+", 
      RowBox[{"y", "^", "2"}], "-", 
      RowBox[{"z", "^", "2"}]}], "==", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[71]:=",ExpressionUUID->"f91c2dc2-e079-47cb-ad80-8e6c688e0c61"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
Hno88FygZ0vnk9D1UMAOdU/ovBe6fhnk4dB18YBHouuqQD4P2Om8Hbp+Ctjp
OnGQnwN4lc6Lpuu1QR41Xe8PcC/dnnynNhBP0fk5NP6BfQ56jHTeMuxnOg+K
fl7IAwc7nb9E12GEcUL9QbK+A7wNtKfzgmAe6Dwiuq4ftA/z2WxmM+UPXTcQ
0XUDgXei6wxCfhH8L51HBHUk6bwjer3ADnnL9PcCUC+P/u4AxkPn4dN1eYDf
o+sVwjih/qBYuvJbtXtGaN7DuU2Ff0XvmfjSewVD05HYuLbG/jvZiBVkKN6p
+xQ/ah2nf6YtAfVNuqEiOakSPRq98MG506+w7HzduCxOLsmXFhPL6JZwn0l0
QQOi+zP+PcxGXkbT5PlbnmLhxpnjjnxLwF4WE4w7pz5EsmazNm5uSsbzeo3m
zucmY4MYmfJZirnIq1ObHyyeiwL0fqz7NewjVvEJrH+mh5FY0GhnI0WMSn2k
9befSccGiv7P2GWvUHqtYqT/5VdIbMuVW9eMYrFd4v5X/gm1SOyGjs+RaReR
7Mjlm6STinHfz6i6UuVy5NUw/KzztA/I2LWl8iK3AGscunD2cHINsovYv3x5
UhqqfTGjZ9HmUqI3CPezgPdgfsSU9vQIRz1FMD8WbmocMynR+ZupOrv7RDpW
qbSO2a+AUcDEqeV9uSL//8s9MfclxmKH1v6x4FqJ5muTzIeoSYPm32Atf+L6
P2mYJZgY0302HR9as/+CnTrG855mra64lI3TXw2zU/wkmsdtO/H8PU8xtLe7
Gv583tF0pLK48InjcNE4/4/xG497vu7vZ1E82IgqLdpF7cTyfsWebk57NCZy
V/nZbOxlOGJnEDcBeamYxGiuGtw/jEeq+kFL1rMy5FWSXHOr6xXSsryiL7fs
Az4Z7Xag/wRjzyw9t4vzJYvskzsfW89OX/QePfcx5TkIs4mdvaDorlRWCtJT
2Sewdc/GU5+N+le1tpzsq9r8Vd4/YrJwfcq8z6HyjN3p0S6lRzuycF55VrnM
1BLyvLyS2AQ3+xwcp3al0f14MbHb7XzwZOXEHPK/eYrj9C7PLMNKXu2OPwTl
JP88Rll8hKpbJS7aazTF+XUlsceePdikEJ6PvS/Ze546W0DsjmpOUSVq+bjO
ymK2uXgBmf/iD8bKaXJF+Et/yFJz4yJif9jyJO1acyG+L35x88RxRQjGMzfC
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
GlxN6nFH+qxqzBe9x87hrhdu+yVjHHF6bfpoFmlftzDD/UtZCgY++YKMpbZz
Zwv5/s7oTfCPS3EduEvzsbN8eAdK3jk3qWNxCU6YbB1kYiHAtM5q7N3LUuiO
ADvfGvFjzUXRuvcH6x2fVIkji2o3WbRzMF0XMuA/qTsZbB6ueBA/yyO2nTyv
U0qohLIHDycWZlnpBjPtwz0DQkeJ8NA4m7H7/cSZ+bS5rXtAOJmLDa65TvsV
x9Sj7F0TsdNei41r51yKlkppJft/5suR+gW7+Li3lz156YZ2VF6XtPG5WTux
wzj17ec/epPTirvbFYST3PmYrlNs+PJu1W8nPuaO+hI+jtuK9Edbpr34rxPP
O533wf00n8lXdDrjfie+FTd7Si96E9FA9vmN6JIG6eVsnG+60TUqsIHsc7UV
GypnzWFhmfxTdcv+NGC6Du8Fec/LZ0V4vTTwfe/aF6WMbvCuLq3FojhKkDbq
8sGxrShhe7HKPJG/BzuMZ3PfiDnLylj40np9eT0XHnneDp+QiiWpLOwysXj9
eSkOaQ/rq7N96opWywLMYmvde8DKJ/bnhbyJlpX5ONn0V2nljnzk+xercseX
4EkTV7EtjuaQ5w3taKqw2F2MEz94ei77j7FDPzFG07d5cFtw+zyvkj2ZzD4c
Jz/30MfD9Xh2ybtV4mb1pP+xjbd+yFrVDXrfCyPDlJbmN2NBygzd8SVNpB83
qcJ74uGVuK7/hrG3RyXjH45bvX/WU47T4xxvPlIrI/bzdXt//FbPwfLR3A2u
uu+JvbtnhJVbdDb2zTy7OUclhezPmtfNykMelGIXZ0cXL3+MLpkqybWyarCb
R8cJsYBS8ry+7pzyG2Oa8VzN+N2NatXEbug/7br2yhb8ZXhXTm1XFdkP6z6E
60Yeq8O953J7byqXErsijzsuWFiHd2Zbs7tEeJ3Ufxx4XslpT6SUPLhYNTY1
FR3kEvvV27N2PY9k4y06b52P3WOjZP6b22kLy/HZ9uAhqlezSP+XTi2pNpQr
xyEy0XZFVoydfA8+tcDVfGkdTjohlzmjpobMw83Vcq4bnZpwc+Aag4WH6lAq
K/j+XVyHu4aYH7LQaiLr1Wj5N2xOcBkWumwXqj0rJ+NPuhK+84WYyD8P3Af9
PnBuEv9vBek/Xz/3dZhzDU5oFmzjbykn72MhZ8NHXVF8/nrIk6EtMlUo0I2n
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
    "], {{
      {EdgeForm[None], GraphicsGroup3DBox[
        {RGBColor[0.2625454545454546, 0.3936363636363637, 0.6472727272727273], 
         TagBox[{Polygon3DBox[CompressedData["
1:eJwt2WV8FUcXwOGbbK7lRnG3GlLcJcHdvWgp2uIOgeJaKO60tEUqtECLFXd3
ggUCBAKUF3eX8P7P75wPT2Z3Z2fu7OzoJmf7Xo16Brtcro38cQh/488ZnEP7
IJerOqrgR7/L9TMWYg6mYwH6EdcHPbHU7lmC1py3RCtURCVUwFjiJmA0Wtg9
XyDAuRv/Ig3SIhoOUiEI2ZAe6dAqwuXqTrpShMmEV3EBiThvxzm5LxR+lOW8
vNyPmqRJIGxNWN3S1yD0cV92y78058u4XobwMmES/NSRl7jU8OBjrl1CDGZY
nUzD75iKSZhL3GzMQW/Ou6MrZtn1mRiG4RiDalbnvYL0+YaiG7qQpjM6YRDn
gzFQ8rT6j5N3QFwfy7+v1C/qoylxzTAeIzgfhvESx3kD1ENte0d1sZG4DdiE
EARjPYoSVw6FsYrz1fgb8+Q5sQxTiJuK79EfA9AXZanH5ZKecB33rcFKxNq7
K4kXeAkv9ZxC+B7vUIL7iki7C6U8PtoJYjiehdmYhmZRlE/aC2FTwplca0zY
hPO5HLewUO6fj3PEFZeyWz5y/wLMwHTLszX94Su0c2m9XcC3eML5YzxyabuS
OimDj5AZuYL0ucpb2yiIQvaMq0mzBv8gEam4lkBYQNorsuCB5f8Uz5GJa88I
MxJ+jgxB2vZyIKvUH3HJuIIkXHRpnpLPQ9xHbspdAPlRG1VQCTF2vaBf+4T0
nXOow3lVVPZrn5J2fhHj7B2Nhou4D7yLFJ/2UzmWfvGWuFd4HqTtR/q13NPc
2nkTaeNcq2v5V0MNK89aaxvbpP3xE5utruJxyt7FOmtvs9AQDaydb8FWbJbn
oZ2Fy9hD2Mx+S9pDCXvvxfzaXqRdFcYMa7d7MIjzgRjg1+eVvjZW3quMd3Z9
pMflGoURaBnCGIZmaIdW6IzxxE3AOFRBcyxEY+Ka2v05wnnnyI4ZxM3EdEyz
/Kfia+7rYnkGoS3eMz4PI244vkUnrn1w9PrTMJfrFm4iMyojIyqhIirgMe7h
DqLhQwiqoSqqYHWUxv1NeIkwCdfRzJ6lKRqhIZrgIXH38T+sJE0k4SrCggHa
HQJhes2NCHygzC43/QclUBjF8TE+QkE4eM19HsJo6igcoZjL+SzMRBqkRlpk
wKd2LPlkk3R2zyeIQlEkkWcROaYc5VFY6ohnyID0aEN5W8PhejjShWn5Q5EB
XnjgRxhqk6a+1YOf8oXBG65p/Xb/DfK7iRS8x1s7bkNZaiA2RPN027uQ541C
JLJZf5dxJpGx6VSoljnGyl8Wb/AWrzGRfCegFMcFkR+fS5nJaxp9cTKOEX80
oNePE+4IaD4FUAL5cJrfGc/1QhwfxSPMJm0xwiJhen08JuAk3iMF75DoZczA
BTS2uWaUzfWDbV4eZfPRUOlT6IFuMtZKG6GsN8J0PG9iY+9wO27k1zYsv/XE
fusKLnu1DLMo4zyfjjNV7P5q1lZjUc/eV12PvlOf9RFp5ydwEf/SPnZjHXZi
u1vbxjvCAOFbt5YzEefD9L0Hw4X01makHz3HMyvnQ6vDB/buyiEWr6Sd4yVq
cF4c1TGdZ5iIFxwf4T0cxgmsoF/tJ1xD+BVhe3wapv2xJip79F0HwcH35DEF
d7mnZ6TWRVfCGnZ/dRujqlra8qiIGGzkNzqQ/ybCbpHa1rsTfib1gXQownv9
BGlQXOZsW2u9ojpeIw1z+hvOPYSvCY9RluNYzftyB+v11AiWdShS4QTxJ7GW
e1bxDAfxj4yVth6Tuc9t93/geDdxu7AVdbhWAbGohPKoh63kdYY8txPO4b55
mI0RGGXH4zAEw/AH/sQGea+kD0E4RnI+BsMtbRwGYxLG4zvE8zut+Z0uXr2/
H/ogL3XZArkx1n5X8mlr42SegM77L1xaD3LPBOm32IzlWIkF5L8QmzhuJH0M
4Zwf4HyjlTm7rStk/spNXB58hny2lvCRf2bOsyAHanBeDVWs3mpZHU4mrxWY
jgr8TiVE+XSNJ2vUKO4ZYuu9K0G6BpD1WyTXB5BmIPpjpK0NRgTpekbWNvLe
5d1tCddnqU/edZGR/FMhNaJxk2tpCB97tZ2kRZC8e+kLMrZF02ZJP8h+q68d
98ZarLH2E0v9zkUMJqMYpuN34v7COukvnM/CpIDOp9J/5foiq/P5GIfxGIvR
GINRPu0r0h+bog/GoDf62ZjcN6B9VuaXlojDEAxAL3yNzsiHAmiHYfgWQzGH
37hNeUZTnm/s/m4YafmMQitrYx0DOhfIGD7OfqsHuqO4PXtRaYc4w1g/OqDt
6kcbP2Xc+AHfyTG/N8XagPSv2uiIitbXpM3MIG6WtdVWnLdEC4RGaxuIiNb2
EGf9K8D5UJkno/V99bN+dIDnu4xeHB8inOvTviNtNSsyoZrMV8iB6vxGE1QO
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
            "],
            VertexColors->None], Polygon3DBox[CompressedData["
1:eJxNnAm8jdX6x/c5++yz9zn7nINKKjSipKQSEUmlSIXiIlOGVFemdKlUV0lF
1E1zmicNUmYdQyQSSRRpIFNSIQkXif/v+39+Ptfnc76f933Xu9azpmc9a61n
vfuc1K3vNX1yE4lE/7xEQn+JptlEooPoIS4Vr+rla+IN8bq4pTiRaK3wtqKF
uCKVSHQTXcS14ly9P0PUFueIuUozX3wi5okScSBHGelaLK6QjCbiBFFRvOL8
yPdl8ZJ4U4zN/d+7t8TbLtM/siGDtMeJU5VnVVFFVBMZ6iUOJJWlrrUUdnZx
lJPyDVJZ+ok7REFuXO8Uq/1cXnFOESeLE0SF4mgD6n51Nur1pss5z3D/ovhY
1Fe+Z4nq4loxJzfaZJ7f/6WwApVrm65bxZ3iLlFbnCMGi7sdxrsPSuLKu/G6
/0Nl6armvElsL468aonTnedA0Vb8S9yWjLqfL+q5Dca6PV9z++aVSyR6KfxI
sb9s9M1l4kT30TS1yz3q58Fiqu7fU5p3xTtinOv9kmXRfx0U73pxlerYIi/i
Ef8DMVFMEO+L8Q673WWmrINEu2z0MX17tphfHH1I3y0Qp4kLRH3RQPxTcQaI
W0VPX/uLvn6e5fanHz7NjXDe9xO3kI9krC9KJL4TPxVFGT8Xi8WXornKdIlo
Iq4SVURVcbVoKS70e+JdLlYqzULxtVghmimsmtM1pZ+UZw1xvegi0vmJxAy1
1yUqR3VxouKcJBqLi2gb9XkryWkpBul+VjqRmJlJJGaLWWKk0lwoHhGjxEQx
SZSKGeI7pVskvhCrc0PP0fcfxfc5UUbKukp867rTN2vEEvpOeYwT48V7orLK
e1x+jDnG3lLF+dF1/dZp6d+1ljHOurJBbEReSYRxP0734yXjPNFRLCyOdOss
c42vPK90HjeqTXqI7qJnMvQMfesqrs6LMdoyG2OYsXySqCh+VN/OE5/qvrNo
JKYX/y+Ppa5vSuPhWqW/RiR1v1Vh28R28Xtu9GEV9/0yxpniDRIDxW3Z0Onx
bkd06QHlMVTcJ4YXRzu843foF31+iXUa3aaf6e8tYrKvv4pJfr5BeXZORjtQ
f+zU2qLQYXR5suMy5t5zuUsULy8Z5X/X7yd4/PVT+K+yJb+JvrpfLD4XS8UX
ydAtxlpr61hr63Mzx/lV7b5Z1NC7hqKdaC+mimdEWelYieiiuF3FQeU502OE
Pv1aYSvEN4wdMVPMEp+IeWKV+FasFmuSIXeKeMry0YVbRX/RyW1DXgPcRk+6
TMR9WqwoiTmCuWGl7suobOsTIYM0k9zev7mNBlh+D8trr7Dr6AfRw7qxX/yN
bc8NncCe3e46fCYWiVIxV5QRReIrsVyMVpmuFW3Edcw1hbLHokOBdFz0Vdhq
9e0i0a845jXmt5TIEbMV9pl4X0wQs/X+I/Gj26yB4pwn6ouGeTFPVrWtOc1p
mbvrWsYChyF3ju1ubYct8Fx/JvOOqCk+KQ4bvcDxf3T+88XaZNjo+rZRjWyX
sE/viLct53RRx/I6enx+anuwRn1UTeWuKn4siX5GZ9u7v7+y/nzt9rzO/U2/
P14ceol+YrewV81FM+vQVOs17T/a+o3utnW8qS4zZR9pezFOPCxGiHfdlthD
7Dhtuls6sMs265At4/mg9R3dZDygdwM8Lhmf5UQqGXKR/2Bx2I6KCjtBVBDl
kzFGU0qbJzro/ihxCnZAHCMqicqeQ5hLsMU7cqNclId1BmuL88S5zjdHLMiN
/BskYw3D2qWN47Ieqes0rZTvtSKr+IUeJzts8xkvhPP+XuqYG2lIW0fUZE6T
jbxYdFXdbi6OOlG3o12XCSWxBjq09qnr+WG89ZO1zvmiRjLWPN/YPqyy/Xin
JOzeOM8157rc5H1mMnSsjmUiGxuPrWcNdGgtxHqPdR9rovbWN9qd9kZv3xJj
rb/DbIsGizvFxkTY0362SWMdf5z1BVuCvSEe7x+x7j1WHPP3M5Y3zPaKeeMX
jf3NRTF/1PP4YxyynsPuFNmuYH+oJ210luvLmpG149noQkmEneU+rpeMfEfb
9jBe6rh9a7nNmBe2JELnaANs/6nJWANVcT+gnxXdH6d7zDHWWI/Tr2dYR49y
2mOtq8iorrFZSRwvTkvFPMh8eLW4qjjKWN96eUEy+or9CH1EXw1XuwwWw8T9
YmRRhHE/VGQls0iUESXigOzIVrFF/C0K/J54GZeD8hwhyomNklGifIrFF7qf
pjXQh2KqmCI2ScZusUv8JvaLnWKD+AublRfrfdb963Td57g7HZcy/ltkJD8N
KRo7kfgvc5Suf+ndHvFfsbcoyrzFee0RD7vORUqbLQ7ZlOdP58HaYJ24W9zl
NRBroTXiY88rzC/fi4VihfhGrBTLxFOiUTbClxnefS2+FI84zoPugz2u4968
qANyl4olls86Za3LMkKsUpwVYrn4Ji/aucR1KSyOdfn6Q3Epq+KsET+Ir/Oi
be4Vy91G52SjvE+5bDmSkcvYZqyL9bSJ+2Wd23GXy7zH5d7nvslX+z8qve8p
bhAPiv+IxxzGO3SV9fusVOjsCIU9LIaLh3JiDDDndhCdRG/vP9mHDsyJNC1F
C+s79x9J1lxxTXFcF4nLi+O5sdI0FU3IOyfGFeNruHgwGXMneTXw3HW+2qIe
+w3ddxFXOj1yLsoJmZd7zmvF3Kiw5qIFZROPi2fFM+Jp8ZyfCR8tRuVEnanr
GKcj/VXirpyYhyrb1jB+aRf0OicVshZ6PTjL+zPafL/HToqx4P6jHw+qP3eL
hzTuHhD7i6KtGTPIRHYdr3dY91wuLhUXi8bikrwo53DXY7T7lL5tIx7ICT17
qCjGFfpGv9IfLW2T2irOZdjCnOjLIeJuMVTc5zrf7fB/i4r0kThXHJ0T4+5H
7zU3iG0q0w6xWfwsKhfHnoVxOrco9jHrPGZY6+O36Su6iR6ii+gteomuDud9
P9E9L2zLvbYh2JgD2uMfUxz5JDTfHe25jn0T+yV8AMx7RzC36L6s6l5VNBYn
pyKcNJWKQw753iw6On/qxn6LvQh1RMYRjkve9EWLVPgJ8A+0TMXzxe6r7q5P
F69x2+JLYGyJ5qmoVx/HIW49hV0ofnEbNrD9RCfqivNFw1SE13U84v+h63Z0
Rfdni1qitq88nyVqinNSYW+wO6Sp5PrTVviHGrt9ThAXOQ/yRi8n5sReFJ/G
Ovflla7PP0QrMSknykg64mPHR3ruYj6g7+4TX9nGLbE9ZS5aLMZoHJT12Biu
+4fFo2KoGJGJvqzgMtMP9NU/3daMhw0loUfsidgbPWh7vsz2vav7tgP77LzY
e3Rz29M/nd1XXf2+h9/nWWaZ4igf5dxmHUQXmdewyV/ZHq/3HPC754NVnsOY
q7d5bDDv3eLy32yd3+J3m2zLWSexXvpZbBJbxFbxm/jV4VsdzvuUy0892E9d
moo8WSdcpvumth1XivPFtaIVeiuucdvc7LbslBf7rDaidV7st5qkovxbLbu3
9fcWl/8Sy2/q9OjRifiDrE/oTTv7wpjDW1v+tc6/se1bC5exaSrsyTbnTdgV
orbLT7yrHHalw7lvLuqKZoypvLCjl/sd8a92nIv8nniX5YVf6Xvxg/1LD3ou
ekg8kAxfZCtxfzJ8kn+V0XwrXfiv2Kf7A2Kv7pdp2J4h/cuRjSjWvrdEJMpG
HOISh7hvijN0X1uM1f1l2DHtvXJEE903FVcUxx6PPVwNjamaopI42dfjbZN5
LhTniNqMvZzY17O/x/fWSLyuPGpkIk/yrqM454kccdBr4zWiqp7L5cRcyny9
OBVlqaWws0SxSIo3JOOsTMhENnWkroTxLlfPjQqiDWiLa702YG7GR8DeYYP4
wXuIq/yeeOxlefeTWO04XL8Vq/zcynN9e8vr4PXJaV4ztPHe75pk+HpaeE1y
jcvQRTI6iY6icyJ8y/RBE+9NLhX7UuEXwh9EO3yeij6hPXLLRd/wnFMu4rBf
YN9wlsN4R5oGao+icrGvYn+V1f0m5blWbBY/J6If6I9abt+q7s9C9wc+AvZw
7URH8Z3S/CWO1Lsj2MeK/XqeLKaIqaLA4Ty3c3r2ftclw++IL6iT5aEzfydC
BmnYJ6ET5J3vMlCWAj/vE7tZs0jHMqKh92aVvF/Pd1zKMV38kog64zM45Evb
5LrjQ5jksndxf/xs/Vjv9x3dX5wXdHW9K4jyrv9Bt2FCHLAs6nLAMhvbl8Da
7dJk+B1SrgvlQ1c4dzjNOlPe8it6vXON93zVrE+Uhbxyc6JMjLt6bkPaMp0T
eSB7muPmuG9J08FlIB79ccBxOrm8BW7vIvfhad5vnuryXW17hF3Ch0tdyfug
64yPEh8NfsTrk7HGZr3Huq+1WGf92+S++d7jf4t9qI/ITj8quktfexTHGQ31
pOw1S8Ln8c/i2GOxp+JcjPOx/fSF9QJ7hd1CP3ZZX9CbvTnhi2Pvjx+jrvcU
jGHW/fjO8GvUcTjPk5VmNnpA24nutK24XnQRTWTDG9muY887Ov4s+kfMcHzS
lfKcDP8sflp8mqV+101cKuqqjjc6bZ2S4CbLa1gSexHaiLZhT3KFwnvkxL6E
/chQ72OYO4Ylo4ztRWfRlX4W7XIij15igN8Rfqvv2ztOJ6fp7Hh9xKfJ8Mfi
l12QjHJ3d1sQl71AT5eJstWxbarmNqUO1GWuuLAk9g03OC57J/xa3dzH9DV7
UXxe3NPfJ9sXQh2p6zilGS/eEyNzwq795DHMWObMbY77hL5sYht7pu0tvlV8
JlfZ/jMPYn8vtU2eYJuGLZtoXWe81fHYZx+5wH1L/7X1frCp50/qSF3vZk1c
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
4kOxVHzptIucz/NitPNjr/a9+Eas9N6PvL/1Hu9NxRkr3nDd3nB5n/DzC64P
9Xo8Hem+9x6Q9G+lQ8arbo/Rzv8Fx3/ZsijL6+ID8a6YIiaLt2kTMc7h7MHu
Fm+KV93374i3rAPcvybedVhGafJFse53azws1HWR2CH+FDvFyvwI53mF+FjM
FX+w91HaI0VBOmSxN6mka2VxdH7IRX6RKHGe5D31MN1A30vZ81hPCOP+5HSU
Y5HzJT/kFItPUiGPfNOuA/knRV469mjsoVLM3enYU7HX263rPnFA7GIPlY7n
vSKX9LqW6FpWpKh/KuqIbNqHcJ4J532ZdMQnXUF+5Ev+x6djrzbTY4hxdqrC
qqRjTDJu+VbpCY8nxtV0t8N/fD/T/Uh/3iWmiRn5sZ9jXzfO8WY5j5m2HY9Z
RqntFvbrU/GUZTzmeFPdj/TnnPywddi8bR7LnIGNdZ+d5PF7wPqw0+1Hu+a4
3WlvvpWr5npSv6rp0EHqTNjR4lhxDLoisrSTw8s7nPf0S677mf6mH+k/9Iq9
OHty9It2rmS9o71LPR7e9vju5zUka6lbC8Ou/P836OmwL33EQI8rxlM+eoBd
U17bU7G3P9Ky2W9PScXeG38efr0ljsO7aeyFGSe67hEHU3GPrqA7u1IhG11B
d4jbXPuar2UHlosrOOe1fwA/AWdQ2BzeE+/Kosibuh7tMpAO/wl+FNIf0tk/
XZYC50e+1I0yFOq6X9e9qfDLzEzFN0Bp2wDGbOFhcXlmrBW5XXJddupHvcu4
XaZ5TNJn81IRf79lcJ/ND9/ujlTUk/px9vm7rn+kwvd7i+dy9ta9U/HdLN/P
9kjFtyM3eK/P3v/GVIR3T8U3I/19zkt65DT3mS/3F/h8GJnIaKf76/Ii/Bbn
xTNykNcrFd9q/OHy7nP5+I6D3w/xO6LmLmdPy0QGZ/v9U/FdCN8o3FMUay3W
4qOKQi/+tC7Q/vwOqbNonYrfI5HvgFScsZP/QPsSilPhoyac97em4gy+nduE
tmifF+H9XQ7e0+70xcJUtD9+Sn5vwu9O8FfyneGQovjOhm82amgMnJGOb2YH
eyxPyY9xzPh9tkzE4R3fuuJTYD5hXqmejjUHa48ajosc5CGnru8n5IdMwuqn
Y83BuotvLUnLe+LV8BzAeoQ4xCUP8nrbZTo9Hb6Ml51/Hc9H5WzDB4n+oi91
8rxSaluJPWadQnrksF7Blte2HNKzZjo/Hd+Isr46z++Jh+3n298LXA/KTzzi
X+B3rBVYr7zuNQPX17wGOLQW4PllrzHQE74B5Ns/9AU/8XdeezD+GaeM19n2
J3HGzFlzKTpeJr794vvRkf4G7Gyv9dHDQ99Q3uFvxEb4frDTPGRduM/fXKET
0y2bPBbbr4N/Z7qf8Wvh38Lvg7/nRZWho+reSbxUJtqd9u8nbvZ1oO0uz6yh
8VFvEhtFa4VdLBqJlukI5z2+683Z0GXsC3PBfOv1PN/jb8aPzxr9J8tjHch6
j3Uf68F/eW/Nvu1W79PZ27PHZR9LPzwnVrg/NivsR7FG/Cwa4LPBTyXqZ2Pf
PMd7r52Z2HfXch/Sl3wHw/cwfDfF91LsiX4RT4vX2ZMqzt1iiLg3G+WgPAmx
VPc/iU1ig1jnvSz75c0uD3lxPtfIee72XnCXy8O6l/XvPWK7+E1sod3FhnTU
4Tz7pE62rwof1TH2Wc0WM6mn+CIbvyNslY3vwvjmbqi/13pE3JsJmcjeKNaL
zxWnVHwgFotFYnw2zhaQjR8ffz5r82ViXTrW46zL16ajD1Z4DlzpMlZxGSnr
Zuf1a9q+MIXVFXWy4V/7SkzzHMlcud7xSYdvjLic6Z7vNB+6vJSb8wj2Fewv
fhfbqI/Y6jakLaurzqfjuxOnipPF8fzOTJyEPogz/f0N38ygS1+ItdaphZnY
07OXxxdTxWnwCeLX+05xVoivxTcFsacnPukWiGwmykG770uHXwb/zCwxR+xR
2F7xqe4XsGdW/KPEsaK8891hHSb/77Gfup6ILyEdfpNh1rUx1kP0cbn4oSDq
SX3vUNzjdF2ssEWuI3XFD4Q/6POCeFfF+nZuNvpqreMusa7zXSzfxz4o7s9E
WsbEUsvYad3+SizPhJ4e674+mn6zL2un3594mF7ji00qrIgxovLuZn3ptvzY
/i/Ci9yutOf72ThTwzeNfx5fH/5D5JD+A+vzIuv3vEzIRNan2JVs+Po5Oxsn
rsrGb5YvF83F29rDjvUcwd72DV1f9JzAXPGkGCkeFv/xu4OaV27Q3P6S05H+
jez/5hbi8A5b1sX2Crt1g9voYtsMbAc/okbei5aB7RsjXhDPYwM1xyfzIo9D
ZeWZdMSfkI06lnrsUMf33Sa0zUbbg1qZGKPIvlFpb8qLPCa6fd6xLMJeFa84
f3633cw2B9tDvUk/xnUc7/wm26bwO0Z+z/isGJ2NfPhG5FXLnmbZE53fdIdN
cPl7iT7iafGM8xjjdnnZZeFs+R8u02LV6zOfQfObCupZ0+OY+pa6buPcHq+4
fjNcBmwrZ62cpc4V6UzYQGxfbibCOWud5/e7FL4jHeOaOQJZTfztywzHIe7H
Yk427FJxJr43xD7hN8d/ztkpeU11/pQDe7zA4wEdnu16Ub9FmThj5zf2/L6a
M3bO2j9y2rnO73nXkTbF9lYuF79Va+Zv57bYfp4jWWdnYq7Dd77L9cHOr3Ba
7PW5CqtgG3uOrzyXsc0l7X6PZWTUtL2t5j5Y4b573jIZ28wt+HoY49jGnZ6r
mA+uko730LqgpbiybLT1TtvQPdZl6nC2+/pQmaq7Pm2yMcYZ2/wOFx2oYlvO
/MS4Z/xf6vZb5DnlN5fnaa8PfhWPFoSfF//tDtvqVipX68I4A8JHja+6RWGE
88xZwT84K/CZAT7CPv5NJucLy2w7WZ+xTuvOeki04WyvML6BxUfImUn7wrCh
xCfdF5nwba3QdWUmfGWcU3JeiR8b/zXfYPD7bvbY7LUn6v4+2Zd7k/EtxlTr
FN9t8PsjzjDYo3Mmz/nPLcnwX397mM7Nt0xkrxITMvEtxzeWgSx8bC+4bHzr
8Z7L2M7nJde7PVq4b69xm3Vxe9FunNXgy1tl2fjyWCv2dtvh429bNs4MOCto
VzbWkF3tk+bsca3XLkWeIzgHv7EwfOb4wJG7wu2IfOrdz74J0vdyf3FWSlrq
we+1prk+9NVy9c9XomdhXPmNfNvCeJ7r+e9zzz/8xp45aSljKxO/gy+1zPd8
30dt3jsZtoxrr2SMeZ6XWNZy9z9tx/jo7ja8JxnpSy17qfMj7y+dT6llTbVN
+cRxZtm2kB/9vsj9TH8vcFz6dZL7Hn36KTfq381laG3d7eL+o2ybciMe75H5
rWWiS3wLNCQZ5aa86CXPhH/gNqat8cGi34yz1pbN+R26N9Fx0cH2Pl/s4DH3
qdtrietPP95kHfj//iyJ8lFObA399p2/PW/vPmxrnaRO+KkYS7Pcf5RrmvUe
fW/j8dvzMF1u67HbzueEAzzGGGusQyZ5zmROYh02KhvrYNZj891ef7gPsMnY
vQVeg12Xjf+30tR2rqptLWtbzrDnFcQ5NWffnxnu63uNh01t6XF4RdlYQ7K+
ZZ37vVhWEGdfnEXXZr2bjvUq61bW4OUysT5lnVqYiXUx572rvT6u6vTI+dJr
y0UuB/m38tzNbxLYw5TNxH6TfSdzCufSzJHMjcy/rDnnWwbrV9ZhrMdGiOHZ
COf9POdBGN/PPuJ25RyO87rtbtNRflfPbf6+7dUK2xzW6Xs9F3Fef431u7Xt
FftE9ouDxT1ep7BeuT0ba8X/A4WkRNU=
            "],
            VertexColors->None], Polygon3DBox[CompressedData["
1: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
            "],
            VertexColors->None], Polygon3DBox[CompressedData["
1:eJwt2HdUVUcewPHLg8eDx6MI9q4nMcXeOyCooFhiAUuM8VhXURQQW1TU2GJM
BLFrTNtNW01QNBYIKtmNEhMVG4qAYqJrV+yFst/fmd8fn/Puu/fOnblTfjNz
G42dPjjOZllWCTzxk8OyfkQGTnlZ1p/YxfEdH8u6gkKU4DZuoRrXasKCHb5w
4gwPO4tc5KMYRXiGSESgHGV4jgmk2e0weZ0gzzxMcph7BqA/6vG/LuqggP95
+szLKMEV3Ha3rFLcxwNcx9+wkeYF1yvhzrGblvms07LO4Tzm8z4LsAShVEo/
jMcERKIn/kOaX3EEX+IL/Bf/Io9vcB4XUIgvsYJnrcQyfIh4JKCdh2V1RFu0
Rwe0QQVp3Pgt57cSFsdl/M71tawkzMRsJGAOTvM+p3DC09S51MlJLCePM7xT
ntO841Itw19ci0G0tsVTPME8ri3CQiRjNpKkzOSxCPHYQJusxxJf06bHUZt3
r46qqIFJpJmCifgHJqMZtnJtM1KRhi3YhHO82yX8hlwUIB9TEYspGAmHm2X9
QnUMpQ0iBOei0A998W/KtAof4YbLsh5hj5SdPJKxANMRi4WYg3n4AGPwPhLw
CWlSsQYr8DFS4CKPCpvJ65iW+Qzmk2Y1PsUaSa/PDOJaAE7jrPaNf+J7nvWt
rynbY8r4BDs5XkmaqdiDvdiHAQ5Th9MxFdMQh1h40y/84Qenh+nz96Q+NO1O
hxnLMqaisJE8lmGBr+lLyViHNKzX48VYqu++hXbejI1Iw1psknhAm59HBQJ5
bi2H6QOF/M/BOfyhY1/65A6u/YBsGWukP+llYssYraujOIbfMFrGFmk+QiYe
4CFK9Zm/45inKcNxjS1yz05s9zR9+zEeYRp1EYexGIXh2pcW67vL2EnUvr3Q
17RdCnIcZoznatleaYySmFMfHg4TQ9Ls1BlSsRyrsRYLyWMRkjER47QMpxmD
BbiIfI05MjaT6NfzMBfxSEQCGnhbVmMkYRbqozr6IwYTMBH9EI45mIEpiEcj
eGMBkjEfQ7EQHyARCRiIdzBb87pEHz+BXJzEReRjKtemIxbTEKd57cKP2Ind
yEA6LqAA+bioZViOLGTiMI5gPw4gBal6j5R5MTbjENZhk7cpg7xjtqbN0WN5
dx/8jG1eZkw9RAXKXaYP79O85B47PLAXG7ARa7QM65GGM8hDO7THeZxFG57X
Fq1dpk0lxrZymTEieZVhOcfLkIqVSMEqfCixEytQk/t6oyeqwxcOhCMMoS5z
jxO1cBf3cQ9bSb8atzkeRl/siXD00blVYvtoYsIYTMQkTNA55abLxPB1eKDP
/J/LxCKJmddxB6Vah7n06Vo8rwayOc7CUYRwrTuCcUn7ttRJZ7RzmTpZrnNf
J44P8XsYXTjupmm74g/OHcdJnEJLzjVzmbkml99j+FPuc5kyn6YvXsNV/IVT
yMPbcp+PSdscLdAUPhIztMxeErf4fYUirh1FDopRKO+BG8wxV3AZL/EQDxDm
R9kYlx1xBSWI4Fyknzm+iAvIRx/O3SfNPTzCUzzBY5zGOWRiNEZhDIpwTfMq
1bR3UYfn1UBNNENTNEYW1w4gHbuRoc/MI+8btPMtXfdcwynOHeRatmXm0H3Y
pWmn+RNDdH01EFGI5VwIeXRFFzTEa+iO4QH0J40/KbR5Kt7l3FbSRBIbe6AP
xsv6iHNruZ6GNU5zv8SuIRKbqlCnxN0euqaZBSfn/KqY4ySdq+bJ3Mu5qf6m
bEMxCL0Rx7kSP/OOss57iz7eBMV+JuYUSQxxmjJEawyMDjBllvKswwYMDTB1
Lm39DC/wXNvudd65mN98BHJcDVW1TuqjLhpJvEY9BOGVtnVtjmtp28k9LeCg
rz7jdxmWwp3/NrjBQxbiqOR8Eu8QpWvQYFl3YCbnCrUtJK9iFOGSm3nmUzzB
cyzCEgTyzu7wRBCqooq36cPB2qbyzALtw12pv5GIQTS66Bq1uYxNXcu1QFO8
BZvG0grGZqWXycsNHXhWZ7RGN+1LndAK7fU4RMsgY6od2mjdVkdbTStzVrT2
GZn7IjBYYr6fqZMwDMAgzPIzsd1H5z4nLC1bT00rc2Uv9EYYRiBKjyMxSOfE
WfTfmTiEA/ge6ficfrcVWzxN7I3Rtcd35P8t9uMADmIfahBr3sAmbMQneA9O
+mugrgll77Ad29CMa82x3m7WGBs07Wd6j+wpvsLX+Bw9iFn90B+9dE6RueMw
4yYbWTiCQ/gFUVzrq7GxA/po2v1cW61r3R34DvsEee9FBvbjZ+xBL96th+6J
euuaPBz1qesG+Nhh1sayxp4r62HOBaIR6qEOGsIldYES+tgr3ucl/PlflWvX
STfFYdbGA2WtybkgmY9Q3W7qtiaqIZOyHvQ1a+ltunY9wHGI9hEZQ6Fa5u42
Uyc5vuYeWet+hl91TSh7qxn43WXmINn7OCiXj7aRtMUX2IEwyhWKYIRr/Atx
mJgvMaQqeVXTMR5oMzFcYkIQx554ybGXlIk0bdARHdAO3RwmhsjcIWklVtht
Ju1Bru3XPdR2ZOkaO0n3MrKWPoxM7cMt0QJt4S3toXld1b1zc71HytAaoxjb
7+FNjMC7GOlj9tqyl5e9Xit9pqQtp5wV8KNsLvjAH/FcS9S9VZKOqRmYpnux
yYjTvY+09THq+qj2vR+QgXQUSd4+Zi16AcX6LaK/9g3ZK8nep6+2RbHGZImx
czAb3jbTRn11TyTfHMbpfPWAPnQPd1CK+7iL9rR/R5dZw8hePhERLjOWN+ia
fxVS8Cn85LsD+byS99c9oC8i6d+ddI/fGaEIhhvXqug9QRoT3NGaZ3XAm6iP
19AStfE2mtpNrHhDx8IT8nuKx7iL+3iE12Us6RhpgkZoIGsg3uOufsO5ir9R
gTKU6/F13EAlvHQtKmtUb3jCA7fI447GYBlrpbiJn5hTq+g9dvjLPjfApJW1
ro/LzCmj4dI1cA1Uc5lvCDLXyD296GuhCNZ5f7CudfvyDkMwGAPxDvognTzq
6JpZyixl2BVg1saDdf0wUL8pyTeoJhpDJCaPxvsYhQDaJoLfQYjBCLvZa8s3
pSkcT8Y4jLebdYfE/GwZ0+4mVnjhEP9ryn5VY2YODtvNWvoFv2W6Fi3HTTxD
JZ7r8W081D6ZJesCbVMPnm1Hps3s/aVs0RhpN2WTb19XOH8JFz3Mu8i3gst4
pm0kMVBi+AuJQRguz8EwDMIQXQPU5Xn1UEf7nsTeQAxDlNZ5PBIwQ8rLs25r
H5C8nmufbKh9T+p2LAagH4plfcFvY/RAGArlm5eWTeYU+eYj317K8Y18g5N1
Eu/o7W7qXOZcObbp2HFqrJa2kDoZrmVLRKy2XYGHySsU4XbT1lJXX/mbtavE
Bfn+OEriK+f+D6MpwM4=
            "],
            VertexColors->None]},
          Annotation[#, "{}#1"]& ]}]}, 
      {EdgeForm[None], GraphicsGroup3DBox[
        {RGBColor[0.4020454545454546, 0.445, 0.5827272727272728], 
         TagBox[{Polygon3DBox[CompressedData["
1:eJwt1Hto1XUYx/HvLmc3z87OtJKyNt2Colo3iBQkwlJpEaImbrOZKY25mAWJ
JXO6edlMioquuOWmFruobcNUXBcqSolKydZ/JV0oFYxUKoKKeh2+5483n9/3
9zzf5/Z7zpmx8vFFa3JDCFuRh8qyED7LD6GadhWG0I1taMYy1OO/dAgVpZzL
vSsKoREPYbZAt2EBvuDTmgzhSzrIdQgDIcbcgk7sKosx99C2ghBOJEIYyQmh
SNw14hfSF9hWsa2n7Sl5xG6jO53nudtLn09G/1doK9vtfJ6kcwujz714lK0O
S9CYG+M04Sd+N+j3R9rC9gSasZ2tA+1YjEXZvlbocxUasC4V3z9N79fn4pIQ
aulvzs+JeYHudz4+KYR99NfiEC6inV+TmpaLMZ8ec/4A76PRnfJMfbRBHfV4
EO+5X0WP0E72jdiMpBlt0HuqPN77yIyH0SDurKL4vYrkT6MAS5PRPzOHQbOb
yecw3e/OAezDhyHG+Rj92I0+HJb7XzW+RB9zp9Z3aS2LO5IsjnvypyX6A3/h
rHoeycwMV8lXKH8ebnI+k32/Xp91dCQV4+2yA6OY43kv7UeNnZiQ/2u8w+9Z
sQ9lv+9K9S+kE6mY9xT9W01Lveunv7CfxTlcEOcSLqLU90liEob53cE+VBZ3
o0ecJfQ1+ipex2Tz7TO3afQBtk24D8PyHaJDqbiHa7EOe8XaoYYButD5YSzA
NvPbiC2ZHXBejpeRa6Z3m2EeTTt/yv4JXnR/UL2zxT+njivUe4bOct7tfS37
6rI4rxb6FFZ4Xkvz+Gwws0CvUXez+kvpG2bahzfRwnaj+psze+fOQfHTtCqz
b/JX00o6HVdjPr/P5Z1Dx9Lxu47SNnyb6S0d7SekPZlJ7fy7vhL0LnFPynkP
Hc/2+Ta9U6zV7sykt6DI8810lI7lxP+EhL3Jz+5Pl7jd2fib5dyKLjSI1UPr
6TLs9FxH36XjOIrL9DcFV2LMeRQjmGouveYzhR4sifM/XhLjPYPt6FX7aRxA
Rfb9jpK485PFu0Tz5Tuv3wI6Vw8Tap9Ha9gLsvs2jmM4gqm4FpWowvTsc6b2
jpL4X5Eujr+vGZ5vFatD34nM90/E38iAHHtoD77DNPcvRwVOp2L8H+g/5v6z
PT9Px/i9lRN/a53ibkI3Evqv9l2Oqv97d653t4Z/k5zX5cTf4DfufIVT+B+e
FMc1
            "],
            VertexColors->None], Polygon3DBox[CompressedData["
1:eJxNl3uQzWUYx99z9rDr2P2d36KMS+yiQSy2RuT+BxVDxl2bXLMkl2rUH7nf
ZZIuKsZlkVx2iWUwmNymcWtSGrrin8ZtUDHNpML0+c7z/NEfn/k9570+7/tc
3ucUjp7Sf3IyhHAFUjA9CmGUGtIh5MUh7OL36kQIw2nbjdwvO4TROSFcg7eR
H2T4zXco/IN8pkoI06qGMDYvhN7QgbZ1zN8JHZH/rBbCX3AHfoOH2PRhuJ4V
Qm0pwJ4x7RlIxLaP9hsB16GYNVayx3fQFXkfjGLvItZvG9kcze0GSeQbfG/6
XrfgBuOv+Fq3kKvG1q9x2cjH0aEG5MM+GMSad1j7HPSIbB3pftvX+5T2lzjv
GNiA3Is11yfszDr71Sw7X024i3yEI/5B323YhNyRe90De6EIWrFHDn3jNI77
W8q8E9ASWsAc2hfCAtkq2BzNvQotk6ZLJXezA0YiX2C9QuadgoZ+d+vhvN/h
z/TXo68BXET+LGHztY7OdifL7kP30tR1KYBGrlNL5pwL5gPyhfO+/madD1KR
6VoBDZG38t0C2+BMMN0KfF3peJg5x+A0nIRvI/MN3eNZ5N8Tdn+6x2Own7ZP
6FsBB5BX8f0YBnMXg5Lmk/LNIfAv8sDI7l42lW0n07YRfctgIvJS2uYwby68
G9maWnsHHEbuzpg1CYsJxYbsLHvrrmR/3cljkO32asE6bZJm5yKXi6GTt8nO
svc8vnODrV0Ga32PcqjwNvXVY8/1wXynPvJM1pgFfWBA0uJsnetSCXUZUxZs
jubKJlt8Ta39DPcynFgYA92RlzFmMevMgPeQS2kbDy/m2Lgizt+McxVDK+Qe
cIm7uwhPI7eBVVXMzxSrrdWWMpt2ieye18BqWAuj2WcMDE2azVb72UckLee0
y5gvb4f2yIfgBfQYBkeQj8JI5BI4jNw5Mh+aAE8ib/D9ZON1MDWyu+oJbyBP
hCeQH4dJLhe7ndS2yONNcScbSacRrrN0/5E5tThfHfgFuR16tIUO8FSOnVln
l07SrQC2B7NJXe/T/bRKmc+XcNeDsm0dzZc8GNrnWFs589Z5DG0OZvvZUOpn
etnPfj5hsTLB9z7pbZ25o7PcwzfQJWM5Rj5YCrfzLEYVq9KxwH1f8bTKY2Ce
38Vs99fNrLEE/ebDpox99Vtvw1xowDvSEOpDPZjnY9U3B9ZnzMfkh6syZjPp
rHO089yi3K4cP/p/e2idjf72jPI7GuoM9jtUzMtPm3nuap2yc45z3ZsmLEYV
q1WhKGW2KPaxsklN9jjgb0GtjPl8sY+Tb8ewO2VjNPZ8ZOspB/yK3Jc3ZSHn
ng8DYnv79LaOhZK0vTl6ezRGY1dA1eqsC2uQL9PeJDeE5nAF+fvIdNUe2usu
5OrNov8g40/DeOTX4KvY9tJ7fi1pez5H20y3RQFy79j0UF8f5F4wwHVT31y+
s2EWzPEz6CzzoH9sb6HOpPGaV07bFnTfKpAX07bA5y5KWw6VHynHKNdI11dh
quuczMd++OF4eAR5R2S5QfH2ufKR/BXKYG2etY3xmNwZGZKVQyqVC1izFuPq
wJRcQ3IDmIycZo9SvsuhGvIe5ryTZW+K3pZL6NyYvkfhYtpqmrGug/Sc6vpr
rTd9jMbKZrLdT5HVEsoRyhWNpA/UhMJce2P01ijvKBfJBrKF7LU9sj20V6nf
iXKycrPeKL1V8onmfkadtQnzC2hrJJCXevwpDpfADPcpzZsVW52keqlx2sYu
p+1e2nxQvngsY7WXcqxyrWqm616PqU85eJjnuwrkm3A5x2os1VqvsMYh1tsF
r8fm0/LtL/g9IbacrdytnK7cPjA2P5G/DfJaTvVgYdp0/JC2+2nTUbpW8t0N
J9Jmq7do28n3AkxDng470tamPukgXdSmvuN8D8J++NJjop7nq4ax6ShddQad
JSvf7CufqIJ8L7b7l71T/K6bb/6hGngZ5wn55mvyuQeMrYAT1S1GFCuKEcVK
Hv7xQ2R7am/ZULY8DoNZezXza+fbHk3cH6WL1tTasv99P5vuo9LPeJi2vowt
gSPIR2Fgrq2ptZUjFHf94BDy1zAJeQKcii3GFeszPXdoD+2lM+vs22O7uwPa
D7mT/wdQnCTybQ2tpThXbuoZ2bulOvDZyGoG1Q6qGVQ7hMjqWtWMqh0VK8pt
W/3OciC7uu0nuykn7/N6XbFW6LGVYkyV6pYD1nr9tJKx3SJ7C/XWdo3Mj+RP
mqfxesP1lqsmVm2smkO1h2oc1TpTM1ZXqyZRbSKf7+BvfnnGamjV0qprVXur
RlOtpppTtedw9hkBH3nO2RZZ7a4aviIy9vp/gvLIcpxsL3sNzbWYVewq1v9G
/iBjtZxquvczZmPZWjaWrWt6vtHdye9kY9laPiHf0N3q/ZD/6Y5ls96e25SL
9R9L/xNUM6h2UK4cAs/n2lnG5lpukp7ST3dc5vWldNMd6671ltbg93+gwNYw

            "],
            VertexColors->None], Polygon3DBox[CompressedData["
1:eJwtlFtMlFcQxw/sLrssux8fYGvERAs00QhabWKqwgNeirXGmEoRAUGhikgr
mlRBlDulVFNrH1pNlJugFQ0IeBc1po2Kpo3WivpSaWvipYkRIdpqItHfZPbh
l+/7nzMzZ86cOScmb/2SomBjzCpwQYplTH+QMbfgCiSjT9nGxPqMiYERrzEn
0WcgDj2A7oPTtiL/l8Bmrhc9A/+1xBmEX4ifhe5ivBcbd5gx0dj1oMdGGNPs
N2YNrIZo9FHGndhEYdPHtwNtMV7GfDpj+eBF+6GAsXzxZSwMHQLF/BfBOMZf
49tt63qOMI0r8eeQz6/kdp3c6mG2pch/LXiYew8dRbwG4jT5Nc9I9BFb93mR
vZyBTvQQtpOd5AA+eIE+BCcociIkQQn6L4hlfjy8CwPop7CD/3inxpBYJ8Op
oceYpW5jcuEU+joHdQNuwU/kd1hyxH4CXIZeOAbd5NTj1TO6C39CIjEPYt+G
75wQzoZ424j7iDUewH2oQf9jaV6j4V+HMb+jXezvWagxT+AxONGJ+HcTrwuu
ETMJPQLVbo0j8V6h7+E/iVgJTt237P814/XYfO1We/GzORcPnCXXy3Ae5gb2
LPtshHnoITlvzucm9EMC8ZKgPUhrInuUvc6CA7Jf2AczLe1B6cWfIYLzyEbH
sJcY1vKFak6S25eMv8/8VIiHQvRHcp74XTPaN/PRu6jPbvgW8rBbKhBvO/G2
wV7IRE/DdgI+NfhWwVR0hq3z30A9fIqeLj0UpHsTe/G7CcMOPeOJ8Dc6jhyv
8t/n1L4ZZKwTHrH+SngIHeg/4Dm+/zk0hsRysE4ye93h1Twl33XE+5ie6HZp
zaR2N+AhPi8cGqMfvYGeL4R1sD5wx87iH8l3lE/finNoN3ekiHPa6dO7KHfy
C9ZoJn6TS9f6HL0TtoZoD/XAd+gCS2s+GRJgLXo/47WBfqmDA+jCcO3jFuLt
hyL0ckvP9TD1OwgL0KWMf4bdKlgJJehImOLUuyP3JQK9Gdsl+KbCItho6doJ
gZrmQhl6EyzgPx+WQzl6C6QFzn8ZlFp61+XOLw7WuMXorZb6ZAervfgdg5xg
7R/po+PoO+APvCUhcBvdQI4p7P1D+AQaw7UOUg/pXRsMtR+mjk8D76685fKm
Z3AGmbAYVkAOtOKbhW8B5MM+dAuk858GmdCMjqNHYuEdGO/VvomzdUzm5O7I
HZK3V97gNJ++074I9Zc4GW5dqwkdxX7ehrdgLIyBUGx/wO9Hn/aNB+2y9K5U
Qxk40Hvxn0+ceW6txR50FXWrhAqolvOAOnKqha+gBqrhJTleCPSt9O9vaD8Y
5v4P1ffNQqfLW87/MKQyt9DWWkvN5b3cDm3SU7xvOZANWZAJnYTrgHZogWao
sPX9lXf4PpSj06CS/yrYA1noQ8ScTowPPPrut6OX2Tpf7tWcJLcBer0BGqEV
7rr03sj9aQ3SXv8e/QZYKAFz
            "],
            VertexColors->None], Polygon3DBox[CompressedData["
1:eJwV0L0rBHAcBvBvzr14GbxmUMf9CTIxM8u7KxdRMpGyuq6ru85kMuikQxm8
dF52URj5Q2SVweBj+NSzfJ/n1y+3tj2z1RIRXaRY6oxYYI48i8zz2B7xxguv
PHDPiONRyhSZZYoSNZqJiDoFeYNTGw0ueeaJC/Z1ZRmkSIUa50k3HFHnjAZr
mYjJdMQE6/IqK1R0VfngnWuu6GmN+PaOH3rlPro50XXMDU3uuOXXdrIjIkGa
DCkKNjZt5hmTx1n+3/ZH0+ywywGHlPSUqfLZFvHFntxve4AhhsmR5Q8oUjBc

            "],
            VertexColors->None]},
          Annotation[#, "{}#1"]& ]}]}, 
      {EdgeForm[None], GraphicsGroup3DBox[
        {RGBColor[0.5443181818181818, 0.495, 0.49909090909090914`], 
         TagBox[{Polygon3DBox[CompressedData["
1:eJwt1GtojmEYwPEb75jT3ncOxRibzbAUSiiRcviiHCYhiY0PZkKjMPEFKewl
5FQ+sZyKzGHGMqNIKEXCyLEQhVAU8nt63g///s99X9d139d9v8/zFlasLFvR
NoRQjnZ4lhNCXiKEVp6SDOFlVgiTMz6FOuSkQmjTKYSu/EReL/lP+aj6OpxF
nnhv9EIzTuIEStuEMBhl2SFcV1/WRTwy0uKz+BYWmG/hufLmYQ6uJePnZl5l
v2Ear+Jv2KmHrzyjS7zmfNxRv5zv82k1Y6M9uToV91TFi9TkW6ecd2Gb52Ze
hlLPq3mSmlbnnsgl5oagGI/NPcJDtIiVW/8GL1czUjzN6UTc214cwL7M8+r2
IaxBNTbq461+NnFlTrz+Ur5kXKD/Br5gvN0PdJ6vGc8yf5drknEfE3i4WIm7
HcHHM3f+Gj3ldY5+D54gdlvOFB6h5rDa4Tw0Ff9m/bgQ3T0X8XN5Rfp9wRWp
eN3FqbguOns9tquvcI51/EPeHvk/ea3xQvPro330fghn0ChWyxe5wFr51pzG
/Y23eHcSfND4n/l9mfdiJ3ZgdzK+uzQ3YKY7v8S5avar7cGV7qYKVzDZ+KHz
zua3/BFv8F7NC7W/uckeg+Re5S/Re6D/IvO1xj/smebaqDe/y25uFJuqtp7v
iVWr/c3LcF3+ET4hNkrOSe6Oi9ZM8XSxnx1D6MB/jH/J+ZuM7yD6XkqRn4i/
wZsYL/bAHY+LarPj80bfTqPYZTRhXXTHmXdpsB4HZt7PqJcmtOCD/c7pM5Xr
O3eGDe4qK7L5V+I13E3sSFf98rvs+H1ekh0/R3fVijyxOjl9uK/6Y9bpw1vb
xvezGQOs1dOaxfxJ3+/Vfea8zH9EASfEvruHLM4Vq3eObjwGZ5x3NP8HNB2b
gg==
            "],
            VertexColors->None], Polygon3DBox[CompressedData["
1:eJw1lllslVUUhU+5t+Va2/8/F1ugtQXRqJVEjYKaRhMn3pSKQ8DEKSFEQwQh
igwO8cEpAdoaixJJeDEWCCYQqtW2YBzKBXFoG3wwKBFTmoi8ggiK4reyjg8r
d/3n7LP3Pns6d9biFQ88MymE0AWK4PYshENVIRwEd8AHwKZCCFvAXnhTHsIX
CH4CpsIvgL9KIVxSG8KsGMIKMAz/EiyH38iZa9D1IronwfeydnVdCJs5f5bv
1XyPIjsC1sDvBxvhs8G10Tqkax9YGg3xHWAJfCb2v0bXFeAo+uaAtirblO0p
yP2Nf7+AMryx1mviDeAD/DqO7Dh4P/gukpeM7vQHOt4u2sbl2JoGWuCtoBm+
FiyuCWF7NfZy30F3GQPr4E3lELbWh7ANtMD7kLkH/beB3fA5oJezO8Fc+H7s
vUpC2sFW+DvouICu06ATPpu13fjZC1rhDeBd+GbQlNn38+BYuvM/6Dxb8r2U
q3X4urbG/vSCzznzJrbeI79D8APgDb5fBxX4veB3YnMYLMxsU7YVqxmZ76H7
dIBbS/ZBvshH+bozt4z2PoQfBA/DF4FDue85F1wHrgdPcuZKfkuKP/fdBP6t
dQx6omtzFIykGm1i7WL26kEz/Ie0913y+SvWHqXe9oATKTfHwETKkc7p/JmL
yDVYntkX+bQMfik+DpPrCpiRW7fsf59sqHZ/TTpHks/y/RS6GpQvZK5K9ai6
lI+yuQEsSLK6bxuogr/C2ji/x8HL0bk7n2pSOZxItrQvOfWgenEQNOaW/Q38
lGrgocz1rTpvgQ+j85E6x0SxUU2qFlQTnZyfAvqKjrNmgWqwPeVmpWoht17p
PwE/mbvOtKa9WHast6CzDB+CPw0eBB3gHDq60d8FzsDXsPYcWAaeAj3U4VF6
4WewAd6X+Vff89TrYEnJNaRa2lVw7aqGVbfqSfWmcqbcdRWsUzrWF5xzxVA2
ZbsK/S8E91AZfqTa9nXmrYLlJlKsn4UfQWY6ugdAg2KfWa4bfAr/kbNjSYd0
SU7ymhn7wJ+ap/y2oeuz6J5X7/eBdvhYtF+KxWj0DJHPWtNea/Tc0vxqgd+Z
26Zs3ZV7TXvKiXIzNbq2VeON0TNKs0ozR7NHPa5e18zR7NmPzII614hqRbF5
Lc0XxWhydJ9IZ020TdlWDBQLvRF6K5SX0cwQV240W+qj61z1/lLmXvq46DdF
PaWeUG/oDdBboLgqh50Fv0OKcXfiAyn2PUlG66pd6ZNe1XAluu50J91NMVfs
LwP98G+ja1M1+k30TFqU5tkQfF7mPpdvd8PnZ34rNBM1GzUTD6dZINli5ngp
bgF+KroH5IN8uSHzPNBcuCnzDNUslU7plg3ZUjz01k7PXTeqH709j9Onu6qd
Q707w+lt0HzUnOyK/ta63uJz0XU7nmbLR5n74P/eej7plK71uWfIYKpV2VYN
qhaXgpHovt6T5sdjYFrZa+IH2L8lt3/SuSp3LvrT/wXdSTHtSG/GYO5cqB/0
f0D/C7rTG6W3qblsm7KtGCqWlfTW6z3Wu7wR+VXIPwFW557RlbR3WrXH983Y
ug/0w/8DRIJDCA==
            "],
            VertexColors->None], Polygon3DBox[CompressedData["
1:eJwtkltLVFEUgNdYR3TIc45mYMWUmU7j2MWQgh7URPQ19A9YJnZPmJFIHfoB
4SVICIIevb3KTL4EgS/2kBZMJJihoZBQoRGkQQ9+i7UfPs751l577bUvp7r7
Oh8WiEgdeLDni7w4KPIchuE3HgYiOf6zMAul+A3iMSYmIQ638HmNF4lswhf4
hb+GDv6vwWWYxk+EIseiIhVQDjE8F1hOJyQiIg3UyxD/xvgMvIUU3kxenkY/
wUu4iO/41usojME2fprcw8wpgyNQhY+Smy6kDgzAGH6J3GTE1tU+54hliCXY
UzXUwh38eKnIRInIJLyCMvwe8QuMny+ws7iOt8MC9ZYgD234bd/qxN153cUX
6ef+IfqBFLwP7Qzjbt0a6MXTvs2JuXUe4HPkVjInAWfgDX4ytPM8qucJlfgA
e+lin/2Ftu9n+Ag8dmeg8WG8OrQzKnd3orVyrDNygDODp5DFe4hPu/uYgm78
Zmj/ek8f4BF+hZqz7o4+w2Bgb0HfxAp8hx/4X9/uTN/aOOziW4HlaO5XzcUb
4SN1lj27e30DrVqP/1XPxprwc6yddGeg7+ssPgjrrjftUd/Uv8Bq6zvtgXe4
x9pDvP9a7iwO9bhH7p9ikSLmRcDHfwbW/3/Y0y/+hPgG42tRW2sIvxrY3vOu
7xZ8H2o0cd0=
            "],
            VertexColors->None], Polygon3DBox[CompressedData["
1:eJwl0T1IVWEYB/DH6wd18SNRKjWxcmtqCDFqtfEq16QiU4ogzKglDWzUdCg1
qDAFF0syB4VASQnvvYhgjbVEIQ1NzVHQov3kDD+eh/8573nf57wnbtzL3k1F
RANl5A5FZMsjOsjQyYZspzKiuSRii03q+SZbZ7o4YobnjLMm+2RNv7V93OIO
H2WDVRG9Nnqg3qdHP6B2ejaRjnhMBX8ORrTLClyztpur5cnZ8rJZ8t4rsMku
L2Vd9v5SFPGZX/zkoizFQ/MVq8GQUqSetPe2WZrUZib1/+TL+vMHIhbVt7To
l9TqarNWRBxRa5jV16ltnv0ojZjnDUu0yr5XJv+qkWMc5aus1ll/m7FELeOv
/rB62poZa9+xWJp884Is41mjGU/xJJ38q6zsuG+9MssyU4zQJHvKiIt9xChj
TMoaeO2dOeYjWVsvy9vjnBkzXOIKG7JcVdJf5ibXKchqeW+WNVZZoUbW70w5
Z1vgQzq5o9v7d2uPM85wluFUcrZx2cr+DO50VX3GnvdfqP8B7qpWsw==
            "],
            VertexColors->None]},
          Annotation[#, "{}#1"]& ]}]}, 
      {EdgeForm[None], GraphicsGroup3DBox[
        {RGBColor[0.6865909090909091, 0.545, 0.4154545454545454], 
         TagBox[{Polygon3DBox[CompressedData["
1:eJwt0T9I1HEYx/HH08Ky8oS8ztSDAiuiFouglnJ3uBScDLwKI8K7GhTMojWn
SrFFbBSKMFIKS0ixsz9DtTa0ZxGBBYKbrx93w4f39/nzeX4Pz+/Q5VJPMRUR
56iW/u2LeFQX8R830hGv98jhlvix/OHGiJGdESUaohn5SQPKeI3avAt4T9+g
+hh20DLvEfxq1rCZ37BP33pNRDcu0ZQFFvFgqjInQ8M8l8wZwV8887zZpogW
mt4b0YRFnjN6SzhAOe8bWNZf0L+GeUrvNhuPqmer89vFGfkc3rHjXRqlHv4/
dsvjA3d5SL31Ec/tcQEXkzvwzPJewY/im/KfsA/z9ZX+RrU6PWmcU+uSe4En
xSfkL+KxZCfvDvziey/dYSX5rnhTfgLXxAvyH/A+f8FNxrGIt6v/4rjaE3u2
4BDPKm8puVltZeYbestz3g6f8araMz3X8af4h/w61vCPmpPCZpr2zib/Re2d
2xzAKRyr3ionLmMrbtBvc/7iqrkD7v8eu8Tfd7gdZsS7fHc/nhLPynfiWXrq
fRqbacnMTPItfdEQ8Qpz9pgTtuMt8Yw5/bgNrMBYTw==
            "],
            VertexColors->None], Polygon3DBox[CompressedData["
1:eJxNlU1slUUUhqfc24rX6zdzI5QWSw3GCuQaTVDZCmJYqAvCAmMEBRNwY1ow
Aan8FBM3GvAHUxMDuIE00VCMpbeCBdRqIsFEcGeMJoCiBYkKpTS68nl9x8TF
m++dM+ecOX8z39xne1Z0Twsh7ARlUKuFsPfWEN4FCb45hrC6hS/YBe9JIYxV
QrgBXof/DY5VQxgBV+FPFyG04XAZ+4tZ3wYq8HnI1rO3J9lWPp6HJ1CGJ3A7
vLXmsw+AmfBeZA32hsGL8NVgH/wAWAM/Pz2EH8Bv4CdwFtmWqm1ke266dbR3
AZxAdgf7/SQ7RTwN1uEWy7Q3E1SxvRm0Jp+hswbBuuQYFMsA2AzvBh/A94ON
yTrSPQSey7YDOX7J5Vu1qeQzJkFn1ecrjnuxqSO7C9ST97aWHa90JNNeF1iQ
DHHlNkV/ZlWcs9aSd7E/r2Kf8n0GbKq6RqrV5Wh92XWw3sp6Pb1eB7bBF4KB
5hDWst4C3wFWwZ8CL8AvRddXPuRrMOfayDWQjnQbpRC+LjxHmqdNoAesSq6d
eqretlYcS1eugWZoWa5bG3x28qxoZtqTY5a+7ObA7wP3VJzz/OQZ0ix1c9bL
xPJr4XqqrkeSIa4+7ErO7Tvy/b7Zce9O3lNv+nMsmm/Ns3qoGqlWslNtriXf
hbXgVLIP+dpTcg060PmS898C14jlFBhGPgJOax7ZX04tl4DD8MeQ/dwUwkXw
KPx6YVv56GT/eO6lejoKPoy2fRwMRc+g+iC9Sfg49n3YbgO/wCej74buz5/w
s5zzLbgOJsCr0b3XDCyCt2Gzl3K8B2YV1v0cX9+UbSMf8nUF/AG/CZ0d6PaB
FvhI4VqoJg+z317Yl3zOgNcK6/aCJvggOg/hazE4FJ2LZks5K6dxchriuwaM
wT9WfUo+Q2e9gZ/twTG8GZz7O2B7rsGNwlyyv+Dt0fkor6WspxWORT4Wwo+C
/pLP0FljYAh+BHwB/x37y8S6AZyOtpGt4rgf3opstOwzdJZqpFrJ5ip8AzqL
mK23wf5s25vrpxxUM9VOM7oE/lr0Xfr3TsF3Rt8ryV6JfhMu5PdPvR7Osffn
mWvkWkmmvfEmz8DE/2buYl4/AX+gcB0Vi3or2USelyfhB/PbrTdc/5FHCvuT
35WFZ3tlnk/N6bHo3qrHn8DvjO6F+jSJ/m7WL7XYb0fNb0gjx6q7sxxcafId
0V2Zkfyu6m7q31NHdjhYZwW8Hj2rZ8AC+IPg/Wa/eX3wfYVrrx50Fz5bb4dy
+i+Ggzm3dvhGdDrRnQ2egX8GPip5JjQbU8n3Uv9I/St1B4/nu6q9pfkOqUaq
1d3E8CmxnQRz4PPBibJlXfCvkmddM39JvqJrqZr+GJ2TcpONbNUT9UY51/Ns
j+b8JRuP/n/qDddb/g/W5CB+
            "],
            VertexColors->None], Polygon3DBox[CompressedData["
1:eJwt0b8rxHEcx/GXn13S93uLc126UuoGTCw2fwAlyiTc4UzuLJRDsZNbbmNS
ikEh6vqGiaS41cCGE7cpsnm++3yHR31en96fX+9PZyY/mquXlEATZqLSQYu0
j11kyEOe9FEnveEVw+RBX3piwUSzNIcCeRM5xgvIY4OcpraDAxJIYpp8x/xi
RPpEDX/kKc/VxBDHJPkda43SClZRJWeRCuts33lyBeUG6QIlBOQ+7PCeMfYf
wTln/DJXCvdbxw+5nfkrxte4RJx877m9bM8TPJBvccb4NJy3M63W1lQQoM13
b7E3feEZVfIWlsO+FLDtux5aL2s45p5Jz/Xaer6HI8ySk4gx7kI3esg3SLdy
R5TxHXX9t3/I4pB/GfBdra1J2Tr0Rl2trQmwhEfyC7XjEderInfp5y7/VEFK
zw==
            "],
            VertexColors->None], Polygon3DBox[CompressedData["
1:eJwV0D0vg1EYgOEnVCNS2ibquxIrEoOPlR9gwC9Qm6CtQWKzGER8RExCjBIS
hlpIxECl+CXdqdn1DnfuOznnec97zthaZaXcFhE5pFHMRrymIoZ4GHU9wgP5
iFomomljTl90R/Txe0/EY3vEB9dx7mNX/IMzs7/cwp5u8qb5t66ILV7HnS5z
Otnj/Dz34lIXeM7ZNx0R0zyDWz3L36h2RjT4C/P6nvvNXJsd5yIe9AQ/WVuw
55lrWNQvyR2T+/iHJV7GpJ7iI7T0MZ/gT5/yvpkdD3XIuyjpg+R9rGXsKfAg
UjrLleQO3qTKGxjV2/xpreQ96/yOVd3gf2QeMck=
            "],
            VertexColors->None]},
          Annotation[#, "{}#1"]& ]}]}, 
      {EdgeForm[None], GraphicsGroup3DBox[
        {RGBColor[0.8288636363636362, 0.595, 0.3318181818181819], 
         TagBox[{Polygon3DBox[CompressedData["
1:eJwtks8rw2EYwB9sa4bv9+tgIymUbRFOKxd/gBRaOfhdo/xI+1FCiIuDsXBg
Jz+iSHGYi+3AZQ6kaH8FDlizFcnBR+8Onz573ud9nvd9n+/qfAGvv1BE2qAI
9mAfUpCwicThCrYMkS8cwf26yIVZZABvsi8Ch1YRr6bqmnDUUPVB/Egcp/kD
3uGwDYgRdxO/FIh04SC9+iwiIXwNvfRL4Hr2VoEDdHqZ6VmJq4lr8+u3muqX
xNsmkTAk4ZV4GWdxCTW/xSI2PAzH9BnBE5w5BdNg19T7m/FoqcgY+KCFfW72
N2AH6Px24QzEyf/gCmrC1FpwI/dOca4LP0CIt3zgu/wcnnA7ax1WlcuQ+8Bp
3EnumZn04JChZu/HK+TOmLkH3xvqXp+G+g7nZpXbpWadeUSxm5yT2lZco6t5
OPEaTPLWVfymqVm94xz7buj5jRvIPbLuxjFd3fMSz7C2ALMmNQPNps5IG2pW
z/iUvSdW9X9YomacsxaxvVzkqIxvh3PE7+Sz/7MhH8zPf56+c/n+Ie7k4S0B
PETfA84ZxH9uw10D
            "],
            VertexColors->None], Polygon3DBox[CompressedData["
1:eJwtlN1rj2EYxy+/vZifn+d5vE+jkOY1TgwnloOV4kDYYsowsXlpZmhaLG9p
s00sUkIoUogiO2AnHGzeav8AR2Z2YDTtTQ58vl33wae+z/1y3df9ve7rmVd5
ZEtNysy2QjbcisyuMfA8y+wdeklithhGYrNROA1VuWblUIv+xJqP0A3voRLm
sr8kbVbMvn6+6wk8O2P2ku+xtOs5MII+R4xDxKqHFnQ+a3IYXw/rEt+j9dp3
JWjFO5ntMYrY8yjH7DGsQs/kvNvc4ybko8dDE/oyrERvhu/jzPpgE/pF4nEU
r09z0IBuhB+R30F3yYLJQet+BSnP8Sxn1pL7/Ulm0yebfWPPCfYeh170IuY/
o3tgMboxdu/k4Sn0JeK0pNzzNTCNGHeJdZT5i8FzeT8Ew1BADhHnpiBBV7Pu
QK57eBCqGauCIRiG87GPa15edzG2l/tWQje6NfE6yAN5sZSce8w9lJcXYo+v
c86gb0Ser/K+ji5kzyL2/5tgNhG9nbFtUA47IvcsK+Q7BT0KnZzVAb9VT2Je
wZu3qmfsHsrLezAD3c+aJxnPuSvEKgnvQ+8kzRmt5NoGeehdMIvciuBoyEG5
LCX2MngKa/OYgw/oXOaazd+I3soXxh4wVwZv0BnG2sN7mhpqq7fREGp8mJw6
yGMU2hPPXfV7lvE79Ib89d2X+FtRbbVGa49xRl3sPaReGpC/2X6O3tJuxST2
Hdip+iTutTxfrtjsLc7zO+lu6gH1gvqpGb0w9renN7gA/Tdx71WDEfSGyHtB
PbER/Yc1P4k1AIOx+yJ/2oPHuoPuovz1VvcknptyrEC/DvmUQie6hrFXafdI
Xq0OtVGN5qe8Zm0hvryui3yN5vZF3rdN4WzVWf8E1V79VxH5P2Es+H8VvQIK
094j6pXB4KfemN7ar9jvpjv+Vn6R9536T/8+1f5hyL8s3KE0jH1F7yfmvtBj
6rX/wmWwFA==
            "],
            VertexColors->None], Polygon3DBox[CompressedData["
1:eJwt0c8rw3Ecx/G3zcRiG2LkYm4bR+LCnYODyI+DaUx+tdn8zEGkZCY/dthB
JIqLlZy2kuLkR5F/gNu2dpiEGeXg+c3n8Oi916fv5/P+fN6zubwdHp2I2GBA
zCzSlS/SiRZEyF6TSAMfNaIJHnId67Ww4ylXxEEtsYjojCImmGEln7PeyjnN
6rwL8gtO+H2ADXoaOS/A2lyeyDhGsUZ2s15DPyuq4SI/IqoXeaBe4RpffJvB
G9Kc+UldhY9zJjCGFXKI+3xzrx9ksUVuZ38yR6SN2o0e9KNK9a2EkxxU9ztl
SBH0kS3qvXoYtDeTK/h2lzeFEEAZOYx1NTtthn7yHW5xr95zo72D/RlkcVnI
O6gfrC8y3xkE8U6OY5rfs5hDilyPTfmf6TGeuZ+R/b8F/E9UOxxIa7Nmz7Y6
75WcYH2IfoOIIE5eYv+Imt8klslJvp1XfReQIJeq9+5jD+VkJ/uPmMcA1Y1h
7KjZRxFDWJtVschhkciZ6ptizUefXvotUv2Ywh+FyVvh
            "],
            VertexColors->None], 
           Polygon3DBox[{{3777, 3776, 3778, 944, 651, 3735}},
            VertexColors->None], 
           Polygon3DBox[{{4336, 3255, 4337, 4338, 3170, 3172, 4335}, {3876, 
            1229, 3877, 3878, 1218, 1161, 3820}, {4135, 2575, 2598, 4136, 
            4133, 2600, 4134}, {3629, 156, 208, 3666, 3664, 486, 3665}, {4208,
             2744, 2742, 4209, 4188, 2718, 4193}, {3931, 1452, 1448, 3967, 
            3963, 1639, 3965}, {4082, 2286, 4081, 4078, 2161, 2121, 4016}},
            VertexColors->None]},
          Annotation[#, "{}#1"]& ]}]}, 
      {EdgeForm[None], GraphicsGroup3DBox[
        {RGBColor[0.9113636363636364, 0.6484090909090909, 0.3252272727272727], 
         TagBox[{Polygon3DBox[CompressedData["
1:eJwtkk0oRFEUgI+ZMc1MY96LYq1EJlNYzdgqYaFYyM9CLBRqGJYoTJRshjKa
LKRIaEQsppTIQkSysbYZys+QNOU33+2+xdd337v3nHPPea+4Z7AlbBORINih
2SdyiwP41RRJeUXecILnGAeX8aVD5CVHJAMf7B1xJouH2avhTByPGCJtTpEI
3iJxCjbgmb1J4kt4P+AS+XMTh3/dev0NVx6RHdiGIHlDOIRXrfcr0E58gPyt
+BAaybGHF7w6XsWqe97ABfRa8V2436Vrq7qF3CdBvwU+fd90rsgdDLJXD3Xg
N3SeCpzh3LTqH3fwXE3MHE6TN0nte1wK5dQqM/WcnqxZJbx6nscw5dBzmIAq
cjxQsxJ3E7NO7BAeN/Rep9WXmnMMrnmu5V4H1mw3IQlxYr6IncdF4GSdj2fU
PVhH8Qcxr8Rm8a6he3w3dA7Vu8qj6q9BxqP7+OSbNGCTnheZVR72m/qbeax5
qpx9cObT3/pczRMe6bsJ/0CUXu3UWmI9y39yYv1rEQjDmE2/H4VH8u7Ta8bU
OdQMTznzDwFzaek=
            "],
            VertexColors->None], Polygon3DBox[CompressedData["
1:eJwtlM1LlFEUxk9qNqMz771T/QFNeyFqkwkFlTq2igShXUUtgnBIg7JahDpi
TAtdREiLPggyIgjGXfQBUotaRLaPskSodJumUL+Hcxc/OO97P845z33uLZ+p
nhhsMrMBaIHnBbMnMAvPoKnd7Heb2Qb8hUJmNs28OuSI+1vN9sI+6IK+YLa8
1WwReolXo1mDfSaLZqFklud7Lc9+UCBejp5TuZaIi+x5m70vwz/W1IPvrzyj
xLcYv07B16BOPE7RwzAEYzABtfRPYztLnls5lKtP0Mc6+XPE26GV721QIp6O
3qf6nSKukvM4uTvgJPFLOJozOwYviGvR9ZFOD4nXyTVE7YPwp+g9qBf901g+
eI2qbYP6y/CasXnYnXlNqk0aSas55h8hVzc0gtek2raQby56TuVe5d+D6D2o
l244SHwn+twVviei16TaLsJa0bVppDOXRsqjfIdz3uckNV1F6xG4SfyOGqr8
74HvSQvN7U2aDATXSl44Lb1Y87jZ7Cm8Ij4UvbZO2B/dSzNJH+n0JXgN2lda
q0bVKo2k1Y7M52udvKie1fsjuBLdI/KKzmwseN0HoAxTilPu7nTmzcF9I//8
Yr92vm8kH+msKuxZaXPPyDtd0ffQP40tZb5WfvuROcPJg6uKmXOfuffgEvEu
9vzA2Ci0BfewvCyNpXVn9PqUQ7nqqVdpo3shDaWl7oDuQiXNVS/y8ULw89AZ
fiQ+l3nv0mCIeCy6F+RZefdb9LOXB37KW/Am3f9F4nzmNSh3zPzfbPKL1kpz
aa8e1euCPMfYDHyO3qN6labSVnlXkn/l47uZn4tqPEv8iTVTBd9De8ljPclf
i8Rv4ULOPSgvngr+9uyBWvA7NZ7egs3M1/Qmj0qbMrxv8TPQWczD+Zzvqb31
Zunt+gqV4D2oF2kibZRDufTG6a3TnRhJ3prJ3Hf9yf8d6Q50pfdRtf4H5QS6
oA==
            "],
            VertexColors->None], Polygon3DBox[CompressedData["
1:eJwtks1LVGEUxs+Mozh3prlX6B+YEMWhTVsXthJa9bmRFolaYiVNmi38aFFB
H7SJoKRVBYWo6MYWLtIIA7GmwI1LkUBExRQVmZDE38O5ix/vfc59z3vO+5w3
3168fCdpZgWohIPIbDZr9grGA7MudBmG0S+z/m8fvZAzm64wG4MJKKF/wzjf
IxX+bx59EJptV5vdgl4oo8/BCsVWYZR9X9g3RayZ/8usAToDrdT5QA/v4D1c
izxf5xylzf5Dgdh9+BV4z+pxEX2e/I2E2Rx3+goXco6+e2AJLqGvQx4DbrC2
QwfsqkdqFKEb9kL3QX5MBt5TJ7qW+MOU2SP4CfXoq+T/pe5mwuu3oL/Bc2oM
Jd0f+bRD/jS9vs26t/L4NPmLnFNK+Rk6S77KX3nVUmV2jz19kXuiXnRv3f8p
8SfwGC6yr8h6F/6QtwZniD1Ab3DeOnwmJ5GhduT+j8az1Oxm0N/Zezue202Y
Q5/KuZ+62xZcQfeE3pfmqVqqKR/kx4+U36cQ+uw0w4/wCdoi91qeN/HdTOws
62v0AD4NJt2zYXSW+GHaZ66e1FsQ+fwVL0MGHdaYPTthdrLGvZAnekd6T9Xw
gt7TrJvQS1+rsRfyRPk65x800Esd+g3xRnroT3pP6k1voTv2RO96P3Qf5Ecp
vnOe2DHpboRi
            "],
            VertexColors->None], 
           Polygon3DBox[{{4326, 3245, 3240, 3264, 3256, 4335}, {4135, 2601, 
            2633, 2632, 2566, 4119}, {4017, 2122, 2119, 2118, 2120, 4016}, {
            4208, 2725, 2798, 2818, 2810, 4246}, {3821, 1157, 1158, 1152, 
            1153, 3820}, {3931, 1585, 1584, 1587, 1586, 3930}, {3629, 214, 
            110, 114, 153, 3606}},
            VertexColors->None]},
          Annotation[#, "{}#1"]& ]}]}, 
      {EdgeForm[None], GraphicsGroup3DBox[
        {RGBColor[
         0.9340909090909091, 0.7052272727272727, 0.39568181818181813`], 
         TagBox[{Polygon3DBox[CompressedData["
1:eJwtkksohFEUx08zTPNg5hN7JiuxV4wsKI8aC7FgJSNNmEEKGwtq0FAShRSR
xlvE2gozHhtsbIjBLFDkkdeC39edxb/fd84993/uPfdz1rdW+g0i4kJGVKiJ
ZJLw2EVGk0TG0CoaJvaR34UvFpE/9IwGibvJD8F2qJt5dUOHyFSCyA/5WKLI
HbpJVDUdaMmo/C+sIidokNogGtDF3loTFikiR6wdolSbyGeySDPW37CXcz6Q
74NBcuPIbRY5YK8f7kMf9KJGdBz3iaB39rdQ/wGdnK+N7y++LexZo78N1iMX
Z/DAc3pMctYzTXnq/jNok9ottIG2Har/jkPlD/DcR0H8u7hvCFpZW2ctQ/fG
K5+zFMDb+Hxy6WdibZUaM4yyFqLvLwywvxOffjhDnMI8ZuElWqTmCTawlk7N
tF294YhBxT/x9yqnXxF1blgMa+iRTc9WmGNSM9fjKPEyd7mFN6iH71NYhbJY
r4YdmnqbbvhoV+9mJD9HnMbZ5mEZqqCmFL4y3ybm8QZj1K3geQ8tdvV+Nhgg
zsO/Du6RC6MImtDU//FATYlDzasMXpNf4O5X0KKpe5o1NftwfP7/qbVq0w==

            "],
            VertexColors->None], Polygon3DBox[CompressedData["
1:eJwtkj1MFFEQgCcgh+udu0uwh0MbIoWdBEwIhOJCchSUFPhz/FwUXRIUaJDE
hL9rLCQBGkjwwq+aGFul8YpLoOEqIBYeEApJgIYCKOSbzBZf8u28mTdv3tv4
i6DjTYmIPIJb8NMVWS0VKZaJJDyRd77I9h2RPLzF94n13RZJwx7+naKvsAbf
4D31aTbsg7HQtcHrMDYIx2W2v/apISdH3wGI4xP0yLDPFMziz+jREBGphed4
DnrofeaIxHyr0/o8BLDpWi/t+QtPkf+E2sfwFN+IiXyCOViP2Rn1XEMwjl/c
FekP97rCr4nNc5Yv4FB/SewVay/hPz7N+jC1IzCFB+Q8pFcnTOIxz+5F76cc
9ypsrQ5OOX9veJd6pzpXkdgK51qGA99iunbu2Mz1xD7S6z404f9cu6tJOMGb
fcvVGn2rQ99m1lmP8GrP3kvfLY4vEbsXZR/edxzv8ux99J0+uHYHQXi/D/hO
kNNObqOC/yF/gV7rcOzZjDrrBkRwn5oZajPg4L89m1nn0rcswCi+Bgd41LXc
JN8/PDuznj0Lf/EsbNF7F5bxlGt3UQXdrsW3wv9V/9tFciqYrxI+462QJN4G
LXjBt39B/4kd/AYat2+L
            "],
            VertexColors->None], Polygon3DBox[CompressedData["
1:eJwt0skrxGEcx/FvzMiY5TfiH6BxUO72Aw6kONhPxEGyjGS9UNbiInHAwYXG
MhJ3Toy9LCcKNVkOCOFkiffT8xxePfN5fs/2fZ5JqGst8UeIiA92fHlEZmwi
37Q/+EXIEvFHi7SgHtvke6zwexm9CJMDXpGLGJEJl0gQt+RcFNL35xB5Qw45
mrFB9li16b2EPM0+4xwkje/pyMAQBjGMR9bopx1hXBfjetCNMXIC8zdYZx0h
liul75K+BnPmOVyRbRhjzIhZV61fQ19qlMgdxT+gmjzA/HbWbkMD+sgeuPHn
Fmlkj3fabOZncq5iFCGPfGbp+zinPcEpbuhf4D4CWMQ1ecDUFO8UicUc+Un1
4QUpnKmKuR383mfcAQ7RTnbh1aHv9AsO8jzinHrcERbUWTDp0u9xTF8n2UcN
+5x/D7tIIn+YmprQjE+3vsOQGbeDRHLAo+98VP1HMAsLU3z3mvtR9/Ts1XWG
TT2qrkpqqUAtkqmtzNJ7qzOod1uDy9Lvrt4/09xtFm25mZOBLNSRCxC263e7
RT55i/X85t2WIkU2yf8kE2r9
            "],
            VertexColors->None], 
           Polygon3DBox[{{3738, 3737, 3739, 543, 655, 3736}, {3851, 1196, 
            1195, 1193, 1197, 3850}, {3576, 112, 111, 108, 107, 3575}, {3723, 
            632, 630, 615, 621, 3724}, {4216, 2762, 2835, 2833, 2836, 4257}, {
            3913, 1507, 1591, 1596, 1594, 3973}, {3928, 1580, 1579, 3929, 
            3926, 3927}, {4347, 3238, 3236, 3242, 3224, 4307}, {4067, 2217, 
            2218, 2206, 2158, 4038}, {3837, 3836, 3843, 1159, 1162, 3844}, {
            4104, 2554, 2634, 2637, 2638, 4169}, {4048, 4047, 4020, 2125, 148,
             3599}},
            VertexColors->None]},
          Annotation[#, "{}#1"]& ]}]}, 
      {EdgeForm[None], GraphicsGroup3DBox[
        {RGBColor[
         0.9568181818181818, 0.7620454545454546, 0.46613636363636357`], 
         TagBox[{Polygon3DBox[CompressedData["
1:eJwtkL9LQmEUhl8s7FJ5jcA/QGzIBgcni1pKbKgpioaGQKFUKKeWisooB6mg
WiSyQNOkpaW/oikhqqGioILQqR+LEPTIvcPL853ve897zr3eaGpi0SHJj1pQ
wyUtwF8ot5RvlQyYNaUljBl40iV9tkubMMpbn1OaghW856iMjlHOPn+RlSDO
pPcQ5tCyIa2gVcM635F12indQj++azw+OEtuP/kx+IrW8L7DI9522acMi/R0
d9APK8jDuQR/mDtDzje8cVuzqrCXvB7kRSP4QnzLEPzg7QzPI/wzrf0bcJ85
B2gH7Tmsuc2zE98FnjYYRyHy5uA2PQne1+GkPW8aDjIjyKwB6KK+pNeEw9Rj
3IehD2/A3u2FOs8/eYP3+Ars9gBr1Ffc1+G8Pbc5f5R6nJwIfEIlPM8wjWrc
b8ENdkqyWxr+A6yhRTg=
            "],
            VertexColors->None], Polygon3DBox[CompressedData["
1:eJwtkkErRFEUx0/TM8S49zXlA8jbsBA2hh0li5mVlShKpKewslKDmrJQCptZ
zESM5mVjw5ewNYpSFqbEZGthgd/pWPya/z33nP95557pXdqc2UiJSAQBZJ1I
md85aHWLDIUiw50iORhFP3qR8w6RGjTRU8Ty3BVgGj1LbDAtcpOhnvMC5xzn
MVhEP3urVY8ndImcFrUJzQPOX/Rcp/cd9PMtDe5P8arCA9qRc03uFXj0RGi9
9Rsm0WeQ7RLpgQQdOfNSz2+8X4hd4nULn6HNqLPOwwe6Flqtelygf6iv0qsC
v+hdYm/0eocD9LK32XTGVXQDisy2DfdoR02M9wl4dDO0WXSmV/Q+sS0WcAgJ
ut3bbDpjxltd/L8P3Yv2rgf2XvpueXIieg/ACnoczxHiR/iVne2iL23z6k72
iK1xF0PJ2W6PU5avdTvO7jSn6OyNtFY9Cvi3eeuv36FvUXdWrz76X/kDYA1P
cQ==
            "],
            VertexColors->None], Polygon3DBox[CompressedData["
1:eJw1kL8rxHEYx99dd5L78b2Usl6OZFBMNzBYLExyuVzdYFAMTBZ0cTahsFwX
Kbn73mbhn7iJFCGDDBITmxKvp8/H8Or5vt/P83w/z/Nk5panliKSuiEGj4H0
APdw2i7dEetpqSsunREbEMIkfk+blIEsTATOt/wLnCSkW+I8fo58iVhJSVtQ
wX/rkF7hHTbRTfw9BtmBAwjRM/T0+zcGoYC+hnXmWoMyPKNH6c/xnyEYhhH0
L/1HUeaBEGLU3QSubxWq7NpJzVdSKvI9CwvwiR63/fjPWNrdwm4SUHso12vv
X9n+eC28LLEX+v73gzIssscGMU/tgL+T7TONjkLTz1eFH+o+eO+Cu11CHZ7Q
3ymXt12OQfQ18HYj7l4rsG01sO/vZ7man8fmStBzTm+S+AfFpUKj
            "],
            VertexColors->None], 
           Polygon3DBox[{{3941, 1578, 3938, 3939, 1593, 3940}, {4068, 2212, 
            4070, 4069, 2174, 4052}, {3855, 1194, 3846, 3848, 1181, 3838}, {
            4151, 2616, 4163, 4164, 2635, 4165}, {3562, 91, 3572, 3573, 109, 
            3574}, {4235, 2793, 4254, 4255, 2834, 4256}, {4309, 3229, 4320, 
            4318, 3237, 4319}, {3716, 617, 3717, 3718, 629, 3719}},
            VertexColors->None]},
          Annotation[#, "{}#1"]& ]}]}, 
      {EdgeForm[None], GraphicsGroup3DBox[
        {RGBColor[0.9795454545454546, 0.8188636363636363, 0.5365909090909091], 
         TagBox[{Polygon3DBox[CompressedData["
1:eJxNkj1LA0EQhidnPEJMcpf8AhXUSoL4BfbWola2EivFSIhBKy0EEUsLjYnx
8iH+FjGpTAqxsEkRrETBRhSfud3C4rl37r2Z3Zm9HdvMr+06IrIEQ+BYjcBX
UmQDfUPb4BHvkFCMiZQggNMU73gnaDUh0oQKBJAcEUlBm7pHeIC7qMg1NGCf
+mM4hDNf5CMuUvZNXcLW9jyzVwftwhFxHz1grZyY2jrcQzNm1niHOLUR8gL2
uUR79J8hPw0tvKbtQefRuQroCoFLPCD3xTezPPtmdsYL876Ji+gPuooxScE6
+ktChfU8z3wvQQfqUdPDrc7NHlW4ghso27hBbR5toRc2Vq8WNWen56Y9aK/b
jolpLexJY/W0Zs+qvs9xBtOwAK/MUKOgh3aTZsYpHk/2n2KHccGexbhr5hp1
TX7a3ouBre2jM77ZYxadx5z4l693x7VrZuzZ5lg4i7nlGV/31G/63xbj5t8F
mJ/E57ZP7VH3HrZ3Eiv0HXs/l8nLkr+I/gEvJ1bA
            "],
            VertexColors->None], Polygon3DBox[CompressedData["
1:eJwtkztLXFEUhTcXFRnn3nviP1DRkELHwsc/0EJB0caAlcQHKCpBxc4JKSxS
yVS+xpFRtPJ/SEwVX2ARsBBJVBR7zbfYF2Yx6+xz9jpr77Nv08TCyHxkZl2g
BsykZhex2Qf4NDzPfy0gZAloz5l1gE5QABsEz9hcQKQEvwxmFZKSBrMj+BQa
jeaa0v7Oma+Rx7T3RPwLfBI8wO9iv1Oa0h7lTFud2UcwDF8kdwnsgC0wxtnP
YCXTmORMgbPNYADeG9yn/HbC39HcotBt8AY/4bJ9sAPK8k3OHntlEMNbOPMT
3V/gE7wV3e46z1HuNWcq9azBFXzV3JO8qC55lnd+NgQ/Tty7alhP3JO87bI+
Yv0v9nzpNLJ+DH6PvP0JXlch64f6orfYjDxfOn9j74c0pPVCrEotB+Ae3obm
qXlNqu0Hmq853ysGfzO9XR4cBq9JtVXBDfyc2Hbe31hvXUpdX/esB89Rbg4c
wwdT75lqUC1FdJbBElgDfcR6ye0B/cHv0F2Kae8qeK/V83H2iniei3yGNEvf
wGzkMe0959yL6lFdmlskLM3mt5x4v9S3bmlns6CZOMzeXG+vHqlXv1P3LK/n
qfdI2upnLevb2L8Pzaxm9z+ab2xb
            "],
            VertexColors->None], Polygon3DBox[CompressedData["
1:eJwtkL0vg1EUh39pVJoXbVms2gQx0EjUfyCGWtiadJKKQaKGV8OERCJmEbTa
vm2J/i9iQrAbRXwkFgPPzT3DMzznnnPPR2a1srIZkzQKcThLSVGf1IZrOMUX
09J8IE1DDhbwW+LbCWkXytS9D0l54jOWNwezeA+CAekD/4YIL1Cb7ZfGYByW
8Juk1GCQc7iEHn5HvMr/YcL3cj1LkLfaCVh285Jbs9oLaOLrxIeZa5KcHJTx
K+IV3rdiPt/VTbk+5FWhCD/sccSMn4Gf+QuO8Tfia5YXwi9+SG1o/23AAf5I
bnOQHaAOD2l/Q3fLDnThBH+FPdstgmc8BXW7fQuS+Ah/7sjfeR/uib3wZ9d6
tOEJj7v9rEcN/qj7B1dIQWg=
            "],
            VertexColors->None], 
           Polygon3DBox[{{3623, 204, 1182, 1183, 1184, 3841}, {3556, 6, 1, 3, 
            5, 3554}, {4147, 2612, 2614, 2615, 2215, 4063}, {4249, 2802, 2826,
             2828, 2829, 4251}, {4063, 2215, 2209, 2208, 2166, 4053}, {3581, 
            116, 205, 203, 204, 3623}, {4251, 2829, 3232, 3227, 3235, 4315}, {
            18, 16, 13, 3, 2, 17}},
            VertexColors->None]},
          Annotation[#, "{}#1"]& ]}]}, 
      {EdgeForm[None], GraphicsGroup3DBox[
        {RGBColor[1., 0.8772727272727272, 0.6136363636363635], 
         TagBox[{
           Polygon3DBox[{{3920, 3536, 3923}, {3918, 3536, 3917}, {3919, 3536, 
            3920}},
            VertexColors->None], Polygon3DBox[CompressedData["
1:eJwt0UlOQkEUheErccrjbUEnOrXdh4x14gJ0GSoz5aEIxg5cjcrMFhOMiE2i
uADB+J+8M/iSStWtuk1NrW+WNwoRMY1JdEoR17jEFW5x472O93Q2LEb84A9j
zCQRs5hPI+awgEV8cvaBVwxwRswpjnGCe2LusMqba3gn5g27nO0l+Rt6q8fZ
M5ZZLzmHcilGsVVk+ObuF34xKuY5lEt3dPcITXTxhD4xL86p3Bk5qtjibNu0
3kElzWvoeSaazSN7D+5BvWgmQ9egWgrETOAAdbSo5RxtXCR5DV2/obfqjq1h
32quSbWN3NvYs6+4tkM00nyGmuUKyqU8R9sz1+wH/gv1rN4bvtv0bDLPUjW2
/Kf6W/WgXv4BH3VgzQ==
            "],
            VertexColors->None], 
           Polygon3DBox[{{3917, 3536, 3919, 3560, 3561}, {3922, 3921, 3923, 
            3536, 3918}},
            VertexColors->None]},
          Annotation[#, "{}#1"]& ]}]}, 
      {EdgeForm[None], GraphicsGroup3DBox[
        {RGBColor[1, 0.95, 0.75], 
         TagBox[{Polygon3DBox[CompressedData["
1:eJwtVEtvjGEYfTKkt+k33ySouzFS6jJp6GU0iFS1KlVDRtvZt3sWE9GFHyCW
whBWJBK/BVNpFzqtMkRELMQfEHFOzlk8ec48t/e8533mKy7eqd7ORMR92DbY
xySi1RExBvwW+Dz8BGwNeATxIvBX4CvwA8b0aTZiNVGedauuPxzC9EXPmYQf
cu90aBbx896Iq8DvgMfhzxnX4S+6hvlpc7sQ4sca5seNGWfPX+Al+N+J4pzH
XAlW7hA/8imZM+8+C7wBvO6ZdZ+15F7GZ+ArxhVzY81iqG7dc2Z83/7QnTeB
q6E6nkWNr7lmX6huzRrucQ3zs44Pmjsx9TttTag9tWOcsUHzmfBZB2CHYLdg
K+bTB/sAXIO/ac51n7UBfBB+v/F86DfP4FndsBbic6HcJdhlz2/5jnPuXe6K
uNels55i0Z5kpMOi9yqTRtyFP56LeJiP+NMT8SCvXp6/YN1Yy7mNVO/zLFUN
8zyD9+KddpsDedURf5/Kr6TiwLuTRxO4kREmP854Y57kWLNWzLOnaVxwvOA5
5MD+ees56Xd84RmcRT7kUHXNlPeBmNrfMKaf8tyGtWr6LEgej3Pyj+CHoNEo
tCrn9e7cF+7QN+BTof/JXtgu2A7YlrU6Avvi/3gZ+BfwTvjrqWqY74Z9TpTn
exCPAI/CPgF3wuM6MQw7Czvj+ezrdC9ry8acwf6TsGOub3tvB4yzWf3mfN6L
c/g7631rm0PWNTVrvGU+wz2KkxdzL3PS8HVOvSdC/cRHQ79Zzxk8r+3vGHPf
gbfD/0ikNTX/mUg33mnMGtJTR2rO70nJu8EdLPgtGON7VFJ9A6vWmfu24L3n
/v9LFOc9lr2PxNzJfr9tn2fybV/16vvA/wI5tPKKbeZVQ0xO/wHkcrMq
            "],
            VertexColors->None], Polygon3DBox[CompressedData["
1:eJwt0ksvg0EUxvGJCKqqTRBEXRtKaSt6caeIS9EWcVnZ1J6lL9J0URIJkfgy
tkJiIbGwEl/B/2SexS99+870zHPOdLR6c3Ld5JybQTOSSGMHu9jAItaxhWV9
t/ebqIWde29x7gN1nhO8yyGLKZzhFEMYxDyKOMACCljDqs4oad32ZbCNCmI4
RgqzypjUO1sbwzmOcIE2tOOSTHmyPXaQM+LPsfPKOmtavadUbxITGEccK1hS
z9b7JzUa1AoEnbuP+L6iGFB/vyHnrvis4i/kM1iWVgSUtaKctvbDnqBm/83z
njIlNf8urdmeYbzRzy0FX/AV9jktb0LzzpMpR+E7LvWh02e0rEE0eB5hTzd6
MIpn9tTZ+8rZT51+Lvu6g5LmbPOe02xKYf97q1MO+7nH1EtA/5u09sZ1Tj/6
dF5R9Q/1H1jUfAu6f+vJestQMBvxc43qnu1+e1WvS/OwzK+aYY3nf/G3NRc=

            "],
            VertexColors->None], 
           Polygon3DBox[{{4232, 2799, 54, 1752, 3988}, {3922, 32, 1588, 1590, 
            3933}, {50, 51, 49, 38, 40}, {61, 77, 51, 50, 68}, {3567, 98, 82, 
            2163, 4044}, {4250, 2827, 52, 2799, 4234}, {3743, 667, 661, 662, 
            3745}, {4148, 2611, 7, 2613, 4146}, {28, 83, 67, 69, 81}, {26, 24,
             25, 23, 22}, {69, 67, 63, 61, 68}, {4314, 3234, 72, 3226, 
            4316}, {4046, 2163, 85, 2167, 4054}},
            VertexColors->None], 
           Polygon3DBox[{{30, 84, 82, 66, 65, 83}, {55, 56, 54, 53, 42, 49}, {
            3582, 117, 115, 60, 99, 3580}, {3992, 1753, 76, 115, 117, 3842}, {
            3557, 4, 19, 21, 20, 3561}},
            VertexColors->None]},
          Annotation[#, "{}#1"]& ]}]}}, {
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwt001MDmAcAPCnV6U3hZpOZhYOPmbTJmutxNAc1YE5ldiKAxdmxphUb6al
WlkOPjbf0xCzprGmt5iTLVbooKLRMC6Wmq+fzeF3eP7Pf8/H//882RX7Svcm
hBDGecsoE8wV3DEjhHKq2E01d1NC6OQV12aGcJXrPCZOL0000sApFspdRDaZ
ZJBKlN/mf7E+NYR1FLGWDXREQ7jCSepp4ATVxDjPTW7TyR26ecgDurhPhAQy
ySCLxSyhjHIq7VfFz1kh/OEjE1yOOAM36KKbHlLUooOLXOAS7xhjlBH66eUQ
B9nPAWqopY56viSH8IH3jPOZT7TTxhme8oQ+hhngOW8YYYwcdSykgFzmEBVP
5luSffhKMC5ODyGPHFbRTx+P6CHOOf1pp4VmaqkhRjXHaSRJ7nRaCFNMMsAL
XjLIEHvkVFBGObvYSasaN9PCWY5xlMMcYVBPhnjN8L+3Ya0C8uk1H+cZ3/lB
RHxLYgglbGM7le5cRYx6mmmljZWsYDnzWcAylrKGXFaTTxGb2cRGiikkj3v+
yy06aOI0MerYSiklpHo7acwmnUQSyGIeU9ozyfT///gXu3l/eA==
        "],
        VertexColors->None]}, {}, {}, 
      {GrayLevel[0.2], CapForm["Butt"], 
       Line3DBox[{3554, 3556, 3560, 3919, 3920, 3923, 3921, 3932, 4311, 4313, 
        4315, 4251, 4249, 4233, 4231, 3987, 3989, 3991, 3841, 3623, 3581, 
        3579, 3564, 3566, 4043, 4045, 4053, 4063, 4147, 4145, 4149, 3742, 
        3744, 3748, 3746, 3731, 3729, 3558, 3554},
        VertexColors->None], 
       Line3DBox[{3555, 3557, 3561, 3917, 3918, 3922, 3933, 4312, 4314, 4316, 
        4252, 4250, 4234, 4232, 3988, 3990, 3992, 3842, 3624, 3582, 3580, 
        3565, 3567, 4044, 4046, 4054, 4064, 4148, 4146, 4150, 3743, 3745, 
        3749, 3747, 3732, 3730, 3559, 3555},
        VertexColors->None], 
       Line3DBox[{3562, 3563, 3602, 4051, 4052, 4068, 4056, 4055, 4059, 4166, 
        4167, 4165, 4151, 4144, 3751, 3752, 3719, 3716, 3713, 3712, 3715, 
        3942, 3944, 3943, 3940, 3941, 3915, 3916, 4333, 4319, 4309, 4308, 
        4310, 4263, 4261, 4264, 4256, 4235, 4224, 3845, 3839, 3838, 3855, 
        3854, 3853, 3622, 3619, 3625, 3574, 3562},
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0jdOHUAUBdD55PjBC6CgJ3RkkHBDbhA5NHSY1JgsFuDS7sDkKHKogFUQ
bOgAwwbsFjDmfLk4enM1Guk+aXL7RpqHIyGEL/zODOEPedEQ3rJCeOaFZZZY
ZJUVvjPHPAusscUm62wQskOIEEc8bXTRSQutdNNBOw3U00gT+3rsscsO24wz
xgSfGWWGaaaY5JADjjhmVpdvfKVCLqff+RPDDDLAEGXuSqmPnSmPvSHywR7k
kEk6GURJI5UUkknin/7BfDP/8kqCHE8iZ/Ip5xzEduWQY444YY9ddtjmVq8b
fvLEI/fc8YsLLvnBFdc8kK9/AYVUyZUUUUwJ3fTSQx211PCRagopiP7/H+/w
00sp
        "],
        VertexColors->None], 
       Line3DBox[{3570, 3571, 3572, 3573, 3578, 3620, 3621, 3852, 3847, 3846, 
        3848, 3840, 3834, 3837, 3844, 4228, 4225, 4226, 4254, 4255, 4259, 
        4260, 4262, 4323, 4324, 4320, 4318, 4317, 4332, 4331, 3928, 3927, 
        3924, 3925, 3938, 3939, 3935, 3934, 3714, 3710, 3711, 3717, 3718, 
        3722, 3750, 3738, 3736, 4154, 4156, 4157, 4163, 4164, 4162, 4161, 
        4058, 4057, 4060, 4070, 4069, 4065, 4049, 4048, 3599, 3598, 3570},
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0L0ugwEUBuDTdPHh07oDn6uoGIxtRySSbv5mHZDYpappdxETt8CIBV1F
XYHaKulaUkk90uHJOTnDe5I3261vHOQiYp1RGvFNthCxzCZZIWKJWeZIGLv/
krd/mQMuihFnnNLghmtOOOSIY97o8c6YPh8MGFJYjGjKrVNjix22aVClTIV7
fx94pEObc1pccsU+e6zJLrHCKhWqzJAwz7PMJ17o8kmfHq/ccfvfg7yEIikT
nf2k0/7+ADFJMIA=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0jkrB3AYB/CfXJO/sxTq73oBDGJxlGOkHG/A5FYouWeDoxgsdsfmzJE/
BuXana8AYaOIjwyfenqe5futp6C9v7kvLoQwTYiEEE8iJZRSxm5qCDussMoa
6xxzRIwTTnnhiWe++OaHgrQQiiikmCj5NNJMC00kk0QCiURIYVyOTjroYpBe
ephlhnnmiLHPHttssckGdbLUUkUl1ZRSQgP1VFDOEMOMMM8sc+Skh5BLBplk
cybjCcfEOOKSC8655opPpphgkjFG//oxQDddLLPEIgvssMshB3zo8s4brxTJ
FeXB/Mgd99xwS5ZbJmmkk/HX3b6GBuppo5U8cskhnygJkf//+AUUJUj/
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0bsuA2AYBuC/LoA2qrRowigsrcXmNJJgMFNCRCiDOlyCqM3oFkgkdYyF
1mFRd6GsTunmaQxP/m/4/rxv8vXk8jPrkRDCJpHmEJrIkKXUEsIJp5xxxTXP
PPJEnTdqvPNBVzSEbtL0M8A0U6RI0kaCOK0syVtmnjlW2eCYMhUeqHLDJRec
MypzhGH2GGKQLBl22GeLAgcUGz1juhAjSk2PO+4pU+GTF6q8sss2BRbIscgK
a+Q5pMgRJW751fOHOr2yv71fpM2dpGingzYSJBmzM84sE0w2/tBNH0nixJr/
7/cHTLE6wA==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0L0rxAEYB/DHwnZ3huMKg+F0+hULZjOLbrmU95JFv+us5KUMlFJmfwKT
xWAQg+vkT7B6WXCn68rkI8Nneur5fvsOr1XLaVdErNKdiehhgudsxA3XXHBJ
gw+afPJFmw6juYiEMYqUGGeAHFkKTLPk/zI1qqScc88dtzzRoM4jWzJ22WGb
PSaZ4pgjDtnngHxvRB8F3mU+UKdFkx86tNlgnRUWWaBGyiZnnHLCFa/6vPDG
Ny0GZQ4xQpHS3yYkzLtXmGGWOcok9FMgn/nf/xd8WDY/
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0L1KAgAUBtDrFiqaGTkHkhD1Cj1CYlMUKAlFU1nNLQUtLTakr5HQFg1N
EUSP0KRJkCUl4uiRhrNcLt/9Wa4fbx0lIqLCXCYiyXs24pEHOtzxyx8jxkxY
nddPihVKFFggxwZ1efuc0uKWNk+88cwLr5zJPKHBObvscM0Fl1yxmIvoy+7x
wQ9DJowYc8gBNars0aDFDU3u+TS3R5dvBnxRNKc0u5G12R5q22xSpsI6S+RJ
Z/7/NwVxKTBM
        "],
        VertexColors->None]}}},
    VertexColors->CompressedData["
1:eJx8u3k01dH7PS4pRdKglCFTCZUIKaqdEhGSiCQKlcwZylBSVEIUhYrSJFIa
qJAyXEPm8V7X5eJe1+yiUonke96f9Vvv+uf9659Wez2e85zn7POcvVcvMvYe
Zsd4eXh4JBfy8Mwkf9PTdGbbtI3Aq0rEePTcIAbGVDvfFbNxK8rnesz9ERjO
uZky3j2A2/tPHtSbw8a1n2kpXcUjyI5abrtz5yBquucPjgWywfN/f0bRU7nh
9FXDIZhuu/+xUJCDTfyZodFlI+BoqMz9YjCIz7+V+raEssFJyjlk/nMEMRkF
socLB7FzY+Res2Vd/81zd93nvuu7uQixOJMl3Nf9X7x7bdFu58tcKIu47ua3
6fkv/vSpLT2giAvrgNcWKVV/cYbl9wqjZcPI5Yv8He3W+1+cv3v5yRafIbhd
W/BE9BAHO8qtVkrSRjB1x2TZfvdBZG1ZbGn9mo3NHZeeLiD77dmHTjWdQVTw
SDUd92dj57KPC+I/jiDoiEHvTFXSB8dzxubH2JCY6P99yXEEkrdyNA6aDeAj
1/3Hpn0sxNVMijItR2CicPzXmw0D2FidrzKhyMLGurEmAcMR2D1v2rdqwQDm
SyndlJnuhExEGI2yYwRp0yXUb1P9OM/ebhTT1/nf+mXWiUp23BtCkk/EAXYa
57+4vpzTmNCtIazasVMpIP4v3htXuD+9dwhfJgS2Ht3wt5+RVru9bJ9xMSdF
f+mp+3/75rr36ilFay4GfFhZQnP/4rb6B/wTC7moL7ngMKvyL553T0isVJ6L
5Kstnpmpf/Ovdbu4r72FizeRTfTg8b/xaJP2lWzl4kdiknbzxF/cyXq5S4f4
MEKv1vbt8Pl7XrQHFBqLnK9XbYbXieq/8WsvHlnzlpyvyJj56/3uf+NXRn4d
Kjg3BEqpXl65y98+hCZktHWs5+Ln4bKPlJy/dT7Mj7i8aQcXpvx6vxXb/uKv
PujKNzJIHzoKevf8U+eHrbN0Akid+Y39my95/13X53neqrGvhIeUwtKrq//i
0r6nhE6Q/SZ+UN98dPJvnu1j1wsVJYYxUT5iWPPPfqdZizjWY1x8OvHIRUnp
L+6VuWhYfs8wTi9w+NNX9Rdf+rxcVZvCxTNZ66n5NX/zFzf8qpixfBgqLjdt
uv7pz3aB6rBJco82eQcnix7+G+/R9iX2wn3Sh3PHvi+K+IsHxpudvE36zN8W
8ETqnzxX75g1vVQdRhFLLEMx6S+uW74/rpj05+hy5u0F/+wrTOvWqnb1YRRU
n7ks/egvvtvN37iU5Ol9vrN+/z95jv/fn+H/7999/8U5fXnlOzWG8UJ9h1jH
P3mkxwfmtBpwsfVG9quAgb/nGPuUx7X4ChfqWhcMr9v+w9vUz9SliVzYb6HX
PQv9izsPsjOWbRiGk3+//vA/9cwy+T5smMyF4VfB4MjIv/GzNj3rXUn6I6Bo
t2HXP3PG5I7GizpyX/ZfKNY98c99YW/ZVPiE9F/By6Di9D9zzNlBTmIzmXsn
rItEXHr/1j8+sokTZziML4UDg4zKv/mb98rlbfvGRZZGUfIShb+4Cm/Isr2k
/2KPvxur/8NPzVKN6gWEz6mNxcEd/9xHWjTfshrS/zfX5rjZ/7PfQcNbRz8Q
PvgP/Txw/h8+aM6MDpok5zhH3uia5T/9N5S17rUn52XEU37q1/RffCy4Y54j
wSsWyiVM/oN7yn74KEHuxc3OT13Uf+6XoMSYahO577ey0pjG/9z3p2/jP0qT
873tc9ZBsv9vf7byrVfzIP0fWz1+vu6f/lMntSeXkzwqfgvej/7T/xvrbn5U
J3w4RfXtuvgP/9+PWr35SPpvSTme4fDPuzM6O00snvSTl/t734d/+tnZZv9q
F+mnvG3Osx2//uZ59j72cizpz5Fx88SbD//GJ5n96bcnfe5j5J2+nfgX73v0
2LyT3Ov9mVn3dGv+4kIS6gf4r5P9Zj0oFHL/m//3Qq15yUrkXWMNLR2K/hsv
ImG9Wo3s68nY5/7z/+zrm4XKpuidhG8PrK8+b/+7r8c8jPJVZM5oFPoxShX/
5rm3lkMZucdFWuOe6BnhPeCdEXvQJ3cEh+WPSK5THMTl/gD23UNspIQmmXTu
H8Fpj4kZHxQGwNt3oSBJkgXPg87j+wuG4RkSoNT2vg/7fq7l80htR8eK7jny
0cOYderF/v4tfeA9eND50hkmKks070Z51eJQbu7R1ng6hrrvuC/T4MDGarB3
aXENFjnYVjmeoOOytZ0P5nEQXPFVM76rHF3lb9Pi5jWj0EKlarSXDZFzbmuk
H5YjaHKF3YkJGuRWmgkl0dkYEFXaJZdSi6875lmtT6FD/4Igz1odDiIqamS/
RtXihg9N7tN9OuqWjY191P77XhSoKFIv3ebCSfvFCOP8337Wn3wwlqbIxcmU
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
DnlCf2GyhkFB1uVDs0zsqHB5mZ8sGcTCXb5vgrHOFGx3uu1osp2KmvM/Z08R
HZi7e3N0rRkFawMXXM3aTEVi6e/3rkS/KSBoUpise0KVv9OerJt9Z/zXZbLu
b3nBrBA9Cl49C5Ex3EiF+orA7IhDLDAXms1KFKfgdtwTcTuiD68o9a0MJrpx
MD78912CCxtqLP8P/mS8RfY/uEzc+Q9jRGdeL7/1SIXgS0Y2T1gR/N6HbTKq
IhRM7D/xaC/RzzGr+K5TiK52CDxZ8nEGBTfbJRPWyxEfd87hzak9LDBCZ+9x
Gi9Cp+CLlnhpKiIqnXV2GLAwfl+Wv46PgkuMrOm5K6n4tbSjTNGIhSSD6G7p
BRQU1um+VCa6/eyXRXx1JiysnFOxQHGiCLyHHC6KyFBRtFtvfzrJIyV3eEn3
SgousDee+Ebe68XCn148J+9150/5/SuJX37vKPjoJfHLP0vC668Tv1xsLhw8
QaVgvSKDb6UtFX29Hj6y51h45n1iWjePglRnTsP0ASpKRRUiJcn7MrPttXzQ
u1JscKk5nKtEw74zGyNjFNkIeiEvP5/Uf1eteGUT2a+opbfDb7LfoDL2qI4A
BU1azhuuraKi4MJqWU9j1n/+3+btBOlPAuv8pe0knv2m9sd5Ej/z4aruj5NF
2Nu/80co2VfhM0txAUMWtuUULn4yXYTwoxtD7shSkR/bKDBG8EUneC9dkKNA
oTf94XWy33HJs+4HyX6dZ2buitlcizctSxbyh9Exurymr2A1B13Uk/Q3Dg0I
SBGdb9/TApvZRxatqOEgUzrar1aIgmwxMfpVeSp43NVFdpE+Wxbe/uO5iwIr
/fSGKQ0qup8cO7GH8MfDa/mhW9+L8CS/Zk6tFPGzTUumE3aTdbfdLFzwowjM
1tG9XwiewNTtektwjUHe668YXRib8TJA400nxHyly9iLmdjYWtmK0AFIHsk8
fHduF2YeoF5N3kbF6Lu+rNX8RI8LTHyhFnZiwapbx+92tEEEDn7dWwYgWmfZ
fmWUDcXcweehxK8kHw59tLy0C5FfRxf/etYJe4E/PaJrmXhbYWu4PmEAhcGX
exMXdGEDzeqACuFRnXzt+LKMLviObk28+rAT24oijU13M7FCK1yer4SNqpb0
vPumndDNvSNsbd0OrW0VExc1u7AkqflZm18nQpt0i/MambAIG7f6dJ+LZ+NM
8eM93ZgntqlQI70ZVh1v7jGyBjDb7NWmV2Jd4NI9DgbOokLtrF9TUzQXBxhJ
pvc+dUNLY8XXa7uboW10W3fFwQGi//aOeE2wYfF8s9UB4rNnLdV9o/SICw5D
bHJsuBtXwuat8Cgg+jGsZOuq/jaiu3U2/UhgwppO+eb+joXYVMcrE8pMrGme
GA9+TfTMoK5B3wMW5Gc+sTKht2HPG3cNwVgmbhw8LmT/gYUmMdvkkuEu7MxX
3qab04mG47Ms9Mj8Y7+WjF9O3vU5+0zFVB8zITix5oLACxb2LLT7xJfZButi
pcujl5go3d9ZblnKwqivXmLayjYwD52f07+fiRe94hfXj7KQnPrDvtKrFYMV
kvHHlzAhJZRoe2YleR+dp44fZDTh5CLl03xEh6fuz5YpIDqcIRFYV3WgCUfX
bNhafouBGY5+Gc7aHAgLPOrsWMlCz6vD0QVnOxCswTOnVqYTW2/kGrU+YEOO
/9l5Xd1OBBgNXnkV0o4t/rG0+L0tOKGs903Uog1hVeuXmpBzHXTpMBY8SIO3
vFnZRcNWtJq2Mnc+7oIZt1asaUsr0tfKHvXgZSJ3/TFRc3U2XPSYiCd+6XlW
n2xJeRt85vTfyiY6eePTFP99hUx0UMEc5jAhXrWmjnOaBbvKbY4BXX3Q9XLa
IXeGjbI2fuGHCs3on651UkvsQf2NuFF54kvPJNipnaC1YFrZadnI/X4syT2q
a5vDBqisFuE9NMhWmu5r/NQHR+mw1zrObIzNOj6Qs78ZWrcy3scLsXEAvf6K
Czrh+Jx+f8aGDghyu3XmGnLh7bPeXmZBN9pHf/5piCd+fY3WpA+tEe9thn0z
nIiuFnv9W+4o8ZXfok4udm7E1c8K9+N3MFBwZ0x7mvjET6vszcVWl6NHSGmJ
Np0G1qErQbXk3eSq1MYcWF6DGTdogT806Th/r1ZzF6cL+Wt2Ga3jqYSU97a+
R4ea0Zi/p/eGUhcuavRNdq6rxNe8wXoLp2bce3hfchfRY8kCmQe6zMphe3n7
G0eiu757OjQKE91V/tTusvOvamzbbu+3jOgltTeFg5VtXRCtGfRZ5VqK6YVF
FxYvJbqrdTxAaRkbEUeXf38YUo6x3BqdkS80JC9XeOxPdJ18VJ3o1iWfUeHg
vUchkobn4e/4XweS+zyvx+d1bBmc5VzWriW6rnyXwhUbouuuFtf420SVotvr
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
RsyDw8vf7WQMbCcLYldtf2C9+lniV1Lg/2hw/EI//DsGFFsMoAcqt6yUSqfu
v3HZ6wYjf5p3I3ss5q/t7r8W6Ji/rNdKD+VCh7Tm9VxzTegmSh7VOg3roNtz
v9CLMe9uUjrwix11qC2Z+LoDcR4eGM/4gjgzt9/TXaFDVLoVNNKAAx5Tqhss
gQNHTtcHCiB+35zz2xzE3yoQc5v6/crhaq7hUeq+itGz++aY6y/WclcUAm+5
bRk+ngWe+0hPD/AD5x8Ws0guvkojHGwdPXawO5cE21HnDPnOu//OA+dVi9/t
u4c6XPtrY+tLfR+97YCzWlA70XQ/tqXMZoIEd1VvHUe/BzMOBLkF0MjXfTkB
1O8hG3UzI+yA2xE9o/7+/u0kuazmdTvey6+bY/ceg6eUtYT/xoNP/5+Xl42+
PXm8Y4w0th3jz/rnO3TDvZst2qAH+vKOTcv9owdMtuipPoJ+eLfDSEn3H/0g
tsXVKRH+FjsSrzQbYw5gvyzVDn4ZVosQS/o4QsxUmiy9StHXf45db8E8W67e
HyGJfq4tlXv3BvgTeZ8cTQRuy35qeSyH97vKWO+LI3D7bnjytDvsEYcFNkhQ
9xDW72eLh72Smx7tjH1h5lq3s5C6pxGWR+vAvmgt65zZgv1uwxK23ht67KZH
+qaZe83koA7tTix13/WQxJF46MCwc+ztZdDb1V8TaJzYj7T8IWMt7MdwvgHW
OQr3Mqulte52k1klW/6NmNMdROLm41ZR+0Jvl/ntbsLYqJ7Fj/c+bVWqbob9
Xnwl7Is7+tlUboC3g/odsmlGWB39ybuwmD8Tz9Vleub2GM8NslitnIHnHlFd
PPi/e1PvXNyDsF+iGHpP9GO/KBGWJUHADVPbIzKCwI3U743iciL//T9GrOom
/VrUv5/Gs+vBP/W/fKrGyh/6Ktalu5j8c08+5pz3q8M90G9Bedc+/HNv/2Xg
yS17hseIcH9bgdORPrLqt1MUAY79meZ9ZITn7v3+YPk81vVxWF33Kfpzkd0a
v2foz/LEfonr0Cc79lscqIP989HeaRbM8UEvReeMrtHIis+yvNT5/t8Ou2+5
6P/aIi1T6ny/gV1mP3U+1aVmdmEt+vnPMKvfQezr84Pu5hLAmbE+qY0D0Gku
J5fqZkKnXXoo0OwCnTOrkKlVAJ0jf0A+2w96qSR0QXwa9jwO+3tfgN+xeaHq
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
Pw==
     "]], {}, {}},
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{347.92140789702154`, 382.71387635137444`},
  ImageSizeRaw->Automatic,
  Lighting->{{"Ambient", 
     GrayLevel[0.6]}, {"Directional", 
     GrayLevel[0.25], 
     ImageScaled[{2, 0, 2}]}, {"Directional", 
     GrayLevel[0.25], 
     ImageScaled[{2, 2, 2}]}, {"Directional", 
     GrayLevel[0.25], 
     ImageScaled[{0, 2, 2}]}},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-2, 2}, {-2, 2}, {-2, 2}},
  PlotRangePadding->Scaled[0.02],
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.1052766467715247`, -1.5327776279610335`, 2.1606487414155486`},
  
  ViewVertical->{
   0.9936301439943718, -0.06738676954512011, -0.09032253448612299}]], "Output",\

 CellLabel->"Out[71]=",ExpressionUUID->"0c64e580-631a-47a2-b98a-0f9e028c61a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "transform4pt5a", "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"be", " ", "careful", " ", "further", " ", "down"}], " ", "-", 
    " ", 
    RowBox[{"is", " ", "\[Eta]", " ", "a", " ", "function", " ", "of", " ", 
     RowBox[{"t", "?"}]}]}], " ", "*)"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"transform4pt5a", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Sin", "[", "\[Eta]", "]"}], "\[Equal]", " ", 
   RowBox[{"Sech", "[", 
    FractionBox["t", "a"], "]"}], " "}]}]}], "Input",
 CellLabel->"In[72]:=",ExpressionUUID->"30321cf8-10ad-4616-a242-a4b66aa8f18b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sin", "[", "\[Eta]", "]"}], "\[Equal]", 
  RowBox[{"Sech", "[", 
   FractionBox["t", "a"], "]"}]}]], "Output",
 CellLabel->"Out[73]=",ExpressionUUID->"9a46394e-706e-452e-8748-ee1f5fecad82"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "transform4pt5", "]"}], "\[IndentingNewLine]", 
 RowBox[{"transform4pt5", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", " ", 
     RowBox[{"transform4pt5a", " ", ",", " ", "t"}], " ", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], "  ", "/.", " ", 
   RowBox[{
    RowBox[{"C", "[", "1", "]"}], "\[Rule]", " ", "0", " "}]}]}]}], "Input",
 CellLabel->"In[74]:=",ExpressionUUID->"9546f9c4-6f1b-41f0-adcb-ffe57f2e064e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", "\[Rule]", 
   RowBox[{"a", " ", 
    RowBox[{"ArcCosh", "[", 
     RowBox[{"Csc", "[", "\[Eta]", "]"}], "]"}]}]}], "}"}]], "Output",
 CellLabel->"Out[75]=",ExpressionUUID->"05bab1ce-9fae-4338-ba92-a04c5e989002"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"If", " ", "needed"}], " ", "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"Solve", "[", " ", 
      RowBox[{"transform4pt5a", " ", ",", " ", "\[Eta]"}], " ", "]"}], "]"}], 
    "[", 
    RowBox[{"[", "2", "]"}], "]"}], "  ", "/.", " ", 
   RowBox[{
    RowBox[{"C", "[", "1", "]"}], "\[Rule]", " ", "0", " "}]}]}]], "Input",
 CellLabel->"In[76]:=",ExpressionUUID->"877f2e35-a382-44ea-8d53-b20c2e911ed5"],

Cell[BoxData[
 RowBox[{"\[Eta]", "\[Rule]", 
  RowBox[{"ArcSin", "[", 
   RowBox[{"Sech", "[", 
    FractionBox["t", "a"], "]"}], "]"}]}]], "Output",
 CellLabel->"Out[76]=",ExpressionUUID->"7a28abf3-e500-4fff-bc75-4530a76917b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dt", "[", " ", "transform4pt5", " ", "]"}], "  ", "/.", " ", 
  "dtReplace"}]], "Input",
 CellLabel->"In[77]:=",ExpressionUUID->"20ae3b57-1582-48c6-8469-6cc05e5428f3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"dt", "\[Rule]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"a", " ", "d\[Eta]", " ", 
      RowBox[{"Cot", "[", "\[Eta]", "]"}], " ", 
      RowBox[{"Csc", "[", "\[Eta]", "]"}]}], 
     RowBox[{
      SqrtBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"Csc", "[", "\[Eta]", "]"}]}]], " ", 
      SqrtBox[
       RowBox[{"1", "+", 
        RowBox[{"Csc", "[", "\[Eta]", "]"}]}]]}]]}]}], "}"}]], "Output",
 CellLabel->"Out[77]=",ExpressionUUID->"64d6b940-d3eb-4cbc-81ca-7abbda131079"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "The", " ", "long", " ", "way", " ", "just", " ", "to", " ", "see", " ", 
    "if", " ", "it", " ", "works"}], " ", "*)"}], " ", "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"Dt", "[", " ", "transform4pt3", " ", "]"}], "/.", " ", 
      "dtReplace"}], "    ", ")"}], " ", "/.", 
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"Dt", "[", " ", "transform4pt5", " ", "]"}], "  ", "/.", " ", 
      "dtReplace"}], " ", ")"}]}], "  ", "//", " ", "TableForm"}]}]], "Input",\

 CellLabel->"In[78]:=",ExpressionUUID->"95c0ea7a-1759-4f5a-822f-58c58b6ae624"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       SubscriptBox["dZ", "0"], "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"a", " ", "d\[Eta]", " ", 
          RowBox[{"Cosh", "[", 
           FractionBox["t", "a"], "]"}], " ", 
          RowBox[{"Cot", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"Csc", "[", "\[Eta]", "]"}]}], 
         RowBox[{
          SqrtBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Csc", "[", "\[Eta]", "]"}]}]], " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"Csc", "[", "\[Eta]", "]"}]}]]}]]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "1"], "\[Rule]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "a"}], " ", "d\[Chi]", " ", 
         RowBox[{"Cosh", "[", 
          FractionBox["t", "a"], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Chi]", "]"}]}], "-", 
        FractionBox[
         RowBox[{"a", " ", "d\[Eta]", " ", 
          RowBox[{"Cos", "[", "\[Chi]", "]"}], " ", 
          RowBox[{"Cot", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"Csc", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"Sinh", "[", 
           FractionBox["t", "a"], "]"}]}], 
         RowBox[{
          SqrtBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Csc", "[", "\[Eta]", "]"}]}]], " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"Csc", "[", "\[Eta]", "]"}]}]]}]]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "2"], "\[Rule]", 
       RowBox[{
        RowBox[{"a", " ", "d\[Chi]", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Chi]", "]"}], " ", 
         RowBox[{"Cosh", "[", 
          FractionBox["t", "a"], "]"}]}], "-", 
        RowBox[{"a", " ", "d\[Theta]", " ", 
         RowBox[{"Cosh", "[", 
          FractionBox["t", "a"], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Chi]", "]"}]}], "-", 
        FractionBox[
         RowBox[{"a", " ", "d\[Eta]", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Cot", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"Csc", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Chi]", "]"}], " ", 
          RowBox[{"Sinh", "[", 
           FractionBox["t", "a"], "]"}]}], 
         RowBox[{
          SqrtBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Csc", "[", "\[Eta]", "]"}]}]], " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"Csc", "[", "\[Eta]", "]"}]}]]}]]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "3"], "\[Rule]", 
       RowBox[{
        RowBox[{"a", " ", "d\[Chi]", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Chi]", "]"}], " ", 
         RowBox[{"Cosh", "[", 
          FractionBox["t", "a"], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"a", " ", "d\[Theta]", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Cosh", "[", 
          FractionBox["t", "a"], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Chi]", "]"}]}], "-", 
        RowBox[{"a", " ", "d\[Phi]", " ", 
         RowBox[{"Cosh", "[", 
          FractionBox["t", "a"], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Chi]", "]"}]}], "-", 
        FractionBox[
         RowBox[{"a", " ", "d\[Eta]", " ", 
          RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
          RowBox[{"Cot", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"Csc", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Chi]", "]"}], " ", 
          RowBox[{"Sinh", "[", 
           FractionBox["t", "a"], "]"}]}], 
         RowBox[{
          SqrtBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Csc", "[", "\[Eta]", "]"}]}]], " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"Csc", "[", "\[Eta]", "]"}]}]]}]]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "4"], "\[Rule]", 
       RowBox[{
        RowBox[{"a", " ", "d\[Chi]", " ", 
         RowBox[{"Cos", "[", "\[Chi]", "]"}], " ", 
         RowBox[{"Cosh", "[", 
          FractionBox["t", "a"], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
        RowBox[{"a", " ", "d\[Phi]", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Cosh", "[", 
          FractionBox["t", "a"], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Chi]", "]"}]}], "+", 
        RowBox[{"a", " ", "d\[Theta]", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cosh", "[", 
          FractionBox["t", "a"], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Chi]", "]"}]}], "-", 
        FractionBox[
         RowBox[{"a", " ", "d\[Eta]", " ", 
          RowBox[{"Cot", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"Csc", "[", "\[Eta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Chi]", "]"}], " ", 
          RowBox[{"Sinh", "[", 
           FractionBox["t", "a"], "]"}]}], 
         RowBox[{
          SqrtBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Csc", "[", "\[Eta]", "]"}]}]], " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"Csc", "[", "\[Eta]", "]"}]}]]}]]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[78]//TableForm=",ExpressionUUID->"7ab2c3fa-28d9-4e62-922b-\
d8b0d8863ee7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", " ", 
    RowBox[{
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{"Dt", "[", " ", "transform4pt3", " ", "]"}], "/.", " ", 
         "dtReplace"}], "    ", ")"}], " ", "/.", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{"Dt", "[", " ", "transform4pt5", " ", "]"}], "  ", "/.", " ",
          "dtReplace"}], " ", ")"}]}], "  ", ")"}], " ", "/.", " ", 
     "transform4pt5"}], " ", ")"}], "  ", "//", " ", "Simplify"}], " ", "//", 
  " ", "TableForm"}]], "Input",
 CellLabel->"In[79]:=",ExpressionUUID->"f7af6979-1cbf-4b55-b052-670372c12db5"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       SubscriptBox["dZ", "0"], "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"a", " ", "d\[Eta]", " ", 
          RowBox[{"Cot", "[", "\[Eta]", "]"}], " ", 
          SuperscriptBox[
           RowBox[{"Csc", "[", "\[Eta]", "]"}], "2"]}], 
         RowBox[{
          SqrtBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Csc", "[", "\[Eta]", "]"}]}]], " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"Csc", "[", "\[Eta]", "]"}]}]]}]]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "1"], "\[Rule]", 
       RowBox[{
        RowBox[{"-", "a"}], " ", 
        RowBox[{"Csc", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"d\[Eta]", " ", 
           RowBox[{"Cos", "[", "\[Chi]", "]"}], " ", 
           RowBox[{"Cot", "[", "\[Eta]", "]"}]}], "+", 
          RowBox[{"d\[Chi]", " ", 
           RowBox[{"Sin", "[", "\[Chi]", "]"}]}]}], ")"}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "2"], "\[Rule]", 
       RowBox[{
        RowBox[{"-", "a"}], " ", 
        RowBox[{"Csc", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"d\[Theta]", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Chi]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "d\[Chi]"}], " ", 
              RowBox[{"Cos", "[", "\[Chi]", "]"}]}], "+", 
             RowBox[{"d\[Eta]", " ", 
              RowBox[{"Cot", "[", "\[Eta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Chi]", "]"}]}]}], ")"}]}]}], ")"}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "3"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Csc", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "d\[Phi]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Chi]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"d\[Chi]", " ", 
              RowBox[{"Cos", "[", "\[Chi]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"d\[Theta]", " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
                RowBox[{"d\[Eta]", " ", 
                 RowBox[{"Cot", "[", "\[Eta]", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}], " ", 
              RowBox[{"Sin", "[", "\[Chi]", "]"}]}]}], ")"}]}]}], ")"}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "4"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Csc", "[", "\[Eta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"d\[Chi]", " ", 
           RowBox[{"Cos", "[", "\[Chi]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"d\[Phi]", " ", 
              RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"d\[Theta]", " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
                RowBox[{"d\[Eta]", " ", 
                 RowBox[{"Cot", "[", "\[Eta]", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}], " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Chi]", "]"}]}]}], ")"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[79]//TableForm=",ExpressionUUID->"aea74e25-1397-4388-aa5e-\
7063e64b66b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "lineElement4pt6", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"be", " ", "careful", " ", "here"}], " ", "-", " ", 
    RowBox[{"is", " ", "\[Eta]", " ", "a", " ", "function", " ", "of", " ", 
     RowBox[{"t", "?"}]}]}], " ", "*)"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"lineElement4pt6", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Collect", "[", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"lineElement", " ", "/.", " ", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"Dt", "[", " ", "transform4pt3", " ", "]"}], "/.", " ", 
             "dtReplace"}], "    ", ")"}], " ", "/.", 
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"Dt", "[", " ", "transform4pt5", " ", "]"}], "  ", "/.", 
             " ", "dtReplace"}], " ", ")"}]}], "  ", ")"}], " ", "/.", " ", 
         "transform4pt5"}], " ", ")"}]}], "  ", "//", " ", "Simplify"}], " ", 
     ",", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       SuperscriptBox["d\[Eta]", "2"], ",", " ", 
       SuperscriptBox["d\[Chi]", "2"], ",", " ", 
       SuperscriptBox["d\[Theta]", "2"], ",", " ", 
       SuperscriptBox["d\[Phi]", "2"]}], " ", "}"}]}], " ", "]"}], "  ", "//",
    " ", "Simplify", "  "}]}]}], "Input",
 CellLabel->"In[80]:=",ExpressionUUID->"ea48e2f8-e741-49c7-8c95-e52c1c7ba659"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["a", "2"], " ", 
  SuperscriptBox[
   RowBox[{"Csc", "[", "\[Eta]", "]"}], "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["d\[Eta]", "2"]}], "+", 
    SuperscriptBox["d\[Chi]", "2"], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["d\[Theta]", "2"], "+", 
       RowBox[{
        SuperscriptBox["d\[Phi]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Chi]", "]"}], "2"]}]}], ")"}]}]], "Output",
 CellLabel->"Out[81]=",ExpressionUUID->"e7cd2914-809d-47b2-8f0e-0ce3b49e2546"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"The", " ", "faster", " ", "way"}], ",", " ", 
    RowBox[{
    "just", " ", "see", " ", "check", " ", "if", " ", "both", " ", "ways", 
     " ", "work"}], "  ", ",", " ", 
    RowBox[{"agrees", " ", "with", " ", "above"}]}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"lineElement4pt4", "  ", "/.", " ", "transform4pt5"}], "   ", "/.",
     " ", 
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"Dt", "[", " ", "transform4pt5", " ", "]"}], "  ", "/.", " ", 
      "dtReplace"}], " ", ")"}]}], "  ", "//", " ", "Simplify", 
   " "}]}]], "Input",
 CellLabel->"In[82]:=",ExpressionUUID->"bc6bc407-2faa-4363-ba33-f57ac6747ecd"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["a", "2"], " ", 
  SuperscriptBox[
   RowBox[{"Csc", "[", "\[Eta]", "]"}], "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["d\[Eta]", "2"]}], "+", 
    SuperscriptBox["d\[Chi]", "2"], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["d\[Theta]", "2"], "+", 
       RowBox[{
        SuperscriptBox["d\[Phi]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Chi]", "]"}], "2"]}]}], ")"}]}]], "Output",
 CellLabel->"Out[82]=",ExpressionUUID->"9f488f5d-6aed-4e70-ae60-8a6e3a563f06"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric4pt6", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric4pt6", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"lineToMetric", "[", " ", 
    RowBox[{"lineElement4pt6", " ", ",", " ", 
     RowBox[{"{", " ", 
      RowBox[{
      "d\[Eta]", " ", ",", " ", "d\[Chi]", " ", ",", " ", "d\[Theta]", ",", 
       " ", "d\[Phi]"}], " ", "}"}]}], " ", "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"metric4pt6", " ", "//", " ", "MatrixForm"}]}], "Input",
 CellLabel->"In[83]:=",ExpressionUUID->"d3b02c67-c29b-4c2f-8a85-fc401569834a"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["a", "2"]}], " ", 
       SuperscriptBox[
        RowBox[{"Csc", "[", "\[Eta]", "]"}], "2"]}], "0", "0", "0"},
     {"0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Csc", "[", "\[Eta]", "]"}], "2"]}], "0", "0"},
     {"0", "0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Csc", "[", "\[Eta]", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Chi]", "]"}], "2"]}], "0"},
     {"0", "0", "0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Csc", "[", "\[Eta]", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Chi]", "]"}], "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[85]//MatrixForm=",ExpressionUUID->"af4a2ba9-f530-414f-a87b-\
73bad62fb076"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "inverse4pt6", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inverse4pt6", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"Inverse", "[", "metric4pt6", "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"inverse4pt6", " ", "//", " ", "MatrixForm"}]}], "Input",
 CellLabel->
  "In[396]:=",ExpressionUUID->"eb0af2f1-2413-4cbd-8ae1-84031b1266a6"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Eta]", "]"}], "2"], 
        SuperscriptBox["a", "2"]]}], "0", "0", "0"},
     {"0", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Eta]", "]"}], "2"], 
       SuperscriptBox["a", "2"]], "0", "0"},
     {"0", "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Csc", "[", "\[Chi]", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Eta]", "]"}], "2"]}], 
       SuperscriptBox["a", "2"]], "0"},
     {"0", "0", "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"Csc", "[", "\[Chi]", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Eta]", "]"}], "2"]}], 
       SuperscriptBox["a", "2"]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[398]//MatrixForm=",ExpressionUUID->"8f50e9b1-b544-41c5-a854-\
709d49ea83e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"input", "[", " ", 
   RowBox[{
   "\"\<metric4pt6\>\"", ",", " ", "metric4pt6", ",", " ", "\"\<4pt6\>\"", 
    ",", "\"\<\!\(\*SuperscriptBox[\(g\), \(dS4pt6\)]\)\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\[Eta]", ",", "\[Chi]", ",", "\[Theta]", ",", "\[Phi]"}], "}"}],
     ",", " ", "\"\<Greek\>\""}], "]"}], " ", "//", " ", "Timing"}]], "Input",\

 CellLabel->
  "In[354]:=",ExpressionUUID->"4b300413-20b8-4cc1-986d-7bd9ad45eafc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.975092`", ",", "Null"}], "}"}]], "Output",
 CellLabel->
  "Out[354]=",ExpressionUUID->"69391797-7e1f-4f9d-9bf1-d2e7e98bfb9f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]], "Input",
 CellLabel->
  "In[356]:=",ExpressionUUID->"5a580357-f96a-4786-8bd9-a92a6563ed7e"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["a", "2"]}], " ", 
        RowBox[{
         SuperscriptBox["csc", "2"], "(", "\[Eta]", ")"}]}], "0", "0", "0"},
      {"0", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        RowBox[{
         SuperscriptBox["csc", "2"], "(", "\[Eta]", ")"}]}], "0", "0"},
      {"0", "0", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        RowBox[{
         SuperscriptBox["csc", "2"], "(", "\[Eta]", ")"}], " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}]}], "0"},
      {"0", "0", "0", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        RowBox[{
         SuperscriptBox["csc", "2"], "(", "\[Eta]", ")"}], " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellLabel->
  "Out[356]//TraditionalForm=",ExpressionUUID->"3b45832f-d177-43ab-9722-\
1275b356d6ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]], "Input",
 CellLabel->
  "In[357]:=",ExpressionUUID->"6eafec17-010c-471a-9a27-afb21004bd75"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{"-", 
             RowBox[{"cot", "(", "\[Eta]", ")"}]}]},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {
            RowBox[{"-", 
             RowBox[{"cot", "(", "\[Eta]", ")"}]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{
             RowBox[{"-", 
              RowBox[{"cot", "(", "\[Eta]", ")"}]}], " ", 
             RowBox[{
              SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{
             RowBox[{"-", 
              RowBox[{"cot", "(", "\[Eta]", ")"}]}], " ", 
             RowBox[{
              SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
             RowBox[{
              SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {
            RowBox[{"-", 
             RowBox[{"cot", "(", "\[Eta]", ")"}]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{"-", 
             RowBox[{"cot", "(", "\[Eta]", ")"}]}]},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{
             RowBox[{"sin", "(", "\[Chi]", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"-", 
               RowBox[{"cos", "(", "\[Chi]", ")"}]}], ")"}]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{
             RowBox[{
              SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
             RowBox[{"sin", "(", "\[Chi]", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"-", 
               RowBox[{"cos", "(", "\[Chi]", ")"}]}], ")"}]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{"-", 
             RowBox[{"cot", "(", "\[Eta]", ")"}]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{"cot", "(", "\[Chi]", ")"}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{"-", 
             RowBox[{"cot", "(", "\[Eta]", ")"}]}]},
           {
            RowBox[{"cot", "(", "\[Chi]", ")"}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{
             RowBox[{"sin", "(", "\[Theta]", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"-", 
               RowBox[{"cos", "(", "\[Theta]", ")"}]}], ")"}]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{"-", 
             RowBox[{"cot", "(", "\[Eta]", ")"}]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{"cot", "(", "\[Chi]", ")"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{"cot", "(", "\[Theta]", ")"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{"-", 
             RowBox[{"cot", "(", "\[Eta]", ")"}]}]},
           {
            RowBox[{"cot", "(", "\[Chi]", ")"}]},
           {
            RowBox[{"cot", "(", "\[Theta]", ")"}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellLabel->
  "Out[357]//TraditionalForm=",ExpressionUUID->"2ad68ec6-2e0f-4f90-95ae-\
25d5fd325764"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]], "Input",
 CellLabel->
  "In[358]:=",ExpressionUUID->"a18c288d-ed40-4120-95f1-ac3080a9f8c4"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["a", "2"]}], " ", 
            RowBox[{
             SuperscriptBox["csc", "4"], "(", "\[Eta]", ")"}]}], "0", "0"},
          {
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{
             SuperscriptBox["csc", "4"], "(", "\[Eta]", ")"}]}], "0", "0", 
           "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["a", "2"]}], " ", 
            RowBox[{
             SuperscriptBox["csc", "4"], "(", "\[Eta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}]}], "0"},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{
             SuperscriptBox["csc", "4"], "(", "\[Eta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}]}], "0", "0", 
           "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["a", "2"]}], " ", 
            RowBox[{
             SuperscriptBox["csc", "4"], "(", "\[Eta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}]}]},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{
             SuperscriptBox["csc", "4"], "(", "\[Eta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}]}], "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{
             SuperscriptBox["csc", "4"], "(", "\[Eta]", ")"}]}], "0", "0"},
          {
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["a", "2"]}], " ", 
            RowBox[{
             SuperscriptBox["csc", "4"], "(", "\[Eta]", ")"}]}], "0", "0", 
           "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{
             SuperscriptBox["csc", "4"], "(", "\[Eta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}]}], "0"},
          {"0", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["a", "2"]}], " ", 
            RowBox[{
             SuperscriptBox["csc", "4"], "(", "\[Eta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{
             SuperscriptBox["csc", "4"], "(", "\[Eta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}]}]},
          {"0", "0", "0", "0"},
          {"0", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["a", "2"]}], " ", 
            RowBox[{
             SuperscriptBox["csc", "4"], "(", "\[Eta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{
             SuperscriptBox["csc", "4"], "(", "\[Eta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}]}], "0"},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["a", "2"]}], " ", 
            RowBox[{
             SuperscriptBox["csc", "4"], "(", "\[Eta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}]}], "0", "0", 
           "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["a", "2"]}], " ", 
            RowBox[{
             SuperscriptBox["csc", "4"], "(", "\[Eta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}]}], "0"},
          {"0", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{
             SuperscriptBox["csc", "4"], "(", "\[Eta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{
             SuperscriptBox["csc", "4"], "(", "\[Eta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "4"], "(", "\[Chi]", ")"}]}]},
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["a", "2"]}], " ", 
            RowBox[{
             SuperscriptBox["csc", "4"], "(", "\[Eta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "4"], "(", "\[Chi]", ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{
             SuperscriptBox["csc", "4"], "(", "\[Eta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}]}]},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["a", "2"]}], " ", 
            RowBox[{
             SuperscriptBox["csc", "4"], "(", "\[Eta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}]}], "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["a", "2"]}], " ", 
            RowBox[{
             SuperscriptBox["csc", "4"], "(", "\[Eta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}]}]},
          {"0", "0", "0", "0"},
          {"0", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{
             SuperscriptBox["csc", "4"], "(", "\[Eta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["a", "2"]}], " ", 
            RowBox[{
             SuperscriptBox["csc", "4"], "(", "\[Eta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "4"], "(", "\[Chi]", ")"}]}]},
          {"0", "0", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{
             SuperscriptBox["csc", "4"], "(", "\[Eta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{
             SuperscriptBox["sin", "4"], "(", "\[Chi]", ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellLabel->
  "Out[358]//TraditionalForm=",ExpressionUUID->"0fc878bc-b6ed-4776-b065-\
5232d43f343f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]], "Input",
 CellLabel->
  "In[359]:=",ExpressionUUID->"a2453146-8ea0-4dd6-9028-a291c30b01fc"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        RowBox[{
         SuperscriptBox["csc", "2"], "(", "\[Eta]", ")"}]}], "0", "0", "0"},
      {"0", 
       RowBox[{"3", " ", 
        RowBox[{
         SuperscriptBox["csc", "2"], "(", "\[Eta]", ")"}]}], "0", "0"},
      {"0", "0", 
       RowBox[{"3", " ", 
        RowBox[{
         SuperscriptBox["csc", "2"], "(", "\[Eta]", ")"}], " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}]}], "0"},
      {"0", "0", "0", 
       RowBox[{"3", " ", 
        RowBox[{
         SuperscriptBox["csc", "2"], "(", "\[Eta]", ")"}], " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellLabel->
  "Out[359]//TraditionalForm=",ExpressionUUID->"838bd0b7-4c12-4a5d-b0b8-\
41aecdbfbeb6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "5", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]], "Input",
 CellLabel->
  "In[360]:=",ExpressionUUID->"d831402a-9bdc-46f8-941a-d4d9d719e1a2"],

Cell[BoxData[
 FormBox[
  TagBox[
   FractionBox["12", 
    SuperscriptBox["a", "2"]],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellLabel->
  "Out[360]//TraditionalForm=",ExpressionUUID->"22cff04a-c7b4-448a-bc98-\
66d81fe0eeb8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "6", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]], "Input",
 CellLabel->
  "In[361]:=",ExpressionUUID->"169d3297-ce1f-4848-80df-6206c4e83532"],

Cell[BoxData[
 FormBox[
  TagBox[
   FractionBox["24", 
    SuperscriptBox["a", "4"]],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellLabel->
  "Out[361]//TraditionalForm=",ExpressionUUID->"90c2bbbb-bc52-4fb1-afd4-\
b9cb529c4fa1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "7", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]], "Input",
 CellLabel->
  "In[362]:=",ExpressionUUID->"c3d65d7c-0eb8-4636-a900-c7f9115dfe93"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"3", " ", 
        RowBox[{
         SuperscriptBox["csc", "2"], "(", "\[Eta]", ")"}]}], "0", "0", "0"},
      {"0", 
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        RowBox[{
         SuperscriptBox["csc", "2"], "(", "\[Eta]", ")"}]}], "0", "0"},
      {"0", "0", 
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        RowBox[{
         SuperscriptBox["csc", "2"], "(", "\[Eta]", ")"}], " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}]}], "0"},
      {"0", "0", "0", 
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        RowBox[{
         SuperscriptBox["csc", "2"], "(", "\[Eta]", ")"}], " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", "\[Chi]", ")"}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellLabel->
  "Out[362]//TraditionalForm=",ExpressionUUID->"9bd82ad4-874c-405d-a5b8-\
986cf15398b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "8", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]], "Input",
 CellLabel->
  "In[363]:=",ExpressionUUID->"8117f5b6-71ca-49d5-9eb2-2bde3e106c39"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellLabel->
  "Out[363]//TraditionalForm=",ExpressionUUID->"20481317-b43c-4df7-a9b4-\
26a001514329"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "9", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]], "Input",
 CellLabel->
  "In[364]:=",ExpressionUUID->"3442bffc-9f91-4892-bdfa-58585b6f4ec8"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellLabel->
  "Out[364]//TraditionalForm=",ExpressionUUID->"ef5a4a7a-1564-47bf-9340-\
2d4f2edb7b91"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "\[ScriptL]", "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"\[ScriptL]", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    FractionBox["1", 
     SqrtBox["2"]], ")"}], "*", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"PowerExpand", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"-", 
        RowBox[{"metric4pt6", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], " ", ",", 
     RowBox[{"PowerExpand", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"metric4pt6", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}], "]"}], " ", ",", "0", 
     ",", "0"}], "}"}]}]}]}], "Input",
 CellLabel->
  "In[365]:=",ExpressionUUID->"def7b381-5fcc-47ec-9178-2e4ab7836d49"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"a", " ", 
     RowBox[{"Csc", "[", "\[Eta]", "]"}]}], 
    SqrtBox["2"]], ",", 
   FractionBox[
    RowBox[{"a", " ", 
     RowBox[{"Csc", "[", "\[Eta]", "]"}]}], 
    SqrtBox["2"]], ",", "0", ",", "0"}], "}"}]], "Output",
 CellLabel->
  "Out[366]=",ExpressionUUID->"245a10d0-6e62-4390-ab46-4c4f1eac6f98"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[ScriptN]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[ScriptN]", " ", "=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    FractionBox["1", 
     SqrtBox["2"]], ")"}], "*", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"PowerExpand", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"-", 
        RowBox[{"metric4pt6", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], " ", ",", 
     " ", 
     RowBox[{"-", 
      RowBox[{"PowerExpand", "[", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"metric4pt6", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], " ", ",", 
     "0", ",", "0"}], "}"}]}]}]}], "Input",
 CellLabel->
  "In[367]:=",ExpressionUUID->"283e542a-bde8-423c-b97e-4dd1271aac33"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"a", " ", 
     RowBox[{"Csc", "[", "\[Eta]", "]"}]}], 
    SqrtBox["2"]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"a", " ", 
      RowBox[{"Csc", "[", "\[Eta]", "]"}]}], 
     SqrtBox["2"]]}], ",", "0", ",", "0"}], "}"}]], "Output",
 CellLabel->
  "Out[368]=",ExpressionUUID->"54af2cec-ddf3-4c2c-bec9-128256b5cce2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[ScriptM]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[ScriptM]", " ", "=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    FractionBox["1", 
     SqrtBox["2"]], ")"}], "*", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", " ", 
     RowBox[{"PowerExpand", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"metric4pt6", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "3"}], "]"}], "]"}], "]"}], "]"}], " ", ",", " ", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"PowerExpand", "[", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"metric4pt6", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "4"}], "]"}], "]"}], "]"}], "]"}]}]}], " ", 
    "}"}]}]}]}], "Input",
 CellLabel->
  "In[369]:=",ExpressionUUID->"8b523909-6e75-4f4b-85f0-c1bfcd32fc48"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", 
   FractionBox[
    RowBox[{"a", " ", 
     RowBox[{"Csc", "[", "\[Eta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Chi]", "]"}]}], 
    SqrtBox["2"]], ",", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", "a", " ", 
     RowBox[{"Csc", "[", "\[Eta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Chi]", "]"}]}], 
    SqrtBox["2"]]}], "}"}]], "Output",
 CellLabel->
  "Out[370]=",ExpressionUUID->"eec5db94-be18-43b1-9a2f-b8c71e3ae2ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[ScriptM]bar", "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[ScriptM]bar", " ", "=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    FractionBox["1", 
     SqrtBox["2"]], ")"}], "*", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", " ", 
     RowBox[{"PowerExpand", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"metric4pt6", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "3"}], "]"}], "]"}], "]"}], "]"}], " ", ",", " ", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      RowBox[{"PowerExpand", "[", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"metric4pt6", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "4"}], "]"}], "]"}], "]"}], "]"}]}]}], " ", 
    "}"}]}]}]}], "Input",
 CellLabel->
  "In[371]:=",ExpressionUUID->"efaa9cdf-c094-4968-804e-11d8fbac10b8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", 
   FractionBox[
    RowBox[{"a", " ", 
     RowBox[{"Csc", "[", "\[Eta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Chi]", "]"}]}], 
    SqrtBox["2"]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "a", " ", 
      RowBox[{"Csc", "[", "\[Eta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Chi]", "]"}]}], 
     SqrtBox["2"]]}]}], "}"}]], "Output",
 CellLabel->
  "Out[372]=",ExpressionUUID->"66528614-567f-4cd4-b5f9-6fec3d05db57"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "ALWAYS", " ", "ALWAYS", " ", "ALWAYS", " ", "CHECK", " ", "IF", " ", 
    "INDICES", " ", "ARE", " ", "UP", " ", "OR", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"DOWN", " ", "!!"}], "!!"}], "!"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"l", " ", "=", " ", 
    RowBox[{"ToTensor", "[", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<NewTensor\>\"", " ", ",", " ", "\"\<l\>\""}], "}"}], " ", 
      ",", " ", 
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", "\[ScriptL]", " ", ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{"-", "\[Mu]"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"n", " ", "=", " ", 
    RowBox[{"ToTensor", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<NewTensor\>\"", " ", ",", " ", "\"\<n\>\""}], " ", "}"}], 
      " ", ",", " ", 
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", "\[ScriptN]", " ", ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{"-", "\[Mu]"}], "}"}]}], " ", "]"}]}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"m", " ", "=", " ", 
    RowBox[{"ToTensor", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<NewTensor\>\"", " ", ",", " ", "\"\<m\>\""}], " ", "}"}], 
      " ", ",", " ", 
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", "\[ScriptM]", " ", ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{"-", "\[Mu]"}], "}"}]}], " ", "]"}]}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"mbar", " ", "=", " ", 
    RowBox[{"ToTensor", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<NewTensor\>\"", " ", ",", " ", "\"\<mbar\>\""}], " ", 
       "}"}], " ", ",", " ", 
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", "\[ScriptM]bar", " ", 
      ",", " ", 
      RowBox[{"{", 
       RowBox[{"-", "\[Mu]"}], "}"}]}], " ", "]"}], " "}]}]}]], "Input",
 CellLabel->
  "In[373]:=",ExpressionUUID->"76ece8af-ab00-4cd1-91f6-96e5c3825933"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["l", "\[Mu]", ""],
  DisplayForm]], "Output",
 CellLabel->
  "Out[373]=",ExpressionUUID->"b7dc5625-e011-4f2a-8149-b8edf78eea6f"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["n", "\[Mu]", ""],
  DisplayForm]], "Output",
 CellLabel->
  "Out[374]=",ExpressionUUID->"5fce98c7-9a54-4c98-a714-b124b2b7f746"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["m", "\[Mu]", ""],
  DisplayForm]], "Output",
 CellLabel->
  "Out[375]=",ExpressionUUID->"016d111a-ba44-4c10-8b34-f037f85d7d54"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["mbar", "\[Mu]", ""],
  DisplayForm]], "Output",
 CellLabel->
  "Out[376]=",ExpressionUUID->"be005a81-9631-4056-8814-3d8464b876e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"l", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"l", "[", "\[Mu]", "]"}]}], "]"}], "]"}], " ", "\[Equal]", 
     " ", "0"}], "  ", "//", " ", "Expand"}], " ", "//", " ", "Simplify"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"n", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"n", "[", "\[Mu]", "]"}]}], "]"}], " ", "]"}], "\[Equal]", 
     " ", "0"}], "  ", "//", " ", "Expand"}], " ", "//", " ", "Simplify"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"m", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"m", "[", "\[Mu]", "]"}]}], "]"}], "]"}], " ", "\[Equal]", 
     " ", "0"}], "   ", "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"mbar", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"mbar", "[", "\[Mu]", "]"}]}], "]"}], "]"}], " ", "\[Equal]", 
     " ", "0"}], "  ", "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"l", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"n", "[", "\[Mu]", "]"}]}], "]"}], "]"}], " ", "\[Equal]", 
     " ", 
     RowBox[{"-", "1"}]}], "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"l", "[", "\[Mu]", "]"}], 
        RowBox[{"n", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}]}], "]"}], "]"}], " ", "\[Equal]", " ", 
     
     RowBox[{"-", "1"}]}], "  ", "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"m", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"mbar", "[", "\[Mu]", "]"}]}], "]"}], "]"}], " ", "\[Equal]", 
     "  ", "1"}], " ", "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"m", "[", "\[Mu]", "]"}], 
        RowBox[{"mbar", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}]}], "]"}], "]"}], " ", "\[Equal]", "  ",
      "1"}], " ", "//", " ", "Expand"}], " ", "//", " ", "FullSimplify"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "completenessDownIndices", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"completenessDownIndices", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"MergeTensors", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"l", "[", 
        RowBox[{"-", "\[Mu]"}], "]"}]}], 
      RowBox[{"n", "[", 
       RowBox[{"-", "\[Nu]"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"n", "[", 
       RowBox[{"-", "\[Mu]"}], "]"}], 
      RowBox[{"l", "[", 
       RowBox[{"-", "\[Nu]"}], "]"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"m", "[", 
       RowBox[{"-", "\[Mu]"}], "]"}], 
      RowBox[{"mbar", "[", 
       RowBox[{"-", "\[Nu]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"m", "[", 
       RowBox[{"-", "\[Nu]"}], "]"}], 
      RowBox[{"mbar", "[", 
       RowBox[{"-", "\[Mu]"}], "]"}]}]}], "]"}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", " ", "completenessDownIndices", " ", "]"}], 
   "  ", "//", " ", "MatrixForm"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", "metric4pt6", "]"}], " ", "\[Equal]", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", " ", 
       RowBox[{
       "TensorValues", "[", " ", "completenessDownIndices", " ", "]"}], 
       "]"}]}], " ", "]"}], " ", "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "completenessUpIndices", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"completenessUpIndices", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"MergeTensors", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"l", "[", "\[Mu]", "]"}]}], 
      RowBox[{"n", "[", "\[Nu]", "]"}]}], "-", 
     RowBox[{
      RowBox[{"n", "[", "\[Mu]", "]"}], 
      RowBox[{"l", "[", "\[Nu]", "]"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"m", "[", "\[Mu]", "]"}], 
      RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "+", " ", 
     RowBox[{
      RowBox[{"m", "[", "\[Nu]", "]"}], 
      RowBox[{"mbar", "[", "\[Mu]", "]"}]}]}], "]"}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", " ", "completenessUpIndices", " ", "]"}], 
   "  ", "//", " ", "MatrixForm"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", "inverse4pt6", "]"}], " ", "\[Equal]", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Flatten", "[", " ", 
      RowBox[{"TensorValues", "[", " ", "completenessUpIndices", " ", "]"}], 
      "]"}]}], " ", "]"}], "  ", "//", " ", "Expand"}], " ", "//", " ", 
  "FullSimplify", " "}]}], "Input",
 CellLabel->
  "In[399]:=",ExpressionUUID->"0606a3d7-4dbf-4332-9f49-6b225e49be75"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[399]=",ExpressionUUID->"44717bbd-521e-420a-9b15-073b2cce3d0a"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[400]=",ExpressionUUID->"97582438-9c77-4a57-a5d6-bc3bc3071b70"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[401]=",ExpressionUUID->"b28aa091-73f4-49bc-9086-9da80c0e0294"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[402]=",ExpressionUUID->"d20714b5-486c-4023-9fc3-a49cee039e88"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[403]=",ExpressionUUID->"6baad00a-fc98-4c3e-b5a3-cb54ac93017f"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[404]=",ExpressionUUID->"c4009002-e35d-4426-9c19-275da2f863a7"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[405]=",ExpressionUUID->"8f4189c6-bf0e-436a-a6b8-128c5229acbf"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[406]=",ExpressionUUID->"fa2eef58-5415-48b0-b302-b1b07610e702"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["a", "2"]}], " ", 
       SuperscriptBox[
        RowBox[{"Csc", "[", "\[Eta]", "]"}], "2"]}], "0", "0", "0"},
     {"0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Csc", "[", "\[Eta]", "]"}], "2"]}], "0", "0"},
     {"0", "0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Csc", "[", "\[Eta]", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Chi]", "]"}], "2"]}], "0"},
     {"0", "0", "0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Csc", "[", "\[Eta]", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Chi]", "]"}], "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[409]//MatrixForm=",ExpressionUUID->"041e080e-3652-486c-9c25-\
2689cd4e7ae5"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[410]=",ExpressionUUID->"9bffed44-25c1-424f-acc1-db99ae5b5992"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Eta]", "]"}], "2"], 
        SuperscriptBox["a", "2"]]}], "0", "0", "0"},
     {"0", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Eta]", "]"}], "2"], 
       SuperscriptBox["a", "2"]], "0", "0"},
     {"0", "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Csc", "[", "\[Chi]", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Eta]", "]"}], "2"]}], 
       SuperscriptBox["a", "2"]], "0"},
     {"0", "0", "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"Csc", "[", "\[Chi]", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Eta]", "]"}], "2"]}], 
       SuperscriptBox["a", "2"]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[413]//MatrixForm=",ExpressionUUID->"5d38d29d-2a7c-4808-a2ed-\
f38e724824a8"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[414]=",ExpressionUUID->"39dd6d49-5f6b-4a79-a163-01142f0f49b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"Clear", "[", "spinCoefficientReplace", "]"}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{"Page", " ", "56", " ", "Wang"}], " ", "*)"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "check", " ", "where", " ", "these", " ", "definitions", " ", "came", " ",
      "from"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"spinCoefficientReplace", "=", " ", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Rho]", " ", "\[Rule]", 
        RowBox[{"(", "  ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"MergeTensors", "[", " ", 
             RowBox[{
              RowBox[{"CovariantD", "[", " ", 
               RowBox[{
                RowBox[{"l", "[", 
                 RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
              RowBox[{"m", "[", "\[Mu]", "]"}], " ", 
              RowBox[{"mbar", "[", "\[Nu]", "]"}]}], " ", "]"}], " ", "//", 
            " ", "TensorValues"}], "  ", "//", " ", "Expand"}], " ", "//", 
          " ", "FullSimplify"}], " ", ")"}]}], "  ", ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Mu]", "\[Rule]", " ", 
        RowBox[{"(*", 
         RowBox[{"note", " ", "minus", " ", "sign"}], " ", "*)"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"MergeTensors", " ", "[", " ", 
              RowBox[{
               RowBox[{"CovariantD", "[", " ", 
                RowBox[{
                 RowBox[{"n", "[", 
                  RowBox[{"-", "\[Mu]"}], "]"}], " ", ",", " ", 
                 RowBox[{"-", "\[Nu]"}]}], " ", "]"}], " ", 
               RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
               RowBox[{"m", "[", "\[Nu]", "]"}]}], " ", "]"}], " ", "//", " ",
              "TensorValues"}], "  ", "//", " ", "Expand"}], "  ", "//", " ", 
           "FullSimplify"}], " ", ")"}]}]}], "  ", ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"\[CurlyEpsilon]", " ", "\[Rule]", " ", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", "2"}], ")"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"MergeTensors", "[", 
                   RowBox[{
                    RowBox[{"CovariantD", "[", 
                    RowBox[{
                    RowBox[{"l", "[", 
                    RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                    RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                    RowBox[{"n", "[", "\[Mu]", "]"}], " ", 
                    RowBox[{"l", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ",
                   "TensorValues"}], "  ", "//", " ", "Expand"}], "  ", "//", 
                " ", "FullSimplify"}], "  ", ")"}], "  ", "-", " ", 
              "\[IndentingNewLine]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"MergeTensors", "[", " ", 
                   RowBox[{
                    RowBox[{"CovariantD", "[", " ", 
                    RowBox[{
                    RowBox[{"m", "[", 
                    RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                    RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                    RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
                    RowBox[{"l", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ",
                   "TensorValues"}], " ", "//", " ", "Expand"}], " ", "//", 
                " ", "FullSimplify"}], ")"}]}], " ", ")"}]}], " ", "//", " ", 
           "Expand"}], "  ", "//", " ", "FullSimplify"}], " ", ")"}]}], " ", 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"\[Gamma]", " ", "\[Rule]", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "something", " ", "weird", " ", "here", " ", "correct", " ", 
          "definition", " ", "off", " ", "by", " ", "minus", " ", "sign"}], 
         " ", "*)"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            FractionBox["1", "2"], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"MergeTensors", "[", 
                 RowBox[{
                  RowBox[{"CovariantD", "[", " ", 
                   RowBox[{
                    RowBox[{"l", "[", 
                    RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                    RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                  RowBox[{"n", "[", "\[Mu]", "]"}], 
                  RowBox[{"n", "[", "\[Nu]", "]"}]}], " ", "]"}], " ", "//", 
                " ", "TensorValues"}], "  ", "//", " ", "Expand"}], "  ", 
              ")"}], "-", "\[IndentingNewLine]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"MergeTensors", "[", 
                  RowBox[{
                   RowBox[{"CovariantD", "[", " ", 
                    RowBox[{
                    RowBox[{"m", "[", 
                    RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                    RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                   RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
                   RowBox[{"n", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
                 "TensorValues"}], " ", "//", " ", "Expand"}], "  ", "//", 
               " ", "FullSimplify"}], " ", ")"}]}], ")"}]}], " ", "//", " ", 
          "Expand"}], " ", ")"}]}], " ", ",", " ", "\[IndentingNewLine]", 
       RowBox[{"\[Sigma]", "\[Rule]", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"MergeTensors", "[", " ", 
             RowBox[{
              RowBox[{"CovariantD", "[", 
               RowBox[{
                RowBox[{"l", "[", 
                 RowBox[{"-", "\[Mu]"}], "]"}], " ", ",", " ", 
                RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
              RowBox[{"m", "[", "\[Mu]", "]"}], " ", 
              RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
            "TensorValues"}], "  ", "//", " ", "Expand"}], " ", "//", " ", 
          "FullSimplify"}], ")"}]}], "  ", ",", " ", "\[IndentingNewLine]", 
       RowBox[{"\[Lambda]", "\[Rule]", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"note", " ", "minus", " ", "sign"}], " ", "*)"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"MergeTensors", "[", " ", 
              RowBox[{
               RowBox[{"CovariantD", "[", " ", 
                RowBox[{
                 RowBox[{"n", "[", 
                  RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                 RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
               RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
               RowBox[{"mbar", "[", "\[Nu]", "]"}]}], " ", "]"}], "  ", "//", 
             " ", "TensorValues"}], " ", "//", " ", "Expand"}], " ", "//", 
           " ", "FullSimplify"}], ")"}]}]}], "  ", ",", "\[IndentingNewLine]", 
       RowBox[{"\[Kappa]", "\[Rule]", 
        RowBox[{"(", "  ", 
         RowBox[{
          RowBox[{"MergeTensors", "[", " ", 
           RowBox[{
            RowBox[{"CovariantD", "[", " ", 
             RowBox[{
              RowBox[{"l", "[", 
               RowBox[{"-", "\[Mu]"}], "]"}], " ", ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
            RowBox[{"m", "[", "\[Mu]", "]"}], " ", 
            RowBox[{"l", "[", "\[Nu]", "]"}]}], "  ", "]"}], "  ", "//", " ", 
          "TensorValues"}], " ", ")"}]}], " ", ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Nu]", "\[Rule]", " ", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"MergeTensors", "[", " ", 
           RowBox[{
            RowBox[{"CovariantD", "[", " ", 
             RowBox[{
              RowBox[{"n", "[", 
               RowBox[{"-", "\[Mu]"}], "]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"m", "[", "\[Mu]", "]"}], " ", 
            RowBox[{"n", "[", "\[Nu]", "]"}]}], " ", "]"}], " ", "//", " ", 
          "TensorValues"}], " ", ")"}]}], " ", ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Tau]", "\[Rule]", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"MergeTensors", "[", " ", 
           RowBox[{
            RowBox[{"CovariantD", "[", " ", 
             RowBox[{
              RowBox[{"l", "[", 
               RowBox[{"-", "\[Mu]"}], "]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
            RowBox[{"m", "[", "\[Mu]", "]"}], " ", 
            RowBox[{"n", "[", "\[Nu]", " ", "]"}]}], "]"}], "//", " ", 
          "TensorValues"}], " ", ")"}]}], " ", ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Pi]", "\[Rule]", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"Note", " ", "minus", " ", "sign"}], " ", "*)"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"MergeTensors", "[", 
             RowBox[{
              RowBox[{"CovariantD", "[", " ", 
               RowBox[{
                RowBox[{"n", "[", 
                 RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
              RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
              RowBox[{"l", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
            "TensorValues"}], "  ", "//", " ", "Expand"}], " ", ")"}]}]}], 
       " ", ",", " ", "\[IndentingNewLine]", 
       RowBox[{"\[Alpha]", "\[Rule]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "/", "2"}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MergeTensors", "[", 
               RowBox[{
                RowBox[{"CovariantD", "[", " ", 
                 RowBox[{
                  RowBox[{"l", "[", 
                   RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                  RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                RowBox[{"n", "[", "\[Mu]", "]"}], " ", 
                RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
              "TensorValues"}], " ", ")"}], "-", "\[IndentingNewLine]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MergeTensors", "[", 
               RowBox[{
                RowBox[{"CovariantD", "[", " ", 
                 RowBox[{
                  RowBox[{"m", "[", 
                   RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                  RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
                RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
              "TensorValues"}], ")"}]}], ")"}]}], " ", ")"}]}], " ", ",", " ",
        "\[IndentingNewLine]", 
       RowBox[{"\[Beta]", " ", "\[Rule]", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"Spin", " ", "coefficient", " ", "\[Beta]"}], " ", "*)"}], 
        " ", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "/", "2"}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MergeTensors", "[", " ", 
               RowBox[{
                RowBox[{"CovariantD", "[", " ", 
                 RowBox[{
                  RowBox[{"l", "[", 
                   RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                  RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                RowBox[{"n", "[", "\[Mu]", "]"}], 
                RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
              "TensorValues"}], ")"}], "-", " ", "\[IndentingNewLine]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MergeTensors", "[", 
               RowBox[{
                RowBox[{"CovariantD", "[", " ", 
                 RowBox[{
                  RowBox[{"m", "[", 
                   RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                  RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
                RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
              "TensorValues"}], " ", ")"}]}], ")"}]}], ")"}]}]}], 
      "\[IndentingNewLine]", "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"spinCoefficientReplace", " ", "//", " ", "TableForm"}], " ", "//",
     " ", "pdConv"}]}]}]], "Input",
 CellLabel->
  "In[415]:=",ExpressionUUID->"7a0c8cd0-cccf-457a-9571-fa63a9bf9137"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{"\[Rho]", "\[Rule]", 
        FractionBox[
         RowBox[{
          RowBox[{"csc", "(", "\[Chi]", ")"}], " ", 
          RowBox[{"sin", "(", 
           RowBox[{"\[Eta]", "+", "\[Chi]"}], ")"}]}], 
         RowBox[{
          SqrtBox["2"], " ", "a"}]]}]},
      {
       RowBox[{"\[Mu]", "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"cos", "(", "\[Eta]", ")"}], "-", 
           RowBox[{
            RowBox[{"sin", "(", "\[Eta]", ")"}], " ", 
            RowBox[{"cot", "(", "\[Chi]", ")"}]}]}], 
          RowBox[{
           SqrtBox["2"], " ", "a"}]]}]}]},
      {
       RowBox[{"\[CurlyEpsilon]", "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"cos", "(", "\[Eta]", ")"}], 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "a"}]]}]}]},
      {
       RowBox[{"\[Gamma]", "\[Rule]", 
        FractionBox[
         RowBox[{"cos", "(", "\[Eta]", ")"}], 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "a"}]]}]},
      {
       RowBox[{"\[Sigma]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Lambda]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Kappa]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Nu]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Tau]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Pi]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Alpha]", "\[Rule]", 
        FractionBox[
         RowBox[{
          RowBox[{"sin", "(", "\[Eta]", ")"}], " ", 
          RowBox[{"cot", "(", "\[Theta]", ")"}], " ", 
          RowBox[{"csc", "(", "\[Chi]", ")"}]}], 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "a"}]]}]},
      {
       RowBox[{"\[Beta]", "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"sin", "(", "\[Eta]", ")"}], " ", 
           RowBox[{"cot", "(", "\[Theta]", ")"}], " ", 
           RowBox[{"csc", "(", "\[Chi]", ")"}]}], 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "a"}]]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellLabel->
  "Out[417]//TraditionalForm=",ExpressionUUID->"d3441b85-ebdc-4f23-8faa-\
69be2702b673"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "ricciScalarsReplace", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Definitions", " ", "from", " ", "Griffiths"}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Page", " ", "57", " ", "Wang"}], " ", "*)"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ricciScalarsReplace", " ", "=", " ", 
   RowBox[{"{", "\n", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "oo"], "\[Rule]", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"be", " ", "careful", " ", "about", " ", 
          RowBox[{"oh", "'"}], "s", " ", "not", " ", "zeros"}], " ", "*)"}], 
        " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Mu]", "]"}], 
            RowBox[{"l", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], "  ", ",", " ", 
     "\n", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "O1"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Mu]", "]"}], 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], ",", " ", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "O2"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"m", "[", "\[Mu]", "]"}], 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], ",", " ", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "11"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "4"], ")"}], "*", 
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{"TensorValues", "[", 
             RowBox[{"MergeTensors", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"tensorList", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], "[", 
                RowBox[{
                 RowBox[{"-", "\[Mu]"}], ",", 
                 RowBox[{"-", "\[Nu]"}]}], "]"}], 
               RowBox[{"l", "[", "\[Mu]", "]"}], 
               RowBox[{"n", "[", "\[Nu]", "]"}]}], "]"}], "]"}], ")"}], "+", 
           " ", 
           RowBox[{"(", 
            RowBox[{"TensorValues", "[", 
             RowBox[{"MergeTensors", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"tensorList", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], "[", 
                RowBox[{
                 RowBox[{"-", "\[Mu]"}], ",", 
                 RowBox[{"-", "\[Nu]"}]}], "]"}], 
               RowBox[{"m", "[", "\[Mu]", "]"}], 
               RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], "]"}], ")"}]}], 
          ")"}]}]}], " ", "//", " ", "Expand"}], " ", "//", " ", 
      "FullSimplify"}], ",", " ", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "12"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"n", "[", "\[Mu]", "]"}], 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], ",", " ", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "22"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"n", "[", "\[Mu]", "]"}], 
            RowBox[{"n", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", " ", 
       "Expand"}], " ", "//", " ", "FullSimplify"}], " ", ",", " ", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalLambda]", "\[Rule]", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox["1", "24"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"tensorList", "[", 
           RowBox[{"[", "5", "]"}], "]"}], "]"}]}]}], "//", " ", "Expand"}], 
      " ", "//", " ", "FullSimplify"}]}], "\[IndentingNewLine]", "}"}]}], " ",
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ricciScalarsReplace", "  ", "//", " ", "TableForm"}], " ", "//", 
  " ", "pdConv"}]}], "Input",
 CellLabel->
  "In[418]:=",ExpressionUUID->"d0970fac-f831-4e94-a5ea-786857d2cd95"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "oo"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "O1"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "O2"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "11"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "12"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "22"], "\[Rule]", "0"}]},
      {
       RowBox[{"\[CapitalLambda]", "\[Rule]", 
        FractionBox["1", 
         RowBox[{"2", " ", 
          SuperscriptBox["a", "2"]}]]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellLabel->
  "Out[420]//TraditionalForm=",ExpressionUUID->"fb498297-caa7-4d7e-9e1f-\
4b642f5cf0f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "weylScalarsReplace", "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Definitions", " ", "from", " ", "Griffiths"}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Page", " ", "57", " ", "Wang"}], " ", "*)"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"weylScalarsReplace", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", "\n", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "0"], "\[Rule]", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], ",", 
              RowBox[{"-", "\[Lambda]"}], ",", 
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Kappa]", "]"}], 
            RowBox[{"m", "[", "\[Lambda]", "]"}], 
            RowBox[{"l", "[", "\[Mu]", "]"}], 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", " ", 
       "Expand"}], " ", "//", " ", "FullSimplify"}], " ", ",", " ", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "1"], "\[Rule]", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], ",", 
              RowBox[{"-", "\[Lambda]"}], ",", 
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Kappa]", "]"}], 
            RowBox[{"n", "[", "\[Lambda]", "]"}], 
            RowBox[{"l", "[", "\[Mu]", "]"}], 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", " ", 
       "Expand"}], " ", "//", " ", "FullSimplify"}], " ", ",", " ", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "2"], "\[Rule]", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], ",", 
              RowBox[{"-", "\[Lambda]"}], ",", 
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Kappa]", "]"}], 
            RowBox[{"m", "[", "\[Lambda]", "]"}], 
            RowBox[{"mbar", "[", "\[Mu]", "]"}], 
            RowBox[{"n", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], ",", " ", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "3"], "\[Rule]", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], ",", 
              RowBox[{"-", "\[Lambda]"}], ",", 
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"n", "[", "\[Kappa]", "]"}], 
            RowBox[{"l", "[", "\[Lambda]", "]"}], 
            RowBox[{"n", "[", "\[Mu]", "]"}], 
            RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], " ", ",", " ", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "4"], "\[Rule]", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], ",", 
              RowBox[{"-", "\[Lambda]"}], ",", 
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"n", "[", "\[Kappa]", "]"}], 
            RowBox[{"mbar", "[", "\[Lambda]", "]"}], 
            RowBox[{"n", "[", "\[Mu]", "]"}], 
            RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}]}], 
    "\[IndentingNewLine]", "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"weylScalarsReplace", " ", "//", " ", "TableForm"}], " ", "//", " ",
   "pdConv"}]}], "Input",
 CellLabel->
  "In[421]:=",ExpressionUUID->"361bb8d6-ee45-4289-bc34-41aadc9800f7"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "0"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "1"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "2"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "3"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "4"], "\[Rule]", "0"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellLabel->
  "Out[423]//TraditionalForm=",ExpressionUUID->"eb5175e0-273f-4707-a2b2-\
d7fdf236c60a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eulerLagrangeEquations", "[", " ", 
   RowBox[{"metric4pt6", " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[Eta]", ",", "\[Chi]", ",", "\[Theta]", ",", "\[Phi]"}], "}"}],
     ",", "u"}], "]"}], " ", "//", " ", "TableForm", " "}]], "Input",
 CellLabel->"In[86]:=",ExpressionUUID->"0473ff9e-6c8f-4bc3-b674-c42681ee71a8"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cot", "[", 
          RowBox[{"\[Eta]", "[", "u", "]"}], "]"}]}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Eta]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "-", 
       RowBox[{
        RowBox[{"Cot", "[", 
         RowBox[{"\[Eta]", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"\[Chi]", "[", "u", "]"}], "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "-", 
       RowBox[{
        RowBox[{"Cot", "[", 
         RowBox[{"\[Eta]", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"\[Chi]", "[", "u", "]"}], "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "-", 
       RowBox[{
        RowBox[{"Cot", "[", 
         RowBox[{"\[Eta]", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Chi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Chi]", "[", "u", "]"}], "]"}]}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Chi]", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Chi]", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], "2"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Chi]", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Cot", "[", 
         RowBox[{"\[Eta]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Eta]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Chi]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Chi]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"Cot", "[", 
         RowBox[{"\[Eta]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Eta]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cot", "[", 
         RowBox[{"\[Chi]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Chi]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"Cot", "[", 
         RowBox[{"\[Eta]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Eta]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cot", "[", 
         RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cot", "[", 
         RowBox[{"\[Chi]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Chi]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[86]//TableForm=",ExpressionUUID->"89137237-61dc-4fb7-b257-\
a107c2218276"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "transform4pt8", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"transform4pt8", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox["Z", "0"], "\[Rule]", "  ", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox["a", "2"], "-", 
          SuperscriptBox["R", "2"]}]], 
        RowBox[{"Sinh", "[", 
         FractionBox["T", "a"], "]"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["Z", "1"], "\[Rule]", " ", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox["a", "2"], "-", 
          SuperscriptBox["R", "2"]}]], 
        RowBox[{"Cosh", "[", 
         FractionBox["T", "a"], "]"}]}]}], " ", ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["Z", "2"], "\[Rule]", " ", 
       RowBox[{"R", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], " ", ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["Z", "3"], "\[Rule]", "  ", 
       RowBox[{"R", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], " ", ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["Z", "4"], "\[Rule]", "  ", 
       RowBox[{"R", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}]}], "\[IndentingNewLine]", 
     "}"}], " ", "/.", " ", 
    RowBox[{"a", "\[Rule]", " ", 
     SqrtBox[
      FractionBox["3", "\[CapitalLambda]"]]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"transform4pt8", "  ", "//", " ", "TableForm"}]}], "Input",
 CellLabel->"In[87]:=",ExpressionUUID->"4e5c3d0a-a9df-4d7b-9f41-afd3ed5412e9"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       SubscriptBox["Z", "0"], "\[Rule]", 
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["R", "2"]}], "+", 
          FractionBox["3", "\[CapitalLambda]"]}]], " ", 
        RowBox[{"Sinh", "[", 
         FractionBox["T", 
          RowBox[{
           SqrtBox["3"], " ", 
           SqrtBox[
            FractionBox["1", "\[CapitalLambda]"]]}]], "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "1"], "\[Rule]", 
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["R", "2"]}], "+", 
          FractionBox["3", "\[CapitalLambda]"]}]], " ", 
        RowBox[{"Cosh", "[", 
         FractionBox["T", 
          RowBox[{
           SqrtBox["3"], " ", 
           SqrtBox[
            FractionBox["1", "\[CapitalLambda]"]]}]], "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "2"], "\[Rule]", 
       RowBox[{"R", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "3"], "\[Rule]", 
       RowBox[{"R", " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "4"], "\[Rule]", 
       RowBox[{"R", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[89]//TableForm=",ExpressionUUID->"81f6167f-433f-4752-8bb1-\
66906ed9125f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"hyperboloid4pt1", " ", "//.", " ", "transform4pt8"}], "  ", "//", 
   " ", "Expand"}], " ", "//", " ", "Simplify", " "}]], "Input",
 CellLabel->"In[90]:=",ExpressionUUID->"e446bd30-c064-4603-af7c-d299c4bfcff5"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["a", "2"], "\[Equal]", 
  FractionBox["3", "\[CapitalLambda]"]}]], "Output",
 CellLabel->"Out[90]=",ExpressionUUID->"089a692b-852c-4226-8696-1d8be91df0ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Dt", "[", " ", "transform4pt8", " ", "]"}], "  ", "/.", " ", 
   "dtReplace"}], "  ", "//", " ", "TableForm"}]], "Input",
 CellLabel->"In[91]:=",ExpressionUUID->"b949ce7d-8a6f-49f4-bb28-60f66b798825"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       SubscriptBox["dZ", "0"], "\[Rule]", 
       RowBox[{
        FractionBox[
         RowBox[{"dT", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["R", "2"]}], "+", 
            FractionBox["3", "\[CapitalLambda]"]}]], " ", 
          RowBox[{"Cosh", "[", 
           FractionBox["T", 
            RowBox[{
             SqrtBox["3"], " ", 
             SqrtBox[
              FractionBox["1", "\[CapitalLambda]"]]}]], "]"}]}], 
         RowBox[{
          SqrtBox["3"], " ", 
          SqrtBox[
           FractionBox["1", "\[CapitalLambda]"]]}]], "-", 
        FractionBox[
         RowBox[{"dR", " ", "R", " ", 
          RowBox[{"Sinh", "[", 
           FractionBox["T", 
            RowBox[{
             SqrtBox["3"], " ", 
             SqrtBox[
              FractionBox["1", "\[CapitalLambda]"]]}]], "]"}]}], 
         SqrtBox[
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["R", "2"]}], "+", 
           FractionBox["3", "\[CapitalLambda]"]}]]]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "1"], "\[Rule]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"dR", " ", "R", " ", 
           RowBox[{"Cosh", "[", 
            FractionBox["T", 
             RowBox[{
              SqrtBox["3"], " ", 
              SqrtBox[
               FractionBox["1", "\[CapitalLambda]"]]}]], "]"}]}], 
          SqrtBox[
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["R", "2"]}], "+", 
            FractionBox["3", "\[CapitalLambda]"]}]]]}], "+", 
        FractionBox[
         RowBox[{"dT", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["R", "2"]}], "+", 
            FractionBox["3", "\[CapitalLambda]"]}]], " ", 
          RowBox[{"Sinh", "[", 
           FractionBox["T", 
            RowBox[{
             SqrtBox["3"], " ", 
             SqrtBox[
              FractionBox["1", "\[CapitalLambda]"]]}]], "]"}]}], 
         RowBox[{
          SqrtBox["3"], " ", 
          SqrtBox[
           FractionBox["1", "\[CapitalLambda]"]]}]]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "2"], "\[Rule]", 
       RowBox[{
        RowBox[{"dR", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{"d\[Theta]", " ", "R", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "3"], "\[Rule]", 
       RowBox[{
        RowBox[{"d\[Theta]", " ", "R", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
        RowBox[{"dR", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{"d\[Phi]", " ", "R", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "4"], "\[Rule]", 
       RowBox[{
        RowBox[{"d\[Phi]", " ", "R", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"d\[Theta]", " ", "R", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
        RowBox[{"dR", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[91]//TableForm=",ExpressionUUID->"2e5bcfe7-ac2f-4f6c-a491-\
399fe4675617"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Collect", "[", " ", 
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"lineElement", "  ", "/.", " ", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{"Dt", "[", " ", "transform4pt8", " ", "]"}], "  ", "/.", " ",
          "dtReplace"}], "  ", ")"}]}], "  ", "//", " ", "Expand"}], " ", 
     ")"}], " ", ",", " ", 
    RowBox[{"{", " ", 
     RowBox[{
      SuperscriptBox["dT", "2"], ",", " ", 
      SuperscriptBox["dR", "2"], ",", " ", 
      SuperscriptBox["d\[Theta]", "2"], ",", " ", 
      SuperscriptBox["d\[Phi]", "2"]}], "}"}]}], " ", "]"}], " "}]], "Input",
 CellLabel->"In[92]:=",ExpressionUUID->"811c740c-3b8c-4e4e-bfb4-3db805319ab3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["d\[Theta]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["R", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox["R", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox["R", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], ")"}]}], "+", 
  RowBox[{"dR", " ", "d\[Theta]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "R", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{"2", " ", "R", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{"2", " ", "R", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["d\[Phi]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["R", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox["R", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["dR", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["R", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cosh", "[", 
         FractionBox["T", 
          RowBox[{
           SqrtBox["3"], " ", 
           SqrtBox[
            FractionBox["1", "\[CapitalLambda]"]]}]], "]"}], "2"]}], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["R", "2"]}], "+", 
       FractionBox["3", "\[CapitalLambda]"]}]], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["R", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sinh", "[", 
         FractionBox["T", 
          RowBox[{
           SqrtBox["3"], " ", 
           SqrtBox[
            FractionBox["1", "\[CapitalLambda]"]]}]], "]"}], "2"]}], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["R", "2"]}], "+", 
       FractionBox["3", "\[CapitalLambda]"]}]]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["dT", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"Cosh", "[", 
        FractionBox["T", 
         RowBox[{
          SqrtBox["3"], " ", 
          SqrtBox[
           FractionBox["1", "\[CapitalLambda]"]]}]], "]"}], "2"]}], "+", 
     RowBox[{
      FractionBox["1", "3"], " ", 
      SuperscriptBox["R", "2"], " ", "\[CapitalLambda]", " ", 
      SuperscriptBox[
       RowBox[{"Cosh", "[", 
        FractionBox["T", 
         RowBox[{
          SqrtBox["3"], " ", 
          SqrtBox[
           FractionBox["1", "\[CapitalLambda]"]]}]], "]"}], "2"]}], "+", 
     SuperscriptBox[
      RowBox[{"Sinh", "[", 
       FractionBox["T", 
        RowBox[{
         SqrtBox["3"], " ", 
         SqrtBox[
          FractionBox["1", "\[CapitalLambda]"]]}]], "]"}], "2"], "-", 
     RowBox[{
      FractionBox["1", "3"], " ", 
      SuperscriptBox["R", "2"], " ", "\[CapitalLambda]", " ", 
      SuperscriptBox[
       RowBox[{"Sinh", "[", 
        FractionBox["T", 
         RowBox[{
          SqrtBox["3"], " ", 
          SqrtBox[
           FractionBox["1", "\[CapitalLambda]"]]}]], "]"}], "2"]}]}], 
    ")"}]}]}]], "Output",
 CellLabel->"Out[92]=",ExpressionUUID->"e4bcf2e4-7344-4e7f-8061-b3b99adf3926"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric4pt9", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric4pt9", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lineToMetric", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{"Collect", "[", " ", 
        RowBox[{
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"lineElement", "  ", "/.", " ", 
            RowBox[{"(", " ", 
             RowBox[{
              RowBox[{"Dt", "[", " ", "transform4pt8", " ", "]"}], "  ", "/.",
               " ", "dtReplace"}], "  ", ")"}]}], "  ", "//", " ", "Expand"}],
           " ", ")"}], " ", ",", " ", 
         RowBox[{"{", " ", 
          RowBox[{
           SuperscriptBox["dT", "2"], ",", " ", 
           SuperscriptBox["dR", "2"], ",", " ", 
           SuperscriptBox["d\[Theta]", "2"], ",", " ", 
           SuperscriptBox["d\[Phi]", "2"]}], "}"}]}], " ", "]"}], "  ", ")"}],
       " ", ",", " ", 
      RowBox[{"{", " ", 
       RowBox[{
       "dT", " ", ",", " ", "dR", " ", ",", " ", "d\[Theta]", " ", ",", " ", 
        "d\[Phi]"}], " ", "}"}]}], " ", "]"}], " ", "//", " ", "Simplify"}]}],
   "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"metric4pt9", " ", "//", " ", "MatrixForm", "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"rework", " ", "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", "component", " ", "to", " ",
     "match", " ", "book"}], " ", "*)"}], " "}]}], "Input",
 CellLabel->"In[93]:=",ExpressionUUID->"622ff1a0-b0dc-4294-b577-83cd6941090a"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["R", "2"], " ", "\[CapitalLambda]"}], "3"]}], "0", 
      "0", "0"},
     {"0", 
      FractionBox["3", 
       RowBox[{"3", "-", 
        RowBox[{
         SuperscriptBox["R", "2"], " ", "\[CapitalLambda]"}]}]], "0", "0"},
     {"0", "0", 
      SuperscriptBox["R", "2"], "0"},
     {"0", "0", "0", 
      RowBox[{
       SuperscriptBox["R", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[95]//MatrixForm=",ExpressionUUID->"5988c57a-2449-41b4-bb9c-\
b2ee9882fd53"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"eulerLagrangeEquations", "[", " ", 
    RowBox[{"metric4pt9", " ", ",", " ", 
     RowBox[{"{", 
      RowBox[{"T", ",", "R", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
     "u"}], "]"}], " ", "//", " ", "Expand"}], "  ", "//", " ", 
  "TableForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"First", " ", "one", " ", 
      RowBox[{"didn", "'"}], "t", " ", "work", " ", "as", " ", "expected"}], 
     "..."}], "."}], " ", "*)"}], " "}]}], "Input",
 CellLabel->"In[96]:=",ExpressionUUID->"acb6894b-bebe-49a1-95aa-5fe57c2aa6cf"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       FractionBox[
        RowBox[{"4", " ", "\[CapitalLambda]", " ", 
         RowBox[{"R", "[", "u", "]"}], " ", 
         RowBox[{
          SuperscriptBox["R", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], " ", 
         RowBox[{
          SuperscriptBox["T", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}]}], 
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{
            FractionBox["2", "3"], " ", "\[CapitalLambda]", " ", 
            SuperscriptBox[
             RowBox[{"R", "[", "u", "]"}], "2"]}]}], ")"}]}]], "-", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{
          SuperscriptBox["T", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "u", "]"}]}], 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{
          FractionBox["2", "3"], " ", "\[CapitalLambda]", " ", 
          SuperscriptBox[
           RowBox[{"R", "[", "u", "]"}], "2"]}]}]], "+", 
       FractionBox[
        RowBox[{"2", " ", "\[CapitalLambda]", " ", 
         SuperscriptBox[
          RowBox[{"R", "[", "u", "]"}], "2"], " ", 
         RowBox[{
          SuperscriptBox["T", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "u", "]"}]}], 
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{
            FractionBox["2", "3"], " ", "\[CapitalLambda]", " ", 
            SuperscriptBox[
             RowBox[{"R", "[", "u", "]"}], "2"]}]}], ")"}]}]]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"\[CapitalLambda]", " ", 
         RowBox[{"R", "[", "u", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["R", "\[Prime]",
            MultilineFunction->None], "[", "u", "]"}], "2"]}], 
        RowBox[{"3", "-", 
         RowBox[{"\[CapitalLambda]", " ", 
          SuperscriptBox[
           RowBox[{"R", "[", "u", "]"}], "2"]}]}]], "-", 
       RowBox[{
        FractionBox["1", "3"], " ", "\[CapitalLambda]", " ", 
        RowBox[{"R", "[", "u", "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["T", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       RowBox[{
        FractionBox["1", "9"], " ", 
        SuperscriptBox["\[CapitalLambda]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"R", "[", "u", "]"}], "3"], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["T", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "-", 
       RowBox[{
        RowBox[{"R", "[", "u", "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       RowBox[{
        FractionBox["1", "3"], " ", "\[CapitalLambda]", " ", 
        SuperscriptBox[
         RowBox[{"R", "[", "u", "]"}], "3"], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "-", 
       RowBox[{
        RowBox[{"R", "[", "u", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       RowBox[{
        FractionBox["1", "3"], " ", "\[CapitalLambda]", " ", 
        SuperscriptBox[
         RowBox[{"R", "[", "u", "]"}], "3"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["R", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{
          SuperscriptBox["R", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}]}], 
        RowBox[{"R", "[", "u", "]"}]], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{
          SuperscriptBox["R", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}]}], 
        RowBox[{"R", "[", "u", "]"}]], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cot", "[", 
         RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[96]//TableForm=",ExpressionUUID->"6e90a59a-aaa8-4bc8-96a6-\
343edccb56e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "differentials", "]"}], "\[IndentingNewLine]", 
 RowBox[{"differentials", " ", "=", " ", 
  RowBox[{"{", " ", 
   RowBox[{
   "dT", " ", ",", " ", "dR", " ", ",", " ", "d\[Theta]", " ", ",", " ", 
    "d\[Phi]"}], " ", "}"}], " "}]}], "Input",
 CellLabel->"In[97]:=",ExpressionUUID->"14faa2b3-643c-4a31-98c0-224fee96f5fd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"dT", ",", "dR", ",", "d\[Theta]", ",", "d\[Phi]"}], 
  "}"}]], "Output",
 CellLabel->"Out[98]=",ExpressionUUID->"4a97b959-e0cf-4f36-8781-852935ae162f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lineElement4pt4", " ", "=", " ", 
  RowBox[{
   RowBox[{"Sum", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"metric4pt9", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "i"}], "]"}], "]"}], "*", " ", 
      SuperscriptBox[
       RowBox[{"(", " ", 
        RowBox[{"differentials", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", ")"}], "2"]}], " ", ",", " ", 
     RowBox[{"{", " ", 
      RowBox[{"i", " ", ",", " ", "1", " ", ",", " ", "4"}], " ", "}"}]}], 
    " ", "]"}], "  ", "//", " ", "Simplify", "  ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "This", " ", "can", " ", "be", " ", "rewritten", " ", "to", " ", 
     "match"}], " ", "*)"}], " "}]}]], "Input",
 CellLabel->"In[99]:=",ExpressionUUID->"1edd7d01-a929-4aa8-9bed-884fd42ede6d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["d\[Theta]", "2"], " ", 
   SuperscriptBox["R", "2"]}], "+", 
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["dR", "2"]}], 
   RowBox[{"3", "-", 
    RowBox[{
     SuperscriptBox["R", "2"], " ", "\[CapitalLambda]"}]}]], "+", 
  RowBox[{
   FractionBox["1", "3"], " ", 
   SuperscriptBox["dT", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "3"}], "+", 
     RowBox[{
      SuperscriptBox["R", "2"], " ", "\[CapitalLambda]"}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["d\[Phi]", "2"], " ", 
   SuperscriptBox["R", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]], "Output",
 CellLabel->"Out[99]=",ExpressionUUID->"5bb21576-f6fd-4094-980f-e4253c08f577"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "transform4pt10", "]"}], "\[IndentingNewLine]", 
 RowBox[{"transform4pt10", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"R", "\[Rule]", " ", 
   RowBox[{"a", " ", 
    RowBox[{"Sin", "[", "\[Chi]", "]"}], " "}]}]}]}], "Input",
 CellLabel->
  "In[100]:=",ExpressionUUID->"f1d8f0c8-ae13-43f1-9677-ad7c4819144b"],

Cell[BoxData[
 RowBox[{"R", "\[Rule]", 
  RowBox[{"a", " ", 
   RowBox[{"Sin", "[", "\[Chi]", "]"}]}]}]], "Output",
 CellLabel->
  "Out[101]=",ExpressionUUID->"caf61be9-fc42-468a-af16-4206cf94794b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dt", "[", " ", "transform4pt10", " ", "]"}], "  ", "/.", " ", 
  "dtReplace", " "}]], "Input",
 CellLabel->
  "In[102]:=",ExpressionUUID->"3aeb7751-6851-4595-bc61-617bf0de7ec4"],

Cell[BoxData[
 RowBox[{"dR", "\[Rule]", 
  RowBox[{"a", " ", "d\[Chi]", " ", 
   RowBox[{"Cos", "[", "\[Chi]", "]"}]}]}]], "Output",
 CellLabel->
  "Out[102]=",ExpressionUUID->"abdf2ae7-f5a6-4b56-97d9-9839b6f532b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"lineElement4pt4", " ", "/.", " ", "transform4pt10"}], "  ", "/.",
     " ", 
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"Dt", "[", " ", "transform4pt10", " ", "]"}], "  ", "/.", " ", 
      "dtReplace"}], "  ", ")"}]}], "   ", "/.", " ", 
   RowBox[{"\[CapitalLambda]", "\[Rule]", " ", 
    FractionBox["3", 
     SuperscriptBox["a", "2"]]}]}], " ", "//", " ", "Simplify", "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Equivalent", " ", "but", " ", "loks", " ", "different", " ", "because", 
    " ", "of", " ", "grouping", " ", "for", " ", 
    SuperscriptBox["dT", "2"]}], " ", "*)"}], " "}]], "Input",
 CellLabel->
  "In[103]:=",ExpressionUUID->"1d87b006-a934-484b-830d-9771f307a178"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["dT", "2"]}], "+", 
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox["d\[Chi]", "2"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["dT", "2"], "+", 
     RowBox[{
      SuperscriptBox["a", "2"], " ", 
      SuperscriptBox["d\[Theta]", "2"]}], "+", 
     RowBox[{
      SuperscriptBox["a", "2"], " ", 
      SuperscriptBox["d\[Phi]", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Chi]", "]"}], "2"]}]}]], "Output",
 CellLabel->
  "Out[103]=",ExpressionUUID->"b533ae2f-6883-4e56-aebc-ce2fdef587f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "lineElement4pt10a", "]"}], "\[IndentingNewLine]", 
 RowBox[{"lineElement4pt10a", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"Collect", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"lineElement4pt4", " ", "/.", " ", "transform4pt10"}], "  ", "/.",
         " ", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"Dt", "[", " ", "transform4pt10", " ", "]"}], "  ", "/.", 
          " ", "dtReplace"}], "  ", ")"}]}], "   ", "/.", " ", 
       RowBox[{"\[CapitalLambda]", "\[Rule]", " ", 
        FractionBox["3", 
         SuperscriptBox["a", "2"]]}]}], " ", ")"}], "//", " ", "Expand"}], 
    " ", ",", " ", 
    RowBox[{"{", " ", 
     RowBox[{
      SuperscriptBox["dT", "2"], ",", " ", 
      SuperscriptBox["dR", "2"], ",", " ", 
      SuperscriptBox["d\[Theta]", "2"], ",", " ", 
      SuperscriptBox["d\[Phi]", "2"]}], "}"}]}], "]"}], " "}]}], "Input",
 CellLabel->
  "In[104]:=",ExpressionUUID->"2fe9f43d-7021-49a7-978b-ab50f589d1ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox["d\[Theta]", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Chi]", "]"}], "2"]}], "+", 
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox["d\[Phi]", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Chi]", "]"}], "2"]}], "+", 
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox["d\[Chi]", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Chi]", "]"}], "2"]}], 
   RowBox[{"3", "-", 
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Chi]", "]"}], "2"]}]}]], "+", 
  RowBox[{
   SuperscriptBox["dT", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Chi]", "]"}], "2"]}], ")"}]}]}]], "Output",
 CellLabel->
  "Out[105]=",ExpressionUUID->"d89b6dc8-8840-4bc4-89ac-e50c52ab8ff3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lineElement4pt10a", " ", "//", " ", "Simplify"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"not", " ", "the", " ", "grouping", " ", "we", " ", "want"}], ",",
     " ", 
    RowBox[{
     RowBox[{
     "so", " ", "we", " ", "simplify", " ", "each", " ", "term", " ", 
      "individually", " ", "and", " ", "see", " ", "what", " ", "happens"}], 
     "..."}]}], " ", "*)"}], " "}]}], "Input",
 CellLabel->
  "In[106]:=",ExpressionUUID->"9a0d1eba-b613-4406-a042-ba1fd0d6b5b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["dT", "2"]}], "+", 
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox["d\[Chi]", "2"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["dT", "2"], "+", 
     RowBox[{
      SuperscriptBox["a", "2"], " ", 
      SuperscriptBox["d\[Theta]", "2"]}], "+", 
     RowBox[{
      SuperscriptBox["a", "2"], " ", 
      SuperscriptBox["d\[Phi]", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Chi]", "]"}], "2"]}]}]], "Output",
 CellLabel->
  "Out[106]=",ExpressionUUID->"af29cbdd-9346-4d47-9c12-2096682f6d12"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "lineElement4pt10", "]"}], "\[IndentingNewLine]", 
 RowBox[{"lineElement4pt10", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"Sum", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"lineElement4pt10a", "[", 
      RowBox[{"[", "i", "]"}], "]"}], " ", "//", " ", "Simplify"}], " ", ",", 
    " ", 
    RowBox[{"{", " ", 
     RowBox[{"i", " ", ",", " ", "1", " ", ",", " ", 
      RowBox[{"Length", "[", " ", "lineElement4pt10a", "]"}]}], " ", "}"}]}], 
   " ", "]"}], " "}]}], "Input",
 CellLabel->
  "In[107]:=",ExpressionUUID->"c051e801-dee2-404e-8219-202b9fd59dc0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox["d\[Chi]", "2"]}], "-", 
  RowBox[{
   SuperscriptBox["dT", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "\[Chi]", "]"}], "2"]}], "+", 
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox["d\[Theta]", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Chi]", "]"}], "2"]}], "+", 
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox["d\[Phi]", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Chi]", "]"}], "2"]}]}]], "Output",
 CellLabel->
  "Out[108]=",ExpressionUUID->"a51393f1-1531-444d-9b0a-59a53138cbc9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric4pt10", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric4pt10", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"lineToMetric", "[", " ", 
    RowBox[{"lineElement4pt10", " ", ",", " ", 
     RowBox[{"{", " ", 
      RowBox[{
      "dT", " ", ",", " ", "d\[Chi]", " ", ",", " ", "d\[Theta]", " ", ",", 
       " ", "d\[Phi]"}], " ", "}"}]}], " ", "]"}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"metric4pt10", " ", "//", " ", "MatrixForm"}]}], "Input",
 CellLabel->
  "In[109]:=",ExpressionUUID->"1de8d31f-c21f-4993-9d5a-a2c8df07750d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Chi]", "]"}], "2"]}], "0", "0", "0"},
     {"0", 
      SuperscriptBox["a", "2"], "0", "0"},
     {"0", "0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Chi]", "]"}], "2"]}], "0"},
     {"0", "0", "0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Chi]", "]"}], "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[111]//MatrixForm=",ExpressionUUID->"7d26060c-d83a-449f-9036-\
c73c6778d5a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eulerLagrangeEquations", "[", " ", 
   RowBox[{"metric4pt10", " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"T", ",", "\[Chi]", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], ",",
     "u"}], "]"}], " ", "//", " ", "TableForm"}]], "Input",
 CellLabel->
  "In[112]:=",ExpressionUUID->"123614a6-cbae-40f9-82f1-df67789f1d0b"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"Tan", "[", 
         RowBox[{"\[Chi]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["T", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Chi]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["T", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Chi]", "[", "u", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Chi]", "[", "u", "]"}], "]"}], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["T", "\[Prime]",
             MultilineFunction->None], "[", "u", "]"}], "2"]}], 
         SuperscriptBox["a", "2"]]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Chi]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Chi]", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Chi]", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], "2"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Chi]", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Chi]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "u", "]"}], "]"}]}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cot", "[", 
         RowBox[{"\[Chi]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Chi]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]},
     {
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"Cot", "[", 
         RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cot", "[", 
         RowBox[{"\[Chi]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Chi]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[112]//TableForm=",ExpressionUUID->"613a018c-8a29-4bc9-9e12-\
d760a9c9a108"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "transform4pt12", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"transform4pt12", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox["Z", "0"], "\[Rule]", " ", 
       FractionBox[
        RowBox[{
         SuperscriptBox["a", "2"], "+", "s"}], 
        RowBox[{"2", " ", 
         SubscriptBox["\[Eta]", "0"]}]]}], " ", ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["Z", "1"], "\[Rule]", "  ", 
       FractionBox[
        RowBox[{
         SuperscriptBox["a", "2"], "-", "s"}], 
        RowBox[{"2", " ", 
         SubscriptBox["\[Eta]", "0"]}]]}], "  ", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["Z", "2"], "\[Rule]", " ", 
       RowBox[{"a", " ", 
        RowBox[{"(", 
         FractionBox["x", 
          SubscriptBox["\[Eta]", "0"]], ")"}]}]}], " ", ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["Z", "3"], "\[Rule]", " ", 
       RowBox[{"a", " ", 
        RowBox[{"(", 
         FractionBox["y", 
          SubscriptBox["\[Eta]", "0"]], ")"}]}]}], " ", ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["Z", "4"], "\[Rule]", " ", 
       RowBox[{"a", " ", 
        RowBox[{"(", 
         FractionBox["z", 
          SubscriptBox["\[Eta]", "0"]], ")"}]}]}]}], "\[IndentingNewLine]", 
     "}"}], " ", "/.", " ", 
    RowBox[{"s", "\[Rule]", " ", 
     RowBox[{
      RowBox[{"-", " ", 
       SuperscriptBox[
        SubscriptBox["\[Eta]", "0"], "2"]}], "+", 
      SuperscriptBox["x", "2"], "+", 
      SuperscriptBox["y", "2"], "+", 
      SuperscriptBox["z", "2"]}]}]}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"transform4pt12", " ", "//", " ", "TableForm"}]}], "Input",
 CellLabel->
  "In[113]:=",ExpressionUUID->"7a0686bc-9951-404a-be23-edb2c4ec064f"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       SubscriptBox["Z", "0"], "\[Rule]", 
       FractionBox[
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"], "+", 
         SuperscriptBox["z", "2"], "-", 
         SubsuperscriptBox["\[Eta]", "0", "2"]}], 
        RowBox[{"2", " ", 
         SubscriptBox["\[Eta]", "0"]}]]}]},
     {
      RowBox[{
       SubscriptBox["Z", "1"], "\[Rule]", 
       FractionBox[
        RowBox[{
         SuperscriptBox["a", "2"], "-", 
         SuperscriptBox["x", "2"], "-", 
         SuperscriptBox["y", "2"], "-", 
         SuperscriptBox["z", "2"], "+", 
         SubsuperscriptBox["\[Eta]", "0", "2"]}], 
        RowBox[{"2", " ", 
         SubscriptBox["\[Eta]", "0"]}]]}]},
     {
      RowBox[{
       SubscriptBox["Z", "2"], "\[Rule]", 
       FractionBox[
        RowBox[{"a", " ", "x"}], 
        SubscriptBox["\[Eta]", "0"]]}]},
     {
      RowBox[{
       SubscriptBox["Z", "3"], "\[Rule]", 
       FractionBox[
        RowBox[{"a", " ", "y"}], 
        SubscriptBox["\[Eta]", "0"]]}]},
     {
      RowBox[{
       SubscriptBox["Z", "4"], "\[Rule]", 
       FractionBox[
        RowBox[{"a", " ", "z"}], 
        SubscriptBox["\[Eta]", "0"]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[115]//TableForm=",ExpressionUUID->"43f3b1c7-8a83-4697-8859-\
77d5545a3b22"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"hyperboloid4pt1", " ", "//.", " ", "transform4pt12"}], "  ", "//", 
  " ", "Expand", "  ", 
  RowBox[{"(*", " ", "true", " ", "*)"}], " "}]], "Input",
 CellLabel->
  "In[116]:=",ExpressionUUID->"dbdb2f3c-5897-4f51-bf52-1d7ca034be8c"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[116]=",ExpressionUUID->"0896bb7c-f704-42c8-9920-e4405dec5cb5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Dt", "[", " ", "transform4pt12", " ", "]"}], "  ", "/.", " ", 
   "dtReplace"}], "  ", "//", " ", "TableForm"}]], "Input",
 CellLabel->
  "In[117]:=",ExpressionUUID->"fb0c5692-52b6-4953-b572-4c6bc2386c0a"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       SubscriptBox["dZ", "0"], "\[Rule]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["a", "2"], "+", 
             SuperscriptBox["x", "2"], "+", 
             SuperscriptBox["y", "2"], "+", 
             SuperscriptBox["z", "2"], "-", 
             SubsuperscriptBox["\[Eta]", "0", "2"]}], ")"}], " ", 
           SubscriptBox["d\[Eta]", "0"]}], 
          RowBox[{"2", " ", 
           SubsuperscriptBox["\[Eta]", "0", "2"]}]]}], "+", 
        FractionBox[
         RowBox[{
          RowBox[{"2", " ", "dx", " ", "x"}], "+", 
          RowBox[{"2", " ", "dy", " ", "y"}], "+", 
          RowBox[{"2", " ", "dz", " ", "z"}], "-", 
          RowBox[{"2", " ", 
           SubscriptBox["\[Eta]", "0"], " ", 
           SubscriptBox["d\[Eta]", "0"]}]}], 
         RowBox[{"2", " ", 
          SubscriptBox["\[Eta]", "0"]}]]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "1"], "\[Rule]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["a", "2"], "-", 
             SuperscriptBox["x", "2"], "-", 
             SuperscriptBox["y", "2"], "-", 
             SuperscriptBox["z", "2"], "+", 
             SubsuperscriptBox["\[Eta]", "0", "2"]}], ")"}], " ", 
           SubscriptBox["d\[Eta]", "0"]}], 
          RowBox[{"2", " ", 
           SubsuperscriptBox["\[Eta]", "0", "2"]}]]}], "+", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "dx", " ", "x"}], "-", 
          RowBox[{"2", " ", "dy", " ", "y"}], "-", 
          RowBox[{"2", " ", "dz", " ", "z"}], "+", 
          RowBox[{"2", " ", 
           SubscriptBox["\[Eta]", "0"], " ", 
           SubscriptBox["d\[Eta]", "0"]}]}], 
         RowBox[{"2", " ", 
          SubscriptBox["\[Eta]", "0"]}]]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "2"], "\[Rule]", 
       RowBox[{
        FractionBox[
         RowBox[{"a", " ", "dx"}], 
         SubscriptBox["\[Eta]", "0"]], "-", 
        FractionBox[
         RowBox[{"a", " ", "x", " ", 
          SubscriptBox["d\[Eta]", "0"]}], 
         SubsuperscriptBox["\[Eta]", "0", "2"]]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "3"], "\[Rule]", 
       RowBox[{
        FractionBox[
         RowBox[{"a", " ", "dy"}], 
         SubscriptBox["\[Eta]", "0"]], "-", 
        FractionBox[
         RowBox[{"a", " ", "y", " ", 
          SubscriptBox["d\[Eta]", "0"]}], 
         SubsuperscriptBox["\[Eta]", "0", "2"]]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "4"], "\[Rule]", 
       RowBox[{
        FractionBox[
         RowBox[{"a", " ", "dz"}], 
         SubscriptBox["\[Eta]", "0"]], "-", 
        FractionBox[
         RowBox[{"a", " ", "z", " ", 
          SubscriptBox["d\[Eta]", "0"]}], 
         SubsuperscriptBox["\[Eta]", "0", "2"]]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[117]//TableForm=",ExpressionUUID->"d9e80023-5307-4df7-83e4-\
cc2789462ebd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "lineElement4pt13", "]"}], "\[IndentingNewLine]", 
 RowBox[{"lineElement4pt13", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"lineElement", "  ", "/.", " ", 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"Dt", "[", " ", "transform4pt12", " ", "]"}], "  ", "/.", " ", 
       "dtReplace"}], " ", ")"}]}], "  ", "//", " ", "Expand"}], " ", "//", 
   " ", "Simplify", " "}]}]}], "Input",
 CellLabel->
  "In[118]:=",ExpressionUUID->"fa7e3591-89c3-400e-83e3-f81e2e6c577f"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["dx", "2"], "+", 
     SuperscriptBox["dy", "2"], "+", 
     SuperscriptBox["dz", "2"], "-", 
     SubsuperscriptBox["d\[Eta]", "0", "2"]}], ")"}]}], 
  SubsuperscriptBox["\[Eta]", "0", "2"]]], "Output",
 CellLabel->
  "Out[119]=",ExpressionUUID->"7c238218-6a12-4655-80d3-6f0134222d78"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric4pt13", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric4pt13", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"lineToMetric", "[", " ", 
    RowBox[{
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"lineElement", "  ", "/.", " ", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"Dt", "[", " ", "transform4pt12", " ", "]"}], "  ", "/.", 
          " ", "dtReplace"}], " ", ")"}]}], "  ", "//", " ", "Expand"}], "  ",
       ")"}], " ", ",", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       SubscriptBox["d\[Eta]", "0"], " ", ",", " ", "dx", " ", ",", " ", "dy",
        " ", ",", " ", "dz"}], " ", "}"}]}], " ", "]"}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"metric4pt13", " ", "//", " ", "MatrixForm"}]}], "Input",
 CellLabel->
  "In[120]:=",ExpressionUUID->"8c5b7ed5-e94c-4f0a-ac51-0a45413a9e70"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["a", "2"], 
        SubsuperscriptBox["\[Eta]", "0", "2"]]}], "0", "0", "0"},
     {"0", 
      FractionBox[
       SuperscriptBox["a", "2"], 
       SubsuperscriptBox["\[Eta]", "0", "2"]], "0", "0"},
     {"0", "0", 
      FractionBox[
       SuperscriptBox["a", "2"], 
       SubsuperscriptBox["\[Eta]", "0", "2"]], "0"},
     {"0", "0", "0", 
      FractionBox[
       SuperscriptBox["a", "2"], 
       SubsuperscriptBox["\[Eta]", "0", "2"]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[122]//MatrixForm=",ExpressionUUID->"4ff092fa-63f4-477e-ad91-\
8b6f01a2996c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eulerLagrange", "[", " ", 
   RowBox[{"metric4pt13", " ", ",", " ", 
    RowBox[{"{", " ", 
     RowBox[{
      SubscriptBox["\[Eta]", "0"], ",", " ", "x", " ", ",", " ", "y", " ", 
      ",", " ", "z"}], " ", "}"}], " ", ",", " ", "u"}], " ", "]"}], "  ", "//",
   " ", "TableForm"}]], "Input",
 CellLabel->
  "In[123]:=",ExpressionUUID->"85ced81e-cc2a-4d09-9cab-bae68dcd9828"],

Cell[BoxData[
 TagBox[
  RowBox[{"eulerLagrange", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox["a", "2"], 
          SubsuperscriptBox["\[Eta]", "0", "2"]]}], ",", "0", ",", "0", ",", 
        "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        FractionBox[
         SuperscriptBox["a", "2"], 
         SubsuperscriptBox["\[Eta]", "0", "2"]], ",", "0", ",", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        FractionBox[
         SuperscriptBox["a", "2"], 
         SubsuperscriptBox["\[Eta]", "0", "2"]], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", 
        FractionBox[
         SuperscriptBox["a", "2"], 
         SubsuperscriptBox["\[Eta]", "0", "2"]]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["\[Eta]", "0"], ",", "x", ",", "y", ",", "z"}], "}"}], ",",
     "u"}], "]"}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[123]//TableForm=",ExpressionUUID->"a6b645ab-8129-4729-9e00-\
f96f66af07c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ContourPlot3D", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Evaluate", "[", " ", 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"hyperboloid4pt1", " ", "/.", " ", 
          RowBox[{
           SubscriptBox["Z", "3"], "\[Rule]", " ", "0"}]}], "  ", "/.", "  ", 
         
         RowBox[{
          SubscriptBox["Z", "4"], "\[Rule]", " ", "0"}]}], "   ", "/.", " ", 
        RowBox[{"\[CapitalLambda]", "\[Rule]", " ", "3"}]}], " ", "/.", " ", 
       RowBox[{"a", "\[Rule]", " ", "1"}]}], "  ", ")"}], "]"}], " ", ",", 
    " ", 
    RowBox[{"{", " ", 
     RowBox[{
      SubscriptBox["Z", "0"], " ", ",", " ", 
      RowBox[{"-", "10"}], " ", ",", " ", "10"}], " ", "}"}], " ", ",", " ", 
    RowBox[{"{", " ", 
     RowBox[{
      SubscriptBox["Z", "1"], " ", ",", " ", 
      RowBox[{"-", "10"}], " ", ",", " ", "10"}], " ", "}"}], " ", ",", " ", 
    RowBox[{"{", " ", 
     RowBox[{
      SubscriptBox["Z", "2"], " ", ",", " ", 
      RowBox[{"-", "10"}], " ", ",", " ", "10"}], " ", "}"}]}], " ", "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"misleading", ",", " ", 
    RowBox[{
    "need", " ", "to", " ", "take", " ", "off", " ", "contour", " ", "lines", 
     " ", "and", " ", "replace", " ", "with", " ", "constant", " ", "t", " ", 
     "\[Chi]"}]}], " ", "*)"}], " "}]}], "Input",
 CellLabel->
  "In[124]:=",ExpressionUUID->"541c500d-ab0a-4fc3-896e-22405215bcef"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
D2jOcfTPyn1XPdXGykS6j4n5Bv4vfroX+iQo5d9GCxFlERwHH3OnTo1zJqvU
+5N3ELAu0raObqnbUin/+D54aNo5Xq8H+l/lzfZe2GYt0rqdD4OufK5oxvnU
eOeI7J+WHrNf4pXgINL9004ef6YNOc/r+Oj7GlgX/dpGug+6XCrf3uelhvND
fs4D7eI+YeCRapLhI5J0hLcWO+Pyd5ownJ3/PS5/UWiuL9K6DrTL/K4z6yJm
qmkIda/uWT31Ca93A/2x0YeetorldXz0/RHgG00Xfn6Xy98ZB5+eXvtbusWW
yoddchuh3vabgtbbWLR7tm1eST7DHdy95l5saalY8euGmmkR5/OxpdPTPSrv
pAOfL9s9bOcQQ2F+xzYzK08ZMZzOc+ZPejidG/5/73RPa7b6b6Sj+A8/U6R+
5pITFyQfbJ1EWp+A+QA+5zwH1Jqj8h4NrXN4/VLT7cgEmUjrIjY8PtIsubW9
+I+6C5HWXeyM7FV887uTSOsu0C7wU6ctf397I2PrFPzbd081cXjC3xGDPIMd
tHx0t9myd0DYfo2rR0bXR5bC5X52l7a24jh9d5vW2xxPtenT4rWtSOtPQM/q
Ohf37OnpLRXqngo7Pz3RmvGh76BhHTl9nOMaPUSpoOsU9npw/NE1y4/ydU3f
swae19h37IEeSgXVV+BD7Sx9XwB44fD0CXGG/L1pdt5ufNY8D3dr0aRR1OM2
KnaK3ksP/bxm+O2Seep2YqI073z2Y26P6D3twPc8Hqu3STQX6Ty/kZD0pbTU
Wdy/pee2LzF8ftJ7/oE/SI36ZDiT31eP/q+4JXcrX+AsFs2+OqRIZf5TPqwu
WHvzfK13DiK1v2kdNF/Pn+Uovmphu/dbOf9eeg8/+mfZCPn3r/FOIp3ntF3g
L1Idy4w/yETqp6F+g/pX9H1h2BGd5lN75d6XiNQO0nu/waf2A8ejH5bLxK9r
Hstqz+I4vuvgqpcvt2/n8tD3IDDfOrkJy6eI1uL23zqzZqv4b2z/OnlR8A8V
/42+3wF8qVurIe0W8vc7IP+vSE8ztRSlgtpfrAtqv/C91O6Dntpleq8+xsV3
d++6G7SUCurvtb2i8WBXmkT82HxdnPlprrfpvfrsnOX4nm1uexmK1M9EnQa1
g5QPcKfMHdPjU3RE6l+hDoTaO/ZOfWqDNebHeL08fXcG81lqvShstq1SQe3s
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
M/zSw7/8vDn0z5JZVoYuKvadvvPI4sS32TMkW/i7meifU9OM/4zeUao4ZjrG
06CM8/9SJn+9Vq9C8Vu+LeVin2msfqbjl7DEq/GlCup/sndyiT+G76XxaULL
cIvUMKWCxnHgM+dcoOKEin/C3sEh8Sn4P/rZc2tblXiW5ufZfcy1tJp08ufv
VIK+wfXH8oEZEpH6OX+azzBp5a5UbG3mKP2s4g9Dn1N/CfJQvwjfpVAUJCj8
eR0X4gXfEZOjJqvUGbL99CY+v9q/NWA4/LSpphbdDSZ8k1O/jtYpgX75oZt3
e13j5yawHg1fvrIXVeSBXqL8Wf1MateTLfQMGT36efPgYmkrlfMR6B9a743+
GbElIvzSCp5Hhfw5nx887l1uwO8jxDn3lpuT+l/m+4PAF0UYZB4brM7vw6vG
Yw4e+Nt6n4Tlx4B3fNb6m0sK1zPo51qyj3qT1/F7zSFPblPtBp1383vK4Q8H
BEi76avkhdCflB7fS/1z9BttF/0Mvvh1VXt/c1RVPIh5jPx81NUuY3/E8fcc
0T+2ud5t62by+n70T0HdB40HXOXvL2A/wvN21m5NzxLGH/jZQz2nzq5twuqZ
kOcfID2w8cyNYvY+CNr1eNd15xgbDVYPxO7lan7PN8iWv5MCecJf7Pi5YAl/
xwR85Dq5U+6X8Hc6QO++3udb4U3+PgjbRz7fZPILf0P2vRh3xYrs8/EW/N1D
dm9DL6v+cxL5+33gfyVwaXP39fw9GnZOcLNWRcgbO9Zv4FMW93G3th9/Bwft
zur0w3PZcf4uHvjfd3x/pGdH/o4P+BtdSFmhlWXJ+ID/LZvCAcN7WbP+B5/G
4fF5QSrv34FPZoL6giSV9/Igj/og+y46GvxdD/A/m/i77tt8/q4Hxr2vVeeY
gpv83RDMN3nWk4T4maZMfvDfWPK+1l5b4xp8NoeoxRtn8ziQ4d/yKzoFlSjo
fH5QNOq0awa/tx/0vw305mw34usH/ZCmfXbwyYP8XTb0w+PjN08drqch0nHv
+DE+0HWzvkjnm8IyZJyWgVJB18tO87gRtul8PYPedWLlNeMFhiJdd/s7dgwL
T+bvlKHdWaOKUpN68HcNwH/WkMRDGsf4+whs/3eiebPD50sUdBz7nc31aKZr
J9L5oO3gNMY4n8ctkKfrnssjc+9xesgzzFNPsf0Zf3cD9EtC5HubzuVxBdr1
zan9w0bDWKTzYVXL2KSsQP4+AvTDhi6K90WlxQo6/61XJZydIfD3vICfWS57
MG4Tt/eQJ62xsYXDPf4eCuS5uDfF6/Bp/r4hvssk7PioJf24PWb3zo4McxW8
+DsLLH+4v+Xg6Wb8fS7o28yI7scPjeB1sZgvT7zuuXZSeW8L9Ib610a/UdED
7NxT3Rkfm6u8b4Xxz7+sWHNU5Z0s8AudcDu2Qyp/9wr879z+ZrdzO69DZXmn
pPEvi1+rnH+opk+K3lEx053X3UKebF9Xj9/tuf6BPPHvzC5VqLx7BT5GMWG+
0TFaDMfv/sSy2KXpXD+Dvu/0yy/1/vB6ZeBnH/TdYnKevw+L31o7cn/NFLld
AF53YsbvD+b8nSn8Ck5d+roYc33O4pTRQ89YJegTeg1hV1lS/QMiP+fA4pfk
kl790rgdQbu3Fw380cGP2xHgYtSACDeVd6bw261HTPC57qXsnSaMwym9uQUD
Q0yp3RRCf27Ob9KqmNFjHCrMN7T8/ZTrW8iZ5LP5Y20VPY92kzvHXQhVeY+J
xadb+n2er6L/WVysJrtwQo3PEzbfE4s3PtDk/gB7zzP2ZbHHMO4P4PdNg+6z
0yL4e0loV3YturOPyvt9kN88+4tnXZV3jiB/kcezNJsZ/P0U8Bl7bIdF5yp9
Rcf9YFvfrHvx/D0UzKtO4Rf23vHg7/4AD/z66syW3vy9RcgzdVD2uJ0q7wqx
PH/XKK2GKu8kot0dkc2Sb6i8owo+uWtaVAyPtBXpum7uuDz6fh9rkY5LfnH7
/Z/nqOzDVcu52GRw0+axPF8D+tNNBkvaOGqIdH0tyjjrGaxtLNL1WLvoa2uv
Yfw9IND7JaV2DfXi+TL8Ctd+eSZ85HYT9N7buszSCNES6fqdNTpk4pxg/i4n
5Eqqm3Nr6mn+Din42a+a5xWTrSPS9fh++IKWmde5PcXvspln75f4c/lZnF5p
st3rDrenwL3cHxuvCTQU6fx08ByX/uscf38TuMnlzi0sZ5mKdP5Put9p+qfa
JiKd/0Ouf+8eFsLtL37Feic6Tx7L7RrknVLi7n3tp5FI193qyW+vPtLi9hf/
z1R390ifDJX756v9nPT9q3fFP+D3JwNvbPL4y3Fz5oezuKbHw8inTb7z+1OA
/3g9erONAb+vmNXTfvm5Ia2Iv7eC35LVW9Y/Wcf0GKv/2RtelLunSo+x++mq
f4vzf5UrWvD3UPDb7IJvwyWP+X3CrB5Mx+L9jyT+jgnwlVN6HvfJ4PeqwO7X
2l1WcUZDg9lvdl+WzvV6BoX8fQcWP8a2VXfcrc/vd6v+nX+tY/+vZ7g8wLce
6XnCeaghk4fV5yT2TD2cKmHfi3+vNfOme4fzzC4z+VsmGDfrXsDveQYf6dtX
+X1U7nNG+5rzBU2vF/y+IdA/cfrSs4PKuAPvoZDq1nrI/WBWx7Ko5KVZd/7+
BX4PWZhla90oZffQsnsxuyTujx7I7w8Hn1slIbMuRPH5A/pOdzptvTlOWmPc
m5pa9vk+qlRB5+c95/dtmuvyeyYhT9c62vda/eZ1k/htlnTyrfHZUgXtn7tP
w78F5spqrIuXfpPtbz3l6wW/tg4W73+ZcT6Qy6a9546zM01FOr66cW8yk1Xe
QWDvqxSWRAwdx98vQP9kZ9a+sPYOrwMD/vnerh8eqfz9Avz7lCmpFjMT+PsF
rD4qt1O7S7pKBR2v1d99PrqV8ncEWH3m8d7TynL4Pav4DXi7fOnZvxwHfXD2
/jbLDPl9/mi38Jzh1lIffk8m6P3v1RdsnvFxBb86Q7sFvVa5bx/0L/ZtaFii
ci8u6J+30vS//4bXC+K7rp+d92JCMr9nGPJMvvPR7rLA63HBP7DNmj/DnvL5
Af55gTumNfPg7xGA/9ojuYemmfP3RGBf3OtNuHNS5T582I0X1mXTClXuz4d+
Hnxo4pYZZ1Te1arms/zpz4cZXfl9+OCj43XFpr0XXxfsXF69N07DVO63h92c
Pi3k5PG+/B4r4Mt7Pqj40Iffn8Xs2gZv9bn3LaneFt6oTWtt8JPfe8/8zLm2
ZW8XmhL5q+ytXNF1kjbX/8z+Dund867KvfT4rqCLjzcUq9xjz/LVrtmXDVX0
GOSXGswv6qDy3hDa3egerXm8No/TgNeN8330Ul3J9DDaHfYxNuy3Jb8HHnJO
NHvnskXK6dHua916PeP1jJldgJyXFi093Xcwj6uB9663M2JJfQ0mD3CrZ8q2
W1J4nA/+vQadXVEUqsXvo6zG9c5caiBTeTcK8j84MWfaza36TB7I3zTua/a4
RB3SDxpC2cVPUWk3TZidgjyPQ/UKU0z4fexot0nS0MYRSyqZPmf71wEbndVN
+f3qwH0bj1pocZzrf8wT3bmtxyzqx+076Hs1rT+48o5ljfmzOsXW2MSYri+J
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
S43NFlS+RnsS6Bq/FTV+m+H4gf//A3UC+5s=
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJwt2Am4T9UaBvAdByfzWKhEkaFQSpGUQuaIOjJmSogoU8a4KkllKJm5aUKF
BkNuPQ1mMmQqREiRqUuTuvfm/r52z3Pe5333u771rW+tvffa63/KdOnb8uFs
SZJ8ekGSZMftcyTJ84xmODNvkjySmSSr8ifJ1IwkuVTMNNwvX5L056/lf5dT
H/4RXET8aP5G/hRxv8v3PM7LH8xfwz8trrv4U/hT1334feV7Vtxp8WPxU7mS
pJYaxuFiYi+ColApT5I8w2uu32H984k9hCfjuvpeg5+Bn+nxuJm8S7T/huvC
cPpXPEZbUzHVcWm1jVfDNjlra+/G743PGquA9jO4A57Lvx/3guJ0WTwcOtC3
4E7wT7oj/kCulnL+qG9n14v4XfCzuZNkndzn1XCJcZ8Ss1nscu1vwkLoIW4V
7ol7wwa6D16r3w3WYANurv8K/F/8lval8AZMtjZNrdskPAVa0i/i5cZoaqxT
6rk1ahV7G36OfyF/Mf8G+Rrza+Bn+cf0m8EvAv3oerxxcf/o2byn6TP0y3Qh
86op3xBzmsjPI2cPtRXm1+IP5V8r793y18IleMXoknis+D/lmS9PaW2F+Jfh
StpupiviUXG/xUwQU1TO2rxhco7EB8SMwPn5N+HH+O2NPVB8W/3a6bOA7kaX
pkfSjejz+iXW8zjqzl/B78EvS4+hm9AV6bH0XfRl9FC6Ab0YCprje7zZ+s+B
WVDF+PXxDbHGapgpvp3YGbiDezEVd+GvxL352dVcWWx/NTeFavRgXNX8G0Y+
3CSu+QPiXcSb+f3ww7COfggXjftgLkXwTjW19iLvwoXVWIkugve57kLvxa96
t6vQ8/CKjPQ9Wg5z1NNcnubGOmDsdkn6fm3Vp7r47fhDWKhfhnnczqsDt0Jr
3mxzfBLPhFK8WbiMsWvRV+PJrovQL+CXoCQ9Fc+By+m5eBrkp6fjPepZqZ69
udPaos65+ENtA8VswCvVcx29Au8zxhneqgvVEu8f/Rm9R/tu2AIneF/iU/h7
+JguYI7H6DX00fCNscO43+KC2sbH3PkVrMsOuhw+rm2TmG9wJ2MN4jeOPQ6K
6bPPuN/EmvCLuy6vz9f0Vbhw7Fn019rz0ol5XYxf90xUjr0o5iLvfPm/wJ31
WSW2kDVvp72g+Lb4J3Ht8TL9HuSVl6oM7iPO3197V8RE/M94IN7FfyyeHwFP
Zk/9Qa738Afjlvyf1FJQziGut/EfjXcw9lp6dOTSPlBthT1vK9T3i+sC4j+l
z8d3gO4rLkv8jfH+w9f0sNjbxCT6FRUz1Jx+9MzMwPdlpvtta9wfbxc2IL4F
MdfYl2I/VJtlTTqoeZs8r6hhKz4EW+mD+Bhspw/ju+QaYY734HvhCToLt5Bn
izqLq6GTtV1h/MJ/r23eyI/f5fURvwQ/iHtAd+ioLX+SrvsNcD+vemZaW9S+
NH86l+Hm1QafVOujYr6Ldwevh3/BG+Ju1t5Lv+qxZ8D18IoCKprkGe3z6Ar0
v+MbEd8wNd+C60Bfejt+WUx5MT+KqQtlrO0uc++g7jvUUBrfZT1awH2wQp/6
+tbOl75P/pJ4BPfLoZy/3q8XoZ7YKbh07IlyZom/lm5O/xjvpesGOl6RO91D
Yoz343slydu4jHy3x/c99kCxq+Fq8f/jb4z1FXMVvQvP0vcCddYSX1X8fjlz
uj7NzxXzcD1Q351y1KMH07voWfpeLmYHXpqRzjH2sVvk6RH7v5i51qeccU7x
1rjuqu9tuEasl5gj8jXVrwE0gUX6l8Kz8U3xfIhpI/4jyNL3VvwlXqy9rLyF
M9Ln4Zx7mpP/SNzjHOn5JM5VJXBfAavk6RrnJnpTfI/ofvQn8S3wbAygt9AP
8AfRG+hh/CH0l/QYeqK6JsGEgLrr4In4dTVUp9/Az8f3kV6LF7i+ht6EH8dj
YTi84roafhU/iUfCCNgS5ye8GW+F8fQ2PA4/Db2hYZzVzOkoXu8+Lox7YB2e
Mt51MQYup+Z74xtOV4qzkPrvE/8Jb474EuJX457i1+DKYrLE/C7+iejDfwFX
jXML/wS9Rt/XxF6ibwV+M35rOY/xP44c/KniGun7Ot6srYO2avTMGJM/A6/n
38a/jL+R7k7XoD83lw9jveTZwC/DP0mv4nXW9884+4mbx/9B+3euF/N/x5k5
0+cgFx7tnk+AxyErzli4NW4f5yO6OZ6MX4BJcW2Mc7w7zKcCrsVrgRvzf4r9
V12N8SP8Jvhu/n9if+S3xE/wW+ECaqtm/LfU1jD2Sn4jfH3s6fTtuF48s3Tp
OP/GWYNuhutCV7o+ng7Z4/nCjWLviWfBWG3iDCLmPjzD+pfnrfdM3i7mIK+k
+ht71y6Nbws+zb8ivkWxn6mrir4VcLl4r+jyMSe1DpFnr3yltF0aZ2w8M85e
/J6x18lzNM49rtvG2GLa4Sb8d+K7Jb5UPIP8K2Ne/F/xF+Kb0cvog3Geij2S
3sK/iz5L11TzAmPV5z1krBO81eZ+MtZMzB9xnhPzP945+BWWiv3VO/4+zuYF
zw4XwDLXJ/jvxDcBhsWZBN9k/h/gg8a5wxhD1bI7X+rHM1MTt3TvRvH38JvC
fPoUfoA/nf429uz43UIfwY1gEn04zrliFsfvldgb4XH6DG4M0+IZxnuMM1vt
F9qXjtOf0MfwndqeErMX3y/Pc/Q39C1q+kjNh+MbJK6K+O/xYVhIH8KDYk8X
cyz2UfGf0UdiD4tzStwvvB1PE787I/1uxnljebxn8Av9Hn4rctAL8RI4Sy+O
35DxfOqbV57h8q51HwbHPhnrE+dZXgFtR8Vk4GGuD4npHt8leMZc9uMftH0u
5/HgeObEr8PH1ZwV5w68MjN9d3e459t4ZcW/HOdBGEx/hL+KbzGuo4Y/YAdd
LL5p7n1FqACbcqTnh5j7TmgVc4mzLVyp/ZJgaE6XwYdgnpiDeAGeD6/D264b
4gM4j9gCkDtburZxrtuKF8aax36AG2irB3XhsLbFcd6I+6BtGV0Yv6pjOXOs
hRdDZTqne75b3DgxX8SZPM7jMCV+P8i1HbbBXtgHe6CHuCW4H95v3c7Fulq3
/bwD8DVcFeuK+8e84l7jDWI6W7d34h65V++o6Sv134MHaj8ifkCsM9xp/EW4
CTzHbxpn9viO43txF1hNXxbviPyT4mwWv2P5O+VshY9CfTHtjbmI3hDvNJ4m
9sX4DQL5Cnin1DVFnoraDsbvFNwV9sVvGP5+3Je/NOqRq4962uJisb70Rbgg
zguZkCN+P8RvMXxMnj7y5zFOUdc5tRfCbfKk58M4x9Z23Y++OebmuhvdCY/G
/4BRkD/O0NnSs2/8s2YEDIPXGO/Hepl7lj6Dea3jNyn/tfh9lZn2vTD9qZvc
wRsZzwme7z7Uwb01LsyV9n0j/t/imeiYpOuWqX1d/K8mzmji5sf9kXMH1KR7
xd5vjj1xbnPsGc8HPAjXae+Oq+G58l4b13FewnEwKhjPqeuP432QbyLObZ0n
4KrWPYfn80a5r6Gzx/+M6KvzpYfVavR8fVfGb0R9S8pXIu4FtFJ3f3wPniXu
ZbU3w+/GuVN8Z/EHXFems3CJeD/Fl8SXwhV0JVw8rumL43efcf/A3cR3xq/E
HHHRjPSMVy/urfEOWKsfcqfngThLX5Tx97kgSc+IBa3RuDinyPebjqfgZHw/
zDt7nB+hkJhnxEwTk0eem3gLYt8WNxDGxHPAywbn6RrxPx64EX6LZy98nMu4
OeN8D2e0/RTPZ/b0nYhnImquZIzNxippzI3aN8Ba6KXtXdwbj4Zz9EhcQNxY
8S/p18J1NX4pPAp+oYfjHMZ4jB4U+6Lrtrgr7s8/DUOgRt70G1rz7733mzif
WKSHxS0T3xNXgS50xxzpNzfWJr6jbWKf4t+NH4A36e7x+01t49U2Pfb82Evg
0bg5+mXAn/SuzLSu+H9QW31mxPOCz8IiMd/Gux77Gb8P/j8J9ajo
            "]], 
           Polygon3DBox[CompressedData["
1:eJxF3XW8bVX1NvB9zj331N7nXLpVOqUbFIMUQekSkJLuBlFQEOlGpSVEQpCW
7m5EQkBppFQUFESB9/neMX+f94/12XPsGSv22mvNOcbzPGO2rXZbZ9f+Tqfz
j26nM5DPxYc6ncv6Op1XY6w80un8ebTTuTv2O7Fv6nU6vx+teu3mGO90Dp/Y
6UyY0On0Zftpyjvk+24GHM22Y8rPp/1dab9QyrOn/Y9jzxX7+Yx3Xa++V/+3
2KtmfwemfurYlw12Oh+NdTrrpc1Zsf+Y+itTfny403k5x3lI7NXTfsoc90jb
11cy/hfSf/vUr5n+N6T/ivncJ/Zaaf+P9F059u6x1479fuwfpv0sGf+RlD9J
/9lj75X6b6fdjel/cM7prxn/w2w/SHndHMOZaf9U+v825evT723nnu27KY/l
eG5P/dupfzz1D2S802M/E/uK2N/KuPs7vtgfpP39qT8j9VPm+GfO/s9I/+9n
P4fm3MYm5brn+39n3wflu8Py3VFpv3jaP5f+V2W8FVL/h9g/zZhfSXmtjP+j
lA92jilvkPZ/TvnrqevPeH/Md6uk/b/S/5sZb/7UH976zpX9vxT70dQ/mO3l
lDccrevtunfSf73Yj6e4bNp/lvZ/jH192s4be7bYjw1X339k/G+M1Bhs3/el
/3Oxb+6rPvo+ku2XKb+Q9tfkfJ5Iuxcy/oGx10j/qTPu2X3VZpqU58t2a8o3
tH3OlO0/aX9q2n9tpO6XZ1NeNuWPczxfTf2P3S/Z1su5P5H9XdxX95x7c8nU
/yt1Q7GXSnnnfPdB7EdzHJ+O1yf7qIy5WsY8s1v3wU9SHs/59Pxv8vvsnL5f
Tfsv5vO2jPVW2n89bU7MeF+L/fvsuy/138k9NZ72O6Xd12J/ljZfyfjfTf0d
qfso9oKx54l9V+wH8rlwX/3m96a8cbbjUr9hxv8ox7ZJ7BMcn+9S3irbkv7H
2bZMeZoc3zTZ3x7Z30rZ3zI5noNSt3rqHsz4S7v/Yn8v9n2xt83ndLFnyvj/
zfifS/12rf7+1L+b45sj9hqxH4i9XOp/EPubsR+KPe9oXWv33m2xfxT7czn2
W2J/FnumHM9cOZ7P5Ro+md9q4dSfmvanZFtktDblTdP+9rQ/N/am6f967MEc
/27pf376b+l/mf4zp34b93eO96DY66Z+79RvlPp3Ym8Ye7/Yl+T8t0n/NfPd
uWk7f87j/diLpX711M+Z9k+lbn/Pt4y3d/b3Yfa/bOrXT/262ZZL+UvZNkx5
tWzLpLxZ2v0i7b+TMf+T63VL9nNc6jbNePtlH4dkvNlz/HemXSf7+yTffTnF
zWPfnfGPSP0S7bf9JPZhGfPJ9H8i209Sfir1V6V+t4y7Yvrvms8pUjfc7rlu
2gymPE329/tenbfzfyvbocppM2XK06a8uX1nP/P6/+Z4383xPpnxr8z4m6fd
1zP+aqn/vudf6t9L/Tyj9Wzx37k5x7dCtmPavXZLyuvn80j1af/vtF839hGx
14/9r9hfj71b7G/F/mfsr8TeNvbKsf8a+6uxd4y9auy/xT475/NRjvdHOd7/
5Xw+n/3vkPqvpd112d9d+fxijvfitP98zufB2MvGvij2LP7z2ZZK+y3y/b1p
v7V6/6fUf2z/+e60dn/dk/LcGf/Q2BvFvjX2XLF/GHud2DfF3iCfR6tP/w/T
fy/P6Rzf9Nn2TPmcbl3nn2a/k/I8mC/990z7x9LvnVzPVfO5U+xV0v/v6f/l
jLkrO99fn/KXsu0be6XYv0v5F91633jv/DfnP1X2cUDOb+9sH6TNHzL+b/0f
Mt71qX8o9rnt2ThL9rdyPp+O/Unq18kxvZH6F2Kvmu8Hcny/zzE8F/t/qV87
9b/L51qxv+WZnPLbaf9Eyt9M+7kz3gk5nodzPLvleD7M/l4frfHtZ0LGezX2
w321D/t6P9vfUh5M+/vTfvf0vyj9X037H2S8jXKOf039urHnj7136i/3fEr7
f6f9v9L/vdSvl/oFUv9B7PtiD6f+gdS/6J3RV8foWP+R7Z2U1/JuSPuj0q4/
7+KRbEenvG/Gvyzjv5b6H6b+MNcp9gyp2yLnf0w+B9K2k+3YlE/KeMtkvCdz
rfvT/q9D9e5/N9tH3sX2mfr1U/5i6r+Rzz/F7qTvep732d9rabtP7I96dR0d
6we5tuunfpPRer95zw3m+j2R/Xw19b9J/ayp/26vjuPolKdK/V9G6/fyu02M
/duMd3jGPyzbFSm/4n3cV8fwZsrTd+v8nOc3c3xzxV4+9uGx14j9btq8mLb9
2cc9no/5PV71+6d+3tRvG/uxtH8p9vdjH+sdaX6U4xwYr/vzndS/me20lDfN
GEdkrCNzvFPk+I4wL0zdF/Ldbvnuj7Gfiv14tuc8G9PnJf+d1P8rfZ/Pd8/F
/mO2F1I+IvXPpPyHbEf6b2V7NOU/+R9k/yuk3z6x3862r+uU+hdTfjH1B5pf
xr6njbV/7Idy3Tbqq3v8xZzDOTkfU5lvxz57tK6Za+d3nCft/5A2C8Q+J7/H
7OYvsb+T9ubIr6Q8Ke1+lvpTs40N1fvd88dzaMb0nyLf/cLvlf7LpP/fUv9a
7Ak51ntzvu/FfiP2xNj3xZ4h9noZ++n0/1v675fjvzI7ezbjHBR7/7R7P/Y/
sh3g/kz9s+1aHpz6U9N/Jf+/9J/o90r9y6l/PfU/ij1b6nfJ+Lel/t3Yx6f+
ldS/kfpDYq/ivZD6F7MdmfLJqX9D/2ynpDzUrZOfKnVP5Hg/zHj/zP66sR+M
fUfGnd/8LOc7k/s398/8aT9PtgXT99js5wspz5j2W6b+nLSfkPanpf30sZdM
m3VSf2rarT9e81Tz1R+m/tupfyf7eyXtN873C4/XvNP884DUfyv1m5lTpP90
toz197R/O+03SbtF0v5E/4P+eseflPJfU/966tdOedHUX+t3i31Gxpsu423c
q/vqKGuL3M+fpP3Hqd8o7RdK+4Wyj29krBNirxP7P6n/V+o3jL2g+fNg3Vsf
Zrw1M8bn8v2F/p+xvxR7gxzvdbFnz/ezpv0z6X9t7DlcJ/Pn2BfEPi/b4ylP
zLZqzvdPGfef47X++EPGWi5j/Xe81i3WLz/Pd1/Nd/taZ+X4Zsk5fDf20+l/
RepfS/0NvRrT2LOm3efTf5vRmj+bR/8v9lQ5v0+9H7JNYW6UcfbPeBMn1P98
hrT7Ver+nPGWH6lxjPdi7BWsFz0P/f/af/KtjP+7vuozmPEWybZG+y3WbfOx
hZxv+p+Z8sa5Pr+JvUjql079a+n/x9ibxV4m9kD6XxL7lbR/LO23sa7JeH3Z
tnUNU7+gtVrKq6X9cOzP0v67sZeKvWU+J/bXnH0r1yr1i5lvpLx66mfo1vPL
c+xb43XMjt15Lxl7Yrd+T7/r4rE/8s6LPZpr81CO59DRmp+Yp/wv57J5tmUy
3lLZ5vC8TL9PUv/vbN9J+ZRsa6durfYfmDP958/vcXf6v53xZ0mfBVI3b7aZ
U/5u6t9K/ek5/9OyvyPTZwVz0/aMXyBtvpLy0Sl/O/0/tp7xrMrxPZz2S6R+
zdTPHvsPsf/r93e/+s39t7P9JeVJqX/U/CvtFzIfyXjfsF5J/QapX8c7L3X9
2f7bzmWx8ZrvzhH75hz/f3Lu3842W+yzcrynZ7wZU79Vui6f+qtTN2235lLf
T/9V0//T1L+b9uPZ/yNpP6s5Tu69t2PPnvb/zT02TfrPkv4Xxd44/Q9M/6+m
/g3nl//D5ml/fexfe//E3j32dbEvin112s8We9V8/9vx8ntkmE522/mneyXb
CanfNvU3pf7NbvU3ztR5HmwyPPm0Oz1z/pRfHCnb99el/Qvuv7SfPvb5sR+P
PU/sKWNf6P1iPRF7kdjn+L/lc77Yz+f4fuf/k/otYi+V73+V+metMWIvGfuX
sZ/3H4o9a+zzrCdin+j40n/GnMhz7ucJ1UbbHfPdNikvm/a/Tvs7rWFi/8Z/
2e/DB5Lr9/XYv83+t8mJvZX6/8aeN/Vrpf7g2HfFvjT176b/AbHXzPfT5nqs
nc+DYt+e+stGqv0hsffPtm7K85qzpfyv1M+d8d62Hot9T+wpYn8vbY6J/WTs
68xXrd9ifzPfX5njfdo9H/t3qe+ZO/KPNF/L7/w/Mv49/C+xH4n9eur3mlDH
6FinTv2NKf8l/WdL/2Hrv9gfxZ6nXa+t2vFPsh7zu8e+P9uRKS9qjZ3yBu03
WyzbT63Nsi2e8lPp/50J9Zv6bf/dLV/Qwxlv6oz3d3OY2Ful7Q05vrVyoz2U
+2WX/B8Oy7F8O/YD3ne5n59N+3vS/otp/0z6Tx/769Znqd897Q9P+5Xy3QWx
t4r9E3bqr4m9Z+yfxn5kYt2b7ulHzdkz3hEZ77GUp8mXk9J+49R9P+2PTsP1
Y/8+9k+y/xdSv675dewfxf5j7P+l/3Hpv02O/8Yc/39jHx/7qYw3Xerny/ff
iP1E7Gu9Pz2v0/+I9H8+9Tuk/mepPzXbjvxv+e4P1tfZ/xHZf1+2lVO3Yrb+
lFdJm2Nzbb+Z8X6V8R7N/tZWn+8vG6/rvWHsq1M/nLGe7NZv8+XUX5r6r+Rz
p9g7ZPtqygtmWy/l36b9uRlv5di7xr429oWxd8oYO7e2F/Pf5HOtNv4Fqb8+
4y8ee4lsN5p7jZbv6Xt5Xi2b9n+KfW/s7WIvH3uTjHdnX71bvjRex+34r8x4
52W8azLG/LGfiz1z2v4+9lITap+P+W+m/XaeP9lWGK76JVP+ddoPjVUbbR3n
2Z43o+Vv4nf6cuzLUv+51A+l/mjPj3yenuu5Sfqfmf1v3qt10RPmJvn/3pD2
s6f9eNqdav6f+gn57R5P/SypX8zNFPvR2DPH3jvH8Gza/zVjzDVW7d+PPWBd
Hvu3wzVXHc53V6Q8k98/9sZpf9ZIPbc8my6MfXbs67L/eWNPne9PzP6vGS5f
8qDfyNxmuK698z8j7a/kj4v9oWd6yktl/xOz79+n7vM5vsvsf0Id01XD9Zvp
b5xTMv5y+fxe7Acy3hXpc7DntnsvYzwW+3T+x9h/S/0dxsz498U+Kt8/nv6f
i31h7H1iP2Y+4fkZ+960vyrt5+Qjj30i30rqT/KMiP1ItuM86/TzbEr729J+
ul49bzx3HrW+yufz7o9sp6U8f+pfTfnclJ8ZL/vq2AfGfna8fp/3+N+tW3L9
f+a94Xpl+3nKc/Rq38b6Q9r/yqfrY/2X/f8y9kux34t990i9t7y/zo99Wuz5
0v/l2P+IPWfGnyf2n2P/PfYcsTfK/fdSbpGfZv/PjdX/ZdH2+07w7s94y8S+
JPY59me+kPthMN8fleM5N/Yn5mOxj4j9m9gzp/1o7ONiP2y+GHuB2GfGtni7
1tok4x2X8S72jE/9SbE/zbF9oVfn7zo8P16/h/N13i/Evjztu7E/zv/l+Nj/
y+eY3yb9T/H7p/6f7l+/VeoXSf83Uv9C7Blzf22fc5oi9oTYJ6T+rLT/2Pw4
9pGxr4j9+dSfkfH6/B/Mb2J/lv0caz2W8R72+/DDxP516qeM/UnqfxL7ktgz
Of70/yxtL409o/sz7Q9P/b3mg7GniX1a7HnyuVLsy9P+lzn+283/PA+z3ZHy
/ebwKc/rOZD2D8b+9oS6pq7trfwDKV+a/hM9r7N9M/b8aX+G9Ww+53b/pf4X
GX+u2F/zbMo2x3Dtw77mTPkXaf9EzuNu/u20PyHtL0r9dO5P783U35f6a/gO
rGVTf2Hqx1P/i4n10roy9mjsE/hxYl+Sfn9xv5mzDNdzyvPql6n/Wfqf4H8W
+wP+ptjf5wPJ8/B3uR//nf6r8G94n+V9c1Su5zqpfyz2D2IfGfurnj/pu3X6
Duf3XT71P0/9Dun/cPouks9vxV4s7f+Sfa2fPnOl/VZpP5T2W3XLF3N5zmvb
8VrzWvvuH/s7sXdM/5PS/0TzxZS3y/j9Ob4zU34t44/EXjt1i2b8fTL2at3y
1/LbbmI88ZrUL5z6N4breDdJ/Xw5hmd7dTwbxZ479jMpf818Mfbp6b+h+W2O
c6H0XyD990j9fBlvsdgLxn6dPzLtV037FbMt7F7LNrffJ/035l/gl0j7Y9J+
LGOdIY6R438n352Q8s+yXZzyddYkKa9uzpDycWl/Yva3ds7v8tjnp+6t1C0W
+2ft+j7Cv++6ZX+L5vi393yIvX3sJWJvF3u1tHnT/CTjHZ/xtk3/j2L/PP1f
NX/N8e6R9sum/cup32K0ju0C/lfxv9Rvnvovpv4F8Tf+xNSfnfrXU7967Fti
n2W95f4fLf8EP8Ub/guxb039L2P/Jfb2sQdSf27sN9Vn/O9l/EUy/osZfwox
M/GX1P8m9Wdah1n7pX6bnM9fvVNSP2fqr/J8zOessb+Q83s5v8cG3VpvW3e/
lfGWT5vZUz972l2Q8jfy/Y+tV8UgUv6z+zD106X/dubu3tuxZ469U+yZ/F6x
R3yX8tQDk12d3JWdacUsUrFwynOnvBv/a+xFYn8x2/sj9Tv4PXYQ70h5/W75
3/jhXucPSptFOxWzEruaNfuYyfFmvFe9f2LPFXvW2K8M15jGnjffX5jzWSPj
bd1fv6Hf0vlMrKXl5LXVS/wwKc+Q/ttnf6+JCcb+XPqfm/7dXO81Yy8T+4rY
a6fjbhlr+Qzyaq/up53ESrKdl/JcaTd32n81472T41nF+iJ1C6T982m/XOq3
FG/gC0/9PN1aW8+T+j+mfjD7+0bql06732Z/q+b7H6ReEH3plJfg/1Gf/m+m
/6bd8q/xs/3Fepq/yfo19S+l/g1+3tjTx94x9bNnezQ/0PHmfvn/LZD2X0r9
fKl/zXjZ/1Oxf5zv/5z9L5zPb8b+curfSv2n5nWuT+zdM9bPPYf66z/gmWBe
bn6+b+qH03bVHN+3Undy6jblzzafTP22qT8k/afNdvOEmqOYq6ya+ptSv03q
D4799RzD7bG/F/tHnl/mx56v2c8zqZsh392Wvofl2B7K+Guk/kbrj9Q/7f+Z
7ebYW6f/j9N2LNslab9v2t+T9gcM1rPFM2aPlPdM/15u6Ev5w9J379jnpG7X
2P9wP6T/2em/W/rfnf6bpf7Z1O+X8Y9L3Xf402PvH/tY6w3+qdiX+M1T3i1j
nJ7+O3m3pf80Yvyxfxz7QfEV8Tj9s7+nHL94jOspNhN7zdj3x94p4x+avnt4
p6X/q/n9Z035K6n/dTuXJ1y72EfmfHbOdvlozevM715L+5vy+8yUMW6PfWi+
fzj7nxT7t7H3j31v7K+mz0XWh+bAGW/PwTqXS7Ptxdea9qe187nN+zz2VbEP
if2A/ulzftpunuP9Yep2SZ+zYp+ZbXvPPH5952NNkLavjEyGAXR2tiZwvtl+
Ffu76X9Kr66h/TuOJ73f8t152d8Psr/7x2udab25V9oPZKy90v6u2Jfn+/fS
fo/YU/TVb+y3/pW4r/hPtgtTXiNt/p32R6f/SRn7P7lve/4vuV7HmA8OVlt9
vAN+lft7Uur/m3aHZf/7ZMzx1J2Y/j9P//1iTxP7yrR9P2PvwgeW8X/NXy7+
lzYLZuzvZeyRnPgKo3Uveu+90uq3yv9nIc/ilDfnP3N8qf9T6rcarfen9+jL
sb8c+5fej7Ff9DzP9p75c47nhPQ/2X0c+8jY3exzS/7s9q59Seww9liO94TU
/6xX7yHvo1NiT5X2Pxgtfza/9gdjdV7Ob7psV6W8e+on8d+LKad8QLZ7vI/T
/9SMt/Vo7d9x/C39d+SDTtvjU39yr/ro+5vU/z31O43WtfY7/XWs1vArtvnm
7bneu5oXxj45284p7z1ca5NftTXUYNqflfLuKd+Z9kOxz4y9Z+y7Yl/nfZLx
f5b9T53z253/I/Uv5Xp/gf8o+/8kx/uL1P+C7z72tH11zn7bg0arv3H+5fc1
r03/P6f/9Z5/+e6N9D8s/Y9J/8VHC38Ak7CE2EzqD0v//bPdEHu5tPlf+v8n
2/Lmj9nuSvknGfe1HO8d+RzIWIPZ7mrrU2vV0ex/4Yz1u3z30YTJUIDO5ikv
nPo329z25XzZM+ePPZL2C6X9d3qFq3rau3VS+ec+5ruN/YXYX7P+zb4mpf3i
/EW92r/jeDXjfSn2JxlvzLzP8yd2f+rHYy86Vjip7TsVf4dHWpdfqVOYoHUG
Kg4uHr5ei+eLry8de642Xxj1jrW+yTEtmPHmGCj/9RzZPp/yzKm/NfWvp36R
sbpmrt2tGeuVHN/VwxWr/Sz/oZvNR1P/WexPrTFSfnC08D8wPfBfvlN3e9q+
nv4rxR4aqHN27n8ameyumDy3MR9a2TGmfF/av5n2U8b+XfpPm0ZLe37Hvpv/
IfaSsaePfUfs6WMvY/0Qu5v+08ReyvuePyT2bdYl4zV/vLW9/7wvxRjFGq+N
Pe9IxW3Eb5aPPU/suWPPE3u72J8M1/vyxvb+8z7l/9859mqex9nfjPnuTu/e
9FvW8yJ2L3X3pu9b2f++nrGxp0z9EmN13oN1iJPneq+257f5xQ5tPjih1b1o
/3xwKc+Q75cbK9wP/M/02Wa0Rmj+dvOJndP2Hfdd+233G6t57Ofb/NX87k1+
otizxd6lV++PadtY5jfPpf1ssb8Se+6Rwksc1u61g51f6g/sFF4E/uTv2pjf
xT7A8af91rFXjP2D2NPHnjP2SrG/n/5jsdePvaTj4xtJ/wXMt2Pv2qv4wXKx
52/zoyUGKv5qTrdQyv9L/fLmpynvP1bzLvOvFVof81jz2e3aPsVvt1Cf8oFp
v2yO/7ttfmn+6Dyd7+ytzZt5D72Xe30/8/jsa2//7f6K6e7TvlP3t9hvpe1f
hgrLs6eY+HDhWOBZlmn/wb3Mc/sLo2QNCC8HDwIfCAM3kONbLW2Xc3w53+HY
a8VeyvnFnjr2prG/5PrFvtYcqK/wite610cLT2N9sKd7JfbXrQ/su1fxyZXb
tTtgrOYB5gPnZttsoOYV5hcXZttioPzWF6R8XrYtBwp3c2in8ELwbOZx57S+
/4v9xYx/bOwN/L88X2LvF3sNv7/110DhbWA2Vx+oePcerXzQWOEs4S33bX3g
5o7rFIbJmHBr8GvwoPBJcE/wTzBym6a8ZMY7PeVNzE/Hal1gfbButsVTHkr9
6ikvkvLe/pux12l1+/YK57St50O7Z+HtDmhjHzpWuKYdOoUPgn+aNfV7x97Y
fHqscKvwq19u9+Q3Biqev2t7RsAlHd2pNbU+cGjwaKe1Y4YrcH+7z+fM/fBz
x2suEPuXOb4r8rlq7DW83wYqHmH+bn4vPsFPz1//ZJuz+V/7f9/RnmHiBOIF
e6TcJ54fe4PYu3kAjVRcQ3xj59if5fxuiP0F/g//nZH6n/q/vp7t0JQXNcdr
5aGR+t/6/96bbceUv5D6GVr50+Faz1u/W6+Yb4uriK882PZ5WNpvlPLBAzXf
5Pfh/3miUxgD9737/1G/+UD5MV9q7QdHyo/BnzHaVxhT837z/x+nPHGk1hHW
E09n22eg5v3m/w/7jQZqnfZUq+sfqXWI9cgznVqD8UvxT73SKUzzJWn/ccrH
DtR85+rYn8Y+eaDmdxu39Yb5ivWMeaP547ud8tGcZB6b8hEDNX88kp+pHa/1
nnm2+fb2saeIvULsTWIfHntkpPwqH7X990ZqHvzPNt547BmHK754W4sXei57
Pt/ZxjjePLBT81f+In6W+9q1mDRScSzxrKvbPWMe/Mv2bBht64Gp2/zWfJQf
ZcN2/tOM1DzPfO+/ncI8eA55Hk2VPicN1DzVfHXmhjGxTrBegPGF4eWHurw9
e6YVj3E/tfkzPMqBzX9ofWB+/cXUr9ipsadM/SmxP+zUfBReRBz+rdh/7xSG
RBxOPO75TmFUNm3rAf4r601xN/G3P3UK43x86lfI/i5L+exexcnFy5ezHkz5
8cGaj5mXfWGkcGnwafCO8GLHpf9XYl8S+6z0P8b7UPw99k/y/Dgy9jzWQrEv
TP0j7snYP8r2qGuV98XRKT/mWZfxHnecsY9p34nji+ff4lqn/i/eb7Fvjb2g
eG/2sXTsX/uvpfyT0cIrw9jCc8AlwSfd6D5x/bwvYv829gW9wjfDv940UJjc
ZwfreeS5NNdI4c7gzy6M/bnYN5lvtGszx0jhJCbPNz2XRgp36X3gvTDbSJ23
85872/kDdZyOd6k2pnWP9c/d7T8BX/Vyw6fB790xWtfLdftpzu+u0bo+rtMR
/NOxt499b+zL0v4ez4DYO2a72/7MV1J+IOXLU79O+uwV+77Yh6f82mDhm++I
vUiO97LR6m+cS3uFG4YfhkeDr1oq9mbtWTVhpN7j3udXtGcunJf3g/fEjKk/
LOPNm/5nxz6jVzh0ePQnYi/F35r6TWLf6dmT+udTv2b7fRdK/dP53N1avK8w
bU9mOy3lWdsz/Pr03zflh1I+Mudz1Wi11w/f4fDYC1ofuhaxbxwtPCsME/6E
fvov31eY3vNSv1nKt6V8cerfzvFs3u6/hflPY28b+/7Yi43UdXQ9D832cMqv
DNV8yLzokNTvAFfRXxjCXVPePduN/YWx235i8QEu6iv80u/MJ9P/132F14Jv
GuCH7SuMC0wMPO4+fcVXgMF6w/899iJ9hWHC53B9XCf8li+k/eV9xaeBj3rZ
79pXGCcYplmGyvb9l60Phoqf8NJA8RnezOcdfRVTxilZbqjwnu8PFP8F/vP3
fYUvvTX7Wzj198f+a+yVUj9P7Jv6io+AX7NY7Htivxt7FXPjoRrfflYcKTw4
vDm8GHyxdtqLceMA4W/c2Fd8nZt7hf99sq/4JLf1Cp/7UF/xP26JvfRQ4YPf
Gyg+CL4F/sffB4pPAe92fl/hyW5M+xmHCv/2l4HCs802VNfXdf5K7DVivxy7
L7/FBiOF54MPhGeFr9wg9evF7sXeZKTwZ3+Ozal8d6/wfPB68FDwRasMFb7s
44HCSy8zVPyXjwYKfzhn7Ktjfxp73dgrDRVe778DhZ9efqjwyP8cKDziirGf
jf0f/8vYD48Wvwff6epeHZfj2zDbgwOFJ4a/hR+Dp8S/eayv8IO3x55rqPBz
/x4oPsyX4dpiXzlQ/J2h9HuzrzDQMNdrpv6llEdS3nik8NHwjvCn8NhfgjeL
fd1A4RO10/6cvuJYrTNU4xl3o9R/e6juf/+DDUfqurv+B/YVBwr+Cz4SXgte
bPu0H8p/a8rYm6b9hbH3iv2l2DuOFL4bfhp+FJ50F/HX1E8de7ORum8n3799
hfkWj5ot9TNNLL7IFmn/99RNEfs7I/XJhhmHUbVf+8exwYnYNM+kz8POpXx0
ylNnvGljTx/7qNjTWTPBt/YXR8JxOB4YUhhd+7X/WRuG9XPwOSl/nr+Rv6XF
y/BZnuvVfuzvc/2FgZ4t2yopr9xiQPgk8H5ztXgdPKl67eDx5hNPtb/Yx44V
PhA+ds4Wc1y5W/78eVv8j/9+y9jzt/jFFmN1Ps7ruLH6Xv2cDRMqHrBZi2eI
ea4e+5m+4gPAp7surs8M/YWRX6Fb+NkFm3/zG/AwLTa32XjeQ3C2qV+yxe/O
j70LvGPsHTxv8vk1scUW41uvW/eD+2Ir+M/Y27XYzHfhE/K5e+wvp+1O1ur5
/BJ8X/tu/m6NZ9zjc35zd6teu9e8X7vV3zhbZrxFW3xDfOdPqf/1UPGBvhJ7
54y/Req3iX12vv/eeH2yF079tv7v+RwfqBjaNAOFJ16jxRP5hFfM56LwkQ1D
t0m3zt912DrjXTBUsScxqEthfrvVXr8TxL/yeUR/YcpgnuZM/bIpr5nyian/
Tfrs2K7vriM1hrH8BruMFI4FnmXLbDdPrOeU59V3st01UPhieOPPUr4r539v
+v8m/bdN2+/rP1TvR+/Jg2LfxX8Qe2txrdi3x/6l+FHsA2PfGvtM/obYB8S+
IfapsdeLvX/sbXP8J8deN/YpYjup/3nsdWLvM1J41eVbfG7fkeJn4IdsFfu9
HN921hV+v/7ieNmv/W/cfOyO2/HjdHxvYnEQcBE+zLiH5novnPXJRhMKbwW/
tU238GRwZZek/u20+yD2UNr82z2YY/xF7LXT/mS+5W7xWfFafy6eEvuS1G/j
OZPj2zX2hbG3mFj8s509V2Nfn23HicV3OS/l7/Lh9Oo6up5b9FfM/ivdwutu
kPLbqd+oV2XXojepfne//xL9xSH7YKi4Dodmexq2KfZDKf/EfTNSeBr4mcMm
Fl/qn4LB/Kf57n3Xvlt8jR+n/mdj1Uffs/LdMxnv3aHyNfE54ZfiD+AH4OPg
Z7w8VP4pfqofpX67seIj4CWcOlb8GNcTZxUnEj4SHvKaiYXfw+f6X+rfS7sf
5/rv4r3bXxwTnKJD4KpT/s7E4st57nn+HZ9ts4n1u/h9zugvDJn7yv11Un9h
2v6W/v9J+YcpH57+93tf9xf+5IfeN0OFXd833z01XG20xTH7+1DxavFrYXgO
mVh1xoNRwkF7ZqiO13EfnL5XeI9NKMzgVSm/6v/eymd5HwxXvXbnWx/mc5YJ
hSk6MOXzss01oTDBF3hmdgsfByd38njhYuBjbugvTMznxNAb3gX+7Xc5nhNT
9+3Ye45U3Ev8a4qGmTm/W3wmvKZfjFXcS/wLXgre5rxu8aPwpE4bKxxUt+Gf
xM8+jT1N7BO9f2JPN1zH67hPjz3GRxX7HP+P2Ft26/nlOXaS+X/6HxP7W/4L
IzUPMh/CMcRZ8970/lw621opX5X+X8h4Zxt/rHCL8ItnTSw81kjsqZp98kjt
1/5na33O9L6aUBgrmCv3tv/Hptk2TLk7XM8Tz5VT03+1HN/zfcWPw9c6Od/P
MKEwSjBkj5oPp/2p3i+pXzr9t55Q+D745vWHK94v7n+5+yvHf3jq7489Ff/1
cOGXb5xYePP3Uv8DWKzYU6Z+i/yn9oi9Wtpdkd97h27hM+E0L4Kfir1QuzfO
FC9qeC947cHY98VeLfZl7oexwjvvOaHw7SNjhSObsv1+8HHrZNwfx77bc9P6
Pe33Fc93bcYKVwZf5nzhtX6ez1tzPLf3FwbtoaFaL1k3nZj6zw8XXvWiiYUn
/VvGu3NiYcOvyfF/Ybjwsr+aWHjPNWIfGPuW2Bdbv3u/xb449kD2/xY8SXt3
jcX+1nDhW+BcLkn7mcXIJhQeEV70lrzPvm++knXg1NnfaI5vxJwz23C2vmyH
pP5w8+GhiruLv7/mP5jyQr3i64uhwbf/MONfE/t/sR/2/xiu+8l9dddI4fn8
f8/J90+PFw8BH+HBbG9NrLi2+PbLKd88UnEu8a4rsr0ysXAP8A9vpHzLSMX7
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
mrG/act1S+tlv5RXGS+dAXoDNC+3HiqNG98p074Z7RZ+w39nufHSpKFN83nX
IOW+bmn50PSZ0C2NF1ov9IzotdCz4Q/nF6dvQ1+HXs5mrT89Fvox9JfoJU3q
lt4q/Up6l/RXxcvF8elZ0iSkrUNjZ7JWYds/PSb6rPQyxefhBOgj0JOin0Pf
kP4gvRr4AjgPek/0VOFPJt8L43W+tH4mZBvplv4hvADcC/2FZds127ZdD8dL
K7GXbbxbmqxwNPA0tBpoJtBOWLCN73rBO8A90I+if0Xvij4i/SCaQ3A78Du0
iugLiW/AfdAnWqZX/A6aBPge+Gj4bPD5+AP8yPzJ4kLPj1QcYI8213lqpPQT
/jmh+Px8TvxX5lp8oVeOFV/iXxNKb4GGw+V4EM1/Tb+An5e/lwbKDSkv0Su9
BJoO9BnoJ7wzofRdaDycNVp4FLgZ+lXbp/6kCeWbem6keCX4JTc0HzYMKqwk
zKQ5Bn7NDG1ug29Erw8eA06DfhN+Eb4SvhB+1XYZ/+gJ5RvjF8Bvw5/BT8FH
wavwwuPLe2ak+IP4b/gq+C3iBuIHH2frDpZexL8nFL8GR2b22Eu3umdj39Er
bA+MDy0pmB1YB5gHWB6YH7Eg/wFYIDF2sXaYhh8OFQcXF1fsFT5gy7Hi3h4i
Ji723Cseru/UwTHAM+DMTuaejhRuAX7hqKHiKOMqP5nxthgvDAFsBYwFbAF9
JnxhvGF8TJxhuBH4kTOGCkOjP74sDMVLveKd4p9+CzakW3iFlScW3xRHF1cX
dwDegs4SvSUalj8eKn0n5wrHQS/Lc8fzZ75sB3imdis+K05LHwt+gt6SfdBU
hUmBZYFpgVVZqfFp8cc3Gi9+LT0yumT45DAXtJqMYSyaTeyLhgovAZMC2wLj
AqtC083z0XNy5fHCZOBa41zDasCcwJUs3M5BTA/W68/tmQbTAhsHIwfrQo+P
/iG9Q/qNMFCwVjBXsFE0vGCxYLJoI9I9/WmnNJZpCdNDPbJTuqf0kmHE4Mjh
yWHH7uwV1gLmgtYbTBgcMDwwrBgMF9wv/C9sF8648zkn5c3HS6MLNg1GjbYc
zUs4KHgo2pn0xuDh4OLowdJ8hXOCd6ItvGGv+PR49fA59B7hu+DC6DvS56RH
SL+SviYNQjgneCfaeYjXtL3o2dG7o1cIDwYXRq+TPhh9Lvp59DbpgT7Tri39
RJqSsHgwebT7zF9zOJN9+Hz5NCuPyhdH95eW5W3Zzm7xf/gRMT7aITRExP7E
EMX9xf/FFmnU0ICYlO1nKd/crf+7//3Px0s/iW967uHSx7irW3xEGkN3d0vT
RCxRTHHa4Ypp+05ZrJs+Fl8tbQt6FvRxFm7HQj+Gpoc4s3gzbQ8xedo0NHrE
6sWzxcuna8dHF5NuHgwCLIL1Lm0bGBNYE/qZsBpi9mL3NEZhU2AqYCv271b8
Whyb3gh9UPXawbvslfqL+0s/hZ6KmCxcBHyEWC09IHwjvCN6JvRP4B3oitMH
ogdEqwemA7YD3xAXD0YAVoDe8gX9pddCj4VeiXi8uDw9k126hW+BG9ot9h6x
z4l9h2ep+69XWBiYmJ27pfcKzwNXtHvqD+wW3oEuyJ780b3C5cLn0sKECYGD
WaI9g3bsFv4IDmmntN8n9q9j3xl7j/G6h9xLnlmwSQd1K34tjr1X6nfqFh4J
LmmX8cIwwZkc38a8tlv6W/RVThovDRK4CvgK2i/0SejT0HuhH0ODBDYDRqM3
XJgFWAqYClgGukb0jWi80XqDmdBHW1gKOu+wM35v2CQYHJiUf/UXNgemht74
h+1+oMEi5iHGS1MObgh+CKYIturjXuFY4Flo09AQpiUM6wJ/w38CS82n+vBw
4b9hxV4dLD1s/hDYbxjwNweLQ8Dfoi1/Lj8KfwqfC98LvD/s87RDpbdu3m3+
bQ5vLr9qW7/RqFqozZ/Nh2ko0lS0hrWWnazR2mtr2L7SqP9Wr9avOHRb5Bny
ICzIaOmx/pmvarww5zDkNBdpL1qnWa9ZUy3ZNjwGfAZ1MPuw+9ZU1lYrtPWT
nAa0LJdq68Xj2hpwoXY9+LT5fL7dK31POp/vjdcxO3Y6s/8YL4y79dA9g+XP
hmHnX3ItPxwvXVH6ojBdH7R5uvm6dYK1DYwzrPNC7Tf5UbfwLHBf/6ePBJ8E
90RvCKYHZoiGDqwPvSD4HTgeejv0deCD8OTx3+kK0xcWIIQV+6RX2DEYMlpM
dKzpWeMc4h56fopf0RmiH0SjBy4JPmmbscKMwFrBXMGSHNAtfSY6TfSK8O/p
K9FZom9knm2+bV1v7Q+jDvNL45nmp3sG5lzOCfeSNrDpciro6xrBytMAde1o
kImpwxB8sVeYF1gnmCdYGJgmGCmaQrBONKLgfOB9aBPRWIJzgXf53lhhHuhi
nT9cWAicD9wPMRGxkeuGSsvzlGzXDhXGCRYLJgv2CSaClta1EworAUNCO+vl
huFYoFd6W3S36HnR8KL58P1sf/Ru6xX+4oJm0+2i30VDjDYYDUwYFJgNWlIw
E3TEThkuLMVe4m0TSkOElgjNLvt/vuFXaHbR7jqr4S/m7pXeGd0z+mA0EmFE
YDZoK9KPoN33c888a59uaevR8qMn4ZM9WXMv5YFexYPx7Oln7GnOPqE002in
qadHQQuAPgB+M/41/jx9izPzeXN/YSBgIWAgHC/NMTaMBG22JyYUdgJfGz+a
PgZ9ka17tX6xjrl1vPTP6K3RXXtivDblY4dLX+VP3cLP0oWjjwmzCIcLjwvL
SCNQDBzGhmYofA28A13BC1v/dWIvNFx6nTQiaUFuPKG0I2/rlt4mfayzxkvP
cI42V6DfR5MQhmLdNobrK95Op5AeIQwrLUKah7CtMIV0BL82XFhDZVhXmFff
zdUrPazJuljjpSPjXng628nDtdGko0WnjiakmLzQ9S5jdS/BosCkuKfoR8KP
wZHRr3ypW9qE22d7uVu6i/QXaWQuP1wajL6jXfib8fpkq6NtSBOTL59Pf9eU
9xgprCDM4JXeId1aH1on3jJeGg0wBjBvNMnoq9MPpydPz50mPRwpPCntcvri
9OTvHiq9eTkU5FKgh00vm74zvDBMLGwsjWta1/Sw6WXTE4f3hPukN35Ut7TJ
n+eDTvnUbvGL8IzoZ9Mop1VOL53++A+6hR+EI9w79k+7hZ+Fo6WnTk8ffhkO
m743TDQs9ZltTkJP7Jj2LNnB+rBbzxa4z+3GC/MJN7l0+87x0T+nj07vfO+R
wmLDZF+vT7fK5kI7jpfGPmwvjC8t8P/0CpcKnzpZ+65XOGZ45u/H3muksNvm
TDcOlcYnDAiMx9b5Pd7vFTYaRnrrXP8fdkv/jQ7cPuOlNwNfB2d333hh5Oja
HDRc2DllWDKYMt9N1Ss9RrqM9GlofMC8wdjRkqEDSLuOpiBtQXqkR7VjoU/6
abf0SemV3jxeOr70fGnM0pqlOeJZdNGE0iKhX0Fvg94QvSAaPTCDnsGexd4F
sGwwbd4JMMUw31f1F9b4KWs+899sf0j58Ww3pXxLtseGSoeeHv19/aV1f0iO
796UH8h2cLf06uHv4fD3zf4/6BVPDV+N9j28J7wNnVV6fDT+YEpWaWsc48Gf
P53++7X7zf1IQ//wbvHtcHU+Gqz4+MJt/jdH88nS18D9mW6o9MTFo8Xvdmwx
VBoUeOa7dip3BU49bj2+vVxJ4tPiy0e2mDQNB1oOh3cqtxAOO146fjrtNxxj
POE7Yx8zWJx+PPxjOpVbRPxavPuIFoPFucdjx2eXu0O8UTxztxYjF98Uz9y9
xUBpAuD54/vLrQE/iMv9Uqe0h3AmcScfjX3IYHGycbPxtw8dLE43rvRrsQ8f
LE4ybvKFsU8cLDyfehxwWlqDbXwYgMUGS4OCLsR2ncqdg+OP609PQO4dmh94
83fEPnCwOO647q/HPmqwOO247ffGPmiw8D641zjYJ7e4woPNzy5WA08AD0Sz
h8bQeGsvpn/RYHGuca8fjn3eYHG+8Vzvjn3FYPnzcKtxrGkJTd/8ezSFaODh
SONKn5f6YwcrXigeSFOHxpD4IK44zjiNHRxpXGl87N8OFscfTxRf9PrB8v/j
pu6c9rcPVnxT/EzMVswUR1V8QB39814bH4bgF4MVb8D1pUFijo1zjNOLIyxX
hWuC14vf61rhRIt33T9c+VjEa8Un5GwQ88K5Fo97YLjyI4jP4Q7TkPCdeB6u
MT72Uy1+hot9WKfGnKZdPzHX0wZLs4J2xbmxdxssTQQ8d3z3/QYrZiWOIZ4h
/5R4hbiA+IDYzJxtDWX+K5YjpiW2hVOKWyoG5LyWausX8SaxI/EtuSjEHMQe
cA5xD62PxNzE2nB1rX/EsMSucJn5ePh6+JtwI/nE+Mb4v3AT+Yj4inD2cPf4
fPh+cApxC3F8vHO8a3B/vLO8u7yzvLus0a2rra+37hbHxjvFuwT3RsxGXEZ8
Rj4w7yjvKut3vkc5TA4dKj6d3CZiEGIR/Eu4n3LUiJuKn8oHwwfFF8XfJ7cH
jp6Yr1gv7h4NCroQD+YSHDxY10gOHblzXDsxMXEd8R25ElZoaxbrD7EI8QVx
SDEnsScxEusQ6xGxEzEHsQcxCrEK8QWxLPE5sUvX45bm8+LLoJGBt42/vc9g
nf/VqT+hv97dOEJ4DPgMuENiNPya/JtyE7im8k3d0vwhNPSdq/g2bX0+XX5R
/lG5EeQAExcXH5cbjE+XX4V/ZXIuhPGKDeF04nbyufK9Tt/GEwMUC+TfxC0T
b+I35z8XS8KpFIO3D1xLOQP40fmY+ZrFtPiYp2n7x8kU0xTLxNUUAxILEo/E
RYYngUfZqWGc5KyS62ubTuGzcJpwm/CL5F9avVt8O7y70UnFWcVdldNAjiCc
VtxWOYrkGOJPx02lGcknj1OIW8iHypeKA4fDRXP1F0Plv8YdPKC/fNY4c7hz
18V+cKjmB9bDd7d3Mg4uju1ZzUeCs4xDe2Z75/JPi0fI8SNXEP+1eIQcS3LS
8HfjItLI5CPGu8T9wwGcrJU6UvGKHf/P5ztSHFY5ZuRYwvHDmbs09fcM/X/O
LKesnBhyQskNxWfNd40zjaO8X5sz4DzjFMLQvTtYHEJt9ZGPiIYMfAHfjPw1
+Km4bmcNlV4ezhTulBxSctrgkOGSyZEkJ9M+bX4px4ScHXK2yWGGm4YP53mB
A4YjhSvleYMDhjODOyMHlVxUYjxiPTjXOEdyZMmpAv8HrwK38tF4aS7QDICJ
hF2FyVitnZt6/kb+w7Pbf2rPtr5fvL9yhOze1iv+n/6n+LCuPZ5md1L573Dp
3ms+Vvkc/9Z8efIFwpP/vb/m3ObeOHS4dLSe5HukWUC7gKbvz4aKc4kDuVW7
pvu3+f1p/eU7xyHFJZXD4bvd4oziEB7Xnrc4WbhZOJC4kAe09YYcKTA1OMK4
wjSHaQ97xmza7nV6yPi/G7djoXc8/1hxV3BYFu1VDgW5FP40XPwVOtn0smGZ
HxwpTo36c9sagKYdrB7M3vd6FbOjb0fzXSyPphhtsTk6lWuQhiztVxqw8Nrw
7PDaszbMnJwScktcPFz8GBwVtpwTOCYw2rDcMN2w23xEfEV8JX8arxgqPXwa
dGKrYqi04Gmqi63SkKc9/ZfWHwZNbFeMFzaNhiutXZq78Mc4ALhFOEa4AWKs
Yq9isGKvODG0ql+ZUFwZmuS0yS9sx0NDjE7Y7J3S/l2yV/k4bhoufUCaZHSg
6EHJJUjDmbbzQp3iC9DgosX1jU5p1ZqzwLvBJJnL0LjDjcCRoI0nBk0Ljyae
2DT8Ea2oldP/mcHSyFN/z3DxH/hk+WblEf3reHHUcTZhtL7Ynv845LO09zUN
AJx8OQrlSPC8x5GXY0euHe9nnMDF2vtHPoeNmq9DfhT4cbFzMXTasPQL6RnS
D6T/R/OWttlqneJv4A/BJ87dKU4MzW7a2ms3vCFNXlpdq3eKT0P/jr4fPT16
fmJUtPEGOhW72if7v2VCacDSgqVhiOOF80SLlaai2LUYNi1Ieoz0FekT0l+k
H0ifj/4gvb7tx2uudGp7v8sRQ3N/hmwXjBf/jz9p2WbTcHZ/4SzQPqbB5ztl
2nw09Wj70fijtYfj4J6kL4z7cEfz5zzWfHz8Xvxf/Dx8h+JX4hc01Wdpx+F4
xMROb23wlPCV9MXJwZPAl8DVwSGhw0ynGbeExiCdZjqxtAdpMOLMpOtkbUYa
cnTI5T1FVOmHP+uUhhNtOZp8tAZpDtLq09b9DeP/WTsmXFQcScdK08+5wv/T
+qM5SHsav4MWIQ3p8ZruTtaWdmyeJzDejtGx44R4vjgHHCTPHGPgJuHY4Mrg
zODe8Mfxt8npMTkHx0jFE+VMkNuCP57/mQ9cTAtnFXcVp1VOAf5yXMs7mo8E
pxK38or+yimw0nDlDOHX4+vDmcOdw9c7Ot9vlPvj+2m7gd9qUuXMkfvnxObf
wPnDg8GHoeV/Stv/VM0Hf3zbP84nTX4cX1xRnFE5CnCGcYfx6eU/w0HFRcVX
lsvIMeE24zw7Vjkd5A5YvvljcFLxgPCB5B7A6cXTxdeVe0ncVvxWDEwsDCcX
N1dOVzkfcJJxk3Hz5T/kvxdPG2sxjOPa8YpxuKmMgROMQ2xsHGxcbPxsuV1o
lNIupGFIu5TmOI6V5yVtfBpjNKDu6pT2GM0v2mM0yGiBwSzJLS2fNSwT/ij8
jNwj8o3ALcMvy59343Dxh+B35D6RX0WeJLmIYHJwMT3PvU+8V+RXwf98vb1r
5FeBqYKhglmCXYJRgpXyHIVdgrGCvYLBgr2yPoGNssaw1jDfN49aqM23zb/l
7qI5MWub75vHLN7WV+bbsE0wTrBY3ul/be8b+rLO2blP6q/ccDBbctvAeMFy
wVx5rnu+w2LBRG3R5pmwUtZDsGnWTNZONF/otLzX1pM04+UqXqJTWvIwULBQ
8N/7DRcGCBYIv+/w4cIMwQ7h1+EUmWOYa+BP7TFcnFncLO9rXFoYpsk8O/Pb
4XrfwV6Zg3mnfTBS2vU07P89UpgrfD85bGCxcBjdM+4V3EZtaOTTsf+gzW9g
r/yG5kDmH7iycpJc3N73/Id/aD55HFtcW/zhi4ZrDmQu9OeUZ5pU8w/jXdN8
oPBb8F60cen/4gh658vfgDsI4wTrBA91y3DFn/hTaYiLMYk/4TLLSfJ8m2eY
b/BrinWJr+CayjkiJjRfm985HvlOtMEFxp/W1/oShgiH33oaJw83D39Pjisc
ZDxBfEFa6jgKeAQ7dIq7gNOC54LvguuCQ4OXgp+CW0PDH+fV+5m2Js4mngEM
HCwczVLa+viwtExxOL3j5efA7ZRDw/t+zU7lBti3fadMmxNnA48CnwKXA2cC
T2H7TnEpaMrKIy1PHa1ZZevNrTr1Hc13GpA0/uTekiOCn4y/TG4IOSJwf97s
VO4KmvC04WkeyuVFk9axfqtTWrU00mmlX9QpLXccCWtc+ZlxJ3B68Tbn7BTX
9+aGSTqkU1wgOfRwKsxv5BLB0fCdMu4GThK/Hv8erpKcFDQVaRDKBUZT177m
7ZTWrvzbcpWc3Knc3HKS49iZ38otgYMnFzhOC24LjgyOEw4N7gzOnj7a4vLh
+OHy4fTh/uHc4eHh4+Hi4djJxUxzG/cOpw53GIcY1w7HD08FXwX3j2Y+DvfF
ndJip3lP+/78TmnZ49TQpZcXHNeG5i3t5VU7pYWLg2wO6B7CTaZ5K3fCNzul
hYtDhWd1aKe4VTjK5pja4C7jEMl9fVSnuDo4RnhWx3aKe2TfOGT8E44BJ0iu
E5wg3CAcOrwc/BzcOpwfvBz8HFwgOQDlBpMjDF5EjhIamnLGyB0jZ4zcMTRZ
5VLDUZYXRn4Y3GWavJ4Ni7X51FaxfzShcvFNN6k00em304CnlS5nE83TVzuV
K0fONn5t/m25DmjY47K/0SmtdBqWNE9pmtK2xCHnV+dfxy2nkUErQ04suQFh
JGEl1zOvnFQ6EbDjMORyBdJ4oI1BI4P2A40EOFN40x8Nl6YAbQF6CgcMF2cW
dxb/e6/hipuLn4sjiS3RRKWxKscFrVTf0Umgl6Dt2WPFRcZJlhuRJgWOr5yE
cg7KGSnXoJyDcknSyKCVgYs8zaTCvLNpaMDCy2lDU5TmKK18GsB+i1Xa84um
Ny1dmrq0vuWswF3DYZOLAAeOJutDneLG0deX+0AOBFr9clrQRL6gU7n/cPRw
7mju4+7hGMpdQ4MW91BOHBquNFJp4+PoiQuID+DuyVkgdwHNWLkHcOhgc2F0
cevkPKD5SvNWLh+cPXEH8QdcPhr/tP5pqsrFIIcHbYTbO5ULRP6HyzrF2ZNb
Qw5BGsE0d+VeoqFAW4HGAm0Fmum0e2n40lKn4UtD975OafvSYKAhfH+ntBlo
PuAYvtMpLQg5FGjIvtWp3Kg0F2ju0tilxUDDmCbwA53SNoavl59JjuJZmj9S
ribfqaMxR8uNphvtOZwIWEu4HFyJWZv/Eyfi6eavx0Pgw+fLp5lI5+bK5r/k
T4Yruqz59/lP+aX4p3Ar+L9xXm5o/mScFVh2uBhcFpqItBBpItJKpLlIO5GG
Ii1GGou0B2kQ0l6kcUgrkGbgW80/zq/IvyiXOI1GWow0GV9t8QK+70dGi7ug
LJf8L/vqOxjXrwwVBhb2VfwCjuu25s+mOUmLkiYlLUqahbQTaSjSMuQvpJV4
bfMXw8TiWvAr8jfCZMPO89vx39HgpH1JA5M2J34RvrkcDLjLOOm46TjeuN40
umh10bqSfxznTRxKPAoXDiZdnEq8ClYdX+5S84rR4qrDpMuRcU+nsOo4d7go
OCm4eHKI4c7h0MlVgzOH14XfJb8tTh0uK04rrt2HsfceLA10uVHkAJYLmKav
XLg0cemEwszBzuEI4g3iD+IO2pTxY2i3fpI+96Z+8dhHxf4s9i2DxX+k9Ysz
o406XBrxM3zB+Vt/nH/cf5oAtAHwcXAJ8XVos4qP4T/hPNESFg/DZ8QJo02M
E4YXhR+FK2ZTXqHVW1zjJRrT2PiVeD/4P7iY+I34iTQB5LrBEaMd4Df129Kv
od8gz5x8vDSTaBnRNKKlND5W2ho0NuR+fadbuWVX55sbL58n36c8tleP1/tH
Llc5XWk3ee94/9AU8n7xHvQ+PLi9f7bsVf5a7yr6RTSdaEfQkKD1ZJ1tvU3z
iW2/9n9Ie/7TP/Kukwfy+vHCx9D/gs2Bf3mmW9p88vmeO175gbduxyZ/L/0w
elawoJePV05cOhP0JuSOvaq9T/WhpSEH6orNT6C9fdq3d5p3G01uOoT0CGl1
y0dLv4IOk3y5chz72eiEXDteGkq0lGgc0zo+s1vY08kY0l7F82C25biDTaFx
TFeB7gHtY2VaCzQQfIczhmuGc4ZLRhOCBgGNX/FHmgS0CWgoiz/ipPlP+y/j
qk3ZjofGE+7gFO1+ofFLO5kGBS0KGgu0FnDkcKpoJeDq4e+d2lf8RvfzNb3S
6qVpQdtCTgPfTS6PVjwVt04MVSyVJjFdU5gJ2ImZWzwVpwvXECcQp88+7Ouc
bunbTcZQ9kozgXYCjWna2HKW0FWFsYC1oAlMC/aMFs+lCXtVr2KQYpHKcjfI
4eA7GspyMdDsoN1x6mhxkfFDaWmLX9BVoJWNa4qfjLuM70nrXw5zucxp6tEW
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
/qvuH3HDB9vz0D3h3sDXmbNX9wc/OX85fpicxfzo/OnwK+53fnD+cPwGHAtx
RvFGXA0YKnHLyfHLbr1P4G9G2vtPDl+5WeVoHWk2HgfuBn7H4KRc0+HyQfJF
3t/m56+19Ypz4EPhP3dufDZ8N/KJTRqr+2X3Nr77g0Y2n/z1E0s7G+bw98Pl
U+Rb5LPhu+GD8T66Lvamw4X5gP3g4+DrMGffeaw0a2l10uykZUsjkFagOa15
qvtFDMZvjkvm+MQo6FHzNfHJ4ELR0uarsb9NYk+R/u93S+P7ronlX6L9bf8b
pn7SQPleemMVX9g99W92K/4mhxqNNPE+8Ud5Ar/XqfiVeKEceWt0Kr5JI9sY
+tLOdv5iKvbJl+W+x3mBB/GfxMGgVUAHEDeDJitt0uPa/Uaz3LXdvP1fcTpo
G9KBw/Xgc+M7Eifhi3NM4lrioo4Vx4E2Jx053AcasrTKaZbTlp1xrPAp5rDP
diseB6+FwztV+/96PtBAxcURj5OTj0aweNtd7X6DHxzulaYrLXOcNFqvNFZn
Hqv/vP8+DiDN7ck5XHtVJ56GA6QN/BR8kXik+CTOIe4gDiEu4iPjpVlNw1vu
WjnPYb9gwORCh8mjTUwHD1bPPe/ev6r9fzzPaGLT6Jar2DPAs+CUbH290oh1
TVwL2rH4Trii8HdTtuef5xlOUq/9f+Uep9k9dfu/4pXqoy9OL94v/i+urzXe
+W2dd2Hb5EDD2VaHj3hrtoljpSc/2H4vHMXb2jP8k/a7zdQ2/xfPe3X45PDW
77T3PYwPbjBeEuyPHBSTc1H0V+4H9wPdW5oKtBVovtNwodlAu4F/9On2v3Bv
i1H6b/mNt2q/N38sny0bhhYnHmcethYmCRcTjxJWiQY+3Rv6N7Txp077Pw6X
Hr95j2eMZ40chs91a5+05/loHYsYnz7amitNGCste5r213cLw8RXjYd/evs/
0TqmOXFPu67wUDj/13Xr+vpOmZb/HdlWSN1Xs93erecR3eyj2vvU/JGGNA6k
+TQMF+4X3h1sF70QuXV2af4tGhe0Cr7Y9k8DAybrkol1feWUkFvCOTiXE8dL
k0B8+ZrU7zZSeYrwK/As4Anl6p2+4d38R8TyYQ79d+gj6Od/5b9H44LWBf0M
2hx+X/vGz6P1D6Nmrk+vmT+MhgacIbwhbQ3vV1rTOLuetzQ3cGW/1O6XobHK
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
8GvwdnK0H9li0GLRMG3qzEnNTWmimG/Cv9MZObLhEeG18cJ36hR/AP7Gs4p+
O70u+Be68/Tn8Q3Fd+mw0mNdoFsYGDgUOBfYF/Fb8U/xXvFjmzjm+q1O/BVv
Fn8Wn14f8Vc5aI0lHntsi88aXwxW3FWcWiwfRgRWxJrB2kE8ljaqHMPwpuKt
tF+3bPHYm9rcFeeXzgI8Ap43zrH1F81QvHD8cDgaY+Ox47PbBz47DVrnLJ4N
z6KPtrA3+Js0+l0j+KAftHPDEcbNFqMWlxYnFzunWYAbbU5tbm1+jud+d5vf
79rml5e0+aY2dI3oG+3Y5q+0H37e5uOuJe4oDUbcZPxlPgm+CHgW+B06R/SO
5uhWH9fDdTGWZzwe3R1t/YAPTcOX5gC+E81b2rcwRbBF4ttyB6zS4vnOSXxb
/Nu5+o3Ex+F//XY0afH8YYo2afNj8+UL2/oCXuTiocIMbdjWV3h/17b5kfyu
cq3ScKDl0J/n0deGii8mfxwNOVqo8ElwSvjYNH9p/YqP40/IiyQ/Ev6aHEXy
bMi3sfRo4bvlbZC/Qb47eGn46hsa3hn+ms7No53KH4ULhhuGc0+HwzVdqu3b
tYbPhue+seHV4bvp1NzRqfx6OKu47zBYsFg4ZLhkuPC0K6whrCWsWaxdrDGs
NfgYrM/wW+QCWb9T/BeYLOcOYwhriHODZ4PDgsuCL0Tnh94Pfg6+Dp0fej/4
RLhsuMM0sXD18Rno9rzW+Aj4DPg3v218AHwFue/k45PPDp8Ef+SiTuWDkaNF
rhb5nvBpcVjxRPE6cEtgDGENafrLVQQPSCfyuGZrI7cLPq6+8A5+S/rNC3YL
P0Hrgn4/vj3+Cp2YczvF/8EHwWuftVN8Fzlg5IKRg0YuGvh3eYPe7VT+Htfd
9adRQJsAX4OO0Oudyg/od/J70SyAs4CXp+NzXqfyHeEz0aWhT4PvAT+P7/GX
TvE78JPgmS/rFLYfn4lOCb0S+QL7JpVuMv3kl0cr/iNPxiudyj/4yXjpHNM7
lq+Ef4+2Lh8oXygMDtwN3AjsDv8lLd/lWryNfxGvE7+Tti5/J92rVVp8QR/4
HPiUxdt6h7YePd7HuvV/+/pQYdJh0x3vY8OFgYeFtx7CNaev94du+eSfbesa
ayEYSLhHOBrYGj5Ovs6Fm//S+gmWF974+bb+pFNMr5g+hTWLtctGbb1lTFhg
8Sf7sn6j00uvlz6DfeAfwPPYN3443O/WbX32SFvbWVNZW8EfwMrgN+Kfw+fC
e8PfwtOac5l7iW3BYsGbwp/Ct8OLf+p9Odw4BalDjKZTTa9avkj48XsGKicE
PK/6x4cL8w/7/1n6LztUHARcBMfEf2tN7lhxeHF5aRbTLobRh9WneUz7GD4F
HgVmA3aDxgBeJn4mrQyaGLQxaGjw9/P/09KAUYZVdo6ww79p546zjLtM44/W
H00Y/h7xCFhdeNqnBypnCDwvzUa6i+u2eCDOPV45fjkuPn817Wd61Dd2SzMT
TxJfUi5TGpJ0FGECYAPE//Hs8e3hA+Al6YnDW+LXwiPggf6hxWvhDfC68bvh
Xax5rX3naOt14+Pd49/T8/RMlItp6049K+FlxIfEqMSqxLPgUegRwMPA++CF
4ocu3yv8EW4vji98AMwD7AN9u/l7hSfAG7262TRD8UbxR+XCFV8TL4O3gZcR
L8PLxc+lFwqvAz8Bv0Pvk3+D/+ST5l/jb6GLQh/lsuZPwOOepvlL8DloZtPK
po+ND06zllYtPWr8dBq6tHPpZdPApoUNgwKLIsYi1sLnyvdKH4imLS1beo98
UvBu8G98VeIjcPLw8vRl+AdpJX/U4lf0WWg002amjw0fA69yUfOHwc/NP7E0
7uHp7FM8RvzTscAPzjaxNP3h5zwPHxkuTg9uD38rXv5UzR8GLwPvQ58R3ub/
NDRpbuIWiPfhwY81/yw8EHwNfA78EP6RfC74SfhF8GLwa72GH7OemWmoODa4
NvK90mwzp8dHk1+Kppk1Mv6YfFA04Lwz8KtoqNE9Oyw/23yjpdFGq23n2HOO
Vv42GnPWRPgv8tXS/LMGwoeV/4omnDUHPoz8szTwvLPwC+XvpblnzY+fJh8d
DThrWHw0epA4gDAj4qvmmOZi5mTmnvzP5p7moHyd/MPWltaY/6c3zvdN45L/
mb+WlokcTfDz8t3RzLOGwueTn46mHp8Jvpv8ujT/xIDwZ+UfptlnTYgfJJ8g
DTjvdHzUh4dKC/Km5hPh/76++X74sj1/5aGRj0b+O89TeQTkE5D/05z6zuZr
MdfmT6S9zGfPdw8vRgtbTij4YnNxepA0KmlR0WSizbRFxpthtDTu6NrRt5tt
tPKN0qgzB8Bnli+ZRqE5Hz4ffCSePb49vRh4SHjJ0Ya3FN/DkTmsxePlU6ax
Zs2Jryh/KfCFOQP+s3zENBbN0fBN5Remwcings8qvzKNRnNWfEF6xDihMCzi
3/Q5cUJhXOCf+Ez5Tvm4+bph+XFVDvd8GSofNl82HzZfNp8r3yuNef5yc3ix
Aj5vc3tzdr5NMRJzees/a0FzDHMNmg20G97P+W7bq3gxbqh8tW81/ybuPA49
fBVOHR4dzgnuifgZrSg5Q/ABaCrRVqL3tH6vNJdoL9Eb+2q33tG4XVe1dzdN
LTpQ9KA26FV8jNaZHCD4CPglTw5UDjn8NRpatLSsQTZqx4BPgs/i2BwzLImY
t3PhX6ZFQf9osV5pDtAekBNAbgB62zQMYJDg1+hR0yjxDoOXowdFkwHGC15D
/BUHC78XHmbaScXrwu96t9k0MnC84EvE/3G0cKzgEWds15NGAnwsPSL6TNc1
vAT9HRoI3nHwrPSlaEjAkMFP0LDwvqOhtE2vNDloc8h5IPcBPR8aE95h8B40
PWh7fJj6pWL/Pw8AEaI=
            "]], Polygon3DBox[CompressedData["
1:eJwt1FlIlmkYxvEn++zTSi1TCVokaINiImo0KVpo9KCTtoOaTKXIsdXKYqaN
IiNonTkYWixbpIwGYhipaF/oxFYtrGi1GqioORqKQg3q92IHf97nvp7rvp7l
/d6v39yl08oTQggTkYj6lBBKO4VQZjwAOZ1DGIfjxhX0FZjAM4a20LgQe8yN
Vt+mL1DvVm/HEFp2lxCGWWACtsdDmJJKp41Xj8Fm2lRand5/ENdToDfLcyjf
OJ6dPHOSPaN8ekKHEA5aJ432Z1fZ5pP0JNHiOK+4yjvbuIq+F8P13aUtopWq
f0EerXcaXU6bw7/rGMKP8jKsm27dHlglu8D+Mmk91ZlYTsun5aDYuM5+HiGJ
55X8lFgIZ3EKzepNfJ/5dlhjJ0qs8Qct0T5b5X3C33ob6YX2UsL7VV6Mlkf7
ZF+nec8hV/1Sb1Ny+1nTY+1agrPtonXm6cVfp3cHmmW9iLDGNvV/eI9u/Cf4
s5y/NjqLvjn6SvHc/GSZp2WfibWf56C7OsqXxzePZ5TnkegMeGYfU+Xt5anC
BvSx/3P0ntbYJ6sP6vVt0bcVFfz5fCe9hzr8yvuU9tHam/mKeWbjg/p/pNnD
TPXPWML3Vu8za9xGrvMNtI+4NQ7pPYylfNdo9VhvXEOr8LyuLpK3LqE9bwYW
y0ulLZCzEMnm0tSJ8sqjeVTp76i+qn+wepJ6P2K0K7RFtH3qcvyrty/9hvF5
VJpr4Mmm3VTfwjZaIy2ZVq1eFr1fd5VtL9WoMf6BNs3cPXkttIvuqL/zXvJs
/X5X3dxLIV8RymkX3MtanlaeFkyn/W6dTubbnKsFJ/RlIcP4N+ddjaLoe6Hl
+33+hOg/IVPWJnqb3jJZ+2m5tPGoMa7FSnoTzyprPJfToPEMKqNvlzaL9t5+
UmjdaZOQI/+FcxebL8FFeRt5KvFFXnfaRtpA9SBcprVF71xPgd4H9vOX3MLo
fyS6e+NU+XF0pc3X22Rv91Gt943ekdF753ssr8BzhHos3zGeI1jGd49vDf2l
+UZZd6L/LHllfA95nuAA32u+S9HdyFqBz9F3qO8bdduq9Q==
            "]], 
           Polygon3DBox[CompressedData["
1:eJwl13m8T9UexvF9DBkSuSW6lRxTJZUpwzFWpMxdRzKWg5dugya5pggZkqFS
KOM1JnIJmTLPQ0U3kkKiQZQjHDL2/r7643ntvT/rWc/6rvXbw/qlZjz3r67Z
kiRZTFdRRt4kOeF4lEYCefMkyZv5kmQzXjklSapQ/lyO+NBrkqQbvo13O83j
vxZ/h/8UveJ8HG9bA2yn/lcnybn8SVIOX5sjSY7x76UxMmrSVBnTqSt2MXeS
9JXxJ38F/i383Yzdk5bzrqPqzrtTFn9FniHqeRH/B3a/nDpU0PkL2EAq5vw9
ulZNVflf53+FThqrgYw+/L2pBO9ZY/fnOcL7kdrn0pvqX6btKRlPU6Y+lyld
xt14a+ctaXisHd2FNaK1zm+iW8NvrAGyc7rOTpoT3RMoEZ9MdDHTuPX5UhmK
0WEN2YPrVM51BbpR+2hr8z4+jr+g69vwUvQxf8NYI3l3UGnjXtLe3yAPaStp
Lh1ogrl10nekjNwFkqSj89uMkaatFtXmfUTODhlbqK+cK3IGyamEZ7juQFW1
VaOK2DOU19pcdD1LW36Zb/PfJauezAdplHFH0uPGXautGU8J14v1q+uYXS25
KAMvqZ4G+jSMmmSUoCrOy1Jv3gHUXk5tx8HGHETvyNlNtbDx2qbIKa3u+tbm
YdosY51xm+PH1fgQb03eHMbMwl/Fx7huZYwp1I2/k3ldkH2JxuqTj+ct3g74
cSyTxuDvU0NjbtbWkqeZnGPyf4n7hXcr/hiejmdiJ+g0vh1vhRfCy2GL6Bze
W9Zvaq8ht7kxOlBh/JyaBpjLWcfreRbpW0T9f7oejr9J+6zdEnyV+2SCPi1k
NqeWlE4Tsev0XciTYYyB+vSiLBkr1XPSM7eN73Oqqq4rcs5oa8/Tjr6R/4m+
K/EV/HWdl+Obyz+HDsh/Vf5Z2XXV313tPagsPgA/j3fCa2E16F58mZzacg7j
bWQspD34hnhAjLff9U5KM85V5ttfzp9y2vPXZHmZivFv5H9Uzg18k/m/p+N4
P/4s/qb8L/G+GM8IPtN1Hp5cdAbLohnYEjkHrcNUfDrdKO+i+X6K/46vx2ZT
afwyvgo/je/CPqPqeKLOMdbtZ/dSc2pBh+ld7DR/P3Xu5VuALac++GV8BH4F
L2ytC9FsfKFaX5T7PJ1UX3meweZ0hX+U8xRzu4G3CH3I/wfeB98mZ5nsRdQL
3yBnuIwRlBJrSS3k9KVTMhrJLqH0MlSSd6ectnK68G3SZyNdI+dLvB3eHP8N
20JX433knJDzoJyuMp6lVDkp+Gj+3Nr+UMvN6pzPv0bOWevWVH9NyX3yslm3
1fgZ/EH8EaqBpxT4+6X5lpzszNfKyEcz5Rzn74VP5HtC/n/pWfyC3yYN/07W
FDmTaJt6lvMfwGa4XkKl9LvEexLvzb/R9QwZ/6MecnbgrfFz5tWL/xCdl3Ne
n2r4PlkVsXtoEF6I4vvahtK0HVXvPLW3wL/G9tIAWdnieyr7VnP7Kp5Z93pj
3jlUHj9k7NrO69Az5voUfY+Nd30gnnX6lvbTBCyPnM5yysppr4A2VI+/KP4l
vgMfwvsr3S3/F+yfarkuvlXq/F7GNHXewr9LWw41nuI9SRX5N8gqxVOC7sfq
0nosjdKN9Sg1o0eoGraCqvI0oqbUhLZiH1iHTtaqM2VQR5qF/Wo9NxjzLtd3
0BQ1jTfuMfyLeGfEvRDvGXwifhxfjd8e336ai0/Cp8Yz4Dc8Fd+HmDO1id/W
GJvM9c54H+lX0BzH4n3x/Vir+J7h18ceBh8s5xsZ+2ivOe2hIVi/eAaw/9NS
bAu9io2Qk6aOVFovp6ic12K/gd+E5aRpeCH8Pfnt9amvtio0XdYc6sDf2bwm
Oe8st2d8k7Uf5T+h3+1/v1qSIuZ62O8wg/8xOffx/MTTUd9p+jbBnoxa9S9P
/bCX9B8d706+Ac6PYj3060mtsU78b/OOjneGthfiO87/77jnsHG0Au8W+z38
GvNqEvtHul89x9WzGM/D34Evg9aZ81rKi13H35C3LpXj/4X/I/4e8a7HNtIC
6/MxNcH/Q4d4irsuHu8SOmbsfBagu2N1dT+nphqOx9T/kfFedz0oficaSvOw
nnJ+kvOhYw5j1Y/PimNuauq8MZVXz8/x7PFckjVU/teuH5M9kCarP8Pazox1
kduR7sF/5D0f9wr/CW39sFdoQuzfqC3Whi5Yg6Px3sVaxl6KpyrN0Pa0vqOM
W8y89jjPa75nPSunqRJvD21H1FIGL6zWG+giX0dZo9RRM+Yq57nYn/A+jj8s
+yGai3eN/Tye6XijvrXjGTDfH2XOxk+b18+y26nvJ8c7+Qbh0+Jbpf+e2CvL
Gkpt1TMdP4Pvjnc99jq1w/PrM1vfhni32Hc5FjKnwvy3qLFo7Kti78YzjLcI
XgxLpe6xN8TfwPPHb6n/dOohYzleDL8Z34StpdfwlXgqnotmqaFSvKfoVm0f
mFNFx7auW1ELahP7aCx37H/4m7muTEXj3uCvrIat1mAlLaVP6V6sF/8xnirW
5mFrlx7Pn3vnevUs0z+ntVyrfT29HHtPWqq2Mq4bai9NR+J31+dbfRfFnkhW
zliHeA/gP2ItqFbsSeJ+wFPwCvGuiuclvo+UDSsuq1K8Y+m1+ObxDzfmZ87X
YKvoU1pNO7AH9Jmvb7O4z+XnCn980/AfsMM0BL8q1h9Px3dhX1B/PCX+Z8Xe
Cj+ItafKePb4P4VPMvb8+A6a7wrrusD5Uus5GV8c9yk+zBqk00G1N5fzuYy2
sf+LP6Cxn4lvvj77XDew7k/QGus6C68ez5i+1agxXaA0LDPeb877x/7euPPk
FHa/NdE2X99ltN3YB2WON+YB+VNdH+L/IZ4vfUqrcWzs06zTV9pqYd2pVez1
+PfoW08tD8S+NPYReBd9fuXPomG8b8T3Nv7/8pdRwwq+Vvyt4xtm3D/w/fE/
wXkzvuXapzuuNO4d6rid5sQ7Jr5HvAdpu/Ms7Ds1bYv/aMaso092fdP4i+N7
8Qp4WfwItoBm4ZvxUnhxfCe2l8bgY+klfKdaaqvtXRpDY2P/Zi55tH1izOf5
lzjOkjNfLQXkTMNSjL1axtex5+eth+fGRmh7Et+H3xvfL/yy/sviHYTvxu+O
d7Cs72K/avxMfbI5VsEL0BrePvFsO37IszDWPu4h/ZfgiylTW0ne3fF9jN8V
20W/4yXw1PjdXa+iIdpXySke3yl8LjaYuuDf4JXwvwDsJDw/
            "]]},
          Annotation[#, "Charting`Private`Tag$20322#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0ckrhWEYhvHXkeGYDoq9pY2hsJLY2CjJwUI2pgVlSikbIuPKcAxlWooo
UoaNYWvPn2JKht+JxdV1P3ffO/WV9Iy0DqeEEGbwGg2hkt+4iqvRky5nhbAp
l3OC1zGorzUfyPsYMq9yJ5fpV/73bDHPcn1GCE8OquNn3kC2vM1biMkJjnIW
1uRVtOeGkG5ekL/stcjTiOs/zFPyPO6dOcdt+m/9kryMB/0Qn/MZ+uU+HMnx
5P7Ykzv4hz/4k9+T56HL2anZ9pQLORZxbwzo88w5cj6GzWnczVF9qhxBn7kX
d9aX8i0/okbOSL4Xh+6bycecwrsckvehJu/ZMV/Jk3zJp2jQj5tP5Gs0uvMN
N+sv9MXWF2FCH+NRzucxLuB630bkBq7AS/Tv//8CqIs9Jw==
        "]], 
       Line3DBox[CompressedData["
1:eJwl0bsrhmEAhvHH8VMYDQ6LwYBJFjmEIhMKETmUBSnKYTCJEJEBfZ/BjkEm
G1GUYynHEGXhj6D4yXB13ffd+z69h9ze4aahuBDCFDLjQ8hCV3oIE5EQ8uVC
5KSGUMA99mV7jVyHCnsbl3MZWuUWlMrN/Imo/MGrfMszfMP3eHLWnP4oz/Mb
v+LNvqS/yM940U/5hift5/IF7vRjvuYDvuJD3sdGirMS3It1+Z5XeBUP8hNG
vU9M35THeIu3MWJf0M/kfWSkOZ/H7cf25MQQIqix/9gr+JtL+Yvrce45G7gR
F/IlKuUjruJq5DnrRK+V49y79vesGLIn6TE5igF9kCv53fX9ch/K9TJ0yEXc
zp0olmd9gwXs/H1j3uVF3uM1LkG395nWs+XRyP///wXpNUg+
        "]]}, {}, {}, 
      {GrayLevel[0.2], 
       Line3DBox[{2271, 1044, 1348, 1349, 3303, 1350, 1417, 2515, 1543, 1544, 
        1046, 3175, 1045, 1043, 2271}], Line3DBox[CompressedData["
1:eJwl0M8qhHEUxvGjKMOIpGbMbsZVCGXJhthNrBRjyLiDiVzALCjjvytQqFm4
BBaSjaFRzMJWLKV83iyevs/3nPf9LU5+aXO+0hERRVlNR2Q7I9rdEQXc4Hks
ya/ZNl/Wt3AFd3AdK9KfitjlNf1AMnwPB5M5DmHdvq7vyyT/wBuzVxzjLRzH
CXnT3+XefoEPdHlLHngv3mIP3mHRPqU3fX/Jn3DU7Bmv+LW86A18xGPJ2h/y
E/1CRnhBzvQcnuOR/SkO82mckmpfxLdbzOlfOIOfOIuLyU3sf3gu+U/WvJHB
cvr/vn+RBC9g
        "]], Line3DBox[CompressedData["
1:eJwl0b0rxHEAx/HvcTh1JrG4kysD/gIZlOKUh5JBVsfi6RgNpHQGA2WgUEYP
RQxkMBPZ5GFRrtg8pcx4yfDu/Xl/v31v+F0qM9GbjYQQhpGPhZCIhpCNh1DL
I/h2NqcH7Vke4hyP8xh+3M/rjD2AitIQ1vS6vYFKvcrlvMhxXna/ZK+gRef5
xNkjN+snbuM0Xu0XnLpv1W92rCiES92vS+xiXOhCPucCPuM+9xH71psDfcNN
zh74SB/j3j7kO75Go/uFshCu7F1U65zetreQ1Ans2DW8x5ve73NKd3IHpr35
8G3S9ju38xd3cxdm3H/qHrsOU/pZ19sNmPSbyb9vzKOoiv7/P78dYzi1
        "]], 
       Line3DBox[{2273, 1055, 2274, 1056, 1092, 3451, 2285, 1093, 1091, 3197, 
        3196, 1090, 2284, 1081, 3193, 1080, 1158, 2313, 3215, 1157, 3213, 
        1144, 1141, 2306, 3208, 1140, 1139, 2308, 1151, 2310, 3211, 1147, 
        1146, 2380, 1270, 3268, 1280, 2388, 1277, 2386, 1274, 3265, 2384, 
        1273, 1253, 3256, 1252, 3257, 2367, 1254, 1186, 3228, 1185, 2346, 
        1211, 3237, 3238, 1188, 1187, 2347, 3461, 1212, 2348, 1213, 2351, 
        1216, 3239, 1189, 2331, 1059, 1054, 3447, 2273}], 
       Line3DBox[CompressedData["
1:eJwl0bkuhGEcR+FXMhLbWEIvChQo7D0F9diXQVQ0BJXGVtgLJpbKDdiuQGnP
WO9BgoLKGoVHFCfnd75/5ktmpmhwNDaSEkKYxGhWCCWREMZ5DGX2Q1oIFTyh
yzmBvPQQtvW6vcVrvMnDPIRc9w3db8fx4x1Tus8eQIb7ml6wVxHVS5zJi5zN
CfcVexnN+pWPPHvhJv3EDdyIR/sZt+69Oi81hALc67jOt1Nxpjt0xM7Btc7m
K45ykrvds+xL7zvUF1zl2Tnv6wOc2nt8wseodJ+Per+dRLVe0Ff2Ner/vpe+
tW9Qq2twZ9fxHu943y4X6haOYdpn3v12rfYbt/End3A7Ztw/dKfdhVn9pXvs
bszpb11qF0f+/99fBXZAhQ==
        "]], 
       Line3DBox[{2278, 1071, 3188, 1072, 2280, 1079, 3192, 1078, 1135, 2304, 
        3206, 1136, 1137, 2305, 3207, 1138, 1145, 2382, 1266, 3261, 1265, 
        2377, 1264, 3263, 1269, 2379, 1201, 3231, 2341, 1200, 1209, 3235, 
        2345, 1210, 3236, 1199, 2340, 1076, 1070, 3449, 2278}], 
       Line3DBox[{2279, 1074, 3191, 1077, 1155, 2311, 3212, 1156, 3214, 1143, 
        1142, 2312, 1154, 2309, 3210, 1153, 1152, 2378, 1267, 3262, 1268, 
        2389, 1276, 2385, 1275, 3267, 1279, 3266, 2387, 1278, 1219, 3242, 
        1218, 2352, 1217, 3240, 3241, 1215, 2349, 1214, 2350, 1203, 3232, 
        1202, 2342, 1087, 1086, 3450, 2283, 1088, 2282, 1089, 1075, 3190, 
        3189, 1073, 2279}], 
       Line3DBox[{3194, 1083, 2343, 3233, 1204, 1208, 1207, 1205, 2344, 3234, 
        1206, 2381, 1271, 3264, 1272, 2383, 1150, 1149, 3209, 2307, 1148, 
        1084, 3195, 1085, 2281, 1082, 3194}], Line3DBox[CompressedData["
1:eJwl0UkrRnEcR/G/QmRa4Vkp4x4vg5AXIMnGPC+UDFsJKSwkMpUxY9kYN96A
acPSPJRMOz6yOJ3vub+7uE9PZlVTeWNUCKETqTEhpGEwKYTq+BCy7UycJoaQ
xed8hhy7yj2XL3Qet6HXs0/dYn9wK39zB7ejz/1LN9kN6NHvutGuQZd+07V2
Pbp1HQ/zKA/xj/uYPY5j/crZvveFj/QTH/AhHu1n5Lqf6Hv7AVl6X9/Zt3+/
Ue/pGzslNoRCncz5nMQFfOmeYC96J1ov8ZRnyxyjY7FiR/7e5TVMu0/oVfsa
u3paX9k7WNCTetNex6yewYY9x1sc577N87qIizHiWYsusZu5lFu5jDMw4F6p
I3Y6+nVF/P//+wuSSkUV
        "]], Line3DBox[CompressedData["
1:eJwl0E8rw3EcB/DPiFpRFLKVUAp3OXgWVg47KEO5cVg7OHgGhsKB/Sl/r25q
ceMRGOXngtpVI0/Aazm8e73f388uv02ubuU2UxGRl0xPRFaafRFjfGMi0/pa
OmKGr/ZsZ8uOt197XW9zhV8scEOO3bv6Iw70fdm193jEGg+Zcq/oVXmwfzjl
7ZuPdot3vJdP/UPG3Rv2uz7aG7FgD3Geg5xj4j6gP/nNsN3krbeEGTsrL/oI
n3kjZ+5V+1I/l1P7RC70Oq/Z7X7Fmp3nYuc7vBXtnF7iEre5zAkpuxfS///v
H7vDMR0=
        "]], Line3DBox[CompressedData["
1:eJwl0c8rw3Ecx/GPA1LbhbKD5cfFwa9cFH+ECzshq9XExRwU8SeI2izmR8aJ
f0DKnbhxobZxIDfJz6s8vjk8e76e3/e21taVyY3N14UQ5pBuCiFZH0IPqrEQ
evmBa+izs+79/KgHeBornr3qtP3GGX7nLM9g1f1Dz9oLyOsQD6Fk76Cgi7zB
eV7nX68v2Ju41j/c7T3ffKW/+IIv8Wk/o9P9XD/ZLxjU9zrWEEICw7qVR7iF
h7ji3mzXvL5dV/nMswq36WT0GXaC7/gWp+5lfWMfoaR39YFdxrbewqG9x8fc
6H7C+3qCx1H0bFGn7GWe5CWe4tHod3LP6Y7ou2At/v///AHMnDwS
        "]], 
       Line3DBox[{2406, 1328, 3295, 1334, 2409, 3296, 1335, 1351, 2478, 1479, 
        3357, 1476, 2476, 3344, 1477, 1469, 2473, 3342, 1470, 2516, 1530, 
        3368, 1531, 2512, 1539, 3372, 1540, 2513, 1419, 1418, 3481, 2443, 
        1421, 1420, 3480, 2442, 1398, 1342, 3301, 1327, 2406}], 
       Line3DBox[{1329, 1330, 3471, 2411, 1341, 1338, 3300, 3299, 1339, 2422, 
        1366, 3306, 1367, 1413, 2440, 3325, 1412, 3324, 1409, 1406, 2438, 
        3322, 1408, 1404, 2436, 1399, 2434, 3321, 1402, 1434, 2523, 1557, 
        3383, 1538, 2511, 1532, 2508, 1528, 3367, 2506, 1527, 1535, 3373, 
        1545, 3374, 2517, 1542, 1480, 3346, 1464, 2471, 1463, 3340, 3341, 
        1468, 1481, 2480, 3486, 1482, 2482, 1478, 2477, 1472, 3343, 1471, 
        2479, 1346, 1347, 3472, 2414, 1333, 2408, 1329}], 
       Line3DBox[{2407, 1332, 1336, 3298, 3297, 1337, 2410, 1340, 3307, 1368, 
        1411, 2439, 3478, 1410, 3323, 1407, 1405, 2437, 1403, 2435, 3477, 
        1400, 1401, 2524, 1537, 3371, 1536, 2510, 1529, 2507, 1526, 3369, 
        1533, 3370, 2509, 1534, 1465, 3337, 1462, 2472, 1466, 3338, 3339, 
        1467, 2481, 1474, 2475, 1475, 3345, 1473, 2474, 1353, 1352, 3304, 
        2413, 1331, 2407}], 
       Line3DBox[{2412, 1344, 3302, 1345, 2484, 3348, 1487, 1486, 1485, 1483, 
        2483, 3347, 1484, 2514, 1541, 3375, 1546, 2518, 1415, 1414, 3479, 
        2441, 1416, 1354, 3305, 1343, 2412}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1616, 1617, 3519, 1625, 2296, 1624, 3518, 1614, 2292, 1613, 
        3513, 1608, 2288, 1609, 3527, 1637, 3528, 1599, 2285, 1596, 3508, 
        3507, 1595, 1584, 2279, 3499, 1585, 2311, 1674, 3549, 1675, 3550, 
        1666, 2306, 1667, 3556, 1692, 3558, 1695, 2327, 1716, 3572, 1717, 
        2326, 1684, 3553, 1685, 2317, 1679, 3552, 1680, 1691}], 
       Line3DBox[{1645, 1640, 3532, 1641, 3533, 1629, 2297, 1630, 3524, 1579, 
        2276, 1578, 3496, 1564, 3490, 3489, 1565, 1568, 2275, 3493, 1574, 
        2301, 1658, 3542, 1659, 3543, 1661, 3544, 1662, 2303, 1663, 3569, 
        1646, 2300, 1647, 3538, 1648, 3537, 1649, 1657}], 
       Line3DBox[{1651, 1650, 3539, 1652, 3575, 1712, 2320, 1710, 3568, 1709, 
        3576, 1719, 3574, 1660, 2302, 1567, 3491, 2272, 1566, 1631, 3521, 
        3522, 1632, 3526, 1636, 2298, 1635, 3525, 1628, 3520, 1627, 1642}], 
       Line3DBox[{1690, 1686, 3554, 1681, 2314, 1678, 3551, 1677, 2325, 1699, 
        3561, 1698, 2319, 1694, 3557, 1693, 3562, 1696, 3559, 1676, 2313, 
        1598, 3509, 2284, 1597, 1644, 3534, 3535, 1643, 3536, 1639, 2299, 
        1638, 3530, 1610, 2289, 1603, 3511, 1604, 2295, 1622, 3517, 1623, 
        1626}], Line3DBox[{1702, 1701, 3565, 1704, 2318, 1703, 3564, 1688, 
        2316, 1687, 3555, 1689, 2324, 1587, 3500, 1586, 2310, 1671, 3546, 
        1670, 2309, 1656, 3541, 1655, 2305, 1665, 3545, 1664, 2307, 1590, 
        3502, 2281, 1583, 1582, 3498, 2278, 1581, 3503, 1591, 2283, 1573, 
        3492, 1570, 2273, 1569, 3529, 1612, 2291, 1605, 3512, 1606, 2287, 
        1607, 3514, 1615, 2294, 1621, 3621, 1855, 1854}], 
       Line3DBox[{1705, 1700, 3563, 1682, 2315, 1683, 3566, 1706, 2323, 1718, 
        3573, 1715, 2322, 1697, 3560, 1668, 2308, 1669, 3548, 1673, 2312, 
        1672, 3547, 1654, 3540, 1653, 2304, 1589, 3501, 2280, 1588, 1592, 
        3504, 3505, 1593, 2282, 1594, 3506, 1572, 2274, 1571, 3531, 1611, 
        2290, 1602, 3510, 1601, 2286, 1600, 3515, 1618, 2293, 1619, 3516, 
        1620, 1856}], 
       Line3DBox[{1714, 1713, 3571, 1708, 3567, 1707, 3570, 1711, 2321, 1580, 
        3497, 2277, 1577, 1576, 3494, 3495, 1575, 3523, 1633, 1634}], 
       Line3DBox[{1785, 1786, 3602, 1783, 3600, 1779, 2353, 1777, 3596, 1778, 
        3598, 3597, 1780, 1810, 2362, 3835, 1814, 2390, 1868, 3631, 1881, 
        3633, 1873, 3625, 1872, 2391, 1871, 3632, 1882, 3647, 1898, 1897}], 
       Line3DBox[{1789, 1787, 3601, 1788, 3603, 1791, 2355, 1782, 3599, 1781, 
        2360, 1808, 3611, 1809, 3613, 3612, 1812, 1811, 2361, 3834, 1813, 
        2393, 1869, 3624, 1870, 3628, 1877, 3627, 1876, 2392, 1874, 3626, 
        1875, 2397, 1901, 3649, 1899, 3648, 1900, 1902}], 
       Line3DBox[{1790, 1776, 3595, 1775, 3594, 3593, 1774, 1773, 2354, 3833, 
        1784, 2394, 1878, 3629, 1879, 3630, 1880, 3634, 1883, 1884}], 
       Line3DBox[{1798, 1793, 3604, 1792, 2359, 1806, 3608, 1742, 2334, 1731, 
        3580, 1720, 2328, 1721, 3579, 1726, 3582, 3581, 1734, 1737, 2346, 
        3827, 1763, 2367, 1825, 3651, 1903, 3650, 1886, 3638, 1887, 2395, 
        1888, 3639, 1840, 2372, 1839, 3643, 1895, 2396, 1896, 3644, 1890, 
        1889}], Line3DBox[{1802, 1800, 3606, 1795, 2357, 1797, 3610, 1739, 
        2333, 1741, 3588, 1749, 2339, 1723, 3578, 1725, 3583, 1735, 2347, 
        1766, 3591, 3590, 1765, 1764, 2352, 3832, 1772, 2387, 1828, 3616, 
        1826, 3615, 1827, 2384, 1859, 3640, 1885, 3636, 1822, 2365, 1820, 
        3620, 1844, 2374, 1842, 3646, 1837, 2371, 1835, 3642, 1894, 1892}], 
       Line3DBox[{1803, 1744, 2335, 2248, 3819, 1743, 2337, 2249, 3820, 1727, 
        2329, 1728, 3818, 1732, 2331, 1733, 3829, 1754, 2342, 2250, 3822, 
        1750, 2340, 1751, 3826, 1757, 2343, 3823, 1758, 1761, 1762, 1561, 
        2271, 1562, 1563, 3765, 2135, 2136, 2137, 2484, 3864, 2134, 2133, 
        2478, 3863, 2132, 2126, 2474, 3763, 2127, 2479, 2073, 3731, 2074, 
        2461, 2079, 3752, 2264, 2460, 2078, 3754, 2118, 2469, 2098, 2099}], 
       Line3DBox[{1807, 1805, 3607, 1804, 2358, 1746, 3585, 1745, 2336, 1747, 
        3586, 1729, 2330, 1730, 3584, 1736, 2351, 1770, 3592, 1769, 2350, 
        1755, 3589, 1756, 2345, 3825, 2251, 1759, 2344, 3824, 1760, 2381, 
        1852, 3841, 2255, 2377, 1847, 3622, 1867, 2389, 1866, 3623, 1865, 
        2388, 1864, 3637, 1816, 2363, 1815, 3614, 1824, 2366, 1823, 3618, 
        1838, 2375, 1831, 3617, 1832, 1833}], 
       Line3DBox[{1846, 1845, 2376, 2254, 3838, 1830, 2369, 1818, 3836, 1817, 
        2368, 2253, 3837, 1829, 2380, 2257, 3846, 1850, 2378, 2256, 3840, 
        1851, 2382, 1849, 3839, 1848, 2383, 1858, 3842, 1857, 2234, 2515, 
        3808, 2233, 2229, 2228, 2518, 3872, 2236, 2227, 2513, 3869, 2224, 
        2223, 2524, 3814, 2245, 2523, 2207, 3798, 2267, 2499, 2210, 3806, 
        2217, 2505, 2206, 3797, 2205, 2498, 2203, 2204}], 
       Line3DBox[{1891, 1893, 3641, 1834, 2370, 1836, 3645, 1841, 2373, 1843, 
        3619, 1819, 2364, 1821, 3635, 1862, 2386, 1861, 3843, 1860, 2385, 
        2258, 3845, 1863, 3844, 1853, 2379, 1753, 3821, 2341, 1752, 1771, 
        3830, 3831, 1768, 2349, 1767, 3828, 2252, 2348, 1724, 3577, 1722, 
        2338, 1748, 3587, 1740, 2332, 1738, 3609, 1796, 2356, 1794, 3605, 
        1799, 1801}], 
       Line3DBox[{1907, 1906, 3653, 1905, 3652, 1904, 2398, 1908, 3674, 1909, 
        2399, 1910, 3673, 1945, 3672, 3671, 1946, 1943, 2403, 3848, 1944, 
        2429, 1987, 3695, 1985, 3694, 1986, 3697, 1989, 2427, 1990, 3708, 
        2008, 2431, 2007, 3705, 2013, 3704, 2012, 2011}], 
       Line3DBox[{1913, 1911, 3654, 1912, 3675, 1947, 2404, 1948, 3676, 1939, 
        3668, 3667, 1938, 1937, 2405, 3849, 1949, 2426, 1984, 3696, 1988, 
        3709, 2019, 3710, 2020, 2433, 2017, 3707, 2016, 3706, 2015, 2014}], 
       Line3DBox[{1922, 1915, 3655, 1914, 2400, 1924, 3659, 1923, 2415, 1928, 
        3662, 1927, 2401, 1933, 3665, 1925, 3661, 3660, 1926, 1929, 2422, 
        3852, 2263, 2440, 2033, 3720, 2052, 3722, 2054, 3726, 2058, 2453, 
        2059, 3728, 2051, 2449, 1995, 3699, 1994, 2428, 1993, 3702, 2003, 
        2002}], Line3DBox[{1934, 1935, 3666, 1936, 3670, 3669, 1941, 1940, 
        2402, 3847, 1942, 2432, 2018, 3712, 2022, 3713, 2021, 3711, 2010, 
        2009}], Line3DBox[{1965, 1966, 3686, 1969, 2417, 1972, 3688, 1976, 
        2420, 1979, 3692, 1978, 2419, 1919, 3657, 1918, 2414, 1964, 3851, 
        2413, 1963, 1956, 3850, 2409, 1955, 3683, 1960, 2412, 1959, 1962, 
        3684, 1961, 2261, 2037, 2441, 3856, 2035, 2034, 2443, 3858, 2038, 
        2026, 2435, 3853, 2025, 2434, 2024, 3724, 2056, 2451, 2057, 3725, 
        2047, 2445, 2046, 3719, 2049, 2447, 1998, 3700, 1997, 1996}], 
       Line3DBox[{1967, 1968, 3689, 1970, 2416, 1971, 3690, 1977, 2424, 1983, 
        3693, 1980, 2421, 1917, 3656, 1916, 2408, 1953, 3677, 2407, 1952, 
        1954, 3679, 3678, 1951, 2406, 1950, 3685, 2262, 2036, 2442, 3857, 
        2039, 3715, 2040, 2029, 2437, 3854, 2028, 2436, 2027, 3723, 2055, 
        2452, 2044, 3717, 2045, 2446, 2048, 3718, 2050, 2448, 2001, 3701, 
        2000, 1999}], 
       Line3DBox[{1973, 1974, 3687, 1975, 2418, 1921, 3658, 1920, 2423, 1981, 
        3691, 1982, 2425, 1932, 3664, 1931, 3663, 1930, 2411, 1957, 3681, 
        3680, 2259, 2410, 1958, 3682, 2260, 2023, 2439, 3855, 2032, 3714, 
        2031, 2438, 2030, 3721, 2053, 3727, 2042, 2444, 2041, 3716, 2043, 
        2450, 1991, 3698, 1992, 2430, 2006, 3703, 2005, 2004}], 
       Line3DBox[{2097, 2096, 3743, 2095, 2468, 2092, 3742, 2077, 2459, 2076, 
        3732, 2075, 2462, 2080, 3746, 2103, 2477, 2129, 3764, 2475, 2128, 
        2131, 3862, 2476, 2130, 3769, 2146, 2483, 2141, 2139, 2138, 3766, 
        2140, 2142, 2231, 2514, 3870, 2230, 2225, 2512, 3868, 2226, 2221, 
        2510, 3867, 2222, 2511, 2175, 3785, 2176, 2500, 2208, 3799, 2209, 
        2504, 2192, 3795, 2193, 2497, 2202, 3796, 2201, 2200}], 
       Line3DBox[{2107, 2109, 3755, 2113, 2466, 2115, 3757, 2060, 2454, 2062, 
        3733, 2069, 2457, 2071, 3747, 2104, 2482, 2145, 3768, 2481, 2144, 
        2122, 3762, 3761, 2123, 2473, 2124, 3767, 2143, 2232, 2516, 3871, 
        2235, 3809, 2220, 2218, 2507, 3807, 2269, 2508, 2174, 3783, 2172, 
        2491, 2170, 3800, 2211, 2501, 2213, 3804, 2196, 2495, 2188, 3793, 
        2190, 2194}], 
       Line3DBox[{2153, 2154, 3775, 2155, 3777, 2157, 2488, 2090, 3739, 2089, 
        2485, 2147, 3770, 2148, 3772, 3771, 2150, 2149, 2486, 3773, 2151, 
        2521, 2244, 3816, 2247, 3817, 2246, 3815, 2239, 2519, 2182, 3789, 
        2183, 2494, 2187, 3792, 2186, 3791, 2165, 2164}], 
       Line3DBox[{2185, 2184, 3790, 2178, 3786, 2177, 2493, 2180, 3787, 2179, 
        3788, 2181, 3812, 2242, 2522, 2152, 3774, 2487, 2066, 2067, 3729, 
        3730, 2068, 3737, 2086, 2464, 2087, 3738, 2088, 3776, 2156, 2158}], 
       Line3DBox[{2195, 2191, 3794, 2189, 2496, 2197, 3805, 2214, 2502, 2212, 
        3801, 2171, 2492, 2173, 3784, 2162, 3779, 2161, 2506, 2268, 3865, 
        2270, 3866, 2509, 2219, 2125, 3861, 2121, 2472, 2265, 3859, 3860, 
        2266, 2480, 2106, 3751, 2105, 3748, 2072, 2458, 2070, 3734, 2063, 
        2455, 2061, 3758, 2116, 2467, 2114, 3756, 2110, 2108}], 
       Line3DBox[{2199, 2198, 3803, 2216, 2503, 2215, 3802, 2169, 2490, 2168, 
        3782, 2163, 2489, 2160, 3778, 2159, 3780, 2166, 3781, 2167, 2517, 
        2120, 3760, 2471, 2100, 2101, 3744, 3745, 2102, 3749, 2094, 2465, 
        2093, 3750, 2065, 2456, 2064, 3759, 2119, 2470, 2117, 3753, 2112, 
        2111}], Line3DBox[{2243, 2241, 3811, 2240, 3813, 2238, 3810, 2237, 
        2520, 2082, 3735, 2463, 2081, 2091, 3740, 3741, 2084, 3736, 2083, 
        2085}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{2550, 2548, 3495, 2546, 3186, 2560, 3522, 2538, 3180, 2533, 
        3490, 2529, 3177, 2531, 3535, 2588, 3197, 2586, 3508, 2570, 3190, 
        2572, 3505, 2582, 3503, 2566, 3449, 2565, 3826, 3236, 2708, 2709, 
        3589, 2713, 3831, 3241, 2722, 3591, 2724, 3238, 2697, 3582, 2699, 
        3251, 2764, 3613, 2766, 3253, 2741, 3598, 2743, 3245, 2730, 3594, 
        2732, 2736}], 
       Line3DBox[{2551, 2552, 3523, 2553, 3183, 2554, 3526, 2558, 3184, 2555, 
        3496, 2534, 3178, 2535, 3536, 2617, 3528, 2589, 3451, 2583, 3506, 
        2541, 3492, 3387, 3450, 2584, 3822, 3232, 2711, 2726, 3592, 2725, 
        3828, 3461, 2700, 3583, 2689, 3579, 2690, 3254, 2760, 3611, 2761, 
        3248, 2738, 3596, 2737, 3243, 2733, 3595, 2734, 2752}], 
       Line3DBox[{2562, 2561, 3187, 2563, 3497, 2544, 3182, 3146, 3491, 2536, 
        3181, 2542, 3493, 2543, 3193, 2577, 3509, 2573, 3191, 3148, 3499, 
        2568, 3192, 2574, 3501, 2579, 3195, 2580, 3502, 2581, 2908, 3303, 
        2907, 3684, 2903, 2902, 3305, 3685, 2912, 2901, 3301, 3682, 2900, 
        2899, 3307, 3852, 3160, 3306, 2879, 3848, 2880, 3288, 2885, 3849, 
        3158, 3294, 2878, 3847, 3157, 3287, 2873, 2874}], 
       Line3DBox[{2606, 2605, 3519, 2600, 3516, 2599, 3621, 2602, 3455, 2601, 
        3819, 3229, 2702, 2758, 3607, 2757, 3605, 3606, 2756, 3413}], 
       Line3DBox[{2607, 2608, 3520, 2609, 3533, 2610, 3457, 2592, 3511, 3388, 
        3453, 2595, 3513, 2591, 3510, 2590, 3512, 3389, 3454, 2596, 3818, 
        3227, 2692, 2707, 3586, 2706, 3587, 3588, 2701, 3460, 3408, 3608, 
        2754, 3463, 2753, 3603, 2749, 3602, 2750, 2751}], 
       Line3DBox[{2612, 2611, 3525, 3391, 3458, 2613, 3524, 2557, 3448, 2556, 
        3530, 2616, 3459, 2615, 3527, 2614, 3531, 2618, 3529, 2540, 3447, 
        2539, 3829, 3239, 2694, 2695, 3584, 2688, 3577, 3578, 2687, 3226, 
        3407, 3580, 2691, 3465, 2744, 3599, 2739, 3462, 3410, 3600, 2745, 
        3412}], Line3DBox[{2620, 2619, 3532, 2603, 3517, 3390, 3456, 2604, 
        3518, 2598, 3515, 2597, 3514, 2594, 3452, 2593, 3820, 3230, 2703, 
        2704, 3585, 2705, 3609, 3610, 2759, 3464, 2755, 3604, 2748, 3601, 
        2747, 3411}], 
       Line3DBox[{2630, 2625, 3539, 2624, 3538, 3392, 3198, 2621, 3551, 2655, 
        3225, 2685, 3572, 2684, 3573, 2662, 3555, 2661, 3224, 2686, 3837, 
        3258, 2767, 2768, 3614, 2770, 3619, 3620, 2782, 3259, 2781, 3643, 
        2827, 3282, 3419, 3649, 2833, 3647, 2832, 2834}], 
       Line3DBox[{2672, 2671, 3567, 2670, 3222, 2682, 3576, 2631, 3199, 2632, 
        3543, 2633, 3200, 2634, 3562, 2651, 3213, 2652, 3550, 2653, 3214, 
        2649, 3547, 2629, 3541, 2628, 3207, 2644, 3839, 3261, 2783, 2794, 
        3622, 2791, 3845, 3267, 2775, 3615, 2772, 3256, 2771, 3650, 2807, 
        3274, 2806, 3628, 2798, 3270, 2797, 3633, 2814, 3277, 2813, 3630, 
        2816, 2815}], 
       Line3DBox[{2673, 2674, 3570, 2677, 3223, 2683, 3574, 3395, 3202, 2636, 
        3542, 3394, 3201, 2635, 3559, 3400, 3215, 2654, 3549, 3399, 3212, 
        2627, 3540, 2626, 3206, 2643, 3545, 2642, 3209, 2646, 3842, 3264, 
        2784, 2785, 3841, 3263, 2787, 2790, 3844, 3266, 3414, 3616, 2774, 
        3257, 2773, 3651, 2808, 3275, 3415, 3624, 2796, 3269, 2795, 3631, 
        2810, 3276, 2809, 3629, 2717, 2716}], 
       Line3DBox[{2678, 2679, 3571, 2681, 3221, 2675, 3568, 2640, 3204, 2639, 
        3544, 2637, 3203, 2638, 3557, 2663, 3556, 3397, 3208, 2645, 3548, 
        2648, 3546, 3398, 3210, 2647, 3840, 3262, 2786, 2792, 3623, 2789, 
        3843, 3265, 2788, 3640, 2824, 3638, 2823, 3281, 2805, 3627, 2803, 
        3272, 2801, 3625, 2802, 3278, 2818, 3634, 2812, 2811}], 
       Line3DBox[{2728, 2727, 3246, 3154, 3833, 2746, 3247, 3155, 3835, 2762, 
        3249, 3156, 3834, 2693, 3228, 3149, 3827, 2720, 3242, 3153, 3832, 
        2710, 3231, 3821, 3150, 2715, 3234, 3824, 3151, 2718, 2719, 2525, 
        3175, 2526, 2527, 3766, 3059, 3060, 3438, 3347, 3062, 3767, 3053, 
        3342, 3861, 3052, 3045, 3337, 3760, 3168, 3346, 3061, 3773, 3066, 
        3349, 3065, 3774, 3171, 3358, 3005, 3735, 3004, 3332, 3003, 3017}], 
       Line3DBox[{2735, 2731, 3593, 2729, 3244, 2742, 3597, 2740, 3252, 2765, 
        3612, 2763, 3250, 2698, 3581, 2696, 3237, 2723, 3590, 2721, 3240, 
        3830, 2712, 3409, 3235, 3825, 3152, 2714, 3233, 3823, 2578, 3194, 
        2564, 3498, 3147, 3188, 2567, 3504, 2571, 3189, 2569, 3507, 2585, 
        3196, 2587, 3534, 2530, 3176, 2528, 3489, 2532, 3179, 2537, 3521, 
        2559, 3185, 2545, 3494, 2547, 2549}], 
       Line3DBox[{2819, 2817, 3632, 2799, 3271, 2800, 3626, 3416, 3273, 2804, 
        3639, 3417, 3279, 2820, 3636, 3635, 2821, 3637, 2822, 2793, 3268, 
        3846, 2650, 3211, 2575, 3500, 2576, 3560, 2664, 3558, 2665, 3219, 
        2666, 3561, 2641, 3205, 3396, 3569, 2676, 3220, 3405, 3575, 2680, 
        3406}], Line3DBox[{2825, 2826, 3642, 3641, 2776, 3617, 2777, 2778, 
        3260, 3838, 2668, 3218, 3404, 3565, 2667, 3563, 2656, 3552, 2657, 
        3403}], Line3DBox[{2830, 2831, 3648, 2828, 3644, 3418, 3280, 2829, 
        3646, 3645, 2780, 3618, 2779, 2769, 3255, 3836, 2660, 3217, 3402, 
        3564, 2669, 3566, 2659, 3553, 2658, 3216, 3401, 3554, 2622, 3537, 
        2623, 3393}], 
       Line3DBox[{2844, 2843, 3654, 2836, 3652, 2835, 3466, 2839, 3659, 2852, 
        3473, 2915, 3691, 2922, 3693, 2923, 3692, 3426, 3475, 2920, 3731, 
        3331, 3000, 3002, 3732, 3001, 3733, 3734, 2994, 3482, 2995, 3759, 
        3044, 3488, 3439, 3777, 3076, 3776, 3074, 3073}], 
       Line3DBox[{2875, 2871, 3669, 2869, 3285, 2866, 3667, 2864, 3292, 2883, 
        3671, 2881, 3289, 2855, 3660, 2853, 3299, 2897, 3680, 3297, 2895, 
        2892, 3678, 3295, 2891, 2906, 3683, 3302, 2905, 2909, 3436, 3765, 
        3058, 3057, 3437, 3348, 3063, 3769, 3055, 3344, 3050, 3761, 3046, 
        3338, 3859, 3048, 3340, 3030, 3744, 3032, 3353, 3069, 3771, 3071, 
        3355, 2996, 3729, 2998, 3333, 3006, 3740, 3020, 3018}], 
       Line3DBox[{2877, 2863, 3666, 2862, 3284, 2868, 3676, 2887, 3291, 2886, 
        3673, 2841, 3283, 2842, 3665, 2859, 3663, 2858, 3471, 3159, 3677, 
        2889, 3851, 3304, 3425, 2910, 3863, 3056, 3345, 3169, 3764, 3054, 
        3768, 3486, 3434, 3751, 3037, 3749, 3038, 3350, 3067, 3770, 3068, 
        3351, 3013, 3737, 3014, 3352, 3010, 3736, 3009, 3008}], 
       Line3DBox[{2943, 2944, 3703, 2942, 3701, 2941, 3700, 3429, 3327, 2986, 
        3797, 3363, 3111, 3110, 3796, 3107, 3793, 3794, 3106, 3443}], 
       Line3DBox[{2948, 2949, 3711, 2962, 3320, 2961, 3710, 2934, 3312, 2933, 
        3697, 2926, 3309, 2927, 3726, 2988, 3721, 2973, 3322, 2972, 3854, 
        2971, 3853, 3477, 3431, 3166, 3869, 3123, 3371, 3122, 3867, 3117, 
        3807, 3367, 3080, 3779, 3079, 3778, 3078, 3386, 3144, 3815, 3143, 
        3384, 3095, 3787, 3096, 3379, 3137, 3811, 3138, 3140}], 
       Line3DBox[{2950, 2951, 3707, 3430, 3319, 2960, 3708, 2935, 3313, 2936, 
        3728, 3432, 3330, 2993, 3727, 2990, 3723, 2989, 3724, 2970, 3321, 
        3162, 3814, 3383, 3089, 3090, 3785, 3088, 3783, 3784, 3081, 3359, 
        3440, 3782, 3087, 3376, 3099, 3789, 3100, 3361, 3091, 3786, 3092, 
        3445}], Line3DBox[{2952, 2953, 3706, 2955, 3705, 2947, 3316, 2940, 
        3699, 3428, 3328, 2982, 3716, 2981, 3717, 2983, 3725, 2991, 3329, 
        2992, 3798, 3364, 3113, 3115, 3799, 3114, 3800, 3801, 3086, 3360, 
        3441, 3802, 3105, 3362, 3104, 3792, 3102, 3790, 3094, 3093}], 
       Line3DBox[{2956, 2954, 3704, 2946, 3702, 2939, 3314, 2938, 3698, 2937, 
        3718, 2987, 3719, 2984, 3326, 2985, 3806, 3366, 3112, 3109, 3795, 
        3108, 3804, 3805, 3116, 3365, 3444, 3803, 3103, 3791, 3101, 3442}], 
       Line3DBox[{2963, 2964, 3713, 2957, 3317, 2958, 3709, 2928, 3310, 2929, 
        3694, 2930, 3311, 2931, 3722, 2976, 3324, 2974, 3714, 3323, 2968, 
        2969, 3715, 3167, 3858, 3481, 2978, 3163, 3872, 3124, 3372, 3174, 
        3868, 3125, 3809, 3119, 3369, 3865, 3120, 3373, 3082, 3780, 3083, 
        3382, 3142, 3817, 3145, 3385, 3097, 3788, 3098, 3377, 3135, 3813, 
        3134, 3133}], 
       Line3DBox[{2966, 2965, 3712, 2959, 3318, 2932, 3696, 2924, 3308, 2925, 
        3695, 3427, 3315, 2945, 3720, 2977, 3325, 2975, 3855, 3478, 2967, 
        3161, 3857, 3480, 2979, 3164, 3856, 3479, 2980, 3165, 3808, 3127, 
        3129, 3128, 3375, 3126, 3870, 3118, 3368, 3172, 3871, 3121, 3370, 
        3866, 3173, 3374, 3084, 3781, 3085, 3380, 3446, 3816, 3141, 3381, 
        3139, 3812, 3136, 3378, 3132, 3810, 3131, 3130}], 
       Line3DBox[{3012, 3011, 3738, 3016, 3483, 3015, 3739, 3433, 3487, 3039, 
        3750, 3024, 3484, 3025, 3748, 3747, 3036, 3746, 3035, 3034, 3343, 
        3763, 2911, 3472, 2848, 3657, 2846, 3656, 2847, 3664, 2860, 3469, 
        2857, 3662, 2840, 3467, 3420, 3674, 2888, 3470, 3424, 3675, 2861, 
        3423}], Line3DBox[{3019, 3021, 3741, 3007, 3334, 2999, 3730, 2997, 
        3356, 3072, 3772, 3070, 3354, 3033, 3745, 3031, 3341, 3049, 3860, 
        3339, 3047, 3762, 3051, 3862, 3170, 3357, 3064, 3864, 2904, 2894, 
        3296, 3850, 2890, 3679, 2893, 2896, 3298, 3681, 2898, 3300, 2854, 
        3661, 2856, 3290, 2882, 3672, 2884, 3293, 2865, 3668, 2867, 3286, 
        2870, 3670, 2872, 2876}], 
       Line3DBox[{3041, 3040, 3756, 3755, 3027, 3743, 3028, 3029, 3336, 3754, 
        2916, 3474, 2913, 3686, 2914, 3689, 2917, 3687, 2851, 3422}], 
       Line3DBox[{3077, 3075, 3775, 3042, 3753, 3435, 3485, 3043, 3758, 3757, 
        3022, 3742, 3023, 3026, 3335, 3752, 2921, 3476, 2918, 3688, 2919, 
        3690, 2849, 3658, 2850, 3468, 2845, 3655, 2837, 3653, 2838, 3421}]}}},
    
    VertexNormals->CompressedData["
1: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
njvypOHu+DWmFJyv2nb8+3QROFu/d59//tteB18iP8qCr7ZPOpz+NcIHMzlL
DtSZnqHbX6tdpECGc/b6zoUFsMR6s+8OnAsec/uMxOM6M12eNQEDLFItxCFp
h3zXPHbpxpk/RWCQeUSzH3nQXOC/SEHMw0f7O1yb+QrgZf/Xnvn3JcjsmukX
RruUuZUDFKWDt6nBvijkVfkTp7NXIL/s/1zQvWC6Exau6JS8ZsEgERKJogJ4
3ezw/lG/ui5Y0HvrQBfy+N7+YJ0tGKcPf7O2Gn8dbPRpW7jVlU0YPtX68di/
byyXZW7Evmbzqbqfv1lOVI/MnTqN/St7Y8DlHp0JDns42V0ebaS7rXfnIdQ/
8apQeMSegpp9gk/qxIrIoL+oiznybHrH8vN7w7PBMnQp55GA+eek7KAtwTrP
O+FzwsysGWwUGZ1b/VgkojVbZRJ/zl56Rla0tAoSFWTl7VD/ZNhds3bAukpY
e0zufUo7/NxVV/QLddTb9G8PnyLv5y/3XT3l2wEhR4ZaK5GXV25YpTxvf5my
TZ/Xrw3sfoZ+rUBeLhiK1lyLdeLsGJk/I9gDktq9e6ZxPjqSf9UmFK/L9aV8
4SHIgakZseX9yAf7l/vcxDmbXFwtcookJMEZk49/zFBfaWuWSNig7ik99sA3
r5gFtxdPFQd2t5KpckuShfh/zexn446iVlDKi5/iqcM5xl+24moVzlFqB1Mn
/zbAH2WbBsuvOD8U9p6eINinbd+eiviWw8T4u7BgXYpsUNQy9NpFkfIq6x9h
UbVwpF/iIUcDm6x19KaZIh+dCgb+LXVs8M9ZtXrr8kYSW/hjoSPytXrnsRQ7
s0I49rvt3yzq8CsPxHsG0pik7Qofr98nJrx6LEh+Xu0ljVvZi7pTmMRg9YtI
FZ1e4BvaL5lXxST3bR0ft6K+/Vi5W+ZdDQ1cNlb+zuToJYJNrRfd0N74TTY0
ZLQHYrtXvvLG+SPd02k3G3Xy0rKL19qf0cFx5Pug26duEps8wsON9p1GY5Ff
XnbDjzYFQ9HXdHLHwJAxjvWbdUDA4sf5Nlj4p8VKd4BJhiPVLg5jHhIzSI6r
JgWsvkegsK+C2Hgd/1uPvHAqz6GfIM9u7ofxkZJaYhnPWnjq3PxzyN0Vcs6U
w8OBx0o2myhi+sBz3SvsCyfq/g0VxI0ff3q+X6d/IhnlnjZJWA9bvh5b1m9H
QZjWmuf5cgVE9Vds78X592YyC0uf2bNhiSH/jIF0HXlGjtZzID4nfk6NizFj
grbnTfXj0E4O3F17Zx4nu2MdNt74wAC6ivwi85YO0ujv0v8Gdc6jqwaqpllM
UPefsjn5pI3E9xvYi6C9Mh3auRD3rvzKWfU+rIO42S/ujsI6lHp6va+Miw6+
Fl9rqlf3kIcv47bM/11avvwereI2BflbXqguF/9MJgX65L6inl792WrnexPU
MUydXysWF5PP+ZeV5583dUVZQEhvhAVHqw8nTPM0kcG+FQUZ2F82slTudeSR
6bs6f03s04jVoteOjvPPW3bun7JH3lF69XJbHy2H/I7wb9JF+7ajP/6eQP5a
+cK+Jbujinz1XvwwFfnikuVJa3Hku7v9a0/O4jzusODeWknUn4wH32o1UL/a
mWrRi3q6yJ30YS8NXB+f2tcfV94BCVXmEd2pDMK20Xtgif20t22s9KcxA5jr
zsaq8XWRfJVbsdfneVBNTLpkLQ3kF5/vi/3ZS7Sky3id0K7a16k6yOqFCFrs
dKQcjTTlXV9gGUTBwac9Y4claWREw2lp8FQvyL3ljdsWgOddRRdvwev53Js6
celLB+i/ZTWfwPUfa+X/U5/oJeFLAm9elaKBRbbDitb5+wS9OoPH6zpIgImX
1IcEBti7L6A98aQgUdyX342DQeqVd3I2Mbvg8oUX3be8KJgc6357y5BBdCfS
Qpu4u8DsWeoLCT8KLiTmbt21mE6C2CFpO4V74PSLNY9UUb9HrO+tUK1kkFOH
1aqXRXfAorOXxM/doMA7rfAn3yCLSLwv/+qJuj5Y4PQFPoznXmpAVHBqO9Es
bXzdgHw6w3t8z/z/8YMf3i7mF+ohmyVtOTgF6BB2TmyjOsZZEnsu1YTVRcxt
eIPTORhgy2Pxs3f+e6oDH+Qf4bzn56ThRjNvhvf3F9cew344+nfXqc9lbFKu
3/yfXWUV0E8lHbmL9qKHjp7xZkwyvryeJ7WyHeKqVHbNP6/j4RdthV3z58a6
2laP+vpQ/7TqPvS/ZVOhnmUoRTiEV3duiEiD0VyO9ZXz9wmuvrHyQipFeBo9
4kmIIinhWOJ0EPerl1Z/YYER4lrl2x0U8tuDSgH3VLTfLNPV3n8H57C9c6af
Aj+Df2Gh98tbFGzKUzK2xzktcc+vCq3AbcRgjLsoB/NpRG89X444fjRrLvXG
gzZ41HOuRxTzX8klcGIE572LtsVWnoJ1cHKBwfVzDyi4U3qIXoQ8JnKMP8p0
UQFcVxtzqcP1XoWVzauwTm18JDeovMwE3yWW7jroX6ogwKrpM0XO/jRMDvih
RGCr+GaPCjZ43/6gZoO4G702W4tDrREcwjVVzteyofm1dcumPBa5fTKaP/hL
K3itteedf16QXmdp2evLbcReV1klZ5AJUVpjr5wvYD14+q9oH+whSysCNg+i
Hs5449Est4+Ck/zrBffl1ZLgbTmNF7D/fu6N27OGUMDz0b62Oa2bjLgJHxV/
TAdFUWmexzjX7VkmeGPqajnxCfqqGrWOAuPf2j7FGE9a7aHbqV9biW8pzVc0
mwWn/FYH8iFuqg4aD5sdbiRqw2ZdNV/Y0HQx9NcO9B+sfYc6FkonYlK+D48k
dgOv2Mt7xhhPdtAz41rkN0bBnSXwvhbWScSnCtqifdhQWHGISVrFq271XWiD
UyuX9hzEuWrvpzX7CtbhHGPo/tfbrhx2bx8tPrCHAuVXhzO6tSiSwiGqd9i6
AsJ6pB76Yx6cBLLcs5toJFktMb2hvwe+Jr7PqcY4862W+iY59ZGSNzXaja4H
iayZltA0zjkcLtWZzHImOeS5IMdmRy/4iUvoxOUxQe6z47CnQS+5IfBu7Upc
l9G1KbO6gAmWw7HsrZx65Ffp5kx/pQEQHNn5zg/z9ruwLGW7mzI5+tbrpVor
BXXxipfXnKfgHH1LrWRgEZmU0uUtwP2YqazV6DojTz6v2Ttb/teNBO+85cKa
+w4ufFZ/ny9fTz67RjfcmftOnGgbqmKv3gPJCyucv6QaYt5btabRvqLN8KWp
vTXJ5bxUmID5nuXjXh32jxCHCM57Pxz6wCAx/qMM5qc14VbgqmsVxKr6TGIx
8l5TpU5uKdrlmzx8nhTvJMLHPdLKufqAq9V2xjqHCRFb+P+UbBsgXePE6K6Z
MfE2sHpn+RD7956gpMKQNGlvV3RqSKMgbkJs2RjapVs3e20aTSWMqMtPvj6h
YOLz5oHq+xRoaI5Nv/bpIMWvHnc8xXn8mbvTovnnRUSEhAmdasghL60YOfPP
F7Mw8XrBeDB/3/R3l/TqKiKaUbZishx5+LhtNqB/rgehPUXmzeSXMWtNix8L
oo6MXxrHvi6J4FvKJfGZLPiTZ6F0lwLepXxz29Gf0x9Pyws8xeTSxy+aj40o
GLmjpEcwnrg2+zd1dZ9IUMthdRr6PfvswJml/hTcNmFlB68qIK4digG5eE4v
Lg1XX0U/qz6+WanE1UT20JaaOw+yQNFby60ef+6xQ+p5GepQ04KgDzo3iyCj
SObqAJ77Yb8PNzpaKNKffS6Nc5UKuStXcfAs5vmKxO9Iee4+IqyRqn01SIPU
Xx1SLUGcV+JxHF11UZE8qYuXP1Q8//yH4icrfSgYjGG+NODD8xdrOz+XR4HA
6KB8P+KG5a6U/ljhOqIRE8qodmXDbjf7CjauP6PewXrzoI1sulmV+xHrsrv2
1Ogy9H87d43trQVdxLrq05VSQwYsPcaT8AhxScjjJk8P6tDhM3Ijg/mZZM1T
KRshzP9oTJeeE+LYs+kvvfQNBURjUu/KNcxD+MrWbCWcH9Ls7e4v4GsiWzYJ
PJe8iXkdtKs4a8AganIhUU6Lu4h3wWTp/PMWpCzs/zuMOBmwdUW4zOo6cr/M
474Znle/U4zOAOr0O1EnlpqlfibK/a2rGuefg7F6949gnENE1GLqhAWLSVn1
yMZS3Fel5Yn13/OYJDR4pfT+x23EbD3PfkM8x3X1pfdqvzCIfsaqmKcBHeQY
dIcpXqcgV6F1veEc6mxrfpXjQ13kydORX02YtyCxffoai+jkWE/89J7lPeTj
MLPhNp7/yu/0Pfa1HUSFy1O29iODTBhHtb1AHpcvVuoSSWkng39jrw6h/pcv
uGXribyzfsXt2fGGKrJ3uPRQfRGbBKo91CK4PlSv5t+1k83kfWysVKU/i8jd
9a/airyWxquz0HUtjYi86L3xYKaX1Ow7mLMD7QsWXl1pO95LdiqHfZqUphG9
3s6dfuhf0bd76lk8g5Q9XazP3dZBTh5aX+KM8TcPMBZILOkhCw14ZMuX0En4
/a755yGD4pYtM79xDtvy7rDMym85RMJSTrQN7VUfv1QdRP5tOBeou761ilQa
pT8Wn3+uC29D7Fbk05A0q78h6WlkMJxmMYN5+PDHenPFSSZxT3puYZ3dTh7X
ZAUq4vqEayXrhnxZZMJmjAycbSaSaawJuzI2uHoF25rUsMn9mtcpdXqN5Ejt
wrjSebz9XflWwa2cJPFnLH8pSyGuHVGfvy/Y8srs3TaOCiJgGfnY8TBFwguW
UeOqFMTnO73pKNhJzkS8FL3K20dqnjLtrqAfXc/oP0+6Ckk1xxjvN1eKqJwX
cL+vgbzQsq3DPquWmEpecfHB/f1yZL+cO4f9+GE6eO3FNvLfRzV/rVEm0YqL
CN2G15Xizuf9ntRNniyPnb30lE4aHN5HP0F+qdgrsF6rkUYOl4b0v//RQ6Rt
XwgV4PrwsWc3LR7TCb3Pqv9QTjc5bXvouSGul+mJ9+vv6yFfamqkl7fRyA6+
2zax1rjf8HZmH84VN4x8G3hd24hp+rl8OS3sXxBS8cf6WPhqsBLKa0lc3VyM
2W4K3owUP/2uSZFD2xyv+t6uIDqinimhiBtFDSvF+JDXoobucA/eKicv5LYW
zT+nzt+1s1YFcUZL8enOsdAi4vuR32IbzlfFn2WufdzXSzImZB5yVjIJ3zqm
+HAGExJ1C5Yk/9QlvGJyftq7Boj1PgXzdZlMuPdQY06siEn07xYurzfsJRtt
k2NulxkRj/cyx9dHW5Lw6ovb/iKfCJcvluIrYUPdwOz9DfsaiUPLWvaCRjY5
/1F7RBjPPeKKn6vFBCEnTHuzZd36yLbjkVuqkXdkh2W8U3NY5JGhwPkLPa3E
4HK9On8VG0xB03G6uZWIpkWpHylgkez3VUMWHhQMPRPx9eJoIpUrL0gKjbCI
btCc1S7Eh4xVXFVaXF3Eau8pOt2YQYQyMk3n39ujHMTkF2J0EVmN/L5ubgbx
txrqXI84dqzde45rZQHh95d2TLejyGTkca1sxIfCqeJN9+9lEONHZStUsN77
xp+5JiPOV+eGaJULrie0uHL5q1nz/2dNG5p/zgnlcG/VjqV1RC72MXv4Cpts
u5S35jLWv6/vZ+ei1hwiyS8W8wbn3OLHHvAH+2VWVEjnX1MKOdT/a8fOCIqc
2L88JWP++/xutcmlA9Kko3Fb9NUMilx+4/DgMMb5fdKcpefdQcLen/TbWs8g
16UY4sUYz5zer4HbwW2kgGd3cF4Wk+QZuL55g/XvmnTdRMxFmQgeiRlY8pUi
B7j15Xci3m5YKZX1nCuXrL77zmd+3iN93D+c579/9XzqkNV5RTLGwTz+uJQi
qV9di0fdKRAUJeefcheT0/uXMX8Y43y4+lWBNeKJ7aIB0b/hHbC1T8StsIoB
C7f8vB2G9jk7bbNG3za4KnFi5AAw4Yt5cPr8fbu3FPIl1RfWwbfrF5nqbmwY
fFx3dV7fmr7/wlmwuAeiD4rdSMV5IShaLrUDeed1ZsPB5tlO4OjfXNFvxICV
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
Uvl85le4CQVFSWp53m5nou7qcydrpxjIQV6hUGOCjGLU/qsLrWCi2Gt2FyKr
meg/2VsnNb1bEa/nvol0PO9+UaeXfezDSM5YKP9eCsB/G9jWTmNelJ/+sO+W
/+aSoYdJf/5bPYyku06+ymN9Dr7J2N/Wrl2N59WvGY5OzONVzLbJqxMohdsk
1fNzE6rgfaDsXsZEqY4396UoEYgrLFR3QqgJ5WtpadG6mKiyJeNHbxEThfEJ
WQygDhT0T9fMoIWBKDobOY7j8yfl9C874X27uV87uH6GgWoOresJVWLdt70y
Hzs3rLa45fm1YY5hdFN7+OMI1vG1QlvWJkjcUYtymT2d7z6Mupd3N7SlMhFP
7GouevsaoI0uiic8GUbGlZEpcbcpSIEuKzVzTAbuC1ZpabuPoyuXSYWfCulo
y/3nGvGECFoTRDVdOjSKZK5fXksuoaPml8vZLmEtapsjiOMhMqPo6kHe15/l
aMjF0p7tYvwwonFk3713tQvFtGvwcL2jo6OfCqVa8uloviej0yV0CLlvFFFP
u0VBUyPDut14PaulTo3RdwagtlJ/5S8eb93Y9WPgKx3dr1Eyd4gdQhc+8fNU
3aSggJymsUvXxlHHgNyeG2csoK3mg090GhMN50l5LeN1Xxh9T5DX1YL8je90
iBMYT7YnPbT9MICusv2XHxlLRUl9X0LPWRAogmvXab8rPai9fuGpzAY6Wt7W
57f9AgN9fXuma+UWFZ0KLQqXwz8f+ofcY/UbXavVRMJ6FkmHnKj75tyFMj/X
CmWx+EaD41lZcSaSlyz0Vh9rQYywZsc5jHM6XMtrpTHvOBz5cO20cDE6cGTy
biKuU7tWfnE4GRAocPYt6Vx3Gbqmv6ruA8ZVrlRXI806Ak321YbL18lDeb6l
kiPG+S8lBSfzCrBuTvkeZXhcFurl1K/ZY933SepBq/+RfqTiqqzcVk5FWxOE
Jw/FYb285Zbbas4B1JK6dkHuGhX5/Pq6IxLnaWDYqs+T6yjIjr1lzoKPgvyL
I/Z9iGO9L4H27KMLFbnEGX25tHEArbl/spnVr3N05vZ2b2EK2nTSXX7LyhB6
Y1bnOsaqa66mmTLjFPRAh9jIpTSI3PiFNaWuYR1tNxKn78BA20a+2V/xIoPK
y/cTrD6eRxKbe/bhuFiX9bB4zrQPjq75ZsOP64wVcfmYcRMFGXYZnKb/HATK
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
r5WJPU76d+8rZuAvDrHMux3dqC33qGM16F1pLd+j5EdUvNHexWI4awDZ6B9s
qz8DvlfmhPIU6IRmdEsZvyMZHaxJP/dTncBiaa0n/dqZOMrZ7X1xSgsK0vff
7XOEwG7i67tmeVtw9Cb1XyOQJ86IL7ysBt2QOLnTlTu0HktdaHohRyKQ6qmt
h1Vqmbho7/25DocOvPeU7W3lBiY6ImgXurQN1tnY6IOJDQVHiJa91bOmoK/D
hwd09Rk4g8M+9M0tKta/q2vUGkRFge8HlG65UrA8/aqSVslF7Pth8z6azzjK
UGR+f1lEx06kvK7e40M42MHseGgVHfFsHVu18o6Ob6urykfqD2GZQ46+2V/o
yNvY23sW8HNTvbNsN/hPjUlbpZnoAnRZYK34GYgjMtenTVdhHzI+ZVFN3xYj
d/KJoD3QruO65oIGtC++HuLoripGSU89134DPN/7mBHDs8DEARVjBd1Rdeg6
uqb7EtpP6/sY68K6qTBkmtPGG1DbHyVhaejnq7z9dX1Yj8/DOnI1VY0oiO/J
YwfIUxJp3t1R4L/Mjd7JHmWWoX61nS1eMeBD2pL0zcMY2Ewv+ekPi69IYpXG
gALgsOjFq85HkBcElx0N7xzqQFq3aXLboJ/hvf9m9kE/n1VqsOOqcmTn7/T7
BYxnJd4tgnXO+nvLqM8LkO8+VD4+vxP0yG/yFLUW9Gj3uPqNUXIl2jH/a9kE
eDvd9pXQh1Hg4dn4HI+lDmSkvS1qLejgg8FvvQzI97q5dzWIOfWiV8mVzSPQ
T7S3nE22OQ0fXnUjOGbpO7r4IdlUEvohyY5fsZRh4q8nL3GHDbejwrYS38Ew
yI+fBpzTLSaQePkmWTGhStKopLN58FkGOixFWm3sS0U7L3k+rAH+o+Iju38r
Qx5c9fA/kXXDaEceB1cS5wzpnvBjozonAu2dUlsZ/A4++bTlY46xQZL6teh4
gxwm+roqto8nfBjvyeC6mNLNj+6EF319/oSCxBMOep2xG8e2fpMBORUI8UxY
Bs7YM1DlyMtPJleo+OBYbnzcNSp+34W76vYQ6MRtsc0X+IcxO3FnT9jZGVL2
608baiDuPWbO2l3Mg/zuQZziug1FpO/fYx0PPyBQvNGbC/RCyL8DJyiWnypJ
bdUVR2T9CbRFO7Hvey2B45lkY5vcNpL72mnNUthHyfU/2G98JNDvEyahYQ6f
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
NjaiEPMwPAH4P7QnrUY/nIGFSPtmHkDedCy7cHrwFoFSt6j96qD24eS5OLtz
y1SE258MxcO8urfqOfC19OLOBm8VIUs6Ym8u0+5h/T9xw3EizYaGl494lEwt
fEfv3fSMWb+7v/Ukopw6N4TndBpXMkHfq/L0St9CHpRe6LVe15yGzp688Z/n
8nfspvU5fwZ8vuyfX08vhTFQpu7dLT+tvuLPsaecWO+/GfOLtUrB55Q3aghb
1RbjJ0t3tK2gPStA+sJP4DPlU/WVxrWN2NXa/30n9PPxz473dpAvSMQKVOtu
DibFRbttygsi8M+C/RttKglUvFZs6V59NEmp5tUM69zGP3yR032mBJr1k791
7l8l/pzQf/AqtAe0+vp5jDHQnPMX3lP/OjApttr8G+Qdp5wfb58qp6Ny8iTl
Z0gPvv/xbD3r/79UFzffzIB4Wsn/U3ldoBwbJZ+cYn1f5Hw6zVz1OhMttoq+
onG3YjHv2ozT0M9Ch+31ylLAqe1Pw+KVo+XnDnJHFICvru7tXlgqYaCJOLmc
7pZu/LCJfRoBbxby9Q2GmHcgrpJUdbsG1jmZp+9fAR2QWfftqRXEzbuSoU0T
b1vwp8bVec6IwEP9/V9uPqYiFzFvgenMAdx7jvHV3J3A3S5rJgKlCHTb7drS
M/c6/DD327cdzgSeFFOIbhyno7YTXZ+OO/fgD0d27jBvhHzCptN0j+cwymfa
Pc06kUBaMLn4cK6MjnWPXBjZojuElANuWGzEdPzhGuMLdb0REiy0Egf/j1wL
34keid2E5t0jTyZqE/h7/bLd/Lt6lG0ttjEJ7h+/OTy3pZSO09K6wy/vGUXX
Bac2M13TSeGpXy7zwDgfOG7TL+4i0IPe46d1OONJId0VJs/h390+y7Z6fNUw
qszh9r31xobEZaCvznr/p1PGU5Ed9Kp6LsrjD3856riGExIhvz5iT8sStKSh
ubQGdrl/39FqYW4G632egR9azI+wL2f11oYacreikverher9Ic7V/PJ0xhlI
Isytpg3yejcpjgQR2K+CpNFhjgo6zOtjsmJID3KUEf+1A/rJvybfa7WOik6/
qb99ae0g+vhPP48SSWClpD7RvKZedDZF+ZsMxIscvr13CPpfHY5NTM0IZBFS
tpXtXyXql0EbNQHPqsu96Y/ZKeilLMlGUpyCRoVzd/4LJ7DmdZ2dZqz3N8YH
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
T0GMZxPxrPdl+zLNVD22U4A3zwRuBH0/xfk5Wgv0yPL6bfU3kw04v2hHlQfo
6Suzn5hVf0yJFGVnQ+vAhd7rTN70Q97sY2seAfHiOlsn7mjfj9lyx8Z5QPd6
RL7NsOqPPVQgP3mjQsY7DdpNYkF/plfOCGiwvjd+6s9mUd6M12itrTgHOjsq
/U9xAfintIaTzcm4C9+tcemwB99Sy6+zbxL84bST/PAf8K9yue+emK8dQE+4
LWc0oL194O50JM8AXu2QcvU35AEJYk0vJFi67HVdkB94JCY9z3kt+Ewj9qPP
910HninUJz8GPfsl8MzovmMX4t4m72EIerS3d3C2AfTolFYCkSRfh47XtNYJ
Qp7+ke9lUIAABb06z/XGX4CCt+bPGcez6k7IXOaS4htAAwfthK5cpuLNe5M9
fkL7rRc7nPQuU1FhVyKfI+8AXju9but26Kcm5Z/mCviuXs1LMoUMGpbUnOsW
82DV14t81gv+p3l+9gb1EgPbrVnDOAl6xTh2bfCPbB0alzl9nWs7gdVqOxwT
wgmc27f3hIhJF6JbuYdiYwbWFX5QmMg6x1C4jHB17EcmcwbZeeXAY7JXarZA
/8trnFQOyRJoX8u5xA2ydXhzVZh+HrS7bUxR1b/EQDdeLpiFXOrCBVuX29Pu
EDi4X373NhEK2vFeKl1IhIJN0jPVD7oQuLb+W6vPDvDrz1N5g3aA/vo9bmGd
Yyi+NelAqXEfen73RtSQGg2z39BXZ9WHfrYmd/KRGg1lnUk/cNy4D1eXhBl/
iIJ1eG50OhtwMyC3Q6cNeNrYa/7Fl4ew7qnP/A4DH9Xqx07TBsuw6h+PwoP3
CWypxzVyAfBxU9VGarasGXP4868/z3ovws1A5Rz4Dq2d4zGWH4rxxtvrzrXE
QD9nNocNtzORdJu7YuvPBrzLfOEi6/f48nyciRTg07vnzQybgV+1xlUphtB+
vrdrYwvwHXvHQfJD4L91Aut+VsA6NKmSHz8IpiOeS3+zbIH/jCpEdszCOp8g
ivNvllOR2LrhizSHflyeksD/GsYTJmHjagJ+2rC6Zqf9bjIWiZaSf86qsxEY
rz4IOP5w/+ZhLsB1kq48Y8cZAsdVW7sYO5MRh9qU9TgfHV/9KiK4HnxDDz2d
Z880A3WW1VztmerCKy/fORZLETj/pwk6a01BQx+rrhw8RcEJd/2EnTQJfMif
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
AfsvwGfmWc6sp079uCiPs4kXfM3hznINVn2G0Y5Uw+OKZOz5rFL0CPguTsWx
jSwe+yee2EIUNeOaKVM7PfADG5zzt9xm1eMUmwl8YtqFP0tE8DwGH1iQ5Ct4
lVX3rIHta43gJxKe2ieWV0igv2rv9weCb3mRq5j+5RIZRxStysjnpyMfzij+
uKMUfHadrf7h7STcYiE5+j1yHPk06UauhXxhuOYy5wcbCh761Ljy3YqCkr3/
V9G1RlOZhWFk3CKX7hpSEg1FurjV9yqXrBkScqtFHE1r1ETIpZQapZJYGJfU
xLGKcU1CmDi7yKTLKelIQr7jnG9/dFRGboXT7PNr/9l/9rPX+z7Ps9d+39fd
21fWZ9ueGT9C8Fgz9FTqVNUIMM8udD3BedoqR96tT4y0JhwoLaKvrvk1jQbK
5tcfHmy/RHhjm/l+811sM4zzOq5cI+fdYRW925T4FZ+2gr9Pf2yH24XVtQdI
HGnVh2oXHOmkglzTbrv1YFibAybzSd5IWWajnUb4OFht33KLQ92gUYZEhiRv
BN5Mi+F5yP4v1M+J3j2E816K5gYkLjz6/XJNDInuXynXwBnqgPxM9bZTsjoX
lTQF1eI2qi23x/dEO0bl0UWbstMxQHvH+w3eZVSqhqrjX3cIz7V2umRdwKAs
+lCZXlVP/ZG5tOoyySsLbksb/CsYeDWwq1V6mUXJ9KyeXIMGBBfpUprmGFa+
KQiTuzFMOSrEnJFqssjkaGjDm2waXK0eL1iXsRUipY9OdwVIkJ73vBmHPBqc
RZGHHu6XoJZTWgONNwDUw+jk4yFiwA6tAvdjQtQ/uyp7hqyf3mephJYy4JHw
ihPdrQh7Up771KSyaH7+ZATvVwz9+pdq8DuMKktfXM03HqBOekY0TsrmjSo8
+MAL60Fy439cSNYRIddwwMYhGB58a5IrSeqi8mziq8P7MZqMlbhW9zJgecDm
5QlWjOaUzvqbswJkNxtV1LsOQ3mL370LnjTqcOa6apC1pIS/4dFGDHsVO4pD
NFik3vTccJgzRiX6i0+0yN5hbnPGf6slOpT3YtKD30B9+LB6j348Jj62vIlu
w+jes7e0/coO6mrdwRq7ZAyS0TXKw/UY6eT5GV1Z20It95V0V5zHkPOg+ZtC
+z1q0M3oxtEmDF+Da186n8GQrpaqrOLRQjnbFhq2PcQwxZtUGkjDkBBQFFto
UUrdM9vPuN/FcDMqyYXmMlAl5TR3VSpCWsn31uRsFjKLz3HP2mJYGDkhrb3I
Up12B6gpRRYq5Fft9tonhoqJFenrY4RIsnlky7/RQrBtzQs46EoDRefZJppu
hc1OmtzOZAnYX6zttvDAcHXA6119ZA/ay1H5KXqRCAJ9wkO1exgwyFW9Xz0s
RhmBtqUuwwK4Hlvnb0Hy8a1z0g3nvGkUH0Kvu+NJw9r48DqtIAyL5nPe9hYL
KKOI4LFoGsNL9buzlSS+YoJiTROrMWh5OzWt+FZHPYz/uXMn4aMt24IXPyHn
77i1pO5sBJ8yTPMNktWV+O+wXKhE8KqMinUaLGyh3NS273Un8bZUmmBWPiqA
g9xBVdmch6NMb3b4LoxqmuI/LlvAB55lkv3dpwzqNqqpkMjqBi/+2dvZRfyG
XZlLYWsfFegjCL/hgFEG08RM6vDhi53ls40vGIgTnjMM8sOomXG33nu4B0af
VDp2E5/UjXSzIpwxanw7v7/gGQOjb67vXqXJh++cEUvtMDFaor97mjksBLcE
Y/XpUCFwM0c4ObL+WiMTQy5fxGCcxbq+GBPA68m5oAiaQT9INoWligQwkbfj
TqhIDCmJ/elJdsQn9FmfKu1ikMFM/crgH/mI8lzY7R5A+F3vtf4Wokui/TNM
34X0oH3ej1mG7GdHzprkz2ORxnE31WbT/6iOJSU8OaL7FrOJcY2fBCjO37q3
9rMYZcmP9FoRHXUte8rrmJClDHPyizYrsWhsxMzDisugxqG8tn/4iiAtUKtd
k8Mi8angRFlfF8dlKX1idREaF84+sjjYA/JKUet+t8XI+0LgQNkbBqlI3m/n
6RG8eyN35joS/zt9UddTm4/M7AOavfkMfJ0KoH35sv4JUuvvYwL0SiXq/mmC
R6r+njbeZqJLF2jUzjmy1P4jlTpJaizM+Mw60b+IUdfO9pvcBCHyQtl8gwQh
ROZyBatfMSi5LNzMk9y3WZW/vfCzAO70W+tm5jIo/GS6TVyBIhg7pilr5rPw
P16SvbQ=
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-10, 10}, {-10, 10}, {-10, 10}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellLabel->
  "Out[124]=",ExpressionUUID->"d06c7641-46a9-4c30-a374-165712a6f02e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ContourPlot", "[", 
   RowBox[{
    RowBox[{"{", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Evaluate", "[", " ", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"hyperboloid4pt1", "  ", "/.", " ", 
             RowBox[{
              SubscriptBox["Z", "0"], "\[Rule]", " ", "0"}]}], " ", "/.", " ", 
            RowBox[{
             SubscriptBox["Z", "3"], "\[Rule]", " ", "0"}]}], "  ", "/.", 
           "  ", 
           RowBox[{
            SubscriptBox["Z", "4"], "\[Rule]", " ", "0"}]}], "   ", "/.", " ", 
          RowBox[{"\[CapitalLambda]", "\[Rule]", " ", "3"}]}], " ", "/.", " ", 
         RowBox[{"a", "\[Rule]", " ", "2"}]}], "  ", ")"}], "]"}], "  ", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Evaluate", "[", " ", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"hyperboloid4pt1", "  ", "/.", " ", 
             RowBox[{
              SubscriptBox["Z", "0"], "\[Rule]", " ", "0"}]}], " ", "/.", " ", 
            RowBox[{
             SubscriptBox["Z", "3"], "\[Rule]", " ", "0"}]}], "  ", "/.", 
           "  ", 
           RowBox[{
            SubscriptBox["Z", "4"], "\[Rule]", " ", "0"}]}], "   ", "/.", " ", 
          RowBox[{"\[CapitalLambda]", "\[Rule]", " ", "3"}]}], " ", "/.", " ", 
         RowBox[{"a", "\[Rule]", " ", "1"}]}], "  ", ")"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], ",", " ", 
    RowBox[{"{", " ", 
     RowBox[{
      SubscriptBox["Z", "1"], " ", ",", " ", 
      RowBox[{"-", "2"}], " ", ",", " ", "2"}], " ", "}"}], " ", ",", " ", 
    RowBox[{"{", " ", 
     RowBox[{
      SubscriptBox["Z", "2"], " ", ",", " ", 
      RowBox[{"-", "2"}], " ", ",", " ", "2"}], " ", "}"}]}], " ", "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Pick", " ", "two", " ", "different", " ", "values", " ", "of", " ", "a", "  ",
     "then", " ", "plot", " ", "constnat", " ", "x", " ", "and", " ", 
    SubscriptBox["\[Eta]", "0"]}], " ", "*)"}], " "}]}], "Input",
 CellLabel->
  "In[125]:=",ExpressionUUID->"fe0d9acc-da29-469a-8b65-71cb8fc2373c"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJx1mQl0VdUVhiMO4NIAWhcscIgMC21VqEAoLpAtgnapsZGxigMIRhGZRwEB
oRbQoqCCKIIDCBEiSKLM2A1iAwQICRCQImMQzMwQCSbkvd7cs79Lc1f71l0+
7+MO5+zz7//b+6RR3yFdk2rExMS09/5T9d09bvOEq8pSZcWkNZHD5VGN8T+b
NsbY/+xp+sh7TR9ZqAWS+cmKSFTH3JGaVW+kd67XD/7SO+/ft0XihrJUPdQv
85U87/40//o0fbnp8OmbvPMZedfW+eKzNE0736rWdO98Xcq6eSnr1muClj6m
pVGtWD3o0OpBG7QgO6bVvd5533GTVvRos1EzcjNvHH0+qltLSpvsSNmsSWPj
93QvjOpC//nf69eR3MK8fO/6D3MTSyLf6/TUhC8fzotq15nljy/M+5e2PJn7
XvrxqKZXPf5Qup69v+mU2KNR3fnAxq59b8rQ9tl5g3P2RbXAf/8ObfDvtflx
WVGdXLfZ+AU379LM0lp3d8qI6uNfvD2wKC5bi+LebZO2Kqrz/Pfv0dIbkvrn
Lotq3bYX1715YK82aXfT6hfne//epcGcLg1ytOzVmd4R1X/679+vsYW3drty
fFQnVP1c9qPeMbqvd0Q1acXRCfP7H9QDJR3+8u0zUc31x3NI64288bpBHb3x
bn305g/W/aRnU/dMTWoe1d0NjzT4rvtRvfp0v6EdronqVf4yHdP1Q5YmLaqI
6MgGZ7Yfb3lMh4zb+/GR0oguqJ3/We38Y7rGf2xEP/DHf0KLKv/YRJdGtGmf
2QPOrc3V+LE/PfX94IiO1y6jtcspfTutwjsqdb1/3yltcmTGq61OVOryYS3O
fN3wtPY/3Oet1/ZXas6mI/fGrzytg6suW12pR/3xF+joK1KXtj55SSftj12y
7aUi/Sr9u0064JI+d+X4rfs2FWuL+JVjEmIvaQ1//Gf0QPeGw4u/qdDsGvdk
1bjnjPoymVehiTVHPVFz1Bn9yX9uhXatCu+cszrPv6BcZ/vzOafxt+2KG9i+
XHObF59oXnxOP5q/3Tt+0y3+57w++l7Vhb/pG53aekepfjkjwzsuarOq298r
1dsaFnTqN+Gixv91hHf8qlvHb/SOMq3xYp0P7+9zQdf6cbigF17+tOoIvvmd
67iP5/Bc3sN7GQfjYpyMm3kwL+bJvIkDcSFOxI04ElfiTNxZB9aFdWLdWMfp
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
Tez9ng==
    "], {{}, {}, 
     TagBox[
      TooltipBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        StyleBox[LineBox[CompressedData["
1:eJwl1WV7EAQUBeCN0d0N2+jubkY3jG4YnaM7N7q7u7tbCSUUbEFBwZYOpcOA
dw8f3nN/wTk3NCIyvH9gQEDAHhFzYxFEbOIQl3jEJwEJSURikpCUZCQnBSlJ
RWrSkJZ0pCcDGclEZrKQlWBCCCUb2clBTnKRmzzkJR/5KUBBClGYIhSlGMUp
QUlKUZoylKUc5alARSpRmSpUJYxqVKcGNalFbepQl3rUpwENaURjmhBOU5rR
nBa0pBWtaUNb2tGeDnSkE52JoAtd6UZ3etCTXvSmD33pR38iGcBABjGYIQxl
GMMZwUhGMZoxjGUc45nARKKIZhKTmcJUpjGdGcxkFrOZw1zmMZ8FLGQRi1nC
UpaxnBWsZBWrWcNa1rGeDWxkE5vZwla2sZ0d7GQXu9nDXvaxnwMc5BCHOcJR
jnGcE3zAh5zkFKc5w0d8zFnOcZ4LfMKnXOQSn/E5X/AlX/E13/Atl7nCd3zP
Va7xAz9ynRv8xM/8wq/8xu/8wZ/c5Ba3ucNd7nGfBzzkEX/xN495wlOe8ZwX
vOQVr3nDP/zLf/zPW2LKH0gsgohNHOISj/gkICGJSEwSkpKM5KQgJalITRrS
ko70ZCAjmchMFrISTAihZCM7OchJLnKTh7zkIz8FKEghClOEohSjOCUoSSlK
U4aylKM8FahIJSpThaqEUY3q1KAmtahNHepSj/o0oCGNaEwTwmlKM5rTgpa0
ojVtaEs72tOBjnSiMxF0oSvd6E4PetKL3vShL/2IGe9IBjCQQQxmCEMZxnBG
MJJRjGYMYxnHeCYwkSiimcRkpjCVaUxnBjOZxWzmMJd5zGcBC1nEYpawlGUs
ZwUrWcVq1rCWdaxnAxvZxGa2sJVtbGcHO9nF7sD3f+sdAOa+Cw==
          "]],
         FontFamily->"Arial"]},
       RowBox[{
         RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
              TagBox[
               SubscriptBox["Z", "1"], HoldForm], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
              TagBox[
               SubscriptBox["Z", "2"], HoldForm], ")"}], "2"]}], "\[Equal]", 
         "4"}]],
      Annotation[#, 
       HoldForm[$CellContext`Z\[UnderBracket]Subscript\[UnderBracket]1]^2 + 
        HoldForm[$CellContext`Z\[UnderBracket]Subscript\[UnderBracket]2]^2 == 
       4, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        StyleBox[LineBox[CompressedData["
1:eJwV0Nc6kAEAgOEfKUqklFJmRERkj6twCS6AO+lWMrOKskdZFaFIMqKIysx4
O3if5zv+UmvqqmtDgiB4yjNRTwONNNFMC89ppY12OujkBS/poptXvKaHXvro
Z4BBhhhmhFHe8JYxxplgkine8Z4PTDPDR2aZY55PfGaBRb6wxFeW+cYKq6yx
znc22OQHP9lim1/ssMtv/vCXPfY54JAjjvnHCaec/R8ZGgQhhBLGBcK5yCUi
iOQyV4jiKtHEcI1YrnODOG5yi3huc4cE7nKPRJJIJoVU0rhPOhk8IJMsHpJN
Do/IJY/H5FPAEwopopgSSimjnAoqqeIc3xVOOg==
          "]],
         FontFamily->"Arial"]},
       RowBox[{
         RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
              TagBox[
               SubscriptBox["Z", "1"], HoldForm], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
              TagBox[
               SubscriptBox["Z", "2"], HoldForm], ")"}], "2"]}], "\[Equal]", 
         "1"}]],
      Annotation[#, 
       HoldForm[$CellContext`Z\[UnderBracket]Subscript\[UnderBracket]1]^2 + 
        HoldForm[$CellContext`Z\[UnderBracket]Subscript\[UnderBracket]2]^2 == 
       1, "Tooltip"]& ]}], {}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-2, 2}, {-2, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->
  "Out[125]=",ExpressionUUID->"efa0bea9-b563-46f7-b580-24e517057463"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "transform4pt14", "]"}], "\[IndentingNewLine]", 
 RowBox[{"transform4pt14", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   SubscriptBox["\[Eta]", "0"], "\[Rule]", " ", 
   RowBox[{"a", " ", 
    RowBox[{"Exp", "[", 
     FractionBox[
      RowBox[{"-", 
       SubscriptBox["t", "0"]}], "a"], "]"}], " "}]}]}]}], "Input",
 CellLabel->
  "In[126]:=",ExpressionUUID->"2502e5e4-1b85-411b-ab1a-b540f0b68fd7"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Eta]", "0"], "\[Rule]", 
  RowBox[{"a", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SubscriptBox["t", "0"], "a"]}]]}]}]], "Output",
 CellLabel->
  "Out[127]=",ExpressionUUID->"f75424ad-6a21-41a9-9893-15e3d1a7a93f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dt", "[", " ", "transform4pt14", " ", "]"}], "  ", "/.", " ", 
  "dtReplace", " "}]], "Input",
 CellLabel->
  "In[128]:=",ExpressionUUID->"e8f7bc3f-b2aa-46f6-9b65-01bb72b1306d"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["d\[Eta]", "0"], "\[Rule]", 
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       SubscriptBox["t", "0"], "a"]}]]}], " ", 
   SubscriptBox["dt", "0"]}]}]], "Output",
 CellLabel->
  "Out[128]=",ExpressionUUID->"1b55d528-f08c-43f4-b7ec-7b1e997af217"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"lineElement4pt13", " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "lineElement4pt14", "]"}], "\[IndentingNewLine]", 
 RowBox[{"lineElement4pt14", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"lineElement4pt13", "  ", "/.", " ", "transform4pt14"}], "  ", "/.",
      " ", 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"Dt", "[", " ", "transform4pt14", " ", "]"}], "  ", "/.", " ", 
       "dtReplace"}], "  ", ")"}]}], "  ", "//", " ", "Expand"}], " ", "//", 
   " ", "Simplify", " "}]}]}], "Input",
 CellLabel->
  "In[129]:=",ExpressionUUID->"7041e634-3a20-4407-84f1-8e395856bc68"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["dx", "2"], "+", 
     SuperscriptBox["dy", "2"], "+", 
     SuperscriptBox["dz", "2"], "-", 
     SubsuperscriptBox["d\[Eta]", "0", "2"]}], ")"}]}], 
  SubsuperscriptBox["\[Eta]", "0", "2"]]], "Output",
 CellLabel->
  "Out[129]=",ExpressionUUID->"a08f7de2-1c1b-4895-be01-9962857cfa0e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["dx", "2"], "+", 
     SuperscriptBox["dy", "2"], "+", 
     SuperscriptBox["dz", "2"]}], ")"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"2", " ", 
      SubscriptBox["t", "0"]}], "a"]]}], "-", 
  SubsuperscriptBox["dt", "0", "2"]}]], "Output",
 CellLabel->
  "Out[131]=",ExpressionUUID->"d43969f7-67be-401c-ba77-569bf36343f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "transform4pt15", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"transform4pt15", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      SubscriptBox["Z", "0"], "\[Rule]", " ", 
      RowBox[{"a", " ", 
       RowBox[{"Sinh", "[", 
        FractionBox[
         SubscriptBox["t", 
          RowBox[{"-", "1"}]], "a"], "]"}], " ", 
       RowBox[{"Cosh", "[", "\[Rho]", "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "1"], "\[Rule]", " ", 
      RowBox[{"a", " ", 
       RowBox[{"Cosh", "[", 
        FractionBox[
         SubscriptBox["t", 
          RowBox[{"-", "1"}]], "a"], "]"}]}]}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "2"], "\[Rule]", "  ", 
      RowBox[{"a", " ", 
       RowBox[{"Sinh", "[", 
        FractionBox[
         SubscriptBox["t", 
          RowBox[{"-", "1"}]], "a"], "]"}], " ", 
       RowBox[{"Sinh", "[", "\[Rho]", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ",", "\[IndentingNewLine]", 
     
     RowBox[{
      SubscriptBox["Z", "3"], "\[Rule]", " ", 
      RowBox[{"a", " ", 
       RowBox[{"Sinh", "[", 
        FractionBox[
         SubscriptBox["t", 
          RowBox[{"-", "1"}]], "a"], "]"}], " ", 
       RowBox[{"Sinh", "[", "\[Rho]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "4"], "\[Rule]", "   ", 
      RowBox[{"a", " ", 
       RowBox[{"Sinh", "[", 
        FractionBox[
         SubscriptBox["t", 
          RowBox[{"-", "1"}]], "a"], "]"}], " ", 
       RowBox[{"Sinh", "[", "\[Rho]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}]}], "\[IndentingNewLine]", 
    "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"transform4pt15", " ", "//", " ", "TableForm"}]}], "Input",
 CellLabel->
  "In[132]:=",ExpressionUUID->"88bb9435-2464-40b1-9964-d358edef11d1"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       SubscriptBox["Z", "0"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Cosh", "[", "\[Rho]", "]"}], " ", 
        RowBox[{"Sinh", "[", 
         FractionBox[
          SubscriptBox["t", 
           RowBox[{"-", "1"}]], "a"], "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "1"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Cosh", "[", 
         FractionBox[
          SubscriptBox["t", 
           RowBox[{"-", "1"}]], "a"], "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "2"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sinh", "[", 
         FractionBox[
          SubscriptBox["t", 
           RowBox[{"-", "1"}]], "a"], "]"}], " ", 
        RowBox[{"Sinh", "[", "\[Rho]", "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "3"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sinh", "[", 
         FractionBox[
          SubscriptBox["t", 
           RowBox[{"-", "1"}]], "a"], "]"}], " ", 
        RowBox[{"Sinh", "[", "\[Rho]", "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "4"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Sinh", "[", 
         FractionBox[
          SubscriptBox["t", 
           RowBox[{"-", "1"}]], "a"], "]"}], " ", 
        RowBox[{"Sinh", "[", "\[Rho]", "]"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[134]//TableForm=",ExpressionUUID->"90059ed4-6c77-44fe-9f6b-\
6291aa44d0d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"hyperboloid4pt1", " ", "//.", " ", "transform4pt15"}], "   ", "//",
   " ", "Simplify", "  ", 
  RowBox[{"(*", " ", "true", " ", "*)"}], " "}]], "Input",
 CellLabel->
  "In[135]:=",ExpressionUUID->"771ee8d9-2898-4d44-87d1-e80491e4404c"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[135]=",ExpressionUUID->"40a3aa95-cd71-40ea-80b4-7deefa879049"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Dt", "[", " ", "transform4pt15", " ", "]"}], "  ", "/.", " ", 
   "dtReplace"}], "  ", "//", " ", "TableForm"}]], "Input",
 CellLabel->
  "In[136]:=",ExpressionUUID->"48d3fce5-fab5-4390-863e-5e8942603e27"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       SubscriptBox["dZ", "0"], "\[Rule]", 
       RowBox[{
        RowBox[{"a", " ", "d\[Rho]", " ", 
         RowBox[{"Sinh", "[", 
          FractionBox[
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "a"], "]"}], " ", 
         RowBox[{"Sinh", "[", "\[Rho]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cosh", "[", 
          FractionBox[
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "a"], "]"}], " ", 
         RowBox[{"Cosh", "[", "\[Rho]", "]"}], " ", 
         SubscriptBox["dt", 
          RowBox[{"-", "1"}]]}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "1"], "\[Rule]", 
       RowBox[{
        RowBox[{"Sinh", "[", 
         FractionBox[
          SubscriptBox["t", 
           RowBox[{"-", "1"}]], "a"], "]"}], " ", 
        SubscriptBox["dt", 
         RowBox[{"-", "1"}]]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "2"], "\[Rule]", 
       RowBox[{
        RowBox[{"a", " ", "d\[Rho]", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cosh", "[", "\[Rho]", "]"}], " ", 
         RowBox[{"Sinh", "[", 
          FractionBox[
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "a"], "]"}]}], "-", 
        RowBox[{"a", " ", "d\[Theta]", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sinh", "[", 
          FractionBox[
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "a"], "]"}], " ", 
         RowBox[{"Sinh", "[", "\[Rho]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cosh", "[", 
          FractionBox[
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "a"], "]"}], " ", 
         RowBox[{"Sinh", "[", "\[Rho]", "]"}], " ", 
         SubscriptBox["dt", 
          RowBox[{"-", "1"}]]}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "3"], "\[Rule]", 
       RowBox[{
        RowBox[{"a", " ", "d\[Rho]", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Cosh", "[", "\[Rho]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sinh", "[", 
          FractionBox[
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "a"], "]"}]}], "+", 
        RowBox[{"a", " ", "d\[Theta]", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sinh", "[", 
          FractionBox[
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "a"], "]"}], " ", 
         RowBox[{"Sinh", "[", "\[Rho]", "]"}]}], "-", 
        RowBox[{"a", " ", "d\[Phi]", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sinh", "[", 
          FractionBox[
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "a"], "]"}], " ", 
         RowBox[{"Sinh", "[", "\[Rho]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Cosh", "[", 
          FractionBox[
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "a"], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sinh", "[", "\[Rho]", "]"}], " ", 
         SubscriptBox["dt", 
          RowBox[{"-", "1"}]]}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "4"], "\[Rule]", 
       RowBox[{
        RowBox[{"a", " ", "d\[Rho]", " ", 
         RowBox[{"Cosh", "[", "\[Rho]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sinh", "[", 
          FractionBox[
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "a"], "]"}]}], "+", 
        RowBox[{"a", " ", "d\[Phi]", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sinh", "[", 
          FractionBox[
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "a"], "]"}], " ", 
         RowBox[{"Sinh", "[", "\[Rho]", "]"}]}], "+", 
        RowBox[{"a", " ", "d\[Theta]", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sinh", "[", 
          FractionBox[
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "a"], "]"}], " ", 
         RowBox[{"Sinh", "[", "\[Rho]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cosh", "[", 
          FractionBox[
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "a"], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sinh", "[", "\[Rho]", "]"}], " ", 
         SubscriptBox["dt", 
          RowBox[{"-", "1"}]]}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[136]//TableForm=",ExpressionUUID->"b6cc62e9-81d0-42f0-9b34-\
f453bc6f8c23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "lineElement4pt16", "]"}], "\[IndentingNewLine]", 
 RowBox[{"lineElement4pt16", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Collect", "[", " ", 
    RowBox[{
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"lineElement", "  ", "/.", " ", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"Dt", "[", " ", "transform4pt15", " ", "]"}], "  ", "/.", 
          " ", "dtReplace"}], "  ", ")"}]}], " ", "//", " ", "Expand"}], " ", 
      ")"}], " ", ",", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["dt", 
         RowBox[{"-", "1"}]], "2"], ",", " ", 
       SuperscriptBox["d\[Rho]", "2"], ",", " ", 
       SuperscriptBox["d\[Theta]", "2"], ",", " ", 
       SuperscriptBox["d\[Phi]", "2"]}], "}"}]}], " ", "]"}], "  ", "//", " ",
    "Simplify", " "}]}]}], "Input",
 CellLabel->
  "In[137]:=",ExpressionUUID->"32cbf83c-7c50-4185-80b5-07a030a1c9f0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sinh", "[", 
     FractionBox[
      SubscriptBox["t", 
       RowBox[{"-", "1"}]], "a"], "]"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["d\[Rho]", "2"], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["d\[Theta]", "2"], "+", 
        RowBox[{
         SuperscriptBox["d\[Phi]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Sinh", "[", "\[Rho]", "]"}], "2"]}]}], ")"}]}], "-", 
  SubsuperscriptBox["dt", 
   RowBox[{"-", "1"}], "2"]}]], "Output",
 CellLabel->
  "Out[138]=",ExpressionUUID->"6a9d5a47-0f45-4e3f-b9c6-b62a875611a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric4pt16", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric4pt16", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"lineToMetric", "[", " ", 
    RowBox[{
     RowBox[{"(", " ", 
      RowBox[{"lineElement4pt16", "  ", "//", " ", "Expand"}], "  ", ")"}], 
     " ", ",", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       SubscriptBox["dt", 
        RowBox[{"-", "1"}]], " ", ",", " ", "d\[Rho]", " ", ",", " ", 
       "d\[Theta]", " ", ",", " ", "d\[Phi]"}], " ", "}"}]}], " ", "]"}]}], 
  "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"metric4pt16", " ", "//", " ", "MatrixForm"}]}], "Input",
 CellLabel->
  "In[139]:=",ExpressionUUID->"bcbc28f8-8cfb-418d-ad34-5973b1663fbe"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], "0", "0", "0"},
     {"0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sinh", "[", 
         FractionBox[
          SubscriptBox["t", 
           RowBox[{"-", "1"}]], "a"], "]"}], "2"]}], "0", "0"},
     {"0", "0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sinh", "[", 
         FractionBox[
          SubscriptBox["t", 
           RowBox[{"-", "1"}]], "a"], "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sinh", "[", "\[Rho]", "]"}], "2"]}], "0"},
     {"0", "0", "0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sinh", "[", 
         FractionBox[
          SubscriptBox["t", 
           RowBox[{"-", "1"}]], "a"], "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sinh", "[", "\[Rho]", "]"}], "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[141]//MatrixForm=",ExpressionUUID->"a317474e-532e-4e07-a73f-\
dc3e91da6edd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eulerLagrangeEquations", "[", " ", 
   RowBox[{"metric4pt16", " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["t", 
       RowBox[{"-", "1"}]], ",", " ", "\[Rho]", ",", "\[Theta]", ",", 
      "\[Phi]"}], "}"}], ",", " ", "u"}], " ", "]"}], "  ", "//", " ", 
  "TableForm"}]], "Input",
 CellLabel->
  "In[142]:=",ExpressionUUID->"b0b4c0e4-9cf0-4967-a87d-d65300cbf7a8"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"a", " ", 
        RowBox[{"Cosh", "[", 
         FractionBox[
          RowBox[{
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "[", "u", "]"}], "a"], "]"}], " ", 
        RowBox[{"Sinh", "[", 
         FractionBox[
          RowBox[{
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "[", "u", "]"}], "a"], "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Sinh", "[", 
          RowBox[{"\[Rho]", "[", "u", "]"}], "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       RowBox[{"a", " ", 
        RowBox[{"Cosh", "[", 
         FractionBox[
          RowBox[{
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "[", "u", "]"}], "a"], "]"}], " ", 
        RowBox[{"Sinh", "[", 
         FractionBox[
          RowBox[{
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "[", "u", "]"}], "a"], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Rho]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       RowBox[{"a", " ", 
        RowBox[{"Cosh", "[", 
         FractionBox[
          RowBox[{
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "[", "u", "]"}], "a"], "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], "2"], " ", 
        RowBox[{"Sinh", "[", 
         FractionBox[
          RowBox[{
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "[", "u", "]"}], "a"], "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Sinh", "[", 
          RowBox[{"\[Rho]", "[", "u", "]"}], "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["t", 
          RowBox[{"-", "1"}]], "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cosh", "[", 
          RowBox[{"\[Rho]", "[", "u", "]"}], "]"}]}], " ", 
        RowBox[{"Sinh", "[", 
         RowBox[{"\[Rho]", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"Coth", "[", 
          FractionBox[
           RowBox[{
            SubscriptBox["t", 
             RowBox[{"-", "1"}]], "[", "u", "]"}], "a"], "]"}], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Rho]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}]}], "a"], "-", 
       RowBox[{
        RowBox[{"Cosh", "[", 
         RowBox[{"\[Rho]", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], "2"], " ", 
        RowBox[{"Sinh", "[", 
         RowBox[{"\[Rho]", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Rho]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"Coth", "[", 
          FractionBox[
           RowBox[{
            SubscriptBox["t", 
             RowBox[{"-", "1"}]], "[", "u", "]"}], "a"], "]"}], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}]}], "a"], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Coth", "[", 
         RowBox[{"\[Rho]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Rho]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"Coth", "[", 
          FractionBox[
           RowBox[{
            SubscriptBox["t", 
             RowBox[{"-", "1"}]], "[", "u", "]"}], "a"], "]"}], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}]}], "a"], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cot", "[", 
         RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Coth", "[", 
         RowBox[{"\[Rho]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Rho]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[142]//TableForm=",ExpressionUUID->"be4c28c1-cf51-4d01-8917-\
4b2ab6570efd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "transform4pt17", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"transform4pt17", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      SubscriptBox["Z", "0"], "\[Rule]", " ", 
      RowBox[{
       RowBox[{"(", 
        FractionBox["1", 
         SqrtBox["2"]], ")"}], 
       RowBox[{"(", 
        RowBox[{"\[ScriptCapitalV]", " ", "+", " ", "\[ScriptCapitalU]"}], 
        " ", ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", " ", "-", " ", 
          RowBox[{
           FractionBox["\[CapitalLambda]", "6"], 
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], " ", 
             "-", " ", 
             RowBox[{"\[Xi]", " ", 
              OverscriptBox["\[Xi]", "_"]}]}], " ", ")"}]}]}], " ", ")"}], 
        RowBox[{"-", "1"}]]}]}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "1"], "\[Rule]", " ", 
      RowBox[{
       RowBox[{"(", 
        FractionBox["1", 
         SqrtBox["2"]], ")"}], 
       RowBox[{"(", 
        RowBox[{"\[ScriptCapitalV]", " ", "-", " ", "\[ScriptCapitalU]"}], 
        " ", ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", " ", "-", " ", 
          RowBox[{
           FractionBox["\[CapitalLambda]", "6"], 
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], " ", 
             "-", " ", 
             RowBox[{"\[Xi]", " ", 
              OverscriptBox["\[Xi]", "_"]}]}], " ", ")"}]}]}], " ", ")"}], 
        RowBox[{"-", "1"}]]}]}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "2"], "\[Rule]", "  ", 
      RowBox[{
       RowBox[{"(", 
        FractionBox["1", 
         SqrtBox["2"]], ")"}], 
       RowBox[{"(", 
        RowBox[{"\[Xi]", " ", "+", " ", 
         OverscriptBox["\[Xi]", "_"]}], " ", ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", " ", "-", " ", 
          RowBox[{
           FractionBox["\[CapitalLambda]", "6"], 
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], " ", 
             "-", " ", 
             RowBox[{"\[Xi]", " ", 
              OverscriptBox["\[Xi]", "_"]}]}], " ", ")"}]}]}], " ", ")"}], 
        RowBox[{"-", "1"}]]}]}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "3"], "\[Rule]", "  ", 
      RowBox[{
       RowBox[{"(", 
        FractionBox[
         RowBox[{"-", "1"}], 
         SqrtBox["2"]], ")"}], 
       RowBox[{"(", 
        RowBox[{"\[Xi]", " ", "-", " ", 
         OverscriptBox["\[Xi]", "_"]}], " ", ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", " ", "-", " ", 
          RowBox[{
           FractionBox["\[CapitalLambda]", "6"], 
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], " ", 
             "-", " ", 
             RowBox[{"\[Xi]", " ", 
              OverscriptBox["\[Xi]", "_"]}]}], " ", ")"}]}]}], " ", ")"}], 
        RowBox[{"-", "1"}]]}]}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "4"], "\[Rule]", " ", 
      RowBox[{"a", 
       RowBox[{"(", 
        RowBox[{"1", " ", "+", " ", 
         RowBox[{
          FractionBox["\[CapitalLambda]", "6"], 
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{"\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], " ", "-",
             " ", 
            RowBox[{"\[Xi]", " ", 
             OverscriptBox["\[Xi]", "_"]}]}], " ", ")"}]}]}], " ", ")"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", " ", "-", " ", 
          RowBox[{
           FractionBox["\[CapitalLambda]", "6"], 
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], " ", 
             "-", " ", 
             RowBox[{"\[Xi]", " ", 
              OverscriptBox["\[Xi]", "_"]}]}], " ", ")"}]}]}], " ", ")"}], 
        RowBox[{"-", "1"}]]}]}]}], "\[IndentingNewLine]", "}"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"transform4pt17", " ", "//", " ", "TableForm"}]}], "Input",
 CellLabel->
  "In[143]:=",ExpressionUUID->"8442e135-fc52-43a8-a8f9-f18e7c0a7c87"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       SubscriptBox["Z", "0"], "\[Rule]", 
       FractionBox[
        RowBox[{"\[ScriptCapitalU]", "+", "\[ScriptCapitalV]"}], 
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            FractionBox["1", "6"], " ", "\[CapitalLambda]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], "-", 
              RowBox[{"\[Xi]", " ", 
               OverscriptBox["\[Xi]", "_"]}]}], ")"}]}]}], ")"}]}]]}]},
     {
      RowBox[{
       SubscriptBox["Z", "1"], "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "\[ScriptCapitalU]"}], "+", "\[ScriptCapitalV]"}], 
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            FractionBox["1", "6"], " ", "\[CapitalLambda]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], "-", 
              RowBox[{"\[Xi]", " ", 
               OverscriptBox["\[Xi]", "_"]}]}], ")"}]}]}], ")"}]}]]}]},
     {
      RowBox[{
       SubscriptBox["Z", "2"], "\[Rule]", 
       FractionBox[
        RowBox[{"\[Xi]", "+", 
         OverscriptBox["\[Xi]", "_"]}], 
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            FractionBox["1", "6"], " ", "\[CapitalLambda]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], "-", 
              RowBox[{"\[Xi]", " ", 
               OverscriptBox["\[Xi]", "_"]}]}], ")"}]}]}], ")"}]}]]}]},
     {
      RowBox[{
       SubscriptBox["Z", "3"], "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[Xi]", "-", 
          OverscriptBox["\[Xi]", "_"]}], 
         RowBox[{
          SqrtBox["2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             FractionBox["1", "6"], " ", "\[CapitalLambda]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], "-", 
               RowBox[{"\[Xi]", " ", 
                OverscriptBox["\[Xi]", "_"]}]}], ")"}]}]}], ")"}]}]]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "4"], "\[Rule]", 
       FractionBox[
        RowBox[{"a", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            FractionBox["1", "6"], " ", "\[CapitalLambda]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], "-", 
              RowBox[{"\[Xi]", " ", 
               OverscriptBox["\[Xi]", "_"]}]}], ")"}]}]}], ")"}]}], 
        RowBox[{"1", "-", 
         RowBox[{
          FractionBox["1", "6"], " ", "\[CapitalLambda]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], "-", 
            RowBox[{"\[Xi]", " ", 
             OverscriptBox["\[Xi]", "_"]}]}], ")"}]}]}]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[145]//TableForm=",ExpressionUUID->"64fb01d6-c093-4fb9-a02c-\
ebc6d5fc9fec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"hyperboloid4pt1", "\[IndentingNewLine]", 
 RowBox[{"hyperboloid4pt1", " ", "/.", " ", 
  "transform4pt17"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hyperboloid4pt1", " ", "/.", " ", "transform4pt17"}], " ", "//", 
   " ", "Expand"}], " ", "//", " ", "Simplify", "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "need", " ", "to", " ", "figure", " ", "out", " ", "complex", " ", 
    "variables", " ", "part"}], " ", "*)"}], " "}]}], "Input",
 CellLabel->
  "In[146]:=",ExpressionUUID->"6a2acec3-dde0-4f23-a52e-f85f30552c9b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SubsuperscriptBox["Z", "0", "2"]}], "+", 
   SubsuperscriptBox["Z", "1", "2"], "+", 
   SubsuperscriptBox["Z", "2", "2"], "+", 
   SubsuperscriptBox["Z", "3", "2"], "+", 
   SubsuperscriptBox["Z", "4", "2"]}], "\[Equal]", 
  SuperscriptBox["a", "2"]}]], "Output",
 CellLabel->
  "Out[146]=",ExpressionUUID->"38adb20a-6bb2-4bbf-857b-616cd21a966b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "\[ScriptCapitalU]"}], "+", "\[ScriptCapitalV]"}], ")"}], 
     "2"], 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{
         FractionBox["1", "6"], " ", "\[CapitalLambda]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], "-", 
           RowBox[{"\[Xi]", " ", 
            OverscriptBox["\[Xi]", "_"]}]}], ")"}]}]}], ")"}], "2"]}]], "-", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"\[ScriptCapitalU]", "+", "\[ScriptCapitalV]"}], ")"}], "2"], 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{
         FractionBox["1", "6"], " ", "\[CapitalLambda]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], "-", 
           RowBox[{"\[Xi]", " ", 
            OverscriptBox["\[Xi]", "_"]}]}], ")"}]}]}], ")"}], "2"]}]], "+", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"\[Xi]", "-", 
       OverscriptBox["\[Xi]", "_"]}], ")"}], "2"], 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{
         FractionBox["1", "6"], " ", "\[CapitalLambda]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], "-", 
           RowBox[{"\[Xi]", " ", 
            OverscriptBox["\[Xi]", "_"]}]}], ")"}]}]}], ")"}], "2"]}]], "+", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"\[Xi]", "+", 
       OverscriptBox["\[Xi]", "_"]}], ")"}], "2"], 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{
         FractionBox["1", "6"], " ", "\[CapitalLambda]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], "-", 
           RowBox[{"\[Xi]", " ", 
            OverscriptBox["\[Xi]", "_"]}]}], ")"}]}]}], ")"}], "2"]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         FractionBox["1", "6"], " ", "\[CapitalLambda]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], "-", 
           RowBox[{"\[Xi]", " ", 
            OverscriptBox["\[Xi]", "_"]}]}], ")"}]}]}], ")"}], "2"]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        FractionBox["1", "6"], " ", "\[CapitalLambda]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], "-", 
          RowBox[{"\[Xi]", " ", 
           OverscriptBox["\[Xi]", "_"]}]}], ")"}]}]}], ")"}], "2"]]}], 
  "\[Equal]", 
  SuperscriptBox["a", "2"]}]], "Output",
 CellLabel->
  "Out[147]=",ExpressionUUID->"d7e84f4b-c469-42af-8237-ea2de5e78b9c"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"2", " ", "\[ScriptCapitalU]", " ", "\[ScriptCapitalV]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "3"}], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", "\[CapitalLambda]"}]}], ")"}]}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["\[Xi]", "2"]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["a", "2"], " ", "\[CapitalLambda]", " ", "\[Xi]", " ", 
     OverscriptBox["\[Xi]", "_"]}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox[
      OverscriptBox["\[Xi]", "_"], "2"]}]}], 
   RowBox[{
    RowBox[{"-", "6"}], "+", 
    RowBox[{
    "\[ScriptCapitalU]", " ", "\[ScriptCapitalV]", " ", "\[CapitalLambda]"}], 
    "-", 
    RowBox[{"\[CapitalLambda]", " ", "\[Xi]", " ", 
     OverscriptBox["\[Xi]", "_"]}]}]], "\[Equal]", "0"}]], "Output",
 CellLabel->
  "Out[148]=",ExpressionUUID->"18f8361b-5d9a-4d23-a0c0-251df6f02c34"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dt", "[", " ", "transform4pt17", " ", "]"}], " ", "/.", " ", 
  "dtReplace", "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"typesetting", " ", 
    RowBox[{"doesn", "'"}], "t", " ", "work", " ", "with", " ", 
    "differentials"}], " ", "*)"}]}]], "Input",
 CellLabel->
  "In[149]:=",ExpressionUUID->"29293117-92f3-43c8-8f44-025be449b8d6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["dZ", "0"], "\[Rule]", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[ScriptCapitalU]", "+", "\[ScriptCapitalV]"}], ")"}], " ", 
       "\[CapitalLambda]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"d\[ScriptCapitalV]", " ", "\[ScriptCapitalU]"}], "+", 
         RowBox[{"d\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], "-", 
         RowBox[{"d\[Xi]", " ", 
          OverscriptBox["\[Xi]", "_"]}], "-", 
         RowBox[{"d", " ", "\[Xi]", " ", 
          OverscriptBox["\[Xi]", "_"]}]}], ")"}]}], 
      RowBox[{"6", " ", 
       SqrtBox["2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           FractionBox["1", "6"], " ", "\[CapitalLambda]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], "-", 
             RowBox[{"\[Xi]", " ", 
              OverscriptBox["\[Xi]", "_"]}]}], ")"}]}]}], ")"}], "2"]}]], "+", 
     FractionBox[
      RowBox[{"d\[ScriptCapitalU]", "+", "d\[ScriptCapitalV]"}], 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          FractionBox["1", "6"], " ", "\[CapitalLambda]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], "-", 
            RowBox[{"\[Xi]", " ", 
             OverscriptBox["\[Xi]", "_"]}]}], ")"}]}]}], ")"}]}]]}]}], ",", 
   RowBox[{
    SubscriptBox["dZ", "1"], "\[Rule]", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "\[ScriptCapitalU]"}], "+", "\[ScriptCapitalV]"}], 
        ")"}], " ", "\[CapitalLambda]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"d\[ScriptCapitalV]", " ", "\[ScriptCapitalU]"}], "+", 
         RowBox[{"d\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], "-", 
         RowBox[{"d\[Xi]", " ", 
          OverscriptBox["\[Xi]", "_"]}], "-", 
         RowBox[{"d", " ", "\[Xi]", " ", 
          OverscriptBox["\[Xi]", "_"]}]}], ")"}]}], 
      RowBox[{"6", " ", 
       SqrtBox["2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           FractionBox["1", "6"], " ", "\[CapitalLambda]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], "-", 
             RowBox[{"\[Xi]", " ", 
              OverscriptBox["\[Xi]", "_"]}]}], ")"}]}]}], ")"}], "2"]}]], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "d\[ScriptCapitalU]"}], "+", "d\[ScriptCapitalV]"}], 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          FractionBox["1", "6"], " ", "\[CapitalLambda]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], "-", 
            RowBox[{"\[Xi]", " ", 
             OverscriptBox["\[Xi]", "_"]}]}], ")"}]}]}], ")"}]}]]}]}], ",", 
   RowBox[{
    SubscriptBox["dZ", "2"], "\[Rule]", 
    RowBox[{
     FractionBox[
      RowBox[{"\[CapitalLambda]", " ", 
       RowBox[{"(", 
        RowBox[{"\[Xi]", "+", 
         OverscriptBox["\[Xi]", "_"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"d\[ScriptCapitalV]", " ", "\[ScriptCapitalU]"}], "+", 
         RowBox[{"d\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], "-", 
         RowBox[{"d\[Xi]", " ", 
          OverscriptBox["\[Xi]", "_"]}], "-", 
         RowBox[{"d", " ", "\[Xi]", " ", 
          OverscriptBox["\[Xi]", "_"]}]}], ")"}]}], 
      RowBox[{"6", " ", 
       SqrtBox["2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           FractionBox["1", "6"], " ", "\[CapitalLambda]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], "-", 
             RowBox[{"\[Xi]", " ", 
              OverscriptBox["\[Xi]", "_"]}]}], ")"}]}]}], ")"}], "2"]}]], "+", 
     FractionBox[
      RowBox[{"d\[Xi]", "+", 
       RowBox[{"d", " ", 
        OverscriptBox["\[Xi]", "_"]}]}], 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          FractionBox["1", "6"], " ", "\[CapitalLambda]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], "-", 
            RowBox[{"\[Xi]", " ", 
             OverscriptBox["\[Xi]", "_"]}]}], ")"}]}]}], ")"}]}]]}]}], ",", 
   RowBox[{
    SubscriptBox["dZ", "3"], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[CapitalLambda]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Xi]", "-", 
          OverscriptBox["\[Xi]", "_"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"d\[ScriptCapitalV]", " ", "\[ScriptCapitalU]"}], "+", 
          RowBox[{"d\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], "-", 
          RowBox[{"d\[Xi]", " ", 
           OverscriptBox["\[Xi]", "_"]}], "-", 
          RowBox[{"d", " ", "\[Xi]", " ", 
           OverscriptBox["\[Xi]", "_"]}]}], ")"}]}], 
       RowBox[{"6", " ", 
        SqrtBox["2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            FractionBox["1", "6"], " ", "\[CapitalLambda]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], "-", 
              RowBox[{"\[Xi]", " ", 
               OverscriptBox["\[Xi]", "_"]}]}], ")"}]}]}], ")"}], "2"]}]]}], 
     "-", 
     FractionBox[
      RowBox[{"d\[Xi]", "-", 
       RowBox[{"d", " ", 
        OverscriptBox["\[Xi]", "_"]}]}], 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          FractionBox["1", "6"], " ", "\[CapitalLambda]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], "-", 
            RowBox[{"\[Xi]", " ", 
             OverscriptBox["\[Xi]", "_"]}]}], ")"}]}]}], ")"}]}]]}]}], ",", 
   RowBox[{
    SubscriptBox["dZ", "4"], "\[Rule]", 
    RowBox[{
     FractionBox[
      RowBox[{"a", " ", "\[CapitalLambda]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"d\[ScriptCapitalV]", " ", "\[ScriptCapitalU]"}], "+", 
         RowBox[{"d\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], "-", 
         RowBox[{"d\[Xi]", " ", 
          OverscriptBox["\[Xi]", "_"]}], "-", 
         RowBox[{"d", " ", "\[Xi]", " ", 
          OverscriptBox["\[Xi]", "_"]}]}], ")"}]}], 
      RowBox[{"6", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          FractionBox["1", "6"], " ", "\[CapitalLambda]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], "-", 
            RowBox[{"\[Xi]", " ", 
             OverscriptBox["\[Xi]", "_"]}]}], ")"}]}]}], ")"}]}]], "+", 
     FractionBox[
      RowBox[{"a", " ", "\[CapitalLambda]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"d\[ScriptCapitalV]", " ", "\[ScriptCapitalU]"}], "+", 
         RowBox[{"d\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], "-", 
         RowBox[{"d\[Xi]", " ", 
          OverscriptBox["\[Xi]", "_"]}], "-", 
         RowBox[{"d", " ", "\[Xi]", " ", 
          OverscriptBox["\[Xi]", "_"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          FractionBox["1", "6"], " ", "\[CapitalLambda]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], "-", 
            RowBox[{"\[Xi]", " ", 
             OverscriptBox["\[Xi]", "_"]}]}], ")"}]}]}], ")"}]}], 
      RowBox[{"6", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           FractionBox["1", "6"], " ", "\[CapitalLambda]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ScriptCapitalU]", " ", "\[ScriptCapitalV]"}], "-", 
             RowBox[{"\[Xi]", " ", 
              OverscriptBox["\[Xi]", "_"]}]}], ")"}]}]}], ")"}], 
        "2"]}]]}]}]}], "}"}]], "Output",
 CellLabel->
  "Out[149]=",ExpressionUUID->"ee3b2461-b470-444d-934a-ab44274d6bdc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "transform4pt20", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"transform4pt20", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      SubscriptBox["Z", "0"], "\[Rule]", " ", 
      RowBox[{"a", " ", 
       RowBox[{"Sinh", "[", 
        FractionBox[
         SubscriptBox["t", "b"], "a"], "]"}], " ", 
       RowBox[{"Cosh", "[", "\[Theta]", "]"}]}]}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "1"], "\[Rule]", " ", 
      RowBox[{"a", " ", 
       RowBox[{"Cosh", "[", 
        FractionBox[
         SubscriptBox["t", "b"], "a"], "]"}], " ", 
       RowBox[{"Cos", "[", 
        SubscriptBox["z", "b"], "]"}]}]}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "2"], "\[Rule]", " ", 
      RowBox[{"a", " ", 
       RowBox[{"Cosh", "[", 
        FractionBox[
         SubscriptBox["t", "b"], "a"], "]"}], " ", 
       RowBox[{"Sin", "[", 
        SubscriptBox["z", "b"], "]"}]}]}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "3"], "\[Rule]", " ", 
      RowBox[{"a", " ", 
       RowBox[{"Sinh", "[", 
        FractionBox[
         SubscriptBox["t", "b"], "a"], "]"}], " ", 
       RowBox[{"Sinh", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "4"], "\[Rule]", " ", 
      RowBox[{"a", " ", 
       RowBox[{"Sinh", "[", 
        FractionBox[
         SubscriptBox["t", "b"], "a"], "]"}], " ", 
       RowBox[{"Sinh", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}]}], "\[IndentingNewLine]", 
    "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"transform4pt20", " ", "//", " ", "TableForm"}]}], "Input",
 CellLabel->
  "In[150]:=",ExpressionUUID->"c145c915-e6a5-4c79-ba61-96f327809240"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       SubscriptBox["Z", "0"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Cosh", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sinh", "[", 
         FractionBox[
          SubscriptBox["t", "b"], "a"], "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "1"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Cos", "[", 
         SubscriptBox["z", "b"], "]"}], " ", 
        RowBox[{"Cosh", "[", 
         FractionBox[
          SubscriptBox["t", "b"], "a"], "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "2"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Cosh", "[", 
         FractionBox[
          SubscriptBox["t", "b"], "a"], "]"}], " ", 
        RowBox[{"Sin", "[", 
         SubscriptBox["z", "b"], "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "3"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Sinh", "[", 
         FractionBox[
          SubscriptBox["t", "b"], "a"], "]"}], " ", 
        RowBox[{"Sinh", "[", "\[Theta]", "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "4"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Sinh", "[", 
         FractionBox[
          SubscriptBox["t", "b"], "a"], "]"}], " ", 
        RowBox[{"Sinh", "[", "\[Theta]", "]"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[152]//TableForm=",ExpressionUUID->"929137f1-86fe-427c-98ba-\
a5a552f885d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"hyperboloid4pt1", " ", "//.", " ", "transform4pt20"}], "  ", "//", 
  " ", "Simplify", "  ", 
  RowBox[{"(*", " ", "true", " ", "*)"}], " "}]], "Input",
 CellLabel->
  "In[153]:=",ExpressionUUID->"f4115b83-e0d0-4e1a-86ff-84f1a7c13026"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[153]=",ExpressionUUID->"b6b91635-32f2-4cd6-8251-50a9b5bf372d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Dt", "[", " ", "transform4pt20", " ", "]"}], "  ", "/.", " ", 
   "dtReplace"}], "  ", "//", " ", "TableForm"}]], "Input",
 CellLabel->
  "In[154]:=",ExpressionUUID->"725b587d-84fe-4337-9960-c38889035528"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       SubscriptBox["dZ", "0"], "\[Rule]", 
       RowBox[{
        RowBox[{"a", " ", "d\[Theta]", " ", 
         RowBox[{"Sinh", "[", 
          FractionBox[
           SubscriptBox["t", "b"], "a"], "]"}], " ", 
         RowBox[{"Sinh", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cosh", "[", 
          FractionBox[
           SubscriptBox["t", "b"], "a"], "]"}], " ", 
         RowBox[{"Cosh", "[", "\[Theta]", "]"}], " ", 
         SubscriptBox["dt", "b"]}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "1"], "\[Rule]", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          SubscriptBox["z", "b"], "]"}], " ", 
         RowBox[{"Sinh", "[", 
          FractionBox[
           SubscriptBox["t", "b"], "a"], "]"}], " ", 
         SubscriptBox["dt", "b"]}], "-", 
        RowBox[{"a", " ", 
         RowBox[{"Cosh", "[", 
          FractionBox[
           SubscriptBox["t", "b"], "a"], "]"}], " ", 
         RowBox[{"Sin", "[", 
          SubscriptBox["z", "b"], "]"}], " ", 
         SubscriptBox["dz", "b"]}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "2"], "\[Rule]", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          SubscriptBox["z", "b"], "]"}], " ", 
         RowBox[{"Sinh", "[", 
          FractionBox[
           SubscriptBox["t", "b"], "a"], "]"}], " ", 
         SubscriptBox["dt", "b"]}], "+", 
        RowBox[{"a", " ", 
         RowBox[{"Cos", "[", 
          SubscriptBox["z", "b"], "]"}], " ", 
         RowBox[{"Cosh", "[", 
          FractionBox[
           SubscriptBox["t", "b"], "a"], "]"}], " ", 
         SubscriptBox["dz", "b"]}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "3"], "\[Rule]", 
       RowBox[{
        RowBox[{"a", " ", "d\[Theta]", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Cosh", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sinh", "[", 
          FractionBox[
           SubscriptBox["t", "b"], "a"], "]"}]}], "-", 
        RowBox[{"a", " ", "d\[Phi]", " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sinh", "[", 
          FractionBox[
           SubscriptBox["t", "b"], "a"], "]"}], " ", 
         RowBox[{"Sinh", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Cosh", "[", 
          FractionBox[
           SubscriptBox["t", "b"], "a"], "]"}], " ", 
         RowBox[{"Sinh", "[", "\[Theta]", "]"}], " ", 
         SubscriptBox["dt", "b"]}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "4"], "\[Rule]", 
       RowBox[{
        RowBox[{"a", " ", "d\[Theta]", " ", 
         RowBox[{"Cosh", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sinh", "[", 
          FractionBox[
           SubscriptBox["t", "b"], "a"], "]"}]}], "+", 
        RowBox[{"a", " ", "d\[Phi]", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sinh", "[", 
          FractionBox[
           SubscriptBox["t", "b"], "a"], "]"}], " ", 
         RowBox[{"Sinh", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cosh", "[", 
          FractionBox[
           SubscriptBox["t", "b"], "a"], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sinh", "[", "\[Theta]", "]"}], " ", 
         SubscriptBox["dt", "b"]}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[154]//TableForm=",ExpressionUUID->"792890d9-ccef-43a3-9865-\
6f6eeb80466f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Collect", "[", " ", 
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"lineElement", " ", "/.", " ", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{"Dt", "[", " ", "transform4pt20", " ", "]"}], "  ", "/.", 
         " ", "dtReplace"}], " ", ")"}]}], " ", "//", " ", "Expand"}], " ", 
     ")"}], " ", ",", " ", 
    RowBox[{"{", " ", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["dt", "b"], "2"], " ", ",", " ", 
      SuperscriptBox[
       SubscriptBox["dz", "b"], "2"], " ", ",", " ", 
      SuperscriptBox["d\[Theta]", "2"], ",", " ", 
      SuperscriptBox["d\[Phi]", "2"]}], " ", "}"}]}], " ", "]"}], " ", "//", 
  " ", "Simplify", " "}]], "Input",
 CellLabel->
  "In[155]:=",ExpressionUUID->"5bd82b24-0912-41bf-a410-1ebbb431342c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SubsuperscriptBox["dt", "b", "2"]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["a", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         SuperscriptBox["d\[Theta]", "2"]}], "-", 
        SuperscriptBox["d\[Phi]", "2"], "+", 
        RowBox[{
         SuperscriptBox["d\[Phi]", "2"], " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Sinh", "[", 
        FractionBox[
         SubscriptBox["t", "b"], "a"], "]"}], "2"]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"Cosh", "[", 
        FractionBox[
         SubscriptBox["t", "b"], "a"], "]"}], "2"], " ", 
      SubsuperscriptBox["dz", "b", "2"]}]}], ")"}]}]}]], "Output",
 CellLabel->
  "Out[155]=",ExpressionUUID->"579f148f-7df0-48fc-8618-fac235daf92a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric4pt21", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric4pt21", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lineToMetric", "[", " ", 
     RowBox[{
      RowBox[{"Collect", "[", " ", 
       RowBox[{
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"lineElement", " ", "/.", " ", 
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"Dt", "[", " ", "transform4pt20", " ", "]"}], "  ", "/.",
              " ", "dtReplace"}], " ", ")"}]}], " ", "//", " ", "Expand"}], 
         " ", ")"}], " ", ",", " ", 
        RowBox[{"{", " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["dt", "b"], "2"], " ", ",", " ", 
          SuperscriptBox[
           SubscriptBox["dz", "b"], "2"], " ", ",", " ", 
          SuperscriptBox["d\[Theta]", "2"], ",", " ", 
          SuperscriptBox["d\[Phi]", "2"]}], " ", "}"}]}], " ", "]"}], " ", 
      ",", " ", 
      RowBox[{"{", " ", 
       RowBox[{
        SubscriptBox["dt", "b"], " ", ",", " ", 
        SubscriptBox["dz", "b"], " ", ",", " ", "d\[Theta]", " ", ",", " ", 
        "d\[Phi]"}], " ", "}"}]}], " ", "]"}], "  ", "//", " ", 
    "Simplify"}]}], "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"metric4pt21", " ", "//", " ", "MatrixForm"}]}], "Input",
 CellLabel->
  "In[156]:=",ExpressionUUID->"941e38d8-a427-4e16-ba90-bbfa2e5bbfe9"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], "0", "0", "0"},
     {"0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cosh", "[", 
         FractionBox[
          SubscriptBox["t", "b"], "a"], "]"}], "2"]}], "0", "0"},
     {"0", "0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sinh", "[", 
         FractionBox[
          SubscriptBox["t", "b"], "a"], "]"}], "2"]}], "0"},
     {"0", "0", "0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sinh", "[", 
         FractionBox[
          SubscriptBox["t", "b"], "a"], "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sinh", "[", "\[Theta]", "]"}], "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[158]//MatrixForm=",ExpressionUUID->"f83ccd42-0d64-4daf-817b-\
a2b5cccbb824"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eulerLagrangeEquations", "[", " ", 
   RowBox[{"metric4pt21", " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["t", "b"], ",", " ", 
      SubscriptBox["z", "b"], ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
     "}"}], " ", ",", " ", "u"}], " ", "]"}], "  ", "//", " ", 
  "TableForm"}]], "Input",
 CellLabel->
  "In[159]:=",ExpressionUUID->"67164b84-ae84-403b-8db1-71b737aa27d2"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"a", " ", 
        RowBox[{"Cosh", "[", 
         FractionBox[
          RowBox[{
           SubscriptBox["t", "b"], "[", "u", "]"}], "a"], "]"}], " ", 
        RowBox[{"Sinh", "[", 
         FractionBox[
          RowBox[{
           SubscriptBox["t", "b"], "[", "u", "]"}], "a"], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox[
           SubscriptBox["z", "b"], "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       RowBox[{"a", " ", 
        RowBox[{"Cosh", "[", 
         FractionBox[
          RowBox[{
           SubscriptBox["t", "b"], "[", "u", "]"}], "a"], "]"}], " ", 
        RowBox[{"Sinh", "[", 
         FractionBox[
          RowBox[{
           SubscriptBox["t", "b"], "[", "u", "]"}], "a"], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       RowBox[{"a", " ", 
        RowBox[{"Cosh", "[", 
         FractionBox[
          RowBox[{
           SubscriptBox["t", "b"], "[", "u", "]"}], "a"], "]"}], " ", 
        RowBox[{"Sinh", "[", 
         FractionBox[
          RowBox[{
           SubscriptBox["t", "b"], "[", "u", "]"}], "a"], "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Sinh", "[", 
          RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["t", "b"], "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"Tanh", "[", 
          FractionBox[
           RowBox[{
            SubscriptBox["t", "b"], "[", "u", "]"}], "a"], "]"}], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["t", "b"], "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["z", "b"], "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}]}], "a"], "+", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["z", "b"], "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"Coth", "[", 
          FractionBox[
           RowBox[{
            SubscriptBox["t", "b"], "[", "u", "]"}], "a"], "]"}], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["t", "b"], "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}]}], "a"], "-", 
       RowBox[{
        RowBox[{"Cosh", "[", 
         RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{"Sinh", "[", 
         RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"Coth", "[", 
          FractionBox[
           RowBox[{
            SubscriptBox["t", "b"], "[", "u", "]"}], "a"], "]"}], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["t", "b"], "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}]}], "a"], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Coth", "[", 
         RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[159]//TableForm=",ExpressionUUID->"736684f1-e563-4d5a-8651-\
898d88b3c70e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "differentials", "]"}], "\[IndentingNewLine]", 
 RowBox[{"differentials", " ", "=", " ", 
  RowBox[{"{", " ", 
   RowBox[{
    SubscriptBox["dt", "b"], " ", ",", " ", 
    SubscriptBox["dz", "b"], " ", ",", " ", "d\[Theta]", " ", ",", " ", 
    "d\[Phi]"}], " ", "}"}]}]}], "Input",
 CellLabel->
  "In[160]:=",ExpressionUUID->"9945282a-b1b6-4ee4-8395-002a1982c632"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox["dt", "b"], ",", 
   SubscriptBox["dz", "b"], ",", "d\[Theta]", ",", "d\[Phi]"}], 
  "}"}]], "Output",
 CellLabel->
  "Out[161]=",ExpressionUUID->"baf0e306-9d38-4cc1-b84b-ae58e2113867"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lineElement4pt21", " ", "=", " ", 
  RowBox[{"Collect", "[", " ", 
   RowBox[{
    RowBox[{"Sum", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"metric4pt21", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "i"}], "]"}], "]"}], "*", " ", 
       SuperscriptBox[
        RowBox[{"(", " ", 
         RowBox[{"differentials", "[", 
          RowBox[{"[", "i", "]"}], "]"}], " ", ")"}], "2"]}], " ", ",", " ", 
      RowBox[{"{", " ", 
       RowBox[{"i", " ", ",", " ", "1", " ", ",", " ", "4"}], " ", "}"}]}], 
     " ", "]"}], "   ", ",", " ", 
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Sinh", "[", 
       FractionBox[
        SubscriptBox["t", "b"], "a"], "]"}], "2"]}]}], "  ", "]"}], 
  "  "}]], "Input",
 CellLabel->
  "In[162]:=",ExpressionUUID->"8459e594-5a66-40c7-b90a-da6d87c16f3f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sinh", "[", 
     FractionBox[
      SubscriptBox["t", "b"], "a"], "]"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["d\[Theta]", "2"], "+", 
     RowBox[{
      SuperscriptBox["d\[Phi]", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sinh", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "-", 
  SubsuperscriptBox["dt", "b", "2"], "+", 
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cosh", "[", 
     FractionBox[
      SubscriptBox["t", "b"], "a"], "]"}], "2"], " ", 
   SubsuperscriptBox["dz", "b", "2"]}]}]], "Output",
 CellLabel->
  "Out[162]=",ExpressionUUID->"e8e11f9a-3328-4dba-af8c-0c7affa32a8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "transform4pt22", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"transform4pt22", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      SubscriptBox["Z", "0"], "\[Rule]", " ", 
      RowBox[{"a", " ", 
       RowBox[{"Sinh", "[", 
        FractionBox[
         SubscriptBox["t", "k"], "a"], "]"}], " ", 
       RowBox[{"Cosh", "[", 
        SubscriptBox["z", "k"], "]"}]}]}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "1"], "\[Rule]", " ", 
      RowBox[{"a", " ", 
       RowBox[{"Sinh", "[", 
        FractionBox[
         SubscriptBox["t", "k"], "a"], "]"}], " ", 
       RowBox[{"Sinh", "[", 
        SubscriptBox["z", "k"], "]"}]}]}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "2"], "\[Rule]", " ", 
      RowBox[{"a", " ", 
       RowBox[{"Cosh", "[", 
        FractionBox[
         SubscriptBox["t", "k"], "a"], "]"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "3"], "\[Rule]", " ", 
      RowBox[{"a", " ", 
       RowBox[{"Cosh", "[", 
        FractionBox[
         SubscriptBox["t", "k"], "a"], "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "4"], "\[Rule]", "  ", 
      RowBox[{"a", " ", 
       RowBox[{"Cosh", "[", 
        FractionBox[
         SubscriptBox["t", "k"], "a"], "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}]}], "\[IndentingNewLine]", 
    "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"transform4pt22", " ", "//", " ", "TableForm"}]}], "Input",
 CellLabel->
  "In[163]:=",ExpressionUUID->"2232119e-b7cb-47dc-8975-7dcab9ae9524"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       SubscriptBox["Z", "0"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Cosh", "[", 
         SubscriptBox["z", "k"], "]"}], " ", 
        RowBox[{"Sinh", "[", 
         FractionBox[
          SubscriptBox["t", "k"], "a"], "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "1"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Sinh", "[", 
         FractionBox[
          SubscriptBox["t", "k"], "a"], "]"}], " ", 
        RowBox[{"Sinh", "[", 
         SubscriptBox["z", "k"], "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "2"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Cosh", "[", 
         FractionBox[
          SubscriptBox["t", "k"], "a"], "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "3"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Cosh", "[", 
         FractionBox[
          SubscriptBox["t", "k"], "a"], "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "4"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Cosh", "[", 
         FractionBox[
          SubscriptBox["t", "k"], "a"], "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[165]//TableForm=",ExpressionUUID->"ef17168e-0a17-40f6-8ed5-\
d2b6bf8e8543"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"hyperboloid4pt1", " ", "//.", " ", "transform4pt22"}], "  ", "//", 
  " ", "Simplify", "  ", 
  RowBox[{"(*", " ", "true", " ", "*)"}], " "}]], "Input",
 CellLabel->
  "In[166]:=",ExpressionUUID->"c4e31d59-fe2a-4ed7-a92f-5898c400b7aa"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[166]=",ExpressionUUID->"773c4403-edbd-47ba-9a75-76b761c1d927"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Dt", "[", " ", "transform4pt22", " ", "]"}], "  ", "/.", " ", 
   "dtReplace"}], "  ", "//", " ", "TableForm"}]], "Input",
 CellLabel->
  "In[167]:=",ExpressionUUID->"50d0b76a-3915-465d-951a-6cd4f5a86b05"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       SubscriptBox["dZ", "0"], "\[Rule]", 
       RowBox[{
        RowBox[{
         RowBox[{"Cosh", "[", 
          FractionBox[
           SubscriptBox["t", "k"], "a"], "]"}], " ", 
         RowBox[{"Cosh", "[", 
          SubscriptBox["z", "k"], "]"}], " ", 
         SubscriptBox["dt", "k"]}], "+", 
        RowBox[{"a", " ", 
         RowBox[{"Sinh", "[", 
          FractionBox[
           SubscriptBox["t", "k"], "a"], "]"}], " ", 
         RowBox[{"Sinh", "[", 
          SubscriptBox["z", "k"], "]"}], " ", 
         SubscriptBox["dz", "k"]}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "1"], "\[Rule]", 
       RowBox[{
        RowBox[{
         RowBox[{"Cosh", "[", 
          FractionBox[
           SubscriptBox["t", "k"], "a"], "]"}], " ", 
         RowBox[{"Sinh", "[", 
          SubscriptBox["z", "k"], "]"}], " ", 
         SubscriptBox["dt", "k"]}], "+", 
        RowBox[{"a", " ", 
         RowBox[{"Cosh", "[", 
          SubscriptBox["z", "k"], "]"}], " ", 
         RowBox[{"Sinh", "[", 
          FractionBox[
           SubscriptBox["t", "k"], "a"], "]"}], " ", 
         SubscriptBox["dz", "k"]}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "2"], "\[Rule]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "a"}], " ", "d\[Theta]", " ", 
         RowBox[{"Cosh", "[", 
          FractionBox[
           SubscriptBox["t", "k"], "a"], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sinh", "[", 
          FractionBox[
           SubscriptBox["t", "k"], "a"], "]"}], " ", 
         SubscriptBox["dt", "k"]}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "3"], "\[Rule]", 
       RowBox[{
        RowBox[{"a", " ", "d\[Theta]", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Cosh", "[", 
          FractionBox[
           SubscriptBox["t", "k"], "a"], "]"}]}], "-", 
        RowBox[{"a", " ", "d\[Phi]", " ", 
         RowBox[{"Cosh", "[", 
          FractionBox[
           SubscriptBox["t", "k"], "a"], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sinh", "[", 
          FractionBox[
           SubscriptBox["t", "k"], "a"], "]"}], " ", 
         SubscriptBox["dt", "k"]}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "4"], "\[Rule]", 
       RowBox[{
        RowBox[{"a", " ", "d\[Phi]", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Cosh", "[", 
          FractionBox[
           SubscriptBox["t", "k"], "a"], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"a", " ", "d\[Theta]", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cosh", "[", 
          FractionBox[
           SubscriptBox["t", "k"], "a"], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sinh", "[", 
          FractionBox[
           SubscriptBox["t", "k"], "a"], "]"}], " ", 
         SubscriptBox["dt", "k"]}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[167]//TableForm=",ExpressionUUID->"354e3c39-6beb-46a3-af0c-\
25c1d7fd9295"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Collect", "[", " ", 
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"lineElement", " ", "/.", " ", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{"Dt", "[", " ", "transform4pt22", " ", "]"}], "  ", "/.", 
         " ", "dtReplace"}], "  ", ")"}]}], "  ", "//", " ", "Expand"}], " ", 
     ")"}], "  ", ",", " ", 
    RowBox[{"{", " ", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["dt", "k"], "2"], ",", " ", 
      SuperscriptBox[
       SubscriptBox["dz", "k"], "2"], ",", " ", 
      SuperscriptBox["d\[Theta]", "2"], ",", " ", 
      SuperscriptBox["d\[Phi]", "2"]}], "}"}]}], " ", "]"}], " "}]], "Input",
 CellLabel->
  "In[168]:=",ExpressionUUID->"ae5b08c8-c96b-4e20-9c34-67c0c3f1213b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["d\[Theta]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["a", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cosh", "[", 
        FractionBox[
         SubscriptBox["t", "k"], "a"], "]"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox["a", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cosh", "[", 
        FractionBox[
         SubscriptBox["t", "k"], "a"], "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox["a", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cosh", "[", 
        FractionBox[
         SubscriptBox["t", "k"], "a"], "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["d\[Phi]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["a", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cosh", "[", 
        FractionBox[
         SubscriptBox["t", "k"], "a"], "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox["a", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cosh", "[", 
        FractionBox[
         SubscriptBox["t", "k"], "a"], "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], ")"}]}], "+", 
  RowBox[{"d\[Theta]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "a", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Cosh", "[", 
       FractionBox[
        SubscriptBox["t", "k"], "a"], "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sinh", "[", 
       FractionBox[
        SubscriptBox["t", "k"], "a"], "]"}]}], "+", 
     RowBox[{"2", " ", "a", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
      RowBox[{"Cosh", "[", 
       FractionBox[
        SubscriptBox["t", "k"], "a"], "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sinh", "[", 
       FractionBox[
        SubscriptBox["t", "k"], "a"], "]"}]}], "+", 
     RowBox[{"2", " ", "a", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Cosh", "[", 
       FractionBox[
        SubscriptBox["t", "k"], "a"], "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
      RowBox[{"Sinh", "[", 
       FractionBox[
        SubscriptBox["t", "k"], "a"], "]"}]}]}], ")"}], " ", 
   SubscriptBox["dt", "k"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"Cosh", "[", 
         FractionBox[
          SubscriptBox["t", "k"], "a"], "]"}], "2"]}], " ", 
      SuperscriptBox[
       RowBox[{"Cosh", "[", 
        SubscriptBox["z", "k"], "]"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sinh", "[", 
        FractionBox[
         SubscriptBox["t", "k"], "a"], "]"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sinh", "[", 
        FractionBox[
         SubscriptBox["t", "k"], "a"], "]"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sinh", "[", 
        FractionBox[
         SubscriptBox["t", "k"], "a"], "]"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cosh", "[", 
        FractionBox[
         SubscriptBox["t", "k"], "a"], "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sinh", "[", 
        SubscriptBox["z", "k"], "]"}], "2"]}]}], ")"}], " ", 
   SubsuperscriptBox["dt", "k", "2"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["a", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cosh", "[", 
        SubscriptBox["z", "k"], "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sinh", "[", 
        FractionBox[
         SubscriptBox["t", "k"], "a"], "]"}], "2"]}], "-", 
     RowBox[{
      SuperscriptBox["a", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sinh", "[", 
        FractionBox[
         SubscriptBox["t", "k"], "a"], "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sinh", "[", 
        SubscriptBox["z", "k"], "]"}], "2"]}]}], ")"}], " ", 
   SubsuperscriptBox["dz", "k", "2"]}]}]], "Output",
 CellLabel->
  "Out[168]=",ExpressionUUID->"89f9d138-8581-4621-92b9-69d67fd16bdd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric4pt23", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric4pt23", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lineToMetric", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{"Collect", "[", " ", 
        RowBox[{
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"lineElement", " ", "/.", " ", 
            RowBox[{"(", " ", 
             RowBox[{
              RowBox[{"Dt", "[", " ", "transform4pt22", " ", "]"}], "  ", "/.",
               " ", "dtReplace"}], "  ", ")"}]}], "  ", "//", " ", "Expand"}],
           " ", ")"}], "  ", ",", " ", 
         RowBox[{"{", " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["dt", "k"], "2"], ",", " ", 
           SuperscriptBox[
            SubscriptBox["dz", "k"], "2"], ",", " ", 
           SuperscriptBox["d\[Theta]", "2"], ",", " ", 
           SuperscriptBox["d\[Phi]", "2"]}], "}"}]}], " ", "]"}], "  ", ")"}],
       " ", ",", " ", 
      RowBox[{"{", " ", 
       RowBox[{
        SubscriptBox["dt", "k"], " ", ",", " ", 
        SubscriptBox["dz", "k"], " ", ",", " ", "d\[Theta]", " ", ",", " ", 
        "d\[Phi]"}], " ", "}"}]}], " ", "]"}], "  ", "//", " ", 
    "Simplify"}]}], "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"metric4pt23", " ", "//", " ", "MatrixForm"}]}], "Input",
 CellLabel->
  "In[169]:=",ExpressionUUID->"3e13454b-270f-4b80-a8d6-97b0c713d455"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], "0", "0", "0"},
     {"0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sinh", "[", 
         FractionBox[
          SubscriptBox["t", "k"], "a"], "]"}], "2"]}], "0", "0"},
     {"0", "0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cosh", "[", 
         FractionBox[
          SubscriptBox["t", "k"], "a"], "]"}], "2"]}], "0"},
     {"0", "0", "0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cosh", "[", 
         FractionBox[
          SubscriptBox["t", "k"], "a"], "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[171]//MatrixForm=",ExpressionUUID->"8f4fa7c7-5108-4ac2-b071-\
88c4589b91bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eulerLagrangeEquations", "[", " ", 
   RowBox[{"metric4pt23", " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["t", "k"], ",", " ", 
      SubscriptBox["z", "k"], ",", " ", "\[Theta]", ",", "\[Phi]"}], "}"}], 
    " ", ",", " ", "u"}], " ", "]"}], "  ", "//", " ", "TableForm"}]], "Input",\

 CellLabel->
  "In[172]:=",ExpressionUUID->"dc486d2f-7e4d-47a6-892f-b4694711f8d0"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"a", " ", 
        RowBox[{"Cosh", "[", 
         FractionBox[
          RowBox[{
           SubscriptBox["t", "k"], "[", "u", "]"}], "a"], "]"}], " ", 
        RowBox[{"Sinh", "[", 
         FractionBox[
          RowBox[{
           SubscriptBox["t", "k"], "[", "u", "]"}], "a"], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox[
           SubscriptBox["z", "k"], "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       RowBox[{"a", " ", 
        RowBox[{"Cosh", "[", 
         FractionBox[
          RowBox[{
           SubscriptBox["t", "k"], "[", "u", "]"}], "a"], "]"}], " ", 
        RowBox[{"Sinh", "[", 
         FractionBox[
          RowBox[{
           SubscriptBox["t", "k"], "[", "u", "]"}], "a"], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       RowBox[{"a", " ", 
        RowBox[{"Cosh", "[", 
         FractionBox[
          RowBox[{
           SubscriptBox["t", "k"], "[", "u", "]"}], "a"], "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], "2"], " ", 
        RowBox[{"Sinh", "[", 
         FractionBox[
          RowBox[{
           SubscriptBox["t", "k"], "[", "u", "]"}], "a"], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["t", "k"], "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"Coth", "[", 
          FractionBox[
           RowBox[{
            SubscriptBox["t", "k"], "[", "u", "]"}], "a"], "]"}], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["t", "k"], "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["z", "k"], "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}]}], "a"], "+", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["z", "k"], "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"Tanh", "[", 
          FractionBox[
           RowBox[{
            SubscriptBox["t", "k"], "[", "u", "]"}], "a"], "]"}], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["t", "k"], "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}]}], "a"], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"Tanh", "[", 
          FractionBox[
           RowBox[{
            SubscriptBox["t", "k"], "[", "u", "]"}], "a"], "]"}], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["t", "k"], "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}]}], "a"], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cot", "[", 
         RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[172]//TableForm=",ExpressionUUID->"bb489350-89ff-4bbb-a09f-\
a3cb3b90138d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "differentials", "]"}], "\[IndentingNewLine]", 
 RowBox[{"differentials", " ", "=", " ", 
  RowBox[{"{", " ", 
   RowBox[{
    SubscriptBox["dt", "k"], " ", ",", "  ", 
    SubscriptBox["dz", "k"], " ", ",", " ", "d\[Theta]", " ", ",", " ", 
    "d\[Phi]"}], " ", "}"}], " "}]}], "Input",
 CellLabel->
  "In[173]:=",ExpressionUUID->"3bbe4002-70ca-48d5-ad02-22e7be80923b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox["dt", "k"], ",", 
   SubscriptBox["dz", "k"], ",", "d\[Theta]", ",", "d\[Phi]"}], 
  "}"}]], "Output",
 CellLabel->
  "Out[174]=",ExpressionUUID->"b6c600d6-739d-41b0-b29c-b604306c127d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "lineElement4pt23", "]"}], "\[IndentingNewLine]", 
 RowBox[{"lineElement4pt23", " ", "=", "  ", 
  RowBox[{"Collect", "[", " ", 
   RowBox[{
    RowBox[{"Sum", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"metric4pt23", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "i"}], "]"}], "]"}], "*", " ", 
       SuperscriptBox[
        RowBox[{"(", " ", 
         RowBox[{"differentials", "[", 
          RowBox[{"[", "i", "]"}], "]"}], " ", ")"}], "2"]}], " ", ",", " ", 
      RowBox[{"{", " ", 
       RowBox[{"i", " ", ",", " ", "1", " ", ",", " ", "4"}], " ", "}"}]}], 
     " ", "]"}], " ", ",", " ", 
    RowBox[{
     SuperscriptBox["a", "2"], "  ", 
     SuperscriptBox[
      RowBox[{"Cosh", "[", 
       FractionBox[
        SubscriptBox["t", "k"], "a"], "]"}], "2"]}]}], " ", "]"}], 
  " "}]}], "Input",
 CellLabel->
  "In[175]:=",ExpressionUUID->"557c1c8c-bae6-42e4-87e5-2860c19e00b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cosh", "[", 
     FractionBox[
      SubscriptBox["t", "k"], "a"], "]"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["d\[Theta]", "2"], "+", 
     RowBox[{
      SuperscriptBox["d\[Phi]", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "-", 
  SubsuperscriptBox["dt", "k", "2"], "+", 
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sinh", "[", 
     FractionBox[
      SubscriptBox["t", "k"], "a"], "]"}], "2"], " ", 
   SubsuperscriptBox["dz", "k", "2"]}]}]], "Output",
 CellLabel->
  "Out[176]=",ExpressionUUID->"539d2427-58eb-4644-aafe-9ff75747c762"]
}, Open  ]]
},
WindowSize->{840, 750},
WindowMargins->{{-1212, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 19, 2020)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"1aade573-5af6-488a-aed5-d9b388649dff"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1645, 43, 273, "Input",ExpressionUUID->"4faeb4f8-5642-4522-a75d-3e4756f182bb"],
Cell[CellGroupData[{
Cell[2250, 69, 353, 8, 24, "Print",ExpressionUUID->"3e0c577b-9283-4a3f-b1f8-834313936358"],
Cell[2606, 79, 370, 9, 24, "Print",ExpressionUUID->"4150d880-2eb4-44f8-80da-fae744f0cf00"]
}, Open  ]],
Cell[2991, 91, 638, 11, 105, "Output",ExpressionUUID->"172f9831-19f2-49ee-ae4a-bc2fb3d3fccb"]
}, Open  ]],
Cell[3644, 105, 147, 2, 41, "Input",ExpressionUUID->"d0486a8c-593f-475b-831b-b7226ef02001"],
Cell[3794, 109, 131, 2, 41, "Input",ExpressionUUID->"bc74ad61-1654-4d42-83c2-4fed8fb55f94"],
Cell[3928, 113, 1469, 38, 126, "Input",ExpressionUUID->"a2406a27-7f00-418d-8b88-4c965b580a16"],
Cell[5400, 153, 2364, 69, 490, "Input",ExpressionUUID->"3b6a4ba3-8e46-4936-8705-b59f03d9621e"],
Cell[CellGroupData[{
Cell[7789, 226, 1597, 32, 363, "Input",ExpressionUUID->"ebc268ec-b271-4ffe-9547-640b473d5982"],
Cell[9389, 260, 288, 7, 50, "Output",ExpressionUUID->"3007174f-b2d9-40c5-878e-2b6a828b8c83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9714, 272, 4449, 106, 676, "Input",ExpressionUUID->"9a85275e-d3ef-4da7-b920-e3823ac4afd8"],
Cell[14166, 380, 3640, 129, 521, "Output",ExpressionUUID->"2ef859a1-ddd7-462a-87e6-c65997e383b8"]
}, Open  ]],
Cell[17821, 512, 5192, 119, 608, "Input",ExpressionUUID->"4b96d02b-5f47-47f9-b7b1-f0095a987cc0"],
Cell[23016, 633, 632, 16, 105, "Input",ExpressionUUID->"a0f2e451-d85c-40f8-bd05-5cd2d21826c3"],
Cell[23651, 651, 5397, 124, 735, "Input",ExpressionUUID->"81086cab-1a0a-42f3-8979-6e05b95ecbc6"],
Cell[CellGroupData[{
Cell[29073, 779, 697, 20, 63, "Input",ExpressionUUID->"786d12b2-cf00-4024-a7e6-9d4c1be5f4fb"],
Cell[29773, 801, 343, 8, 43, "Output",ExpressionUUID->"1a8ecb1a-a79a-437d-85b1-1908991efcc0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30153, 814, 913, 25, 95, "Input",ExpressionUUID->"e3dbee50-b177-41fe-b972-241264c09b7f"],
Cell[31069, 841, 398, 10, 43, "Output",ExpressionUUID->"dd0d1d37-b6b5-4cfe-98ec-cba24f21afd3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31504, 856, 1808, 45, 313, "Input",ExpressionUUID->"ce728c9a-fdd6-459a-85cf-2d613faca062"],
Cell[33315, 903, 1816, 56, 157, "Output",ExpressionUUID->"dfc4f49d-687c-43a0-9c6f-8b96e929a6ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35168, 964, 418, 8, 84, "Input",ExpressionUUID->"6b31e974-0703-4b59-9ea1-edcc986b435f"],
Cell[35589, 974, 398, 10, 43, "Output",ExpressionUUID->"04d3645c-70f5-4a45-8e2e-5e6e2b0e5412"],
Cell[35990, 986, 1560, 47, 132, "Output",ExpressionUUID->"b8ee40eb-1427-4bf6-bc45-40f5b668dd67"],
Cell[37553, 1035, 110, 1, 41, "Output",ExpressionUUID->"06b32dd2-bd2d-40d7-9142-cf643e564d32"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37700, 1041, 245, 5, 41, "Input",ExpressionUUID->"dc7c1427-8e35-4911-bcd2-f01294f2a5e0"],
Cell[37948, 1048, 4260, 111, 157, "Output",ExpressionUUID->"43a37bfe-f8e6-4d2a-813c-1a0b3f5cc990"]
}, Open  ]],
Cell[42223, 1162, 1470, 38, 147, "Input",ExpressionUUID->"62e916bf-19bd-4cdf-a354-74142cf0f1a9"],
Cell[CellGroupData[{
Cell[43718, 1204, 1582, 39, 155, "Input",ExpressionUUID->"737f0782-140f-42ef-a48b-2564babd3bf7"],
Cell[45303, 1245, 1366, 42, 125, "Output",ExpressionUUID->"df13cf2a-2aaf-48e1-93e4-f55737c1e16f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46706, 1292, 406, 8, 105, "Input",ExpressionUUID->"5a40d897-54bc-4a4f-8e8e-810398edb65a"],
Cell[47115, 1302, 1409, 44, 161, "Output",ExpressionUUID->"0ec3170f-5078-4513-8f50-47ad0bb6cbcd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48561, 1351, 455, 9, 66, "Input",ExpressionUUID->"02cc5704-8c14-4c19-8281-6e1d9295c13d"],
Cell[49019, 1362, 162, 3, 41, "Output",ExpressionUUID->"7bda48b9-42f9-4e9a-9086-e7400fa00330"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49218, 1370, 299, 8, 41, "Input",ExpressionUUID->"1d27f1c9-de7b-40d9-9a6c-1f7bd98225a9"],
Cell[49520, 1380, 1436, 43, 130, "Output",ExpressionUUID->"cfd9ee87-1d78-49e7-8051-1a58171daa34"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50993, 1428, 299, 8, 41, "Input",ExpressionUUID->"1a7164c4-9f58-4a01-9fd8-e8d770c23eb6"],
Cell[51295, 1438, 11904, 355, 370, "Output",ExpressionUUID->"776d2958-67d1-4afd-8b91-99fa23265034"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63236, 1798, 299, 8, 41, "Input",ExpressionUUID->"ab4a1c02-da74-4704-a027-98b646202ee1"],
Cell[63538, 1808, 16237, 429, 388, "Output",ExpressionUUID->"035a9923-1f02-4b03-8b5d-4edec26325e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79812, 2242, 299, 8, 41, "Input",ExpressionUUID->"97f6cb85-3e71-4c8a-bcc2-751808836216"],
Cell[80114, 2252, 1404, 42, 142, "Output",ExpressionUUID->"f7141413-3cef-4b4d-ba92-a416459cffbf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81555, 2299, 299, 8, 41, "Input",ExpressionUUID->"cdb91885-2b17-49fa-95cf-2896b2805863"],
Cell[81857, 2309, 272, 9, 70, "Output",ExpressionUUID->"a48fc8ba-c35d-4f16-abe2-d960339cb3d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82166, 2323, 299, 8, 41, "Input",ExpressionUUID->"b740527b-dc15-479d-b9f4-ee96f005add2"],
Cell[82468, 2333, 272, 9, 70, "Output",ExpressionUUID->"515489dc-9c30-41a1-9643-d1baf96cdc42"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82777, 2347, 299, 8, 41, "Input",ExpressionUUID->"d5965f46-f359-4511-8ce7-12049bbdc346"],
Cell[83079, 2357, 1451, 44, 142, "Output",ExpressionUUID->"c951db54-ac38-4fa9-98b0-f0b78421a40f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84567, 2406, 299, 8, 41, "Input",ExpressionUUID->"bc2bfcca-5f18-48cb-b83a-f35132691ba2"],
Cell[84869, 2416, 9279, 245, 308, "Output",ExpressionUUID->"b2fcd3cd-03ce-4c3a-957d-56326b865796"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94185, 2666, 299, 8, 41, "Input",ExpressionUUID->"c2a338c0-f8bb-4f68-93de-7a46ae2570a8"],
Cell[94487, 2676, 9487, 293, 308, "Output",ExpressionUUID->"d6cdee0c-4b7a-4ac5-a10e-298d521994d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104011, 2974, 817, 23, 134, "Input",ExpressionUUID->"e6e0ec89-1280-41dc-8230-500674472707"],
Cell[104831, 2999, 332, 11, 68, "Output",ExpressionUUID->"430d4bf3-d49a-41fc-bdcb-474f108b5680"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105200, 3015, 831, 24, 134, "Input",ExpressionUUID->"6b60d8dc-485d-452a-a737-edc0dc06cb5c"],
Cell[106034, 3041, 356, 12, 68, "Output",ExpressionUUID->"98d4eba4-c707-48c8-b028-3447416e9a5f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106427, 3058, 815, 22, 134, "Input",ExpressionUUID->"dfebff46-1925-4388-ba47-d9ad4c49539e"],
Cell[107245, 3082, 584, 17, 68, "Output",ExpressionUUID->"83e85eec-7eff-4e9e-897e-f8ae38755a1c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107866, 3104, 843, 23, 134, "Input",ExpressionUUID->"08acfc47-84fc-4d0e-a09e-49f2ac987dca"],
Cell[108712, 3129, 610, 18, 68, "Output",ExpressionUUID->"4ce0fff9-4c1e-4522-abba-aa1cab77ead3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109359, 3152, 2069, 56, 126, "Input",ExpressionUUID->"a5592e01-b676-4d2e-8c4a-29c4a1ee3506"],
Cell[111431, 3210, 171, 5, 45, "Output",ExpressionUUID->"8ec1aee7-52c7-4204-bda6-39fbbdbeb7bc"],
Cell[111605, 3217, 171, 5, 45, "Output",ExpressionUUID->"6a7b1139-617e-4924-b06b-0d457600f166"],
Cell[111779, 3224, 171, 5, 45, "Output",ExpressionUUID->"f5b8f704-6ab6-4a4a-a68c-062b8b826a30"],
Cell[111953, 3231, 174, 5, 45, "Output",ExpressionUUID->"6819862a-7ac9-4b12-85ec-9a1763366994"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112164, 3241, 6087, 179, 546, "Input",ExpressionUUID->"de046c5b-ab32-42c5-aea4-2e2d3cd205de"],
Cell[118254, 3422, 114, 2, 41, "Output",ExpressionUUID->"2af480c9-d3a5-49fb-b0af-2afd0735ae13"],
Cell[118371, 3426, 114, 2, 41, "Output",ExpressionUUID->"f6e4c361-a8f6-4361-a3c8-e2d20a4be0ad"],
Cell[118488, 3430, 114, 2, 41, "Output",ExpressionUUID->"07ca9830-d919-4137-8bf3-ce7f003d9ff1"],
Cell[118605, 3434, 114, 2, 41, "Output",ExpressionUUID->"888a2761-6c09-42e6-adfc-dd09c52cc6e2"],
Cell[118722, 3438, 114, 2, 41, "Output",ExpressionUUID->"9b3585fd-a218-4547-9249-73a374fd1ac6"],
Cell[118839, 3442, 114, 2, 41, "Output",ExpressionUUID->"3442016e-7481-4fa3-9cce-0c878f8d81c1"],
Cell[118956, 3446, 114, 2, 41, "Output",ExpressionUUID->"f67d66e7-bb27-44e4-b8c7-6f39987eaaae"],
Cell[119073, 3450, 114, 2, 41, "Output",ExpressionUUID->"22d857e4-9c3e-445d-8ce4-9a25b2cc91ee"],
Cell[119190, 3454, 1367, 42, 125, "Output",ExpressionUUID->"e687f7d5-1270-4f3f-ba99-a493c174b5e0"],
Cell[120560, 3498, 114, 2, 41, "Output",ExpressionUUID->"a0dcbbb4-d3be-43ea-8443-22994e4f7699"],
Cell[120677, 3502, 1409, 44, 161, "Output",ExpressionUUID->"eb2335b9-6fff-4ce2-a503-38b900b7a511"],
Cell[122089, 3548, 114, 2, 41, "Output",ExpressionUUID->"a207fc51-c6d6-4275-9ffd-6f32ef35d63e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122240, 3555, 12985, 308, 1075, "Input",ExpressionUUID->"27931353-2138-4006-9335-077028d640a6"],
Cell[135228, 3865, 2798, 90, 350, "Output",ExpressionUUID->"00e0241a-36ff-43f1-9f25-67c2f20dcfdb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138063, 3960, 6597, 175, 721, "Input",ExpressionUUID->"4bf3bc61-9fc1-4411-b40f-f98e238f809f"],
Cell[144663, 4137, 1254, 41, 162, "Output",ExpressionUUID->"f0633fcb-86f6-4a61-8fa0-ccceb15f00ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145954, 4183, 5258, 133, 567, "Input",ExpressionUUID->"8a1a47be-9182-415d-9140-4f26eb0e1573"],
Cell[151215, 4318, 1010, 33, 118, "Output",ExpressionUUID->"65cbb305-789d-4547-ac07-ca476eb3c8c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152262, 4356, 360, 7, 63, "Input",ExpressionUUID->"ea634f92-f076-4f86-a55f-2be2760ce206"],
Cell[152625, 4365, 196, 4, 41, "Output",ExpressionUUID->"dc20dbc9-7bfa-4169-b1c5-56246eef8c69"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152858, 4374, 719, 17, 86, "Input",ExpressionUUID->"127d89ca-35bc-4b54-8a74-952316b705ba"],
Cell[153580, 4393, 724, 22, 56, "Output",ExpressionUUID->"070c2d3e-8f24-4d96-96d4-26f3656a44bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154341, 4420, 653, 14, 84, "Input",ExpressionUUID->"5e24e319-24eb-468a-bed9-f6a492a434b5"],
Cell[154997, 4436, 288, 7, 43, "Output",ExpressionUUID->"e714a725-1bbe-4531-866d-ad5d7aef7121"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155322, 4448, 766, 18, 63, "Input",ExpressionUUID->"2bc67dfb-f478-4ea6-86e7-564878b058d5"],
Cell[156091, 4468, 53589, 895, 366, "Output",ExpressionUUID->"4ed44765-e992-47db-bb34-7e5d28ea7799"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209717, 5368, 1251, 36, 105, "Input",ExpressionUUID->"89545d77-e6bb-4134-8d72-0e5df53c24c9"],
Cell[210971, 5406, 703, 22, 56, "Output",ExpressionUUID->"94e15950-ff15-4ecd-92c2-e7d03ef72747"],
Cell[211677, 5430, 137, 2, 41, "Output",ExpressionUUID->"b5da6064-722d-4401-8902-86a91803e1ec"],
Cell[211817, 5434, 240, 6, 41, "Output",ExpressionUUID->"efa1f4fc-737a-41f0-ae52-f9435916792d"],
Cell[212060, 5442, 312, 8, 41, "Output",ExpressionUUID->"1074e01e-fe55-4157-b21d-40e3619bdfd7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212409, 5455, 746, 20, 63, "Input",ExpressionUUID->"88759826-65bc-4a04-9002-b8e49e8cae85"],
Cell[213158, 5477, 326, 9, 49, "Output",ExpressionUUID->"38ad6ba9-a268-43ff-a851-7515c95f3ff6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[213521, 5491, 1272, 37, 111, "Input",ExpressionUUID->"4ac65393-b8e8-41ff-8b66-a4f0e78404da"],
Cell[214796, 5530, 300988, 4930, 427, "Output",ExpressionUUID->"2cb550bd-2bb0-4613-b773-caedfa390b6f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[515821, 10465, 1151, 35, 105, "Input",ExpressionUUID->"53cc3ef9-43cc-45a1-8ca7-084d942d6bc1"],
Cell[516975, 10502, 163842, 2753, 396, "Output",ExpressionUUID->"731b141f-a115-4df0-8584-fd802a1e350a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[680854, 13260, 1125, 32, 105, "Input",ExpressionUUID->"177e941e-6a3b-4c11-b220-5c2d9b20ba6e"],
Cell[681982, 13294, 113512, 1868, 421, "Output",ExpressionUUID->"d0805a45-71cd-449e-820c-09b6f2f8f019"]
}, Open  ]],
Cell[CellGroupData[{
Cell[795531, 15167, 135, 2, 41, "Input",ExpressionUUID->"5985c4fd-524d-416e-b334-7f9726f5f36a"],
Cell[795669, 15171, 12009, 292, 126, "Output",ExpressionUUID->"fff6b2ca-ce65-4210-8686-ee98c2cee742"]
}, Open  ]],
Cell[CellGroupData[{
Cell[807715, 15468, 888, 26, 84, "Input",ExpressionUUID->"f91c2dc2-e079-47cb-ad80-8e6c688e0c61"],
Cell[808606, 15496, 238191, 3987, 407, "Output",ExpressionUUID->"0c64e580-631a-47a2-b98a-0f9e028c61a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1046834, 19488, 637, 14, 100, "Input",ExpressionUUID->"30321cf8-10ad-4616-a242-a4b66aa8f18b"],
Cell[1047474, 19504, 224, 5, 57, "Output",ExpressionUUID->"9a46394e-706e-452e-8748-ee1f5fecad82"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1047735, 19514, 498, 10, 84, "Input",ExpressionUUID->"9546f9c4-6f1b-41f0-adcb-ffe57f2e064e"],
Cell[1048236, 19526, 256, 6, 41, "Output",ExpressionUUID->"05bab1ce-9fae-4338-ba92-a04c5e989002"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1048529, 19537, 516, 13, 63, "Input",ExpressionUUID->"877f2e35-a382-44ea-8d53-b20c2e911ed5"],
Cell[1049048, 19552, 228, 5, 57, "Output",ExpressionUUID->"7a28abf3-e500-4fff-bc75-4530a76917b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1049313, 19562, 202, 4, 41, "Input",ExpressionUUID->"20ae3b57-1582-48c6-8469-6cc05e5428f3"],
Cell[1049518, 19568, 551, 16, 64, "Output",ExpressionUUID->"64d6b940-d3eb-4cbc-81ca-7abbda131079"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1050106, 19589, 669, 18, 84, "Input",ExpressionUUID->"95c0ea7a-1759-4f5a-822f-58c58b6ae624"],
Cell[1050778, 19609, 6310, 167, 223, "Output",ExpressionUUID->"7ab2c3fa-28d9-4e62-922b-d8b0d8863ee7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1057125, 19781, 657, 17, 84, "Input",ExpressionUUID->"f7af6979-1cbf-4b55-b052-670372c12db5"],
Cell[1057785, 19800, 4515, 123, 137, "Output",ExpressionUUID->"aea74e25-1397-4388-aa5e-7063e64b66b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1062337, 19928, 1503, 35, 172, "Input",ExpressionUUID->"ea48e2f8-e741-49c7-8c95-e52c1c7ba659"],
Cell[1063843, 19965, 684, 20, 44, "Output",ExpressionUUID->"e7cd2914-809d-47b2-8f0e-0ce3b49e2546"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1064564, 19990, 734, 19, 84, "Input",ExpressionUUID->"bc6bc407-2faa-4363-ba33-f57ac6747ecd"],
Cell[1065301, 20011, 684, 20, 44, "Output",ExpressionUUID->"9f488f5d-6aed-4e70-ae60-8a6e3a563f06"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1066022, 20036, 593, 12, 105, "Input",ExpressionUUID->"d3b02c67-c29b-4c2f-8a85-fc401569834a"],
Cell[1066618, 20050, 1422, 43, 113, "Output",ExpressionUUID->"af4a2ba9-f530-414f-a87b-73bad62fb076"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1068077, 20098, 396, 8, 105, "Input",ExpressionUUID->"eb0af2f1-2413-4cbd-8ae1-84031b1266a6"],
Cell[1068476, 20108, 1463, 45, 157, "Output",ExpressionUUID->"8f50e9b1-b544-41c5-a854-709d49ea83e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1069976, 20158, 470, 11, 66, "Input",ExpressionUUID->"4b300413-20b8-4cc1-986d-7bd9ad45eafc"],
Cell[1070449, 20171, 167, 4, 41, "Output",ExpressionUUID->"69391797-7e1f-4f9d-9bf1-d2e7e98bfb9f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1070653, 20180, 299, 8, 41, "Input",ExpressionUUID->"5a580357-f96a-4786-8bd9-a92a6563ed7e"],
Cell[1070955, 20190, 1496, 44, 112, "Output",ExpressionUUID->"3b45832f-d177-43ab-9722-1275b356d6ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1072488, 20239, 299, 8, 41, "Input",ExpressionUUID->"6eafec17-010c-471a-9a27-afb21004bd75"],
Cell[1072790, 20249, 11500, 344, 314, "Output",ExpressionUUID->"2ad68ec6-2e0f-4f90-95ae-25d5fd325764"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1084327, 20598, 299, 8, 41, "Input",ExpressionUUID->"a18c288d-ed40-4120-95f1-ac3080a9f8c4"],
Cell[1084629, 20608, 16083, 421, 332, "Output",ExpressionUUID->"0fc878bc-b6ed-4776-b065-5232d43f343f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1100749, 21034, 299, 8, 41, "Input",ExpressionUUID->"a2453146-8ea0-4dd6-9028-a291c30b01fc"],
Cell[1101051, 21044, 1375, 40, 112, "Output",ExpressionUUID->"838bd0b7-4c12-4a5d-b0b8-41aecdbfbeb6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1102463, 21089, 299, 8, 41, "Input",ExpressionUUID->"d831402a-9bdc-46f8-941a-d4d9d719e1a2"],
Cell[1102765, 21099, 272, 9, 70, "Output",ExpressionUUID->"22cff04a-c7b4-448a-bc98-66d81fe0eeb8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1103074, 21113, 299, 8, 41, "Input",ExpressionUUID->"169d3297-ce1f-4848-80df-6206c4e83532"],
Cell[1103376, 21123, 272, 9, 70, "Output",ExpressionUUID->"90c2bbbb-bc52-4fb1-afd4-b9cb529c4fa1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1103685, 21137, 299, 8, 41, "Input",ExpressionUUID->"c3d65d7c-0eb8-4636-a900-c7f9115dfe93"],
Cell[1103987, 21147, 1423, 42, 112, "Output",ExpressionUUID->"9bd82ad4-874c-405d-a5b8-986cf15398b8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1105447, 21194, 299, 8, 41, "Input",ExpressionUUID->"8117f5b6-71ca-49d5-9eb2-2bde3e106c39"],
Cell[1105749, 21204, 9279, 245, 308, "Output",ExpressionUUID->"20481317-b43c-4df7-a9b4-26a001514329"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1115065, 21454, 299, 8, 41, "Input",ExpressionUUID->"3442bffc-9f91-4892-bdfa-58585b6f4ec8"],
Cell[1115367, 21464, 9487, 293, 308, "Output",ExpressionUUID->"ef5a4a7a-1564-47bf-9340-2d4f2edb7b91"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1124891, 21762, 817, 23, 134, "Input",ExpressionUUID->"def7b381-5fcc-47ec-9178-2e4ab7836d49"],
Cell[1125711, 21787, 374, 12, 61, "Output",ExpressionUUID->"245a10d0-6e62-4390-ab46-4c4f1eac6f98"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1126122, 21804, 831, 24, 134, "Input",ExpressionUUID->"283e542a-bde8-423c-b97e-4dd1271aac33"],
Cell[1126956, 21830, 397, 13, 61, "Output",ExpressionUUID->"54af2cec-ddf3-4c2c-bec9-128256b5cce2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1127390, 21848, 815, 22, 134, "Input",ExpressionUUID->"8b523909-6e75-4f4b-85f0-c1bfcd32fc48"],
Cell[1128208, 21872, 542, 15, 62, "Output",ExpressionUUID->"eec5db94-be18-43b1-9a2f-b8c71e3ae2ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1128787, 21892, 843, 23, 134, "Input",ExpressionUUID->"efaa9cdf-c094-4968-804e-11d8fbac10b8"],
Cell[1129633, 21917, 567, 16, 62, "Output",ExpressionUUID->"66528614-567f-4cd4-b5f9-6fec3d05db57"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1130237, 21938, 2097, 58, 126, "Input",ExpressionUUID->"76ece8af-ab00-4cd1-91f6-96e5c3825933"],
Cell[1132337, 21998, 171, 5, 45, "Output",ExpressionUUID->"b7dc5625-e011-4f2a-8149-b8edf78eea6f"],
Cell[1132511, 22005, 171, 5, 45, "Output",ExpressionUUID->"5fce98c7-9a54-4c98-a714-b124b2b7f746"],
Cell[1132685, 22012, 171, 5, 45, "Output",ExpressionUUID->"016d111a-ba44-4c10-8b34-f037f85d7d54"],
Cell[1132859, 22019, 174, 5, 45, "Output",ExpressionUUID->"be005a81-9631-4056-8814-3d8464b876e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1133070, 22029, 6113, 180, 546, "Input",ExpressionUUID->"0606a3d7-4dbf-4332-9f49-6b225e49be75"],
Cell[1139186, 22211, 114, 2, 41, "Output",ExpressionUUID->"44717bbd-521e-420a-9b15-073b2cce3d0a"],
Cell[1139303, 22215, 114, 2, 41, "Output",ExpressionUUID->"97582438-9c77-4a57-a5d6-bc3bc3071b70"],
Cell[1139420, 22219, 114, 2, 41, "Output",ExpressionUUID->"b28aa091-73f4-49bc-9086-9da80c0e0294"],
Cell[1139537, 22223, 114, 2, 41, "Output",ExpressionUUID->"d20714b5-486c-4023-9fc3-a49cee039e88"],
Cell[1139654, 22227, 114, 2, 41, "Output",ExpressionUUID->"6baad00a-fc98-4c3e-b5a3-cb54ac93017f"],
Cell[1139771, 22231, 114, 2, 41, "Output",ExpressionUUID->"c4009002-e35d-4426-9c19-275da2f863a7"],
Cell[1139888, 22235, 114, 2, 41, "Output",ExpressionUUID->"8f4189c6-bf0e-436a-a6b8-128c5229acbf"],
Cell[1140005, 22239, 114, 2, 41, "Output",ExpressionUUID->"fa2eef58-5415-48b0-b302-b1b07610e702"],
Cell[1140122, 22243, 1423, 43, 113, "Output",ExpressionUUID->"041e080e-3652-486c-9c25-2689cd4e7ae5"],
Cell[1141548, 22288, 114, 2, 41, "Output",ExpressionUUID->"9bffed44-25c1-424f-acc1-db99ae5b5992"],
Cell[1141665, 22292, 1463, 45, 157, "Output",ExpressionUUID->"5d38d29d-2a7c-4808-a2ed-f38e724824a8"],
Cell[1143131, 22339, 114, 2, 41, "Output",ExpressionUUID->"39dd6d49-5f6b-4a79-a163-01142f0f49b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1143282, 22346, 12985, 308, 1075, "Input",ExpressionUUID->"7a0c8cd0-cccf-457a-9571-fa63a9bf9137"],
Cell[1156270, 22656, 2581, 82, 304, "Output",ExpressionUUID->"d3441b85-ebdc-4f23-8faa-69be2702b673"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1158888, 22743, 6597, 175, 721, "Input",ExpressionUUID->"d0970fac-f831-4e94-a5ea-786857d2cd95"],
Cell[1165488, 22920, 1254, 41, 162, "Output",ExpressionUUID->"fb498297-caa7-4d7e-9e1f-4b642f5cf0f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1166779, 22966, 5258, 133, 567, "Input",ExpressionUUID->"361bb8d6-ee45-4289-bc34-41aadc9800f7"],
Cell[1172040, 23101, 1010, 33, 118, "Output",ExpressionUUID->"eb5175e0-273f-4707-a2b2-d7fdf236c60a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1173087, 23139, 357, 7, 41, "Input",ExpressionUUID->"0473ff9e-6c8f-4bc3-b674-c42681ee71a8"],
Cell[1173447, 23148, 5923, 162, 111, "Output",ExpressionUUID->"89137237-61dc-4fb7-b257-a107c2218276"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1179407, 23315, 1761, 48, 286, "Input",ExpressionUUID->"4e5c3d0a-a9df-4d7b-9f41-afd3ed5412e9"],
Cell[1181171, 23365, 1927, 64, 163, "Output",ExpressionUUID->"81f6167f-433f-4752-8bb1-66906ed9125f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1183135, 23434, 257, 5, 41, "Input",ExpressionUUID->"e446bd30-c064-4603-af7c-d299c4bfcff5"],
Cell[1183395, 23441, 196, 4, 57, "Output",ExpressionUUID->"089a692b-852c-4226-8696-1d8be91df0ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1183628, 23450, 247, 5, 41, "Input",ExpressionUUID->"b949ce7d-8a6f-49f4-bb28-60f66b798825"],
Cell[1183878, 23457, 3993, 120, 203, "Output",ExpressionUUID->"2e5bcfe7-ac2f-4f6c-a491-399fe4675617"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1187908, 23582, 709, 18, 67, "Input",ExpressionUUID->"811c740c-3b8c-4e4e-bfb4-3db805319ab3"],
Cell[1188620, 23602, 4513, 139, 317, "Output",ExpressionUUID->"e4bcf2e4-7344-4e7f-8061-b3b99adf3926"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1193170, 23746, 1571, 37, 153, "Input",ExpressionUUID->"622ff1a0-b0dc-4294-b577-83cd6941090a"],
Cell[1194744, 23785, 1094, 35, 127, "Output",ExpressionUUID->"5988c57a-2449-41b4-bb9c-b2ee9882fd53"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1195875, 23825, 632, 16, 63, "Input",ExpressionUUID->"acb6894b-bebe-49a1-95aa-5fe57c2aa6cf"],
Cell[1196510, 23843, 6276, 174, 163, "Output",ExpressionUUID->"6e90a59a-aaa8-4bc8-96a6-343edccb56e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1202823, 24022, 360, 7, 63, "Input",ExpressionUUID->"14faa2b3-643c-4a31-98c0-224fee96f5fd"],
Cell[1203186, 24031, 191, 4, 41, "Output",ExpressionUUID->"4a97b959-e0cf-4f36-8781-852935ae162f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1203414, 24040, 786, 20, 86, "Input",ExpressionUUID->"1edd7d01-a929-4aa8-9bed-884fd42ede6d"],
Cell[1204203, 24062, 766, 24, 62, "Output",ExpressionUUID->"5bb21576-f6fd-4094-980f-e4253c08f577"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1205006, 24091, 352, 7, 84, "Input",ExpressionUUID->"f1d8f0c8-ae13-43f1-9677-ad7c4819144b"],
Cell[1205361, 24100, 198, 5, 41, "Output",ExpressionUUID->"caf61be9-fc42-468a-af16-4206cf94794b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1205596, 24110, 212, 5, 41, "Input",ExpressionUUID->"3aeb7751-6851-4595-bc61-617bf0de7ec4"],
Cell[1205811, 24117, 215, 5, 41, "Output",ExpressionUUID->"abdf2ae7-f5a6-4b56-97d9-9839b6f532b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1206063, 24127, 754, 19, 105, "Input",ExpressionUUID->"1d87b006-a934-484b-830d-9771f307a178"],
Cell[1206820, 24148, 696, 22, 44, "Output",ExpressionUUID->"b533ae2f-6883-4e56-aebc-ce2fdef587f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1207553, 24175, 1061, 26, 196, "Input",ExpressionUUID->"2fe9f43d-7021-49a7-978b-ab50f589d1ae"],
Cell[1208617, 24203, 1018, 32, 64, "Output",ExpressionUUID->"d89b6dc8-8840-4bc4-89ac-e50c52ab8ff3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1209672, 24240, 560, 15, 84, "Input",ExpressionUUID->"9a0d1eba-b613-4406-a042-ba1fd0d6b5b0"],
Cell[1210235, 24257, 696, 22, 44, "Output",ExpressionUUID->"af29cbdd-9346-4d47-9c12-2096682f6d12"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1210968, 24284, 610, 14, 84, "Input",ExpressionUUID->"c051e801-dee2-404e-8219-202b9fd59dc0"],
Cell[1211581, 24300, 721, 22, 41, "Output",ExpressionUUID->"a51393f1-1531-444d-9b0a-59a53138cbc9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1212339, 24327, 602, 13, 105, "Input",ExpressionUUID->"1de8d31f-c21f-4993-9d5a-a2c8df07750d"],
Cell[1212944, 24342, 1107, 34, 113, "Output",ExpressionUUID->"7d26060c-d83a-449f-9036-c73c6778d5a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1214088, 24381, 352, 8, 41, "Input",ExpressionUUID->"123614a6-cbae-40f9-82f1-df67789f1d0b"],
Cell[1214443, 24391, 4191, 117, 119, "Output",ExpressionUUID->"613a018c-8a29-4bc9-9e12-d760a9c9a108"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1218671, 24513, 1880, 53, 335, "Input",ExpressionUUID->"7a0686bc-9951-404a-be23-edb2c4ec064f"],
Cell[1220554, 24568, 1783, 59, 185, "Output",ExpressionUUID->"43f3b1c7-8a83-4697-8859-77d5545a3b22"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1222374, 24632, 268, 6, 41, "Input",ExpressionUUID->"dbdb2f3c-5897-4f51-bf52-1d7ca034be8c"],
Cell[1222645, 24640, 114, 2, 41, "Output",ExpressionUUID->"0896bb7c-f704-42c8-9920-e4405dec5cb5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1222796, 24647, 252, 6, 41, "Input",ExpressionUUID->"fb0c5692-52b6-4953-b572-4c6bc2386c0a"],
Cell[1223051, 24655, 3500, 105, 209, "Output",ExpressionUUID->"d9e80023-5307-4df7-83e4-cc2789462ebd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1226588, 24765, 542, 12, 84, "Input",ExpressionUUID->"fa7e3591-89c3-400e-83e3-f81e2e6c577f"],
Cell[1227133, 24779, 410, 12, 67, "Output",ExpressionUUID->"7c238218-6a12-4655-80d3-6f0134222d78"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1227580, 24796, 893, 21, 147, "Input",ExpressionUUID->"8c5b7ed5-e94c-4f0a-ac51-0a45413a9e70"],
Cell[1228476, 24819, 1062, 33, 169, "Output",ExpressionUUID->"4ff092fa-63f4-477e-ad91-8b6f01a2996c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1229575, 24857, 413, 10, 41, "Input",ExpressionUUID->"85ced81e-cc2a-4d09-9cab-bae68dcd9828"],
Cell[1229991, 24869, 1188, 37, 107, "Output",ExpressionUUID->"a6b645ab-8129-4729-9e00-f96f66af07c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1231216, 24911, 1507, 39, 126, "Input",ExpressionUUID->"541c500d-ab0a-4fc3-896e-22405215bcef"],
Cell[1232726, 24952, 236625, 3852, 430, "Output",ExpressionUUID->"d06c7641-46a9-4c30-a374-165712a6f02e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1469388, 28809, 2229, 56, 147, "Input",ExpressionUUID->"fe0d9acc-da29-469a-8b65-71cb8fc2373c"],
Cell[1471620, 28867, 8766, 177, 385, "Output",ExpressionUUID->"efa0bea9-b563-46f7-b580-24e517057463"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1480423, 29049, 448, 11, 100, "Input",ExpressionUUID->"2502e5e4-1b85-411b-ab1a-b540f0b68fd7"],
Cell[1480874, 29062, 298, 9, 49, "Output",ExpressionUUID->"f75424ad-6a21-41a9-9893-15e3d1a7a93f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1481209, 29076, 212, 5, 41, "Input",ExpressionUUID->"e8f7bc3f-b2aa-46f6-9b65-01bb72b1306d"],
Cell[1481424, 29083, 346, 11, 50, "Output",ExpressionUUID->"1b55d528-f08c-43f4-b7ec-7b1e997af217"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1481807, 29099, 691, 16, 147, "Input",ExpressionUUID->"7041e634-3a20-4407-84f1-8e395856bc68"],
Cell[1482501, 29117, 410, 12, 67, "Output",ExpressionUUID->"a08f7de2-1c1b-4895-be01-9962857cfa0e"],
Cell[1482914, 29131, 446, 14, 52, "Output",ExpressionUUID->"d43969f7-67be-401c-ba77-569bf36343f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1483397, 29150, 2081, 55, 313, "Input",ExpressionUUID->"88bb9435-2464-40b1-9964-d358edef11d1"],
Cell[1485481, 29207, 2106, 66, 167, "Output",ExpressionUUID->"90059ed4-6c77-44fe-9f6b-6291aa44d0d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1487624, 29278, 271, 6, 41, "Input",ExpressionUUID->"771ee8d9-2898-4d44-87d1-e80491e4404c"],
Cell[1487898, 29286, 114, 2, 41, "Output",ExpressionUUID->"40a3aa95-cd71-40ea-80b4-7deefa879049"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1488049, 29293, 252, 6, 41, "Input",ExpressionUUID->"48d3fce5-fab5-4390-863e-5e8942603e27"],
Cell[1488304, 29301, 5346, 148, 167, "Output",ExpressionUUID->"b6cc62e9-81d0-42f0-9b34-f453bc6f8c23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1493687, 29454, 967, 24, 109, "Input",ExpressionUUID->"32cbf83c-7c50-4185-80b5-07a030a1c9f0"],
Cell[1494657, 29480, 786, 25, 56, "Output",ExpressionUUID->"6a9d5a47-0f45-4e3f-b9c6-b62a875611a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1495480, 29510, 733, 17, 105, "Input",ExpressionUUID->"bcbc28f8-8cfb-418d-ad34-5973b1663fbe"],
Cell[1496216, 29529, 1540, 48, 131, "Output",ExpressionUUID->"a317474e-532e-4e07-a73f-dc3e91da6edd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1497793, 29582, 422, 11, 41, "Input",ExpressionUUID->"b0b4c0e4-9cf0-4967-a87d-d65300cbf7a8"],
Cell[1498218, 29595, 6969, 196, 167, "Output",ExpressionUUID->"be4c28c1-cf51-4d01-8917-4b2ab6570efd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1505224, 29796, 4395, 119, 359, "Input",ExpressionUUID->"8442e135-fc52-43a8-a8f9-f18e7c0a7c87"],
Cell[1509622, 29917, 3682, 107, 215, "Output",ExpressionUUID->"64fb01d6-c093-4fb9-a02c-ebc6d5fc9fec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1513341, 30029, 552, 12, 105, "Input",ExpressionUUID->"6a2acec3-dde0-4f23-a52e-f85f30552c9b"],
Cell[1513896, 30043, 402, 11, 43, "Output",ExpressionUUID->"38adb20a-6bb2-4bbf-857b-616cd21a966b"],
Cell[1514301, 30056, 3125, 93, 128, "Output",ExpressionUUID->"d7e84f4b-c469-42af-8237-ea2de5e78b9c"],
Cell[1517429, 30151, 931, 26, 66, "Output",ExpressionUUID->"18f8361b-5d9a-4d23-a0c0-251df6f02c34"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1518397, 30182, 368, 9, 63, "Input",ExpressionUUID->"29293117-92f3-43c8-8f44-025be449b8d6"],
Cell[1518768, 30193, 8482, 230, 302, "Output",ExpressionUUID->"ee3b2461-b470-444d-934a-ab44274d6bdc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1527287, 30428, 1908, 50, 313, "Input",ExpressionUUID->"c145c915-e6a5-4c79-ba61-96f327809240"],
Cell[1529198, 30480, 1916, 61, 173, "Output",ExpressionUUID->"929137f1-86fe-427c-98ba-a5a552f885d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1531151, 30546, 270, 6, 41, "Input",ExpressionUUID->"f4115b83-e0d0-4e1a-86ff-84f1a7c13026"],
Cell[1531424, 30554, 114, 2, 41, "Output",ExpressionUUID->"b6b91635-32f2-4cd6-8251-50a9b5bf372d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1531575, 30561, 252, 6, 41, "Input",ExpressionUUID->"725b587d-84fe-4337-9960-c38889035528"],
Cell[1531830, 30569, 3952, 114, 173, "Output",ExpressionUUID->"792890d9-ccef-43a3-9865-6f6eeb80466f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1535819, 30688, 811, 22, 67, "Input",ExpressionUUID->"5bd82b24-0912-41bf-a410-1ebbb431342c"],
Cell[1536633, 30712, 964, 30, 58, "Output",ExpressionUUID->"579f148f-7df0-48fc-8618-fac235daf92a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1537634, 30747, 1413, 34, 153, "Input",ExpressionUUID->"941e38d8-a427-4e16-ba90-bbfa2e5bbfe9"],
Cell[1539050, 30783, 1298, 41, 133, "Output",ExpressionUUID->"f83ccd42-0d64-4daf-817b-a2b5cccbb824"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1540385, 30829, 434, 11, 41, "Input",ExpressionUUID->"67164b84-ae84-403b-8db1-71b737aa27d2"],
Cell[1540822, 30842, 4884, 140, 171, "Output",ExpressionUUID->"736684f1-e563-4d5a-8651-898d88b3c70e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1545743, 30987, 403, 9, 63, "Input",ExpressionUUID->"9945282a-b1b6-4ee4-8395-002a1982c632"],
Cell[1546149, 30998, 241, 7, 41, "Output",ExpressionUUID->"baf0e306-9d38-4cc1-b84b-ae58e2113867"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1546427, 31010, 874, 25, 109, "Input",ExpressionUUID->"8459e594-5a66-40c7-b90a-da6d87c16f3f"],
Cell[1547304, 31037, 757, 24, 56, "Output",ExpressionUUID->"e8e11f9a-3328-4dba-af8c-0c7affa32a8c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1548098, 31066, 1908, 50, 313, "Input",ExpressionUUID->"2232119e-b7cb-47dc-8975-7dcab9ae9524"],
Cell[1550009, 31118, 1915, 61, 173, "Output",ExpressionUUID->"ef17168e-0a17-40f6-8ed5-d2b6bf8e8543"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1551961, 31184, 270, 6, 41, "Input",ExpressionUUID->"c4e31d59-fe2a-4ed7-a92f-5898c400b7aa"],
Cell[1552234, 31192, 114, 2, 41, "Output",ExpressionUUID->"773c4403-edbd-47ba-9a75-76b761c1d927"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1552385, 31199, 252, 6, 41, "Input",ExpressionUUID->"50d0b76a-3915-465d-951a-6cd4f5a86b05"],
Cell[1552640, 31207, 3973, 115, 173, "Output",ExpressionUUID->"354e3c39-6beb-46a3-af0c-25c1d7fd9295"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1556650, 31327, 768, 21, 67, "Input",ExpressionUUID->"ae5b08c8-c96b-4e20-9c34-67c0c3f1213b"],
Cell[1557421, 31350, 5343, 163, 322, "Output",ExpressionUUID->"89f9d138-8581-4621-92b9-69d67fd16bdd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1562801, 31518, 1475, 35, 174, "Input",ExpressionUUID->"3e13454b-270f-4b80-a8d6-97b0c713d455"],
Cell[1564279, 31555, 1297, 41, 133, "Output",ExpressionUUID->"8f4fa7c7-5108-4ac2-b071-88c4589b91bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1565613, 31601, 427, 11, 41, "Input",ExpressionUUID->"dc486d2f-7e4d-47a6-892f-b4694711f8d0"],
Cell[1566043, 31614, 4880, 140, 171, "Output",ExpressionUUID->"bb489350-89ff-4bbb-a09f-a3cb3b90138d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1570960, 31759, 409, 9, 63, "Input",ExpressionUUID->"3bbe4002-70ca-48d5-ad02-22e7be80923b"],
Cell[1571372, 31770, 241, 7, 41, "Output",ExpressionUUID->"b6c600d6-739d-41b0-b29c-b604306c127d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1571650, 31782, 948, 26, 130, "Input",ExpressionUUID->"557c1c8c-bae6-42e4-87e5-2860c19e00b6"],
Cell[1572601, 31810, 756, 24, 56, "Output",ExpressionUUID->"539d2427-58eb-4644-aafe-9ff75747c762"]
}, Open  ]]
}
]
*)

