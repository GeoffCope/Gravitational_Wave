(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1301768,      29195]
NotebookOptionsPosition[   1249940,      28304]
NotebookOutlinePosition[   1250425,      28322]
CellTagsIndexPosition[   1250382,      28319]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Notebook for :  
Perimeter Scholars International
Explorations in Gravitational Physics
Numerical Relativity Project 1 Wave Equation by Choptuik Pretorius\
\>", "Title",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8217294718661222`*^9, 3.821729502043838*^9}, 
   3.8217295683553457`*^9, 3.821732221863006*^9, {3.821811203295624*^9, 
   3.8218112036548367`*^9}, {3.822041768762134*^9, 3.822041781290854*^9}, {
   3.822048009752109*^9, 3.8220480569607773`*^9}, {3.822504877727007*^9, 
   3.8225048874039307`*^9}, {3.822565447028533*^9, 3.822565457908236*^9}, {
   3.822822107930128*^9, 3.822822113128089*^9}, {3.823176459993638*^9, 
   3.823176470345335*^9}, {3.8233420289245663`*^9, 3.823342046987978*^9}, {
   3.823342087699772*^9, 3.8233420915793324`*^9}, 3.844103830528186*^9, {
   3.844202472641021*^9, 3.844202481237701*^9}, {3.84428293219575*^9, 
   3.844282940330945*^9}, {3.844631361581801*^9, 3.844631371653078*^9}},
 TextAlignment->Center,ExpressionUUID->"3783ad43-a12e-41ac-94b0-35782579d6e2"],

Cell["\<\
Geoff Cope
University of Utah
October 31st , 2018\
\>", "Author",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.821729507652328*^9, 3.821729529657844*^9}, 
   3.8220480097522783`*^9, {3.822048070235491*^9, 3.822048084689715*^9}, {
   3.8225654346519403`*^9, 3.8225654361641483`*^9}, {3.8231764728567343`*^9, 
   3.823176482313031*^9}, {3.823342051739667*^9, 3.823342057059936*^9}, {
   3.829482025933754*^9, 3.829482032428474*^9}},
 TextAlignment->Center,ExpressionUUID->"90ee04e4-1919-4a2d-acdc-0cef47ff1b01"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Utilities and Package Load", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.823341962323782*^9, 3.8233419775643177`*^9}, 
   3.823342100949644*^9},ExpressionUUID->"550d7ae6-3c3f-446c-a02a-\
babf79e953a5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "Utilities`CleanSlate`"}], "\[IndentingNewLine]", 
 RowBox[{"CleanSlate", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearInOut", "[", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pdConv", "[", "f_", "]"}], ":=", 
  RowBox[{"TraditionalForm", "[", 
   RowBox[{"f", "/.", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Derivative", "[", "inds__", "]"}], "[", "g_", "]"}], "[", 
      "vars__", "]"}], "\[RuleDelayed]", 
     RowBox[{"Apply", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Defer", "[", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"g", "[", "vars", "]"}], ",", "##"}], "]"}], "]"}], "&"}], 
       ",", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "vars", "}"}], ",", 
           RowBox[{"{", "inds", "}"}]}], "}"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"var_", ",", "0"}], "}"}], "\[RuleDelayed]", 
           RowBox[{"Sequence", "[", "]"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"var_", ",", "1"}], "}"}], "\[RuleDelayed]", 
           RowBox[{"{", "var", "}"}]}]}], "}"}]}]}], "]"}]}]}], 
   "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8208641738153477`*^9, 3.8208641745731487`*^9}, 
   3.823341967211893*^9, 3.823342100949862*^9},
 CellLabel->
  "In[198]:=",ExpressionUUID->"ee4fbc02-a5a8-4dfe-b7e7-6efae72a5cbe"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  (CleanSlate) Contexts purged: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"Global`\"\>", "}"}]}],
  SequenceForm["  (CleanSlate) Contexts purged: ", {"Global`"}],
  Editable->False]], "Print",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.823341864779784*^9, 3.823341967212036*^9, 
  3.823342100949937*^9, 3.823345733383738*^9, 3.8233458383567743`*^9, 
  3.823346232242653*^9, 3.8294819581735373`*^9, 3.844103956481082*^9, 
  3.844202537675804*^9, 3.8442029536814213`*^9, 3.8442030166807528`*^9, 
  3.844203061778966*^9, 3.844208605291026*^9, 3.844281395702074*^9, 
  3.844347492127717*^9, 3.8443703424152737`*^9, 3.8445238475193872`*^9},
 CellLabel->
  "During evaluation of \
In[198]:=",ExpressionUUID->"227729d8-f441-4350-815d-4bd8f97f211d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  (CleanSlate) Approximate kernel memory recovered: \"\>", 
   "\[InvisibleSpace]", "\<\"840 Kb\"\>"}],
  SequenceForm[
  "  (CleanSlate) Approximate kernel memory recovered: ", "840 Kb"],
  Editable->False]], "Print",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.823341864779784*^9, 3.823341967212036*^9, 
  3.823342100949937*^9, 3.823345733383738*^9, 3.8233458383567743`*^9, 
  3.823346232242653*^9, 3.8294819581735373`*^9, 3.844103956481082*^9, 
  3.844202537675804*^9, 3.8442029536814213`*^9, 3.8442030166807528`*^9, 
  3.844203061778966*^9, 3.844208605291026*^9, 3.844281395702074*^9, 
  3.844347492127717*^9, 3.8443703424152737`*^9, 3.844523847521701*^9},
 CellLabel->
  "During evaluation of \
In[198]:=",ExpressionUUID->"61112236-07d3-4a6b-9e99-993b9a2e7613"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Utilities`CleanSlate`\"\>", 
   ",", "\<\"GeneralRelativityTensors`\"\>", 
   ",", "\<\"GeneralRelativityTensors`CommonTensors`\"\>", 
   ",", "\<\"GeneralRelativityTensors`TensorDerivatives`\"\>", 
   ",", "\<\"GeneralRelativityTensors`TensorManipulation`\"\>", 
   ",", "\<\"GeneralRelativityTensors`TensorDefinitions`\"\>", 
   ",", "\<\"GeneralRelativityTensors`Utils`\"\>", 
   ",", "\<\"DocumentationSearch`\"\>", ",", "\<\"ResourceLocator`\"\>", 
   ",", "\<\"System`\"\>", ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.823341864790359*^9, 3.823341967212275*^9, 
  3.823342100950078*^9, 3.8233457333929157`*^9, 3.823345838361568*^9, 
  3.8233462322476187`*^9, 3.829481958179287*^9, 3.844103956495859*^9, 
  3.844202537711419*^9, 3.8442029536869698`*^9, 3.844203016689885*^9, 
  3.844203061788123*^9, 3.8442086052995577`*^9, 3.8442813957125998`*^9, 
  3.8443474921372757`*^9, 3.8443703424273567`*^9, 3.844523847524941*^9},
 CellLabel->"Out[0]=",ExpressionUUID->"45748dd6-57ad-4176-b5d9-9fe563081e95"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"<<", "GeneralRelativityTensors`"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8209376549035053`*^9, 3.8442030540630417`*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"76520ec1-9736-4600-92f2-c946acb162f6"]
}, Closed]],

Cell[CellGroupData[{

Cell["Hyperlink To Original Paper", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.823341936654647*^9, 3.823341955083416*^9}, 
   3.84410425686303*^9},ExpressionUUID->"7c2a53f5-b99c-4b75-b0a0-\
66cff8dbb8c4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Numerical Relativity PSI 2010\>\"", ",", "\[IndentingNewLine]", 
   "\"\<http://laplace.physics.ubc.ca/2010-pi-nr/www/\>\""}], "]"}]], "Input",\

 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{3.8442024638329363`*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"7384d75e-b5a8-49f5-8da9-e8be741ca031"],

Cell[BoxData[
 TemplateBox[{
  "\"Numerical Relativity PSI 2010\"", 
   "http://laplace.physics.ubc.ca/2010-pi-nr/www/"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.8442025377929573`*^9, 3.844202549202539*^9}, 
   3.844203016762134*^9, 3.844203062095488*^9, 3.8442086053519173`*^9, 
   3.84428139601219*^9, 3.8443474921954308`*^9, 3.844370342701253*^9, 
   3.844523847658628*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"bd0caa56-a781-4b90-9a87-4965e94d8608"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Line Element and Metric Functions", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.820937548919169*^9, 3.8209375728447866`*^9}, 
   3.8209383129401073`*^9, 3.8220481344968433`*^9, {3.8225115057038183`*^9, 
   3.822511507783984*^9}, 
   3.822763734568725*^9},ExpressionUUID->"0236cc7e-7f14-4656-a067-\
778b3c58130d"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "lineToMetric", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lineToMetric", "[", 
    RowBox[{"lineelement_", " ", ",", " ", "differentials_"}], "]"}], ":=", 
   " ", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"i", "\[Equal]", "j"}], " ", ",", 
       RowBox[{"Coefficient", "[", 
        RowBox[{"lineelement", ",", " ", 
         RowBox[{
          RowBox[{"differentials", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", 
          RowBox[{"differentials", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}], "*", 
        RowBox[{"Coefficient", "[", 
         RowBox[{"lineelement", ",", " ", 
          RowBox[{
           RowBox[{"differentials", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", 
           RowBox[{"differentials", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}]}], "]"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "differentials", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "differentials", "]"}]}], "}"}]}], "]"}]}], 
  "  ", ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{3.821567412203915*^9, 3.821641945174967*^9, 
  3.821641981470141*^9, 3.8220481344970007`*^9, 3.822763734569355*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"4571a7e0-5581-4711-9a39-3ebb531fff86"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "metricToLine", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metricToLine", "[", 
   RowBox[{"metric_", ",", " ", "differentials_"}], "]"}], ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"metric", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "j"}], "]"}], "]"}], " ", 
     RowBox[{"differentials", "[", 
      RowBox[{"[", "i", "]"}], "]"}], " ", 
     RowBox[{"differentials", "[", 
      RowBox[{"[", "j", "]"}], "]"}]}], " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "differentials", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", 
      RowBox[{"Length", "[", "differentials", "]"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.822762557092309*^9, 3.8227626322008677`*^9}, 
   3.8227637345698223`*^9, 3.822988709740047*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"3bfcce52-64db-41cf-a82e-bbc3cfc61cc4"]
}, Closed]],

Cell[CellGroupData[{

Cell["Custom Notation", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.8225114042235403`*^9, 3.822511435665856*^9}, 
   3.823176577809782*^9, 3.825287791153748*^9, {3.844282797338748*^9, 
   3.844282798842614*^9}},ExpressionUUID->"e605ce9f-a426-4d61-a219-\
d303e8816c62"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "dtReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dtReplace", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Dt", "[", "r", "]"}], "\[Rule]", " ", "dr"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "t", "]"}], "\[Rule]", " ", "dt"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "u", "]"}], "\[Rule]", " ", "du"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "v", "]"}], "\[Rule]", " ", "dv"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "x", "]"}], "\[Rule]", " ", "dx"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "y", "]"}], " ", "\[Rule]", " ", "dy"}], " ", ",", 
     " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "z", "]"}], "\[Rule]", " ", "dz"}], " ", ",", " ", 
     "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Theta]", "]"}], " ", "\[Rule]", " ", 
      "d\[Theta]"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Phi]", "]"}], " ", "\[Rule]", " ", "d\[Phi]"}], 
     "  ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Eta]", "]"}], " ", "\[Rule]", " ", "d\[Eta]"}], 
     "  ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Chi]", "]"}], "\[Rule]", " ", "d\[Chi]"}], " ", 
     ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Rho]", "]"}], " ", "\[Rule]", " ", "d\[Rho]"}], 
     " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[CurlyRho]", "]"}], "\[Rule]", " ", 
      "d\[CurlyRho]"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[CurlyPhi]", "]"}], " ", "\[Rule]", " ", 
      "d\[CurlyPhi]"}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Xi]", "]"}], "\[Rule]", " ", "d\[Xi]"}], " ", ",",
      "  ", "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptT]", "]"}], " ", "\[Rule]", " ", 
      "d\[ScriptT]"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptZ]", "]"}], " ", "\[Rule]", " ", 
      "d\[ScriptZ]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "R", "]"}], "->", " ", "dR"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "T", "]"}], "\[Rule]", " ", "dT"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "X", "]"}], "\[Rule]", " ", "dX"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "Y", "]"}], "\[Rule]", " ", "dY"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "Z", "]"}], "\[Rule]", " ", "dZ"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "U", "]"}], "\[Rule]", " ", "dU"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "V", "]"}], "\[Rule]", " ", "dV"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptR]", "]"}], "\[Rule]", " ", "d\[ScriptR]"}],
      "  ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[CapitalPhi]", "]"}], "\[Rule]", " ", 
      "d\[CapitalPhi]"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"dtReplace", " ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.82317656063256*^9, 3.823176577809904*^9}, {
   3.823598236175474*^9, 3.823598253654046*^9}, {3.823598849383689*^9, 
   3.82359891091936*^9}, {3.8236913141384983`*^9, 3.823691322585009*^9}, {
   3.8237047861092253`*^9, 3.823704790612156*^9}, 3.825287791153907*^9, {
   3.844274085480714*^9, 3.844274088624688*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"53435cd8-6fc2-4eea-a2d5-e2d1822ece35"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"Dt", "[", "r", "]"}], "\[Rule]", "dr"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "t", "]"}], "\[Rule]", "dt"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "u", "]"}], "\[Rule]", "du"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "v", "]"}], "\[Rule]", "dv"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "x", "]"}], "\[Rule]", "dx"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "y", "]"}], "\[Rule]", "dy"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "z", "]"}], "\[Rule]", "dz"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Theta]", "]"}], "\[Rule]", "d\[Theta]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Phi]", "]"}], "\[Rule]", "d\[Phi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Eta]", "]"}], "\[Rule]", "d\[Eta]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Chi]", "]"}], "\[Rule]", "d\[Chi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Rho]", "]"}], "\[Rule]", "d\[Rho]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[CurlyRho]", "]"}], "\[Rule]", "d\[CurlyRho]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[CurlyPhi]", "]"}], "\[Rule]", "d\[CurlyPhi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Xi]", "]"}], "\[Rule]", "d\[Xi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptT]", "]"}], "\[Rule]", "d\[ScriptT]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptZ]", "]"}], "\[Rule]", "d\[ScriptZ]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "R", "]"}], "\[Rule]", "dR"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "T", "]"}], "\[Rule]", "dT"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "X", "]"}], "\[Rule]", "dX"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "Y", "]"}], "\[Rule]", "dY"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "Z", "]"}], "\[Rule]", "dZ"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "U", "]"}], "\[Rule]", "dU"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "V", "]"}], "\[Rule]", "dV"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptR]", "]"}], "\[Rule]", "d\[ScriptR]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[CapitalPhi]", "]"}], "\[Rule]", 
       "d\[CapitalPhi]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{3.823598254375844*^9, 3.823598877146447*^9, 
  3.823598911379983*^9, 3.823618495599228*^9, 3.823683414107848*^9, 
  3.823683842051852*^9, 3.823684775483016*^9, 3.82368879462633*^9, 
  3.823690777330206*^9, 3.823691323069952*^9, 3.823704572638439*^9, 
  3.823704791783836*^9, 3.823967036322558*^9, 3.8239675180766773`*^9, 
  3.823970038900818*^9, 3.824025682372151*^9, 3.8252877911540327`*^9, 
  3.825843522413425*^9, 3.825875356265313*^9, 3.825877049929414*^9, 
  3.827924950581037*^9, 3.828896979723094*^9, 3.828897345810851*^9, 
  3.8289163734087267`*^9, 3.828918659642091*^9, 3.828949247843746*^9, 
  3.8442734427947073`*^9, 3.844274089080681*^9, 3.8442815053676977`*^9, 
  3.844347492248249*^9, 3.8443703427604513`*^9, 3.844523847723589*^9},
 CellLabel->
  "Out[10]//TableForm=",ExpressionUUID->"6dc3a91e-cd38-49fb-9eea-\
eb1f75158f4d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Mass", " ", "in", " ", "constant"}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"M", "/:", 
     RowBox[{"Dt", "[", "M", "]"}], "=", "0"}], "  ", ";"}], "  ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m", " ", "/:", " ", 
     RowBox[{"Dt", "[", "m", "]"}], " ", "=", " ", "0"}], " ", ";"}], 
   "  "}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.823598195430221*^9, 3.823598210501268*^9}, {
   3.823602495092556*^9, 3.823602530987715*^9}, {3.8236188964036007`*^9, 
   3.8236189207008657`*^9}, {3.8237047330364532`*^9, 3.823704739867001*^9}, 
   3.825287791154132*^9, {3.844274035881297*^9, 3.844274051494507*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"e7235eae-a88b-47b0-b52e-85c7543b6c2c"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Line Element and Metric 1:  3+1 Form of Spherically Symmetric\
\>", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.844202714626381*^9, 3.844202727725988*^9}, {
  3.844347588545951*^9, 
  3.8443475957458467`*^9}},ExpressionUUID->"dffbc1aa-7c41-4a2f-843f-\
f5fd0c0f0883"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq1", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[Alpha]", "2"]}], "+", " ", 
      RowBox[{
       SuperscriptBox["a", "2"], 
       SuperscriptBox["\[Beta]", "2"]}]}], ")"}], " ", 
    SuperscriptBox["dt", "2"]}], "+", " ", 
   RowBox[{"2", " ", 
    SuperscriptBox["a", "2"], "\[Beta]", " ", "dt", " ", "dr"}], " ", "+", 
   " ", 
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox["dr", "2"]}], "+", " ", 
   RowBox[{
    SuperscriptBox["r", "2"], "(", " ", 
    RowBox[{
     SuperscriptBox["d\[Theta]", "2"], "+", " ", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
      SuperscriptBox["d\[Phi]", "2"]}]}], ")"}], " "}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.844202560855989*^9, 3.8442026117990313`*^9}, 
   3.844202720133569*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"f676da7c-7178-4781-b7fb-0e69dcc63e6d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox["dr", "2"]}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["a", "2"], " ", "dr", " ", "dt", " ", "\[Beta]"}], "+", 
  RowBox[{
   SuperscriptBox["dt", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[Alpha]", "2"]}], "+", 
     RowBox[{
      SuperscriptBox["a", "2"], " ", 
      SuperscriptBox["\[Beta]", "2"]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["d\[Theta]", "2"], "+", 
     RowBox[{
      SuperscriptBox["d\[Phi]", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.84420261257034*^9, 3.844202720133998*^9, {3.8442029601938972`*^9, 
   3.84420296995234*^9}, 3.844203016825098*^9, 3.844203062162706*^9, 
   3.8442086054179296`*^9, 3.844281396071233*^9, 3.844347492281803*^9, 
   3.844370342785892*^9, 3.844523847760129*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"1fd7992f-1932-4d44-8a09-c7afd71dacb2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric1a", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric1a", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"lineToMetric", "[", " ", 
    RowBox[{"eq1", " ", ",", " ", 
     RowBox[{"{", 
      RowBox[{"dt", ",", "dr", ",", "d\[Theta]", ",", "d\[Phi]"}], "}"}]}], 
    " ", "]"}]}], "   ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric1a", " ", "//", "  ", "MatrixForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.844202614456482*^9, 3.844202633294078*^9}, {
  3.844202710415052*^9, 3.8442027201342382`*^9}, {3.844211117852845*^9, 
  3.844211129499711*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"a4c6f9fc-d27c-4bbe-a5c3-084d9dbd0480"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["\[Beta]", "2"]}], "-", 
        SuperscriptBox["\[Alpha]", "2"]}], 
       RowBox[{
        SuperscriptBox["a", "2"], " ", "\[Beta]"}], "0", "0"},
      {
       RowBox[{
        SuperscriptBox["a", "2"], " ", "\[Beta]"}], 
       SuperscriptBox["a", "2"], "0", "0"},
      {"0", "0", 
       SuperscriptBox["r", "2"], "0"},
      {"0", "0", "0", 
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.844202625110021*^9, 3.844202634040482*^9}, {
   3.844202712212227*^9, 3.84420272013456*^9}, {3.8442029602624197`*^9, 
   3.8442029700122643`*^9}, 3.844203016861212*^9, 3.844203062205366*^9, 
   3.8442086054499197`*^9, 3.844211130146818*^9, 3.844281396105339*^9, 
   3.84434749230877*^9, 3.844370342816292*^9, 3.8445238477925463`*^9},
 CellLabel->
  "Out[17]//TraditionalForm=",ExpressionUUID->"cb943cb5-77c7-44cf-a816-\
39bf5fd837b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq1a", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq1a", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Alpha]", "->", " ", 
      RowBox[{"\[Alpha]", "[", "r", "]"}]}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Beta]", "->", " ", 
      RowBox[{"\[Beta]", "[", "r", "]"}]}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"a", "->", " ", 
      RowBox[{"a", "[", "r", "]"}]}]}], " ", "\[IndentingNewLine]", "}"}]}], 
  " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq1a", " ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.8442026444059563`*^9, 3.844202667302347*^9}, 
   3.844202720134817*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"0adecc03-5bd5-4940-aa96-638cb76ea9bc"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"\[Alpha]", "\[Rule]", 
       RowBox[{"\[Alpha]", "[", "r", "]"}]}]},
     {
      RowBox[{"\[Beta]", "\[Rule]", 
       RowBox[{"\[Beta]", "[", "r", "]"}]}]},
     {
      RowBox[{"a", "\[Rule]", 
       RowBox[{"a", "[", "r", "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.844202667572423*^9, 3.844202720135139*^9, {3.844202960275783*^9, 
   3.844202970026362*^9}, 3.84420301687607*^9, 3.8442030622207108`*^9, 
   3.84420860546758*^9, 3.844281396123616*^9, 3.844347492323093*^9, 
   3.844370342828536*^9, 3.844523847801448*^9},
 CellLabel->
  "Out[20]//TableForm=",ExpressionUUID->"682278db-008c-4a15-b35d-\
cdfe01e4d86c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric1", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lineToMetric", "[", " ", 
     RowBox[{"eq1", " ", ",", " ", 
      RowBox[{"{", 
       RowBox[{"dt", ",", "dr", ",", "d\[Theta]", ",", "d\[Phi]"}], "}"}]}], 
     " ", "]"}], "   ", "/.", " ", "eq1a"}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric1", " ", "//", "  ", "MatrixForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.844202684614292*^9, 3.84420272013538*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"cd9c34c2-217f-4ec8-8703-b4f10fe85908"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"a", "(", "r", ")"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"\[Beta]", "(", "r", ")"}], "2"]}], "-", 
        SuperscriptBox[
         RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"a", "(", "r", ")"}], "2"], " ", 
        RowBox[{"\[Beta]", "(", "r", ")"}]}], "0", "0"},
      {
       RowBox[{
        SuperscriptBox[
         RowBox[{"a", "(", "r", ")"}], "2"], " ", 
        RowBox[{"\[Beta]", "(", "r", ")"}]}], 
       SuperscriptBox[
        RowBox[{"a", "(", "r", ")"}], "2"], "0", "0"},
      {"0", "0", 
       SuperscriptBox["r", "2"], "0"},
      {"0", "0", "0", 
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.844202686162497*^9, 3.844202720135662*^9}, {
   3.844202960309506*^9, 3.844202970060193*^9}, 3.844203016911598*^9, 
   3.844203062259626*^9, 3.84420860549866*^9, 3.844281396151919*^9, 
   3.844347492347928*^9, 3.844370342845813*^9, 3.844523847831666*^9},
 CellLabel->
  "Out[23]//TraditionalForm=",ExpressionUUID->"9d184378-8d61-45ed-be33-\
7e5a13fb01f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Should", " ", "be", " ", "equation", " ", "9"}], " ", "*)"}], " ",
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "inverse1", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"inverse1", " ", "=", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Inverse", "[", " ", "metric1", " ", "]"}], " ", "//", " ", 
       "Expand"}], " ", "//", " ", "Simplify"}]}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"inverse1", " ", "//", " ", "MatrixForm"}], " ", "//", " ", 
    "pdConv"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.84420273280898*^9, 3.844202759590386*^9}, 
   3.844202793258492*^9, {3.844202833262988*^9, 3.844202840351509*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"358d6695-7a5a-4639-9dff-ad3ab478923e"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"-", 
        FractionBox["1", 
         SuperscriptBox[
          RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]]}], 
       FractionBox[
        RowBox[{"\[Beta]", "(", "r", ")"}], 
        SuperscriptBox[
         RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "0", "0"},
      {
       FractionBox[
        RowBox[{"\[Beta]", "(", "r", ")"}], 
        SuperscriptBox[
         RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], 
       RowBox[{
        FractionBox["1", 
         SuperscriptBox[
          RowBox[{"a", "(", "r", ")"}], "2"]], "-", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"\[Beta]", "(", "r", ")"}], "2"], 
         SuperscriptBox[
          RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]]}], "0", "0"},
      {"0", "0", 
       FractionBox["1", 
        SuperscriptBox["r", "2"]], "0"},
      {"0", "0", "0", 
       FractionBox[
        RowBox[{
         SuperscriptBox["csc", "2"], "(", "\[Theta]", ")"}], 
        SuperscriptBox["r", "2"]]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.84420275400521*^9, 3.8442027600586443`*^9}, 
   3.844202793258985*^9, 3.844202840774106*^9, {3.844202960393282*^9, 
   3.844202970096133*^9}, 3.844203016950292*^9, 3.8442030622771597`*^9, 
   3.844208605534457*^9, 3.844281396201589*^9, 3.84434749238762*^9, 
   3.844370342895062*^9, 3.844523847862499*^9},
 CellLabel->
  "Out[26]//TraditionalForm=",ExpressionUUID->"3147b20e-b02a-44f0-8eb7-\
d63430f301bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"metric1", " ", ".", " ", "inverse1"}], " ", "//", " ", 
    "Expand"}], " ", "//", " ", "Simplify"}], " ", "//", " ", 
  "MatrixForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.8442027635609303`*^9, 3.84420279325928*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"771bb196-2ac2-498e-9c28-a098ee130503"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0"},
     {"0", "1", "0", "0"},
     {"0", "0", "1", "0"},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.844202773270314*^9, 3.8442027932597113`*^9}, {
   3.844202960409623*^9, 3.8442029701109467`*^9}, 3.8442030169669933`*^9, 
   3.844203062312957*^9, 3.844208605550865*^9, 3.8442813962166853`*^9, 
   3.844347492402738*^9, 3.8443703429051723`*^9, 3.844523847871147*^9},
 CellLabel->
  "Out[27]//MatrixForm=",ExpressionUUID->"8dd47ffc-a9c2-4175-a1ef-\
ad91e8e230a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"inverse1", " ", ".", " ", "metric1"}], " ", "//", " ", 
    "Expand"}], " ", "//", " ", "Simplify"}], " ", "//", " ", 
  "MatrixForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.844202775215975*^9, 3.8442027932599783`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"eaa0e313-085a-4c22-b03f-33caa6c027c1"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0"},
     {"0", "1", "0", "0"},
     {"0", "0", "1", "0"},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.844202785061419*^9, 3.844202793260392*^9}, {
   3.8442029604474163`*^9, 3.844202970143137*^9}, 3.844203017005*^9, 
   3.844203062327834*^9, 3.8442086055768147`*^9, 3.844281396244136*^9, 
   3.844347492426778*^9, 3.8443703429186697`*^9, 3.844523847901257*^9},
 CellLabel->
  "Out[28]//MatrixForm=",ExpressionUUID->"db149293-edc0-4f11-8ad5-\
e7759e406ec9"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Calculation of Tensors Associated With Metric 1", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8209375013653803`*^9, 3.820937526701229*^9}, 
   3.8211102293506603`*^9, 3.844104743748301*^9, 3.844199557855791*^9, {
   3.8442032194849443`*^9, 
   3.844203224950027*^9}},ExpressionUUID->"44234123-8581-49c3-995f-\
ad44be54bb43"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"$CacheTensorValues", "=", "True"}], ";"}], " ", "*)"}], 
  " "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.819639535112979*^9, 3.819639560098693*^9}, 
   3.821109141509594*^9, 3.821109340369235*^9, 3.821110229350811*^9, {
   3.824511755669795*^9, 3.824511758917903*^9}, 3.844104743748966*^9, 
   3.8441995578565607`*^9, 3.844203219485368*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"6cc158e5-c69b-4eac-b4c3-436d374fea79"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "input", "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"input", "[", 
    RowBox[{
    "equationNumber_", ",", "equation_", ",", "metricName_", ",", 
     "displayName_", ",", "variables_", ",", "indices_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", "tensorList", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"tensorList", " ", "=", " ", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<g\>\"", "<>", "equationNumber"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<christoffel\>\"", "<>", "equationNumber"}], " ", ",", 
         " ", "\[IndentingNewLine]", 
         RowBox[{"\"\<riemann\>\"", "<>", "equationNumber"}], "  ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<ricci\>\"", "<>", "equationNumber"}], " ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<ricciscalar\>\"", "<>", "equationNumber"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<kretschmannscalar\>\"", "<>", "equationNumber"}], "  ", 
         ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<einstein\>\"", "<>", "equationNumber"}], "  ", ",", " ",
          "\[IndentingNewLine]", 
         RowBox[{"\"\<weyl\>\"", "<>", "equationNumber"}], "  ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<cotton\>\"", "<>", "equationNumber"}]}], "  ", 
        "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"ToMetric", "[", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{"metricName", ",", " ", "displayName"}], " ", "}"}], " ", 
         ",", " ", "variables", ",", " ", "equation", ",", " ", "indices"}], 
        " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "  ", "=", " ", "\[IndentingNewLine]", 
       RowBox[{"ChristoffelSymbol", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], "]"}]}], " ", ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "3", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"RiemannTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWithNested", "\[Rule]", " ", "Simplify"}]}], " ", 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "4", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"RicciTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}]}], " ",
       ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "5", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"RicciScalar", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}]}], " ",
       ";", "\[IndentingNewLine]", " ", 
      RowBox[{"(*", "  ", 
       RowBox[{
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "6", "]"}], "]"}], " ", "=", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"KretschmannScalar", "[", " ", 
          RowBox[{
           RowBox[{"tensorList", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
           RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], "]"}]}], " ", 
        ";"}], "  ", "*)"}], " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "7", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"EinsteinTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], "]"}]}], " ", 
      ";"}]}], "  ", "\[IndentingNewLine]", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "8", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"WeylTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}]}], " ",
       ";", "\[IndentingNewLine]", " ", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "9", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"CottonTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}]}], " ",
       ";"}], "  ", "*)"}], " ", "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.820937492203251*^9, 3.821110229350912*^9, {3.824381686137444*^9, 
   3.824381701791286*^9}, {3.824382212611581*^9, 3.824382216339905*^9}, {
   3.8243823186862707`*^9, 3.824382322501081*^9}, {3.844104623372229*^9, 
   3.8441046289854803`*^9}, 3.844104743755608*^9, 3.844199557857367*^9, {
   3.8442031551696177`*^9, 3.8442031677763777`*^9}, 3.844203219486184*^9},
 CellLabel->"In[30]:=",ExpressionUUID->"920a183c-522a-455c-8b22-84196b1d534f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Last", " ", "timing", " ", "took", " ", "1.20", " ", "for", " ", "all", 
    " ", "tensors", " ", "except", " ", "Kretschmann", " ", "Weyl", "  ", 
    "and", " ", "Cotton"}], " ", "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"input", "[", " ", 
    RowBox[{
    "\"\<metric1\>\"", ",", " ", "metric1", ",", " ", "\"\<Spherical\>\"", 
     ",", "\"\<\!\(\*SuperscriptBox[\(g\), \(sph\)]\)\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
     " ", "\"\<Greek\>\""}], "]"}], " ", "//", " ", "Timing"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.820937492203436*^9, 3.821110229350998*^9, {3.822307281934704*^9, 
   3.822307303605431*^9}, {3.8243818575378323`*^9, 3.82438186818433*^9}, {
   3.824513580589107*^9, 3.824513589908223*^9}, {3.8278816087737007`*^9, 
   3.8278816137482233`*^9}, {3.844104601011738*^9, 3.8441046201064157`*^9}, 
   3.844104743756219*^9, {3.844199520319607*^9, 3.844199523622924*^9}, 
   3.84419955785779*^9, {3.844202921222884*^9, 3.844202945088998*^9}, {
   3.8442031751437483`*^9, 3.844203186151146*^9}, 3.844203219486517*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"2ab4d22b-9bff-42f9-bdef-4f1ae9d18d7b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.183613`", ",", "Null"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.844199393597891*^9, 3.844199513983611*^9, 3.844199557858094*^9, {
   3.84420294909369*^9, 3.84420297339577*^9}, 3.844203020458599*^9, {
   3.8442031477006397`*^9, 3.844203171702423*^9}, 3.84420321948682*^9, 
   3.8442086061172543`*^9, 3.844281398130437*^9, 3.844347493413632*^9, 
   3.844347527051167*^9, 3.844370344791162*^9, 3.844523850099189*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"40e27ba1-25e2-41a0-b741-218146357d04"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["tensorList"], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.820937492203697*^9, 3.8211102293511972`*^9, 
  3.8441047437569437`*^9, 3.8441995578585587`*^9, 3.844203219487091*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"6803b70f-ec64-4ec5-912a-12424bbfab75"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    SubsuperscriptBox[
     SuperscriptBox["g", "sph"], "\[Alpha]\[Beta]", ""],
    DisplayForm], ",", 
   TagBox[
    SubsuperscriptBox["\[CapitalGamma]", 
     RowBox[{"  ", "\[Beta]\[Gamma]"}], 
     RowBox[{"\[Alpha]", "    "}]],
    DisplayForm], ",", 
   TagBox[
    SubsuperscriptBox["R", "\[Alpha]\[Beta]\[Gamma]\[Delta]", ""],
    DisplayForm], ",", 
   TagBox[
    SubsuperscriptBox["R", "\[Beta]\[Gamma]", ""],
    DisplayForm], ",", 
   TagBox["\<\"R\"\>",
    DisplayForm], ",", "\<\"kretschmannscalarmetric1\"\>", ",", 
   TagBox[
    SubsuperscriptBox["G", "\[Alpha]\[Beta]", ""],
    DisplayForm], ",", "\<\"weylmetric1\"\>", ",", "\<\"cottonmetric1\"\>"}], 
  "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.820932775365534*^9, 3.820933447849365*^9, 3.8209374922039557`*^9, 
   3.821110229351309*^9, 3.824381620902643*^9, 3.824381850166397*^9, 
   3.824382314366207*^9, 3.8245118421618633`*^9, 3.824514167829878*^9, 
   3.8278786350256853`*^9, 3.8278814012293863`*^9, 3.8279088611347723`*^9, 
   3.827912744356597*^9, 3.8441047110540333`*^9, 3.844104743760745*^9, 
   3.84410612608702*^9, 3.8441993113645897`*^9, 3.844199366357254*^9, 
   3.8441995261442633`*^9, 3.8441995578630457`*^9, {3.844202973427453*^9, 
   3.844202982675016*^9}, 3.844203023120955*^9, 3.844203150287444*^9, 
   3.844203188532257*^9, 3.844203219487361*^9, 3.8442086061330347`*^9, 
   3.844281398215919*^9, 3.844347493476152*^9, 3.84434752706503*^9, 
   3.844370344852809*^9, 3.844523850154821*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"8a605216-e007-4f17-9a44-7b267e9748e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "1", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.82093459847665*^9, 3.820934601699522*^9}, 
   3.8209374922041063`*^9, 3.821110229351385*^9, 3.824373536864387*^9, 
   3.824381939541588*^9, 3.824751170474918*^9, 3.8441047437613373`*^9, 
   3.844199557863563*^9, 3.8442032194876347`*^9},
 CellLabel->"In[34]:=",ExpressionUUID->"92547f3b-8d21-4b17-aac1-9a01e9312a9a"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox[
   SuperscriptBox["g", "sph"], "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.820934602303184*^9, 3.820937492204216*^9, 3.821110229351462*^9, 
   3.824373536864538*^9, 3.824381620924634*^9, 3.8243818501805983`*^9, 
   3.824381939541747*^9, 3.824511842173975*^9, 3.824514167840876*^9, 
   3.8247511704751453`*^9, 3.827878635040415*^9, 3.827881401240424*^9, 
   3.827908861148841*^9, 3.827912744370165*^9, 3.844104713638116*^9, 
   3.8441047437618303`*^9, 3.844106126104191*^9, 3.844199311390098*^9, {
   3.844199536939693*^9, 3.844199557864162*^9}, 3.844202973448472*^9, {
   3.844203197750011*^9, 3.8442032194878883`*^9}, 3.844208606163411*^9, 
   3.844281398247603*^9, 3.844347493497048*^9, 3.8443475270961227`*^9, 
   3.8443703448641787`*^9, 3.8445238501649218`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"421aa453-1577-45eb-b0a4-a9d576ea3090"],

Cell[BoxData["\<\"Spherical\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.820934602303184*^9, 3.820937492204216*^9, 3.821110229351462*^9, 
   3.824373536864538*^9, 3.824381620924634*^9, 3.8243818501805983`*^9, 
   3.824381939541747*^9, 3.824511842173975*^9, 3.824514167840876*^9, 
   3.8247511704751453`*^9, 3.827878635040415*^9, 3.827881401240424*^9, 
   3.827908861148841*^9, 3.827912744370165*^9, 3.844104713638116*^9, 
   3.8441047437618303`*^9, 3.844106126104191*^9, 3.844199311390098*^9, {
   3.844199536939693*^9, 3.844199557864162*^9}, 3.844202973448472*^9, {
   3.844203197750011*^9, 3.8442032194878883`*^9}, 3.844208606163411*^9, 
   3.844281398247603*^9, 3.844347493497048*^9, 3.8443475270961227`*^9, 
   3.8443703448641787`*^9, 3.844523850167205*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"284a587a-8cc2-46a9-a38c-8110336e47d0"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"a", "(", "r", ")"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"\[Beta]", "(", "r", ")"}], "2"]}], "-", 
        SuperscriptBox[
         RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"a", "(", "r", ")"}], "2"], " ", 
        RowBox[{"\[Beta]", "(", "r", ")"}]}], "0", "0"},
      {
       RowBox[{
        SuperscriptBox[
         RowBox[{"a", "(", "r", ")"}], "2"], " ", 
        RowBox[{"\[Beta]", "(", "r", ")"}]}], 
       SuperscriptBox[
        RowBox[{"a", "(", "r", ")"}], "2"], "0", "0"},
      {"0", "0", 
       SuperscriptBox["r", "2"], "0"},
      {"0", "0", "0", 
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.820934602303184*^9, 3.820937492204216*^9, 3.821110229351462*^9, 
   3.824373536864538*^9, 3.824381620924634*^9, 3.8243818501805983`*^9, 
   3.824381939541747*^9, 3.824511842173975*^9, 3.824514167840876*^9, 
   3.8247511704751453`*^9, 3.827878635040415*^9, 3.827881401240424*^9, 
   3.827908861148841*^9, 3.827912744370165*^9, 3.844104713638116*^9, 
   3.8441047437618303`*^9, 3.844106126104191*^9, 3.844199311390098*^9, {
   3.844199536939693*^9, 3.844199557864162*^9}, 3.844202973448472*^9, {
   3.844203197750011*^9, 3.8442032194878883`*^9}, 3.844208606163411*^9, 
   3.844281398247603*^9, 3.844347493497048*^9, 3.8443475270961227`*^9, 
   3.8443703448641787`*^9, 3.844523850170602*^9},
 CellLabel->
  "Out[36]//TraditionalForm=",ExpressionUUID->"d9b8c73b-03c7-4894-aba0-\
55ea9fe15fb3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "2", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.820934553796588*^9, 3.820934587380786*^9}, 
   3.8209374922046547`*^9, 3.821110229351994*^9, 3.824373536864839*^9, 
   3.824381939542098*^9, 3.8247511704755993`*^9, 3.8441047437633047`*^9, 
   3.8441995578649817`*^9, 3.844203219488896*^9},
 CellLabel->"In[37]:=",ExpressionUUID->"fc62bf1a-0403-4ae3-b325-c0663b5d0634"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["\[CapitalGamma]", 
   RowBox[{"  ", "\[Beta]\[Gamma]"}], 
   RowBox[{"\[Alpha]", "    "}]],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.820932775595148*^9, 3.8209334480804567`*^9, {3.8209345574198027`*^9, 
   3.820934588189248*^9}, 3.82093749220476*^9, 3.821110229352072*^9, 
   3.824373536864976*^9, 3.8243816209856853`*^9, 3.824381850238319*^9, 
   3.8243819395421953`*^9, 3.8245118422163897`*^9, 3.8245141678935013`*^9, 
   3.82475117047574*^9, 3.82787863508246*^9, 3.827881401284244*^9, 
   3.8279088611949387`*^9, 3.827912744414246*^9, 3.84410471371915*^9, 
   3.844104743763611*^9, 3.844106126158122*^9, 3.844199311466283*^9, {
   3.844199537034523*^9, 3.844199557865487*^9}, 3.844202973486266*^9, {
   3.8442031978160067`*^9, 3.844203219489349*^9}, 3.8442086062166567`*^9, 
   3.844281398282955*^9, 3.8443474935427227`*^9, 3.84434752712179*^9, 
   3.844370344900836*^9, 3.84452385019718*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"e0a4ef8a-2ffd-4fc3-a14f-a2333841e0b1"],

Cell[BoxData["\<\"ChristoffelSymbolSpherical\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.820932775595148*^9, 3.8209334480804567`*^9, {3.8209345574198027`*^9, 
   3.820934588189248*^9}, 3.82093749220476*^9, 3.821110229352072*^9, 
   3.824373536864976*^9, 3.8243816209856853`*^9, 3.824381850238319*^9, 
   3.8243819395421953`*^9, 3.8245118422163897`*^9, 3.8245141678935013`*^9, 
   3.82475117047574*^9, 3.82787863508246*^9, 3.827881401284244*^9, 
   3.8279088611949387`*^9, 3.827912744414246*^9, 3.84410471371915*^9, 
   3.844104743763611*^9, 3.844106126158122*^9, 3.844199311466283*^9, {
   3.844199537034523*^9, 3.844199557865487*^9}, 3.844202973486266*^9, {
   3.8442031978160067`*^9, 3.844203219489349*^9}, 3.8442086062166567`*^9, 
   3.844281398282955*^9, 3.8443474935427227`*^9, 3.84434752712179*^9, 
   3.844370344900836*^9, 3.84452385019958*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"e60d50cd-f406-4fdf-825c-98577786bf6d"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{
              RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                 RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None]}], ")"}]}], "-", 
                RowBox[{
                 RowBox[{"a", "(", "r", ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"a", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{
                 RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]]},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{
                RowBox[{"a", "(", "r", ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"a", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{
                RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}]}], 
              SuperscriptBox[
               RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{
                RowBox[{"a", "(", "r", ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"a", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{
                RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}]}], 
              SuperscriptBox[
               RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]]}]},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{"a", "(", "r", ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"a", "(", "r", ")"}], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{
                  RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"a", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None]}]}], ")"}]}], 
              SuperscriptBox[
               RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{"r", " ", 
               RowBox[{"\[Beta]", "(", "r", ")"}]}], 
              SuperscriptBox[
               RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{"r", " ", 
               RowBox[{
                SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
               RowBox[{"\[Beta]", "(", "r", ")"}]}], 
              SuperscriptBox[
               RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  SuperscriptBox[
                   RowBox[{"a", "(", "r", ")"}], "2"]], "-", 
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"\[Beta]", "(", "r", ")"}], "2"], 
                  SuperscriptBox[
                   RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                  RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{
                  RowBox[{"a", "(", "r", ")"}], " ", 
                  SuperscriptBox[
                   RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"a", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None]}]}], ")"}]}], ")"}]}]},
           {
            FractionBox[
             RowBox[{
              RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                 RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{
                 RowBox[{"a", "(", "r", ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"a", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{
                 RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{
              RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                 RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{
                 RowBox[{"a", "(", "r", ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"a", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{
                 RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]]},
           {
            RowBox[{
             FractionBox[
              RowBox[{
               RowBox[{"a", "(", "r", ")"}], " ", 
               RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"a", "(", "r", ")"}], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{
                  RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"a", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None]}]}], ")"}]}], 
              SuperscriptBox[
               RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "+", 
             FractionBox[
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"a", "(", "r", ")"}]}], 
               RowBox[{"\[PartialD]", "r"}],
               MultilineFunction->None], 
              RowBox[{"a", "(", "r", ")"}]]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{
             FractionBox[
              RowBox[{"r", " ", 
               SuperscriptBox[
                RowBox[{"\[Beta]", "(", "r", ")"}], "2"]}], 
              SuperscriptBox[
               RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "-", 
             FractionBox["r", 
              SuperscriptBox[
               RowBox[{"a", "(", "r", ")"}], "2"]]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{
             RowBox[{"-", "r"}], " ", 
             RowBox[{
              SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", 
                SuperscriptBox[
                 RowBox[{"a", "(", "r", ")"}], "2"]], "-", 
               FractionBox[
                SuperscriptBox[
                 RowBox[{"\[Beta]", "(", "r", ")"}], "2"], 
                SuperscriptBox[
                 RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]]}], ")"}]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            FractionBox["1", "r"]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {
            FractionBox["1", "r"]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{
             RowBox[{"sin", "(", "\[Theta]", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"-", 
               RowBox[{"cos", "(", "\[Theta]", ")"}]}], ")"}]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            FractionBox["1", "r"]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{"cot", "(", "\[Theta]", ")"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {
            FractionBox["1", "r"]},
           {
            RowBox[{"cot", "(", "\[Theta]", ")"}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.820932775595148*^9, 3.8209334480804567`*^9, {3.8209345574198027`*^9, 
   3.820934588189248*^9}, 3.82093749220476*^9, 3.821110229352072*^9, 
   3.824373536864976*^9, 3.8243816209856853`*^9, 3.824381850238319*^9, 
   3.8243819395421953`*^9, 3.8245118422163897`*^9, 3.8245141678935013`*^9, 
   3.82475117047574*^9, 3.82787863508246*^9, 3.827881401284244*^9, 
   3.8279088611949387`*^9, 3.827912744414246*^9, 3.84410471371915*^9, 
   3.844104743763611*^9, 3.844106126158122*^9, 3.844199311466283*^9, {
   3.844199537034523*^9, 3.844199557865487*^9}, 3.844202973486266*^9, {
   3.8442031978160067`*^9, 3.844203219489349*^9}, 3.8442086062166567`*^9, 
   3.844281398282955*^9, 3.8443474935427227`*^9, 3.84434752712179*^9, 
   3.844370344900836*^9, 3.844523850267191*^9},
 CellLabel->
  "Out[39]//TraditionalForm=",ExpressionUUID->"d4d0f90e-838d-4528-97c6-\
6c92e49cc877"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "3", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.82093461950063*^9, 3.820934623299252*^9}, 
   3.820937492205227*^9, 3.821110229352274*^9, 3.8243735368652897`*^9, 
   3.824381939542493*^9, 3.824751170476118*^9, 3.8441047437649717`*^9, 
   3.844199557866345*^9, 3.84420321949028*^9},
 CellLabel->"In[40]:=",ExpressionUUID->"5f2c6365-4468-44c7-8d30-1c1fbb78e70d"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["R", "\[Alpha]\[Beta]\[Gamma]\[Delta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.820934623837241*^9, 3.820937492205323*^9, 3.821110229352366*^9, 
   3.824373536865405*^9, 3.824381621264045*^9, 3.824381850457645*^9, 
   3.824381939542604*^9, 3.8245118424513693`*^9, 3.8245141681144238`*^9, 
   3.8247511704762497`*^9, 3.82787863531532*^9, 3.8278814015069723`*^9, 
   3.827908861420949*^9, 3.827912744734424*^9, {3.8441047138048697`*^9, 
   3.844104743765318*^9}, 3.844106126197425*^9, 3.8441993115451183`*^9, {
   3.844199537080961*^9, 3.844199557866932*^9}, 3.844202973512084*^9, {
   3.844203197925926*^9, 3.844203219490518*^9}, 3.844208606354093*^9, 
   3.844281398417451*^9, 3.8443474936583138`*^9, 3.844347527221675*^9, 
   3.844370345020145*^9, 3.844523850283957*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"3481747a-a16c-4d27-92bb-111b88c7432d"],

Cell[BoxData["\<\"RiemannTensorSpherical\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.820934623837241*^9, 3.820937492205323*^9, 3.821110229352366*^9, 
   3.824373536865405*^9, 3.824381621264045*^9, 3.824381850457645*^9, 
   3.824381939542604*^9, 3.8245118424513693`*^9, 3.8245141681144238`*^9, 
   3.8247511704762497`*^9, 3.82787863531532*^9, 3.8278814015069723`*^9, 
   3.827908861420949*^9, 3.827912744734424*^9, {3.8441047138048697`*^9, 
   3.844104743765318*^9}, 3.844106126197425*^9, 3.8441993115451183`*^9, {
   3.844199537080961*^9, 3.844199557866932*^9}, 3.844202973512084*^9, {
   3.844203197925926*^9, 3.844203219490518*^9}, 3.844208606354093*^9, 
   3.844281398417451*^9, 3.8443474936583138`*^9, 3.844347527221675*^9, 
   3.844370345020145*^9, 3.84452385028658*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"7ec1965d-4b86-42f0-b972-f104ff0ba35f"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["r", "2"]}],
                MultilineFunction->None], "-", 
               FractionBox[
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"a", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], 
                RowBox[{"a", "(", "r", ")"}]]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"a", "(", "r", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"a", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["r", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{
                RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"a", "(", "r", ")"}], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["r", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"3", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"a", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"a", "(", "r", ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
            FractionBox[
             RowBox[{
              RowBox[{"a", "(", "r", ")"}], " ", 
              RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
               RowBox[{"\[PartialD]", "r"}],
               MultilineFunction->None], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"a", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{
                 RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"a", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             RowBox[{"\[Alpha]", "(", "r", ")"}]]}], "0", "0"},
          {
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["r", "2"]}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"a", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None]}], 
                  RowBox[{"a", "(", "r", ")"}]]}], ")"}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"a", "(", "r", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"a", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["r", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{
                RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"a", "(", "r", ")"}], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["r", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"3", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"a", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"a", "(", "r", ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "-", 
            FractionBox[
             RowBox[{
              RowBox[{"a", "(", "r", ")"}], " ", 
              RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
               RowBox[{"\[PartialD]", "r"}],
               MultilineFunction->None], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"a", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{
                 RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"a", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             RowBox[{"\[Alpha]", "(", "r", ")"}]]}], "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           FractionBox[
            RowBox[{"r", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"\[Beta]", "(", "r", ")"}], "2"]}], "-", 
               SuperscriptBox[
                RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{
                RowBox[{"a", "(", "r", ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"a", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{
                RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "(", "r", ")"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}]], "0"},
          {"0", "0", 
           FractionBox[
            RowBox[{"r", " ", 
             RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{
                RowBox[{"a", "(", "r", ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"a", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{
                RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"r", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"\[Beta]", "(", "r", ")"}], "2"]}], "-", 
                SuperscriptBox[
                 RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                 RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{
                 RowBox[{"a", "(", "r", ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"a", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{
                 RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             RowBox[{
              SuperscriptBox[
               RowBox[{"a", "(", "r", ")"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}]]}], 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"r", " ", 
              RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                 RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{
                 RowBox[{"a", "(", "r", ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"a", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{
                 RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           FractionBox[
            RowBox[{"r", " ", 
             RowBox[{
              SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"\[Beta]", "(", "r", ")"}], "2"]}], "-", 
               SuperscriptBox[
                RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{
                RowBox[{"a", "(", "r", ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"a", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{
                RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "(", "r", ")"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}]]},
          {"0", "0", "0", 
           FractionBox[
            RowBox[{"r", " ", 
             RowBox[{
              SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
             RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{
                RowBox[{"a", "(", "r", ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"a", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{
                RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]]},
          {"0", "0", "0", "0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"r", " ", 
              RowBox[{
               SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"\[Beta]", "(", "r", ")"}], "2"]}], "-", 
                SuperscriptBox[
                 RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                 RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{
                 RowBox[{"a", "(", "r", ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"a", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{
                 RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             RowBox[{
              SuperscriptBox[
               RowBox[{"a", "(", "r", ")"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}]]}], 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"r", " ", 
              RowBox[{
               SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
              RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                 RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{
                 RowBox[{"a", "(", "r", ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"a", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{
                 RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["r", "2"]}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"a", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None]}], 
                  RowBox[{"a", "(", "r", ")"}]]}], ")"}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"a", "(", "r", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"a", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["r", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{
                RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"a", "(", "r", ")"}], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["r", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"3", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"a", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"a", "(", "r", ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "-", 
            FractionBox[
             RowBox[{
              RowBox[{"a", "(", "r", ")"}], " ", 
              RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
               RowBox[{"\[PartialD]", "r"}],
               MultilineFunction->None], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"a", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{
                 RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"a", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             RowBox[{"\[Alpha]", "(", "r", ")"}]]}], "0", "0"},
          {
           RowBox[{
            RowBox[{
             RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["r", "2"]}],
                MultilineFunction->None], "-", 
               FractionBox[
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"a", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], 
                RowBox[{"a", "(", "r", ")"}]]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"a", "(", "r", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"a", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["r", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{
                RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"a", "(", "r", ")"}], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["r", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"3", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"a", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"a", "(", "r", ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
            FractionBox[
             RowBox[{
              RowBox[{"a", "(", "r", ")"}], " ", 
              RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
               RowBox[{"\[PartialD]", "r"}],
               MultilineFunction->None], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"a", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{
                 RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"a", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             RowBox[{"\[Alpha]", "(", "r", ")"}]]}], "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           FractionBox[
            RowBox[{"r", " ", 
             RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{
                RowBox[{"a", "(", "r", ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"a", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{
                RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "0"},
          {"0", "0", 
           RowBox[{
            FractionBox[
             RowBox[{"r", " ", 
              RowBox[{"a", "(", "r", ")"}], " ", 
              RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"a", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{
                 RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"a", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "+", 
            FractionBox[
             RowBox[{"r", " ", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"a", "(", "r", ")"}]}], 
               RowBox[{"\[PartialD]", "r"}],
               MultilineFunction->None]}], 
             RowBox[{"a", "(", "r", ")"}]]}], "0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"r", " ", 
              RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                 RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{
                 RowBox[{"a", "(", "r", ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"a", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{
                 RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]]}], 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"r", " ", 
               RowBox[{"a", "(", "r", ")"}], " ", 
               RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"a", "(", "r", ")"}], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{
                  RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"a", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None]}]}], ")"}]}], 
              SuperscriptBox[
               RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]]}], "-", 
            FractionBox[
             RowBox[{"r", " ", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"a", "(", "r", ")"}]}], 
               RowBox[{"\[PartialD]", "r"}],
               MultilineFunction->None]}], 
             RowBox[{"a", "(", "r", ")"}]]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           FractionBox[
            RowBox[{"r", " ", 
             RowBox[{
              SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
             RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{
                RowBox[{"a", "(", "r", ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"a", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{
                RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]]},
          {"0", "0", "0", 
           FractionBox[
            RowBox[{"r", " ", 
             RowBox[{
              SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                 RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"a", "(", "r", ")"}], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{
                    RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"a", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None]}]}], ")"}]}], 
                SuperscriptBox[
                 RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "+", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"a", "(", "r", ")"}]}], 
                RowBox[{"\[PartialD]", "r"}],
                MultilineFunction->None]}], ")"}]}], 
            RowBox[{"a", "(", "r", ")"}]]},
          {"0", "0", "0", "0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{"r", " ", 
              RowBox[{
               SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
              RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                 RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{
                 RowBox[{"a", "(", "r", ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"a", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{
                 RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]]}], 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"r", " ", 
              RowBox[{
               SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                FractionBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                  RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"a", "(", "r", ")"}], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None]}], "+", 
                    RowBox[{
                    RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"a", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None]}]}], ")"}]}], 
                 SuperscriptBox[
                  RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "+", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"a", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], ")"}]}], 
             RowBox[{"a", "(", "r", ")"}]]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"r", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"\[Beta]", "(", "r", ")"}], "2"]}], "-", 
                SuperscriptBox[
                 RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                 RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{
                 RowBox[{"a", "(", "r", ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"a", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{
                 RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             RowBox[{
              SuperscriptBox[
               RowBox[{"a", "(", "r", ")"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}]]}], "0"},
          {"0", "0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"r", " ", 
              RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                 RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{
                 RowBox[{"a", "(", "r", ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"a", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{
                 RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]]}], "0"},
          {
           FractionBox[
            RowBox[{"r", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"\[Beta]", "(", "r", ")"}], "2"]}], "-", 
               SuperscriptBox[
                RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{
                RowBox[{"a", "(", "r", ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"a", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{
                RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "(", "r", ")"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}]], 
           FractionBox[
            RowBox[{"r", " ", 
             RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{
                RowBox[{"a", "(", "r", ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"a", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{
                RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"r", " ", 
              RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                 RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{
                 RowBox[{"a", "(", "r", ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"a", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{
                 RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]]}], "0"},
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"r", " ", 
               RowBox[{"a", "(", "r", ")"}], " ", 
               RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"a", "(", "r", ")"}], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{
                  RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"a", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None]}]}], ")"}]}], 
              SuperscriptBox[
               RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]]}], "-", 
            FractionBox[
             RowBox[{"r", " ", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"a", "(", "r", ")"}]}], 
               RowBox[{"\[PartialD]", "r"}],
               MultilineFunction->None]}], 
             RowBox[{"a", "(", "r", ")"}]]}], "0"},
          {
           FractionBox[
            RowBox[{"r", " ", 
             RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{
                RowBox[{"a", "(", "r", ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"a", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{
                RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], 
           RowBox[{
            FractionBox[
             RowBox[{"r", " ", 
              RowBox[{"a", "(", "r", ")"}], " ", 
              RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"a", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{
                 RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"a", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "+", 
            FractionBox[
             RowBox[{"r", " ", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"a", "(", "r", ")"}]}], 
               RowBox[{"\[PartialD]", "r"}],
               MultilineFunction->None]}], 
             RowBox[{"a", "(", "r", ")"}]]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{
            SuperscriptBox["r", "2"], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["1", 
                SuperscriptBox[
                 RowBox[{"a", "(", "r", ")"}], "2"]]}], "+", 
              FractionBox[
               SuperscriptBox[
                RowBox[{"\[Beta]", "(", "r", ")"}], "2"], 
               SuperscriptBox[
                RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "+", "1"}], 
             ")"}]}]},
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["r", "2"]}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["1", 
                SuperscriptBox[
                 RowBox[{"a", "(", "r", ")"}], "2"]]}], "+", 
              FractionBox[
               SuperscriptBox[
                RowBox[{"\[Beta]", "(", "r", ")"}], "2"], 
               SuperscriptBox[
                RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "+", "1"}], 
             ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"r", " ", 
              RowBox[{
               SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"\[Beta]", "(", "r", ")"}], "2"]}], "-", 
                SuperscriptBox[
                 RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                 RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{
                 RowBox[{"a", "(", "r", ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"a", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{
                 RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             RowBox[{
              SuperscriptBox[
               RowBox[{"a", "(", "r", ")"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}]]}]},
          {"0", "0", "0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"r", " ", 
              RowBox[{
               SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
              RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                 RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{
                 RowBox[{"a", "(", "r", ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"a", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{
                 RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]]}]},
          {"0", "0", "0", "0"},
          {
           FractionBox[
            RowBox[{"r", " ", 
             RowBox[{
              SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"\[Beta]", "(", "r", ")"}], "2"]}], "-", 
               SuperscriptBox[
                RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{
                RowBox[{"a", "(", "r", ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"a", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{
                RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "(", "r", ")"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}]], 
           FractionBox[
            RowBox[{"r", " ", 
             RowBox[{
              SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
             RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{
                RowBox[{"a", "(", "r", ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"a", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{
                RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"r", " ", 
              RowBox[{
               SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
              RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                 RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{
                 RowBox[{"a", "(", "r", ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"a", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{
                 RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]]}]},
          {"0", "0", "0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"r", " ", 
              RowBox[{
               SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                FractionBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                  RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"a", "(", "r", ")"}], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None]}], "+", 
                    RowBox[{
                    RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"a", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None]}]}], ")"}]}], 
                 SuperscriptBox[
                  RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "+", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"a", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], ")"}]}], 
             RowBox[{"a", "(", "r", ")"}]]}]},
          {"0", "0", "0", "0"},
          {
           FractionBox[
            RowBox[{"r", " ", 
             RowBox[{
              SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
             RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{
                RowBox[{"a", "(", "r", ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"a", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{
                RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], 
           FractionBox[
            RowBox[{"r", " ", 
             RowBox[{
              SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"a", "(", "r", ")"}], "2"], " ", 
                 RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"a", "(", "r", ")"}], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{
                    RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"a", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None]}]}], ")"}]}], 
                SuperscriptBox[
                 RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "+", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"a", "(", "r", ")"}]}], 
                RowBox[{"\[PartialD]", "r"}],
                MultilineFunction->None]}], ")"}]}], 
            RowBox[{"a", "(", "r", ")"}]], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["r", "2"]}], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["1", 
                SuperscriptBox[
                 RowBox[{"a", "(", "r", ")"}], "2"]]}], "+", 
              FractionBox[
               SuperscriptBox[
                RowBox[{"\[Beta]", "(", "r", ")"}], "2"], 
               SuperscriptBox[
                RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "+", "1"}], 
             ")"}]}]},
          {"0", "0", 
           RowBox[{
            SuperscriptBox["r", "2"], " ", 
            RowBox[{
             SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["1", 
                SuperscriptBox[
                 RowBox[{"a", "(", "r", ")"}], "2"]]}], "+", 
              FractionBox[
               SuperscriptBox[
                RowBox[{"\[Beta]", "(", "r", ")"}], "2"], 
               SuperscriptBox[
                RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "+", "1"}], 
             ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.820934623837241*^9, 3.820937492205323*^9, 3.821110229352366*^9, 
   3.824373536865405*^9, 3.824381621264045*^9, 3.824381850457645*^9, 
   3.824381939542604*^9, 3.8245118424513693`*^9, 3.8245141681144238`*^9, 
   3.8247511704762497`*^9, 3.82787863531532*^9, 3.8278814015069723`*^9, 
   3.827908861420949*^9, 3.827912744734424*^9, {3.8441047138048697`*^9, 
   3.844104743765318*^9}, 3.844106126197425*^9, 3.8441993115451183`*^9, {
   3.844199537080961*^9, 3.844199557866932*^9}, 3.844202973512084*^9, {
   3.844203197925926*^9, 3.844203219490518*^9}, 3.844208606354093*^9, 
   3.844281398417451*^9, 3.8443474936583138`*^9, 3.844347527221675*^9, 
   3.844370345020145*^9, 3.844523850750345*^9},
 CellLabel->
  "Out[42]//TraditionalForm=",ExpressionUUID->"ddce4fbf-99df-4b2e-a2d0-\
529a1d5b4957"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "4", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "4", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.820934641180434*^9, 3.820934644683545*^9}, 
   3.820937492205658*^9, 3.821110229352577*^9, 3.8243735368657513`*^9, 
   3.8243819395429*^9, 3.82475117047663*^9, 3.844104743766096*^9, 
   3.844199557867694*^9, 3.844203219491242*^9},
 CellLabel->"In[43]:=",ExpressionUUID->"aae1502b-0a3f-4fec-9e01-291ace7ce3da"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["R", "\[Beta]\[Gamma]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.820934645395719*^9, 3.8209374922057543`*^9, 3.82111022935266*^9, 
   3.8243735368658533`*^9, 3.824381626124463*^9, 3.824381854371036*^9, 
   3.824381939543002*^9, 3.824511846625956*^9, 3.8245141719213133`*^9, 
   3.824751170476756*^9, 3.8278786393795643`*^9, 3.82788140534545*^9, 
   3.8279088652533417`*^9, 3.8279127491644907`*^9, {3.8441047140297937`*^9, 
   3.844104743766334*^9}, 3.844106126428486*^9, 3.8441993116175823`*^9, {
   3.844199537284837*^9, 3.844199557868181*^9}, 3.84420297355055*^9, {
   3.8442031984584627`*^9, 3.84420321949149*^9}, 3.844208606935946*^9, 
   3.8442813988948717`*^9, 3.844347494141341*^9, 3.844347527739188*^9, 
   3.844370345464491*^9, 3.844523850799403*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"c5de0777-9a70-4305-8165-a2c4ad5868d6"],

Cell[BoxData["\<\"RicciTensorSpherical\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.820934645395719*^9, 3.8209374922057543`*^9, 3.82111022935266*^9, 
   3.8243735368658533`*^9, 3.824381626124463*^9, 3.824381854371036*^9, 
   3.824381939543002*^9, 3.824511846625956*^9, 3.8245141719213133`*^9, 
   3.824751170476756*^9, 3.8278786393795643`*^9, 3.82788140534545*^9, 
   3.8279088652533417`*^9, 3.8279127491644907`*^9, {3.8441047140297937`*^9, 
   3.844104743766334*^9}, 3.844106126428486*^9, 3.8441993116175823`*^9, {
   3.844199537284837*^9, 3.844199557868181*^9}, 3.84420297355055*^9, {
   3.8442031984584627`*^9, 3.84420321949149*^9}, 3.844208606935946*^9, 
   3.8442813988948717`*^9, 3.844347494141341*^9, 3.844347527739188*^9, 
   3.844370345464491*^9, 3.8445238508018007`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"a1b10bb7-c056-4f36-9f5b-a23791d6d56f"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "(", "r", ")"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"\[Beta]", "(", "r", ")"}], "2"]}], "-", 
           SuperscriptBox[
            RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "(", "r", ")"}], "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"r", " ", 
                  RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["r", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"r", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None]}]}], ")"}]}], "-", 
              RowBox[{"r", " ", 
               RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                RowBox[{"\[PartialD]", "r"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                RowBox[{"\[PartialD]", "r"}],
                MultilineFunction->None]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "(", "r", ")"}], "2"], " ", 
            RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"r", " ", 
                  RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"a", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["r", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"3", " ", "r", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"a", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"a", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None]}]}], ")"}]}], "-", 
              RowBox[{"r", " ", 
               RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"a", "(", "r", ")"}]}], 
                RowBox[{"\[PartialD]", "r"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                RowBox[{"\[PartialD]", "r"}],
                MultilineFunction->None]}]}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"a", "(", "r", ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "(", "r", ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"r", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["r", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                RowBox[{"\[PartialD]", "r"}],
                MultilineFunction->None]}]}], ")"}]}], "+", 
           RowBox[{"r", " ", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "(", "r", ")"}], "2"], " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"a", "(", "r", ")"}]}], 
             RowBox[{"\[PartialD]", "r"}],
             MultilineFunction->None], " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
             RowBox[{"\[PartialD]", "r"}],
             MultilineFunction->None]}]}], ")"}]}], 
        RowBox[{"r", " ", 
         SuperscriptBox[
          RowBox[{"a", "(", "r", ")"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"\[Alpha]", "(", "r", ")"}], "3"]}]], 
       FractionBox[
        RowBox[{
         RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "(", "r", ")"}], "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"r", " ", 
                  RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["r", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"r", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None]}]}], ")"}]}], "-", 
              RowBox[{"r", " ", 
               RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                RowBox[{"\[PartialD]", "r"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                RowBox[{"\[PartialD]", "r"}],
                MultilineFunction->None]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "(", "r", ")"}], "2"], " ", 
            RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"r", " ", 
                  RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"a", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["r", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"3", " ", "r", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"a", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"a", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None]}]}], ")"}]}], "-", 
              RowBox[{"r", " ", 
               RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"a", "(", "r", ")"}]}], 
                RowBox[{"\[PartialD]", "r"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                RowBox[{"\[PartialD]", "r"}],
                MultilineFunction->None]}]}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"a", "(", "r", ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "(", "r", ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"r", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["r", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                RowBox[{"\[PartialD]", "r"}],
                MultilineFunction->None]}]}], ")"}]}], "+", 
           RowBox[{"r", " ", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "(", "r", ")"}], "2"], " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"a", "(", "r", ")"}]}], 
             RowBox[{"\[PartialD]", "r"}],
             MultilineFunction->None], " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
             RowBox[{"\[PartialD]", "r"}],
             MultilineFunction->None]}]}], ")"}]}], 
        RowBox[{"r", " ", 
         RowBox[{"a", "(", "r", ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Alpha]", "(", "r", ")"}], "3"]}]], "0", "0"},
      {
       FractionBox[
        RowBox[{
         RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "(", "r", ")"}], "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"r", " ", 
                  RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["r", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"r", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None]}]}], ")"}]}], "-", 
              RowBox[{"r", " ", 
               RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                RowBox[{"\[PartialD]", "r"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                RowBox[{"\[PartialD]", "r"}],
                MultilineFunction->None]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "(", "r", ")"}], "2"], " ", 
            RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"r", " ", 
                  RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"a", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["r", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"3", " ", "r", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"a", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"a", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None]}]}], ")"}]}], "-", 
              RowBox[{"r", " ", 
               RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"a", "(", "r", ")"}]}], 
                RowBox[{"\[PartialD]", "r"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                RowBox[{"\[PartialD]", "r"}],
                MultilineFunction->None]}]}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"a", "(", "r", ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "(", "r", ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"r", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["r", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                RowBox[{"\[PartialD]", "r"}],
                MultilineFunction->None]}]}], ")"}]}], "+", 
           RowBox[{"r", " ", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "(", "r", ")"}], "2"], " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"a", "(", "r", ")"}]}], 
             RowBox[{"\[PartialD]", "r"}],
             MultilineFunction->None], " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
             RowBox[{"\[PartialD]", "r"}],
             MultilineFunction->None]}]}], ")"}]}], 
        RowBox[{"r", " ", 
         RowBox[{"a", "(", "r", ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Alpha]", "(", "r", ")"}], "3"]}]], 
       FractionBox[
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"a", "(", "r", ")"}], "2"], " ", 
          RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"r", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"a", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["r", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"a", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"r", " ", 
                RowBox[{"a", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["r", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"a", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"3", " ", "r", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"a", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}]}], ")"}]}], "+", 
            RowBox[{"r", " ", 
             RowBox[{"a", "(", "r", ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                RowBox[{"\[PartialD]", "r"}],
                MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
         RowBox[{"r", " ", 
          SuperscriptBox[
           RowBox[{"\[Alpha]", "(", "r", ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"a", "(", "r", ")"}]}], 
              RowBox[{"\[PartialD]", "r"}],
              MultilineFunction->None], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
              RowBox[{"\[PartialD]", "r"}],
              MultilineFunction->None]}], "-", 
            RowBox[{
             RowBox[{"a", "(", "r", ")"}], " ", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[PartialD]", "2"], 
               RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
              RowBox[{"\[PartialD]", 
               SuperscriptBox["r", "2"]}],
              MultilineFunction->None]}]}], ")"}]}], "-", 
         RowBox[{"r", " ", 
          SuperscriptBox[
           RowBox[{"a", "(", "r", ")"}], "2"], " ", 
          RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
           RowBox[{"\[PartialD]", "r"}],
           MultilineFunction->None], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "(", "r", ")"}], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Beta]", "(", "r", ")"}]}], 
              RowBox[{"\[PartialD]", "r"}],
              MultilineFunction->None]}], "+", 
            RowBox[{
             RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"a", "(", "r", ")"}]}], 
              RowBox[{"\[PartialD]", "r"}],
              MultilineFunction->None]}]}], ")"}]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"\[Alpha]", "(", "r", ")"}], "3"], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"a", "(", "r", ")"}]}], 
           RowBox[{"\[PartialD]", "r"}],
           MultilineFunction->None]}]}], 
        RowBox[{"r", " ", 
         RowBox[{"a", "(", "r", ")"}], " ", 
         SuperscriptBox[
          RowBox[{"\[Alpha]", "(", "r", ")"}], "3"]}]], "0", "0"},
      {"0", "0", 
       RowBox[{
        FractionBox[
         RowBox[{"r", " ", 
          SuperscriptBox[
           RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"a", "(", "r", ")"}]}], 
           RowBox[{"\[PartialD]", "r"}],
           MultilineFunction->None]}], 
         RowBox[{
          RowBox[{"a", "(", "r", ")"}], " ", 
          SuperscriptBox[
           RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}]], "-", 
        FractionBox[
         RowBox[{
          FractionBox[
           RowBox[{"r", " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
             RowBox[{"\[PartialD]", "r"}],
             MultilineFunction->None]}], 
           RowBox[{"\[Alpha]", "(", "r", ")"}]], "+", "1"}], 
         SuperscriptBox[
          RowBox[{"a", "(", "r", ")"}], "2"]], "+", 
        FractionBox[
         RowBox[{"r", " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"a", "(", "r", ")"}]}], 
           RowBox[{"\[PartialD]", "r"}],
           MultilineFunction->None]}], 
         SuperscriptBox[
          RowBox[{"a", "(", "r", ")"}], "3"]], "-", 
        FractionBox[
         RowBox[{"r", " ", 
          SuperscriptBox[
           RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
           RowBox[{"\[PartialD]", "r"}],
           MultilineFunction->None]}], 
         SuperscriptBox[
          RowBox[{"\[Alpha]", "(", "r", ")"}], "3"]], "+", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", "(", "r", ")"}], "+", 
            RowBox[{"2", " ", "r", " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Beta]", "(", "r", ")"}]}], 
              RowBox[{"\[PartialD]", "r"}],
              MultilineFunction->None]}]}], ")"}]}], 
         SuperscriptBox[
          RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "+", "1"}], "0"},
      {"0", "0", "0", 
       FractionBox[
        RowBox[{
         RowBox[{
          SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "(", "r", ")"}], "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
               RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Beta]", "(", "r", ")"}], "+", 
                 RowBox[{"2", " ", "r", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None]}]}], ")"}]}], "-", 
              RowBox[{"r", " ", 
               SuperscriptBox[
                RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                RowBox[{"\[PartialD]", "r"}],
                MultilineFunction->None]}], "+", 
              SuperscriptBox[
               RowBox[{"\[Alpha]", "(", "r", ")"}], "3"]}], ")"}]}], "+", 
           RowBox[{"r", " ", 
            SuperscriptBox[
             RowBox[{"a", "(", "r", ")"}], "2"], " ", 
            RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"a", "(", "r", ")"}]}], 
             RowBox[{"\[PartialD]", "r"}],
             MultilineFunction->None]}], "-", 
           RowBox[{
            RowBox[{"a", "(", "r", ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "(", "r", ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "(", "r", ")"}], "+", 
              RowBox[{"r", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                RowBox[{"\[PartialD]", "r"}],
                MultilineFunction->None]}]}], ")"}]}], "+", 
           RowBox[{"r", " ", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "(", "r", ")"}], "3"], " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"a", "(", "r", ")"}]}], 
             RowBox[{"\[PartialD]", "r"}],
             MultilineFunction->None]}]}], ")"}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"a", "(", "r", ")"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"\[Alpha]", "(", "r", ")"}], "3"]}]]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.820934645395719*^9, 3.8209374922057543`*^9, 3.82111022935266*^9, 
   3.8243735368658533`*^9, 3.824381626124463*^9, 3.824381854371036*^9, 
   3.824381939543002*^9, 3.824511846625956*^9, 3.8245141719213133`*^9, 
   3.824751170476756*^9, 3.8278786393795643`*^9, 3.82788140534545*^9, 
   3.8279088652533417`*^9, 3.8279127491644907`*^9, {3.8441047140297937`*^9, 
   3.844104743766334*^9}, 3.844106126428486*^9, 3.8441993116175823`*^9, {
   3.844199537284837*^9, 3.844199557868181*^9}, 3.84420297355055*^9, {
   3.8442031984584627`*^9, 3.84420321949149*^9}, 3.844208606935946*^9, 
   3.8442813988948717`*^9, 3.844347494141341*^9, 3.844347527739188*^9, 
   3.844370345464491*^9, 3.8445238509975863`*^9},
 CellLabel->
  "Out[45]//TraditionalForm=",ExpressionUUID->"afbe46d6-523d-49ff-a636-\
f9e3f5d122b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "5", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "5", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "5", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.820934650372052*^9, 3.820934653739538*^9}, 
   3.820937492206099*^9, 3.821110229352878*^9, 3.824373536866138*^9, 
   3.82438193954329*^9, 3.8247511704771013`*^9, 3.844104743767248*^9, 
   3.844199557868923*^9, 3.844203219492715*^9},
 CellLabel->"In[46]:=",ExpressionUUID->"cfacda59-7a85-4d73-8fbe-e59a76426ab7"],

Cell[BoxData[
 TagBox["\<\"R\"\>",
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.8209346543102093`*^9, 3.820937492206188*^9, 3.821110229352955*^9, 
   3.82437353686622*^9, 3.8243816263835297`*^9, 3.824381854615872*^9, 
   3.8243819395433826`*^9, 3.824511846864684*^9, 3.824514172146737*^9, 
   3.8247511704772167`*^9, 3.8278786396295547`*^9, 3.827881405580286*^9, 
   3.827908865485321*^9, 3.827912749411972*^9, {3.84410471413475*^9, 
   3.844104743767536*^9}, 3.844106126498987*^9, 3.844199311678203*^9, {
   3.8441995373774757`*^9, 3.844199557869467*^9}, 3.8442029735758753`*^9, {
   3.844203198711419*^9, 3.844203219493039*^9}, 3.844208607171535*^9, 
   3.8442813991203423`*^9, 3.8443474943479443`*^9, 3.84434752795549*^9, 
   3.8443703456742*^9, 3.844523851023456*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"05d31c97-87f4-4c9b-8128-ed3e70c39ddb"],

Cell[BoxData["\<\"RicciScalarSpherical\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.8209346543102093`*^9, 3.820937492206188*^9, 3.821110229352955*^9, 
   3.82437353686622*^9, 3.8243816263835297`*^9, 3.824381854615872*^9, 
   3.8243819395433826`*^9, 3.824511846864684*^9, 3.824514172146737*^9, 
   3.8247511704772167`*^9, 3.8278786396295547`*^9, 3.827881405580286*^9, 
   3.827908865485321*^9, 3.827912749411972*^9, {3.84410471413475*^9, 
   3.844104743767536*^9}, 3.844106126498987*^9, 3.844199311678203*^9, {
   3.8441995373774757`*^9, 3.844199557869467*^9}, 3.8442029735758753`*^9, {
   3.844203198711419*^9, 3.844203219493039*^9}, 3.844208607171535*^9, 
   3.8442813991203423`*^9, 3.8443474943479443`*^9, 3.84434752795549*^9, 
   3.8443703456742*^9, 3.844523851026104*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"899194f4-55a0-48fe-a23b-e837a351bc02"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["r", "2"], " ", 
      SuperscriptBox[
       RowBox[{"a", "(", "r", ")"}], "3"], " ", 
      SuperscriptBox[
       RowBox[{"\[Alpha]", "(", "r", ")"}], "3"]}]], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"a", "(", "r", ")"}], "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"r", " ", 
              RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"r", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["r", "2"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"4", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}]}], ")"}]}], "+", 
             RowBox[{
              SuperscriptBox["r", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None], ")"}], "2"]}], "+", 
             SuperscriptBox[
              RowBox[{"\[Beta]", "(", "r", ")"}], "2"]}], ")"}]}], "-", 
          RowBox[{"r", " ", 
           RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
            RowBox[{"\[PartialD]", "r"}],
            MultilineFunction->None], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"\[Beta]", "(", "r", ")"}]}], "+", 
             RowBox[{"r", " ", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Beta]", "(", "r", ")"}]}], 
               RowBox[{"\[PartialD]", "r"}],
               MultilineFunction->None]}]}], ")"}]}], "+", 
          SuperscriptBox[
           RowBox[{"\[Alpha]", "(", "r", ")"}], "3"]}], ")"}]}], "+", 
       RowBox[{"r", " ", 
        SuperscriptBox[
         RowBox[{"a", "(", "r", ")"}], "2"], " ", 
        RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"r", " ", 
              RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"a", "(", "r", ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["r", "2"]}],
               MultilineFunction->None]}], "+", 
             RowBox[{"3", " ", "r", " ", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"a", "(", "r", ")"}]}], 
               RowBox[{"\[PartialD]", "r"}],
               MultilineFunction->None], " ", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Beta]", "(", "r", ")"}]}], 
               RowBox[{"\[PartialD]", "r"}],
               MultilineFunction->None]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"a", "(", "r", ")"}]}], 
               RowBox[{"\[PartialD]", "r"}],
               MultilineFunction->None]}]}], ")"}]}], "-", 
          RowBox[{"r", " ", 
           RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"a", "(", "r", ")"}]}], 
            RowBox[{"\[PartialD]", "r"}],
            MultilineFunction->None], " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
            RowBox[{"\[PartialD]", "r"}],
            MultilineFunction->None]}]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"a", "(", "r", ")"}], " ", 
        SuperscriptBox[
         RowBox[{"\[Alpha]", "(", "r", ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"r", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"r", " ", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["r", "2"]}],
               MultilineFunction->None]}], "+", 
             RowBox[{"2", " ", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
               RowBox[{"\[PartialD]", "r"}],
               MultilineFunction->None]}]}], ")"}]}], "+", 
          RowBox[{"\[Alpha]", "(", "r", ")"}]}], ")"}]}], "+", 
       RowBox[{"r", " ", 
        SuperscriptBox[
         RowBox[{"\[Alpha]", "(", "r", ")"}], "2"], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"a", "(", "r", ")"}]}], 
         RowBox[{"\[PartialD]", "r"}],
         MultilineFunction->None], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"\[Alpha]", "(", "r", ")"}]}], "+", 
          RowBox[{"r", " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
            RowBox[{"\[PartialD]", "r"}],
            MultilineFunction->None]}]}], ")"}]}]}], ")"}]}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.8209346543102093`*^9, 3.820937492206188*^9, 3.821110229352955*^9, 
   3.82437353686622*^9, 3.8243816263835297`*^9, 3.824381854615872*^9, 
   3.8243819395433826`*^9, 3.824511846864684*^9, 3.824514172146737*^9, 
   3.8247511704772167`*^9, 3.8278786396295547`*^9, 3.827881405580286*^9, 
   3.827908865485321*^9, 3.827912749411972*^9, {3.84410471413475*^9, 
   3.844104743767536*^9}, 3.844106126498987*^9, 3.844199311678203*^9, {
   3.8441995373774757`*^9, 3.844199557869467*^9}, 3.8442029735758753`*^9, {
   3.844203198711419*^9, 3.844203219493039*^9}, 3.844208607171535*^9, 
   3.8442813991203423`*^9, 3.8443474943479443`*^9, 3.84434752795549*^9, 
   3.8443703456742*^9, 3.844523851072556*^9},
 CellLabel->
  "Out[48]//TraditionalForm=",ExpressionUUID->"7a81d2c5-ad43-4a25-9538-\
eafbcecf26a0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "6", "]"}], "]"}], " ", "\[IndentingNewLine]", 
      RowBox[{"TensorName", "[", 
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "6", "]"}], "]"}], "]"}], " ", "\[IndentingNewLine]", 
      RowBox[{"TensorValues", "[", 
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "6", "]"}], "]"}], "]"}]}], " ", "//", " ", 
     "MatrixForm"}], " ", "//", " ", "pdConv"}], "\[IndentingNewLine]", 
   "*)"}], " "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.824382031881773*^9, 3.824382035720847*^9}, 
   3.824382068120364*^9, 3.8247511704775753`*^9, {3.827662880133422*^9, 
   3.827662883948599*^9}, {3.827881581825639*^9, 3.8278815881690893`*^9}, {
   3.844104717832609*^9, 3.8441047437683363`*^9}, 3.844199557870351*^9, 
   3.8442032194939337`*^9, {3.844347543834792*^9, 3.844347550162094*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"ed834894-906c-416c-969c-d2d4760d5f6a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "7", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "7", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "7", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8243818880356607`*^9, 3.824381891296851*^9}, 
   3.82438193954393*^9, {3.824382052340536*^9, 3.824382068120544*^9}, 
   3.8247511704783077`*^9, 3.844104743769196*^9, 3.844199557871676*^9, 
   3.844203219495388*^9},
 CellLabel->"In[50]:=",ExpressionUUID->"56ce111d-99f8-4825-b30f-e0a242fef260"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["G", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.824381892203912*^9, 3.824381939544029*^9, {3.824382052340662*^9, 
   3.8243820681206617`*^9}, 3.82451184696933*^9, 3.824514172248722*^9, 
   3.8247511704784727`*^9, 3.827878639697633*^9, 3.827881405639708*^9, 
   3.8279088655599194`*^9, 3.8279127494903316`*^9, {3.844104714248919*^9, 
   3.844104743769499*^9}, 3.8441061266631107`*^9, 3.8441993119125233`*^9, {
   3.844199537581174*^9, 3.844199557872252*^9}, 3.844202973642783*^9, {
   3.844203198874341*^9, 3.844203219495635*^9}, 3.8442086073116083`*^9, 
   3.844281399264614*^9, 3.844347494480894*^9, 3.844347528085349*^9, 
   3.8443703457738323`*^9, 3.844523851109612*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"d047c6f6-6d0a-4e62-816f-f40b126691f2"],

Cell[BoxData["\<\"EinsteinTensorSpherical\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.824381892203912*^9, 3.824381939544029*^9, {3.824382052340662*^9, 
   3.8243820681206617`*^9}, 3.82451184696933*^9, 3.824514172248722*^9, 
   3.8247511704784727`*^9, 3.827878639697633*^9, 3.827881405639708*^9, 
   3.8279088655599194`*^9, 3.8279127494903316`*^9, {3.844104714248919*^9, 
   3.844104743769499*^9}, 3.8441061266631107`*^9, 3.8441993119125233`*^9, {
   3.844199537581174*^9, 3.844199557872252*^9}, 3.844202973642783*^9, {
   3.844203198874341*^9, 3.844203219495635*^9}, 3.8442086073116083`*^9, 
   3.844281399264614*^9, 3.844347494480894*^9, 3.844347528085349*^9, 
   3.8443703457738323`*^9, 3.84452385111242*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"ed747e19-e011-489f-a058-5ae1a91fb6a9"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"\[Alpha]", "(", "r", ")"}], "2"], "-", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "(", "r", ")"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"\[Beta]", "(", "r", ")"}], "2"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "(", "r", ")"}], "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
               RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Beta]", "(", "r", ")"}], "+", 
                 RowBox[{"2", " ", "r", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None]}]}], ")"}]}], "-", 
              RowBox[{"2", " ", "r", " ", 
               SuperscriptBox[
                RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                RowBox[{"\[PartialD]", "r"}],
                MultilineFunction->None]}], "+", 
              SuperscriptBox[
               RowBox[{"\[Alpha]", "(", "r", ")"}], "3"]}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"a", "(", "r", ")"}], " ", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "(", "r", ")"}], "3"]}], "+", 
           RowBox[{"2", " ", "r", " ", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "(", "r", ")"}], "3"], " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"a", "(", "r", ")"}]}], 
             RowBox[{"\[PartialD]", "r"}],
             MultilineFunction->None]}]}], ")"}]}], 
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         SuperscriptBox[
          RowBox[{"a", "(", "r", ")"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"\[Alpha]", "(", "r", ")"}], "3"]}]], 
       FractionBox[
        RowBox[{
         RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"a", "(", "r", ")"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
                 RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Beta]", "(", "r", ")"}], "+", 
                   RowBox[{"2", " ", "r", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None]}]}], ")"}]}], "-", 
                RowBox[{"2", " ", "r", " ", 
                 SuperscriptBox[
                  RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "+", 
                SuperscriptBox[
                 RowBox[{"\[Alpha]", "(", "r", ")"}], "3"]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"\[Alpha]", "(", "r", ")"}], "3"]]}], "-", 
           FractionBox[
            RowBox[{"2", " ", "r", " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"a", "(", "r", ")"}]}], 
              RowBox[{"\[PartialD]", "r"}],
              MultilineFunction->None]}], 
            RowBox[{"a", "(", "r", ")"}]], "+", "1"}], ")"}]}], 
        SuperscriptBox["r", "2"]], "0", "0"},
      {
       FractionBox[
        RowBox[{
         RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"a", "(", "r", ")"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
                 RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Beta]", "(", "r", ")"}], "+", 
                   RowBox[{"2", " ", "r", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None]}]}], ")"}]}], "-", 
                RowBox[{"2", " ", "r", " ", 
                 SuperscriptBox[
                  RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                  RowBox[{"\[PartialD]", "r"}],
                  MultilineFunction->None]}], "+", 
                SuperscriptBox[
                 RowBox[{"\[Alpha]", "(", "r", ")"}], "3"]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"\[Alpha]", "(", "r", ")"}], "3"]]}], "-", 
           FractionBox[
            RowBox[{"2", " ", "r", " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"a", "(", "r", ")"}]}], 
              RowBox[{"\[PartialD]", "r"}],
              MultilineFunction->None]}], 
            RowBox[{"a", "(", "r", ")"}]], "+", "1"}], ")"}]}], 
        SuperscriptBox["r", "2"]], 
       FractionBox[
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"a", "(", "r", ")"}], "2"], " ", 
           RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
           RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Beta]", "(", "r", ")"}], "+", 
             RowBox[{"2", " ", "r", " ", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Beta]", "(", "r", ")"}]}], 
               RowBox[{"\[PartialD]", "r"}],
               MultilineFunction->None]}]}], ")"}]}]}], "+", 
         RowBox[{"2", " ", "r", " ", 
          SuperscriptBox[
           RowBox[{"a", "(", "r", ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
           RowBox[{"\[PartialD]", "r"}],
           MultilineFunction->None]}], "-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "(", "r", ")"}], "2"], "-", "1"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"\[Alpha]", "(", "r", ")"}], "3"]}], ")"}], "+", 
         RowBox[{"2", " ", "r", " ", 
          SuperscriptBox[
           RowBox[{"\[Alpha]", "(", "r", ")"}], "2"], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
           RowBox[{"\[PartialD]", "r"}],
           MultilineFunction->None]}]}], 
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         SuperscriptBox[
          RowBox[{"\[Alpha]", "(", "r", ")"}], "3"]}]], "0", "0"},
      {"0", "0", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"r", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "(", "r", ")"}], "2"], " ", 
             RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"r", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"a", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["r", "2"]}],
                    MultilineFunction->None]}], "+", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"a", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"r", " ", 
                   RowBox[{"a", "(", "r", ")"}], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["r", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"a", "(", "r", ")"}], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"3", " ", "r", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"a", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
               RowBox[{"r", " ", 
                RowBox[{"a", "(", "r", ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Alpha]", "(", "r", ")"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"a", "(", "r", ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"r", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["r", "2"]}],
                    MultilineFunction->None]}], "+", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None]}], ")"}]}], "-", 
               RowBox[{"r", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"a", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}]}], ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "(", "r", ")"}], "2"], " ", 
             RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
              RowBox[{"\[PartialD]", "r"}],
              MultilineFunction->None], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"r", " ", 
                RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"a", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{
                RowBox[{"a", "(", "r", ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Beta]", "(", "r", ")"}], "+", 
                  RowBox[{"r", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Alpha]", "(", "r", ")"}], "3"], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"a", "(", "r", ")"}]}], 
              RowBox[{"\[PartialD]", "r"}],
              MultilineFunction->None]}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"a", "(", "r", ")"}], "3"], " ", 
          SuperscriptBox[
           RowBox[{"\[Alpha]", "(", "r", ")"}], "3"]}]]}], "0"},
      {"0", "0", "0", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"r", " ", 
          RowBox[{
           SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "(", "r", ")"}], "2"], " ", 
             RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"r", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"a", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["r", "2"]}],
                    MultilineFunction->None]}], "+", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"a", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"r", " ", 
                   RowBox[{"a", "(", "r", ")"}], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["r", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"a", "(", "r", ")"}], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"3", " ", "r", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"a", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
               RowBox[{"r", " ", 
                RowBox[{"a", "(", "r", ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Alpha]", "(", "r", ")"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"a", "(", "r", ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"r", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["r", "2"]}],
                    MultilineFunction->None]}], "+", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                   RowBox[{"\[PartialD]", "r"}],
                   MultilineFunction->None]}], ")"}]}], "-", 
               RowBox[{"r", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"a", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}]}], ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "(", "r", ")"}], "2"], " ", 
             RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
              RowBox[{"\[PartialD]", "r"}],
              MultilineFunction->None], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"r", " ", 
                RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"a", "(", "r", ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{
                RowBox[{"a", "(", "r", ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Beta]", "(", "r", ")"}], "+", 
                  RowBox[{"r", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Beta]", "(", "r", ")"}]}], 
                    RowBox[{"\[PartialD]", "r"}],
                    MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Alpha]", "(", "r", ")"}], "3"], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"a", "(", "r", ")"}]}], 
              RowBox[{"\[PartialD]", "r"}],
              MultilineFunction->None]}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"a", "(", "r", ")"}], "3"], " ", 
          SuperscriptBox[
           RowBox[{"\[Alpha]", "(", "r", ")"}], "3"]}]]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.824381892203912*^9, 3.824381939544029*^9, {3.824382052340662*^9, 
   3.8243820681206617`*^9}, 3.82451184696933*^9, 3.824514172248722*^9, 
   3.8247511704784727`*^9, 3.827878639697633*^9, 3.827881405639708*^9, 
   3.8279088655599194`*^9, 3.8279127494903316`*^9, {3.844104714248919*^9, 
   3.844104743769499*^9}, 3.8441061266631107`*^9, 3.8441993119125233`*^9, {
   3.844199537581174*^9, 3.844199557872252*^9}, 3.844202973642783*^9, {
   3.844203198874341*^9, 3.844203219495635*^9}, 3.8442086073116083`*^9, 
   3.844281399264614*^9, 3.844347494480894*^9, 3.844347528085349*^9, 
   3.8443703457738323`*^9, 3.844523851244117*^9},
 CellLabel->
  "Out[52]//TraditionalForm=",ExpressionUUID->"147b9f6b-21aa-4162-a025-\
caed0f9fb73d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "8", "]"}], "]"}], " ", "\[IndentingNewLine]", 
      RowBox[{"TensorName", "[", 
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "8", "]"}], "]"}], "]"}], " ", "\[IndentingNewLine]", 
      RowBox[{"TensorValues", "[", 
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "8", "]"}], "]"}], "]"}]}], " ", "//", " ", 
     "MatrixForm"}], " ", "//", " ", "pdConv"}], "\[IndentingNewLine]", 
   "*)"}], " "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.82093465870828*^9, 3.820934665723707*^9}, 
   3.820937492206532*^9, 3.821110229353163*^9, 3.824373536866439*^9, 
   3.82438193954467*^9, {3.824382052340996*^9, 3.824382068120945*^9}, 
   3.824751170478986*^9, 3.8441047437707157`*^9, 3.844199557873186*^9, 
   3.844203219496458*^9, {3.844347554554956*^9, 3.8443475590260468`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"a5f8b78b-8468-4133-bedb-5c25de7e567e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "9", "]"}], "]"}], " ", "\[IndentingNewLine]", 
      RowBox[{"TensorName", "[", 
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "9", "]"}], "]"}], "]"}], " ", "\[IndentingNewLine]", 
      RowBox[{"TensorValues", "[", 
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "9", "]"}], "]"}], "]"}]}], " ", "//", " ", 
     "MatrixForm"}], " ", "//", " ", "pdConv"}], "\[IndentingNewLine]", 
   "*)"}], " "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.824382043442072*^9, 3.824382068121275*^9}, 
   3.824751170479444*^9, {3.827662867877706*^9, 3.827662872700079*^9}, {
   3.8441047259324627`*^9, 3.844104743771851*^9}, 3.8441995578745737`*^9, 
   3.844203219498147*^9, {3.844347561883108*^9, 3.844347565897806*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"1ef53022-242b-401d-9103-4f64c5e63ffe"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Three Hours of a Bad Attempt To Put Klein Gordon Equation in First Order Form \
\>", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844210982517098*^9, 3.844211007924952*^9}, {
  3.8443481027695227`*^9, 
  3.844348113049768*^9}},ExpressionUUID->"79b20700-67fb-417a-ae29-\
a327faeee0a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"phi", "=", 
  RowBox[{"ToTensor", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<PhiScalar\>\"", ",", "\"\<\[Phi]\>\""}], "}"}], ",", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"\[Phi]", "[", 
     RowBox[{"t", ",", "r"}], "]"}]}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844203336078168*^9, 3.844203345913225*^9}, 
   3.844210994365356*^9},
 CellLabel->"In[55]:=",ExpressionUUID->"b7b8571a-44f6-4b93-9c4c-068a146263e8"],

Cell[BoxData[
 TagBox["\<\"\[Phi]\"\>",
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8442033363901176`*^9, 3.8442033461532907`*^9}, 
   3.844208607576619*^9, 3.844210994365952*^9, 3.844281399515704*^9, 
   3.844347494713121*^9, 3.8443703459734373`*^9, 3.844523851305943*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"19dd0c6c-b039-4333-bb17-260dff0174f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"waveScalar1", "=", 
   RowBox[{"CovariantD", "[", 
    RowBox[{"phi", ",", 
     RowBox[{"-", "\[Alpha]"}], ",", "\[Alpha]"}], "]"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.844210994366343*^9},
 CellLabel->"In[56]:=",ExpressionUUID->"30debdb5-87bb-4806-947f-c7e9e93a4183"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.02812`", ",", 
   RowBox[{
    TagBox[
     SubsuperscriptBox[
      SuperscriptBox["g", "sph"], "", "\[Alpha]\[Beta]"],
     DisplayForm], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        TagBox[
         SubsuperscriptBox["\[CapitalGamma]", 
          RowBox[{"  ", "\[Alpha]\[Beta]"}], 
          RowBox[{"\[Gamma]", "    "}]],
         DisplayForm]}], " ", 
       TagBox[
        SubsuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[PartialD]", "\[Phi]"}], ")"}], "\[Gamma]", ""],
        DisplayForm]}], "+", 
      TagBox[
       SubsuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[PartialD]", 
          RowBox[{"(", 
           RowBox[{"\[PartialD]", "\[Phi]"}], ")"}]}], ")"}], 
        "\[Beta]\[Alpha]", ""],
       DisplayForm]}], ")"}]}]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8442033670315*^9, 3.844208607632021*^9, 
  3.844210994366794*^9, 3.844281399552083*^9, 3.8443474947416277`*^9, 
  3.844370346004203*^9, 3.844523851341569*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"a30c297f-71ca-4afe-a44e-0b3ed3eeaba4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"MergeTensors", "[", "waveScalar1", "]"}], "]"}], " ", "//", " ", 
   "Expand"}], "  ", "//", " ", "pdConv"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844203368648573*^9, 3.844203387302528*^9}, {
   3.844203427670635*^9, 3.844203429198251*^9}, 3.844210994367178*^9, {
   3.844348122020693*^9, 3.844348123834093*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"7454b8eb-e22d-4bb0-94a9-11a530f819fa"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"t", ",", "r"}], ")"}]}], 
      RowBox[{
       RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
       RowBox[{"\[PartialD]", "r"}]}],
      MultilineFunction->None]}], 
    SuperscriptBox[
     RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "+", 
   FractionBox[
    FractionBox[
     RowBox[{
      SuperscriptBox["\[PartialD]", "2"], 
      RowBox[{"\[Phi]", "(", 
       RowBox[{"t", ",", "r"}], ")"}]}], 
     RowBox[{"\[PartialD]", 
      SuperscriptBox["r", "2"]}],
     MultilineFunction->None], 
    SuperscriptBox[
     RowBox[{"a", "(", "r", ")"}], "2"]], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"a", "(", "r", ")"}]}], 
      RowBox[{"\[PartialD]", "r"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"t", ",", "r"}], ")"}]}], 
      RowBox[{"\[PartialD]", "r"}],
      MultilineFunction->None]}], 
    RowBox[{
     RowBox[{"a", "(", "r", ")"}], " ", 
     SuperscriptBox[
      RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}]], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"a", "(", "r", ")"}]}], 
      RowBox[{"\[PartialD]", "r"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"t", ",", "r"}], ")"}]}], 
      RowBox[{"\[PartialD]", "t"}],
      MultilineFunction->None]}], 
    RowBox[{
     RowBox[{"a", "(", "r", ")"}], " ", 
     SuperscriptBox[
      RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}]], "+", 
   FractionBox[
    RowBox[{
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
      RowBox[{"\[PartialD]", "r"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"t", ",", "r"}], ")"}]}], 
      RowBox[{"\[PartialD]", "r"}],
      MultilineFunction->None]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"a", "(", "r", ")"}], "2"], " ", 
     RowBox[{"\[Alpha]", "(", "r", ")"}]}]], "-", 
   FractionBox[
    RowBox[{
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"a", "(", "r", ")"}]}], 
      RowBox[{"\[PartialD]", "r"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"t", ",", "r"}], ")"}]}], 
      RowBox[{"\[PartialD]", "r"}],
      MultilineFunction->None]}], 
    SuperscriptBox[
     RowBox[{"a", "(", "r", ")"}], "3"]], "+", 
   FractionBox[
    RowBox[{"2", " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"t", ",", "r"}], ")"}]}], 
      RowBox[{"\[PartialD]", "r"}],
      MultilineFunction->None]}], 
    RowBox[{"r", " ", 
     SuperscriptBox[
      RowBox[{"a", "(", "r", ")"}], "2"]}]], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"t", ",", "r"}], ")"}]}], 
      RowBox[{"\[PartialD]", 
       SuperscriptBox["r", "2"]}],
      MultilineFunction->None]}], 
    SuperscriptBox[
     RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "-", 
   FractionBox[
    FractionBox[
     RowBox[{
      SuperscriptBox["\[PartialD]", "2"], 
      RowBox[{"\[Phi]", "(", 
       RowBox[{"t", ",", "r"}], ")"}]}], 
     RowBox[{"\[PartialD]", 
      SuperscriptBox["t", "2"]}],
     MultilineFunction->None], 
    SuperscriptBox[
     RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "-", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"t", ",", "r"}], ")"}]}], 
      RowBox[{"\[PartialD]", "r"}],
      MultilineFunction->None]}], 
    RowBox[{"r", " ", 
     SuperscriptBox[
      RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
      RowBox[{"\[PartialD]", "r"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"t", ",", "r"}], ")"}]}], 
      RowBox[{"\[PartialD]", "r"}],
      MultilineFunction->None]}], 
    SuperscriptBox[
     RowBox[{"\[Alpha]", "(", "r", ")"}], "3"]], "-", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Beta]", "(", "r", ")"}]}], 
      RowBox[{"\[PartialD]", "r"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"t", ",", "r"}], ")"}]}], 
      RowBox[{"\[PartialD]", "r"}],
      MultilineFunction->None]}], 
    SuperscriptBox[
     RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "+", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"t", ",", "r"}], ")"}]}], 
      RowBox[{"\[PartialD]", "t"}],
      MultilineFunction->None]}], 
    RowBox[{"r", " ", 
     SuperscriptBox[
      RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
      RowBox[{"\[PartialD]", "r"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"t", ",", "r"}], ")"}]}], 
      RowBox[{"\[PartialD]", "t"}],
      MultilineFunction->None]}], 
    SuperscriptBox[
     RowBox[{"\[Alpha]", "(", "r", ")"}], "3"]], "+", 
   FractionBox[
    RowBox[{
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Beta]", "(", "r", ")"}]}], 
      RowBox[{"\[PartialD]", "r"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"t", ",", "r"}], ")"}]}], 
      RowBox[{"\[PartialD]", "t"}],
      MultilineFunction->None]}], 
    SuperscriptBox[
     RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]]}], TraditionalForm]], "Output",\

 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844203371387598*^9, 3.8442033881374598`*^9}, 
   3.84420343010104*^9, 3.844208607794053*^9, 3.844210994367598*^9, 
   3.84428139972818*^9, 3.8443474948635397`*^9, 3.8443481243936367`*^9, 
   3.844370346179007*^9, 3.844523851526259*^9},
 CellLabel->
  "Out[57]//TraditionalForm=",ExpressionUUID->"8a97f182-2ff4-449f-aee1-\
2f220c6c5779"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq6", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq6", " ", "=", " ", "\[IndentingNewLine]", " ", 
   RowBox[{
    RowBox[{"D", "[", " ", 
     RowBox[{
      RowBox[{"\[Phi]", "[", 
       RowBox[{"t", ",", "r"}], "]"}], " ", ",", " ", "r"}], " ", "]"}], " ", 
    "==", " ", 
    RowBox[{"\[CapitalPhi]", "[", 
     RowBox[{"t", ",", "r"}], "]"}]}]}], "   ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq6", " ", "//", " ", "pdConv", " "}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844203451264093*^9, 3.8442035045740557`*^9}, 
   3.844210994368009*^9},
 CellLabel->"In[58]:=",ExpressionUUID->"4f654e20-d365-4c84-bc23-41da2e489e9b"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", 
     RowBox[{"\[Phi]", "(", 
      RowBox[{"t", ",", "r"}], ")"}]}], 
    RowBox[{"\[PartialD]", "r"}],
    MultilineFunction->None], "\[LongEqual]", 
   RowBox[{"\[CapitalPhi]", "(", 
    RowBox[{"t", ",", "r"}], ")"}]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8442034718090067`*^9, 3.844203504979224*^9}, 
   3.844203731212964*^9, 3.8442086078094053`*^9, 3.844210994368396*^9, 
   3.844281399755843*^9, 3.8443474948820353`*^9, 3.844370346189*^9, 
   3.8445238515367613`*^9},
 CellLabel->
  "Out[60]//TraditionalForm=",ExpressionUUID->"d7f4e91b-8c24-47cf-aa12-\
fd1662cc2b8d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq7", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq7", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalPi]", "[", 
     RowBox[{"t", ",", "r"}], "]"}], " ", "==", " ", 
    RowBox[{
     RowBox[{"(", 
      FractionBox[
       RowBox[{"a", "[", "r", "]"}], 
       RowBox[{"\[Alpha]", "[", "r", "]"}]], ")"}], " ", 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"t", ",", "r"}], "]"}], ",", "t"}], "]"}], " ", "-", " ", 
       RowBox[{
        RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
        RowBox[{"D", "[", " ", 
         RowBox[{
          RowBox[{"\[Phi]", "[", 
           RowBox[{"t", ",", "r"}], "]"}], ",", "r"}], "]"}]}]}], " ", 
      ")"}]}]}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq7", " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8442035301531963`*^9, 3.844203629918844*^9}, {
   3.844203662015633*^9, 3.8442036693020887`*^9}, 3.844210994368823*^9},
 CellLabel->"In[61]:=",ExpressionUUID->"eb898037-cc6e-4482-9358-f678a62d58d9"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[CapitalPi]", "(", 
    RowBox[{"t", ",", "r"}], ")"}], "\[LongEqual]", 
   FractionBox[
    RowBox[{
     RowBox[{"a", "(", "r", ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{"\[Phi]", "(", 
          RowBox[{"t", ",", "r"}], ")"}]}], 
        RowBox[{"\[PartialD]", "t"}],
        MultilineFunction->None], "-", 
       RowBox[{
        RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Phi]", "(", 
           RowBox[{"t", ",", "r"}], ")"}]}], 
         RowBox[{"\[PartialD]", "r"}],
         MultilineFunction->None]}]}], ")"}]}], 
    RowBox[{"\[Alpha]", "(", "r", ")"}]]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8442036697615433`*^9, 3.844203733437976*^9, 
  3.844208607842725*^9, 3.844210994369192*^9, 3.8442813997864122`*^9, 
  3.8443474949094353`*^9, 3.844370346206304*^9, 3.8445238515641117`*^9},
 CellLabel->
  "Out[63]//TraditionalForm=",ExpressionUUID->"4fea87e4-702e-48c1-b1ad-\
2e7d0aac6204"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "phiFirstD", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phiFirstD", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Solve", "[", " ", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{"eq6", " ", ",", " ", "eq7"}], " ", "}"}], " ", ",", " ", 
         RowBox[{"{", "  ", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"\[Phi]", "[", 
              RowBox[{"t", ",", "r"}], "]"}], ",", "t"}], "]"}], " ", ",", 
           " ", 
           RowBox[{"D", "[", " ", 
            RowBox[{
             RowBox[{"\[Phi]", "[", 
              RowBox[{"t", ",", "r"}], "]"}], ",", "r"}], "]"}]}], " ", 
          "}"}]}], " ", "]"}], "]"}], " ", "//", " ", "Expand"}], " ", "//", 
     " ", "Apart"}], " ", "//", " ", "Expand"}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phiFirstD", " ", "//", " ", "TableForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844203632753109*^9, 3.844203659750663*^9}, {
   3.844203743063284*^9, 3.8442038078146973`*^9}, 3.8442109943696632`*^9},
 CellLabel->"In[64]:=",ExpressionUUID->"17f79682-922d-463a-a9a9-4480e7c087e7"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Phi]", "(", 
           RowBox[{"t", ",", "r"}], ")"}]}], 
         RowBox[{"\[PartialD]", "t"}],
         MultilineFunction->None], "\[Rule]", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
           RowBox[{"\[CapitalPi]", "(", 
            RowBox[{"t", ",", "r"}], ")"}]}], 
          RowBox[{"a", "(", "r", ")"}]], "+", 
         RowBox[{
          RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
          RowBox[{"\[CapitalPhi]", "(", 
           RowBox[{"t", ",", "r"}], ")"}]}]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Phi]", "(", 
           RowBox[{"t", ",", "r"}], ")"}]}], 
         RowBox[{"\[PartialD]", "r"}],
         MultilineFunction->None], "\[Rule]", 
        RowBox[{"\[CapitalPhi]", "(", 
         RowBox[{"t", ",", "r"}], ")"}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.844203680393622*^9, {3.8442037358462477`*^9, 3.844203756341663*^9}, {
   3.844203801490925*^9, 3.844203808226531*^9}, 3.844208607879554*^9, 
   3.844210994370043*^9, 3.8442813998240767`*^9, 3.84434749494226*^9, 
   3.844348303781241*^9, 3.844370346231287*^9, 3.844523851593305*^9},
 CellLabel->
  "Out[66]//TraditionalForm=",ExpressionUUID->"028a23da-b4c9-4423-8f98-\
8bae4532a4f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", " ", 
   RowBox[{
    RowBox[{"phiFirstD", "[", 
     RowBox[{"[", "2", "]"}], "]"}], " ", ",", " ", "t"}], " ", "]"}], "  ", "//",
   " ", "pdConv"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844204174601132*^9, 3.844204187302594*^9}, 
   3.8442109943704348`*^9, {3.844348284602805*^9, 3.844348286042018*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"788a5625-d9d4-4422-8f1d-e76d95ffd97f"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[PartialD]", "2"], 
     RowBox[{"\[Phi]", "(", 
      RowBox[{"t", ",", "r"}], ")"}]}], 
    RowBox[{
     RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
     RowBox[{"\[PartialD]", "r"}]}],
    MultilineFunction->None], "\[Rule]", 
   FractionBox[
    RowBox[{"\[PartialD]", 
     RowBox[{"\[CapitalPhi]", "(", 
      RowBox[{"t", ",", "r"}], ")"}]}], 
    RowBox[{"\[PartialD]", "t"}],
    MultilineFunction->None]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844204179514113*^9, 3.844204187767819*^9}, 
   3.844208607895495*^9, 3.8442109943708477`*^9, 3.8442813998447866`*^9, 
   3.844347494957199*^9, 3.844348307588331*^9, 3.844370346243741*^9, 
   3.844523851604658*^9},
 CellLabel->
  "Out[67]//TraditionalForm=",ExpressionUUID->"ff9d208f-5a7c-4a46-97d9-\
9aa677a3ced8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "phiSecondD", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phiSecondD", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"D", "[", " ", 
      RowBox[{
       RowBox[{"phiFirstD", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "  ", ",", " ", "t"}], " ", "]"}], 
     "  ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"D", "[", " ", 
      RowBox[{
       RowBox[{"phiFirstD", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "  ", ",", " ", "r"}], " ", "]"}], 
     " ", ",", "\[IndentingNewLine]", 
     RowBox[{"D", "[", " ", 
      RowBox[{
       RowBox[{"phiFirstD", "[", 
        RowBox[{"[", "2", "]"}], "]"}], " ", ",", " ", "t"}], " ", "]"}]}], 
    " ", "\[IndentingNewLine]", "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phiSecondD", " ", "//", " ", "TableForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8442038681683817`*^9, 3.844203907558717*^9}, {
   3.8442039761268873`*^9, 3.844204006888929*^9}, {3.844204198080411*^9, 
   3.8442042011105003`*^9}, 3.844210994371139*^9},
 CellLabel->"In[68]:=",ExpressionUUID->"7b3ee92f-beb2-4d33-96de-430d0f5aa519"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Phi]", "(", 
           RowBox[{"t", ",", "r"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["t", "2"]}],
         MultilineFunction->None], "\[Rule]", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[CapitalPi]", "(", 
              RowBox[{"t", ",", "r"}], ")"}]}], 
            RowBox[{"\[PartialD]", "t"}],
            MultilineFunction->None]}], 
          RowBox[{"a", "(", "r", ")"}]], "+", 
         RowBox[{
          RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[CapitalPhi]", "(", 
             RowBox[{"t", ",", "r"}], ")"}]}], 
           RowBox[{"\[PartialD]", "t"}],
           MultilineFunction->None]}]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Phi]", "(", 
           RowBox[{"t", ",", "r"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["r", "2"]}],
         MultilineFunction->None], "\[Rule]", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[CapitalPhi]", "(", 
           RowBox[{"t", ",", "r"}], ")"}]}], 
         RowBox[{"\[PartialD]", "r"}],
         MultilineFunction->None]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Phi]", "(", 
           RowBox[{"t", ",", "r"}], ")"}]}], 
         RowBox[{
          RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
          RowBox[{"\[PartialD]", "r"}]}],
         MultilineFunction->None], "\[Rule]", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[CapitalPhi]", "(", 
           RowBox[{"t", ",", "r"}], ")"}]}], 
         RowBox[{"\[PartialD]", "t"}],
         MultilineFunction->None]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844203865183715*^9, 3.844203908039084*^9}, {
   3.844204000677244*^9, 3.844204007246554*^9}, 3.844204203027145*^9, 
   3.8442086079607964`*^9, 3.8442109943713903`*^9, 3.8442813998756027`*^9, 
   3.844347494984784*^9, 3.844348313233198*^9, 3.844370346265375*^9, 
   3.8445238516352053`*^9},
 CellLabel->
  "Out[70]//TraditionalForm=",ExpressionUUID->"00dc35cf-2627-4d41-92ac-\
dd0f90726501"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "wave2", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wave2", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{"TensorValues", "[", 
             RowBox[{"MergeTensors", "[", "waveScalar1", "]"}], "]"}], " ", "//",
             " ", "Expand"}], " ", ")"}], "   ", "/.", " ", "phiFirstD"}], 
         " ", ")"}], " ", "//", " ", "Expand"}], "  ", ")"}], " ", "/.", " ", 
      "phiSecondD"}], " ", ")"}], " ", "//", " ", "Expand"}]}], "   ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"wave2", " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844204069750808*^9, 3.8442041142029343`*^9}, 
   3.844204209983632*^9, {3.844204293494239*^9, 3.844204302470708*^9}, 
   3.8442109943718576`*^9, {3.844348171018703*^9, 3.844348174290448*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"a5a57cfe-3e16-49d8-a865-d578b8ccbfa8"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
     RowBox[{"\[CapitalPi]", "(", 
      RowBox[{"t", ",", "r"}], ")"}]}], 
    RowBox[{"r", " ", 
     RowBox[{"a", "(", "r", ")"}], " ", 
     RowBox[{"\[Alpha]", "(", "r", ")"}]}]], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"a", "(", "r", ")"}]}], 
      RowBox[{"\[PartialD]", "r"}],
      MultilineFunction->None], " ", 
     RowBox[{"\[CapitalPi]", "(", 
      RowBox[{"t", ",", "r"}], ")"}]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"a", "(", "r", ")"}], "2"], " ", 
     RowBox[{"\[Alpha]", "(", "r", ")"}]}]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
      RowBox[{"\[PartialD]", "r"}],
      MultilineFunction->None], " ", 
     RowBox[{"\[CapitalPi]", "(", 
      RowBox[{"t", ",", "r"}], ")"}]}], 
    RowBox[{
     RowBox[{"a", "(", "r", ")"}], " ", 
     SuperscriptBox[
      RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}]], "+", 
   FractionBox[
    RowBox[{
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Beta]", "(", "r", ")"}]}], 
      RowBox[{"\[PartialD]", "r"}],
      MultilineFunction->None], " ", 
     RowBox[{"\[CapitalPi]", "(", 
      RowBox[{"t", ",", "r"}], ")"}]}], 
    RowBox[{
     RowBox[{"a", "(", "r", ")"}], " ", 
     RowBox[{"\[Alpha]", "(", "r", ")"}]}]], "-", 
   FractionBox[
    FractionBox[
     RowBox[{"\[PartialD]", 
      RowBox[{"\[CapitalPi]", "(", 
       RowBox[{"t", ",", "r"}], ")"}]}], 
     RowBox[{"\[PartialD]", "t"}],
     MultilineFunction->None], 
    RowBox[{
     RowBox[{"a", "(", "r", ")"}], " ", 
     RowBox[{"\[Alpha]", "(", "r", ")"}]}]], "+", 
   FractionBox[
    RowBox[{
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
      RowBox[{"\[PartialD]", "r"}],
      MultilineFunction->None], " ", 
     RowBox[{"\[CapitalPhi]", "(", 
      RowBox[{"t", ",", "r"}], ")"}]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"a", "(", "r", ")"}], "2"], " ", 
     RowBox[{"\[Alpha]", "(", "r", ")"}]}]], "+", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"\[CapitalPhi]", "(", 
      RowBox[{"t", ",", "r"}], ")"}]}], 
    RowBox[{"r", " ", 
     SuperscriptBox[
      RowBox[{"a", "(", "r", ")"}], "2"]}]], "+", 
   FractionBox[
    FractionBox[
     RowBox[{"\[PartialD]", 
      RowBox[{"\[CapitalPhi]", "(", 
       RowBox[{"t", ",", "r"}], ")"}]}], 
     RowBox[{"\[PartialD]", "r"}],
     MultilineFunction->None], 
    SuperscriptBox[
     RowBox[{"a", "(", "r", ")"}], "2"]], "-", 
   FractionBox[
    RowBox[{
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"a", "(", "r", ")"}]}], 
      RowBox[{"\[PartialD]", "r"}],
      MultilineFunction->None], " ", 
     RowBox[{"\[CapitalPhi]", "(", 
      RowBox[{"t", ",", "r"}], ")"}]}], 
    SuperscriptBox[
     RowBox[{"a", "(", "r", ")"}], "3"]], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[CapitalPhi]", "(", 
        RowBox[{"t", ",", "r"}], ")"}]}], 
      RowBox[{"\[PartialD]", "r"}],
      MultilineFunction->None]}], 
    SuperscriptBox[
     RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Beta]", "(", "r", ")"}]}], 
      RowBox[{"\[PartialD]", "r"}],
      MultilineFunction->None], " ", 
     RowBox[{"\[CapitalPhi]", "(", 
      RowBox[{"t", ",", "r"}], ")"}]}], 
    SuperscriptBox[
     RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[CapitalPhi]", "(", 
        RowBox[{"t", ",", "r"}], ")"}]}], 
      RowBox[{"\[PartialD]", "t"}],
      MultilineFunction->None]}], 
    SuperscriptBox[
     RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]]}], TraditionalForm]], "Output",\

 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844204066886609*^9, 3.844204114796282*^9}, 
   3.844204205860854*^9, 3.844204302904154*^9, 3.844208608114835*^9, 
   3.8442109943722763`*^9, 3.8442814000282593`*^9, 3.844347495109702*^9, 
   3.844348174805655*^9, 3.844370346432912*^9, 3.844523851818223*^9},
 CellLabel->
  "Out[73]//TraditionalForm=",ExpressionUUID->"67a52e7a-b351-4930-81be-\
3191e58ba0c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"wave2", " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Coefficient", "[", " ", 
   RowBox[{"wave2", "  ", ",", " ", 
    RowBox[{
     SuperscriptBox["\[CapitalPhi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}]}], " ", "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Coefficient", "[", " ", 
   RowBox[{"wave2", "  ", ",", " ", 
    RowBox[{
     SuperscriptBox["\[CapitalPhi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}]}], " ", "]"}], " "}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844204304192401*^9, 3.8442043303423157`*^9}, {
   3.844204368503565*^9, 3.844204416670574*^9}, 3.844210994372734*^9},
 CellLabel->"In[74]:=",ExpressionUUID->"4adcb6d1-768d-47c1-9b2e-c17a9c742da4"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
    RowBox[{"\[CapitalPi]", "[", 
     RowBox[{"t", ",", "r"}], "]"}]}], 
   RowBox[{"r", " ", 
    RowBox[{"a", "[", "r", "]"}], " ", 
    RowBox[{"\[Alpha]", "[", "r", "]"}]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"\[CapitalPhi]", "[", 
     RowBox[{"t", ",", "r"}], "]"}]}], 
   RowBox[{"r", " ", 
    SuperscriptBox[
     RowBox[{"a", "[", "r", "]"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
    RowBox[{"\[CapitalPi]", "[", 
     RowBox[{"t", ",", "r"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["a", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"a", "[", "r", "]"}], "2"], " ", 
    RowBox[{"\[Alpha]", "[", "r", "]"}]}]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"\[CapitalPhi]", "[", 
     RowBox[{"t", ",", "r"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["a", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}]}], 
   SuperscriptBox[
    RowBox[{"a", "[", "r", "]"}], "3"]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
    RowBox[{"\[CapitalPi]", "[", 
     RowBox[{"t", ",", "r"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Alpha]", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}]}], 
   RowBox[{
    RowBox[{"a", "[", "r", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"\[CapitalPhi]", "[", 
     RowBox[{"t", ",", "r"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Alpha]", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"a", "[", "r", "]"}], "2"], " ", 
    RowBox[{"\[Alpha]", "[", "r", "]"}]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"\[CapitalPi]", "[", 
     RowBox[{"t", ",", "r"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Beta]", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}]}], 
   RowBox[{
    RowBox[{"a", "[", "r", "]"}], " ", 
    RowBox[{"\[Alpha]", "[", "r", "]"}]}]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
    RowBox[{"\[CapitalPhi]", "[", 
     RowBox[{"t", ",", "r"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Beta]", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}]}], 
   SuperscriptBox[
    RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[CapitalPhi]", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "r"}], "]"}], 
   SuperscriptBox[
    RowBox[{"a", "[", "r", "]"}], "2"]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"\[Beta]", "[", "r", "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["\[CapitalPhi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}]}], 
   SuperscriptBox[
    RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[CapitalPi]", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "r"}], "]"}], 
   RowBox[{
    RowBox[{"a", "[", "r", "]"}], " ", 
    RowBox[{"\[Alpha]", "[", "r", "]"}]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[CapitalPhi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}]}], 
   SuperscriptBox[
    RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.844204330643968*^9, {3.8442043723409643`*^9, 3.8442044170120773`*^9}, 
   3.844208608131995*^9, 3.8442109943731813`*^9, 3.844281400056806*^9, 
   3.844347495131538*^9, 3.844370346448062*^9, 3.844523851831164*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"70904e44-2c75-4b5d-b9f7-36bc2b3f93f0"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Beta]", "[", "r", "]"}], 
  SuperscriptBox[
   RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.844204330643968*^9, {3.8442043723409643`*^9, 3.8442044170120773`*^9}, 
   3.844208608131995*^9, 3.8442109943731813`*^9, 3.844281400056806*^9, 
   3.844347495131538*^9, 3.844370346448062*^9, 3.844523851833746*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"9db49673-9b4b-484a-ad0a-3549dffe347d"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SuperscriptBox[
    RowBox[{"a", "[", "r", "]"}], "2"]], "-", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"\[Beta]", "[", "r", "]"}], "2"], 
   SuperscriptBox[
    RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.844204330643968*^9, {3.8442043723409643`*^9, 3.8442044170120773`*^9}, 
   3.844208608131995*^9, 3.8442109943731813`*^9, 3.844281400056806*^9, 
   3.844347495131538*^9, 3.844370346448062*^9, 3.844523851837112*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"4f6b6e6c-41a7-474e-8541-ac827cbf267a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "variableReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"variableReplace", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Alpha]", "->", " ", 
      RowBox[{"\[Alpha]", "[", "r", "]"}]}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Beta]", "->", " ", 
      RowBox[{"\[Beta]", "[", "r", "]"}]}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"a", "->", " ", 
      RowBox[{"a", "[", "r", "]"}]}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalPi]", "->", " ", 
      RowBox[{"\[CapitalPi]", "[", 
       RowBox[{"t", ",", "r"}], "]"}]}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalPhi]", "->", " ", 
      RowBox[{"\[CapitalPhi]", "[", 
       RowBox[{"t", ",", "r"}], "]"}]}]}], "\[IndentingNewLine]", "}"}]}], 
  " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"variableReplace", "  ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844204464249762*^9, 3.844204519741457*^9}, 
   3.844210994374599*^9},
 CellLabel->"In[77]:=",ExpressionUUID->"bdfa1306-7639-4076-a023-5799b5c794d1"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"\[Alpha]", "\[Rule]", 
       RowBox[{"\[Alpha]", "[", "r", "]"}]}]},
     {
      RowBox[{"\[Beta]", "\[Rule]", 
       RowBox[{"\[Beta]", "[", "r", "]"}]}]},
     {
      RowBox[{"a", "\[Rule]", 
       RowBox[{"a", "[", "r", "]"}]}]},
     {
      RowBox[{"\[CapitalPi]", "\[Rule]", 
       RowBox[{"\[CapitalPi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}]},
     {
      RowBox[{"\[CapitalPhi]", "\[Rule]", 
       RowBox[{"\[CapitalPhi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.844204520003981*^9, 3.8442086081773643`*^9, 
  3.844210994374866*^9, 3.844281400100539*^9, 3.844347495169532*^9, 
  3.844370346471133*^9, 3.844523851868703*^9},
 CellLabel->
  "Out[79]//TableForm=",ExpressionUUID->"9139dd75-dedb-4e6d-83a0-\
49a05614e471"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq4", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq4", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"D", "[", " ", 
     RowBox[{
      RowBox[{"\[CapitalPhi]", "[", 
       RowBox[{"t", ",", "r"}], "]"}], ",", "t"}], "]"}], " ", "==", " ", 
    RowBox[{"D", "[", " ", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"\[Beta]", " ", "\[CapitalPhi]"}], " ", "+", " ", 
          FractionBox[
           RowBox[{"\[Alpha]", " ", "\[CapitalPi]"}], "a"]}], " ", ")"}], " ",
         "/.", " ", "variableReplace"}], " ", ")"}], " ", ",", " ", "r"}], 
     " ", "]"}]}]}], "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq4", " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844204526694109*^9, 3.844204588151567*^9}, {
   3.8442046866472588`*^9, 3.844204689422564*^9}, 3.844210994375136*^9},
 CellLabel->"In[80]:=",ExpressionUUID->"bb5d852c-8c21-4054-a780-3b17549aa8e1"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", 
     RowBox[{"\[CapitalPhi]", "(", 
      RowBox[{"t", ",", "r"}], ")"}]}], 
    RowBox[{"\[PartialD]", "t"}],
    MultilineFunction->None], "\[LongEqual]", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{"\[CapitalPi]", "(", 
         RowBox[{"t", ",", "r"}], ")"}]}], 
       RowBox[{"\[PartialD]", "r"}],
       MultilineFunction->None]}], 
     RowBox[{"a", "(", "r", ")"}]], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{"a", "(", "r", ")"}]}], 
       RowBox[{"\[PartialD]", "r"}],
       MultilineFunction->None], " ", 
      RowBox[{"\[CapitalPi]", "(", 
       RowBox[{"t", ",", "r"}], ")"}]}], 
     SuperscriptBox[
      RowBox[{"a", "(", "r", ")"}], "2"]], "+", 
    FractionBox[
     RowBox[{
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
       RowBox[{"\[PartialD]", "r"}],
       MultilineFunction->None], " ", 
      RowBox[{"\[CapitalPi]", "(", 
       RowBox[{"t", ",", "r"}], ")"}]}], 
     RowBox[{"a", "(", "r", ")"}]], "+", 
    RowBox[{
     RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[CapitalPhi]", "(", 
        RowBox[{"t", ",", "r"}], ")"}]}], 
      RowBox[{"\[PartialD]", "r"}],
      MultilineFunction->None]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Beta]", "(", "r", ")"}]}], 
      RowBox[{"\[PartialD]", "r"}],
      MultilineFunction->None], " ", 
     RowBox[{"\[CapitalPhi]", "(", 
      RowBox[{"t", ",", "r"}], ")"}]}]}]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8442045511813173`*^9, 3.844204588419586*^9}, 
   3.844204689800984*^9, 3.844208608214821*^9, 3.844210994375386*^9, 
   3.844281400139306*^9, 3.8443474952033253`*^9, 3.844370346495471*^9, 
   3.844523851901519*^9},
 CellLabel->
  "Out[82]//TraditionalForm=",ExpressionUUID->"9182321d-e735-46b2-8c82-\
d1dccc6fd646"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq5", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq5", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", " ", 
      RowBox[{
       RowBox[{"\[CapitalPi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}], ",", "t"}], "]"}], " ", "==", " ", 
     RowBox[{
      RowBox[{"(", 
       FractionBox["1", 
        SuperscriptBox["r", "2"]], ")"}], " ", 
      RowBox[{"D", "[", " ", 
       RowBox[{
        RowBox[{
         SuperscriptBox["r", "2"], "(", " ", 
         RowBox[{
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{"\[Beta]", " ", "\[CapitalPi]"}], " ", "+", " ", 
            FractionBox[
             RowBox[{"\[Alpha]", " ", "\[CapitalPhi]"}], "a"]}], ")"}], " ", "/.",
           " ", "variableReplace"}], " ", ")"}], "  ", ",", " ", "r"}], " ", 
       "]"}]}]}], "  ", "//", " ", "Expand"}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq5", " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8442045975457687`*^9, 3.844204699359638*^9}, 
   3.8442109943756742`*^9},
 CellLabel->"In[83]:=",ExpressionUUID->"5d83b1b5-0d66-4832-b183-b062186f89c8"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", 
     RowBox[{"\[CapitalPi]", "(", 
      RowBox[{"t", ",", "r"}], ")"}]}], 
    RowBox[{"\[PartialD]", "t"}],
    MultilineFunction->None], "\[LongEqual]", 
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
      RowBox[{"\[CapitalPhi]", "(", 
       RowBox[{"t", ",", "r"}], ")"}]}], 
     RowBox[{"r", " ", 
      RowBox[{"a", "(", "r", ")"}]}]], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{"\[CapitalPhi]", "(", 
         RowBox[{"t", ",", "r"}], ")"}]}], 
       RowBox[{"\[PartialD]", "r"}],
       MultilineFunction->None]}], 
     RowBox[{"a", "(", "r", ")"}]], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{"a", "(", "r", ")"}]}], 
       RowBox[{"\[PartialD]", "r"}],
       MultilineFunction->None], " ", 
      RowBox[{"\[CapitalPhi]", "(", 
       RowBox[{"t", ",", "r"}], ")"}]}], 
     SuperscriptBox[
      RowBox[{"a", "(", "r", ")"}], "2"]], "+", 
    FractionBox[
     RowBox[{
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
       RowBox[{"\[PartialD]", "r"}],
       MultilineFunction->None], " ", 
      RowBox[{"\[CapitalPhi]", "(", 
       RowBox[{"t", ",", "r"}], ")"}]}], 
     RowBox[{"a", "(", "r", ")"}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
      RowBox[{"\[CapitalPi]", "(", 
       RowBox[{"t", ",", "r"}], ")"}]}], "r"], "+", 
    RowBox[{
     RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[CapitalPi]", "(", 
        RowBox[{"t", ",", "r"}], ")"}]}], 
      RowBox[{"\[PartialD]", "r"}],
      MultilineFunction->None]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Beta]", "(", "r", ")"}]}], 
      RowBox[{"\[PartialD]", "r"}],
      MultilineFunction->None], " ", 
     RowBox[{"\[CapitalPi]", "(", 
      RowBox[{"t", ",", "r"}], ")"}]}]}]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844204622327239*^9, 3.8442046967753963`*^9}, 
   3.844208608254773*^9, 3.8442109943759127`*^9, 3.844281400184066*^9, 
   3.844347495240664*^9, 3.844370346524295*^9, 3.84452385193458*^9},
 CellLabel->
  "Out[85]//TraditionalForm=",ExpressionUUID->"8c7c0099-c68f-478b-b97d-\
5da3f2543339"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wave2", " "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844204717786194*^9, 3.844204719942412*^9}, 
   3.844210994376163*^9},
 CellLabel->"In[86]:=",ExpressionUUID->"b51dbac6-e3f3-4543-a47a-0695665b13e4"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
    RowBox[{"\[CapitalPi]", "[", 
     RowBox[{"t", ",", "r"}], "]"}]}], 
   RowBox[{"r", " ", 
    RowBox[{"a", "[", "r", "]"}], " ", 
    RowBox[{"\[Alpha]", "[", "r", "]"}]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"\[CapitalPhi]", "[", 
     RowBox[{"t", ",", "r"}], "]"}]}], 
   RowBox[{"r", " ", 
    SuperscriptBox[
     RowBox[{"a", "[", "r", "]"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
    RowBox[{"\[CapitalPi]", "[", 
     RowBox[{"t", ",", "r"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["a", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"a", "[", "r", "]"}], "2"], " ", 
    RowBox[{"\[Alpha]", "[", "r", "]"}]}]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"\[CapitalPhi]", "[", 
     RowBox[{"t", ",", "r"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["a", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}]}], 
   SuperscriptBox[
    RowBox[{"a", "[", "r", "]"}], "3"]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
    RowBox[{"\[CapitalPi]", "[", 
     RowBox[{"t", ",", "r"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Alpha]", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}]}], 
   RowBox[{
    RowBox[{"a", "[", "r", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"\[CapitalPhi]", "[", 
     RowBox[{"t", ",", "r"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Alpha]", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"a", "[", "r", "]"}], "2"], " ", 
    RowBox[{"\[Alpha]", "[", "r", "]"}]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"\[CapitalPi]", "[", 
     RowBox[{"t", ",", "r"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Beta]", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}]}], 
   RowBox[{
    RowBox[{"a", "[", "r", "]"}], " ", 
    RowBox[{"\[Alpha]", "[", "r", "]"}]}]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
    RowBox[{"\[CapitalPhi]", "[", 
     RowBox[{"t", ",", "r"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Beta]", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}]}], 
   SuperscriptBox[
    RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[CapitalPhi]", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "r"}], "]"}], 
   SuperscriptBox[
    RowBox[{"a", "[", "r", "]"}], "2"]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"\[Beta]", "[", "r", "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["\[CapitalPhi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}]}], 
   SuperscriptBox[
    RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[CapitalPi]", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "r"}], "]"}], 
   RowBox[{
    RowBox[{"a", "[", "r", "]"}], " ", 
    RowBox[{"\[Alpha]", "[", "r", "]"}]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[CapitalPhi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}]}], 
   SuperscriptBox[
    RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.844204720418367*^9, 3.844208608271451*^9, 
  3.8442109943766317`*^9, 3.8442814002106524`*^9, 3.844347495259815*^9, 
  3.844370346536467*^9, 3.844523851946148*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"437060a6-c565-49b0-b49b-bc7e4bfd5bad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "sum", "]"}], "\[IndentingNewLine]", 
 RowBox[{"sum", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"AddSides", "[", "  ", 
   RowBox[{"eq4", ",", "eq5"}], "  ", "]"}], "  "}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844204729752788*^9, 3.8442047528146*^9}, {
   3.844204794302737*^9, 3.84420480890374*^9}, 3.844210994377076*^9},
 CellLabel->"In[87]:=",ExpressionUUID->"f2555f14-48b9-49e4-a357-c92e24221348"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["\[CapitalPi]", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "r"}], "]"}], "+", 
   RowBox[{
    SuperscriptBox["\[CapitalPhi]", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "r"}], "]"}]}], "\[Equal]", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
     RowBox[{"\[CapitalPi]", "[", 
      RowBox[{"t", ",", "r"}], "]"}]}], "r"], "+", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"\[Alpha]", "[", "r", "]"}], " ", 
     RowBox[{"\[CapitalPhi]", "[", 
      RowBox[{"t", ",", "r"}], "]"}]}], 
    RowBox[{"r", " ", 
     RowBox[{"a", "[", "r", "]"}]}]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"\[Alpha]", "[", "r", "]"}], " ", 
     RowBox[{"\[CapitalPi]", "[", 
      RowBox[{"t", ",", "r"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["a", "\[Prime]",
       MultilineFunction->None], "[", "r", "]"}]}], 
    SuperscriptBox[
     RowBox[{"a", "[", "r", "]"}], "2"]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"\[Alpha]", "[", "r", "]"}], " ", 
     RowBox[{"\[CapitalPhi]", "[", 
      RowBox[{"t", ",", "r"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["a", "\[Prime]",
       MultilineFunction->None], "[", "r", "]"}]}], 
    SuperscriptBox[
     RowBox[{"a", "[", "r", "]"}], "2"]], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"\[CapitalPi]", "[", 
      RowBox[{"t", ",", "r"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Alpha]", "\[Prime]",
       MultilineFunction->None], "[", "r", "]"}]}], 
    RowBox[{"a", "[", "r", "]"}]], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"\[CapitalPhi]", "[", 
      RowBox[{"t", ",", "r"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Alpha]", "\[Prime]",
       MultilineFunction->None], "[", "r", "]"}]}], 
    RowBox[{"a", "[", "r", "]"}]], "+", 
   RowBox[{
    RowBox[{"\[CapitalPi]", "[", 
     RowBox[{"t", ",", "r"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Beta]", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}]}], "+", 
   RowBox[{
    RowBox[{"\[CapitalPhi]", "[", 
     RowBox[{"t", ",", "r"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Beta]", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}]}], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"\[Alpha]", "[", "r", "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[CapitalPi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"t", ",", "r"}], "]"}]}], 
    RowBox[{"a", "[", "r", "]"}]], "+", 
   RowBox[{
    RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[CapitalPi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}]}], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"\[Alpha]", "[", "r", "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[CapitalPhi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"t", ",", "r"}], "]"}]}], 
    RowBox[{"a", "[", "r", "]"}]], "+", 
   RowBox[{
    RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[CapitalPhi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}]}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.844204753198503*^9, {3.844204802819118*^9, 3.844204809199335*^9}, 
   3.8442086083166*^9, 3.844210994378878*^9, 3.844281400295661*^9, 
   3.8443474952924757`*^9, 3.844370346556057*^9, 3.844523851975765*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"90d1f2aa-6e22-4b7e-808f-e1da90f2d55b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TensorValues", "[", 
     RowBox[{
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], "]"}], " ", "//", " ", 
    "Expand"}], " ", "//", " ", "Simplify"}], " ", "//", " ", 
  "MatrixForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844208620735897*^9, 3.8442086537081738`*^9}, 
   3.844210994379243*^9},
 CellLabel->"In[89]:=",ExpressionUUID->"49cb5f3b-f654-4c0b-812e-166213c65042"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox["1", 
        SuperscriptBox[
         RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]]}], 
      FractionBox[
       RowBox[{"\[Beta]", "[", "r", "]"}], 
       SuperscriptBox[
        RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "0", "0"},
     {
      FractionBox[
       RowBox[{"\[Beta]", "[", "r", "]"}], 
       SuperscriptBox[
        RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], 
      RowBox[{
       FractionBox["1", 
        SuperscriptBox[
         RowBox[{"a", "[", "r", "]"}], "2"]], "-", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"\[Beta]", "[", "r", "]"}], "2"], 
        SuperscriptBox[
         RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]]}], "0", "0"},
     {"0", "0", 
      FractionBox["1", 
       SuperscriptBox["r", "2"]], "0"},
     {"0", "0", "0", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], 
       SuperscriptBox["r", "2"]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8442086227771177`*^9, 3.8442086539673853`*^9}, 
   3.844210994380823*^9, 3.8442814003193607`*^9, 3.844347495309513*^9, 
   3.844370346573361*^9, 3.844523852009457*^9},
 CellLabel->
  "Out[89]//MatrixForm=",ExpressionUUID->"6095b037-abbf-4f27-968a-\
09787c81de9d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["inverse1"], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8442086735257483`*^9, 3.844208690236339*^9}, 
   3.8442109943813667`*^9},
 CellLabel->"In[90]:=",ExpressionUUID->"8e244e7f-dbd2-44b0-a4da-0af7b6ef7e80"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       SuperscriptBox[
        RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]]}], ",", 
     FractionBox[
      RowBox[{"\[Beta]", "[", "r", "]"}], 
      SuperscriptBox[
       RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"\[Beta]", "[", "r", "]"}], 
      SuperscriptBox[
       RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], ",", 
     RowBox[{
      FractionBox["1", 
       SuperscriptBox[
        RowBox[{"a", "[", "r", "]"}], "2"]], "-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"\[Beta]", "[", "r", "]"}], "2"], 
       SuperscriptBox[
        RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]]}], ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", 
      SuperscriptBox["r", "2"]], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], 
      SuperscriptBox["r", "2"]]}], "}"}]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844208669399683*^9, 3.84420869064806*^9}, 
   3.844210994382546*^9, 3.844281400352433*^9, 3.8443474953370123`*^9, 
   3.844370346583042*^9, 3.844523852020156*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"dfc9656a-3721-4045-9e07-4bd3e23d9f29"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "detg", "]"}], "\[IndentingNewLine]", 
 RowBox[{"detg", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"PowerExpand", "[", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"-", 
     RowBox[{"Det", "[", "metric1", "]"}]}], "]"}], "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.84420870135891*^9, 3.844208729252523*^9}, {
   3.844208767140811*^9, 3.844208781692478*^9}, 3.844210994382854*^9},
 CellLabel->"In[91]:=",ExpressionUUID->"31fd066a-a98b-4408-9559-4f1e21141eba"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["r", "2"], " ", 
  RowBox[{"a", "[", "r", "]"}], " ", 
  RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
  RowBox[{"\[Alpha]", "[", "r", "]"}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8442087025249357`*^9, 3.844208729486702*^9}, 
   3.844208782159079*^9, 3.844210994384077*^9, 3.844281400377236*^9, 
   3.844347495353236*^9, 3.8443703465999527`*^9, 3.844523852050242*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"7a31a65b-c015-47cd-bcea-2c2a31971126"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "vars", "]"}], "\[IndentingNewLine]", 
 RowBox[{"vars", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], 
  " "}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844208868695842*^9, 3.8442088806525717`*^9}, 
   3.844210994384542*^9},
 CellLabel->"In[93]:=",ExpressionUUID->"4cdc6696-0751-4974-a1e8-afc4d55d76b9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.844208878989129*^9, 3.844210994385494*^9, 
  3.8442814004061317`*^9, 3.8443474953786716`*^9, 3.8443703466101933`*^9, 
  3.844523852061425*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"b9293391-01e0-4158-a92f-b761ca5495f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vars", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8442089365592937`*^9, 3.844208938294945*^9}, 
   3.844210994385757*^9},
 CellLabel->"In[95]:=",ExpressionUUID->"e4ebf6bb-0130-4fb2-a63c-0bfc23e0d44c"],

Cell[BoxData["t"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8442089384812613`*^9, 3.8442109943866673`*^9, 
  3.8442814004275093`*^9, 3.844347495394836*^9, 3.844370346626066*^9, 
  3.844523852090755*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"36205cbc-9225-453e-b24f-f25c33f2d986"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "firstOrder", "]"}], "\[IndentingNewLine]", 
 RowBox[{"firstOrder", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Expand", "[", " ", 
    RowBox[{"Table", "[", " ", 
     RowBox[{
      RowBox[{"Sum", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"(", " ", "detg", ")"}], " ", 
         RowBox[{"inverse1", "[", 
          RowBox[{"[", 
           RowBox[{"\[Mu]", ",", "\[Nu]"}], "]"}], "]"}], "  ", 
         RowBox[{"D", "[", " ", 
          RowBox[{
           RowBox[{"\[Phi]", "[", 
            RowBox[{"t", ",", "r"}], "]"}], " ", ",", " ", 
           RowBox[{"vars", "[", 
            RowBox[{"[", "\[Mu]", "]"}], "]"}]}], "]"}]}], "  ", ",", 
        RowBox[{"{", "  ", 
         RowBox[{"\[Mu]", " ", ",", "1", ",", "4"}], "}"}]}], " ", "]"}], 
      "  ", ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Nu]", ",", "1", ",", "4"}], "}"}]}], " ", "]"}], "  ", 
    "]"}], "]"}], " "}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.84420925790195*^9, {3.844209703829665*^9, 3.84420971208493*^9}, 
   3.8442109943871193`*^9},
 CellLabel->"In[96]:=",ExpressionUUID->"1b60b92e-d8cd-46d9-a815-5a7c78ea2fc4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["r", "2"], " ", 
     RowBox[{"a", "[", "r", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "r"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Phi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], ")"}]}], 
    RowBox[{"\[Alpha]", "[", "r", "]"}]], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["r", "2"], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"\[Alpha]", "[", "r", "]"}], "2"], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "r"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"a", "[", "r", "]"}], "2"], " ", 
        RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"\[Beta]", "[", "r", "]"}]}], " ", 
           RowBox[{
            SuperscriptBox["\[Phi]", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"t", ",", "r"}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Phi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], ")"}]}]}], ")"}]}], 
    RowBox[{
     RowBox[{"a", "[", "r", "]"}], " ", 
     RowBox[{"\[Alpha]", "[", "r", "]"}]}]], ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.844209253738809*^9, 3.844209712364922*^9, 
  3.844210994388873*^9, 3.844281400502301*^9, 3.84434749546679*^9, 
  3.844370346687751*^9, 3.84452385215376*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"ef210e09-206c-4de2-b882-20af56f0b890"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "expressionOne", "]"}], "\[IndentingNewLine]", 
 RowBox[{"expressionOne", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"Expand", "[", " ", 
     RowBox[{"Table", "[", " ", 
      RowBox[{
       RowBox[{"Sum", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", " ", "detg", ")"}], " ", 
          RowBox[{"inverse1", "[", 
           RowBox[{"[", 
            RowBox[{"\[Mu]", ",", "\[Nu]"}], "]"}], "]"}], "  ", 
          RowBox[{"D", "[", " ", 
           RowBox[{
            RowBox[{"\[Phi]", "[", 
             RowBox[{"t", ",", "r"}], "]"}], " ", ",", " ", 
            RowBox[{"vars", "[", 
             RowBox[{"[", "\[Mu]", "]"}], "]"}]}], "]"}]}], "  ", ",", 
         RowBox[{"{", "  ", 
          RowBox[{"\[Mu]", " ", ",", "1", ",", "4"}], "}"}]}], " ", "]"}], 
       "  ", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Nu]", ",", "1", ",", "4"}], "}"}]}], " ", "]"}], "  ", 
     "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844208788100222*^9, 3.844208915492612*^9}, {
   3.844208953304435*^9, 3.844208969468914*^9}, {3.844209041509761*^9, 
   3.844209045156642*^9}, {3.844209133950787*^9, 3.8442091607996187`*^9}, {
   3.844209487693269*^9, 3.84420949982133*^9}, 3.844210994389551*^9},
 CellLabel->"In[98]:=",ExpressionUUID->"71ddc5af-ffa0-4125-bd1f-1c45efd44b15"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"a", "[", "r", "]"}], " ", 
   RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
      RowBox[{
       SuperscriptBox["\[Phi]", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"t", ",", "r"}], "]"}]}], "-", 
     RowBox[{
      SuperscriptBox["\[Phi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"t", ",", "r"}], "]"}]}], ")"}]}], 
  RowBox[{"\[Alpha]", "[", "r", "]"}]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.8442089159855967`*^9, {3.844208960472928*^9, 3.844208969820657*^9}, 
   3.844209045635344*^9, {3.844209140961236*^9, 3.8442091610788813`*^9}, 
   3.844209500163505*^9, 3.8442109943912897`*^9, 3.844281400523651*^9, 
   3.844347495532415*^9, 3.8443703466993303`*^9, 3.8445238521644897`*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"bf51103e-359a-4288-9cca-3bd25d2ddfba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["expressionOne"], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.84420951465499*^9, 3.844209517826015*^9}, 
   3.844210994391946*^9},
 CellLabel->
  "In[100]:=",ExpressionUUID->"d16a6100-69c3-44d9-be32-4124cefefd84"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"a", "[", "r", "]"}], " ", 
   RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
      RowBox[{
       SuperscriptBox["\[Phi]", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"t", ",", "r"}], "]"}]}], "-", 
     RowBox[{
      SuperscriptBox["\[Phi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"t", ",", "r"}], "]"}]}], ")"}]}], 
  RowBox[{"\[Alpha]", "[", "r", "]"}]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8442095186909533`*^9, 3.844210994393827*^9, 
  3.844281400555986*^9, 3.8443474955499*^9, 3.8443703467163754`*^9, 
  3.8445238521948957`*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"1cf80f11-faa8-4a43-b454-d75d0ac9b8bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "expressionTwo", "]"}], "\[IndentingNewLine]", 
 RowBox[{"expressionTwo", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"Expand", "[", " ", 
     RowBox[{"Table", "[", " ", 
      RowBox[{
       RowBox[{"Sum", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", " ", "detg", ")"}], " ", 
          RowBox[{"inverse1", "[", 
           RowBox[{"[", 
            RowBox[{"\[Mu]", ",", "\[Nu]"}], "]"}], "]"}], "  ", 
          RowBox[{"D", "[", " ", 
           RowBox[{
            RowBox[{"\[Phi]", "[", 
             RowBox[{"t", ",", "r"}], "]"}], " ", ",", " ", 
            RowBox[{"vars", "[", 
             RowBox[{"[", "\[Mu]", "]"}], "]"}]}], "]"}]}], "  ", ",", 
         RowBox[{"{", "  ", 
          RowBox[{"\[Mu]", " ", ",", "1", ",", "4"}], "}"}]}], " ", "]"}], 
       "  ", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Nu]", ",", "1", ",", "4"}], "}"}]}], " ", "]"}], "  ", 
     "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844209169781033*^9, 3.844209169909531*^9}, {
   3.844209501925747*^9, 3.844209509829669*^9}, 3.844210994394321*^9},
 CellLabel->
  "In[101]:=",ExpressionUUID->"4cc8acb5-51b9-49cf-beed-616db2a4e510"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"\[Alpha]", "[", "r", "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["\[Phi]", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"t", ",", "r"}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"a", "[", "r", "]"}], "2"], " ", 
      RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"\[Beta]", "[", "r", "]"}]}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Phi]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "r"}], "]"}]}], ")"}]}]}], ")"}]}], 
  RowBox[{
   RowBox[{"a", "[", "r", "]"}], " ", 
   RowBox[{"\[Alpha]", "[", "r", "]"}]}]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8442091702937593`*^9, 3.844209510160448*^9, 
  3.8442109943955517`*^9, 3.844281400578022*^9, 3.8443474955786867`*^9, 
  3.8443703467289124`*^9, 3.844523852206448*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"695a7c8c-ce6e-4001-98e7-5e1f956fbe4f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expressionTwo", "[", 
  RowBox[{"[", "5", "]"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8442095551580544`*^9, 3.844209555735386*^9}, 
   3.8442109943958597`*^9},
 CellLabel->
  "In[103]:=",ExpressionUUID->"f6d415fc-8dba-420e-9435-45a244a1eba0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"\[Alpha]", "[", "r", "]"}], "2"], " ", 
   RowBox[{
    SuperscriptBox["\[Phi]", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "r"}], "]"}]}], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"a", "[", "r", "]"}], "2"], " ", 
   RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"\[Beta]", "[", "r", "]"}]}], " ", 
      RowBox[{
       SuperscriptBox["\[Phi]", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"t", ",", "r"}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[Phi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"t", ",", "r"}], "]"}]}], ")"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844209545271319*^9, 3.844209555967866*^9}, 
   3.844210994397352*^9, 3.844281400606539*^9, 3.844347495596786*^9, 
   3.844370346746932*^9, 3.844523852237011*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"588a8df2-02ee-4b33-8447-9305386eeeed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox["1", "detg"], 
    RowBox[{"D", "[", " ", 
     RowBox[{
      RowBox[{"firstOrder", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", "t"}], " ", "]"}]}], 
   "  ", "//", " ", "Expand"}], " ", "//", " ", "Simplify", " "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844209656375551*^9, 3.844209748660778*^9}, 
   3.844210994397954*^9},
 CellLabel->
  "In[104]:=",ExpressionUUID->"e63d10ec-0fb3-4b3c-b201-fb089bf6d26e"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}]}], "-", 
   RowBox[{
    SuperscriptBox["\[Phi]", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "r"}], "]"}]}], 
  SuperscriptBox[
   RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.844209673637205*^9, {3.8442097273983*^9, 3.844209749149323*^9}, 
   3.844210994399521*^9, 3.844281400627149*^9, 3.844347495623122*^9, 
   3.8443703467587337`*^9, 3.844523852247979*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"b14c3c70-43f8-4b51-ad25-3a6f2c0d823e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "detg"], 
  RowBox[{"D", "[", " ", 
   RowBox[{
    RowBox[{"firstOrder", "[", 
     RowBox[{"[", "2", "]"}], "]"}], " ", ",", " ", "r"}], " ", "]"}], 
  "  "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8442097590444393`*^9, 3.844209773406654*^9}, 
   3.844210994399884*^9},
 CellLabel->
  "In[105]:=",ExpressionUUID->"650cb741-5fe6-43bb-8a5f-5e0b33f73ffd"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{
    SuperscriptBox["r", "2"], " ", 
    RowBox[{"a", "[", "r", "]"}], " ", 
    RowBox[{"\[Alpha]", "[", "r", "]"}]}]], 
  RowBox[{
   RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "r", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"\[Alpha]", "[", "r", "]"}], "2"], " ", 
          RowBox[{
           SuperscriptBox["\[Phi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"a", "[", "r", "]"}], "2"], " ", 
          RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"\[Beta]", "[", "r", "]"}]}], " ", 
             RowBox[{
              SuperscriptBox["\[Phi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[Phi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}]}], ")"}]}]}], ")"}]}], 
      RowBox[{
       RowBox[{"a", "[", "r", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "r", "]"}]}]], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{
        SuperscriptBox["a", "\[Prime]",
         MultilineFunction->None], "[", "r", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"\[Alpha]", "[", "r", "]"}], "2"], " ", 
          RowBox[{
           SuperscriptBox["\[Phi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"a", "[", "r", "]"}], "2"], " ", 
          RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"\[Beta]", "[", "r", "]"}]}], " ", 
             RowBox[{
              SuperscriptBox["\[Phi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[Phi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}]}], ")"}]}]}], ")"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"a", "[", "r", "]"}], "2"], " ", 
       RowBox[{"\[Alpha]", "[", "r", "]"}]}]], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Alpha]", "\[Prime]",
         MultilineFunction->None], "[", "r", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"\[Alpha]", "[", "r", "]"}], "2"], " ", 
          RowBox[{
           SuperscriptBox["\[Phi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"a", "[", "r", "]"}], "2"], " ", 
          RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"\[Beta]", "[", "r", "]"}]}], " ", 
             RowBox[{
              SuperscriptBox["\[Phi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[Phi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}]}], ")"}]}]}], ")"}]}], 
      RowBox[{
       RowBox[{"a", "[", "r", "]"}], " ", 
       SuperscriptBox[
        RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]], "+", 
     RowBox[{
      FractionBox["1", 
       RowBox[{
        RowBox[{"a", "[", "r", "]"}], " ", 
        RowBox[{"\[Alpha]", "[", "r", "]"}]}]], 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"\[Alpha]", "[", "r", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Alpha]", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Phi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"\[Alpha]", "[", "r", "]"}], "2"], " ", 
          RowBox[{
           SuperscriptBox["\[Phi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "2"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"a", "[", "r", "]"}], " ", 
          RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
          RowBox[{
           SuperscriptBox["a", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"\[Beta]", "[", "r", "]"}]}], " ", 
             RowBox[{
              SuperscriptBox["\[Phi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[Phi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"a", "[", "r", "]"}], "2"], " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"\[Beta]", "[", "r", "]"}]}], " ", 
             RowBox[{
              SuperscriptBox["\[Phi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[Phi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"a", "[", "r", "]"}], "2"], " ", 
          RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SuperscriptBox["\[Beta]", "\[Prime]",
                MultilineFunction->None], "[", "r", "]"}]}], " ", 
             RowBox[{
              SuperscriptBox["\[Phi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Phi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "2"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[Phi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}]}], ")"}]}]}], ")"}]}]}]}], 
    ")"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8442097636663513`*^9, 3.844209774132867*^9}, 
   3.8442109944009027`*^9, 3.8442814006633873`*^9, 3.844347495657691*^9, 
   3.844370346782989*^9, 3.8445238522844276`*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"f7d87a84-e09f-47e8-981a-a4a592802d5a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"firstOrder", "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844209779806596*^9, 3.8442097837433357`*^9}, 
   3.844210994401186*^9},
 CellLabel->
  "In[106]:=",ExpressionUUID->"3e0fedcf-2304-402f-a1b2-9b98ad5e79c0"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"\[Alpha]", "[", "r", "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["\[Phi]", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"t", ",", "r"}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"a", "[", "r", "]"}], "2"], " ", 
      RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"\[Beta]", "[", "r", "]"}]}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Phi]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "r"}], "]"}]}], ")"}]}]}], ")"}]}], 
  RowBox[{
   RowBox[{"a", "[", "r", "]"}], " ", 
   RowBox[{"\[Alpha]", "[", "r", "]"}]}]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.844209784419763*^9, 3.844210994402134*^9, 
  3.844281400700385*^9, 3.84434749568543*^9, 3.8443703467949142`*^9, 
  3.844523852450076*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"8d0dd178-d66d-458f-a070-7d0c56ecc429"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "rootMinusG", "]"}], "\[IndentingNewLine]", 
 RowBox[{"rootMinusG", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"PowerExpand", "[", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "*", 
     RowBox[{"Det", "[", "metric1", "]"}]}], "]"}], "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8442098557923*^9, 3.8442098991726627`*^9}, 
   3.844210994402413*^9},
 CellLabel->
  "In[107]:=",ExpressionUUID->"be573577-7372-4581-8485-04941c5c2751"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["r", "2"], " ", 
  RowBox[{"a", "[", "r", "]"}], " ", 
  RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
  RowBox[{"\[Alpha]", "[", "r", "]"}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844209858734597*^9, 3.844209899534019*^9}, 
   3.844210994403347*^9, 3.8442814007319927`*^9, 3.844347495712103*^9, 
   3.844370346812132*^9, 3.8445238524622993`*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"f4cfe3c5-09dc-4882-99a1-ea279cf84596"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "firstOrder", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"firstOrder", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", " ", 
      RowBox[{
       RowBox[{"Sum", "[", " ", 
        RowBox[{
         RowBox[{"rootMinusG", " ", 
          RowBox[{"inverse1", "[", 
           RowBox[{"[", 
            RowBox[{"\[Mu]", ",", "\[Nu]"}], "]"}], "]"}], " ", 
          RowBox[{"D", "[", " ", 
           RowBox[{
            RowBox[{"\[Phi]", "[", 
             RowBox[{"t", ",", "r"}], "]"}], " ", ",", " ", 
            RowBox[{"vars", "[", 
             RowBox[{"[", "\[Mu]", "]"}], "]"}]}], " ", "]"}]}], "  ", ",", 
         RowBox[{"{", "  ", 
          RowBox[{"\[Mu]", ",", "1", ",", "4"}], "}"}]}], " ", "]"}], "  ", 
       ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Nu]", ",", "1", ",", "4"}], "}"}]}], " ", "]"}], "  ", "//",
      " ", "Expand"}], " ", "//", " ", "Simplify"}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"firstOrder", " ", "//", " ", "MatrixForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844209901583552*^9, 3.844210015156355*^9}, {
   3.844210090286756*^9, 3.844210091836937*^9}, 3.8442109944036694`*^9},
 CellLabel->
  "In[109]:=",ExpressionUUID->"8867e786-771b-4913-8b46-89ea8705ede1"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        FractionBox[
         RowBox[{
          SuperscriptBox["r", "2"], " ", 
          RowBox[{"a", "(", "r", ")"}], " ", 
          RowBox[{"sin", "(", "\[Theta]", ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Phi]", "(", 
                RowBox[{"t", ",", "r"}], ")"}]}], 
              RowBox[{"\[PartialD]", "r"}],
              MultilineFunction->None]}], "-", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Phi]", "(", 
               RowBox[{"t", ",", "r"}], ")"}]}], 
             RowBox[{"\[PartialD]", "t"}],
             MultilineFunction->None]}], ")"}]}], 
         RowBox[{"\[Alpha]", "(", "r", ")"}]]},
       {
        FractionBox[
         RowBox[{
          SuperscriptBox["r", "2"], " ", 
          RowBox[{"sin", "(", "\[Theta]", ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "(", "r", ")"}], "2"], " ", 
             RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Phi]", "(", 
                  RowBox[{"t", ",", "r"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None], "-", 
               RowBox[{
                RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Phi]", "(", 
                   RowBox[{"t", ",", "r"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "r"}],
                 MultilineFunction->None]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Alpha]", "(", "r", ")"}], "2"], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Phi]", "(", 
                RowBox[{"t", ",", "r"}], ")"}]}], 
              RowBox[{"\[PartialD]", "r"}],
              MultilineFunction->None]}]}], ")"}]}], 
         RowBox[{
          RowBox[{"a", "(", "r", ")"}], " ", 
          RowBox[{"\[Alpha]", "(", "r", ")"}]}]]},
       {"0"},
       {"0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.8442099032247*^9, {3.84420995921447*^9, 3.844210015661726*^9}, 
   3.844210094368017*^9, 3.844210994404694*^9, 3.844281400774061*^9, 
   3.8443474957489567`*^9, 3.844370346843611*^9, 3.84452385255739*^9},
 CellLabel->
  "Out[111]//TraditionalForm=",ExpressionUUID->"2c88202c-3490-42c9-a087-\
929cc9e43650"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   FractionBox["1", "rootMinusG"], ")"}], " ", 
  RowBox[{"firstOrder", "[", 
   RowBox[{"[", "1", "]"}], "]"}], " "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844210023711246*^9, 3.84421005872456*^9}, 
   3.844210994405439*^9},
 CellLabel->
  "In[112]:=",ExpressionUUID->"5ab1bfb1-e857-4601-8ae0-89e851a9ddba"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}]}], "-", 
   RowBox[{
    SuperscriptBox["\[Phi]", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "r"}], "]"}]}], 
  SuperscriptBox[
   RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844210021694284*^9, 3.8442100245390778`*^9}, 
   3.844210059214694*^9, 3.8442101000977*^9, 3.844210994407092*^9, 
   3.844281400798953*^9, 3.844347495766951*^9, 3.844370346854031*^9, 
   3.844523852566978*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"03a3540a-d627-4146-823c-e62b4f8408fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "wave", "]"}], "\[IndentingNewLine]", 
 RowBox[{"wave", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", "rootMinusG"], ")"}], 
    RowBox[{"Sum", "[", " ", 
     RowBox[{
      RowBox[{"D", "[", " ", 
       RowBox[{
        RowBox[{"(", " ", 
         RowBox[{"rootMinusG", " ", 
          RowBox[{"inverse1", "[", 
           RowBox[{"[", 
            RowBox[{"\[Mu]", ",", "\[Nu]"}], "]"}], "]"}], " ", 
          RowBox[{"D", "[", " ", 
           RowBox[{
            RowBox[{"\[Phi]", "[", 
             RowBox[{"t", ",", "r"}], "]"}], " ", ",", " ", 
            RowBox[{"vars", "[", 
             RowBox[{"[", "\[Mu]", "]"}], "]"}]}], " ", "]"}]}], "  ", ")"}], 
        " ", ",", " ", 
        RowBox[{"vars", "[", 
         RowBox[{"[", "\[Nu]", "]"}], "]"}]}], " ", "]"}], "  ", ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Mu]", ",", "1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Nu]", ",", "1", ",", "4"}], "}"}]}], " ", "]"}]}], "  ", "//",
    " ", "Expand", "  "}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844210164422935*^9, 3.844210259596991*^9}, 
   3.8442109944075127`*^9},
 CellLabel->
  "In[113]:=",ExpressionUUID->"2ba5b0c2-701b-47d0-8b25-2bf379e5fb22"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{
     SuperscriptBox["\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}]}], 
   RowBox[{"r", " ", 
    SuperscriptBox[
     RowBox[{"a", "[", "r", "]"}], "2"]}]], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"\[Beta]", "[", "r", "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}]}], 
   RowBox[{"r", " ", 
    SuperscriptBox[
     RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["a", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}]}], 
   SuperscriptBox[
    RowBox[{"a", "[", "r", "]"}], "3"]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"\[Beta]", "[", "r", "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["a", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}]}], 
   RowBox[{
    RowBox[{"a", "[", "r", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Alpha]", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"a", "[", "r", "]"}], "2"], " ", 
    RowBox[{"\[Alpha]", "[", "r", "]"}]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"\[Beta]", "[", "r", "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["\[Alpha]", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}]}], 
   SuperscriptBox[
    RowBox[{"\[Alpha]", "[", "r", "]"}], "3"]], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Beta]", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}]}], 
   SuperscriptBox[
    RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[Phi]", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "2"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "r"}], "]"}], 
   SuperscriptBox[
    RowBox[{"a", "[", "r", "]"}], "2"]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"\[Beta]", "[", "r", "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "2"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}]}], 
   SuperscriptBox[
    RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}]}], 
   RowBox[{"r", " ", 
    SuperscriptBox[
     RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
    RowBox[{
     SuperscriptBox["a", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}]}], 
   RowBox[{
    RowBox[{"a", "[", "r", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Alpha]", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}]}], 
   SuperscriptBox[
    RowBox[{"\[Alpha]", "[", "r", "]"}], "3"]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Beta]", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}]}], 
   SuperscriptBox[
    RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}]}], 
   SuperscriptBox[
    RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[Phi]", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "r"}], "]"}], 
   SuperscriptBox[
    RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.8442101680518017`*^9, {3.8442102318902903`*^9, 3.8442102598978033`*^9}, 
   3.844210994408733*^9, 3.844281400832767*^9, 3.844347495800729*^9, 
   3.844370346876566*^9, 3.844523852602268*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"b6091a3e-88ba-451e-93ac-7e91cf5b790c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["eq4"], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844210267462736*^9, 3.8442102677566023`*^9}, 
   3.8442109944091587`*^9},
 CellLabel->
  "In[115]:=",ExpressionUUID->"19b8a870-afdd-4926-9a42-914847b011f5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[CapitalPhi]", 
    TagBox[
     RowBox[{"(", 
      RowBox[{"1", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"t", ",", "r"}], "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"\[Alpha]", "[", "r", "]"}], " ", 
      RowBox[{"\[CapitalPi]", "[", 
       RowBox[{"t", ",", "r"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["a", "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}]}], 
     SuperscriptBox[
      RowBox[{"a", "[", "r", "]"}], "2"]]}], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"\[CapitalPi]", "[", 
      RowBox[{"t", ",", "r"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Alpha]", "\[Prime]",
       MultilineFunction->None], "[", "r", "]"}]}], 
    RowBox[{"a", "[", "r", "]"}]], "+", 
   RowBox[{
    RowBox[{"\[CapitalPhi]", "[", 
     RowBox[{"t", ",", "r"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Beta]", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}]}], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"\[Alpha]", "[", "r", "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[CapitalPi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"t", ",", "r"}], "]"}]}], 
    RowBox[{"a", "[", "r", "]"}]], "+", 
   RowBox[{
    RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[CapitalPhi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}]}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.844210268170423*^9, 3.844210994410133*^9, 
  3.844281400858255*^9, 3.8443474958200283`*^9, 3.844370346889761*^9, 
  3.844523852612793*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"17706a53-cb4d-4e60-a754-9e48e2e7e10e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["eq5"], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844210271448195*^9, 3.8442102722043467`*^9}, 
   3.844210994410399*^9},
 CellLabel->
  "In[116]:=",ExpressionUUID->"dc0d8a44-8e2b-4c55-b40d-be0c0b45c470"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[CapitalPi]", 
    TagBox[
     RowBox[{"(", 
      RowBox[{"1", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"t", ",", "r"}], "]"}], "\[Equal]", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
     RowBox[{"\[CapitalPi]", "[", 
      RowBox[{"t", ",", "r"}], "]"}]}], "r"], "+", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"\[Alpha]", "[", "r", "]"}], " ", 
     RowBox[{"\[CapitalPhi]", "[", 
      RowBox[{"t", ",", "r"}], "]"}]}], 
    RowBox[{"r", " ", 
     RowBox[{"a", "[", "r", "]"}]}]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"\[Alpha]", "[", "r", "]"}], " ", 
     RowBox[{"\[CapitalPhi]", "[", 
      RowBox[{"t", ",", "r"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["a", "\[Prime]",
       MultilineFunction->None], "[", "r", "]"}]}], 
    SuperscriptBox[
     RowBox[{"a", "[", "r", "]"}], "2"]], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"\[CapitalPhi]", "[", 
      RowBox[{"t", ",", "r"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Alpha]", "\[Prime]",
       MultilineFunction->None], "[", "r", "]"}]}], 
    RowBox[{"a", "[", "r", "]"}]], "+", 
   RowBox[{
    RowBox[{"\[CapitalPi]", "[", 
     RowBox[{"t", ",", "r"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Beta]", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}]}], "+", 
   RowBox[{
    RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[CapitalPi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}]}], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"\[Alpha]", "[", "r", "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[CapitalPhi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"t", ",", "r"}], "]"}]}], 
    RowBox[{"a", "[", "r", "]"}]]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8442102731376657`*^9, 3.844210994411543*^9, 
  3.8442814008899727`*^9, 3.8443474958476458`*^9, 3.84437034690734*^9, 
  3.844523852644886*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"a113f039-c115-476d-957b-32fe7c4552a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["eq6"], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844210279407454*^9, 3.8442102798443117`*^9}, 
   3.8442109944118567`*^9},
 CellLabel->
  "In[117]:=",ExpressionUUID->"b8fe0d39-b385-4637-8288-b5645c5dcfaf"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[Phi]", 
    TagBox[
     RowBox[{"(", 
      RowBox[{"0", ",", "1"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"t", ",", "r"}], "]"}], "\[Equal]", 
  RowBox[{"\[CapitalPhi]", "[", 
   RowBox[{"t", ",", "r"}], "]"}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.844210280252033*^9, 3.844210994413007*^9, 
  3.844281400911252*^9, 3.844347495864854*^9, 3.844370346918208*^9, 
  3.844523852654337*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"ec8d5c8f-9dda-424e-8ffb-9a856a837cd0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["eq7"], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844210282695251*^9, 3.844210283276236*^9}, 
   3.84421099441355*^9},
 CellLabel->
  "In[118]:=",ExpressionUUID->"821e1ae1-f7d7-4125-99ea-90b83575f97d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalPi]", "[", 
   RowBox[{"t", ",", "r"}], "]"}], "\[Equal]", 
  FractionBox[
   RowBox[{
    RowBox[{"a", "[", "r", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"\[Beta]", "[", "r", "]"}]}], " ", 
       RowBox[{
        SuperscriptBox["\[Phi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["\[Phi]", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"t", ",", "r"}], "]"}]}], ")"}]}], 
   RowBox[{"\[Alpha]", "[", "r", "]"}]]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.844210283927558*^9, 3.844210994414638*^9, 
  3.8442814009420147`*^9, 3.844347495893497*^9, 3.844370346937921*^9, 
  3.8445238526876793`*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"1c082e15-32bd-419d-a684-79874c061e31"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "phiFirstD", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phiFirstD", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Solve", "[", " ", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"eq6", ",", "eq7"}], "  ", "}"}], "  ", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[Phi]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "r"}], "]"}], "  ", ",", " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "r"}], "]"}]}], " ", "}"}]}], "]"}], "]"}]}], "  ",
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"phiFirstD", " ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844210373239478*^9, 3.844210470516817*^9}, 
   3.844210994415222*^9},
 CellLabel->
  "In[119]:=",ExpressionUUID->"65bb3f10-5717-4354-b7b3-fa659d76bd73"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Phi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}], "\[Rule]", 
       RowBox[{"\[CapitalPhi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Phi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}], "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"\[Alpha]", "[", "r", "]"}]}], " ", 
           RowBox[{"\[CapitalPi]", "[", 
            RowBox[{"t", ",", "r"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"a", "[", "r", "]"}], " ", 
           RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
           RowBox[{"\[CapitalPhi]", "[", 
            RowBox[{"t", ",", "r"}], "]"}]}]}], 
         RowBox[{"a", "[", "r", "]"}]]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844210374246882*^9, 3.84421037697213*^9}, {
   3.844210409120846*^9, 3.844210428044221*^9}, 3.8442104710109653`*^9, 
   3.844210994416526*^9, 3.8442814009940147`*^9, 3.844347495911821*^9, 
   3.8443703469867077`*^9, 3.844523852699951*^9},
 CellLabel->
  "Out[121]//TableForm=",ExpressionUUID->"affa503f-7357-4af1-9d6b-\
cae552db49f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "phiSecondD", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phiSecondD", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", " ", 
       RowBox[{"phiFirstD", " ", ",", " ", "r"}], " ", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "  ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"D", "[", " ", 
       RowBox[{"phiFirstD", " ", ",", " ", "t"}], " ", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "  ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"D", "[", " ", 
      RowBox[{
       RowBox[{"phiFirstD", "[", 
        RowBox[{"[", "2", "]"}], "]"}], " ", ",", " ", "t"}], " ", "]"}]}], 
    " ", "\[IndentingNewLine]", "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"phiSecondD", "  ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8442105949835567`*^9, 3.84421062546885*^9}, 
   3.844210994416861*^9},
 CellLabel->
  "In[122]:=",ExpressionUUID->"66d33b87-a4ae-4c90-ad7f-19039fef2430"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Phi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}], "\[Rule]", 
       RowBox[{
        SuperscriptBox["\[CapitalPhi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Phi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}], "\[Rule]", 
       RowBox[{
        SuperscriptBox["\[CapitalPhi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Phi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}], "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"\[Alpha]", "[", "r", "]"}]}], " ", 
           RowBox[{
            SuperscriptBox["\[CapitalPi]", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"t", ",", "r"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"a", "[", "r", "]"}], " ", 
           RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[CapitalPhi]", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"t", ",", "r"}], "]"}]}]}], 
         RowBox[{"a", "[", "r", "]"}]]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.844210625707336*^9, 3.8442109944177856`*^9, 
  3.8442814010283327`*^9, 3.844347495940798*^9, 3.8443703470061617`*^9, 
  3.844523852733959*^9},
 CellLabel->
  "Out[124]//TableForm=",ExpressionUUID->"efbeb38c-8321-4aac-a8c1-\
91c1e0fca3b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"phiSecondD", " ", "//", " ", "pdConv"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844210632352992*^9, 3.844210637388493*^9}, 
   3.844210994418049*^9},
 CellLabel->
  "In[125]:=",ExpressionUUID->"7927fb78-04fc-49b1-9029-02abf364bc43"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"t", ",", "r"}], ")"}]}], 
      RowBox[{"\[PartialD]", 
       SuperscriptBox["r", "2"]}],
      MultilineFunction->None], "\[Rule]", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[CapitalPhi]", "(", 
        RowBox[{"t", ",", "r"}], ")"}]}], 
      RowBox[{"\[PartialD]", "r"}],
      MultilineFunction->None]}], ",", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"t", ",", "r"}], ")"}]}], 
      RowBox[{
       RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
       RowBox[{"\[PartialD]", "r"}]}],
      MultilineFunction->None], "\[Rule]", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[CapitalPhi]", "(", 
        RowBox[{"t", ",", "r"}], ")"}]}], 
      RowBox[{"\[PartialD]", "t"}],
      MultilineFunction->None]}], ",", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"t", ",", "r"}], ")"}]}], 
      RowBox[{"\[PartialD]", 
       SuperscriptBox["t", "2"]}],
      MultilineFunction->None], "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[CapitalPi]", "(", 
              RowBox[{"t", ",", "r"}], ")"}]}], 
            RowBox[{"\[PartialD]", "t"}],
            MultilineFunction->None]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"a", "(", "r", ")"}], " ", 
         RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[CapitalPhi]", "(", 
            RowBox[{"t", ",", "r"}], ")"}]}], 
          RowBox[{"\[PartialD]", "t"}],
          MultilineFunction->None]}]}], 
       RowBox[{"a", "(", "r", ")"}]]}]}]}], "}"}], TraditionalForm]], "Output",\

 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844210634402616*^9, 3.844210637835977*^9}, 
   3.844210994419217*^9, 3.844281401052313*^9, 3.8443474959725027`*^9, 
   3.844370347025978*^9, 3.844523852768978*^9},
 CellLabel->
  "Out[125]//TraditionalForm=",ExpressionUUID->"bcab7fd0-22c3-471b-958a-\
f8480059b34d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "reducedWave", "]"}], "\[IndentingNewLine]", 
 RowBox[{"reducedWave", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"wave", " ", "/.", " ", "phiFirstD"}], " ", "/.", " ", 
      "phiSecondD"}], " ", "//", " ", "Expand"}], "  ", ")"}], " ", "==", " ",
    "0", " "}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844210663992591*^9, 3.84421071306052*^9}, {
   3.8442107491737137`*^9, 3.844210753012823*^9}, 3.844210994419568*^9},
 CellLabel->
  "In[126]:=",ExpressionUUID->"ab65195c-67eb-4bc3-8400-dec9c881e3ef"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
     RowBox[{"\[CapitalPi]", "[", 
      RowBox[{"t", ",", "r"}], "]"}]}], 
    RowBox[{"r", " ", 
     RowBox[{"a", "[", "r", "]"}], " ", 
     RowBox[{"\[Alpha]", "[", "r", "]"}]}]], "+", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"\[CapitalPhi]", "[", 
      RowBox[{"t", ",", "r"}], "]"}]}], 
    RowBox[{"r", " ", 
     SuperscriptBox[
      RowBox[{"a", "[", "r", "]"}], "2"]}]], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
     RowBox[{"\[CapitalPi]", "[", 
      RowBox[{"t", ",", "r"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["a", "\[Prime]",
       MultilineFunction->None], "[", "r", "]"}]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"a", "[", "r", "]"}], "2"], " ", 
     RowBox[{"\[Alpha]", "[", "r", "]"}]}]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"\[CapitalPhi]", "[", 
      RowBox[{"t", ",", "r"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["a", "\[Prime]",
       MultilineFunction->None], "[", "r", "]"}]}], 
    SuperscriptBox[
     RowBox[{"a", "[", "r", "]"}], "3"]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
     RowBox[{"\[CapitalPi]", "[", 
      RowBox[{"t", ",", "r"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Alpha]", "\[Prime]",
       MultilineFunction->None], "[", "r", "]"}]}], 
    RowBox[{
     RowBox[{"a", "[", "r", "]"}], " ", 
     SuperscriptBox[
      RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"\[CapitalPhi]", "[", 
      RowBox[{"t", ",", "r"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Alpha]", "\[Prime]",
       MultilineFunction->None], "[", "r", "]"}]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"a", "[", "r", "]"}], "2"], " ", 
     RowBox[{"\[Alpha]", "[", "r", "]"}]}]], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"\[CapitalPi]", "[", 
      RowBox[{"t", ",", "r"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Beta]", "\[Prime]",
       MultilineFunction->None], "[", "r", "]"}]}], 
    RowBox[{
     RowBox[{"a", "[", "r", "]"}], " ", 
     RowBox[{"\[Alpha]", "[", "r", "]"}]}]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
     RowBox[{"\[CapitalPhi]", "[", 
      RowBox[{"t", ",", "r"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Beta]", "\[Prime]",
       MultilineFunction->None], "[", "r", "]"}]}], 
    SuperscriptBox[
     RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[CapitalPhi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}], 
    SuperscriptBox[
     RowBox[{"a", "[", "r", "]"}], "2"]], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"\[Beta]", "[", "r", "]"}], "2"], " ", 
     RowBox[{
      SuperscriptBox["\[CapitalPhi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"t", ",", "r"}], "]"}]}], 
    SuperscriptBox[
     RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[CapitalPi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}], 
    RowBox[{
     RowBox[{"a", "[", "r", "]"}], " ", 
     RowBox[{"\[Alpha]", "[", "r", "]"}]}]], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[CapitalPhi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"t", ",", "r"}], "]"}]}], 
    SuperscriptBox[
     RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]]}], "\[Equal]", 
  "0"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844210664961245*^9, 3.844210713352303*^9}, 
   3.8442107535652514`*^9, 3.844210994420527*^9, 3.8442814010864887`*^9, 
   3.844347495992466*^9, 3.844370347041234*^9, 3.844523852781279*^9},
 CellLabel->
  "Out[127]=",ExpressionUUID->"d26ae7c6-555c-4b2f-affc-bf79a90b061f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "phiReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{"phiReplace", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"Solve", "[", " ", 
      RowBox[{
       RowBox[{"AddSides", "[", " ", 
        RowBox[{"eq4", " ", ",", "eq5"}], "  ", "]"}], " ", ",", " ", 
       RowBox[{
        SuperscriptBox["\[CapitalPhi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], " ", "]"}], " ", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], " ", "//", " ", "Expand", 
   "  "}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844210717023672*^9, 3.844210813109844*^9}, 
   3.844210994421076*^9},
 CellLabel->
  "In[128]:=",ExpressionUUID->"2ac551d1-4133-4ad5-b45a-d9bdf5ac1a88"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[CapitalPhi]", 
    TagBox[
     RowBox[{"(", 
      RowBox[{"1", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"t", ",", "r"}], "]"}], "\[Rule]", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
     RowBox[{"\[CapitalPi]", "[", 
      RowBox[{"t", ",", "r"}], "]"}]}], "r"], "+", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"\[Alpha]", "[", "r", "]"}], " ", 
     RowBox[{"\[CapitalPhi]", "[", 
      RowBox[{"t", ",", "r"}], "]"}]}], 
    RowBox[{"r", " ", 
     RowBox[{"a", "[", "r", "]"}]}]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"\[Alpha]", "[", "r", "]"}], " ", 
     RowBox[{"\[CapitalPi]", "[", 
      RowBox[{"t", ",", "r"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["a", "\[Prime]",
       MultilineFunction->None], "[", "r", "]"}]}], 
    SuperscriptBox[
     RowBox[{"a", "[", "r", "]"}], "2"]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"\[Alpha]", "[", "r", "]"}], " ", 
     RowBox[{"\[CapitalPhi]", "[", 
      RowBox[{"t", ",", "r"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["a", "\[Prime]",
       MultilineFunction->None], "[", "r", "]"}]}], 
    SuperscriptBox[
     RowBox[{"a", "[", "r", "]"}], "2"]], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"\[CapitalPi]", "[", 
      RowBox[{"t", ",", "r"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Alpha]", "\[Prime]",
       MultilineFunction->None], "[", "r", "]"}]}], 
    RowBox[{"a", "[", "r", "]"}]], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"\[CapitalPhi]", "[", 
      RowBox[{"t", ",", "r"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Alpha]", "\[Prime]",
       MultilineFunction->None], "[", "r", "]"}]}], 
    RowBox[{"a", "[", "r", "]"}]], "+", 
   RowBox[{
    RowBox[{"\[CapitalPi]", "[", 
     RowBox[{"t", ",", "r"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Beta]", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}]}], "+", 
   RowBox[{
    RowBox[{"\[CapitalPhi]", "[", 
     RowBox[{"t", ",", "r"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Beta]", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}]}], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"\[Alpha]", "[", "r", "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[CapitalPi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"t", ",", "r"}], "]"}]}], 
    RowBox[{"a", "[", "r", "]"}]], "+", 
   RowBox[{
    RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[CapitalPi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}]}], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"\[Alpha]", "[", "r", "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[CapitalPhi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"t", ",", "r"}], "]"}]}], 
    RowBox[{"a", "[", "r", "]"}]], "+", 
   RowBox[{
    RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[CapitalPhi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}]}], "-", 
   RowBox[{
    SuperscriptBox["\[CapitalPi]", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "r"}], "]"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844210733220924*^9, 3.844210813601832*^9}, 
   3.844210994422241*^9, 3.844281401127616*^9, 3.8443474960292997`*^9, 
   3.844370347061885*^9, 3.844523852818136*^9},
 CellLabel->
  "Out[129]=",ExpressionUUID->"f39fc063-030a-45b8-8d2d-e66e31536b91"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"reducedWave", " ", "/.", " ", "phiReplace"}], " ", "//", " ", 
   "Expand"}], "  ", "//", " ", "Simplify", " "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844210821752633*^9, 3.844210839868567*^9}, 
   3.844210994422556*^9},
 CellLabel->
  "In[130]:=",ExpressionUUID->"c18962de-3a24-4878-948c-792cb16f4742"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", 
    RowBox[{"r", " ", 
     RowBox[{"a", "[", "r", "]"}], " ", 
     RowBox[{"\[Alpha]", "[", "r", "]"}]}]], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Alpha]", "[", "r", "]"}], "+", 
      RowBox[{
       RowBox[{"a", "[", "r", "]"}], " ", 
       RowBox[{"\[Beta]", "[", "r", "]"}]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "r"}], " ", 
       RowBox[{"\[Alpha]", "[", "r", "]"}], " ", 
       RowBox[{"\[CapitalPhi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["a", "\[Prime]",
         MultilineFunction->None], "[", "r", "]"}]}], "+", 
      RowBox[{
       RowBox[{"a", "[", "r", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"r", " ", 
          RowBox[{"\[CapitalPhi]", "[", 
           RowBox[{"t", ",", "r"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Alpha]", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}]}], "+", 
         RowBox[{
          RowBox[{"\[Alpha]", "[", "r", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"\[CapitalPhi]", "[", 
              RowBox[{"t", ",", "r"}], "]"}]}], "+", 
            RowBox[{"r", " ", 
             RowBox[{
              SuperscriptBox["\[CapitalPhi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"a", "[", "r", "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
          RowBox[{"\[CapitalPi]", "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], "+", 
         RowBox[{"r", " ", 
          RowBox[{"\[CapitalPi]", "[", 
           RowBox[{"t", ",", "r"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}]}], "+", 
         RowBox[{"r", " ", 
          RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[CapitalPi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], "-", 
         RowBox[{"r", " ", 
          RowBox[{
           SuperscriptBox["\[CapitalPi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
  "\[Equal]", "0"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.844210827239808*^9, 3.8442108402841454`*^9}, 
   3.8442109944235153`*^9, 3.844281401206764*^9, 3.8443474960980473`*^9, 
   3.8443703471221247`*^9, 3.844523852890242*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"9f2cb761-ffe2-40ee-9278-9d854e052bf7"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Equations 10 thru 22", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.84428287538908*^9, 3.8442828970130377`*^9}, {
  3.8443479418977203`*^9, 
  3.8443479480340633`*^9}},ExpressionUUID->"d90cfb71-5a29-432c-8751-\
b0e4b1c19de6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq2a", "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq2a", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", " ", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Solve", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"eq1", " ", "/.", " ", 
            RowBox[{"d\[Theta]", "->", " ", "0"}]}], " ", "/.", " ", 
           RowBox[{"d\[Phi]", "->", " ", "0"}]}], "  ", ")"}], " ", "==", " ",
          "0"}], "  ", ",", " ", "dr"}], " ", "]"}], " ", "]"}], " ", "//", 
     " ", "Simplify"}], "  ", ")"}], " ", "/.", " ", 
   RowBox[{"Rule", "->", " ", "Equal", " "}]}]}]}], "Input",
 CellChangeTimes->{{3.844347620814329*^9, 3.844347752690528*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"822d9448-9c6d-4985-b014-993ae707b562"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"dr", "\[Equal]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"dt", " ", 
       RowBox[{"(", 
        RowBox[{"\[Alpha]", "+", 
         RowBox[{"a", " ", "\[Beta]"}]}], ")"}]}], "a"]}]}], ",", 
   RowBox[{"dr", "\[Equal]", 
    RowBox[{
     FractionBox[
      RowBox[{"dt", " ", "\[Alpha]"}], "a"], "-", 
     RowBox[{"dt", " ", "\[Beta]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8443476229217854`*^9, 3.844347752905888*^9}, 
   3.844370347151431*^9, 3.844523852924505*^9},
 CellLabel->
  "Out[132]=",ExpressionUUID->"4df51746-dc15-4dbc-866a-9005fa41ba23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq2", "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq2", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Assuming", "[", " ", 
      RowBox[{
       RowBox[{"dt", "!=", " ", "0"}], " ", ",", " ", 
       RowBox[{"DivideSides", "[", 
        RowBox[{
         RowBox[{"eq2a", "[", 
          RowBox[{"[", "i", "]"}], "]"}], " ", ",", " ", "dt"}], " ", "]"}]}],
       " ", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], " ", "]"}], "  ", "//", " ",
    "Expand", " "}]}]}], "Input",
 CellChangeTimes->{{3.8443477406626263`*^9, 3.8443478417248573`*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"20732a45-4fc7-4171-b788-0f43c45508d8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["dr", "dt"], "\[Equal]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["\[Alpha]", "a"]}], "-", "\[Beta]"}]}], ",", 
   RowBox[{
    FractionBox["dr", "dt"], "\[Equal]", 
    RowBox[{
     FractionBox["\[Alpha]", "a"], "-", "\[Beta]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8443477556178007`*^9, {3.844347800048232*^9, 3.844347842100968*^9}, 
   3.844370347163232*^9, 3.844523852934896*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"41e7f7e8-fb87-4b1f-b492-2d73080568bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq10", "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq10", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"2", "M"}], "r"]}], ")"}]}], " ", 
    SuperscriptBox["dt", "2"]}], "+", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{"2", "M"}], "r"]}], ")"}], " "}], 
     RowBox[{"-", "1"}]], " ", 
    SuperscriptBox["dr", "2"]}], "+", " ", 
   RowBox[{
    SuperscriptBox["r", "2"], "(", " ", 
    RowBox[{
     SuperscriptBox["d\[Theta]", "2"], "+", " ", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
      SuperscriptBox["d\[Phi]", "2"]}]}], ")"}], " "}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.84428142335631*^9, 3.844281427883748*^9}, {
   3.844281565964891*^9, 3.844281571379881*^9}, 3.8442828862751417`*^9},
 CellLabel->
  "In[135]:=",ExpressionUUID->"5f30c698-aaf6-43e8-be72-1b465b5cdc4a"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["dr", "2"], 
   RowBox[{"1", "-", 
    FractionBox[
     RowBox[{"2", " ", "M"}], "r"]}]], "+", 
  RowBox[{
   SuperscriptBox["dt", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox[
      RowBox[{"2", " ", "M"}], "r"]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["d\[Theta]", "2"], "+", 
     RowBox[{
      SuperscriptBox["d\[Phi]", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{3.844281431113256*^9, 3.8442815719519033`*^9, 
  3.844282393179121*^9, 3.8442828862755337`*^9, 3.8443474961193237`*^9, 
  3.844370347181616*^9, 3.8445238529691467`*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"557754ee-3a04-46a8-84cc-3aebefa06285"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq11", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq11", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"\[ScriptR]", " ", "==", " ", 
    RowBox[{"r", " ", "+", " ", 
     RowBox[{"2", " ", "M", " ", 
      RowBox[{"Log", "[", 
       RowBox[{
        FractionBox["r", 
         RowBox[{"2", "M"}]], "-", "1"}], " ", "]"}]}]}]}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", " ", 
   RowBox[{"eq11", " ", "/.", " ", 
    RowBox[{"Equal", "->", " ", "Rule"}]}], "  ", ")"}], " "}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.844281436397113*^9, 3.844281456523284*^9}, {
   3.844281819739916*^9, 3.8442818298826027`*^9}, 3.844282886275962*^9},
 CellLabel->
  "In[137]:=",ExpressionUUID->"874e3867-2482-48d4-953b-51b6f57a44a8"],

Cell[BoxData[
 RowBox[{"\[ScriptR]", "\[Rule]", 
  RowBox[{"r", "+", 
   RowBox[{"2", " ", "M", " ", 
    RowBox[{"Log", "[", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      FractionBox["r", 
       RowBox[{"2", " ", "M"}]]}], "]"}]}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.8442814570019913`*^9, 3.844281573693183*^9, {3.8442818248844957`*^9, 
   3.8442818313187513`*^9}, 3.844282886276322*^9, 3.844347496145299*^9, 
   3.844370347192824*^9, 3.8445238529804573`*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"a09fe1cd-a42e-49a9-b40e-e8e0ccf7e254"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq12", "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq12", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"u", " ", "==", " ", 
   RowBox[{"t", " ", "-", " ", "\[ScriptR]", " "}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.844281726926289*^9, 3.844281736371099*^9}, 
   3.844282886276641*^9},
 CellLabel->
  "In[140]:=",ExpressionUUID->"766a5ffb-ece8-47fd-866c-81dffc49abd2"],

Cell[BoxData[
 RowBox[{"u", "\[Equal]", 
  RowBox[{"t", "-", "\[ScriptR]"}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{3.844281739625667*^9, 3.844282886276946*^9, 
  3.8443474961632023`*^9, 3.844370347208714*^9, 3.844523853014619*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"7315f221-4c6b-496c-a043-9425ae5ee22a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq13", "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq13", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"v", " ", "==", " ", 
   RowBox[{"t", " ", "+", " ", "\[ScriptR]", " "}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.844281746339312*^9, 3.8442817516109962`*^9}, 
   3.844282886277307*^9},
 CellLabel->
  "In[142]:=",ExpressionUUID->"e0b76b1b-d1dd-44ea-9281-ad66381295fb"],

Cell[BoxData[
 RowBox[{"v", "\[Equal]", 
  RowBox[{"t", "+", "\[ScriptR]"}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{3.844281751921579*^9, 3.84428288627763*^9, 
  3.8443474961895638`*^9, 3.844370347219345*^9, 3.844523853026668*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"7aab8b08-ba03-4af5-a989-1895b778babd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"eq12", " ", "/.", " ", 
   RowBox[{"(", " ", 
    RowBox[{"eq11", " ", "/.", " ", 
     RowBox[{"Equal", "->", " ", "Rule"}]}], "  ", ")"}]}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dt", "[", " ", 
   RowBox[{"eq12", " ", "/.", " ", 
    RowBox[{"(", " ", 
     RowBox[{"eq11", " ", "/.", " ", 
      RowBox[{"Equal", "->", " ", "Rule"}]}], "  ", ")"}]}], "   ", "]"}], 
  " ", "/.", " ", "dtReplace", " "}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.844281838805217*^9, 3.844281886971059*^9}, 
   3.844282886277878*^9},
 CellLabel->
  "In[144]:=",ExpressionUUID->"a4f13839-cc82-46e2-a17c-b0c837de4b1f"],

Cell[BoxData[
 RowBox[{"u", "\[Equal]", 
  RowBox[{
   RowBox[{"-", "r"}], "+", "t", "-", 
   RowBox[{"2", " ", "M", " ", 
    RowBox[{"Log", "[", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      FractionBox["r", 
       RowBox[{"2", " ", "M"}]]}], "]"}]}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.844281851022246*^9, {3.844281882086404*^9, 3.84428188721839*^9}, 
   3.8442828862783003`*^9, 3.8443474962066383`*^9, 3.844370347236702*^9, 
   3.844523853062585*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"6d86a113-a8fb-454a-b1a7-3a7c10f51b7b"],

Cell[BoxData[
 RowBox[{"du", "\[Equal]", 
  RowBox[{
   RowBox[{"-", "dr"}], "+", "dt", "-", 
   FractionBox["dr", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox["r", 
      RowBox[{"2", " ", "M"}]]}]]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.844281851022246*^9, {3.844281882086404*^9, 3.84428188721839*^9}, 
   3.8442828862783003`*^9, 3.8443474962066383`*^9, 3.844370347236702*^9, 
   3.844523853066125*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"764902ce-69e0-49f0-a640-8c91a003b94d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"eq13", " ", "/.", " ", 
   RowBox[{"(", " ", 
    RowBox[{"eq11", " ", "/.", " ", 
     RowBox[{"Equal", "->", " ", "Rule"}]}], "  ", ")"}]}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dt", "[", " ", 
   RowBox[{"eq13", " ", "/.", " ", 
    RowBox[{"(", " ", 
     RowBox[{"eq11", " ", "/.", " ", 
      RowBox[{"Equal", "->", " ", "Rule"}]}], "  ", ")"}]}], "   ", "]"}], 
  " ", "/.", " ", "dtReplace", " "}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8442818645468903`*^9, 3.844281864635016*^9}, {
   3.844281895085792*^9, 3.8442818974911003`*^9}, 3.844282886278973*^9},
 CellLabel->
  "In[146]:=",ExpressionUUID->"72680ea5-ff97-4484-a28e-272dddf22a73"],

Cell[BoxData[
 RowBox[{"v", "\[Equal]", 
  RowBox[{"r", "+", "t", "+", 
   RowBox[{"2", " ", "M", " ", 
    RowBox[{"Log", "[", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      FractionBox["r", 
       RowBox[{"2", " ", "M"}]]}], "]"}]}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{3.844281865050373*^9, 3.844281897898921*^9, 
  3.8442828862795057`*^9, 3.8443474962385693`*^9, 3.8443703472518578`*^9, 
  3.844523853081196*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"25cb06e2-dead-4698-b898-c8e7db3b6768"],

Cell[BoxData[
 RowBox[{"dv", "\[Equal]", 
  RowBox[{"dr", "+", "dt", "+", 
   FractionBox["dr", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox["r", 
      RowBox[{"2", " ", "M"}]]}]]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{3.844281865050373*^9, 3.844281897898921*^9, 
  3.8442828862795057`*^9, 3.8443474962385693`*^9, 3.8443703472518578`*^9, 
  3.84452385308409*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"61b8557e-5699-49e7-ae94-bc2b912bad9e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "trReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{"trReplace", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"eq12", " ", "/.", " ", 
         RowBox[{"(", " ", 
          RowBox[{"eq11", " ", "/.", " ", 
           RowBox[{"Equal", "->", " ", "Rule"}]}], "  ", ")"}]}], "  ", ")"}],
        " ", ",", " ", 
       RowBox[{"(", " ", 
        RowBox[{"eq13", " ", "/.", " ", 
         RowBox[{"(", " ", 
          RowBox[{"eq11", " ", "/.", " ", 
           RowBox[{"Equal", "->", " ", "Rule"}]}], "  ", ")"}]}], "   ", 
        ")"}]}], "}"}], " ", ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", "r"}], "}"}]}], " ", "]"}], "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8442819838376923`*^9, 3.8442820687316217`*^9}, 
   3.844282886280064*^9},
 CellLabel->
  "In[148]:=",ExpressionUUID->"555a72e8-e147-4ff9-8945-b185254604f3"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "ifun", 
   "\"Inverse functions are being used by \
\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\), so some solutions may not be found; use \
Reduce for complete solution information.\"", 2, 149, 604, 
   23645507240695503177, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8442820260768433`*^9, 3.844282069099131*^9}, 
   3.8442828862805367`*^9, 3.844347496398707*^9, 3.8443703474020357`*^9, 
   3.844523853231709*^9},
 CellLabel->
  "During evaluation of \
In[148]:=",ExpressionUUID->"bcd1134a-2c75-4d6c-bb5e-bd99117d846f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"t", "\[Rule]", 
    FractionBox[
     RowBox[{"u", "+", "v"}], "2"]}], ",", 
   RowBox[{"r", "\[Rule]", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"M", "+", 
       RowBox[{"M", " ", 
        RowBox[{"ProductLog", "[", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           FractionBox["u", 
            RowBox[{"4", " ", "M"}]], "+", 
           FractionBox["v", 
            RowBox[{"4", " ", "M"}]]}]], "]"}]}]}], ")"}]}]}]}], 
  "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.844282026091629*^9, 3.8442820691106052`*^9}, 
   3.84428288628106*^9, 3.8443474964184933`*^9, 3.8443703474040747`*^9, 
   3.844523853234687*^9},
 CellLabel->
  "Out[149]=",ExpressionUUID->"5bf95255-4a9c-402c-85e8-d7ad46066296"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "dudv", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dudv", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Dt", "[", " ", 
       RowBox[{"eq12", " ", "/.", " ", 
        RowBox[{"(", " ", 
         RowBox[{"eq11", " ", "/.", " ", 
          RowBox[{"Equal", "->", " ", "Rule"}]}], "  ", ")"}]}], "   ", "]"}],
       " ", "/.", " ", "dtReplace"}], "  ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", " ", 
       RowBox[{"eq13", " ", "/.", " ", 
        RowBox[{"(", " ", 
         RowBox[{"eq11", " ", "/.", " ", 
          RowBox[{"Equal", "->", " ", "Rule"}]}], "  ", ")"}]}], "   ", "]"}],
       " ", "/.", " ", "dtReplace"}]}], " ", "\[IndentingNewLine]", "}"}]}], 
  " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"dudv", " ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.84428190337335*^9, 3.844281927995132*^9}, 
   3.844282886281315*^9},
 CellLabel->
  "In[150]:=",ExpressionUUID->"2fdca889-3a2b-4e53-afb6-52a9d6e8cc68"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"du", "\[Equal]", 
       RowBox[{
        RowBox[{"-", "dr"}], "+", "dt", "-", 
        FractionBox["dr", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          FractionBox["r", 
           RowBox[{"2", " ", "M"}]]}]]}]}]},
     {
      RowBox[{"dv", "\[Equal]", 
       RowBox[{"dr", "+", "dt", "+", 
        FractionBox["dr", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          FractionBox["r", 
           RowBox[{"2", " ", "M"}]]}]]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{3.8442819282300177`*^9, 3.8442828862816143`*^9, 
  3.844347496433097*^9, 3.844370347416216*^9, 3.8445238532453337`*^9},
 CellLabel->
  "Out[152]//TableForm=",ExpressionUUID->"aa5c7f9e-a4da-4c2f-a28c-\
fbbb9c5a261f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{"Solve", "[", " ", 
    RowBox[{"dudv", ",", " ", 
     RowBox[{"{", 
      RowBox[{"dt", ",", "dr"}], "}"}]}], " ", "]"}], "]"}], " ", "//", " ", 
  "TableForm", " "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.844281933373281*^9, 3.844281947978958*^9}, 
   3.8442828862820272`*^9},
 CellLabel->
  "In[153]:=",ExpressionUUID->"2ebad560-5c8f-432f-8a83-2e9c46040c4e"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"dt", "\[Rule]", 
       FractionBox[
        RowBox[{"du", "+", "dv"}], "2"]}]},
     {
      RowBox[{"dr", "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "du", " ", "M"}], "+", 
          RowBox[{"2", " ", "dv", " ", "M"}], "+", 
          RowBox[{"du", " ", "r"}], "-", 
          RowBox[{"dv", " ", "r"}]}], 
         RowBox[{"2", " ", "r"}]]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8442819400432377`*^9, 3.844281948243671*^9}, 
   3.844282886282379*^9, 3.8443474964591627`*^9, 3.84437034743346*^9, 
   3.844523853278805*^9},
 CellLabel->
  "Out[153]//TableForm=",ExpressionUUID->"cf44a445-d46c-4e25-aa2b-\
046bb99b7e67"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"eq10", " "}], "\[IndentingNewLine]", 
 RowBox[{"eq10", " ", "/.", " ", "trReplace"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"eq10", " ", "/.", " ", "trReplace"}], "/.", " ", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Solve", "[", " ", 
      RowBox[{"dudv", ",", " ", 
       RowBox[{"{", 
        RowBox[{"dt", ",", "dr"}], "}"}]}], " ", "]"}], "]"}]}], "   ", "//", 
   " ", "Expand"}], "  ", "//", " ", "FullSimplify", " "}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8442819532137527`*^9, 3.8442819673086853`*^9}, {
   3.8442820770836487`*^9, 3.844282105106997*^9}, 3.844282886282625*^9},
 CellLabel->
  "In[154]:=",ExpressionUUID->"461e54fb-5576-4ef1-9742-c89e4e702820"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["dr", "2"], 
   RowBox[{"1", "-", 
    FractionBox[
     RowBox[{"2", " ", "M"}], "r"]}]], "+", 
  RowBox[{
   SuperscriptBox["dt", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox[
      RowBox[{"2", " ", "M"}], "r"]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["d\[Theta]", "2"], "+", 
     RowBox[{
      SuperscriptBox["d\[Phi]", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.84428195434268*^9, 3.844281967800756*^9}, {
   3.8442820799119062`*^9, 3.844282105436739*^9}, 3.844282886282933*^9, 
   3.844347496481132*^9, 3.844370347448028*^9, 3.844523853291705*^9},
 CellLabel->
  "Out[154]=",ExpressionUUID->"4d290f76-2482-4c50-a959-2b0737f36866"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["dr", "2"], 
   RowBox[{"1", "-", 
    FractionBox["M", 
     RowBox[{"M", "+", 
      RowBox[{"M", " ", 
       RowBox[{"ProductLog", "[", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          FractionBox["u", 
           RowBox[{"4", " ", "M"}]], "+", 
          FractionBox["v", 
           RowBox[{"4", " ", "M"}]]}]], "]"}]}]}]]}]], "+", 
  RowBox[{
   SuperscriptBox["dt", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox["M", 
      RowBox[{"M", "+", 
       RowBox[{"M", " ", 
        RowBox[{"ProductLog", "[", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           FractionBox["u", 
            RowBox[{"4", " ", "M"}]], "+", 
           FractionBox["v", 
            RowBox[{"4", " ", "M"}]]}]], "]"}]}]}]]}], ")"}]}], "+", 
  RowBox[{"4", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"M", "+", 
      RowBox[{"M", " ", 
       RowBox[{"ProductLog", "[", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          FractionBox["u", 
           RowBox[{"4", " ", "M"}]], "+", 
          FractionBox["v", 
           RowBox[{"4", " ", "M"}]]}]], "]"}]}]}], ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["d\[Theta]", "2"], "+", 
     RowBox[{
      SuperscriptBox["d\[Phi]", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.84428195434268*^9, 3.844281967800756*^9}, {
   3.8442820799119062`*^9, 3.844282105436739*^9}, 3.844282886282933*^9, 
   3.844347496481132*^9, 3.844370347448028*^9, 3.844523853297502*^9},
 CellLabel->
  "Out[155]=",ExpressionUUID->"16a34782-59e9-494b-84fa-eabfa23a015c"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["d\[Theta]", "2"]}], "+", 
       SuperscriptBox["d\[Phi]", "2"]}], ")"}], " ", 
     SuperscriptBox["M", "2"]}], "-", 
    FractionBox[
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "du"}], " ", "M"}], "+", 
        RowBox[{"dv", " ", "M"}], "+", 
        RowBox[{"du", " ", "r"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"du", " ", "M"}], "-", 
        RowBox[{"dv", " ", "M"}], "+", 
        RowBox[{"dv", " ", "r"}]}], ")"}]}], 
     SuperscriptBox["r", "2"]], "-", 
    RowBox[{"8", " ", 
     SuperscriptBox["d\[Phi]", "2"], " ", 
     SuperscriptBox["M", "2"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"du", "-", "dv"}], ")"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}], "2"]}], 
     RowBox[{
      SuperscriptBox["r", "2"], " ", 
      RowBox[{"ProductLog", "[", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"4", " ", "M"}], "+", "u", "-", "v"}], 
          RowBox[{"4", " ", "M"}]]}]], "]"}]}]], "+", 
    RowBox[{"16", " ", 
     SuperscriptBox["M", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["d\[Theta]", "2"]}], "+", 
       SuperscriptBox["d\[Phi]", "2"], "-", 
       RowBox[{
        SuperscriptBox["d\[Phi]", "2"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"ProductLog", "[", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"4", " ", "M"}], "+", "u", "-", "v"}], 
         RowBox[{"4", " ", "M"}]]}]], "]"}]}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox["M", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["d\[Theta]", "2"]}], "+", 
       SuperscriptBox["d\[Phi]", "2"], "-", 
       RowBox[{
        SuperscriptBox["d\[Phi]", "2"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"ProductLog", "[", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"4", " ", "M"}], "+", "u", "-", "v"}], 
          RowBox[{"4", " ", "M"}]]}]], "]"}], "2"]}], "+", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"du", "+", "dv"}], ")"}], "2"], 
     RowBox[{"1", "+", 
      RowBox[{"ProductLog", "[", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"4", " ", "M"}], "+", "u", "-", "v"}], 
          RowBox[{"4", " ", "M"}]]}]], "]"}]}]]}], ")"}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.84428195434268*^9, 3.844281967800756*^9}, {
   3.8442820799119062`*^9, 3.844282105436739*^9}, 3.844282886282933*^9, 
   3.844347496481132*^9, 3.844370347448028*^9, 3.844523867043181*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"5ebe6fb4-9aa3-4bc1-82c1-b09b10311ce9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ProductLog"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8442821096692677`*^9, 3.844282112898651*^9}, 
   3.844282886283782*^9},
 CellLabel->
  "In[157]:=",ExpressionUUID->"eeeaa02d-c3ca-4f32-8eb2-aead0ae2dd6a"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ProductLog",
              ButtonNote->"paclet:ref/ProductLog"],
             "\"paclet:ref/ProductLog\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ProductLog\\\", \\\"[\\\", \
StyleBox[\\\"z\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the principal solution \
for \\!\\(\\*StyleBox[\\\"w\\\", \\\"TI\\\"]\\) in \
\\!\\(\\*RowBox[{\\\"z\\\", \\\"\[LongEqual]\\\", RowBox[{\\\"w\\\", \\\"\
\[InvisibleSpace]\\\", SuperscriptBox[\\\"e\\\", \\\"w\\\"]}]}]\\). \\n\\!\\(\
\\*RowBox[{\\\"ProductLog\\\", \\\"[\\\", RowBox[{StyleBox[\\\"k\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"z\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
gives the \\!\\(\\*StyleBox[\\\"k\\\", \\\"TI\\\"]\\)\\!\\(\\*SuperscriptBox[\
\\\"\[Null]\\\", \\\"th\\\"]\\) solution. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/ProductLog", 
                    "paclet:ref/ProductLog", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/ProductLog.\
html"], None}, "http://reference.wolfram.com/language/ref/ProductLog.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    "Listable", ",", "Protected", ",", "ReadProtected"}], 
                    "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ProductLog\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ProductLog",
              ButtonNote->"paclet:ref/ProductLog"],
             "\"paclet:ref/ProductLog\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ProductLog\\\", \\\"[\\\", \
StyleBox[\\\"z\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the principal solution \
for \\!\\(\\*StyleBox[\\\"w\\\", \\\"TI\\\"]\\) in \
\\!\\(\\*RowBox[{\\\"z\\\", \\\"\[LongEqual]\\\", RowBox[{\\\"w\\\", \\\"\
\[InvisibleSpace]\\\", SuperscriptBox[\\\"e\\\", \\\"w\\\"]}]}]\\). \\n\\!\\(\
\\*RowBox[{\\\"ProductLog\\\", \\\"[\\\", RowBox[{StyleBox[\\\"k\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"z\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
gives the \\!\\(\\*StyleBox[\\\"k\\\", \\\"TI\\\"]\\)\\!\\(\\*SuperscriptBox[\
\\\"\[Null]\\\", \\\"th\\\"]\\) solution. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"ProductLog\", \"[\", StyleBox[\"z\", \"TI\"], \"]\"}]\) \
gives the principal solution for \!\(\*StyleBox[\"w\", \"TI\"]\) in \
\!\(\*RowBox[{\"z\", \"\[LongEqual]\", RowBox[{\"w\", \"\[InvisibleSpace]\", \
SuperscriptBox[\"e\", \"w\"]}]}]\). \n\!\(\*RowBox[{\"ProductLog\", \"[\", \
RowBox[{StyleBox[\"k\", \"TI\"], \",\", StyleBox[\"z\", \"TI\"]}], \"]\"}]\) \
gives the \!\(\*StyleBox[\"k\", \"TI\"]\)\!\(\*SuperscriptBox[\"\[Null]\", \
\"th\"]\) solution. ", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/ProductLog", "Web" -> 
      "http://reference.wolfram.com/language/ref/ProductLog.html"], 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {Listable, Protected, ReadProtected}, "FullName" -> 
    "System`ProductLog"], False]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8442821185412817`*^9, 3.844282118678792*^9}, 
   3.84428288628406*^9, 3.8443475102954273`*^9, 3.844370361061594*^9, 
   3.844523867270494*^9},
 CellLabel->
  "Out[157]=",ExpressionUUID->"cd2bcc54-aa7f-4f07-a66a-de8ad4bbdf9a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq14", "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq14", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"\[ScriptT]", " ", "==", " ", 
   RowBox[{"t", " ", "+", " ", 
    RowBox[{"2", " ", "M", " ", 
     RowBox[{"Log", "[", 
      RowBox[{
       FractionBox["r", 
        RowBox[{"2", " ", "M"}]], "-", "1"}], " ", "]"}]}]}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.844282185527079*^9, 3.844282204579257*^9}, {
   3.8442824067646933`*^9, 3.84428240692338*^9}, 3.844282886284295*^9},
 CellLabel->
  "In[158]:=",ExpressionUUID->"12791815-9114-4701-8db0-29997e9bb999"],

Cell[BoxData[
 RowBox[{"\[ScriptT]", "\[Equal]", 
  RowBox[{"t", "+", 
   RowBox[{"2", " ", "M", " ", 
    RowBox[{"Log", "[", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      FractionBox["r", 
       RowBox[{"2", " ", "M"}]]}], "]"}]}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{3.8442822050027*^9, 3.844282408377705*^9, 
  3.844282886284587*^9, 3.844347510321377*^9, 3.844370361073165*^9, 
  3.844523867280265*^9},
 CellLabel->
  "Out[159]=",ExpressionUUID->"14289971-16f3-459b-9cb7-819c5396978a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"Solve", "[", " ", 
     RowBox[{"eq14", " ", ",", " ", "t"}], "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], " "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.844282240341812*^9, 3.844282250733488*^9}, 
   3.844282886284828*^9},
 CellLabel->
  "In[160]:=",ExpressionUUID->"2dc1faac-da57-49f3-88b9-9ed84db93a7f"],

Cell[BoxData[
 RowBox[{"t", "\[Rule]", 
  RowBox[{"\[ScriptT]", "-", 
   RowBox[{"2", " ", "M", " ", 
    RowBox[{"Log", "[", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      FractionBox["r", 
       RowBox[{"2", " ", "M"}]]}], "]"}]}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.844282244861157*^9, 3.8442822509278927`*^9}, 
   3.844282409894874*^9, 3.844282886285234*^9, 3.8443475103619823`*^9, 
   3.844370361098048*^9, 3.8445238673092012`*^9},
 CellLabel->
  "Out[160]=",ExpressionUUID->"321d7cb1-74ae-4896-8c51-12be9fd80721"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dt", "[", " ", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"Solve", "[", " ", 
      RowBox[{"eq14", " ", ",", " ", "t"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "  ", "]"}], " ", "/.", " ", 
  "dtReplace"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8442822070629377`*^9, 3.844282213069037*^9}, {
   3.844282253884323*^9, 3.844282262949095*^9}, 3.844282886285502*^9},
 CellLabel->
  "In[161]:=",ExpressionUUID->"aa9020e1-2704-4b97-9ee1-43b379d04b64"],

Cell[BoxData[
 RowBox[{"dt", "\[Rule]", 
  RowBox[{"d\[ScriptT]", "-", 
   FractionBox["dr", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox["r", 
      RowBox[{"2", " ", "M"}]]}]]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8442822100648193`*^9, 3.844282213475932*^9}, 
   3.844282263421677*^9, 3.8442824115130672`*^9, 3.844282886285912*^9, 
   3.844347510380066*^9, 3.844370361110054*^9, 3.8445238673189917`*^9},
 CellLabel->
  "Out[161]=",ExpressionUUID->"8be75064-5089-4b66-96d5-cc22e9dd53ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"eq10", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq10", " ", "/.", " ", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"Solve", "[", " ", 
      RowBox[{"eq14", " ", ",", " ", "t"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "  ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "eq15a", "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq15a", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eq10", " ", "/.", " ", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Solve", "[", " ", 
            RowBox[{"eq14", " ", ",", " ", "t"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "   ", "/.", " ", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"Dt", "[", " ", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"Solve", "[", " ", 
              RowBox[{"eq14", " ", ",", " ", "t"}], "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "  ", "]"}], " ", "/.", " ", 
          "dtReplace"}], " ", ")"}]}], "  ", "//", " ", "Expand"}], " ", "//",
       " ", "Simplify"}], "  ", "//", " ", "Expand"}], " ", "//", " ", 
    "Apart"}], " ", "//", " ", "Expand", " "}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.844282266069878*^9, 3.844282320315374*^9}, {
   3.8442824213642883`*^9, 3.8442824271394587`*^9}, 3.8442828862861547`*^9},
 CellLabel->
  "In[162]:=",ExpressionUUID->"63e13514-a2cd-487f-a32a-8fa8bd3f153a"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["dr", "2"], 
   RowBox[{"1", "-", 
    FractionBox[
     RowBox[{"2", " ", "M"}], "r"]}]], "+", 
  RowBox[{
   SuperscriptBox["dt", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox[
      RowBox[{"2", " ", "M"}], "r"]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["d\[Theta]", "2"], "+", 
     RowBox[{
      SuperscriptBox["d\[Phi]", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8442822711156607`*^9, 3.844282321362686*^9}, {
   3.8442824140220613`*^9, 3.844282427346038*^9}, 3.844282886286442*^9, 
   3.844347510426111*^9, 3.8443703611417093`*^9, 3.8445238673504477`*^9},
 CellLabel->
  "Out[162]=",ExpressionUUID->"b1b91dd7-f1f1-4d9c-9d20-08b87ffc25df"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["dr", "2"], 
   RowBox[{"1", "-", 
    FractionBox[
     RowBox[{"2", " ", "M"}], "r"]}]], "+", 
  RowBox[{
   SuperscriptBox["dt", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox[
      RowBox[{"2", " ", "M"}], "r"]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["d\[Theta]", "2"], "+", 
     RowBox[{
      SuperscriptBox["d\[Phi]", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8442822711156607`*^9, 3.844282321362686*^9}, {
   3.8442824140220613`*^9, 3.844282427346038*^9}, 3.844282886286442*^9, 
   3.844347510426111*^9, 3.8443703611417093`*^9, 3.844523867354151*^9},
 CellLabel->
  "Out[163]=",ExpressionUUID->"fb951509-adfb-4ff5-8cf0-dd07116e3a35"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["dr", "2"], "-", 
  SuperscriptBox["d\[ScriptT]", "2"], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["dr", "2"], " ", "M"}], "r"], "+", 
  FractionBox[
   RowBox[{"4", " ", "dr", " ", "d\[ScriptT]", " ", "M"}], "r"], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["d\[ScriptT]", "2"], " ", "M"}], "r"], "+", 
  RowBox[{
   SuperscriptBox["d\[Theta]", "2"], " ", 
   SuperscriptBox["r", "2"]}], "+", 
  RowBox[{
   SuperscriptBox["d\[Phi]", "2"], " ", 
   SuperscriptBox["r", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8442822711156607`*^9, 3.844282321362686*^9}, {
   3.8442824140220613`*^9, 3.844282427346038*^9}, 3.844282886286442*^9, 
   3.844347510426111*^9, 3.8443703611417093`*^9, 3.844523867386883*^9},
 CellLabel->
  "Out[165]=",ExpressionUUID->"a95ff383-3605-4a0b-9647-add9aa979a04"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq15b", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq15b", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"lineToMetric", "[", " ", 
    RowBox[{"eq15a", " ", ",", " ", 
     RowBox[{"{", 
      RowBox[{"d\[ScriptT]", ",", "dr", ",", "d\[Theta]", ",", "d\[Phi]"}], 
      "}"}]}], " ", "]"}]}], "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq15b", "  ", "//", " ", "MatrixForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8442823229981003`*^9, 3.844282358435141*^9}, {
   3.844282444371641*^9, 3.8442824554650927`*^9}, 3.844282886287225*^9},
 CellLabel->
  "In[166]:=",ExpressionUUID->"d495a042-af22-4f7b-b565-098856449ac1"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       FractionBox[
        RowBox[{"2", " ", "M"}], "r"]}], 
      FractionBox[
       RowBox[{"2", " ", "M"}], "r"], "0", "0"},
     {
      FractionBox[
       RowBox[{"2", " ", "M"}], "r"], 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"2", " ", "M"}], "r"]}], "0", "0"},
     {"0", "0", 
      SuperscriptBox["r", "2"], "0"},
     {"0", "0", "0", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.844282324234549*^9, 3.844282358750638*^9}, {
   3.8442824361146717`*^9, 3.8442824566037283`*^9}, 3.844282886287477*^9, 
   3.844347510489562*^9, 3.8443703612041597`*^9, 3.844523867398713*^9},
 CellLabel->
  "Out[168]//MatrixForm=",ExpressionUUID->"5294d113-d220-4cea-bc2f-\
2ae02f9d9248"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq15", "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq15", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"metricToLine", "[", " ", 
   RowBox[{"eq15b", " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"d\[ScriptT]", ",", "dr", ",", "d\[Theta]", ",", "d\[Phi]"}], 
     "}"}]}], " ", "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8442824594141827`*^9, 3.844282483075235*^9}, 
   3.8442828862876863`*^9},
 CellLabel->
  "In[169]:=",ExpressionUUID->"243ced67-1ad4-48b3-a8b0-ba9b3b84174e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["d\[ScriptT]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox[
      RowBox[{"2", " ", "M"}], "r"]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["dr", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     FractionBox[
      RowBox[{"2", " ", "M"}], "r"]}], ")"}]}], "+", 
  FractionBox[
   RowBox[{"4", " ", "dr", " ", "d\[ScriptT]", " ", "M"}], "r"], "+", 
  RowBox[{
   SuperscriptBox["d\[Theta]", "2"], " ", 
   SuperscriptBox["r", "2"]}], "+", 
  RowBox[{
   SuperscriptBox["d\[Phi]", "2"], " ", 
   SuperscriptBox["r", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.844282470497013*^9, 3.844282483470145*^9}, 
   3.844282886287939*^9, 3.844347510532365*^9, 3.844370361215949*^9, 
   3.844523867428241*^9},
 CellLabel->
  "Out[170]=",ExpressionUUID->"b8cdbfe6-ae15-4769-b216-69e038e1ca4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq17a", "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq17a", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"eq15", " ", "/.", " ", 
   RowBox[{"d\[ScriptT]", "->", " ", "dt", " "}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8442825160069532`*^9, 3.844282546083336*^9}, {
   3.84428271191569*^9, 3.844282716995306*^9}, 3.844282886288185*^9},
 CellLabel->
  "In[171]:=",ExpressionUUID->"5b9e1f17-b8a8-4b8a-b61b-103cf52ed164"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["dt", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox[
      RowBox[{"2", " ", "M"}], "r"]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["dr", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     FractionBox[
      RowBox[{"2", " ", "M"}], "r"]}], ")"}]}], "+", 
  FractionBox[
   RowBox[{"4", " ", "dr", " ", "dt", " ", "M"}], "r"], "+", 
  RowBox[{
   SuperscriptBox["d\[Theta]", "2"], " ", 
   SuperscriptBox["r", "2"]}], "+", 
  RowBox[{
   SuperscriptBox["d\[Phi]", "2"], " ", 
   SuperscriptBox["r", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.844282529956586*^9, 3.844282546896389*^9}, 
   3.8442827195678253`*^9, 3.844282886289002*^9, 3.844347510551333*^9, 
   3.844370361238542*^9, 3.8445238674380493`*^9},
 CellLabel->
  "Out[172]=",ExpressionUUID->"213e7278-8949-4f8f-a9f2-b81ca038bc12"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq17", "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq17", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"2", "M"}], "r"]}], ")"}]}], 
    SuperscriptBox["dt", "2"]}], "+", " ", 
   RowBox[{
    RowBox[{"(", 
     FractionBox[
      RowBox[{"4", " ", "M"}], "r"], ")"}], " ", "dr", " ", "dt"}], " ", "+", 
   " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      FractionBox[
       RowBox[{"2", "M"}], "r"]}], ")"}], " ", 
    SuperscriptBox["dr", "2"]}], "+", " ", 
   RowBox[{
    SuperscriptBox["r", "2"], "(", " ", 
    RowBox[{
     SuperscriptBox["d\[Theta]", "2"], "+", " ", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
      SuperscriptBox["d\[Phi]", "2"]}]}], ")"}], " "}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.844211012880157*^9, 3.844211072164714*^9}, 
   3.8442828862893248`*^9},
 CellLabel->
  "In[173]:=",ExpressionUUID->"9e549c06-9ae1-404c-b58a-e7dcde50072c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["dt", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox[
      RowBox[{"2", " ", "M"}], "r"]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["dr", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     FractionBox[
      RowBox[{"2", " ", "M"}], "r"]}], ")"}]}], "+", 
  FractionBox[
   RowBox[{"4", " ", "dr", " ", "dt", " ", "M"}], "r"], "+", 
  RowBox[{
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["d\[Theta]", "2"], "+", 
     RowBox[{
      SuperscriptBox["d\[Phi]", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{3.844211072616206*^9, 3.8442814012256308`*^9, 
  3.8442827253389387`*^9, 3.8442828862900476`*^9, 3.844347510593844*^9, 
  3.844370361252433*^9, 3.844523867467532*^9},
 CellLabel->
  "Out[174]=",ExpressionUUID->"85759400-9757-4ffc-983a-6658530ab0f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric17", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric17", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"lineToMetric", "[", " ", 
    RowBox[{"eq17", " ", ",", " ", 
     RowBox[{"{", 
      RowBox[{"dt", ",", "dr", ",", "d\[Theta]", ",", "d\[Phi]"}], "}"}]}], 
    " ", "]"}]}], "   ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"metric17", " ", "//", " ", "MatrixForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.844211074968952*^9, 3.8442110990122766`*^9}, {
   3.844211163310145*^9, 3.8442111652124777`*^9}, 3.844282886290308*^9},
 CellLabel->
  "In[175]:=",ExpressionUUID->"55a510d7-2756-44a5-88a1-4b0c0dd5f11e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       FractionBox[
        RowBox[{"2", " ", "M"}], "r"]}], 
      FractionBox[
       RowBox[{"2", " ", "M"}], "r"], "0", "0"},
     {
      FractionBox[
       RowBox[{"2", " ", "M"}], "r"], 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"2", " ", "M"}], "r"]}], "0", "0"},
     {"0", "0", 
      SuperscriptBox["r", "2"], "0"},
     {"0", "0", "0", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8442110835514*^9, 3.844211099369524*^9}, 
   3.844211165484518*^9, 3.844281401274428*^9, 3.8442828862905693`*^9, 
   3.844347510613225*^9, 3.8443703612742653`*^9, 3.844523867479411*^9},
 CellLabel->
  "Out[177]//MatrixForm=",ExpressionUUID->"f5437ad7-17e1-4fa5-ae5b-\
456883e52865"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metric1a", "  ", "//", " ", "MatrixForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.844211135360612*^9, 3.8442111432925253`*^9}, 
   3.8442828862908*^9},
 CellLabel->
  "In[178]:=",ExpressionUUID->"ef36bdde-ad68-4137-a3c3-157ac61723e8"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[Alpha]", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["\[Beta]", "2"]}]}], 
      RowBox[{
       SuperscriptBox["a", "2"], " ", "\[Beta]"}], "0", "0"},
     {
      RowBox[{
       SuperscriptBox["a", "2"], " ", "\[Beta]"}], 
      SuperscriptBox["a", "2"], "0", "0"},
     {"0", "0", 
      SuperscriptBox["r", "2"], "0"},
     {"0", "0", "0", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8442111388645697`*^9, 3.8442111435417843`*^9}, 
   3.844281401290678*^9, 3.844282886291049*^9, 3.8443475106557417`*^9, 
   3.844370361286065*^9, 3.8445238675074263`*^9},
 CellLabel->
  "Out[178]//MatrixForm=",ExpressionUUID->"aa5364ae-00ed-47e1-a082-\
7f0ebbc0ad1f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "problemOneD", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"problemOneD", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"Thread", "[", " ", 
    RowBox[{
     RowBox[{"Flatten", "[", " ", "metric17", " ", "]"}], " ", "==", " ", 
     RowBox[{"Flatten", "[", " ", "metric1a", " ", "]"}]}], "  ", "]"}]}], 
  "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"problemOneD", " ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.844211154967511*^9, 3.844211209749424*^9}, 
   3.8442828862912817`*^9},
 CellLabel->
  "In[179]:=",ExpressionUUID->"aad0376d-e76f-4cab-915c-3256b5b3b993"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        FractionBox[
         RowBox[{"2", " ", "M"}], "r"]}], "\[Equal]", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[Alpha]", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["\[Beta]", "2"]}]}]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", "M"}], "r"], "\[Equal]", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", "\[Beta]"}]}]},
     {"True"},
     {"True"},
     {
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", "M"}], "r"], "\[Equal]", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", "\[Beta]"}]}]},
     {
      RowBox[{
       RowBox[{"1", "+", 
        FractionBox[
         RowBox[{"2", " ", "M"}], "r"]}], "\[Equal]", 
       SuperscriptBox["a", "2"]}]},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"},
     {"True"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.844211159097348*^9, 3.8442112100201178`*^9}, 
   3.84428140131711*^9, 3.844282886291512*^9, 3.84434751067523*^9, 
   3.8443703613085747`*^9, 3.844523867518141*^9},
 CellLabel->
  "Out[181]//TableForm=",ExpressionUUID->"bf9ebb9d-3f44-42be-be14-\
e0cf72aa16c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Solve", "[", " ", 
    RowBox[{
     RowBox[{"Union", "[", " ", 
      RowBox[{
       RowBox[{"problemOneD", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", 
       RowBox[{"{", " ", 
        RowBox[{"problemOneD", "[", 
         RowBox[{"[", "6", "]"}], "]"}], " ", "}"}]}], " ", "]"}], "  ", ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "a", ",", "\[Beta]"}], " ", "}"}]}], " ", 
    "]"}], "[", 
   RowBox[{"[", "4", "]"}], "]"}], " "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8442112416538773`*^9, 3.844211342887156*^9}, 
   3.844282886291739*^9},
 CellLabel->
  "In[182]:=",ExpressionUUID->"15f8a6a6-ac74-4be1-9861-59aea8f2a175"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Alpha]", "\[Rule]", 
    FractionBox[
     SqrtBox["r"], 
     SqrtBox[
      RowBox[{
       RowBox[{"2", " ", "M"}], "+", "r"}]]]}], ",", 
   RowBox[{"a", "\[Rule]", 
    FractionBox[
     SqrtBox[
      RowBox[{
       RowBox[{"2", " ", "M"}], "+", "r"}]], 
     SqrtBox["r"]]}], ",", 
   RowBox[{"\[Beta]", "\[Rule]", 
    FractionBox[
     RowBox[{"2", " ", "M"}], 
     RowBox[{
      RowBox[{"2", " ", "M"}], "+", "r"}]]}]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.844211239723988*^9, 3.844211343303485*^9}, 
   3.844281401363885*^9, 3.8442828862919693`*^9, 3.844347510737693*^9, 
   3.844370361344077*^9, 3.8445238675515947`*^9},
 CellLabel->
  "Out[182]=",ExpressionUUID->"a6d39855-e367-4e4f-809c-5652ad7bd25f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq18", "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq18", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", " ", 
     RowBox[{
      RowBox[{"Union", "[", " ", 
       RowBox[{
        RowBox[{"problemOneD", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", 
        RowBox[{"{", " ", 
         RowBox[{"problemOneD", "[", 
          RowBox[{"[", "6", "]"}], "]"}], " ", "}"}]}], " ", "]"}], "  ", ",",
       " ", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]", ",", "a", ",", "\[Beta]"}], " ", "}"}]}], " ", 
     "]"}], "[", 
    RowBox[{"[", "4", "]"}], "]"}], " ", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.844211354476528*^9, 3.844211364348947*^9}, 
   3.844282886292197*^9},
 CellLabel->
  "In[183]:=",ExpressionUUID->"9a8e964b-9dd4-4450-b609-87b1de0a4afc"],

Cell[BoxData[
 RowBox[{"\[Alpha]", "\[Rule]", 
  FractionBox[
   SqrtBox["r"], 
   SqrtBox[
    RowBox[{
     RowBox[{"2", " ", "M"}], "+", "r"}]]]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.844211355225552*^9, 3.844211364737741*^9}, 
   3.844281401400812*^9, 3.844282886292427*^9, 3.8443475107823477`*^9, 
   3.844370361371846*^9, 3.844523867583778*^9},
 CellLabel->
  "Out[184]=",ExpressionUUID->"60848007-1945-4014-8fb1-fa0642c6612a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Limit", "[", " ", 
   RowBox[{
    RowBox[{"eq18", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "  ", ",", " ", 
    RowBox[{"r", "->", " ", "\[Infinity]"}]}], " ", "]"}], "   "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{3.844282886292635*^9},
 CellLabel->
  "In[185]:=",ExpressionUUID->"94817c71-54e9-47a5-9d07-d03e8a9e44e5"],

Cell[BoxData["1"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{3.8442115588096*^9, 3.844281401609329*^9, 
  3.8442828862928677`*^9, 3.8443475109467363`*^9, 3.84437036152785*^9, 
  3.844523867657114*^9},
 CellLabel->
  "Out[185]=",ExpressionUUID->"f4633fbb-e0cd-434e-9237-52dfd5382c32"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq19", "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq19", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", " ", 
     RowBox[{
      RowBox[{"Union", "[", " ", 
       RowBox[{
        RowBox[{"problemOneD", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", 
        RowBox[{"{", " ", 
         RowBox[{"problemOneD", "[", 
          RowBox[{"[", "6", "]"}], "]"}], " ", "}"}]}], " ", "]"}], "  ", ",",
       " ", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]", ",", "a", ",", "\[Beta]"}], " ", "}"}]}], " ", 
     "]"}], "[", 
    RowBox[{"[", "4", "]"}], "]"}], " ", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8442113742927837`*^9, 3.844211378812758*^9}, 
   3.844282886293214*^9},
 CellLabel->
  "In[186]:=",ExpressionUUID->"c106738a-509a-48ca-ad39-b3fad51788da"],

Cell[BoxData[
 RowBox[{"a", "\[Rule]", 
  FractionBox[
   SqrtBox[
    RowBox[{
     RowBox[{"2", " ", "M"}], "+", "r"}]], 
   SqrtBox["r"]]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{3.84421137913652*^9, 3.844281401641253*^9, 
  3.844282886293562*^9, 3.844347510985835*^9, 3.844370361553732*^9, 
  3.844523867687261*^9},
 CellLabel->
  "Out[187]=",ExpressionUUID->"662be3c1-100d-4196-8fe3-af2ebb8e8566"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Limit", "[", " ", 
   RowBox[{
    RowBox[{"eq19", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "  ", ",", " ", 
    RowBox[{"r", "->", " ", "\[Infinity]"}]}], " ", "]"}], "   "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.844211568084628*^9, 3.844211568420721*^9}, 
   3.844282886293796*^9},
 CellLabel->
  "In[188]:=",ExpressionUUID->"1fc51d38-94a5-47c5-a9d9-766cd8650b1c"],

Cell[BoxData["1"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{3.84421156880206*^9, 3.844281401660305*^9, 
  3.84428288629403*^9, 3.844347511027828*^9, 3.8443703615767727`*^9, 
  3.84452386771736*^9},
 CellLabel->
  "Out[188]=",ExpressionUUID->"f8ac4837-dae3-4ad7-a022-7458c618eee2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq20", "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq20", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", " ", 
     RowBox[{
      RowBox[{"Union", "[", " ", 
       RowBox[{
        RowBox[{"problemOneD", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", 
        RowBox[{"{", " ", 
         RowBox[{"problemOneD", "[", 
          RowBox[{"[", "6", "]"}], "]"}], " ", "}"}]}], " ", "]"}], "  ", ",",
       " ", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]", ",", "a", ",", "\[Beta]"}], " ", "}"}]}], " ", 
     "]"}], "[", 
    RowBox[{"[", "4", "]"}], "]"}], " ", "[", 
   RowBox[{"[", "3", "]"}], "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.844211390885112*^9, 3.844211397069343*^9}, 
   3.844282886294272*^9},
 CellLabel->
  "In[189]:=",ExpressionUUID->"69bf11f0-458d-4ac2-9b87-25dc9fc7cfda"],

Cell[BoxData[
 RowBox[{"\[Beta]", "\[Rule]", 
  FractionBox[
   RowBox[{"2", " ", "M"}], 
   RowBox[{
    RowBox[{"2", " ", "M"}], "+", "r"}]]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{3.8442113975477247`*^9, 3.844281401687496*^9, 
  3.844282886294511*^9, 3.844347511070903*^9, 3.844370361606917*^9, 
  3.844523867750126*^9},
 CellLabel->
  "Out[190]=",ExpressionUUID->"ba75c224-16f5-4b8b-a62f-4db8aa991098"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Limit", "[", " ", 
   RowBox[{
    RowBox[{"eq20", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "  ", ",", " ", 
    RowBox[{"r", "->", " ", "\[Infinity]"}]}], " ", "]"}], "   "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.844211423872983*^9, 3.844211519279223*^9}, {
   3.844211570909337*^9, 3.8442115737721252`*^9}, 3.844282886294729*^9},
 CellLabel->
  "In[191]:=",ExpressionUUID->"fb90d133-a091-4137-bfe9-c5fabf82888c"],

Cell[BoxData["0"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{3.844211574158586*^9, 3.844281401706168*^9, 
  3.8442828862949677`*^9, 3.844347511164695*^9, 3.8443703616200867`*^9, 
  3.844523867762711*^9},
 CellLabel->
  "Out[191]=",ExpressionUUID->"a56d3bb5-fa7a-4d76-9fce-a272f6be07ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "flatSpace", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flatSpace", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Alpha]", "->", " ", 
      RowBox[{"Limit", "[", " ", 
       RowBox[{
        RowBox[{"eq18", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "  ", ",", " ", 
        RowBox[{"r", "->", " ", "\[Infinity]"}]}], " ", "]"}]}], "    ", ",", 
     " ", "\[IndentingNewLine]", 
     RowBox[{"a", "->", " ", 
      RowBox[{"Limit", "[", " ", 
       RowBox[{
        RowBox[{"eq19", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "  ", ",", " ", 
        RowBox[{"r", "->", " ", "\[Infinity]"}]}], " ", "]"}]}], "   ", ",", 
     " ", "\[IndentingNewLine]", 
     RowBox[{"\[Beta]", " ", "->", " ", 
      RowBox[{"Limit", "[", " ", 
       RowBox[{
        RowBox[{"eq20", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "  ", ",", " ", 
        RowBox[{"r", "->", " ", "\[Infinity]"}]}], " ", "]"}]}]}], "    ", 
    "\[IndentingNewLine]", "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"flatSpace", "  ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.844211623622973*^9, 3.8442117490685062`*^9}, 
   3.844282886295228*^9},
 CellLabel->
  "In[192]:=",ExpressionUUID->"aa4d5b35-9efa-40e4-a841-562124f712ba"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"\[Alpha]", "\[Rule]", "1"}]},
     {
      RowBox[{"a", "\[Rule]", "1"}]},
     {
      RowBox[{"\[Beta]", "\[Rule]", "0"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{3.8442117493459883`*^9, 3.844281401736183*^9, 
  3.844282886295458*^9, 3.844347511208312*^9, 3.844370361642785*^9, 
  3.844523867793461*^9},
 CellLabel->
  "Out[194]//TableForm=",ExpressionUUID->"6bf7bee8-3f10-489e-9fb6-\
5cdf46bdcd1b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "flatSpaceReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{"flatSpaceReplace", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"flatSpace", " ", "/.", " ", "eq1a", "   "}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8442119111610823`*^9, 3.844211957412058*^9}, {
   3.84421199233383*^9, 3.844212004852865*^9}, 3.844282886295669*^9},
 CellLabel->
  "In[195]:=",ExpressionUUID->"e6e69c02-9b49-417f-a43f-61ede7a04102"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Alpha]", "[", "r", "]"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"a", "[", "r", "]"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"\[Beta]", "[", "r", "]"}], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.844211913757946*^9, 3.844211958103963*^9}, 
   3.8442120058218727`*^9, 3.844281401755665*^9, 3.844282886295918*^9, 
   3.844347511225967*^9, 3.844370361655649*^9, 3.84452386780408*^9},
 CellLabel->
  "Out[196]=",ExpressionUUID->"e1aac56c-44e6-4dbf-bdd8-6231c56fd491"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "alphaAbetaDerivatives", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alphaAbetaDerivatives", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", " ", "\[IndentingNewLine]", 
     RowBox[{"flatSpaceReplace", "  ", ",", " ", "\[IndentingNewLine]", 
      RowBox[{"D", "[", " ", 
       RowBox[{"alphaAbetaReplace", " ", ",", " ", "r"}], " ", "]"}], "  ", 
      ",", " ", "\[IndentingNewLine]", 
      RowBox[{"D", "[", " ", 
       RowBox[{"alphaAbetaReplace", " ", ",", " ", 
        RowBox[{"{", " ", 
         RowBox[{"r", " ", ",", "2"}], " ", "}"}]}], " ", "]"}]}], " ", 
     "\[IndentingNewLine]", "}"}], "  ", "//", " ", "Flatten"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"alphaAbetaDerivatives", "  ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8442119691770897`*^9, 3.844212059845297*^9}, 
   3.844282886296158*^9},
 CellLabel->
  "In[197]:=",ExpressionUUID->"a2e40eeb-f5ba-4714-8e77-58872298ac90"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"\[Alpha]", "[", "r", "]"}], "\[Rule]", "1"}]},
     {
      RowBox[{
       RowBox[{"a", "[", "r", "]"}], "\[Rule]", "1"}]},
     {
      RowBox[{
       RowBox[{"\[Beta]", "[", "r", "]"}], "\[Rule]", "0"}]},
     {"0"},
     {"0"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.844211974070347*^9, 3.844211983452684*^9}, {
   3.844212054973753*^9, 3.844212060170433*^9}, 3.844281401780658*^9, 
   3.844282886296393*^9, 3.844347511265781*^9, 3.8443703616769543`*^9, 
   3.844523867834566*^9},
 CellLabel->
  "Out[199]//TableForm=",ExpressionUUID->"bac9fcff-6b27-4064-8ec8-\
20d0aaf47b4d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"wave", " ", "/.", " ", "alphaAbetaDerivatives"}], " ", "//", " ", 
  "pdConv"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.844212063768621*^9, 3.844212090180853*^9}, 
   3.8442828862966146`*^9},
 CellLabel->
  "In[200]:=",ExpressionUUID->"c708c8ce-8160-44eb-bcf3-4f7c38a5d028"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{RowBox[{\\\"\[Alpha]\\\", \
\\\"[\\\", \\\"r\\\", \\\"]\\\"}], \\\"\[Rule]\\\", \\\"1\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"a\\\", \\\"[\\\", \\\"r\\\", \\\"]\\\"}], \
\\\"\[Rule]\\\", \\\"1\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"\[Beta]\\\", \
\\\"[\\\", \\\"r\\\", \\\"]\\\"}], \\\"\[Rule]\\\", \\\"0\\\"}], \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}]\\) is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing.\"", 2, 200, 605, 23645507240695503177, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{3.844281401898098*^9, 3.84428288629699*^9, 
  3.844347511381798*^9, 3.8443703617812757`*^9, 3.844523867847011*^9},
 CellLabel->
  "During evaluation of \
In[200]:=",ExpressionUUID->"a67d283d-ca7d-4ca5-a421-e22956231c49"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{RowBox[{\\\"\[Alpha]\\\", \
\\\"[\\\", \\\"r\\\", \\\"]\\\"}], \\\"\[Rule]\\\", \\\"1\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"a\\\", \\\"[\\\", \\\"r\\\", \\\"]\\\"}], \
\\\"\[Rule]\\\", \\\"1\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"\[Beta]\\\", \
\\\"[\\\", \\\"r\\\", \\\"]\\\"}], \\\"\[Rule]\\\", \\\"0\\\"}], \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}]\\) is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing.\"", 2, 200, 606, 23645507240695503177, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{3.844281401898098*^9, 3.84428288629699*^9, 
  3.844347511381798*^9, 3.8443703617812757`*^9, 3.844523867849552*^9},
 CellLabel->
  "During evaluation of \
In[200]:=",ExpressionUUID->"ae26bb45-c328-4936-8c95-05e6954d8e71"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[PartialD]", "2"], 
        RowBox[{"\[Phi]", "(", 
         RowBox[{"t", ",", "r"}], ")"}]}], 
       RowBox[{
        RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
        RowBox[{"\[PartialD]", "r"}]}],
       MultilineFunction->None]}], 
     SuperscriptBox[
      RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "+", 
    FractionBox[
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"t", ",", "r"}], ")"}]}], 
      RowBox[{"\[PartialD]", 
       SuperscriptBox["r", "2"]}],
      MultilineFunction->None], 
     SuperscriptBox[
      RowBox[{"a", "(", "r", ")"}], "2"]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{"a", "(", "r", ")"}]}], 
       RowBox[{"\[PartialD]", "r"}],
       MultilineFunction->None], " ", 
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{"\[Phi]", "(", 
         RowBox[{"t", ",", "r"}], ")"}]}], 
       RowBox[{"\[PartialD]", "r"}],
       MultilineFunction->None]}], 
     RowBox[{
      RowBox[{"a", "(", "r", ")"}], " ", 
      SuperscriptBox[
       RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}]], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{"a", "(", "r", ")"}]}], 
       RowBox[{"\[PartialD]", "r"}],
       MultilineFunction->None], " ", 
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{"\[Phi]", "(", 
         RowBox[{"t", ",", "r"}], ")"}]}], 
       RowBox[{"\[PartialD]", "t"}],
       MultilineFunction->None]}], 
     RowBox[{
      RowBox[{"a", "(", "r", ")"}], " ", 
      SuperscriptBox[
       RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}]], "+", 
    FractionBox[
     RowBox[{
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
       RowBox[{"\[PartialD]", "r"}],
       MultilineFunction->None], " ", 
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{"\[Phi]", "(", 
         RowBox[{"t", ",", "r"}], ")"}]}], 
       RowBox[{"\[PartialD]", "r"}],
       MultilineFunction->None]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"a", "(", "r", ")"}], "2"], " ", 
      RowBox[{"\[Alpha]", "(", "r", ")"}]}]], "-", 
    FractionBox[
     RowBox[{
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{"a", "(", "r", ")"}]}], 
       RowBox[{"\[PartialD]", "r"}],
       MultilineFunction->None], " ", 
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{"\[Phi]", "(", 
         RowBox[{"t", ",", "r"}], ")"}]}], 
       RowBox[{"\[PartialD]", "r"}],
       MultilineFunction->None]}], 
     SuperscriptBox[
      RowBox[{"a", "(", "r", ")"}], "3"]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{"\[Phi]", "(", 
         RowBox[{"t", ",", "r"}], ")"}]}], 
       RowBox[{"\[PartialD]", "r"}],
       MultilineFunction->None]}], 
     RowBox[{"r", " ", 
      SuperscriptBox[
       RowBox[{"a", "(", "r", ")"}], "2"]}]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[PartialD]", "2"], 
        RowBox[{"\[Phi]", "(", 
         RowBox[{"t", ",", "r"}], ")"}]}], 
       RowBox[{"\[PartialD]", 
        SuperscriptBox["r", "2"]}],
       MultilineFunction->None]}], 
     SuperscriptBox[
      RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "-", 
    FractionBox[
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"t", ",", "r"}], ")"}]}], 
      RowBox[{"\[PartialD]", 
       SuperscriptBox["t", "2"]}],
      MultilineFunction->None], 
     SuperscriptBox[
      RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{"\[Phi]", "(", 
         RowBox[{"t", ",", "r"}], ")"}]}], 
       RowBox[{"\[PartialD]", "r"}],
       MultilineFunction->None]}], 
     RowBox[{"r", " ", 
      SuperscriptBox[
       RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
       RowBox[{"\[PartialD]", "r"}],
       MultilineFunction->None], " ", 
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{"\[Phi]", "(", 
         RowBox[{"t", ",", "r"}], ")"}]}], 
       RowBox[{"\[PartialD]", "r"}],
       MultilineFunction->None]}], 
     SuperscriptBox[
      RowBox[{"\[Alpha]", "(", "r", ")"}], "3"]], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{"\[Beta]", "(", "r", ")"}]}], 
       RowBox[{"\[PartialD]", "r"}],
       MultilineFunction->None], " ", 
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{"\[Phi]", "(", 
         RowBox[{"t", ",", "r"}], ")"}]}], 
       RowBox[{"\[PartialD]", "r"}],
       MultilineFunction->None]}], 
     SuperscriptBox[
      RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{"\[Phi]", "(", 
         RowBox[{"t", ",", "r"}], ")"}]}], 
       RowBox[{"\[PartialD]", "t"}],
       MultilineFunction->None]}], 
     RowBox[{"r", " ", 
      SuperscriptBox[
       RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}]], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
       RowBox[{"\[PartialD]", "r"}],
       MultilineFunction->None], " ", 
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{"\[Phi]", "(", 
         RowBox[{"t", ",", "r"}], ")"}]}], 
       RowBox[{"\[PartialD]", "t"}],
       MultilineFunction->None]}], 
     SuperscriptBox[
      RowBox[{"\[Alpha]", "(", "r", ")"}], "3"]], "+", 
    FractionBox[
     RowBox[{
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{"\[Beta]", "(", "r", ")"}]}], 
       RowBox[{"\[PartialD]", "r"}],
       MultilineFunction->None], " ", 
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{"\[Phi]", "(", 
         RowBox[{"t", ",", "r"}], ")"}]}], 
       RowBox[{"\[PartialD]", "t"}],
       MultilineFunction->None]}], 
     SuperscriptBox[
      RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]]}], "/.", "\[VeryThinSpace]", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Alpha]", "(", "r", ")"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"a", "(", "r", ")"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"\[Beta]", "(", "r", ")"}], "\[Rule]", "0"}], ",", "0", ",", 
     "0"}], "}"}]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8442120663931627`*^9, 3.844212090899642*^9}, 
   3.844281401951715*^9, 3.8442828862974854`*^9, 3.8443475114530697`*^9, 
   3.844370361836238*^9, 3.8445238678958473`*^9},
 CellLabel->
  "Out[200]//TraditionalForm=",ExpressionUUID->"16f44572-a76b-42ff-b989-\
6e2ee9ffe36a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq22", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq22", " ", "=", " ", "\[IndentingNewLine]", " ", 
   RowBox[{
    RowBox[{"D", "[", "  ", 
     RowBox[{
      RowBox[{"r", " ", 
       RowBox[{"\[Phi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], " ", ",", " ", 
      RowBox[{"{", 
       RowBox[{"r", ",", "2"}], "}"}]}], " ", "]"}], " ", "-", 
    RowBox[{"D", "[", "  ", 
     RowBox[{
      RowBox[{"r", " ", 
       RowBox[{"\[Phi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], " ", ",", " ", 
      RowBox[{"{", 
       RowBox[{"t", ",", "2"}], "}"}]}], " ", "]"}]}]}], "   ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq22", " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.844212102080902*^9, 3.844212181500991*^9}, {
   3.844212217181662*^9, 3.844212218917262*^9}, 3.84428288629777*^9},
 CellLabel->
  "In[201]:=",ExpressionUUID->"fe5cf3a4-ce67-4e97-85da-c30594d56764"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"r", " ", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[PartialD]", "2"], 
      RowBox[{"\[Phi]", "(", 
       RowBox[{"t", ",", "r"}], ")"}]}], 
     RowBox[{"\[PartialD]", 
      SuperscriptBox["r", "2"]}],
     MultilineFunction->None]}], "-", 
   RowBox[{"r", " ", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[PartialD]", "2"], 
      RowBox[{"\[Phi]", "(", 
       RowBox[{"t", ",", "r"}], ")"}]}], 
     RowBox[{"\[PartialD]", 
      SuperscriptBox["t", "2"]}],
     MultilineFunction->None]}], "+", 
   RowBox[{"2", " ", 
    FractionBox[
     RowBox[{"\[PartialD]", 
      RowBox[{"\[Phi]", "(", 
       RowBox[{"t", ",", "r"}], ")"}]}], 
     RowBox[{"\[PartialD]", "r"}],
     MultilineFunction->None]}]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8442121183907757`*^9, 3.844212181946075*^9}, 
   3.844212219193054*^9, 3.844281401979723*^9, 3.844282886297986*^9, 
   3.8443475115026608`*^9, 3.844370361915029*^9, 3.844523867930162*^9},
 CellLabel->
  "Out[203]//TraditionalForm=",ExpressionUUID->"fd69be85-ac49-4a3f-a024-\
de27ac5f4579"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["eq22", "r"], " ", "//", " ", "Expand"}], "  ", "//", " ", 
  "pdConv"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8442122024076366`*^9, 3.84421222984507*^9}, 
   3.8442828862981977`*^9},
 CellLabel->
  "In[204]:=",ExpressionUUID->"839e1f59-f032-4afd-a86e-c997943383e3"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[PartialD]", "2"], 
     RowBox[{"\[Phi]", "(", 
      RowBox[{"t", ",", "r"}], ")"}]}], 
    RowBox[{"\[PartialD]", 
     SuperscriptBox["r", "2"]}],
    MultilineFunction->None], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[PartialD]", "2"], 
     RowBox[{"\[Phi]", "(", 
      RowBox[{"t", ",", "r"}], ")"}]}], 
    RowBox[{"\[PartialD]", 
     SuperscriptBox["t", "2"]}],
    MultilineFunction->None], "+", 
   FractionBox[
    RowBox[{"2", " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Phi]", "(", 
        RowBox[{"t", ",", "r"}], ")"}]}], 
      RowBox[{"\[PartialD]", "r"}],
      MultilineFunction->None]}], "r"]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8442122032489557`*^9, 3.844212230499873*^9}, 
   3.844281401997179*^9, 3.844282886298403*^9, 3.844347511522951*^9, 
   3.84437036193999*^9, 3.8445238679418488`*^9},
 CellLabel->
  "Out[204]//TraditionalForm=",ExpressionUUID->"7a466c1a-4728-4dec-a74b-\
f82a7e05c57a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "minkowski", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"minkowski", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"metric1a", "  ", "/.", " ", "flatSpace"}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"minkowski", " ", "//", " ", "MatrixForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8442117683925667`*^9, 3.844211813372504*^9}, 
   3.844282886298616*^9},
 CellLabel->
  "In[205]:=",ExpressionUUID->"69df3648-fa61-4e7a-89a0-453b8680e631"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], "0", "0", "0"},
     {"0", "1", "0", "0"},
     {"0", "0", 
      SuperscriptBox["r", "2"], "0"},
     {"0", "0", "0", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8442117708402433`*^9, 3.844211813627537*^9}, 
   3.8442814020250053`*^9, 3.844282886299384*^9, 3.8443475115807257`*^9, 
   3.8443703619518547`*^9, 3.8445238679782763`*^9},
 CellLabel->
  "Out[207]//MatrixForm=",ExpressionUUID->"a73a93e8-a67f-41c4-b327-\
83bff27082f2"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Problem 1h:  Equations Typed In Without Derivation.  Not yet consistent - \
More Failed Attempts\
\>", "Section",
 CellChangeTimes->{{3.8442828015320253`*^9, 3.844282827386739*^9}, {
  3.8443505605273533`*^9, 3.844350571527986*^9}, {3.844352446845221*^9, 
  3.844352449781402*^9}},ExpressionUUID->"8568e8d8-e287-4da5-82b0-\
319294daa022"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"M", ",", "R", ",", "A", ",", "\[CapitalDelta]"}], " ", "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", "1"}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["t", "final"], "=", "1"}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", "=", "3"}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["r", "0"], "=", " ", "0"}], " ", ";"}]}], "Input",
 CellChangeTimes->{{3.8443493262263393`*^9, 3.844349332594615*^9}, {
  3.844350773210793*^9, 3.844350812353154*^9}},
 CellLabel->
  "In[208]:=",ExpressionUUID->"b3512920-ed63-42dd-b02f-b36ee08e4269"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "aAlphaBeta", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aAlphaBeta", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", "r", "]"}], "->", "   ", 
      SqrtBox[
       FractionBox[
        RowBox[{"r", "+", 
         RowBox[{"2", "M"}]}], "r"]]}], " ", ",", " ", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"\[Alpha]", "[", "r", "]"}], "->", "   ", 
      SqrtBox[
       FractionBox["r", 
        RowBox[{"r", "+", 
         RowBox[{"2", "M"}]}]]]}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Beta]", "[", "r", "]"}], "->", "     ", 
      FractionBox[
       RowBox[{"2", "M"}], 
       RowBox[{"r", "+", 
        RowBox[{"2", "M"}]}]]}]}], " ", "\[IndentingNewLine]", "}"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"aAlphaBeta", "  ", "//", " ", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.844349620894301*^9, 3.844349630926469*^9}, {
  3.844349869844635*^9, 3.844349907867614*^9}},
 CellLabel->
  "In[215]:=",ExpressionUUID->"1c2b22a6-ef34-4050-92b9-8e684f0d186b"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"a", "[", "r", "]"}], "\[Rule]", 
       SqrtBox[
        FractionBox[
         RowBox[{"2", "+", "r"}], "r"]]}]},
     {
      RowBox[{
       RowBox[{"\[Alpha]", "[", "r", "]"}], "\[Rule]", 
       SqrtBox[
        FractionBox["r", 
         RowBox[{"2", "+", "r"}]]]}]},
     {
      RowBox[{
       RowBox[{"\[Beta]", "[", "r", "]"}], "\[Rule]", 
       FractionBox["2", 
        RowBox[{"2", "+", "r"}]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.844349908119863*^9, 3.844370361986676*^9},
 CellLabel->
  "Out[217]//TableForm=",ExpressionUUID->"20d50fa8-6ac4-46e3-8661-\
53963fb8d8de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "aAlphaBetaReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aAlphaBetaReplace", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", " ", "\[IndentingNewLine]", 
        RowBox[{"aAlphaBeta", " ", ",", " ", "\[IndentingNewLine]", 
         RowBox[{"D", "[", " ", 
          RowBox[{"aAlphaBeta", "  ", ",", " ", "r"}], " ", "]"}], "  ", ",", 
         " ", "\[IndentingNewLine]", 
         RowBox[{"D", "[", " ", 
          RowBox[{"aAlphaBeta", "  ", ",", " ", 
           RowBox[{"{", " ", 
            RowBox[{"r", " ", ",", "2"}], " ", "}"}]}], " ", "]"}]}], " ", 
        "\[IndentingNewLine]", "}"}], " ", "//", " ", "Flatten"}], "  ", "//",
       " ", "Expand"}], " ", "//", " ", "PowerExpand"}], " ", "//", " ", 
    "Simplify"}]}], "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"aAlphaBetaReplace", "  ", "//", " ", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.8443499110550203`*^9, 3.84435001756354*^9}},
 CellLabel->
  "In[218]:=",ExpressionUUID->"5466a0ca-2dbb-4d98-a032-9d59a78d237d"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"a", "[", "r", "]"}], "\[Rule]", 
       FractionBox["1", 
        SqrtBox[
         FractionBox["r", 
          RowBox[{"2", "+", "r"}]]]]}]},
     {
      RowBox[{
       RowBox[{"\[Alpha]", "[", "r", "]"}], "\[Rule]", 
       SqrtBox[
        FractionBox["r", 
         RowBox[{"2", "+", "r"}]]]}]},
     {
      RowBox[{
       RowBox[{"\[Beta]", "[", "r", "]"}], "\[Rule]", 
       FractionBox["2", 
        RowBox[{"2", "+", "r"}]]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["a", "\[Prime]",
         MultilineFunction->None], "[", "r", "]"}], "\[Rule]", 
       RowBox[{"-", 
        FractionBox["1", 
         RowBox[{
          SuperscriptBox["r", 
           RowBox[{"3", "/", "2"}]], " ", 
          SqrtBox[
           RowBox[{"2", "+", "r"}]]}]]}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Alpha]", "\[Prime]",
         MultilineFunction->None], "[", "r", "]"}], "\[Rule]", 
       FractionBox["1", 
        RowBox[{
         SqrtBox["r"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", "+", "r"}], ")"}], 
          RowBox[{"3", "/", "2"}]]}]]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Beta]", "\[Prime]",
         MultilineFunction->None], "[", "r", "]"}], "\[Rule]", 
       RowBox[{"-", 
        FractionBox["2", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", "+", "r"}], ")"}], "2"]]}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["a", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "r", "]"}], "\[Rule]", 
       FractionBox[
        RowBox[{"3", "+", 
         RowBox[{"2", " ", "r"}]}], 
        RowBox[{
         SuperscriptBox["r", 
          RowBox[{"5", "/", "2"}]], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", "+", "r"}], ")"}], 
          RowBox[{"3", "/", "2"}]]}]]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Alpha]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "r", "]"}], "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "-", 
         RowBox[{"2", " ", "r"}]}], 
        RowBox[{
         SuperscriptBox["r", 
          RowBox[{"3", "/", "2"}]], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", "+", "r"}], ")"}], 
          RowBox[{"5", "/", "2"}]]}]]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Beta]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "r", "]"}], "\[Rule]", 
       FractionBox["4", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "+", "r"}], ")"}], "3"]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.84434993099375*^9, {3.844349972703061*^9, 3.84435001829484*^9}, 
   3.844370362050041*^9},
 CellLabel->
  "Out[220]//TableForm=",ExpressionUUID->"8c31ac0d-d3f5-44e2-b619-\
5734d8824d91"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "pde1", ",", "pde2", ",", "pde3", ",", "pde4", ",", "ics1", ",", "ics2", 
    ",", "pdesystem", ",", " ", "pdesolution"}], " ", "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pde1", ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[PartialD]", "t"], 
        RowBox[{"\[CapitalPhi]", "[", 
         RowBox[{"t", ",", "r"}], "]"}]}], "\[Equal]", " ", 
       RowBox[{
        SubscriptBox["\[PartialD]", "r"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Beta]", "[", "r", "]"}], 
           RowBox[{"\[CapitalPhi]", "[", 
            RowBox[{"t", ",", "r"}], "]"}]}], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"\[Alpha]", "[", "r", "]"}], 
            RowBox[{"\[CapitalPi]", "[", 
             RowBox[{"t", ",", "r"}], "]"}]}], 
           RowBox[{"a", "[", "r", "]"}]]}], ")"}]}]}], " ", "//", " ", 
      "Expand"}], " ", "//", " ", "Apart"}], " ", "//", " ", "Expand"}]}], 
  "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pde2", ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[PartialD]", "t"], 
        RowBox[{"\[CapitalPi]", "[", 
         RowBox[{"t", ",", "r"}], "]"}]}], "\[Equal]", " ", 
       RowBox[{
        FractionBox["1", 
         SuperscriptBox["r", "2"]], 
        RowBox[{
         SubscriptBox["\[PartialD]", "r"], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["r", "2"], "(", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Beta]", "[", "r", "]"}], 
             RowBox[{"\[CapitalPi]", "[", 
              RowBox[{"t", ",", "r"}], "]"}]}], "+", 
            FractionBox[
             RowBox[{
              RowBox[{"\[Alpha]", "[", "r", "]"}], 
              RowBox[{"\[CapitalPhi]", "[", 
               RowBox[{"t", ",", "r"}], "]"}]}], 
             RowBox[{"a", "[", "r", "]"}]]}], ")"}], ")"}]}]}]}], " ", "//", 
      " ", "Expand"}], " ", "//", " ", "Apart"}], " ", "//", " ", 
    "Expand"}]}], "   ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pde3", "=", 
   RowBox[{
    RowBox[{"\[CapitalPhi]", "[", 
     RowBox[{"t", ",", "r"}], "]"}], "\[Equal]", 
    RowBox[{
     SubscriptBox["\[PartialD]", "r"], 
     RowBox[{"\[Phi]", "[", 
      RowBox[{"t", ",", "r"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pde4", ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalPi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}], "\[Equal]", " ", 
       RowBox[{
        FractionBox[
         RowBox[{"a", "[", "r", "]"}], 
         RowBox[{"\[Alpha]", "[", "r", "]"}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[PartialD]", "t"], 
           RowBox[{"\[Phi]", "[", 
            RowBox[{"t", ",", "r"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"\[Beta]", "[", "r", "]"}], 
           RowBox[{
            SubscriptBox["\[PartialD]", "r"], 
            RowBox[{"\[Phi]", "[", 
             RowBox[{"t", ",", "r"}], "]"}]}]}]}], ")"}]}]}], " ", "//", " ", 
      "Expand"}], " ", "//", " ", "Apart"}], " ", "//", " ", "Expand"}]}], 
  "   ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pdesBeforeSubstitution", " ", ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{"pde1", ",", "pde2", ",", "pde3", ",", " ", "pde4"}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pdesAfterSubstitution", " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
       "pdesBeforeSubstitution", "  ", "/.", " ", "aAlphaBetaReplace"}], "  ",
        "//", " ", "Expand"}], "  ", "//", " ", "Apart"}], " ", "//", " ", 
     "Expand"}], " ", "//", " ", "PowerExpand"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ics1", ":=", "  ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Phi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}], "/.", " ", 
       RowBox[{"{", 
        RowBox[{"t", "\[Rule]", " ", "0"}], "}"}]}], " ", ")"}], " ", 
     "\[Equal]", " ", 
     RowBox[{"A", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"r", "-", 
            SubscriptBox["r", "0"]}], "\[CapitalDelta]"], ")"}], "2"]}], 
       "]"}]}]}]}], " ", ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "See", " ", "text", " ", "for", " ", "boundary", " ", "conditions", " ", 
    "for", " ", "\[CapitalPi]", " ", "and", " ", "\[CapitalPhi]", " ", "in", 
    " ", "terms", " ", "of", " ", "following", " ", "condition", " ", "for", 
    " ", "\[Phi]"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "  ", 
   RowBox[{"Equation", " ", "31"}], " ", "*)"}], " "}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"ics2", ":=", " ", 
    RowBox[{
     RowBox[{"(", "  ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[PartialD]", "t"], 
          RowBox[{"(", 
           RowBox[{"r", " ", 
            RowBox[{"\[Phi]", "[", 
             RowBox[{"t", ",", "r"}], "]"}]}], ")"}]}], "-", 
         RowBox[{
          SubscriptBox["\[PartialD]", "r"], 
          RowBox[{"(", 
           RowBox[{"r", " ", 
            RowBox[{"\[Phi]", "[", 
             RowBox[{"t", ",", "r"}], "]"}]}], " ", ")"}]}]}], ")"}], " ", "/.",
        " ", 
       RowBox[{"{", 
        RowBox[{"t", "->", " ", "0"}], " ", "}"}]}], " ", ")"}], " ", 
     "\[Equal]", "0"}]}], " ", ";", " ", 
   RowBox[{"(*", "   ", 
    RowBox[{
     RowBox[{
     "This", " ", "should", " ", "be", " ", "a", " ", "boundary", " ", 
      "condition", " ", "at", " ", "r"}], " ", "==", " ", "R"}], " ", "*)"}], 
   " ", "\[IndentingNewLine]", 
   RowBox[{"pdesystem", ":=", 
    RowBox[{"Flatten", "[", 
     RowBox[{"{", 
      RowBox[{"pdesAfterSubstitution", " ", ",", "ics1", ",", "ics2"}], " ", 
      "}"}], "]"}]}], ";"}], " "}]}], "Input",
 CellChangeTimes->{{3.844202525015122*^9, 3.8442025315265093`*^9}, {
   3.844348403036007*^9, 3.844348458114852*^9}, {3.844348539366466*^9, 
   3.84434854957275*^9}, {3.844348585565056*^9, 3.844348609371973*^9}, {
   3.844348802269888*^9, 3.8443488470126133`*^9}, {3.844348990555561*^9, 
   3.844349022908873*^9}, {3.844349089534567*^9, 3.84434910716498*^9}, {
   3.8443491852268457`*^9, 3.844349187116365*^9}, {3.8443492678163233`*^9, 
   3.8443492755120287`*^9}, {3.844349452365246*^9, 3.84434947400439*^9}, {
   3.844349786831883*^9, 3.844349829140568*^9}, {3.844350039527898*^9, 
   3.844350128439237*^9}, {3.844350205118271*^9, 3.8443502099724007`*^9}, {
   3.8443504250304537`*^9, 3.844350458865294*^9}, {3.844350606698971*^9, 
   3.844350609097383*^9}, {3.844350754420061*^9, 3.8443507603642817`*^9}, 
   3.8443546306215773`*^9, {3.844370624524043*^9, 3.844370632115181*^9}, {
   3.8443710482894773`*^9, 3.844371065496449*^9}},
 CellLabel->
  "In[278]:=",ExpressionUUID->"790b0abd-48a5-404f-9489-204a732951f9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"pdesBeforeSubstitution", "  ", "//", " ", "TableForm"}], " ", "//",
   " ", "pdConv"}]], "Input",
 CellChangeTimes->{{3.8443508760614233`*^9, 3.844350884084159*^9}},
 CellLabel->
  "In[231]:=",ExpressionUUID->"56beb662-62eb-4d1e-919a-502c20517141"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[CapitalPhi]", "(", 
           RowBox[{"t", ",", "r"}], ")"}]}], 
         RowBox[{"\[PartialD]", "t"}],
         MultilineFunction->None], "\[LongEqual]", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[CapitalPi]", "(", 
              RowBox[{"t", ",", "r"}], ")"}]}], 
            RowBox[{"\[PartialD]", "r"}],
            MultilineFunction->None]}], 
          RowBox[{"a", "(", "r", ")"}]], "-", 
         FractionBox[
          RowBox[{
           RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"a", "(", "r", ")"}]}], 
            RowBox[{"\[PartialD]", "r"}],
            MultilineFunction->None], " ", 
           RowBox[{"\[CapitalPi]", "(", 
            RowBox[{"t", ",", "r"}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"a", "(", "r", ")"}], "2"]], "+", 
         FractionBox[
          RowBox[{
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
            RowBox[{"\[PartialD]", "r"}],
            MultilineFunction->None], " ", 
           RowBox[{"\[CapitalPi]", "(", 
            RowBox[{"t", ",", "r"}], ")"}]}], 
          RowBox[{"a", "(", "r", ")"}]], "+", 
         RowBox[{
          RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[CapitalPhi]", "(", 
             RowBox[{"t", ",", "r"}], ")"}]}], 
           RowBox[{"\[PartialD]", "r"}],
           MultilineFunction->None]}], "+", 
         RowBox[{
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Beta]", "(", "r", ")"}]}], 
           RowBox[{"\[PartialD]", "r"}],
           MultilineFunction->None], " ", 
          RowBox[{"\[CapitalPhi]", "(", 
           RowBox[{"t", ",", "r"}], ")"}]}]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[CapitalPi]", "(", 
           RowBox[{"t", ",", "r"}], ")"}]}], 
         RowBox[{"\[PartialD]", "t"}],
         MultilineFunction->None], "\[LongEqual]", 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
           RowBox[{"\[CapitalPhi]", "(", 
            RowBox[{"t", ",", "r"}], ")"}]}], 
          RowBox[{"r", " ", 
           RowBox[{"a", "(", "r", ")"}]}]], "+", 
         FractionBox[
          RowBox[{
           RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[CapitalPhi]", "(", 
              RowBox[{"t", ",", "r"}], ")"}]}], 
            RowBox[{"\[PartialD]", "r"}],
            MultilineFunction->None]}], 
          RowBox[{"a", "(", "r", ")"}]], "-", 
         FractionBox[
          RowBox[{
           RowBox[{"\[Alpha]", "(", "r", ")"}], " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"a", "(", "r", ")"}]}], 
            RowBox[{"\[PartialD]", "r"}],
            MultilineFunction->None], " ", 
           RowBox[{"\[CapitalPhi]", "(", 
            RowBox[{"t", ",", "r"}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"a", "(", "r", ")"}], "2"]], "+", 
         FractionBox[
          RowBox[{
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Alpha]", "(", "r", ")"}]}], 
            RowBox[{"\[PartialD]", "r"}],
            MultilineFunction->None], " ", 
           RowBox[{"\[CapitalPhi]", "(", 
            RowBox[{"t", ",", "r"}], ")"}]}], 
          RowBox[{"a", "(", "r", ")"}]], "+", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
           RowBox[{"\[CapitalPi]", "(", 
            RowBox[{"t", ",", "r"}], ")"}]}], "r"], "+", 
         RowBox[{
          RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[CapitalPi]", "(", 
             RowBox[{"t", ",", "r"}], ")"}]}], 
           RowBox[{"\[PartialD]", "r"}],
           MultilineFunction->None]}], "+", 
         RowBox[{
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Beta]", "(", "r", ")"}]}], 
           RowBox[{"\[PartialD]", "r"}],
           MultilineFunction->None], " ", 
          RowBox[{"\[CapitalPi]", "(", 
           RowBox[{"t", ",", "r"}], ")"}]}]}]}]},
      {
       RowBox[{
        RowBox[{"\[CapitalPhi]", "(", 
         RowBox[{"t", ",", "r"}], ")"}], "\[LongEqual]", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Phi]", "(", 
           RowBox[{"t", ",", "r"}], ")"}]}], 
         RowBox[{"\[PartialD]", "r"}],
         MultilineFunction->None]}]},
      {
       RowBox[{
        RowBox[{"\[CapitalPi]", "(", 
         RowBox[{"t", ",", "r"}], ")"}], "\[LongEqual]", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"a", "(", "r", ")"}], " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Phi]", "(", 
              RowBox[{"t", ",", "r"}], ")"}]}], 
            RowBox[{"\[PartialD]", "t"}],
            MultilineFunction->None]}], 
          RowBox[{"\[Alpha]", "(", "r", ")"}]], "-", 
         FractionBox[
          RowBox[{
           RowBox[{"a", "(", "r", ")"}], " ", 
           RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Phi]", "(", 
              RowBox[{"t", ",", "r"}], ")"}]}], 
            RowBox[{"\[PartialD]", "r"}],
            MultilineFunction->None]}], 
          RowBox[{"\[Alpha]", "(", "r", ")"}]]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.844350873667713*^9, 3.844350884809484*^9}, 
   3.844370362144412*^9},
 CellLabel->
  "Out[231]//TraditionalForm=",ExpressionUUID->"300453f6-9f0b-457f-b91a-\
f9ea5be2a199"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pdesAfterSubstitution", "  ", "//", " ", "TableForm", 
  " "}]], "Input",
 CellChangeTimes->{{3.8443508942523003`*^9, 3.8443509035262337`*^9}},
 CellLabel->
  "In[232]:=",ExpressionUUID->"6b13ee7d-64af-43ce-a92c-99966fed25f7"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["\[CapitalPhi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"\[CapitalPi]", "[", 
          RowBox[{"t", ",", "r"}], "]"}]}], "-", 
        FractionBox[
         RowBox[{"r", " ", 
          RowBox[{"\[CapitalPi]", "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", "+", "r"}], ")"}], "2"]], "-", 
        FractionBox[
         RowBox[{"r", " ", 
          RowBox[{"\[CapitalPi]", "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", "r"}], ")"}]}]], "-", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"\[CapitalPhi]", "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
        RowBox[{
         SuperscriptBox["\[CapitalPi]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "r"}], "]"}], "-", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{
           SuperscriptBox["\[CapitalPi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], 
         RowBox[{"2", "+", "r"}]], "+", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{
           SuperscriptBox["\[CapitalPhi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], 
         RowBox[{"2", "+", "r"}]]}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["\[CapitalPi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}], "\[Equal]", 
       RowBox[{
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"\[CapitalPi]", "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
        FractionBox[
         RowBox[{"8", " ", 
          RowBox[{"\[CapitalPi]", "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], 
         RowBox[{"r", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"2", "+", "r"}], ")"}], "2"]}]], "+", 
        FractionBox[
         RowBox[{"6", " ", 
          RowBox[{"\[CapitalPhi]", "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
        FractionBox[
         RowBox[{"2", " ", "r", " ", 
          RowBox[{"\[CapitalPhi]", "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
        FractionBox[
         RowBox[{"4", " ", 
          RowBox[{
           SuperscriptBox["\[CapitalPi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
        FractionBox[
         RowBox[{"2", " ", "r", " ", 
          RowBox[{
           SuperscriptBox["\[CapitalPi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
        FractionBox[
         RowBox[{"2", " ", "r", " ", 
          RowBox[{
           SuperscriptBox["\[CapitalPhi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["r", "2"], " ", 
          RowBox[{
           SuperscriptBox["\[CapitalPhi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", "+", "r"}], ")"}], "2"]]}]}]},
     {
      RowBox[{
       RowBox[{"\[CapitalPhi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}], "\[Equal]", 
       RowBox[{
        SuperscriptBox["\[Phi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}]},
     {
      RowBox[{
       RowBox[{"\[CapitalPi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{
            SuperscriptBox["\[Phi]", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"t", ",", "r"}], "]"}]}], "r"]}], "+", 
        RowBox[{
         SuperscriptBox["\[Phi]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "r"}], "]"}], "+", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{
           SuperscriptBox["\[Phi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], "r"]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.844350895695835*^9, 3.8443509038454638`*^9}, 
   3.8443703621983643`*^9},
 CellLabel->
  "Out[232]//TableForm=",ExpressionUUID->"2f8dd62b-d37b-4bb7-aa34-\
4fa755a79a64"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", " ", 
   RowBox[{"D", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"\[Phi]", "[", 
         RowBox[{"t", ",", "r"}], "]"}], "/.", " ", 
        RowBox[{"{", 
         RowBox[{"t", "\[Rule]", " ", "0"}], "}"}]}], " ", ")"}], " ", 
      "\[Equal]", " ", 
      RowBox[{"A", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"r", "-", 
             SubscriptBox["r", "0"]}], "\[CapitalDelta]"], ")"}], "2"]}], " ",
         "]"}]}]}], "  ", ",", " ", "r"}], " ", "]"}], "  ", ")"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.844350987869851*^9, 3.844351039110642*^9}, 
   3.844351327248356*^9},
 CellLabel->
  "In[233]:=",ExpressionUUID->"dc79d8dd-6da0-4721-aaf8-724fb18360bd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[Phi]", 
    TagBox[
     RowBox[{"(", 
      RowBox[{"0", ",", "1"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"0", ",", "r"}], "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", "2"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox["r", "2"]}]], " ", "r"}]}]], "Output",
 CellChangeTimes->{{3.844350991505847*^9, 3.844351005693632*^9}, 
   3.844351039318397*^9, 3.844351327887372*^9, 3.844351411169323*^9, 
   3.8443703622116623`*^9},
 CellLabel->
  "Out[233]=",ExpressionUUID->"8fcd406c-f2a4-4c20-83ee-0a57d1e750a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ics1", " ", "/.", " ", 
   RowBox[{"Equal", "->", " ", "Rule"}]}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "ics2a", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ics2a", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ics2", " ", "/.", " ", 
    RowBox[{"(", 
     RowBox[{"ics1", " ", "/.", " ", 
      RowBox[{"Equal", "->", " ", "Rule"}]}], " ", ")"}]}], "  ", "/.", " ", 
   RowBox[{"(", " ", 
    RowBox[{
     RowBox[{"(", " ", 
      RowBox[{"D", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"\[Phi]", "[", 
            RowBox[{"t", ",", "r"}], "]"}], "/.", " ", 
           RowBox[{"{", 
            RowBox[{"t", "\[Rule]", " ", "0"}], "}"}]}], " ", ")"}], " ", 
         "\[Equal]", " ", 
         RowBox[{"A", " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"r", "-", 
                SubscriptBox["r", "0"]}], "\[CapitalDelta]"], ")"}], "2"]}], 
           " ", "]"}]}]}], "  ", ",", " ", "r"}], " ", "]"}], "  ", ")"}], 
     " ", "/.", " ", 
     RowBox[{"Equal", "->", " ", "Rule"}]}], "  ", ")"}], " "}]}]}], "Input",
 CellChangeTimes->{{3.8443504765307713`*^9, 3.844350482128756*^9}, {
  3.844351014727385*^9, 3.844351090564086*^9}},
 CellLabel->
  "In[234]:=",ExpressionUUID->"c156c174-06f3-48c3-ac00-0b9eb4ad371c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Phi]", "[", 
   RowBox[{"0", ",", "r"}], "]"}], "\[Rule]", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    SuperscriptBox["r", "2"]}]]}]], "Output",
 CellChangeTimes->{{3.844350477696259*^9, 3.84435048249557*^9}, 
   3.844351022736566*^9, {3.844351055093745*^9, 3.844351090857545*^9}, 
   3.8443703622357597`*^9},
 CellLabel->
  "Out[234]=",ExpressionUUID->"7e5d5e63-d9a1-4288-85db-ba9827cfbbb2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      SuperscriptBox["r", "2"]}]]}], "+", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      SuperscriptBox["r", "2"]}]], " ", 
    SuperscriptBox["r", "2"]}], "+", 
   RowBox[{"r", " ", 
    RowBox[{
     SuperscriptBox["\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"0", ",", "r"}], "]"}]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{{3.844350477696259*^9, 3.84435048249557*^9}, 
   3.844351022736566*^9, {3.844351055093745*^9, 3.844351090857545*^9}, 
   3.844370362239534*^9},
 CellLabel->
  "Out[236]=",ExpressionUUID->"e92a77c2-46b5-4aad-bb80-96c58576d627"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Solve", "[", " ", 
         RowBox[{"ics2a", ",", " ", 
          RowBox[{
           SuperscriptBox["\[Phi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"0", ",", "r"}], "]"}]}], " ", "]"}], " ", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", "/.", " ", 
      RowBox[{"Rule", "->", " ", "Equal"}]}], "  ", ")"}], " ", "//", " ", 
    "Expand"}], " ", "//", " ", "Apart"}], " ", "//", " ", "Expand", 
  " "}]], "Input",
 CellChangeTimes->{{3.844351097008667*^9, 3.8443511339390087`*^9}},
 CellLabel->
  "In[237]:=",ExpressionUUID->"53798f82-6681-434b-8753-3fa42ef4e052"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[Phi]", 
    TagBox[
     RowBox[{"(", 
      RowBox[{"1", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"0", ",", "r"}], "]"}], "\[Equal]", 
  RowBox[{
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      SuperscriptBox["r", "2"]}]], "r"], "-", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      SuperscriptBox["r", "2"]}]], " ", "r"}]}]}]], "Output",
 CellChangeTimes->{{3.844351098327285*^9, 3.844351134423731*^9}, 
   3.844370362265477*^9},
 CellLabel->
  "Out[237]=",ExpressionUUID->"3823ae0a-2cb6-4f1a-b850-250068ffb531"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "ics3", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ics3", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", " ", "\[IndentingNewLine]", 
     RowBox[{"ics1", " ", ",", " ", "\[IndentingNewLine]", 
      RowBox[{"D", "[", " ", 
       RowBox[{"ics1", ",", " ", "r"}], " ", "]"}], " ", ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"Solve", "[", " ", 
              RowBox[{"ics2a", ",", " ", 
               RowBox[{
                SuperscriptBox["\[Phi]", 
                 TagBox[
                  RowBox[{"(", 
                   RowBox[{"1", ",", "0"}], ")"}],
                  Derivative],
                 MultilineFunction->None], "[", 
                RowBox[{"0", ",", "r"}], "]"}]}], " ", "]"}], " ", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", "/.", " ", 
           RowBox[{"Rule", "->", " ", "Equal"}]}], "  ", ")"}], " ", "//", 
         " ", "Expand"}], " ", "//", " ", "Apart"}], " ", "//", " ", 
       "Expand"}]}], " ", "\[IndentingNewLine]", "}"}], "  ", "/.", " ", 
    RowBox[{"Equal", "->", " ", "Rule"}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ics3", "  ", "//", " ", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.844351780539754*^9, 3.844351845763336*^9}, {
  3.844351944762712*^9, 3.844351948122239*^9}},
 CellLabel->
  "In[238]:=",ExpressionUUID->"82f5c7b6-7aa9-44ce-bb0f-8eac355eea0b"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"\[Phi]", "[", 
        RowBox[{"0", ",", "r"}], "]"}], "\[Rule]", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         SuperscriptBox["r", "2"]}]]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Phi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"0", ",", "r"}], "]"}], "\[Rule]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          SuperscriptBox["r", "2"]}]], " ", "r"}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Phi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"0", ",", "r"}], "]"}], "\[Rule]", 
       RowBox[{
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           SuperscriptBox["r", "2"]}]], "r"], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           SuperscriptBox["r", "2"]}]], " ", "r"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.844351846026741*^9, 3.844351948340494*^9, 
  3.844370362292164*^9},
 CellLabel->
  "Out[240]//TableForm=",ExpressionUUID->"77b2723f-2407-4544-b407-\
804d95050ea7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pdesAfterSubstitution", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.844351880033684*^9, 3.844351882372733*^9}},
 CellLabel->
  "In[241]:=",ExpressionUUID->"98a89708-6ff2-4a97-b165-dd42a146dbf5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[CapitalPhi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"\[CapitalPi]", "[", 
       RowBox[{"t", ",", "r"}], "]"}]}], "-", 
     FractionBox[
      RowBox[{"r", " ", 
       RowBox[{"\[CapitalPi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]], "-", 
     FractionBox[
      RowBox[{"r", " ", 
       RowBox[{"\[CapitalPi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}]}]], "-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"\[CapitalPhi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
     RowBox[{
      SuperscriptBox["\[CapitalPi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"t", ",", "r"}], "]"}], "-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{
        SuperscriptBox["\[CapitalPi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      RowBox[{"2", "+", "r"}]], "+", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{
        SuperscriptBox["\[CapitalPhi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      RowBox[{"2", "+", "r"}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[CapitalPi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}], "\[Equal]", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"\[CapitalPi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
     FractionBox[
      RowBox[{"8", " ", 
       RowBox[{"\[CapitalPi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      RowBox[{"r", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"2", "+", "r"}], ")"}], "2"]}]], "+", 
     FractionBox[
      RowBox[{"6", " ", 
       RowBox[{"\[CapitalPhi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
     FractionBox[
      RowBox[{"2", " ", "r", " ", 
       RowBox[{"\[CapitalPhi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
     FractionBox[
      RowBox[{"4", " ", 
       RowBox[{
        SuperscriptBox["\[CapitalPi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
     FractionBox[
      RowBox[{"2", " ", "r", " ", 
       RowBox[{
        SuperscriptBox["\[CapitalPi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
     FractionBox[
      RowBox[{"2", " ", "r", " ", 
       RowBox[{
        SuperscriptBox["\[CapitalPhi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       RowBox[{
        SuperscriptBox["\[CapitalPhi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.844351882594433*^9, 3.8443703623412943`*^9},
 CellLabel->
  "Out[241]=",ExpressionUUID->"87f4bf9b-e4da-40a2-91b5-062971f6674a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "ics4", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ics4", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"Union", "[", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"pdesAfterSubstitution", "[", 
           RowBox[{"[", 
            RowBox[{"3", ";;", "4"}], "]"}], "]"}], " ", "/.", " ", 
          RowBox[{"t", "->", " ", "0"}]}], "  ", "/.", " ", "ics3"}], "  ", "//",
         " ", "Expand"}], " ", "//", " ", "Apart"}], " ", "//", " ", 
      "Expand"}], " ", ")"}], " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalPhi]", "[", 
        RowBox[{"t", ",", "2"}], "]"}], " ", "==", " ", "0"}], " ", ",", " ", 
      
      RowBox[{
       RowBox[{"\[Phi]", "[", 
        RowBox[{"t", ",", "3"}], "]"}], " ", "==", " ", "1"}]}], " ", "}"}]}],
    " ", "]"}], " "}]}], "Input",
 CellChangeTimes->{{3.8443519187141333`*^9, 3.8443519862580748`*^9}, {
  3.844352322798905*^9, 3.844352376479679*^9}},
 CellLabel->
  "In[242]:=",ExpressionUUID->"d36632ca-0c55-4722-9d0c-85a03de88179"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalPi]", "[", 
     RowBox[{"0", ",", "r"}], "]"}], "\[Equal]", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         SuperscriptBox["r", "2"]}]]}], 
      SuperscriptBox["r", "2"]], "+", 
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SuperscriptBox["r", "2"]}]], "r"], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SuperscriptBox["r", "2"]}]], " ", "r"}]}]}], ",", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"t", ",", "3"}], "]"}], "\[Equal]", "1"}], ",", 
   RowBox[{
    RowBox[{"\[CapitalPhi]", "[", 
     RowBox[{"0", ",", "r"}], "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       SuperscriptBox["r", "2"]}]], " ", "r"}]}], ",", 
   RowBox[{
    RowBox[{"\[CapitalPhi]", "[", 
     RowBox[{"t", ",", "2"}], "]"}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.844351920843946*^9, 3.844351986931025*^9}, 
   3.844352377881544*^9, 3.844370362389552*^9},
 CellLabel->
  "Out[243]=",ExpressionUUID->"5406fa35-8384-4e5b-a429-cf91b0ab773c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "finalPDESystem", "]"}], "\[IndentingNewLine]", 
 RowBox[{"finalPDESystem", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"Flatten", "[", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"pdesAfterSubstitution", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "2"}], "]"}], "]"}], " ", ",", " ", "ics4"}], "  ", 
    "}"}], " ", "]"}]}]}], "Input",
 CellChangeTimes->{{3.844351995628379*^9, 3.844352024041576*^9}, {
  3.844352059746839*^9, 3.8443520894178457`*^9}},
 CellLabel->
  "In[244]:=",ExpressionUUID->"0d2e0027-90d8-4b96-921b-c0b69541e01f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[CapitalPhi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"\[CapitalPi]", "[", 
       RowBox[{"t", ",", "r"}], "]"}]}], "-", 
     FractionBox[
      RowBox[{"r", " ", 
       RowBox[{"\[CapitalPi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]], "-", 
     FractionBox[
      RowBox[{"r", " ", 
       RowBox[{"\[CapitalPi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}]}]], "-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"\[CapitalPhi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
     RowBox[{
      SuperscriptBox["\[CapitalPi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"t", ",", "r"}], "]"}], "-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{
        SuperscriptBox["\[CapitalPi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      RowBox[{"2", "+", "r"}]], "+", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{
        SuperscriptBox["\[CapitalPhi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      RowBox[{"2", "+", "r"}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[CapitalPi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}], "\[Equal]", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"\[CapitalPi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
     FractionBox[
      RowBox[{"8", " ", 
       RowBox[{"\[CapitalPi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      RowBox[{"r", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"2", "+", "r"}], ")"}], "2"]}]], "+", 
     FractionBox[
      RowBox[{"6", " ", 
       RowBox[{"\[CapitalPhi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
     FractionBox[
      RowBox[{"2", " ", "r", " ", 
       RowBox[{"\[CapitalPhi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
     FractionBox[
      RowBox[{"4", " ", 
       RowBox[{
        SuperscriptBox["\[CapitalPi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
     FractionBox[
      RowBox[{"2", " ", "r", " ", 
       RowBox[{
        SuperscriptBox["\[CapitalPi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
     FractionBox[
      RowBox[{"2", " ", "r", " ", 
       RowBox[{
        SuperscriptBox["\[CapitalPhi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       RowBox[{
        SuperscriptBox["\[CapitalPhi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]]}]}], ",", 
   RowBox[{
    RowBox[{"\[CapitalPi]", "[", 
     RowBox[{"0", ",", "r"}], "]"}], "\[Equal]", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         SuperscriptBox["r", "2"]}]]}], 
      SuperscriptBox["r", "2"]], "+", 
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SuperscriptBox["r", "2"]}]], "r"], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SuperscriptBox["r", "2"]}]], " ", "r"}]}]}], ",", 
   RowBox[{
    RowBox[{"\[Phi]", "[", 
     RowBox[{"t", ",", "3"}], "]"}], "\[Equal]", "1"}], ",", 
   RowBox[{
    RowBox[{"\[CapitalPhi]", "[", 
     RowBox[{"0", ",", "r"}], "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       SuperscriptBox["r", "2"]}]], " ", "r"}]}], ",", 
   RowBox[{
    RowBox[{"\[CapitalPhi]", "[", 
     RowBox[{"t", ",", "2"}], "]"}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.844352014050808*^9, 3.8443520243152733`*^9}, {
   3.844352062768815*^9, 3.844352090463188*^9}, 3.844352399356584*^9, 
   3.844370362442384*^9},
 CellLabel->
  "Out[245]=",ExpressionUUID->"86e1ecf9-3571-4417-ac15-f9893ab0b30b"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.844352612327735*^9, 3.844352656874927*^9}},
 CellLabel->
  "In[246]:=",ExpressionUUID->"9bc9e777-eb73-48c8-9013-95a438b96c1b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"pdesAfterSubstitution", "[", 
   RowBox[{"[", 
    RowBox[{"3", ";;", "4"}], "]"}], "]"}], "  ", "/.", " ", 
  RowBox[{"t", "->", " ", "0", " "}]}]], "Input",
 CellChangeTimes->{{3.844352621301752*^9, 3.844352624138741*^9}, {
  3.8443526682447653`*^9, 3.8443526777485743`*^9}, {3.8443527096222897`*^9, 
  3.844352711966017*^9}},
 CellLabel->
  "In[247]:=",ExpressionUUID->"7a1f6268-1f0a-4757-92c3-01395ab49268"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalPhi]", "[", 
     RowBox[{"0", ",", "r"}], "]"}], "\[Equal]", 
    RowBox[{
     SuperscriptBox["\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"0", ",", "r"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"\[CapitalPi]", "[", 
     RowBox[{"0", ",", "r"}], "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"0", ",", "r"}], "]"}]}], "r"]}], "+", 
     RowBox[{
      SuperscriptBox["\[Phi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"0", ",", "r"}], "]"}], "+", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{
        SuperscriptBox["\[Phi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"0", ",", "r"}], "]"}]}], "r"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.844352624563004*^9, {3.8443526691784267`*^9, 3.844352678043243*^9}, 
   3.844352712270797*^9, 3.844370362494804*^9},
 CellLabel->
  "Out[247]=",ExpressionUUID->"b38b553e-5b92-4fdf-96c5-4c8b0477b6e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ics1", " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D", "[", " ", 
   RowBox[{"ics1", "  ", ",", " ", "r"}], " ", "]"}], " ", "/.", " ", 
  RowBox[{"Equal", "->", " ", "Rule", " "}]}]}], "Input",
 CellChangeTimes->{{3.844352690405843*^9, 3.8443527627116623`*^9}, {
  3.844352819744141*^9, 3.844352821871601*^9}},
 CellLabel->
  "In[248]:=",ExpressionUUID->"425f2845-d3ff-4954-bc38-4182f57a95db"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Phi]", "[", 
   RowBox[{"0", ",", "r"}], "]"}], "\[Equal]", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    SuperscriptBox["r", "2"]}]]}]], "Output",
 CellChangeTimes->{{3.844352691444695*^9, 3.8443527239035378`*^9}, 
   3.844352762963879*^9, 3.844352822089939*^9, 3.84437036250918*^9},
 CellLabel->
  "Out[248]=",ExpressionUUID->"91a28601-55f1-4a76-8cb1-d7e68c0809b1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[Phi]", 
    TagBox[
     RowBox[{"(", 
      RowBox[{"0", ",", "1"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"0", ",", "r"}], "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{"-", "2"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox["r", "2"]}]], " ", "r"}]}]], "Output",
 CellChangeTimes->{{3.844352691444695*^9, 3.8443527239035378`*^9}, 
   3.844352762963879*^9, 3.844352822089939*^9, 3.844370362512162*^9},
 CellLabel->
  "Out[249]=",ExpressionUUID->"578f97f7-3c7f-41c3-9f56-223e08bc383d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Solve", "[", " ", 
         RowBox[{
          RowBox[{"(", " ", 
           RowBox[{"ics2", " ", "/.", " ", 
            RowBox[{"(", " ", 
             RowBox[{
              RowBox[{"D", "[", " ", 
               RowBox[{"ics1", "  ", ",", " ", "r"}], " ", "]"}], " ", "/.", 
              " ", 
              RowBox[{"Equal", "->", " ", "Rule"}]}], "    ", ")"}]}], "  ", 
           ")"}], " ", ",", " ", 
          RowBox[{
           SuperscriptBox["\[Phi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"0", ",", "r"}], "]"}]}], " ", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "  ", "//", " ", "Expand"}], " ", "//",
      " ", "Apart"}], " ", "//", " ", "Expand"}], " ", ")"}], " ", "/.", 
  RowBox[{"(", " ", 
   RowBox[{"ics1", "   ", "/.", " ", 
    RowBox[{"Equal", "->", " ", "Rule"}]}], "  ", ")"}], " "}]], "Input",
 CellChangeTimes->{{3.844352734286077*^9, 3.844352845599844*^9}},
 CellLabel->
  "In[250]:=",ExpressionUUID->"70f7be95-48f3-4cdb-a48e-d575d7e401a9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[Phi]", 
    TagBox[
     RowBox[{"(", 
      RowBox[{"1", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"0", ",", "r"}], "]"}], "\[Rule]", 
  RowBox[{
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      SuperscriptBox["r", "2"]}]], "r"], "-", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      SuperscriptBox["r", "2"]}]], " ", "r"}]}]}]], "Output",
 CellChangeTimes->{{3.844352732638427*^9, 3.8443527416015043`*^9}, {
   3.8443527722002163`*^9, 3.84435284582124*^9}, 3.8443703625360403`*^9},
 CellLabel->
  "Out[250]=",ExpressionUUID->"7ac27cf7-5986-455b-8c74-148b4aa6eb3f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "newICS", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newICS", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"D", "[", " ", 
        RowBox[{"ics1", "  ", ",", " ", "r"}], " ", "]"}], " ", "/.", " ", 
       RowBox[{"Equal", "->", " ", "Rule"}]}], " ", ")"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"Solve", "[", " ", 
             RowBox[{
              RowBox[{"(", " ", 
               RowBox[{"ics2", " ", "/.", " ", 
                RowBox[{"(", " ", 
                 RowBox[{
                  RowBox[{"D", "[", " ", 
                   RowBox[{"ics1", "  ", ",", " ", "r"}], " ", "]"}], " ", "/.",
                   " ", 
                  RowBox[{"Equal", "->", " ", "Rule"}]}], "    ", ")"}]}], 
               "  ", ")"}], " ", ",", " ", 
              RowBox[{
               SuperscriptBox["\[Phi]", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"1", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"0", ",", "r"}], "]"}]}], " ", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "  ", "//", " ", "Expand"}], " ", "//",
          " ", "Apart"}], " ", "//", " ", "Expand"}], " ", ")"}], " ", "/.", 
      RowBox[{"(", " ", 
       RowBox[{"ics1", "   ", "/.", " ", 
        RowBox[{"Equal", "->", " ", "Rule"}]}], "  ", ")"}]}]}], " ", 
    "\[IndentingNewLine]", "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"newICS", " ", "//", " ", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.84435285251604*^9, 3.8443528998074713`*^9}},
 CellLabel->
  "In[251]:=",ExpressionUUID->"ccf2a8b3-396c-4290-87e7-71ba8103836a"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Phi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"0", ",", "r"}], "]"}], "\[Rule]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          SuperscriptBox["r", "2"]}]], " ", "r"}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Phi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"0", ",", "r"}], "]"}], "\[Rule]", 
       RowBox[{
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           SuperscriptBox["r", "2"]}]], "r"], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           SuperscriptBox["r", "2"]}]], " ", "r"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.844352900064032*^9, 3.844370362562595*^9},
 CellLabel->
  "Out[253]//TableForm=",ExpressionUUID->"192efab3-347b-4e7f-975e-\
d5f7d9dddaac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "newSystemICS", "]"}], "\[IndentingNewLine]", 
 RowBox[{"newSystemICS", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"pdesAfterSubstitution", "[", 
         RowBox[{"[", 
          RowBox[{"3", ";;", "4"}], "]"}], "]"}], "  ", "/.", " ", 
        RowBox[{"t", "->", " ", "0"}]}], "  ", ")"}], " ", "/.", " ", 
      "newICS"}], "   ", "//", " ", "Expand"}], " ", "//", " ", "Apart"}], 
   " ", "//", " ", "Expand", " "}]}]}], "Input",
 CellChangeTimes->{{3.8443529283932343`*^9, 3.844352963683791*^9}},
 CellLabel->
  "In[254]:=",ExpressionUUID->"005d163e-59f4-46d7-8537-bbf2f0f3a6fb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalPhi]", "[", 
     RowBox[{"0", ",", "r"}], "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       SuperscriptBox["r", "2"]}]], " ", "r"}]}], ",", 
   RowBox[{
    RowBox[{"\[CapitalPi]", "[", 
     RowBox[{"0", ",", "r"}], "]"}], "\[Equal]", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         SuperscriptBox["r", "2"]}]]}], 
      SuperscriptBox["r", "2"]], "+", 
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SuperscriptBox["r", "2"]}]], "r"], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SuperscriptBox["r", "2"]}]], " ", "r"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8443529241013527`*^9, 3.844352964626886*^9}, 
   3.844370362608639*^9},
 CellLabel->
  "Out[255]=",ExpressionUUID->"523229f3-1b78-494a-a821-5c5295476c4f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"Union", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pdesAfterSubstitution", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "2"}], "]"}], "]"}], "}"}], ",", " ", 
    "newSystemICS"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.844353031632771*^9, 3.8443530592765408`*^9}},
 CellLabel->
  "In[256]:=",ExpressionUUID->"11949d89-051c-498d-86b5-0ff607a351dd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalPi]", "[", 
     RowBox[{"0", ",", "r"}], "]"}], "\[Equal]", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         SuperscriptBox["r", "2"]}]]}], 
      SuperscriptBox["r", "2"]], "+", 
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SuperscriptBox["r", "2"]}]], "r"], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SuperscriptBox["r", "2"]}]], " ", "r"}]}]}], ",", 
   RowBox[{
    RowBox[{"\[CapitalPhi]", "[", 
     RowBox[{"0", ",", "r"}], "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       SuperscriptBox["r", "2"]}]], " ", "r"}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[CapitalPhi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"\[CapitalPi]", "[", 
       RowBox[{"t", ",", "r"}], "]"}]}], "-", 
     FractionBox[
      RowBox[{"r", " ", 
       RowBox[{"\[CapitalPi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]], "-", 
     FractionBox[
      RowBox[{"r", " ", 
       RowBox[{"\[CapitalPi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}]}]], "-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"\[CapitalPhi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
     RowBox[{
      SuperscriptBox["\[CapitalPi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"t", ",", "r"}], "]"}], "-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{
        SuperscriptBox["\[CapitalPi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      RowBox[{"2", "+", "r"}]], "+", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{
        SuperscriptBox["\[CapitalPhi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      RowBox[{"2", "+", "r"}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[CapitalPi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}], "\[Equal]", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"\[CapitalPi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
     FractionBox[
      RowBox[{"8", " ", 
       RowBox[{"\[CapitalPi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      RowBox[{"r", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"2", "+", "r"}], ")"}], "2"]}]], "+", 
     FractionBox[
      RowBox[{"6", " ", 
       RowBox[{"\[CapitalPhi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
     FractionBox[
      RowBox[{"2", " ", "r", " ", 
       RowBox[{"\[CapitalPhi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
     FractionBox[
      RowBox[{"4", " ", 
       RowBox[{
        SuperscriptBox["\[CapitalPi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
     FractionBox[
      RowBox[{"2", " ", "r", " ", 
       RowBox[{
        SuperscriptBox["\[CapitalPi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
     FractionBox[
      RowBox[{"2", " ", "r", " ", 
       RowBox[{
        SuperscriptBox["\[CapitalPhi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       RowBox[{
        SuperscriptBox["\[CapitalPhi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.84435305111419*^9, 3.844353059542179*^9}, 
   3.844370362664576*^9},
 CellLabel->
  "Out[256]=",ExpressionUUID->"53f3a3f3-62f3-4988-90fb-ef6d1ab9e96d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NDSolve", "[", " ", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"Union", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pdesAfterSubstitution", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "2"}], "]"}], "]"}], "}"}], ",", " ", 
       "newSystemICS"}], "]"}], "]"}], " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"r", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], " ", "]"}], " "}]], "Input",
 CellChangeTimes->{{3.844352995998933*^9, 3.844353021820764*^9}, {
  3.844353073791711*^9, 3.844353082018176*^9}},
 CellLabel->
  "In[257]:=",ExpressionUUID->"cabc5d9a-c510-4848-854a-7651c777a01d"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "underdet", 
   "\"There are more dependent variables, \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"\[CapitalPi]\\\", \\\"[\\\", RowBox[{\\\"t\\\", \
\\\",\\\", \\\"r\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"\[CapitalPhi]\\\", \\\"[\\\", RowBox[{\\\"t\\\", \\\",\\\", \\\"r\
\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{SuperscriptBox[\\\"\[CapitalPi]\\\", \
TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \
\\\")\\\"}], Derivative], Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\
\\\"t\\\", \\\",\\\", \\\"r\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{SuperscriptBox[\\\"\[CapitalPhi]\\\", TagBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"t\\\", \\\",\\\", \
\\\"r\\\"}], \\\"]\\\"}]}], \\\"}\\\"}]\\), than equations, so the system is \
underdetermined.\"", 2, 257, 4, 23644529693578461969, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8443703628111687`*^9},
 CellLabel->
  "During evaluation of \
In[257]:=",ExpressionUUID->"905742ef-35b1-4542-b834-c2d17b0aed99"],

Cell[BoxData[
 RowBox[{"NDSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[CapitalPi]", "[", 
       RowBox[{"0", ",", "r"}], "]"}], "\[Equal]", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           SuperscriptBox["r", "2"]}]]}], 
        SuperscriptBox["r", "2"]], "+", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          SuperscriptBox["r", "2"]}]], "r"], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          SuperscriptBox["r", "2"]}]], " ", "r"}]}]}], ",", 
     RowBox[{
      RowBox[{"\[CapitalPhi]", "[", 
       RowBox[{"0", ",", "r"}], "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         SuperscriptBox["r", "2"]}]], " ", "r"}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[CapitalPhi]", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"t", ",", "r"}], "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"\[CapitalPi]", "[", 
         RowBox[{"t", ",", "r"}], "]"}]}], "-", 
       FractionBox[
        RowBox[{"r", " ", 
         RowBox[{"\[CapitalPi]", "[", 
          RowBox[{"t", ",", "r"}], "]"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "+", "r"}], ")"}], "2"]], "-", 
       FractionBox[
        RowBox[{"r", " ", 
         RowBox[{"\[CapitalPi]", "[", 
          RowBox[{"t", ",", "r"}], "]"}]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "r"}], ")"}]}]], "-", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"\[CapitalPhi]", "[", 
          RowBox[{"t", ",", "r"}], "]"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
       RowBox[{
        SuperscriptBox["\[CapitalPi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}], "-", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{
          SuperscriptBox["\[CapitalPi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}]}], 
        RowBox[{"2", "+", "r"}]], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{
          SuperscriptBox["\[CapitalPhi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}]}], 
        RowBox[{"2", "+", "r"}]]}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[CapitalPi]", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"t", ",", "r"}], "]"}], "\[Equal]", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"\[CapitalPi]", "[", 
          RowBox[{"t", ",", "r"}], "]"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
       FractionBox[
        RowBox[{"8", " ", 
         RowBox[{"\[CapitalPi]", "[", 
          RowBox[{"t", ",", "r"}], "]"}]}], 
        RowBox[{"r", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", "+", "r"}], ")"}], "2"]}]], "+", 
       FractionBox[
        RowBox[{"6", " ", 
         RowBox[{"\[CapitalPhi]", "[", 
          RowBox[{"t", ",", "r"}], "]"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
       FractionBox[
        RowBox[{"2", " ", "r", " ", 
         RowBox[{"\[CapitalPhi]", "[", 
          RowBox[{"t", ",", "r"}], "]"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
       FractionBox[
        RowBox[{"4", " ", 
         RowBox[{
          SuperscriptBox["\[CapitalPi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
       FractionBox[
        RowBox[{"2", " ", "r", " ", 
         RowBox[{
          SuperscriptBox["\[CapitalPi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
       FractionBox[
        RowBox[{"2", " ", "r", " ", 
         RowBox[{
          SuperscriptBox["\[CapitalPhi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         RowBox[{
          SuperscriptBox["\[CapitalPhi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "+", "r"}], ")"}], "2"]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.844370362814842*^9},
 CellLabel->
  "Out[257]=",ExpressionUUID->"cbd8f080-91e3-4459-b0c3-192be0463822"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "eq27", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"to", " ", "be", " ", "imposed", " ", "at", " ", "r"}], " ", "=", 
    " ", "R"}], " ", "*)"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"eq27", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", " ", 
     RowBox[{
      RowBox[{"r", " ", 
       RowBox[{"\[Phi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], " ", ",", " ", "t"}], " ", "]"}], 
    "  ", "+", " ", 
    RowBox[{
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"\[Beta]", "[", "r", "]"}]}], " ", "+", " ", 
       FractionBox[
        RowBox[{"\[Alpha]", "[", "r", "]"}], 
        RowBox[{"a", "[", "r", "]"}]]}], ")"}], " ", 
     RowBox[{"D", "[", " ", 
      RowBox[{
       RowBox[{"r", " ", 
        RowBox[{"\[Phi]", "[", 
         RowBox[{"t", ",", "r"}], "]"}]}], " ", ",", " ", "r"}], " ", 
      "]"}]}]}], "  ", "==", " ", "0", " "}]}]}], "Input",
 CellChangeTimes->{{3.8443532335511303`*^9, 3.844353319421434*^9}},
 CellLabel->
  "In[258]:=",ExpressionUUID->"35d320e1-e1f5-4637-8c14-3ff2d96ee7d9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"\[Alpha]", "[", "r", "]"}], 
       RowBox[{"a", "[", "r", "]"}]], "-", 
      RowBox[{"\[Beta]", "[", "r", "]"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Phi]", "[", 
       RowBox[{"t", ",", "r"}], "]"}], "+", 
      RowBox[{"r", " ", 
       RowBox[{
        SuperscriptBox["\[Phi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}]}], ")"}]}], "+", 
   RowBox[{"r", " ", 
    RowBox[{
     SuperscriptBox["\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{
  3.844353247933729*^9, {3.844353282704132*^9, 3.8443533198206367`*^9}, 
   3.844370362832693*^9},
 CellLabel->
  "Out[259]=",ExpressionUUID->"de6d00e7-a0a7-4f27-8b9d-3d0a05ea2195"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eq27", "   ", "/.", " ", "aAlphaBetaReplace"}], "   ", "//", " ", 
  "Expand", " "}]], "Input",
 CellChangeTimes->{{3.844353321896352*^9, 3.844353357333447*^9}},
 CellLabel->
  "In[260]:=",ExpressionUUID->"e1b4e368-580b-4cc4-b929-260ee4c5cb52"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"\[Phi]", "[", 
       RowBox[{"t", ",", "r"}], "]"}]}], 
     RowBox[{"2", "+", "r"}]]}], "+", 
   FractionBox[
    RowBox[{"r", " ", 
     RowBox[{"\[Phi]", "[", 
      RowBox[{"t", ",", "r"}], "]"}]}], 
    RowBox[{"2", "+", "r"}]], "-", 
   FractionBox[
    RowBox[{"2", " ", "r", " ", 
     RowBox[{
      SuperscriptBox["\[Phi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"t", ",", "r"}], "]"}]}], 
    RowBox[{"2", "+", "r"}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["r", "2"], " ", 
     RowBox[{
      SuperscriptBox["\[Phi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"t", ",", "r"}], "]"}]}], 
    RowBox[{"2", "+", "r"}]], "+", 
   RowBox[{"r", " ", 
    RowBox[{
     SuperscriptBox["\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{{3.844353324467968*^9, 3.8443533575772142`*^9}, 
   3.8443703628548937`*^9},
 CellLabel->
  "Out[260]=",ExpressionUUID->"44af5e34-ef48-4146-9208-752721fa24e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq31", "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq31", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", " ", 
    RowBox[{
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"D", "[", " ", 
        RowBox[{
         RowBox[{"r", " ", 
          RowBox[{"\[Phi]", "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], ",", "t"}], "  ", "]"}], " ", 
       "-", " ", 
       RowBox[{"D", "[", " ", 
        RowBox[{
         RowBox[{"r", " ", 
          RowBox[{"\[Phi]", "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], " ", ",", " ", "r"}], " ", 
        "]"}]}], "  ", ")"}], " ", "/.", " ", 
     RowBox[{"{", 
      RowBox[{"t", "->", " ", "0"}], " ", "}"}]}], " ", ")"}], " ", "==", " ",
    "0", "  "}]}]}], "Input",
 CellChangeTimes->{{3.8443534010758057`*^9, 3.844353467924467*^9}, {
  3.844353578834382*^9, 3.8443535793135557`*^9}},
 CellLabel->
  "In[261]:=",ExpressionUUID->"e884c3b5-9aa3-49e0-8747-c09151a2523e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    RowBox[{"\[Phi]", "[", 
     RowBox[{"0", ",", "r"}], "]"}]}], "-", 
   RowBox[{"r", " ", 
    RowBox[{
     SuperscriptBox["\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"0", ",", "r"}], "]"}]}], "+", 
   RowBox[{"r", " ", 
    RowBox[{
     SuperscriptBox["\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"0", ",", "r"}], "]"}]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{{3.8443534026399593`*^9, 3.844353468355966*^9}, 
   3.844353579796332*^9, 3.844370362925558*^9},
 CellLabel->
  "Out[262]=",ExpressionUUID->"bac7b271-a3bc-49e6-b9a7-cd98ef46d4a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"Solve", "[", " ", 
     RowBox[{"eq31", " ", ",", " ", 
      RowBox[{
       SuperscriptBox["\[Phi]", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"0", ",", "r"}], "]"}]}], " ", "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.844353477608369*^9, 3.84435349499113*^9}},
 CellLabel->
  "In[263]:=",ExpressionUUID->"9ebc9952-2ccd-49b9-89dd-3ce7dcaca80e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[Phi]", 
    TagBox[
     RowBox[{"(", 
      RowBox[{"0", ",", "1"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"0", ",", "r"}], "]"}], "\[Rule]", 
  FractionBox[
   RowBox[{
    RowBox[{"-", 
     RowBox[{"\[Phi]", "[", 
      RowBox[{"0", ",", "r"}], "]"}]}], "+", 
    RowBox[{"r", " ", 
     RowBox[{
      SuperscriptBox["\[Phi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"0", ",", "r"}], "]"}]}]}], "r"]}]], "Output",
 CellChangeTimes->{{3.844353488359404*^9, 3.844353495233458*^9}, 
   3.844353583133492*^9, 3.8443703629615927`*^9},
 CellLabel->
  "Out[263]=",ExpressionUUID->"f78baae8-1008-453a-8076-5fb7db3be7c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ics1", "  ", "/.", " ", 
  RowBox[{"Equal", "->", " ", "Rule", " "}]}]], "Input",
 CellChangeTimes->{{3.8443535110635767`*^9, 3.844353519852233*^9}},
 CellLabel->
  "In[264]:=",ExpressionUUID->"146e69cb-7eda-4694-8eb0-76e5ea874022"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Phi]", "[", 
   RowBox[{"0", ",", "r"}], "]"}], "\[Rule]", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    SuperscriptBox["r", "2"]}]]}]], "Output",
 CellChangeTimes->{{3.84435351201796*^9, 3.844353520097127*^9}, 
   3.844370362975194*^9},
 CellLabel->
  "Out[264]=",ExpressionUUID->"4094b7ad-0366-40b4-b68b-cd76f8ebf6c1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Solve", "[", " ", 
        RowBox[{"eq31", " ", ",", " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"0", ",", "r"}], "]"}]}], " ", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "  ", "/.", " ", 
     RowBox[{"(", " ", 
      RowBox[{"ics1", "  ", "/.", " ", 
       RowBox[{"Equal", "->", " ", "Rule"}]}], "  ", ")"}]}], "  ", "//", " ",
     "Expand"}], " ", "//", " ", "Apart"}], " ", "//", " ", "Expand", 
  " "}]], "Input",
 CellChangeTimes->{{3.844353530196535*^9, 3.8443535479964542`*^9}},
 CellLabel->
  "In[265]:=",ExpressionUUID->"c128853f-b26f-4507-89cc-2ca017ed756c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[Phi]", 
    TagBox[
     RowBox[{"(", 
      RowBox[{"0", ",", "1"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"0", ",", "r"}], "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       SuperscriptBox["r", "2"]}]], "r"]}], "+", 
   RowBox[{
    SuperscriptBox["\[Phi]", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"0", ",", "r"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.844353537425806*^9, 3.8443535482543163`*^9}, 
   3.844370363010837*^9},
 CellLabel->
  "Out[265]=",ExpressionUUID->"b5447e04-f673-41d4-a547-6fc26f547cd3"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"Solve", "[", " ", 
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{"ics2", " ", "/.", " ", 
          RowBox[{"(", " ", 
           RowBox[{"ics1", " ", "/.", " ", 
            RowBox[{"Equal", "->", " ", "Rule"}]}], " ", ")"}]}], "  ", "/.", 
         " ", 
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"D", "[", "  ", 
            RowBox[{"ics1", "   ", ",", " ", "r"}], " ", "]"}], "  ", "/.", 
           " ", 
           RowBox[{"Equal", "->", " ", "Rule"}]}], "  ", ")"}]}], "   ", 
        ")"}], " ", ",", " ", 
       RowBox[{
        SuperscriptBox["\[Phi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"0", ",", "r"}], "]"}]}], " ", "]"}], " ", "]"}], " ", "//", 
    " ", "Expand"}], " ", "//", " ", "Apart"}], " ", "//", " ", "Expand", 
  " "}]], "Input",
 CellChangeTimes->{{3.844371069145652*^9, 3.844371069654747*^9}, {
  3.844371116007798*^9, 3.844371116415206*^9}, {3.8443711618299847`*^9, 
  3.844371196471263*^9}},
 CellLabel->
  "In[302]:=",ExpressionUUID->"e6019c05-f8e8-46e6-8be4-3c54688502e4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Phi]", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"0", ",", "r"}], "]"}], "\[Rule]", 
   RowBox[{
    FractionBox[
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       SuperscriptBox["r", "2"]}]], "r"], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       SuperscriptBox["r", "2"]}]], " ", "r"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.844371168645252*^9, 3.844371196737678*^9}},
 CellLabel->
  "Out[302]=",ExpressionUUID->"590344d5-cfe7-416c-9866-72dcf7de41fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"(", " ", 
   RowBox[{"ics1", " ", "/.", " ", 
    RowBox[{"Equal", "->", " ", "Rule"}]}], " ", ")"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", " ", 
   RowBox[{
    RowBox[{"D", "[", "  ", 
     RowBox[{"ics1", "   ", ",", " ", "r"}], " ", "]"}], "  ", "/.", " ", 
    RowBox[{"Equal", "->", " ", "Rule"}]}], "  ", ")"}], " "}]}], "Input",
 CellChangeTimes->{{3.844371096881543*^9, 3.844371154607339*^9}},
 CellLabel->
  "In[298]:=",ExpressionUUID->"681d186c-2457-4626-bb82-7caf589a9fae"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Phi]", "[", 
   RowBox[{"0", ",", "r"}], "]"}], "\[Rule]", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    SuperscriptBox["r", "2"]}]]}]], "Output",
 CellChangeTimes->{{3.844371141757406*^9, 3.844371154920203*^9}},
 CellLabel->
  "Out[298]=",ExpressionUUID->"670c350f-5d4c-4adc-bcd7-f1cb3b3bda36"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[Phi]", 
    TagBox[
     RowBox[{"(", 
      RowBox[{"0", ",", "1"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"0", ",", "r"}], "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{"-", "2"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox["r", "2"]}]], " ", "r"}]}]], "Output",
 CellChangeTimes->{{3.844371141757406*^9, 3.844371154925033*^9}},
 CellLabel->
  "Out[299]=",ExpressionUUID->"8f531bb0-5380-4a8b-809c-9ab034b49ad9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "phiInitial", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phiInitial", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{"ics1", " ", "/.", " ", 
        RowBox[{"Equal", "->", " ", "Rule"}]}], " ", ")"}], "  ", ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"D", "[", "  ", 
         RowBox[{"ics1", "   ", ",", " ", "r"}], " ", "]"}], "  ", "/.", " ", 
        
        RowBox[{"Equal", "->", " ", "Rule"}]}], "  ", ")"}], "  ", ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"Solve", "[", " ", 
           RowBox[{
            RowBox[{"(", " ", 
             RowBox[{
              RowBox[{"ics2", " ", "/.", " ", 
               RowBox[{"(", " ", 
                RowBox[{"ics1", " ", "/.", " ", 
                 RowBox[{"Equal", "->", " ", "Rule"}]}], " ", ")"}]}], "  ", "/.",
               " ", 
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{"D", "[", "  ", 
                 RowBox[{"ics1", "   ", ",", " ", "r"}], " ", "]"}], "  ", "/.",
                 " ", 
                RowBox[{"Equal", "->", " ", "Rule"}]}], "  ", ")"}]}], "   ", 
             ")"}], " ", ",", " ", 
            RowBox[{
             SuperscriptBox["\[Phi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"0", ",", "r"}], "]"}]}], " ", "]"}], " ", "]"}], " ", "//",
          " ", "Expand"}], " ", "//", " ", "Apart"}], " ", "//", " ", 
       "Expand"}]}], "  ", "\[IndentingNewLine]", "}"}], "  ", "//", " ", 
    "Flatten"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"phiInitial", "  ", "//", " ", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.844371206641419*^9, 3.844371255351411*^9}, {
  3.844371431832485*^9, 3.844371433647935*^9}},
 CellLabel->
  "In[312]:=",ExpressionUUID->"dca62657-583c-4726-958e-c5de052baf3a"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"\[Phi]", "[", 
        RowBox[{"0", ",", "r"}], "]"}], "\[Rule]", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         SuperscriptBox["r", "2"]}]]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Phi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"0", ",", "r"}], "]"}], "\[Rule]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          SuperscriptBox["r", "2"]}]], " ", "r"}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Phi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"0", ",", "r"}], "]"}], "\[Rule]", 
       RowBox[{
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           SuperscriptBox["r", "2"]}]], "r"], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           SuperscriptBox["r", "2"]}]], " ", "r"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8443712556663303`*^9, 3.844371433845602*^9},
 CellLabel->
  "Out[314]//TableForm=",ExpressionUUID->"9d9ef914-5602-4602-b159-\
2f8cc565ee9d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pdesAfterSubstitution", "[", 
  RowBox[{"[", 
   RowBox[{"3", ";;", "4"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8443713020658817`*^9, 3.844371314866438*^9}},
 CellLabel->
  "In[308]:=",ExpressionUUID->"e8b2fa0c-6773-48cf-bc7b-c1c6a4b99220"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalPhi]", "[", 
     RowBox[{"t", ",", "r"}], "]"}], "\[Equal]", 
    RowBox[{
     SuperscriptBox["\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"\[CapitalPi]", "[", 
     RowBox[{"t", ",", "r"}], "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "r"}], "]"}]}], "r"]}], "+", 
     RowBox[{
      SuperscriptBox["\[Phi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"t", ",", "r"}], "]"}], "+", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{
        SuperscriptBox["\[Phi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], "r"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.844371304596121*^9, 3.844371315132126*^9}},
 CellLabel->
  "Out[308]=",ExpressionUUID->"ecdc3f54-a74a-44f8-8432-933fb30580ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eq27", " "}]], "Input",
 CellChangeTimes->{{3.844371295729698*^9, 3.8443712963031054`*^9}},
 CellLabel->
  "In[306]:=",ExpressionUUID->"42c9a135-a9d8-4965-b0ad-3f546c95e881"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"\[Alpha]", "[", "r", "]"}], 
       RowBox[{"a", "[", "r", "]"}]], "-", 
      RowBox[{"\[Beta]", "[", "r", "]"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Phi]", "[", 
       RowBox[{"t", ",", "r"}], "]"}], "+", 
      RowBox[{"r", " ", 
       RowBox[{
        SuperscriptBox["\[Phi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}]}], ")"}]}], "+", 
   RowBox[{"r", " ", 
    RowBox[{
     SuperscriptBox["\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.8443712965824833`*^9},
 CellLabel->
  "Out[306]=",ExpressionUUID->"d0d5f210-89a7-49f8-8a1e-5b347341c35b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pdesAfterSubstitution", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.844371334407215*^9, 3.8443713363353863`*^9}},
 CellLabel->
  "In[309]:=",ExpressionUUID->"524e8888-b640-4a30-811f-0557a11c6e12"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[CapitalPhi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"\[CapitalPi]", "[", 
       RowBox[{"t", ",", "r"}], "]"}]}], "-", 
     FractionBox[
      RowBox[{"r", " ", 
       RowBox[{"\[CapitalPi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]], "-", 
     FractionBox[
      RowBox[{"r", " ", 
       RowBox[{"\[CapitalPi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}]}]], "-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"\[CapitalPhi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
     RowBox[{
      SuperscriptBox["\[CapitalPi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"t", ",", "r"}], "]"}], "-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{
        SuperscriptBox["\[CapitalPi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      RowBox[{"2", "+", "r"}]], "+", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{
        SuperscriptBox["\[CapitalPhi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      RowBox[{"2", "+", "r"}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[CapitalPi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}], "\[Equal]", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"\[CapitalPi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
     FractionBox[
      RowBox[{"8", " ", 
       RowBox[{"\[CapitalPi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      RowBox[{"r", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"2", "+", "r"}], ")"}], "2"]}]], "+", 
     FractionBox[
      RowBox[{"6", " ", 
       RowBox[{"\[CapitalPhi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
     FractionBox[
      RowBox[{"2", " ", "r", " ", 
       RowBox[{"\[CapitalPhi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
     FractionBox[
      RowBox[{"4", " ", 
       RowBox[{
        SuperscriptBox["\[CapitalPi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
     FractionBox[
      RowBox[{"2", " ", "r", " ", 
       RowBox[{
        SuperscriptBox["\[CapitalPi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
     FractionBox[
      RowBox[{"2", " ", "r", " ", 
       RowBox[{
        SuperscriptBox["\[CapitalPhi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       RowBox[{
        SuperscriptBox["\[CapitalPhi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "r"}], ")"}], "2"]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8443713367459517`*^9},
 CellLabel->
  "Out[309]=",ExpressionUUID->"3936d592-26d2-4376-b9ad-1db31d63c10c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "newICSa", "]"}], "\[IndentingNewLine]", 
 RowBox[{"newICS1", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", " ", 
    RowBox[{
     RowBox[{"pdesAfterSubstitution", "[", 
      RowBox[{"[", 
       RowBox[{"3", ";;", "4"}], "]"}], "]"}], "  ", "/.", " ", 
     RowBox[{"{", 
      RowBox[{"t", "->", " ", "0"}], " ", "}"}]}], "  ", ")"}], " ", "/.", 
   " ", "phiInitial"}]}]}], "Input",
 CellChangeTimes->{{3.844371369191517*^9, 3.844371370639615*^9}, {
  3.844371417640037*^9, 3.844371469145277*^9}, {3.844371984415978*^9, 
  3.844371998055601*^9}},
 CellLabel->
  "In[338]:=",ExpressionUUID->"b0411a7e-bc3b-4de7-9115-f7f1c5d6b03b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalPhi]", "[", 
     RowBox[{"0", ",", "r"}], "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       SuperscriptBox["r", "2"]}]], " ", "r"}]}], ",", 
   RowBox[{
    RowBox[{"\[CapitalPi]", "[", 
     RowBox[{"0", ",", "r"}], "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"4", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SuperscriptBox["r", "2"]}]]}], "+", 
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SuperscriptBox["r", "2"]}]], "r"], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SuperscriptBox["r", "2"]}]], " ", "r"}], "+", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            SuperscriptBox["r", "2"]}]], "r"], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            SuperscriptBox["r", "2"]}]], " ", "r"}]}], ")"}]}], "r"]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.844371370995166*^9, {3.844371421008501*^9, 3.844371477767333*^9}, {
   3.8443719925726757`*^9, 3.844371998485055*^9}},
 CellLabel->
  "Out[339]=",ExpressionUUID->"c713d0db-2ce8-4753-bc68-bc8a0a6066b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "newICS2", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newICS2", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[CapitalPhi]", "[", 
       RowBox[{"t", ",", "2"}], "]"}], " ", "==", " ", "1"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[CapitalPhi]", "[", 
       RowBox[{"t", ",", "3"}], "]"}], " ", "==", " ", "2"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[CapitalPi]", "[", 
       RowBox[{"t", ",", "2"}], "]"}], " ", "==", " ", "3"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[CapitalPi]", "[", 
       RowBox[{"t", ",", "3"}], "]"}], " ", "==", " ", "4"}]}], " ", 
    "\[IndentingNewLine]", "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"newICS2", "  ", "//", " ", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.844372000281521*^9, 3.8443720781994867`*^9}, {
  3.8443722185947*^9, 3.844372227936707*^9}},
 CellLabel->
  "In[346]:=",ExpressionUUID->"e0bb2274-374e-485b-917c-379e772b4d3d"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"\[CapitalPhi]", "[", 
        RowBox[{"t", ",", "2"}], "]"}], "\[Equal]", "1"}]},
     {
      RowBox[{
       RowBox[{"\[CapitalPhi]", "[", 
        RowBox[{"t", ",", "3"}], "]"}], "\[Equal]", "2"}]},
     {
      RowBox[{
       RowBox[{"\[CapitalPi]", "[", 
        RowBox[{"t", ",", "2"}], "]"}], "\[Equal]", "3"}]},
     {
      RowBox[{
       RowBox[{"\[CapitalPi]", "[", 
        RowBox[{"t", ",", "3"}], "]"}], "\[Equal]", "4"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8443720784520893`*^9, 3.844372228602227*^9},
 CellLabel->
  "Out[348]//TableForm=",ExpressionUUID->"2e7bba11-762e-4af4-be99-\
8d58e89a5238"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "sol", "]"}], "\[IndentingNewLine]", 
 RowBox[{"sol", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"NDSolve", "[", " ", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"pdesAfterSubstitution", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "2"}], "]"}], "]"}], " ", ",", " ", "newICS1", 
       " ", ",", " ", "newICS2"}], "}"}], "]"}], " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[CapitalPhi]", ",", "\[CapitalPi]"}], "}"}], " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"r", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], " ", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8443720976401978`*^9, 3.844372152039521*^9}, {
  3.844372247491804*^9, 3.844372254603059*^9}},
 CellLabel->
  "In[350]:=",ExpressionUUID->"3f195a3c-c5c5-4ddf-90e8-2c81adcde194"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ibcinc", 
   "\"Warning: boundary and initial conditions are inconsistent.\"", 2, 351, 
   11, 23644529693578461969, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8443721529562407`*^9, {3.844372231183198*^9, 3.8443722552460117`*^9}},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"f695314b-9347-4634-b9f0-d55a073cfc73"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "eerr", 
   "\"Warning: scaled local spatial error estimate of \
\\!\\(\\*RowBox[{\\\"90.53425645517282`\\\"}]\\) at \
\\!\\(\\*RowBox[{\\\"t\\\"}]\\) = \\!\\(\\*RowBox[{\\\"1.`\\\"}]\\) in the \
direction of independent variable \\!\\(\\*RowBox[{\\\"r\\\"}]\\) is much \
greater than the prescribed error tolerance. Grid spacing with \
\\!\\(\\*RowBox[{\\\"25\\\"}]\\) points may be too large to achieve the \
desired accuracy or precision. A singularity may have formed or a smaller \
grid spacing can be specified using the MaxStepSize or MinPoints method \
options.\"", 2, 351, 12, 23644529693578461969, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8443721529562407`*^9, {3.844372231183198*^9, 3.844372255418727*^9}},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"7845f862-1d6c-4466-885d-b353e3d7e8f5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[CapitalPhi]", "\[Rule]", 
     InterpretationBox[
      RowBox[{
       TagBox["InterpolatingFunction",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxOpener"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{
                   GrayLevel[0.6], 
                   AbsolutePointSize[5], 
                   PointBox[{1, 1}], 
                   PointBox[{2, 4}], 
                   PointBox[{3, 2}], 
                   PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                 False, Background -> GrayLevel[0.93], Frame -> True, 
                 FrameStyle -> Directive[
                   GrayLevel[0.7], 
                   Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2.`", ",", "3.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxCloser"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{
                   GrayLevel[0.6], 
                   AbsolutePointSize[5], 
                   PointBox[{1, 1}], 
                   PointBox[{2, 4}], 
                   PointBox[{3, 2}], 
                   PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                 False, Background -> GrayLevel[0.93], Frame -> True, 
                 FrameStyle -> Directive[
                   GrayLevel[0.7], 
                   Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2.`", ",", "3.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"3", ",", "4"}], "}"}], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      InterpolatingFunction[{{0., 1.}, {2., 3.}}, {
       5, 5, 1, {56, 25}, {4, 5}, 0, 0, 0, 0, Automatic, {}, {}, 
        False}, {CompressedData["
1:eJxTTMoPSmVkYGCwYECAxaL6Opl3S+0hdCuUnmpvFaD8kC9tAZS/1L4uJ0Ds
sdUGey2/zmmC7Vvtr+kfEnO4vMv+YEet93b+A/YXi6zfhVkcsn8Y83PCt4Qj
9h/dthtP6zxmz2hYes100wn7pfrOz17ynbb30hP8Njf7rP07nfusQSfO25+c
eo2rWeii/Ta3A6UlIZfsF39f+SB12mX7CSsme4ffuGJfG1m7zUPqmr3jnzB2
uajr9izzDSI+z7xhf8KRa+WJmzfte548/jlX8rb9/KcujSZxd+w3P1vKcXrR
Xfvjz9kmJD6/Z5/7ZTP3H9EH9o1z3i1u2fHAfoqLpg1v9EP7FW+Sr0z9+9B+
95R5OXILHtmva2fXWer02H5hVcFr7aeP7afk3ly1qf2JfXuCU5al1lP7H272
Re2nn9pn6tpUXc15Zn9L2LJJme+5vfcv067C9c/tp8TJbAwNemF/5xDTDcuv
L+xV1F/+k53x0j6n+7wqk/Ure69JZ9VO3Xtlrz7ztPqkptf2LAtOakSpvbF/
uOy4ptKpN/ahpto+F3Lf2p843JdXJ/jO3ibo0wSdre/s1z8I3Xwr4r19xIdV
kblr3ttDYu2DPQCEW9rh
        "], {2., 2.0416666666666665`, 
        2.0833333333333335`, 2.125, 2.1666666666666665`, 2.2083333333333335`, 
        2.25, 2.2916666666666665`, 2.3333333333333335`, 2.375, 
        2.4166666666666665`, 2.4583333333333335`, 2.5, 2.5416666666666665`, 
        2.5833333333333335`, 2.625, 2.6666666666666665`, 2.7083333333333335`, 
        2.75, 2.7916666666666665`, 2.8333333333333335`, 2.875, 
        2.9166666666666665`, 2.9583333333333335`, 3.}}, {
       Developer`PackedArrayForm, CompressedData["
1:eJwd2AErKGCyBuCz51rXlSRJkmQlSZIkSZIkSZIkSZIkSbKSZCVJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJOknSPudOPb/gna+Z+f5V/+/y1n/8+vXrP//89f/1
mwACCSKYEEIJI5wIIokimhhiiSOeBBJJIpkUUkkjnQwyySKbHHLJI58CCimi
mBJKKaOcCiqpopoaaqmjngYaaaKZFlppo50OOumimx566aOfAQYZYpgRRhlj
nAkmmWKaGWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wLLrni
mhtuueOeBx554pkXXnnjnQ/+8MkX3/zwSyP8JoBAgggmhFDCCCeCSKKIJoZY
4ogngUSSSCaFVNJIJ4NMssgmh1zyyKeAQooopoRSyiingkqqqKaGWuqop4FG
mmimhb9N3kY7HXTSRTc99NJHPwMMMsQwI4wyxjgTTDLFNDPMMsc8CyyyxDIr
rLLGOhtsssU2O+yyxz4HHHLEMSeccsY5F1xyxTU33HLHPQ888sQzL7zyxjsf
/OGTL7754e/j/00AgQQRTAihhBFOBJFEEU0MscQRTwKJJJFMCqmkkU4GmWSR
TQ655JFPAYUUUUwJpZRRTgWVVFFNDbXUUU8DjTTRTAuttNFOB5100U0PvfTR
zwCDDDHMCKOMMc4Ek0wxzQyzzDHPAossscwKq6yxzgabbLHNDrvssc8Bhxxx
zAmnnHHOBZdccc0Nt9xxzwOPPPHMC6+88c4Hf/jki29++PU/8ieAQIIIJoRQ
wggngkiiiCaGWOKIJ4FEkkgmhVTSSCeDTLLIJodc8singEKKKKaEUsoop4JK
qqimhlrqqKeBRppopoVW2ming0666KaHXvroZ4BBhhhmhFHGGGeCSaaYZoZZ
5phngUWWWGaFVdZYZ4NNtthmh1322OeAQ4445oRTzjjngkuuuOaGW+6454FH
nnjmhVfeeOeDP3zyxTc//B38vwkgkCCCCSGUMMKJIJIoookhljjiSSCRJJJJ
IZU00skgkyyyySGXPPIpoJAiiimhlDLKqaCSKqqpoZY66mmgkSaaaaGVNtrp
oJMuuumhlz76GWCQIYYZYZQxxplgkimmmWGWOeZZYJEllllhlTXW2WCTLbbZ
YZc99jngkCOOOeGUM8654JIrrrnhljvueeCRJ5554ZU33vngD5988c0Pv+yA
vwkgkCCCCSGUMMKJIJIoookhljjiSSCRJJJJIZU00skgkyyyySGXPPIpoJAi
iimhlDLKqaCSKqqpoZY66mmgkSaaaaGVNtrpoJMuuumhlz76GWCQIYYZYZQx
xplgkimmmWGWOeZZYJEllllhlTXW2WCTLbbZYZc99jngkCOOOeGUM8654JIr
rrnhljvueeCRJ5554ZU33vngD5988c0Pf5f+3wQQSBDBhBBKGOFEEEkU0cQQ
SxzxJJBIEsmkkEoa6WSQSRbZ5JBLHvkUUEgRxZRQShnlVFBJFdXUUEsd9TTQ
SBPNtNBKG+100EkX3fTQSx/9DDDIEMOMMMoY40wwyRTTzDDLHPMssMgSy6yw
yhrrbLDJFtvssMse+xxwyBHHnHDKGedccMkV19xwyx33PPDIE8+88Mob73zw
h0+++OaHX/8rfwIIJIhgQggljHAiiCSKaGKIJY54EkgkiWRSSCWNdDLIJIts
csglj3wKKKSIYkoopYxyKqikimpqqKWOehpopIlmWmiljXY66KSLbnropY9+
BhhkiGFGGGWMcSaYZIppZphljnkWWGSJZVZYZY11Nthki2122GWPfQ445Ihj
TjjljHMuuOSKa2645Y57HnjkiWdeeOWNdz74wydffPPD34P/NwEEEkQwIYQS
RjgRRBJFNDHEEkc8CSSSRDIppJJGOhlkkkU2OeSSRz4FFFJEMSWUUkY5FVRS
RTU11FJHPQ000kQzLbTSRjsddNJFNz300kc/AwwyxDAjjDLGOBNMMsU0M8wy
xzwLLLLEMiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkXXHLFNTfccsc9Dzzy
xDMvvPLGOx/84ZMvvvnh1//JnwACCSKYEEIJI5wIIokimhhiiSOeBBJJIpkU
UkkjnQwyySKbHHLJI58CCimimBJKKaOcCiqpopoaaqmjngYaaaKZFlppo50O
Oumimx566aOfAQYZYpgRRhljnAkmmWKaGWaZY54FFllimRVWWWOdDTbZYpsd
dtljnwMOOeKYE04545wLLrnimhtuueOeBx554pkXXnnjnQ/+8MkX3/zw97Pv
NwEEEkQwIYQSRjgRRBJFNDHEEkc8CSSSRDIppJJGOhlkkkU2OeSSRz4FFFJE
MSWUUkY5FVRSRTU11FJHPQ000kQzLbTSRjsddNJFNz300kc/AwwyxDAjjDLG
OBNMMsU0M8wyxzwLLLLEMiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkXXHLF
NTfccsc9DzzyxDMvvPLGfwG4SdFC
        "], CompressedData["
1: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
sA==
        "]}, {Automatic, Automatic}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"\[CapitalPi]", "\[Rule]", 
     InterpretationBox[
      RowBox[{
       TagBox["InterpolatingFunction",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxOpener"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{
                   GrayLevel[0.6], 
                   AbsolutePointSize[5], 
                   PointBox[{1, 1}], 
                   PointBox[{2, 4}], 
                   PointBox[{3, 2}], 
                   PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                 False, Background -> GrayLevel[0.93], Frame -> True, 
                 FrameStyle -> Directive[
                   GrayLevel[0.7], 
                   Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2.`", ",", "3.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxCloser"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{
                   GrayLevel[0.6], 
                   AbsolutePointSize[5], 
                   PointBox[{1, 1}], 
                   PointBox[{2, 4}], 
                   PointBox[{3, 2}], 
                   PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                 False, Background -> GrayLevel[0.93], Frame -> True, 
                 FrameStyle -> Directive[
                   GrayLevel[0.7], 
                   Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2.`", ",", "3.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"3", ",", "4"}], "}"}], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      InterpolatingFunction[{{0., 1.}, {2., 3.}}, {
       5, 5, 1, {56, 25}, {4, 5}, 0, 0, 0, 0, Automatic, {}, {}, 
        False}, {CompressedData["
1:eJxTTMoPSmVkYGCwYECAxaL6Opl3S+0hdCuUnmpvFaD8kC9tAZS/1L4uJ0Ds
sdUGey2/zmmC7Vvtr+kfEnO4vMv+YEet93b+A/YXi6zfhVkcsn8Y83PCt4Qj
9h/dthtP6zxmz2hYes100wn7pfrOz17ynbb30hP8Njf7rP07nfusQSfO25+c
eo2rWeii/Ta3A6UlIZfsF39f+SB12mX7CSsme4ffuGJfG1m7zUPqmr3jnzB2
uajr9izzDSI+z7xhf8KRa+WJmzfte548/jlX8rb9/KcujSZxd+w3P1vKcXrR
Xfvjz9kmJD6/Z5/7ZTP3H9EH9o1z3i1u2fHAfoqLpg1v9EP7FW+Sr0z9+9B+
95R5OXILHtmva2fXWer02H5hVcFr7aeP7afk3ly1qf2JfXuCU5al1lP7H272
Re2nn9pn6tpUXc15Zn9L2LJJme+5vfcv067C9c/tp8TJbAwNemF/5xDTDcuv
L+xV1F/+k53x0j6n+7wqk/Ure69JZ9VO3Xtlrz7ztPqkptf2LAtOakSpvbF/
uOy4ptKpN/ahpto+F3Lf2p843JdXJ/jO3ibo0wSdre/s1z8I3Xwr4r19xIdV
kblr3ttDYu2DPQCEW9rh
        "], {2., 2.0416666666666665`, 
        2.0833333333333335`, 2.125, 2.1666666666666665`, 2.2083333333333335`, 
        2.25, 2.2916666666666665`, 2.3333333333333335`, 2.375, 
        2.4166666666666665`, 2.4583333333333335`, 2.5, 2.5416666666666665`, 
        2.5833333333333335`, 2.625, 2.6666666666666665`, 2.7083333333333335`, 
        2.75, 2.7916666666666665`, 2.8333333333333335`, 2.875, 
        2.9166666666666665`, 2.9583333333333335`, 3.}}, {
       Developer`PackedArrayForm, CompressedData["
1:eJwd2AErKGCyBuCz51rXlSRJkmQlSZIkSZIkSZIkSZIkSbKSZCVJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJOknSPudOPb/gna+Z+f5V/+/y1n/8+vXrP//89f/1
mwACCSKYEEIJI5wIIokimhhiiSOeBBJJIpkUUkkjnQwyySKbHHLJI58CCimi
mBJKKaOcCiqpopoaaqmjngYaaaKZFlppo50OOumimx566aOfAQYZYpgRRhlj
nAkmmWKaGWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wLLrni
mhtuueOeBx554pkXXnnjnQ/+8MkX3/zwSyP8JoBAgggmhFDCCCeCSKKIJoZY
4ogngUSSSCaFVNJIJ4NMssgmh1zyyKeAQooopoRSyiingkqqqKaGWuqop4FG
mmimhb9N3kY7HXTSRTc99NJHPwMMMsQwI4wyxjgTTDLFNDPMMsc8CyyyxDIr
rLLGOhtsssU2O+yyxz4HHHLEMSeccsY5F1xyxTU33HLHPQ888sQzL7zyxjsf
/OGTL7754e/j/00AgQQRTAihhBFOBJFEEU0MscQRTwKJJJFMCqmkkU4GmWSR
TQ655JFPAYUUUUwJpZRRTgWVVFFNDbXUUU8DjTTRTAuttNFOB5100U0PvfTR
zwCDDDHMCKOMMc4Ek0wxzQyzzDHPAossscwKq6yxzgabbLHNDrvssc8Bhxxx
zAmnnHHOBZdccc0Nt9xxzwOPPPHMC6+88c4Hf/jki29++PU/8ieAQIIIJoRQ
wggngkiiiCaGWOKIJ4FEkkgmhVTSSCeDTLLIJodc8singEKKKKaEUsoop4JK
qqimhlrqqKeBRppopoVW2ming0666KaHXvroZ4BBhhhmhFHGGGeCSaaYZoZZ
5phngUWWWGaFVdZYZ4NNtthmh1322OeAQ4445oRTzjjngkuuuOaGW+6454FH
nnjmhVfeeOeDP3zyxTc//B38vwkgkCCCCSGUMMKJIJIoookhljjiSSCRJJJJ
IZU00skgkyyyySGXPPIpoJAiiimhlDLKqaCSKqqpoZY66mmgkSaaaaGVNtrp
oJMuuumhlz76GWCQIYYZYZQxxplgkimmmWGWOeZZYJEllllhlTXW2WCTLbbZ
YZc99jngkCOOOeGUM8654JIrrrnhljvueeCRJ5554ZU33vngD5988c0Pv+yA
vwkgkCCCCSGUMMKJIJIoookhljjiSSCRJJJJIZU00skgkyyyySGXPPIpoJAi
iimhlDLKqaCSKqqpoZY66mmgkSaaaaGVNtrpoJMuuumhlz76GWCQIYYZYZQx
xplgkimmmWGWOeZZYJEllllhlTXW2WCTLbbZYZc99jngkCOOOeGUM8654JIr
rrnhljvueeCRJ5554ZU33vngD5988c0Pf5f+3wQQSBDBhBBKGOFEEEkU0cQQ
SxzxJJBIEsmkkEoa6WSQSRbZ5JBLHvkUUEgRxZRQShnlVFBJFdXUUEsd9TTQ
SBPNtNBKG+100EkX3fTQSx/9DDDIEMOMMMoY40wwyRTTzDDLHPMssMgSy6yw
yhrrbLDJFtvssMse+xxwyBHHnHDKGedccMkV19xwyx33PPDIE8+88Mob73zw
h0+++OaHX/8rfwIIJIhgQggljHAiiCSKaGKIJY54EkgkiWRSSCWNdDLIJIts
csglj3wKKKSIYkoopYxyKqikimpqqKWOehpopIlmWmiljXY66KSLbnropY9+
BhhkiGFGGGWMcSaYZIppZphljnkWWGSJZVZYZY11Nthki2122GWPfQ445Ihj
TjjljHMuuOSKa2645Y57HnjkiWdeeOWNdz74wydffPPD34P/NwEEEkQwIYQS
RjgRRBJFNDHEEkc8CSSSRDIppJJGOhlkkkU2OeSSRz4FFFJEMSWUUkY5FVRS
RTU11FJHPQ000kQzLbTSRjsddNJFNz300kc/AwwyxDAjjDLGOBNMMsU0M8wy
xzwLLLLEMiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkXXHLFNTfccsc9Dzzy
xDMvvPLGOx/84ZMvvvnh1//JnwACCSKYEEIJI5wIIokimhhiiSOeBBJJIpkU
UkkjnQwyySKbHHLJI58CCimimBJKKaOcCiqpopoaaqmjngYaaaKZFlppo50O
Oumimx566aOfAQYZYpgRRhljnAkmmWKaGWaZY54FFllimRVWWWOdDTbZYpsd
dtljnwMOOeKYE04545wLLrnimhtuueOeBx554pkXXnnjnQ/+8MkX3/zw97Pv
NwEEEkQwIYQSRjgRRBJFNDHEEkc8CSSSRDIppJJGOhlkkkU2OeSSRz4FFFJE
MSWUUkY5FVRSRTU11FJHPQ000kQzLbTSRjsddNJFNz300kc/AwwyxDAjjDLG
OBNMMsU0M8wyxzwLLLLEMiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkXXHLF
NTfccsc9DzzyxDMvvPLGfwG4SdFC
        "], CompressedData["
1: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
f12XrqM=
        "]}, {Automatic, Automatic}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.84437209497336*^9, 3.844372116621058*^9}, 
   3.844372152975442*^9, {3.844372231484997*^9, 3.844372255439519*^9}},
 CellLabel->
  "Out[351]=",ExpressionUUID->"fec7cf21-eb7f-4d15-817b-4ea78bd7f62c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Evaluate", "[", " ", 
      RowBox[{"\[CapitalPhi]", "[", 
       RowBox[{"t", ",", "r"}], "]"}], "]"}], " ", "/.", " ", "sol"}], " ", 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "2", ",", "3"}], "}"}]}], " ", "]"}], " "}]], "Input",
 CellChangeTimes->{{3.844372258147427*^9, 3.844372315899968*^9}},
 CellLabel->
  "In[355]:=",ExpressionUUID->"47ef2b9c-c31d-437b-bd21-5130b7163dc0"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJxcnXdcztH7/5tCRvYsKyOysiLcN0JLEkkJ2W1R2VkhKaFoD21NLQ3iVjQk
qbRU0t47M6nf5/t53K/rfB6//vHwfFyP633Oda5znXNd57zf96wjpzSPCwkI
CKhJCAgI/+dfv33hiXdkLTbqKboM+89/uWcOrZy5JzWWZ7Rko/tc5VgOeJXH
9228z9s4EU1fBqWV04gfHlY0TDcvhiP9YvyKRNMPxB8JPZrSLJnKyU2fHyet
XED8m7Tw5dS0LM7dJek5puXFxCMV5tfFVX3ibHM90pBgWk7c7aWp2m3uZ46g
wP/9VRG3nj17yrq9xZxD8bkO0so1xP0L356wXvWF88rAe4qyUx3xkqLjryVq
yjnTJE2CTcsbiEvIS2afOVTJuZC/boWTdDNx+4uHl5/ZV8UpuTXsTYJpK3Er
x1UnE0yqOavWlaqVJ7QTV14TL99pWsN52BH8ZXCwk+k/66FmeqCWAztbdL+X
VXYS4HrnWRz4Jh5JdgYvEPOfruXnz4OdwcNNuqZ4zbjEg53Br2Xblchm3yQ7
g/+++tvo9jofsjN43KmRzqGxIWRncEXB5wrGkyPJzuC81D7dX6Niyc7gUWOr
JxznxJOdwedEXDxqOyyB7Aze4hG7d+L8JLIzuGP/fc86/SSyM7jasbbtR7Re
kJ2pv9czrq4TSic7g0//yu32iSwmO9/1+bfTSVqQm197UiN9fTDZGTw7fbmW
tRWzM3hwueKKP9beZGfwvSVeh70f3ufBzuC/Xm5a5+x9gwc7g68xOv1gb44Z
D3YG90gtnGIUdJrsDK7dqqF478JFsjP4rb23DY1W3CY7gzu1albNd3EkO4Pb
tLaG2TveJTuD61iuHrxm6kx2Bi9LT6y3Hx1HdqZ2uheIcd7mkZ3BzYX2Ji9R
qyE7+6kutyhPEOSKv7PnbCx6QnYGX953PmX+Gw+yM3jreI87O+o8yc7gXHv3
4/t4fmRn8AMZNc3DNPzJzuD1wmpqG90DyM7gPfLNslNLgnmwM3iYgNevjTtD
eLAz+JYRef9eHw/lwc7gnTd2u6TVRfBgZ/Cnw54r1m6I4MHO4Lp97dNjR1/j
wc7gY+76HbOalkF2Bk/VXnhu+dhKsjP43T13PdMyG8jOSb+PuUgrC3EPSqtm
/5RzJzuD+52231Cm6Ux2Blfz7tE9dfUB2Rl8we7VMmObXMnO4D9+jdrwJDOA
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
1++GHldVqow49D9zEd717FEN9Rd61o7f1XE/gr3vA3m/pr/l5rIN5LeQzyqJ
er5Hlt1TQr1dz3Rx3Oan3bR/Q/tzZ/fXmX15ws6D+HlEqerYVxde32T3mfk8
qrsyYVPyQ3YvlF+fL5/ubGK12o+9J87n+zbVaps+92Hn7Hw9txPbKr+qsnuh
kL/3fvjSstu2NI6ok2cFR97VPxLM7ifz9STrDbO43p/L7mfy9QzRcTOZuf8V
6Yce/yqRX36/XtP6BTv4rxk6xkWpnDj06PcnxFwfWcXuFfOf2yhaVah+sZG9
R8mXP3LZ+vdpPfZ+DeRbFM/IeSZVEUd7pg+fyK3Pr6W4hPYo+Tp8X7GJ1Z2g
/8LdohjThV1s38LXb5hpuSwpspe9d4nvlpi+OSh1kd3bQT1cb3Lf94nK7Puo
0HPy9pDfIiqsPgw9Pq5mXy4sZe+LQc9W7eNGrRZqdE8VXFDymWaOvRqtX6i3
Dyw5WfBlrBXJ4zzikZl13AqeLfkheIf3Vu4HIzfyB/CNd47tul7sQH4F/YuF
BH1PiL1n7+/gHCThaK847wXFSfAJX+Zd7HGoZO9B8PVs+9hd96ukjjjkJ1fM
Nk6Ur2Hv9fD5vqSGwp257D4n9JRumLdjeTuzP+QbHw9N/mfXxeY1vz5/7Jfo
kuf9rJ4P+WnOW1vFpbppfOl9wMPTtCXj2HyH/V18W397+rE6OeRTN1y/0378
f94n4uvfNM/i7pJEpp/OOzwk7t/WZOcgqCc0Rb4pXj+XQ+eA9L5euNevLtEq
dn+bX2fIi62etyqkiuYpeGNJ2vq3f2uIQ//l2byylOIaFif5+hVdFi9Mc2H1
dshPUw86te0qu58D/Xfsn07dq8/sDPkxrmN+Fuawcxbw0MManrcPsfGCnugz
NbdaJRlHe257XNXN0mPnMtDTvcQ332URGxfww8+SNTWC2ftQqKvYiDct2ab6
nX1nhs/3bS1ZxVv7nfwZ5xpZ2Xvs9pnVsnuG+C70yEO6Ina1rO7N13N5aJ75
fqMu9n4TX948XbXYYGcX83O815ay80dSDLMznrtRyH1baDGzJ7ip6doHMzaz
e2t47rmCa5mWS9i5Bp7b+li33beZ2QH8vlZmQeR59n4c2mMyMLfWeSaLb3ju
6C879ojXsngIPW/lbearCLPvQkPPi5mN2pWf2byAnob9t4c862pn72Hx9ez4
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
wFvZ7BszzTKb67cA7zqpMUS+VykphTysEMrDOlb8uiZ91X2+jw894te9SVot
HxXiJNN9tXGSix0PzS5O19mXJmiqupacqZOeCH5hC/ILu9N40HmBqb6JovMH
fYn6ufA7tKyig7mcIClpPRwP7PN6cPvUfZIrzQPc2bdto511qjSX4mNB/8l1
u1NPdkiQsS/wz7qf/C7u+nE9r5/jMS7ImZ9aqaRiIf80mfJPnwvvKVt6T5kT
f2L9J24cqG079rm0k74L/E51472zLn9Lj+kcOe5uzdvN1/Q0Ukc6R7Yz9Nt0
O/+ehu819hXZbnR65cM4GfeR+0pkvTrx9fMVcgnZq7GvlnmR0esaFslFQh3d
Vue0dXRrBXu7OdnbnUn+c95KlOKx33J3GXVUgE/1mak/fMgzSSG8a2bRu2Yv
0YHzeqIu25hZBMu7hfiW9RTfgvHYb//WXV/vMIiTwT/sbzJPHekWWs7njvkH
qrR9ou2Ful4DqA7wOKFeVgHVy8L82Jd995Dv7+2t43MH/2eQvm0pxF20oriL
+YI+7Ej6sBfJGbbbUB/MAXRPgW+nPpjf03qAj7r4zvXB4JeSP8ln4O8ea/tX
ziA6AH+8S9svMp3sk8A3UH9G/AdBZz83bV8/hfDuu0LvvqOCnmxFenKiUJ//
BtXn9xbqoqyjuii2Qh0SF6pD4i345W+SX577yBPe7u318tmndP3ugXd7rq2v
yP3uCXf8oU+hojiZ+/tw3D7Fy6GfFPjhkcfAvLT1QTLst1xHOsdqb59ha7lv
HXDff0dFf/fQm+fX+deGK07usOD1A79+derMnXIg24fBb8uW3Ov00mk1z8/5
qqEbD/6S7snzA++0/cgh1dduPD/wL8gPZSvkre+mvHXMj/Md9Nswm1JHd54f
eDjVMbMV6oa9pbph3K+WcPtlD1c5tNf1acJ/YQvllYPOoP+EdUGFbTbvZ/pD
307Rmx97rSKe6Q98jUFWc+HfsTwecmBexJSmCca7eTzblzacHu10O5LpyXGD
8/V/7LAmivtMAe9N+hvmh15hPjDQJ905gudnfaPZ0nCsyTaeH/ixT+yjO57f
xPQE/shsX/zdluv5u8C3zu5sUxiTzd+FHJtWOcxyXvhW/i7w8FUd9C4s2sTf
Be59I2PK1Yg1/F3gKQea9B2bpzCfcN+WT9ZGhcaMYHpyXT7S24Fz/efZZhY9
Gn14PcC7kR6O8Tj3QfceBt5O9eDxwFff/d1y/xZXHg+5oTwcHXF7rjOvE3rC
BNIn/QU9bQ/paaAD5FK7zOuVk0bk8njg64p3zHj6RR2PBx+uJLmnFuxFb8le
pBTkYRHJQ/QFw76UdhkuHYsfcB9D4CGk12Ee4Jr1/YbedKjifmT8Lm7lsHpB
va7vLfCZ9C5WC/4sL/Jnoa8fcGvrJGX5Ag2vE3SLs04t7KRXzvMATyP/S5YQ
3xJD8S3AIVelcUNHXKi4xPsFPX8jfZj7tyLvKXKw9QIPBdOZ66X3t+l7cEk+
75fzmI4Gdl6/PUjXF5JwR4oHfk/vUL53pdr+UDh3zjMKnGnUZc3/9BMkPp9C
ecFKIe60ieJOswR/egT507m/IfzF0837axpydP3icV/aeSS5btTxG8699RTt
exP7BT78TZUqJDqP58c5ljT/nRHbv4z/F9wfZ1ob/eJFLnyPcI7fZLYOyriy
WAbdgHv5euaPWKHrT4d7kUn9TboJesgO0kOUQrx9NcXbGwp6bxzpvdgX99G4
lZOW1lPX55px0k+wL8y/JXCp9dmf9nLfPeAelJ8IHHzoGWnzR4XxUZYb4Ad1
2LQNLTO2yNgv/xeoL5utUG+nNdXb6Sa8m9rSuwl8C9yvY+QMs2oV0wf89i5H
b1any4+ZzjgvY8prxrkAz33zh8UcdxXjOJeAKeGb79vV8jysB1L/FOAct0b1
r/yFOiePqM4JxoNuEzO19aPwXeAtpxv8GrA4me8RcI8nJy+GtE1henJdhd+1
9ZqAgw4tKB4JOO5RItWDvSPYf0rJ/uMv1Ou4TvU6MA/uizXV2+wm9GuwstL2
a7gjvJcH03sZ58X91K4rj+Un5Or6oRO+luoJnxXyDZ0o39BQ6EdwOUfbjwD3
HefrvFJh80mDE/+Xue4l2Vu8hTqWBlTH0laoP6mi+pPYL+cv/1x6btLzatYf
wCct6B19Vsg/OkH5R2rBnzKF/CkLP/KOXijkn56g/NMsIW90G+WNch9eul8j
I0cuXRKl4vWDT+rj0/SVpjW8HuA9yc9yVrA/zKM8Te77iTh8m1HtXTTLmc44
lwWULxkn2LWOHdPate4I7/HD9B4HnwCfP6Zu8YZKnR6Le1HknrxKOq3rkw56
2lP+FOQb6Nl8ev+4iyW6fuig25xvtfGN3N+T+NDKIsXLsnIT3y/g2dRHD+sH
3fq0jh7rk1zA94j/I9RHVfkR/zK+C/zLhr4hC4yeMs75jPTuAx2AN/fwKkoL
Wsr057rfFBeNebDOBz1MpxsvjmX5Dzp/MWL0Vpu7Ov2H68KdLTN2+zGW3yPA
B4zWxrUaCnZCp9NaO6GtUC/di+qlgw/Bn/+0UI9t+fkz5n/gx7PfdO70na4v
OefXbApzClij1PVrJryrc3BUUkA98zPkhhvFCeC8wLdKQ9/iqPKnvB6u60X1
ltVCHFcSxXEphXgqM4qnwjzAX2VtuX/rvU4/xPlOojgl0I3rJLSqONL4Wten
m+vKvtunXHXlBfMVziuG7Bhxgl3C/InWLuH9kXqVtkIdV3+q42r7ETutrVAn
8zzVyVQLdrnJZJfLEuwea8nugXsEOthT/zulYL+aQ/Yr7Av33dbCoPu6gCP8
f+S8HpO/2v9e/4K/y3Vxu9+qkY3UTE/c32Fkp1J/pA65t+AnPUR+UrXgf/Qi
/6OhkG+4lfINsV/M35Xi9v8Di/B5Ug==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxNnXfY1MT39vfZkmyy2eyjotgQUGwUCyo2VCyAir13sGHH3hBRVPyKWLF3
xYYNBOwKIkWwY1csWEEFxC4I6nt/nnu8fu8fuebs7GQySSYzp9znnPZHnLzX
gGKhUNglLxRKKn+uFgo7NBUKH8aFwiOiW4l+QPQI/T+4Uihcq/KBtFCYq/ot
9P+pom8VnYjeX//vp+MO/T5U5VB1fJfofUTvreM20YeoPFjH3aJH6dzvVW6l
cx9U3U4awLf6fUdN19BY7sgKhd6qu1n9rKX6yZHOUbut9PsmHWuq7jG1u0Fj
ukj116u8T+U9Or6iH/X/pcpN1P+TqvtRdCcdK6l+33Kh8EOitvqvrLpbdY9H
6Lhc/a2ocr9GoTBc9HCN5RD9Hii6WeXKap+r/UjRS/Tf1arfXdddSfQLql9N
/x+u/4apvrXKK3WNYRrrvarvr+vuout+pboBooeo/g7Vn6Nz+6r9WbrmAtXf
oH5i1d+m4x/uT/1cp7qloo/ScY7a3Kffuf7vo/vaWceN+t2b96NyidpcpDbj
RbdWm1l6hrvp+Em/v1K5l46/RB+j6+6ptp9qPD11bkn1V6u+l36vrLEdqHOf
qhcK3VV/pMqb1ecH+n8D1Zf0bu7SubHq6xr3tTr/Lj2Ha9Tnzaofof8/173u
p3525Lpq11b1u+n/I9T/vqo/Q/2cruMA/f+D7vFs0TuJ/lT0aaL3Ez1H9Ca6
7sGi54uer/PbqZ+f1N+5Gtee6mcv/TdDc2OixrCtfp+gdg+qTQeVt2pMw1V/
i8oeOnc9tZ2i+t/V53Ua378ayy6q/0jn76hyHR23iF5L5e0qn9O5f+icm0Xf
pOMX0S+r3ETHBqJv1/+fqGyvYyONeQ2Vz6r/dUS3Fv2w6IKexWMqP9NzWlvX
m6r6NfX/+xr/9jo+0+/+sZ/bairPV/tbRF+lMYzXfXZTm8NVHhO7vq3KCzT+
sTpveb4dHZnou1Wfq/+HRC+jukM0xim6x176vZ/qD9GzGaT6iaqfoGNN/f5K
/++mcmeetejdRe8i+pSqn+uX6nNtXWsP1Q9QXcfUz/xk0f3Ux66ie6vd7zp3
n6Lf2VlVv/NZOvc4jf2Aot/rqarfR+XXqv9b7ZeW/V5PVJsD1aaP6EVlzw3m
xMmqP0j0rqLP1LlzdO8DdW5V77IftJ7PharfV/9/o/pL1f5XtT+K9UjvZQX1
dYTohsa5jujVdFRUv7zKfqo/QfW/qX1/0VP1fNZQ/RSVF6jPvZmz6vMg/T5M
bQar7n/q/yjRx+i/41X+qDF00TFU/52kul/Ufhn136zjFNro3KPV7mL9v4Lq
fhd9muqPVblA53XWcYba9NfvS9RmJbVprzGcwTPSc15V9ET9X1L9SqIPU/1b
+r2W6OmMU8fZOvd6nXucnslWzGfNk0M1zuVVv4Xav6c2l6j8R2M7XffbRX1d
pN/D1OYktTmW56Bzt9G5BZWnsDapfrj67Ks2K4rekvmg807WMYb7VJtRKpvV
5lzN6UE69X96F5P1/0s6luq/ZdXmEZXL8WxUd6KOx9hL9Lum8k6NZxX1f7n6
T5gzan+y6Cv0/+pq20XjGaT6tUSvL3qw6I80vj6im1SuRp9qf7bqC4nXvbLO
/TOsaaxtbSKvtzvoeEXHCWq/UP8dm3qdK6l9per18lrWltRr7AjRO6n/HcO6
uqHKTXT+xaL/Uh+n6PhF7dZVfVfVX6j6ATx//T5JZaT7ukBt/matrnpef8Ge
ou/6INWdrLEt0nGg6AEq90g8/89lLUw85weKbq55Lv+kc9dQ/ZWqX0H0aur/
CtZPnT9GbSaonKb3fmvVfV6qtqfrXgarTVXtXy56PMcUfH/Us4+coDYXir5d
5+2mZ3WH6PdVX1Jfl6j8Vn0/q2OG6DdVt7va3Kk2H+r3WJ0zWeVT6uNptXmZ
OVD33nur2ozR73V07dEqX1Y5JnX9uqL3Vj8jRX+q/07SuQeobNKYJ6vuvKLv
4R89q7NUfqL/h9Q89pM01+6smmZPXCnMn9M4X9e+WOU3aru8/hvCeHTNtmpz
mdqcqd+3VH2tv1VOL3r/PVa/D1O7gfAUqr+BdU91F8Ib1P19Haw+d9KYV9Vx
ln7/o3Jv5pjOe4n3pmP/gufLwECPrLu+r86dqOMN1Q1T3R469y7Vf6TfE1T/
usoPVb9t5L3yE933dqL35/mI/k3za2/RalroX3KbZZnDJbdZjvek8+8V/bIa
ba9z65HX3K1Uf73KVOWfYX3OeO9hTW5V8Jp2MLwU/EfJe0Rr0bPUcFWVr6vP
R4uek5+p7vyq2+6v57ODrpNHnrsL2DNVf5zqZ5Z93Wv1+274GdFr6J2sp/9u
FD1afXTRta4t+p0tyU1HGudbOneE6Gvoq27e7yaN4Tkdr6juVM2BF0S/Jvq9
unnAW4rmAzupz2tEXyR6cW66ojYX6r1cXfScXj023/KcyvsrHs9InmfdPOWN
NfML14m+U/WHNjwe+JwzU8+lkRr/ion7HCW6va57VZhjr+o5vKKjDeuC+uoP
z6Nzz1c/K+r8tZsLhRf1/88V77/Pi75fbVdnroj+NOzXuyTel0+EB1P9fapv
r99jRc/Tue3gc6retz/n+1L9J6pvq/pZavtx2Xz8T6p7UPQazC31eQ78odrv
r7H10NjO1Lgm6f+e7Hf6PSTxHL9Ofb+c+D4mqfxF97A+vK7O21f3cQbvV212
UV+7s67o+t+VvD7EOt4tez0ZrzYXqr5f0fv0EOQEld/pvEEl763stbHGGVW8
L58T5uGeoreNfd2f1X+P1Pv5j8gm+v2l2rdRu/PhaYvmLfqznqp9b93XXon5
mZN0zR9K/u6qvKeS+Zk94M/U5m7RT6nNM6y5jEflo3z/op8W/Ziu9a2utZp+
/6znMFn/9dF7XFr1Xvq3xrOzjl113b/U9rKq96XFquufeJ8aprqZifefofC3
ifffy+HzS977BuicG0vef0+ED1e7bdT+D/XZQddfoxL2xLLr99a9Xqx+rlBd
Uf3M4HvScRxygtpcwl4l+gJkGbXpp/aDa17779d9LK9zL1WbBuMve9+ir7/0
nZ+uNh+pbU/9t7Xo3zWGhfp9kX6/o/52S83HXMp6GVt+KancU8dhoosqu2u8
W+q4TH1upvIf2ot+sOR19TzRfdRuN9YA9b+x2mxUMb+yh+oPZV1nfuk4pICw
ofUq8R5xs657O+ua6G1V9tX3vqzOPUzl2ioXF80zdBLdseI9+q+q9+4rVS7N
/L3O0j39U/XzaVJ5o47L4SlUnqejA3Ne15ym4wfR5zNvNdbdKpZ7FwdechX9
165sHu9w/R6uezyUdyG6b+K6BTq3KfByhyInZP5/VY1/bNFzu6vqnhe9iY7j
GYee9T/wybqvtuFaG6jNM5n50JV17nNqu3Hg5VYpm6ftK/oyjWH9UN8cmbc8
UnT31OVCjWdc0TzGxuovr3gvoN8T4Qd0/qk8t7r51q3U5lrV9WXt0e+rRG8Q
xvlc5rrV1PYF1XULc/gmZJei+eNbRXcN8/z5zHUH6/7eTHyd7zSu69Vmw3Bu
d7U5WeXr+n8Djf2Posexo9qdjsyh8d+ObFp0u2rgu9fVY1s+Mm9Gu0V112+p
/trXzV9vLfrplImqvV3v+Xi1Py6yLPCz+u2kv7bR/y/q/3Pgx5q8/49Tn+eK
nsg6UvR6OiFz3XYqVw5zbXO+W/U7RPRS9dcj8Ik7qn5S0d/EfqKfFb1R0evF
xMzX2UHl1oHn7a02PUUPbfL3skJkXvQs5KnIa8IFyFqJyx8Yc+a2vVS2rrif
zQqWOY5ustzRP/cYDtP8/1HnDGM+sK4j11bM6x6V+1s8RG1OVv0qFV+3l65f
LHlMG5XNE58p+teqyz91v2dG/s5pM6rkb59rbIuMUvRz6ab+epe9JvyY+bv7
V+d+qXv5n+h5Gs96QV7ZWWPeqezvFB5u87BW0O7o3H0cWnMb1jD66qoxbFO0
zP+h6A903Bj5XXD9n+G91McHOjLmEDyD6vfSWL7QmG9X3WLkjor3iFzHVJ27
S9GyKDzbo/rdQ+d9UDZPu02Tv2W+r43Uz7O6h0S/d9ezqYv+jWeAzKrjb56l
yoN1rYbabM66p9+bMef1HB7W/TzDOq9v5C2N4Q10NGo3I/VedJDavqO6t3VU
9Pt39lMdy4kuqO4QvimR5YrXg+/h23KP/22NbbLG/JKOr9lfVbd94AE66Bu5
XfRBalMXvZroO3TeMPUzTXRbHWuq/k7mhtr8WHf/64veR+0eYX9S+XHFeyh7
KusMc28Ttfk3rH/f6lpvpeZ9DtG9HKbneaiOb1T/hMrxkfmcx1V+WDZvs0XN
fNDBav9E1fv5birXq3l/f1L0i6nl3/1Fz88871fXGFurn7Fl78GLwnj4r0dm
WX6J2uwo+neeB3NJ9B+if2Wfjf3d5PA/oo8uWLbaRm3ms/br3BV1vxuGNWeC
+j+1aDlxCfuAjl+ZM6nXsV80tlXD9/Rbwd/c6UXTrSpeD38qeP6fFs5FjkNe
Q66M9Z4H0T6zLHNR0brCN/5bx3R8oWu9o/GsonKaysfK3sOO0Lmrqn133nGQ
+7YW/ajorwNP9V7ZOsCtWI9yn3el5uEmFX/TfTLLa4xhEdOt5O97V3iH3LzH
YtG7it6V9UJlueTvdRfVjxY9RW1G8G3qez+f+alxLszc3+81y1bIU3/q9ymR
+STatQp80Kaq7x70BL2QF1R/TMX6ryPR/egYgMzAt1C2vuwwvbMTVVdDt6P6
A4Mu+m69j6LKG1VfZ5y6bkm/z9X/h+vcJ0WfCQ9Wsl61beD50WVcpfor+Q5F
P8Z7ZQ1QP8dXzIehB2lOrP9opf8HqH7lknUp9+t3qvJ2tW+VWJ69Dx5E97ul
2ryr/xol65DRU/fjW65Y//s/dCBl6xMvQU+idpNFT2Nf1vGy6Mkq1ypZN/2M
jqd1nK/7/0XP+g3escrz2DdFP8daKnpZtX+A/U7v4C32C43natF36Lx5Kg/V
WE8Qnaqck1ivn8Iz61hF9OOqP1LHeWqzrMpX2Pd1vMb3r/INlSvqWBueVeVa
fLOaH/vAb+g7miL6ao1nHZUz9HtP1Z+ispFZbvtF83B1dM56Rs3IL/pvV/RZ
Kmeq3KpkPfV1ar+h+p6tNs/pvx7o79CT6B7PVf8f8QzVpova/IxugX1X9Bei
H9S1R6rdA8zbxDaNGveHvkvntlH9WPYL0euqfDi3PPmQysd0XKj6dirHoLPS
dU/QdSewvog+XmVN17pdz+d69FSiHxZ9l+jVRD+C3Cz6c/Y19dNB5eqZ9Shf
6vpR6n1gZ42nneqnqX47ySPPqt0LGsMzlDou17lrqbxOdWeKfk/3cB96hpL3
i70a3l/YZ/apev95Q31tpDbvVbxXjYIfVZvH1GbbxPvknmp7d+L9cRz8f9X7
5A4qH9KxrOh70Xerj08r3o/WZS9UP4+on1crXpea4IN0LxPVvp3Oe1jHcoxR
596m9l1Fd1AZq+137E/IDHp2S2jD89OxEfOHPUX3ORRbkf4frbH9qLYLka2Q
g4vu617RKxStF+2me/ydPUvHHNX1KFqff7rO/5n1QH3OU92ORe/Hjbr/b6/6
p3KfOxIbiI6NRa+j8jVsXEWP6V71/wPfLDIk8rXKTVV/WcNjeETtZ6if1qIf
zax/e6bs9XbP3GVHdGB6Fu/puW2i8jKNIVL7B1W/Ytm6bvb4IutJ0A9PVbtH
1T7Tc52pPp+EZ9Xxd+6xLaM+htY9rgfUz9vYOHQ8DX8Ut7DDhZ/03H4S0ado
3e989f8ifI7oxer3I+a/ysvVz7Jq81DgJdA3cP7p6mc6exo2HbX5VfX3qM0B
usZM1kn2oqLloy9Uv4LadBL9BM+cPaps2fxbld+UbY9A97VW0XYF9FujVb8d
Mp/OXRseIbMuaozqt1d9K9Wvy/xU/fKiO4oen5nnhBfdV+N7Uvfwj/rrrfs9
reQ2uzNW9XN35PeK7guZ6HOd+536nou9RPUDSu4f28Ry6n8d0WMz69C4F3QX
o4uWlb5S/YF6753hT0T/rD5+KltfMbDkenQgg0V3KVpP0imznm+qvpejS+bP
0NHAI6Efwlb7TebzXkIfpTGsx1zLLCcib24IXyN6Qdm2nJXU5kDWc9X3S0zP
0zuqRbaV8HsJ/LyOg0QPqVh3Nkl0F53TBv5C45lf97xbT3XvaCCf67of6vfH
meXg19Rm79Ty0Qj4WfV3d8lyTlH05SXLq+cmrjtcbcpl6z6QGzeHlw5tllZs
A+7Ofqz6a0qWjZcmrvtN13ktsVw5V/QWanNfaHM5v1Ueof4n6R7/VF+b6neT
2twSZNEjq97Xxug5tI+t82M/WIn9t+zxdIy8ftLXupH33M3htyq2RT8Oj5h7
XZuscnpkGyFryk+519OFKretWR45Gj1D2bbKieg1RF8X5N5Ooq8OcvX6Oudz
0VP1vCvqY2rFa1lntbkhtN9U9761yqPQi1f93b2m+9gq8XrZX3Wf5h7nLbr+
sVXr85FBZucew32qXz/yfkFfpWD33E70v7rOlWE8s9T+NNVfDm+v43BkM5Un
63pPqc+OKnsVvW+gq12gcqGOJ0Xfpj5vDWvuHZHXc+xEE+suu6qfn3UcoGud
q7pX0WnrHrZp9r5MX+ABbuDb13XnN3n/ekXXnNSwfZt15mnWncj8A206hrFV
NBeuKJvH+AH+TH1cpd/z4L1qthevrP7XjMzvbcb+oaNV0XLadon3nbL6adbY
FrHGo0NQ/QK1WaDnORZchOjv0J3W/fymI0/k1vF2V/lHyWsrdrWHda3ZFe8B
3xe9Fr2kccwXvRN8L/eT2/58r8Y4Tv3/K3pH3nXD7R+oeY9j4Z2s4sWK7eCM
9cuSx4Otf3Ld8/FldCp1192P/SHy+o6cNQl+T31Mz71vIGfN1u+LaraTJLrX
sq77pPp9iDVPx8Pw2urzsLJ54/v1++yKn9+Doo/Qf4N17pfoHdHvls1bttY1
nmIdhd9RPytgz1A5KHWfy1b9TLjf75rMn1JPX61L5qVPRc+p8y9Q+ZX6f1jn
t9J/+6rsXzbf+6ja/aQ+j0YvpvEPLxtzMl7nrKN7XJv5BK8b+HH0nserz6Eq
56jP1XXO46r/E11pxd/9E+wLddsvD1R5fNm89zjVr5y4XAH7uPo5W/18yvPL
bJf4WvR5mftYJTfOZCW1vVflyWXz7TyXFau2qy6n+XuOrjsgyCCnZObhf1A/
kc45S/9dkZu/flb1V+ickzOXtBna8P3eJrq5bJs6+9ZnGvepyDDYi+F51f5N
Paen1G5awbzHu7l5gJngF3RMVf0lav9MzevMq/r/qyAvfqDff5YsW67Cmqj6
Ryr+1h6Gh1XdSjqeh/9T2+Ea10uiZ4oe1jAPgh6AccwJuvaPmc9q8yZ6Al1r
sui3RV+h9vuo/ffB3rGw4mtg4xid2SY2TW0/yG1POVDlwYn32RdUvpOaZzhM
9907MV/xvMq8bLwC//0S7DN8Wp/qnk9CN44MUjZegf1+p8RlX/WzDHJ/4CE+
r9vGcA38kerPDjzBF3XbKq5n/0y8109QeWjivbsfsmBkfAK/ZweMywiVH6v8
pmgMz+8aW6Ni3W7Hsm350APqxqfcqXv/tmga/r5Tbp7/TPggZCT9Nx8eScdx
On/53PqcV1WfiV5Vx1mqvwlduurfUP0PonMdh6q+oXJdbHWqXza3XhX9Krp3
bAzo6LCDo1tExwiu4MSabenYSPfSucsg0+XWufVSXVHv9PiacU47wi+rTVVt
7qtbr4d+D2wDuqlXdN2azttU9EfweOirkBnVzyiVR2NP1bnP182rtIYHqpv/
eUTtv82tE14PPVTu9XAPtZ+u8n0dP4r+Kjd//gW8dcPPdnd0a6JHqv4G5ndu
3Re890KVrzfMf7fV81gdTJrq71e5tf77TNe9LbfuHh0+tq4edfNOz9S9HvKN
r8iz0u9ddK0X0bEhY6KfVN9LdfTFrqLybx392Ocbthmgr0bviL0Zu/N2Ovfw
mm0l24s+qGa73p1129zBA2DvWazzp2jePV60vnJu6Idv/0dd92v0hXXrRCLR
B9Zs+7tDdd9m1rVz7teZbXzY+qg/QvTF7LXYKbj3uu3Z2Kxnl23nxpYNRuz7
zBiYW9Xmu8yYmVuQ+3U0q48HefZ160H2UPlbzTpk7vGAsA6zHi9W/drsDXxf
OlZHzmWfVP2GyIa59Y/oRNFHYvPoHOglaneQnucWKsuq35y1DL4LnYDoe3Ru
Ino70f1V/wcG+ZKfLfosMCTot9B/LQ36MHRz/wRdHXN731D/YM37NbqOWPzN
U9gOdd2969a9xMwBnXupms2tWV7rp/rWDe/jn4lerWG9L/Ig2IuZQQcMPTKy
DIOMtyl8mtpfilwMRlH/v1Q3b4Nc/lZYb9/XUeNbUptJqhvM3NO72bdkXcOd
keXbIryLrn09a5T67l20fps1vWPNMu/3Vdelof6hmvmys9TnlpH5HWT/t+s+
//XMuIjnytbnPp+a79pP/eyQWF4+AJm0ZF4LXflHOndnxq9z72GNDzr033Lb
yrcI3xHrZUd4jYoxoMj2G+XGSA2pWyeArph9aC+N4YWy9fxv5pb931D/42vm
y07Wff9asr4eufe1uvnxV9RmpM77VvXLFL2GwL+9qfo91efz+q8OPxRZL0Gb
UxrmlV/LjKt5tmy7OX1zjTcKllsfgJ+sW0Z+kGdbN88H74duB7nvYdV/k5uf
g69D/zM0s+4O3CM6E57Pc9h8MuspwXMiO4MbAT+CvHy/6Ll1ywPIBeid4GNn
69wvcsu596l+Tt33Pkf1X6p+BR0nsMaqbM7N483LLW8gd6AruzyzLhOM6GDR
r4jupz7Oyixfgt29oWa8Ljo9ZJZ/9b5WFX1zzXhedHG31owRRs+G7PAR6zz7
W+BjPy+Y14HnQf8G//y86pdvWN4pql3bhnU4z6q+legzMuugwDa31XE+8iq8
g/47Ft1awzwV+tNDdc3r1P/sJq8D6ECO0hhm1b3vsueih0SPxLczTv18pHNX
hl+qeQ+FRz5cdR0i66VHNln3/3fR+n9wBdBLgr0a+9oWBdsTsWtfFlu+x9Y8
r2DbKHTHgm19tMFuiE0GWzB2H2wIS4u2I/xZdX//U3lGbCzNhtjsYuORusa2
ldN+cdX2YXRNyP+rl93nagXb+hgbNo5DQhvW1vkl687Qm02pmI+Hh1++Yns9
ttHjgqyNzD0u7OPdVNb0rGdxv/DVAasDZudx/f6QNZtnqzF8IPo6eJvI9Tei
86rYtsJzeBN9RNE61vPK7v820RfGtteco3Xlt6r3Tey9m9fdfrO67ZiMc4jq
vylZVt1Q/d1ctjz1YsGyNfWslV10zrtF4+VOi80/r6fy1rLvnbUDO+nT4T2u
AQ9dtE3qiNz12I+wEVG/ZcGYEWzD2IV3UF/dVPdbZF0K9dsxBtVvgu5B9cvp
eKpomwj6IPRC4Fh7gN9V3Y/6v3tsbNc3kfd89EzgZ7dS/Yqq/5a1qmpdEfhf
eI0LVd9K5Q8a3yjWOvjxitd59GPgCuAXeI7gb8eFOZCWrbOC/cOn4Jei9Ypb
RZZ/3ylYn0Wbrxhf0D+jh54f9MnolbFJ/hLagOnlWvAoyM/0g34SPTP7GXL6
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
xXgwcsmsU/CcA9+Lfusf1f0/4ZLM2A==
            "]], Polygon3DBox[CompressedData["
1:eJwtnWWYHFUThXtndnd8ZgnuQRLc3S0EDe4QHIK7uxPc3Z3g7u7u7u7OhwT9
3pczP/qZW321e7rvrXvqVPVUm+642g6loigeqxRFL7+HNIvi2Z6imLFaFO92
imLhWlGsUi6KMX1FsQDn5kZeAvlpjhmQd6TMg9R7r14Uiw8UxbTtojiChq7n
3KWNojid86dR99j+opiN8pMjv0H++siv0+d8yP8ib4r8DfLJ1Hmb/uek7Pu0
3aG9Dcm/jHNt0r/T/87IB9D+ZKRPoP4RtH849aemzkHIuyEfgDwB8um02WCs
h3ORFyK/3CqKb5FbyM9yrb/Q5sKUfZH2FiL9E8f8yPchz076EuoPou8bOKam
v3E5txX9/0b6DcZ3Lvl18i7imIBzoxn/UdTdhPN3kv895eeivf+R/yj9bc5x
NelBlH3d6/N6KH8t5wZI/80YexjffozvLNL7UP4R8qYj723K/4/2FqS9F6iz
AOklOfeE+ZR9h/QH3jfqHs4Y/6TOc1zvE5TdivOfkv8s8he0X6HMU7R9J+O8
ivz3aWMuyvzLUSJ/OPX/pZ/J6WM/0hdR5iyu7QOO/UmPS70LaG8Iv+9Q9y2O
7Ug3Kb8u5c9HHkJfo5Dn5P/YF3kZ+vsZeQHafYg2HiTdS39/FOmzYLxDkY8h
+WT3mir8n+fTXpnx9pM+mv6PJn9T+rqL/vtoY1Xy+5F7eP7OIP9Myt5A3Z/I
f5X8H+n/TfJPQn6dNv5GXpgyf9HfwxzTUP8ajq8Z14eUW42+v0WembLPkj8r
6fHI+wJ5b/I/of+RyAvR15vkL0r+pMhfkb8ffWxM/secn4LxTMi5p72XnPuK
c8sjT0j/21P+F9ran+Mr/3/KjEveeBxPkJ6Dc09Q/l3kXsr+zZiW5po+ovzq
pGdm/OuT/x7H0r25x/84No41yZ+F/A3IW5kxzkZbS3D+CsZ2XCf9PUreQ6QX
5T/ZjfK/kv8S8sf8roH8A23OSt9vIS+LPJT2lqHOlJz7kDy6Kz5kXCszppp5
HFuTnpr8T8lf0ecB+S2egZ/5bweRfzTpz/k/JqLeEtRfh7EtUc27MbyUZ/Qn
+tseeRPkPelveDXXPh7y3bS9AvWvpn1ubbG87wLHpchLUOZqruV7+pgUeSPk
70hvQB+HkX6Ftl7h+qbk3G209Tjtvoj8LfJElN+AMt+Q/oFjMG0vyjgmoZNF
af8K8iemzgu0fxljuIn8zyl/OelnKDc/6WXJ34Y21+fczNycXbjGv8hbmPqX
UX9JylxD/Z8Yx2bIW1KmQ/mVyH+m+3yMJX8f6nxGekXae582LuXcn9RdknoP
Mt5xOE7h/DzUfY/0e87TlJ2Zcz87tzpH0vZx1FnV943rmZ32lqTdybie15C/
5/9oU+c58g+jzp6UP5D6E9LWpNyvEyj/PPUnI70wfbxA2VfJ+4v0H4zjQMZ7
GmXmIP0m9f+h/g3IM9DHZZz7jPZ7qLM2dRby+SV/K9r/gfy3nO/7Mp9cR/5g
xnsQ7V2KfA79jebcttSdnDK/+34w3vVo7+Lu9S9AfR++Bsd35K/czng3J70i
13eR18zYZ0J+gPILcjxJey/S7p+kr6Od/9HeAj4fnHud+v+jrXFp4xXSK9L+
JMg7MN7faOMxyg9hfFOTfz/pwxjjPqQ3IO8O2nuNcwuTPwnlv6TuB7RRJr0k
fT7G2Ac4ziZ9PXn3U34V8p+j/EleBnkrIj/em//I/+rYTtaiDym/BNfzNud+
Z7zjce4Y0i9z/qe+rNUf9Od9eADhI+TFSL/G8TP5g3y/SC9F+enJn9ZngPQi
ts94XvO9Ij0F92tW7sVDXM99yOfwW0M+gjLjc23Hc71nUXcU5+8h/wfanJt+
7+Lcd6TXpsxujG8k5fenzS057idvNc4tUst8tS/pjck/kLzPkA9GXh15F+Qq
8gHOxdRZk/SVXOMt5B9N3e/p717k15GnZ0zjNzO/HYi8KXUOov4XyId25YOR
D+BYlbJ7cm492viaMQ5hvPOTP0B6W84dR96/HDeRnq8ZeTvSbe73v5TZjPJN
rruF/AT9f0L+HLQ5DWXvQH4B+TXkxUmvW0tfg7jHn7oGMJ7DkNegv10Zy24c
61H2cMdI2XM5XiP9HucWJP0V/U1LvYtd73xWKL+/6xdlRpM/hnO3kr7EOZH+
p+DcdMj3Ik/pM81/umR/ns9v+J2J9k5mLLcj70bdFcifiOdhV+co0ttzbEXe
wfSxA+nP1e98Hnuy/vZSf2UfLuTVfJc4TiPdT1/f8n/cSpk+8ody7iPODaX8
0b2ZEy/nnj1RyX//EcdFlL2bMbxK+l3Kb9GKTqNuU3GOIP80yo+i7oGcO8f/
rhN9U72zxv2/kDavJv8f12nklclfmfyFkKvmU39q5OOpfwX1j+D8upTfF/lI
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
XrzVF3uE9gnT4gNrqs+LAambaa8RC6pnrFdRf3bqPy7m1pc5cqAe+4n7w1c4
d6drE8fryC8j30F6pWrS59P+LaTbnHutyDWpb6iv3Ux/u3NuVdJH1YIdnkn/
51F++07wtfOrwVPn5/cT8q6i/qVigf6H5WBgh1Rj49XWeyXHJeSP7xraFx3x
wHrqm/cQ17MY17OgGFhf7qn2EPd7x/VlzjjFZ5fjXtKfM/7Pq8HVxNd24BhB
+gva+YN78ac2LMrezblWbzAV7U3Ht4KNOUfdLHagDt8bTFn7l5iJ2MkGHM9V
gteI7X9cjs3gpmqwIjEjMav9KtFtKhyL1HOYHmub5B1TC/6sTqluea96X28w
Z+1pE3JMoS7iO0X+qYxv/3JsZrc1Y5PQNlHnWJy219UeVQ6mvjX5N1L/j3J0
wNVJn9kKNixGPGszmLTYtM/09u6X6GP5UjARsZHF6ml7C8r/SF+nt4Kni6uf
zP97PmXeQf6UOp9Q9yPXD8Y6GfU/Jr065wbIqyHfQdkZqdMgfV8t9q57WsGn
xaknRG5Sfl36W8933Hed/I3IX4j+x9Fe0epim8g3uV4gn6euqb0T+Ytq7FcP
UP9G6i/n8076CY7bfb5r3WehJ1jrRe3sF2fn/Nz0f1s9Zc9hzDeSfyzy4chH
8NxMwvP3ciVr/Q3IcyNP7n0o8gyKNyzv+9oXDED7cYvrPUa7NmXnGghm7vqo
TqP99Wwxavqfl3NfMv7bquEKyBkQA/X+/eSzxbk7fKeqsW1qU9K25D3yXq1H
e98iL0z+g74vHDe7/rRS/1ryJnZ/x7lH3J/0h0OxDOUf7cu5W5GXRX6sL23c
5N4R+RvxBo4l3CtVY8vTpncN8vztrMeuyxPR/sH0N9L9hHsQrmcL2ljStYb+
BnEPSrVg8f8Uwd/fo34Pee+oN2i/5n5djNyrPt/K/3Mq9aekvT71xVqwwIl7
whnZqJX9tvtu+QoXqk+qa2uvaEcfn048qhR9/krtt65X5J9L+iqOy/syR51p
+43oE9qYnR/HaE91r08bZzeiH7jWzSrHwvlKTgbpX6l/O2UHxMSRzxMfofwF
nDupW/9o2t+S8S5ZDgZ1SiP4sbrDdqXgz+5HXKu3V59y/ynGS/pPjt+q2VO4
t7iOY3Htn+I/tP8G/U/djn1ILHLDUuxR4sNDkbcoxd5wQie2NDcJ6kszOkba
fLSI/nYeZd4oZw/nXm68ZmxhYh2u95fQxxn0N1gbDXmXt7trvXsi2pqKNhai
r7c4tq5Ep1K3+rYUfPWSRu7VkqQ/ZCwzup9B/lb7QCVrmmvbp+XwD8alzJmM
7yfxBu7duNTfG3kz+ltDHYTxDuveT7G9Ovnr9me+mLSed8Z3Z3XO9ZP3FOe+
UP9AXq+a+cK1Qoyll7yjOuG6uHYuz/UO0uZB2Ts5N0MzOqW65R3Ot94fbZhy
K5yP5Q61gl04J/S3ooOoi0zVk/3y7K4H9DevmH8la6xr7ZfOSdXY95/y7xGf
Qr6OcTRLefc+oq+LkK8h/xHKPYO8WTX3+0LX7Hreb7HAf3ryPm/cChYjhnVA
M/Ob9oeilPmwQhuHMP6Juvi4+p3Y1qf+5+7vqDNW7JX+viZ/U/dH5O9JnVI1
/KF1tBW7HyBdUGcx7s8yPoO0+S/9L4I8HHkk8j/OydTdoxR8Yivtu33hTGxO
+hPOrUT5YZwr094r9L9yKbaqL33XaOM7yi6mrteJfnqzc2dP9Ml6J9ysW7SB
NYOvL0/+Ie73SC/eDvdmsPZLx8P4FkJ+uRa+xsfkV7Vz0+fL6mrtzJXDxNu1
ZSH3Iy+H/CryS7Xsv1ahvb85v7V8BvrairG8SnvP17JXdE+5DPfwE+rXKTcr
9Sei/qfIDfFIbRTITeocjfyyOix5H1B/GfdSnPuaNnfvpC33qe73nuWaHqCt
qcj/vp79rH/DKqXsr8QHaupqpey/r6fNm7i3M9pfM3iJa8+OpeAp7iPcT8gx
8fm7o529jHuayxqxtywn9t+1z2hz0fayGGU2pu6NlL+F9Ey+f7S/Kde0QDnz
Q108oBbdXhLgTrXY8LVdqROOqsUGoi3kauTDkKtc76Fc24D2PPq/ifZvo/0f
fX9ob3nKbFsOZ2EjsbRWbDPaaEbT/0Tib2JT2lRIv8u59Uqx/X3VCf9F7sJa
7iepfy1lrqX9GSzfjM1V26s2DPkMz7UzfzypXk39kvuL3nD4fq9Hx1XX/awn
+qw2Oa/vWu8RffV1whU8jD43aMWeqG1jg1Lsf3NUwu352vWK9Iut2GOuqMWe
MzG/U5Wjg7cY287kr1HOO3AF9+erVvRV9dZPOuHXrVHE5q7tfUQ7/LAJ6uGL
aZ9fkfGO4NixHl6b/LaHS5lf92vEHqNdZsqB8O2eIm99cX7347VwE+ToyNWR
AygXcEQ5fIPttf/15ZnZWPs08sLIo6mzZTs4tHi0Ngj5jO4h3Es4JvkC6pzq
nr+r84htap/rC4dxd7Ec59y+2BT2F1viGIl8AXU25P9bQw4W8mq0NRPj3YDf
+fryTr1PfyPdt/XlHXrGe6W9vhz8dm3qH+961pcxb0TZueVUkjfAtTxP2zuo
P5J3NOdWagbPFYsV0xTb3I46K/RlzjwF+WDKb9QXff939/rIayGXkP9E3rMd
vEfcZzbx7FqwNDmoclGdp5yvJuYZGstxUCe2WHWrZQaC4Yrl3s0Ylq2EUym3
Us7eSpXMqc6tS/VljjoDea0i17gh8ub12CaOp8+P1B/auV/et8lpf1Q9dcWP
tWVaxrLqeFuSt0k7/A95IDNSfinuZ1HOHLwJYzzJ55uxnKI+R98/i92IvWoz
Jq/OudX6wgnR/nduNbal5Tm3bT08WPmw2rTkx9bIX5W8VXwm6tE3vR8r9mY8
8i2nQp62i6meWklb/if+Nz9rYyVvauS1kCeVX8yYFlWXGQiGLJZ8K+MbRtkj
OGZDHkr5tSm/Ddc7v/sDrmcL0n/6Xnh/KfN2LTiOeM5UfbG/aD9fqS+YbIm0
4OAK/eEoaM88vhNsUlvdI6Tvp8zjlJ+Tc0N4Pibm3BjKryPO0Ml+X31l/FLw
iRc5vhOPoMwG1eyB3Av93pP9cF8jWKY6vLp8nTan6QkX9wl1Q/q7vy97qH35
7yqN6E7v0MeCPj+NYI8v9IQDUkJesT/6jnuhUie6/onqc7T1RDX8x3HFARnL
htyTQ8qxIW7svWllb+F6czFjWdb/txyO3Ibkn0adkx0Px6beE+SP+oJJzFfJ
e+37/SvHJuIJjOd98qaizwXlkzCGh8n7gvbPlmuO/Glf7NvPNMPrkd8zpogt
TfznA9JTk/+8+EA7e6m/qH8fY+1tBGt2j+ZeTXzlTcpPgfwE6RGUaWlPoPya
tD+8E37mfzxNnqe/fX76YvNXH9lD+zByD+U3EG9v5Xn3uf+uE/udz85NPE8N
70U1uobP2OrIq2gP1FZF/d+aeYZ9luUIvsq17dTO3H4W+atRdrd23hX5VutR
foTPvHM/1zQO13ZMJ/qn3FLXt2lpY5ZybNZXVoNRilXOSJ11qTuP9vdSOCR7
kP5H+xdtTUqZM+SuuF70BUN7kv6OqQY7O6Gc9V99wLRzgHPB9q2sHf4f5zOe
h6n/DPXnos501D+6kr5ncs9bz2FaDuVRldiItRXLeT6yEozO/rTxuJ/ynfXd
lUP9Ri18GPeqE/h+Iz9Jn1eWYl95nf6G1INdiwfJnXrBZ5C8zRlfhbrTcY/e
6s+er+W7hPwy6Vc4hpB+rpq1VM653PMmZaalrXe1I3Uiv9mfNmzrVPlQ/Xkn
G820YVvq6Oo/T9HGPaXYwLSFqeOo68jJFS+XsyoOJR4ll1d7l1xVxzRtJzqY
utg7lF+E9NPVcFG0GZ5KeuFWuDxyeqqkH6ZOTzX6/YHyZRjDeerG2kT4b/6n
Dtwfm8Fn7bxfcrN9hp5p5xnzWZMTK59mBcbzUC18jMG09zhlni8ypzm3ub/X
H0Sbp3wfbQLaBtxL/uvc3Ar35HHKT4F8STNz2xPiu53scdzrbFWJf8LN7ezd
HhWDQb7AZ4r0LNSZvBlO2QX0c28Rrpn79w/Je06chvSBlHmqJ5zU/d0LV+Mr
oM+A/Bz9B/SHOBp54kr8FxYpZQ1xLTmMOs+JNRT5Px+V01YJPnCCdshOMBj3
a6O611PqD4dXLu/6nfDTtW3KH3/F/6zIHsS9yNONvGvuKdxbyOGVy+sexr3M
o61cmxxhucKLuYevhc/0hPzOVuyd2j1f6MSnRlzIPY97n89p/4giHAq5FPIj
5+gPh1cu7zPIkxXZw7iXkc/p3D8N8pfOnbR7fSk2U22nj4jJlmJD0Zaiv8pi
pXB85fo+5vtUzTPos/gc8jyM5x+et/Xa2ZO7NxffnsS5qhNMWH78lqSf7sTG
4H7wcNJ3NrK/1gflmVb2zEPlGPdnL/1GI7qjvJQf5E5xLNt9B0/shNMtt/sO
yqzWCadau457onVIv94Iv6Pd1Yfvou8rSrF5avuUNyl/0vlD29cY7tmVtL15
Of4JD1SD5cghlkt8fzV7Be31cgOfrEaXcw5z7rzW+1PLHnvpTnjV8qvlJ8hV
uqQTDpnP51raxtxP1mMDXZ70d/S/cyk6ufrq8hwHU/df9Wuxk2Z06/Uq4a//
0Mx+bIXe8Pu/b2a/p073ayPjOZayv3JquWb6uxJ5fNp8CPk+jnlKsWEtTfp+
jnlL0WH1z7mJ8idXwscegXwD8l/cn5XFrGj/Uvmn5I9He3uSfz3yn+SvRP7m
5F+H/AfyCORNkQfLoXEvJ0bQjF+X/l1XFvEXurGTfbpr6JaUX7Ydrpgc+b/l
mpL/Jfd3DeS6tqFO9FL108lbwZjFmtVp9O04k/wa+dtwbtdG8Av3/5sir17J
+6XuOAfHXdSdrJW2ZhdfRJ5Eewrp2cR3kTdqZi1/thR+9vytcDedExcgvWkn
3G33fvJl9KdZsMg1y89aph1unDZ27du712NzVB/5m7Kfc8xdpM9JKX+2eLz7
FPdTlD+nE87W9sh7du+/PBwxreWcG2vR4f9Ux6ate22v1LUxkp6gGW7HmfR/
aTv+URdQdrg2H/o70fWuJzY58UN1HnUf95T6b52G/EFPfMScn/0/5MnIl9mz
E/87uQeHIx9fj364IHUfds7hnhxRj63aOetw8ZJmuIEnIP/JWC7vhLcpRrBi
Jz5KX/UHD9J3SU6C3AS5iXMOxOfsx1r4a/qineHzwO/T1NmN9FS18EsPLMLf
OKke7PlU5BNJX2n9/vhErdqdb54uxT/wD/p6u5H/+ij3U838R/5XzyAPde+v
jkrdO5CnacXef2NvfJr+di0kf65SbNBLkJ66lbJixt8gv9VIW/K5/xLPcA3q
iU1DfMw13rVeG7x8j6sZ76/a2pw/GsE39C35mDo94uHk/9Qf/5HVtSe3gp3P
x71flPt1Dfm/9QejWrt7v2/xPfCZpexVyL+4vyJ/DedhdRLyt0XeGXkxyrxH
fy9xPXe2cn/2KOKzoO+C9lexcZ9h7VXOj2JJw4rsd7UpaVvS/qRv1aTOybX4
k13velWLj93OjGfhZvQpsa+lnb+6NgxtGc8g79IJ57JVC39MLuaHzdgTxN5/
78T/bCXq9xfhc0xF/rVFOPCdVuzTYvtzcW6zWvYA7gWcc5fv6pfim5Ui/Agx
Cvc0/qf+t682gw8tXAn/Xs79LNXoRHLx5Qi5r3V/qz/P79Vgc84J2gu0MYiN
i5GPaoXDI5dnR/UZ2lqIdsfS32JcwG/tcCzkWmi/mqcde+3mvptF8LnJuxjK
L8g/0XYHef9a8Fz5BXLw5OLJMVq2Ew6hXEIx6BXsz/m4Xvx3w95tx+an7U+d
f6VOOJ23VsK3lOs5zkBszP/5j9D+YxyXlOKv8FIznLvxu8/IDtQfQD68Fn8M
8QYxCLEIOeHDyF9yILxx+eOD5ecMBNM+Fnll5GH0WS0H8xL7EoMRi5HPf3An
HA65HHsiH9IJZ0DugPPRochyiA9m/L+Vwi2WMy+mIh4hl148ffdSOJm/NXLP
tPfIBfNertEMFlT3/rXC6RCT1R5wbSP7b/0vfMbk/2hT1Lbo/Lc3dZdppe55
yPtzvuGcWsocXG4G0xLbGqec/eBWrqk94SiO7uqH+oBqf3mqlTnwqHr4+c6N
CyM/hrx0Kf68wwbiE6Q/6RLa2zqxH89Vib3ROUEfvNNLmSt6WuEGy0FaT9uA
GHY9/pZXNeNTW66Ff6mv7Vrt+CZqU16znf3Dko3wm350PhwIBuEa7lqufVdu
7/hF7P2fNoK1nsC5WbSF0Neapf+onP/Z//XB0GYkv07fjHIrvj36+IjPyp8U
L56giP38/WbsaWK5v3Gt71JnryI+X/p+HcHzvRXlZ/Z5qITTJrdNnVndWbxD
W9F8yD+28zw+Wsn/eTH5PeJtpfhU6lspn1RfMjlEconkz8pllrMid2WpgeDO
4s/6kv9SDVb6bREf2/PamXu1KWhb0B6pbUGbtLZpfWzG1LKn0PdGfq9Y+UHa
yzqZT7Q96pOhb4b7eW0h+lTrW70g1zMJ5UcjN9SdB+IXrw1GW8wJlBnH/YU2
VeTjuX/H9WeO15/trkZ8f/RpeL4Vn2/3s/psvtPO8/ES1/EV8gvt2L+/K4UT
M3clfG1ttdps5YIZD2CJUmzK2paNCXB9kT3V++4122lrSvGyRnzyxXLE9MX2
n9IGRXpy9bFG5ijnKn3OxI++roZ7JsdDroc+uvrqirlpL1q3nbVGn0h9I+VT
aPt8tsg7IedHG+DjRbhA+ujqq/sB5Z9o5/1aoZoxPN0OB0p7iTqouujXje7e
UQwP+fRm1mZt0Nqi5Uho+9QG+jf1N+a//boSTEZsRv6Hvsf6HOp7qI1S7E4M
70+fH9r/HXkP5J5O1hjXmqXlWFF2oBldzjml2QpGKlY6HW2Oq77fiL1VzoHc
A2362vYd4xnN2BC0JYjvlunvs2q4ebP3xCYsv2Jx0vd3+ZQfVuNLNqQnPvbt
ZsaizlKj/Xdo691afOBHNcLhv6YS/w65/Z9Ww01x/+Y+ToxcrFyMUqxyklri
NmiT0TZzRDPYpj7P+j67B5ULqy+Ee9PlqD9NIzZhbcOHkf9IEc6C3AX9J40d
ISdcbvjyrfje7YtcRt6wE/8VfdEe766/7/XHp0TfEn10xYLFhMciv1MNViNm
I7du/XZ8zTdX4ejEH13syhgNxmrQf1zbpT5X+l65pru2v9mb+VP/8AlLiUFh
LIoPuZbnkMe4Z+HaP9KuUUrMCGNHzCk/Rzyju/9yj+JeRU6zvgPzOff6riG/
wvh2ovyq3Puz5IS0g8feQf7tHPN39ecHauGb/tJKzI9rK8FHjAWyOMcePcEk
f2jE5/yCeuzb/h/umdw76UOrL+2+lDm7J5i6/miv0tbN/RmTYzutE5/dtSkz
B+UrzWA5YjoHkT65mVgSVxTxpdqklWfnCY6Dm9kP64skRqu9SUxdbF2OoPiw
NrZ7qsEMtb2d3gnn63Pf92Zsytps1C+NDXCdOl8pMSL0/36oEaxZn33jgRxJ
G48V4QiMbmXNd+13jtMfZXgzsS30YbuoFf/JyxnPq7R3l7amRvxXxS9WbER+
RyyDY6pGbNLacFYvYqt2vXFvPzX5X7SDfYhNvtOtP4xzN/TGZ/zbRmyQ+paJ
8WmblKOqjUP/ku06iflhXAXjK+zUCZ9xsZ5gHrM1onOre8vZWrCZmCtzVPOf
GIvF+Uqf5nUoM3Mz168vzrX16ELqHPo/OEc6VzYa8U2/tz/xMeSkyU1bi/q3
ixd3ci9n7869xjHw3ZZzeh5tDm5kLhWDXa4R/Uluyak90b+0sWlrE3N1f6CN
XVv7YI7vSJ/SCad4Oecv8dBa3h19QPUFlR8/XX98lMZzf1KPLdtz8uX7KsHK
5DyIF8jBkItxfBHfxZdo8+u+zInqR9swpmXL8fEZQt4kzTy7xkQ5tRmMQaxB
Du38zfjTi02KUYpf3u07XQrnbIFmOFNyp4yvYOyXGcTvaPskbWyk92jFt9sY
B3uSnp4ytxbh7OjfJofHWD7XFeH2bN6K7n4Y9adpJwaKsVCWcf6m/KmdcN5X
QF6K/OVq8UFeHvlG8s9rhgtkH+c1wvFYtJprlPuxrRgy7R8nf7ydGCjGQhEP
Excb4xrA9a1Vjj/69JQ5gbxzOeZuBx88mzrncE+va8fmpe3LeDTuj+T0ye1T
R1DvmMc5qMicMm8j65++6MZ8Ec8Qf1ygFszjmnbmF7k+Yk4+z2KN7jXO9hlo
BP+9rhKdqaeZNcC1QP9k8fjpGikrp2iGRtY71z51ftdf1yDXIv3zRnb1Ablw
Pi/iyf9W4rej/87FrTwfcjHkzHj/puu+T2d1xyPeuXwjz7/2iCVa2buMz/Uv
0gw/+xrKP0/+sEZ8PA+uB1/R99P51lgoL5C/NPlbNhNbSJ+pI7gfW1SDvT/C
sUQjMYjGqQUvcX1x/TG2kj6q07fik/ZdLXxGfdVGUubCnnDm92snZswhlexv
xb4OEaPqiU39oHZsCk/2Z4/gXmH9ZvZC2tj3Iv/BSrD/1ymzDGUObKR9Oaf7
thMDx1g44jviPNpZtU3oM619yLVfXeIMzk3bCCdebvzN1L+qHl1I7N8YJW/U
w+mW263N8uF6bLb31rNeau/4qhFfHH1+d2pG1tf2jp7456iDqovKEVdfvLsR
W6M2TO0rNzdi+5Vzqf/nA8iDS5kzXmwHI1e3fKAe7Hx9Men+rMnaR/Xx1Rbq
GqL/vRyzxWuxscg9e7ARW6oxb4z/pM6s7ixHXe77TcjjIr+D/Gg7nHW56/rw
PK09FHnpnsQMMX6O84e+sRdSZoJObA7aHuRnrtcJHqqv8OZdfFKORaeR/ZTc
CznOcpJncv/WjA42n/hhJbqZ/6//jZzBIY3YTLSdjOritV9WE9tJzqPcR+0L
c8ttoL1ZaG9GjkVobxLK3Oa+upJnV5vR4sgzuQaT/05v4p3IIZRLKMde+6+c
f7n/6u+uUdp3FqvFn+LedvAhdV19qN3vfVUNv8/9l3wfOV5yveRIiLWKjbvW
GMPBWA630V65Ep/jvVxPOe5zb0f5O2vxQdYXWX242o4Pkr5IxtTRP9YYYQOV
xJQxdtityCXkDdX5kWelzCul+FTqW+ka5NzyainxB4wX4L15pYi91/2fXE85
iA83Y6PTVvffOff3tHl/f2LIvFFJDJtaF+8zts3srbStj/+u1L+F/B7yR3o/
yB/eChZwvfx18nethyMuv+fXZtY81z7XLPlmnU50nVc5ZmknZtc4tLdvkVhe
+3aCZ7pndu/8iXv/UjAJsQn969VdniyyH+3laND+y138QJ/2CSuJuaavuzFq
JqpkjXWt1Qd/ikp84NUn/0F+vZo+Zla3YIxX9kTndr47qYuHu6bJxzMmztBK
dDjta9qblqrGxqk98Djn3J7oAManEVMRW5GjLH9ZYENbkDahmVqJvyZW80QR
+9dZzXDT1NGNL3Muxzc9WSO1r5/XvV/7dP+ffbhPN/YEX9u7Hh8yfYa8Bq9l
zVaw0Ts4tvDdRn6d/h5HvpH0+ZQf1L3/RzQS/8l4AeJnh9aDrxtjYD/b78Qn
Td8077n3/uJO7KpHd/8/7VsTVzNHOl/eLOZG/gb87ET+mp3wmeQ1GT/GZ8pn
S59a46O43zOGS5Nz25K3cSe6nrZ84x+c4xzcE06dfJtJqpmLjYFg/IR5GdMb
pfhI6yutfXyTeviP7pf1MdTX0D2T/ofGPNNvUf9F7eN/cu478rcRj28Frxer
ETMS35fzI/dHf333f9p/3izFhnxoM3tc3+2xXfzQ9fYg0htVEi9L/+K1evP/
GO/rsXbmZmO6ae89opVYH59zXN7Mnsu9l31oX9Le+WQl/GRjWzVr2RuKFxvP
ZvdWdKu35XQ2g6/5boiZiZ0Zr05d3DnJucn+tTU/UGR9cAyORYxxsS42IFYj
h1L7gvzzRUvBXMSJxVrFvowZ5vMix0eujz63e9cS49B4bnKx56e9xzk3qD+c
W7m32rCND3ZpLbZt/VNq3f22+27j60xbJCaAsQHkFasr3VaEj67Prr67+piJ
38spF1+p9McfVxu72M8L9djetT3o32If+r/ov2tZ7fHa5fWp1LfSMX5WDydK
bpQctKdr4XDK5VSXmI/2/q2Fry9+KI54ZCf+H2Jf+pvpg6AvgjEwjS/ofkEs
9fki678x2ozVZkzFsbXEwxzWE0xA3F/MUP/Hcnc+nLkSbNIYK8b3cI1yrRIz
F6uUgyUXS3uyduW1O8HqxHgX7WLhYpPGyNQ+J3/s3t74AMm/N6ahsQ3l0D1X
SwwzY5nJEX+9Fh89ffXUz8+qx1/d+DNyxuWOT9AINrlPX+x7kzDGg/vDb5Hn
Ygw8Y+EZM+LXauJqiXUZw21+x9YO1iVmLHZsDFBjgcovkGdgjFBjhRrD5sdq
YrL9F5tNTK8ajpRcqcnkKFK+1QgWY8y5BeuJsWisRe0Nxr96vRVbkpj4G61w
quRWyfEVb/yrHaxODFos+lvqb9GfGGMb1aL7jELekqPdSEw7Y9t5Tg6q58z7
ros3y9X5D7srh48vR1+uvj79h9aCeQ1nbFvXg4VN2Mj9cz/ivqRaDVa1j/vV
Rvaico8sY9lKNXnqI9/WY3sR69qsL+uDMf2M7WeMCGPCyH8y1pc+G/pu+I5e
Uw/nw3fXGK3GatVH5tR68ED9Q+Ss6K/7H5+fvOPqwZb1wdIX66i+2Ff177y0
CKY8RSPxBI/sjtdnQ9uIWLccQu3Dg6vBovUBNd7QzNVg19Yx/qDv3NXap0p5
F43peVcl9pMzuvsrfXblUMil0N9BLrMc4m3biZf3bm/2u+o7k7qH7o3NVdur
eOk9lbyP8oOOaSZWx/698VfSp0/fvnu9D+TPRns/9wbP+JR6nzUTb/Nh8sd2
ujEti3AgN2tnz+bebY7exL9avZP9ivsW9WP5l/oeiId9XokPgb4E2pS1La9U
jw3D50n87UeOIbS3vzpHM/yKb4rEhDE2zFht1EVibhl7a4p2rkUd5Vh1Xdr7
tTd4zpeV8Im27Y0O4P7RGCDGAvGc8VnkfxoLRTzl7UpsSsYD/aMeW9NezdjW
d+tN/IHPGrG9GUPIWELGC/2gN3jCu5Ws8a71W/cmvpDlTavTbNMM5iH24X+k
f7uYhdiFMV2MH2e84PV7/vubi3nFfrTJ9EZnk8swcTtjkYMg3+ULn78iPgf6
Hoh/z1vN/Kw9wpgp/8VO6Y0/gvbJAyu5h3Knf6b+9NzLA3vCp3lRfJ+8tym/
djs2Km1VciqNZ6uPnfxFfVHrA4mxIfdIDpLx5ozpYtwl91TitY800pZ7GPcy
8mlfRV60J/tTYzp+VCRmsvGNjFlm7LLHivD9jHexZ0/s066/xleaoTfnjJ/p
/unRIjHPVm0nXsL3RZ4v4ynIDZBbMLQ3/jBiQ2Kh7hHcK4gJT9ebvbdYsZip
2KnPoP5Bxoe4rzeYovtLY3gYe0Ib05/d51XbtD5F+hap7xqf5PFK4vt5f+Uq
ydmWu61/ktxtOe5y3fVRGl7kP5DP/W8zsXv0qTXenj5NyxTh9Oq/YLwxYxcZ
k2Ij7UfkjyklnsYbzdgn5O3K3x3ezjvtu22ZCVvB9MT2xJq0dV3diH+Ze1r9
zeSIyxXXZ0PfDfkLxiExHomxk7TnT1RPfA9jdegPY2wg8bX3K3kefdb2cg5t
R//Tt9KYDcZ6e4L8y0rhIOhr5fysLqV/2y3k79KKLqTPjb434oPGltPHR18f
7c/TVjN/a0/UX8hYf/pg30l6n1ZiW8spl1suHlcqhdMrt1c+gH6qcqzlWjv/
qvuIp9zQTrxHuZFyuOVyy+d0bN4j79W0zXDj9WF1f60/jHO3nHm580Ob4Q7r
A/wA8gGt6KL6uN7Xzbcv90DuheSgy0XXB0p/Pu1rd/clhvPb6rJc4xlF9nju
9eQH7FQPp1rfDWPq+n+tjLwr8muNpLVRrNNMDARjIYghjtOMv4qxvPVh0ZdF
vpZ+3vp7i3fpLyo2aYzDWnf/awzT/2xK7dh3T+zLHlB+jT6mFxc5p/+YmKzY
rNegf6o+mheKFfbF/3VoJ1igMVjcL8tHN5a2Pjb62sgXNxbemt3rE3/9uic+
ZPqSyfGS62VMXf2lTuA4qy9zpP6oi3Wyl3RP6V78Yd+P3sQ4Nh6g8RUXLyVG
x2zt+KTqm2oMLu25+mgZ83VIEd8tMWmx6RXLiW/ofkRfMGOQGotUm5O2J31Y
5evrj/xvT2KkGSvNeMT67umzrO/yDYznot7owMZfX5z+RhfZ47vXv5H8i3sT
k9H4W7ciX94bn/RDbL8R7pYc/JVb4c/01fPOGLtE/ye50/oI6Sukv6y+x8bE
MDbGoGZsp/ok65vs+qJvrT69l3XXU7kd+jTr26x9UluYeMsjzfisz1qNj7S+
0mfS9+zV+OjqqztRM7q065VYgz7MPh/G8NC/U47RXq6vlXCPLK9v4PVdfNx4
yXJp9YnTN26JTrAPMQ+xD/2j9RXVh1pfavl/+s4Zo0E8fFHK7F0EcxJ7WqgT
rmStiwX5PtxdiQ+x90MfY32N9UHVF9X4bz8W4Uupz+uP9Zu2ilL8lXR21PdK
/o76rTF/jf0r5/jBamIkyeXXPnd3NdfktckR1hbgGB2rHGKxfGP2y82To/cy
6SVb4cYu6x67kRhJzu3O387jxgQ2FrCcZnUy9Z3feD5UDT/vD6ao/uDeQqzx
S86N7Mk3CNQnjLEqN6+tzbSSmMK2p4+M+tku3f7+1xv9T33QNEMpPqOtReuJ
heSewb3DHPXEltDer92/XgvXx5gvxn4xrrZYoDHQjIVmzD+xL/EpcSp9svTN
0sfh+Wp8WOQjGkumPJCYfpY3JsV5lcQ0M7aZdcW6Vqlnb/Sfj0uli4n0Z18i
VqL/ovxVdbILKomTrW+APl/6fr1UDRfUGGzGYtOeZuwjY94Y+0Y8wti6xnQz
tpvfXzB2pHxj48HoryLXR77wZZVwgox32dPd721Tz/5HnzF9x4yZbOxk/zP1
U2MwGYtJn1LXT/FiYxsZ08HYDnKMxZpWroR7rD/YD0Vsmu5n5X+IDX9ShG+o
f9kOPbG5ub+Xz6QtXp1O3U4Os1jnKpVwm+U8i8WuWgkX2vix+lqISatPienK
Tf6ii/Uar8VYoHf1Jn6LGJO+GJ/Ugz2Jh6hracMVbzCe2Y5id6XEL5JzfVRP
bJlyseVEiy2vVglXWo6n+trwSrif6o/6yxor/otOOK1yOZeuhOsqp3OE+91K
uJ7GWDLWkj5d6vN7dGVjSKvTG+NWf385PcZHNwax3D5j/qu/u6a7ti/TxdLF
y/WNNSaFsSmmbMa+pp1Nbr/xUkaXgh/6fBqPVjhJzMP9vPwvY78Y/8RY2XJU
VyZ/xUq4q3JeV0JeoRIu7IP12E+0mWg7USdXN9fWKPddPobYwafUma2ZmGBi
T35T4TDaeLoSXU4MdlQ1Ma71h/EZ1D9OfNW9szFvjH0jf9i9rfO587r7beNh
n9GT/bj+i3/TxEGl+EMaz9pYGoeUEnPnP4wbebNKsFPjSao7yKmep8uVGdab
GL5+M8J48u7tfEb1F5PzLn4o51rutRivtrn9utivmLDY/chKsGIx3e2QN6wE
6zU+pvEixPCM/+f3KrxfviP6W4np+n5OVAvW6/cpjBXuHK+/lvHw5e7/VMSf
y+9TuB9wD+H91B6j74n4gfZE4/Nv2hMfFPEd5x99/eVMi8/I+dikJ1iKXBA5
GcZbNNagXA39NV3/5GTqT6d/mX27v9e/ze9dGJtAH2r9Z7XxGy/N2Gba/rVh
G2/NWG3atuXfGStV+5T+ynJm5M7IoZdLL2atrU8fDbHsVhe/l5MuV9o9pHtJ
sTV9KbSZux9+qR5bupwG9+8ja+E6+L0D/ZG1X4k/adPUtnl61z5pDCN9T/RB
MZ6t8QSO7MkeSf9n+VHa9mfuSfwe+ffaRx+oJN658WT0nVSHMh6MeKS6ovqZ
epo+WPpiqcM9RPtXVxNbVp9B518xbLlM/9aDbcuXN9ahPv1TVBNDXexYn3bX
A/3JjRWq/qIeo01aPoq8FG3Vfj9G3zjtI9pJtNnLbb6jElu+/H+xQWPUDanG
f9rYnsZIn6ya70foW6XOpX1WnzF9x+QMyg/Ubqz9eJoi8fMm6yT2lD5d8hGX
6cR3RD9M42G4/vp8uX83HuGJlWDzYvTa4YzP4PzqnlP/cv0HtTfoP+H6KufY
91nfcLnIcsLVb46rhCsuJ0D+19vVcAW05+r7JIdLvqDrvbEjPi8ST8p40T5v
cj6Nx7pKJ74U3ittS9rwteXr4yb/Rf1fW9k1RfyhXLNcu7Qlyp3XB05fOH0W
9W/Uxq+t/6b+8CFqtcQN0MdUX1P5g9pC9BHSV0i+9J71xJuTvyp/229LGPPW
2LePNvItDGNwfdIKpi22/VwR+7L+gdrKtWlr29ZHS18tvxexQSf1tX3KqZJb
5Zgdu+c+pr2VGvl2i5j8R63EE/VbNsbsNnb3AY3oe8bANha2+2G5vsYgNhax
PlDqKHLA5II93gi32Bi8xuL1expy778qwo/Sp8P2jEFgPILnm4l99WM5+O9z
2qCQS+RvQP5Bjeh/+gwbP1kbjjqaHAptO+IF91XzfR2xQTE/fehcv8UCjX+l
bds1XT6V8aS0peszKL/HeHrG/tHHTz6QPiD2Z8xd47ctUonPmvFBXmvGx0Cf
NeOH6HsgP9g4VMajeqkVfxJjv7nG6p+izvdGNfHE1QV3JP/QUmI4rNXMNz/0
URNDEUuRw/poNWOS26qOro+g39/5pBn78ZvVfA9G389tO+ECGCvO72W4xrrW
eg/93s6zjcx9flPnv2/riKHUEp/K/Z34u/f+IvX1Rjjp8nCfLcJPPaqVtN8M
8ttBfqNG3/jvyonvor+lab9JID/a/2+KIt/88ds/+pjoa/JZkXgyzzfCbXQO
kYvyQiNcdb+J8itlPxZPLxLDwG97Gc/MWNfGqPNbEPocu18xxpvxu+XLflqL
P5n+CK82YotzjXat3kebZ290QnVD/0+/C+I3J/z2hPwq46IYH8Vvu+jzLt/D
mCLy94wn57NlzHBjh+v/bOxwY4jIZxTPMta3Mem+7t7vCXuzp3FvYww5dSnP
+T0j4/36rQtjthu7/fFmYuu/X873afw+mLGO9MnUN1OfcH3DtdEZX0f+qL72
fgPFb6How6wv87rlxCOQEyiWfHUp8XLEV/TNMEateMuTrfguuGd3766NU1vn
xuXEEzO+n7HdjYn3biv8AmMnGvNEf4MDOvmvxEzFTuX465NpfBa5/780E0t4
vSLPt+uzWL8+KcbvNt6z74L/8ejufly7hPYJue/y2bQxynE7vzufXFqKD9HL
zfAp960l3qixQP/XzPdL/MbI743wYeUwOn8f0Yn/tlxQ+Zx+T0D+lDFVxJT2
6iR+nrHsHi6CV8ixExu3T+OH6yOzfJFYO/rOyMd5rBqfRX0X5VvpR6CN+vtG
4g2oe44qgnfIh/f7HNq4jMdqjCZjNRlD8bhWlx9by5y7bif80MtreQZ8FuRH
G6tUDpZcrEor3DY50vqrGA/BvbFzlnOle1D3otZZoRV+uFw8MS6/NyK/Ss6W
nOjRnfBL9QGV43tKM+vHK9Xs7/XF0+av7X/zIvO/MRcqtfRp38bLcO54u0j8
X+M/OBe8VSTesPxHeetyeqZuhj9lrC5jWuzVio+YPr7GY9N3TP6bcVuN37pW
K/xn49jJ4RM08Bswxqx0jdm6k5jyxjk33rnfOjFejGufPsfy2fSXMia3nMNq
M/x3Y6brM/pvI98U0gaqfrxNJzFkjSU7rMi3MPzGhzF8xey36sSGsFQt+p62
BWN4uq9wf+G3kvTB0hfrn+7zqL+OMYPkzG6krlZNnHDjhd/eCubut3XknIjF
e3+NbeEztEknOqYxONyfqHvqs+93+PSx15ffb/YYM9Dv9WzfSPwcx7JVEb6f
9ipjWKjv6yspP1G7o/bHY9rhgMgFES/y20KXtfJf+w2oy1v5pqIxZfze4j6d
rFEHq79Vsnbpb2ecE30CjmwmHryxYw8qwm/UPqhfghzNjnu7gcRk10b2XSPx
BYwDajzQh7v3z3fZby3p26YOqS7p/kPfMP0NjUkvJ3KzTvQrMRw5jod0n//+
WvaDYjPGGzHtNxj8FoPrg2uBa0KtnXhGxv7wGxR+i0LOhtyNNcuJnyVf128l
GdNdfzu/caNvy7vl6PPzd4JPyBGTK7ZAJ/iEHDS5aHN1st/XJ1v8Yk6OFYv4
ZIuPTNbM3sJv0vhtGvnL+ur7jS2/tSX/y28X+Y0bv3WznzapcjhEfn/HeCDG
/jPG6AOtxBtw7teH661m/Afvr6QPY4nO3cn+XR9y8ZN5Otnf6/MtnqF/4sWV
fA9Fftt8neA5cs7knulzqu+pMUGNN6k/gN8qeqrrT2J8MWNT+82D21p5J303
jekoPj8bbSxSxMdV/MP4Z3J7/SZJbzP+kFdV8n0X+UPyiUz7TSS/jSS///Jy
fOT1lZdPZaxtv0nkt4n0jzUWpt8E89tgvmO+a8ZYs/15xSToX06U3CjjL+kL
qU+P/vrimXKD3WPo7y9HS66WMTSN563Pg74Pcpz8PtOsnfgu6/Mr/iMHTy6e
PpLGG5aDJxfvpnLeJ/en2qqvKiW+nf6RB9QTz1d/tVloY9YiPtHiRfIN/S+M
GW/seP3F/DaMPtv6but/IpZnTHdjuxvvwrbF7N5sJr67sd6NCX1aO/OPcYCN
B2wsce3vxgI0hrmxzI0Za+xYbV5+X0T/Rn297fNE8mdiTFMW8QnXN1z7rtii
Me9P7+L12k78JsJRzcQvV1c1Zr6x841vr6+kMeaNNa++Z+xqfSz1tdS/Ru6z
3wTy20DOR9479wzuRZyTnZt9BvTv8BsQ7lvdv/ptCDFosWhjhsvvds127TZe
3iWt+K+qKxoT2tjQqzSTZwwHYzkMa+bbA8ZkMDaD8YKd+/ymmN8WM6aAsQWM
L2es53HaiQ1ujPDD2olZZuwyYxa7HuzczLcp5Iwa719/3GNr+T6G/k9yAuUG
6lPk94+Mj++3WvzmwdWt8Af9NpLf4NC/Wn+Dtcvh8Mvl1ydW31jHfEEr/7n/
vd+8M76QfLq5e+MzpO+Q/snHVMIn0p7rN6D8FpTfVPX7Muonq9ayx9PeqX6u
b7Y27N/I/5ZzCxdpU36e/Aa5FMY00z5vPBV1WXUe48WIgYqF6qOqfX72TvBQ
fejFD11fl66Fc6e91f2BsW/EtLR1u96vUEtMY/V/v9co90/M2ngU1zQSq9tv
+vr9Q32exUf9ZpvfZzRmweAi34z4qZU9nHs5v5nh96im6oTLboweY/UYw8BY
Bv6n/rd+o0R/4I17873CNxuxPRqTr9WV5eKrn8nF36KT+AZik9qetHFrnzAm
tN8DMgaKsVD8npGxAvVn2qycmEHGDtJf1r4255oOJf+wTuI56DMqv8eYhOKS
I7r2bn0aji/CTdJ34lDx6d7E6PN7Su5R3av6jRG/D7VJ9/kc2ZvvN7/TCNfU
bzp3urJ5rqcbN7P/MxaLPov6LqoP/FrLO+v+TP1pk1piZusvqT3bvYg2Q22H
xiNyrZTDLV9+jk7wcnkO4smbdxK/z3fYd1n9Sq6G8cMPbMV+LTdczqncU2Ns
3lDkm4R+L097tWXl2Mu193u2xpYz5qjxH1xftYUaQ9v1T86m3E3fIf11jKE1
pkiMM+PnftlIbJiJu/iw/ovujSaj/Wup+34jXNxBXTz35UZigRgjxFghrzQS
i8MYIcYK8fsC+v4b4874H+5Z3LsYE8TYIPIH1DX8hoP2UPfw7uWN/67/3ktd
/NgYEMaC0P/Eb/f5TRv9569ohpviM6Q/3Itd/Fn7obFX/P6CvmdiuMa/eK+L
f4/Txaf/DxYQOoA=
            "]], Polygon3DBox[CompressedData["
1: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
            "]], 
           Polygon3DBox[{{2937, 2936, 3958, 2536, 2537, 3959}}]},
          Annotation[#, "Charting`Private`Tag$21573#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0t9rzXEcx/H3OYzZZhsXSxHZFKW5MpuFC3LFpNV2gUP5VU6xwsVRbnQS
LpbckEJunLhwQU77YfOjLX8AzsyPcYZsaFGKcuXxTZ3veT1fr8/n/fm8v5/P
d/n+ns5jqYh44qmaHZHwoVkRW0FHdUQ9v4MuozvpGtpJN9Iuup0eoLvpcXrC
k8Vn6Sl6gZ6nvfQKvUQL9Dot0oa6iJtzIkbx3ZqIJemI2/p4wf/Rx2K+ZW7E
S75fvg6XcAm34jFcWxUxwL/CdXgQj+NBXKqIeI3r8UN5m5o3/BBej9/iYdyO
3+FHuFJvXXqa4Beoeyzr5t/zLcbu4w+4DffhMs5URqzQ6yZ+kv9h3yb+jtoR
857LfnufRbKCrCgbkd0wPy1bWxtxTf5Adk/td+e/UtYruyW7KrvofMblZ2SX
ZaPWOy17JsvJziXnrCZnblF2VJaT5WUHZQXZPlne3keS3L49eFdy//po5afN
bcTbZCdpXs1mNRv4GXtlzWnGWWOHjTUaW8rvUZe2x15ZjTHXGik+w3/lDcdf
c6fx/OQs8BS2ZPzCX7BWotl5/+RJrPY3g+fhVfhbcje4CU/hT2pcW3zGH7Ff
lPEksHVM4DImUW3xDHZksVD9U6FXiTELbEn9//b/AUaZYmc=
        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwV0MdOlGEUh/HDihCGErph5dKAcAHEsBbDxtBGXBh3soA110AdinAVUqTc
AGKFRCmDNDEOva1EV8BvFk/Oef7nvN+X9334uud5d05E9KI5P6KpMOIZGtGC
/2jIjfintqIN3xMR7epJUcSSMzW8g28iiSleXRzxpyAigw923snWzdLYQMrZ
aVmJ+SGW7fzgffodPM2LmOGl+iN8NF/jb5xL+PaurB+zsjL1GJ/srPNTOwN8
D4N4LytXT/DI7C82ZEN8H8OY4xXqKZ647yZP6X9hBPM86VwGZ/yzf6Vlo/oD
jGGB35hX6s/xxc6WbFz/G2+z3zJflFVl38Y7fLXzk0/wW/7KvWv5g+y78G/m
27zLuQL3vpNNmtXJLtRLrNh5zFftvDAPtVOtl12ZX2PVzkvZPVihUiE=
        "]], 
       Line3DBox[{2894, 3554, 3882, 4122, 3568, 3052, 3648, 1601, 3291, 1246, 
        3649, 4164, 1602, 3292, 1247, 3987, 3650, 1549, 1603, 1251, 3988, 
        3651, 1550, 1604}], Line3DBox[CompressedData["
1:eJwVzzkzg2EUhuGjFISaIB+VpbbFOpOOCaO0S2uGRu0fqI3Q+wuWTm3G8iPs
sa+hcCnueZ5zn/f9lqS4Nr1aFRFzmKqJ6KqP2MOk/lIX0a1nGiJe9Yl0RJnP
y03+GJf6m12ir2ML7+ZT57L6uLvP5k+ccR9yg+/ge2oj9tHINeFKX7FL2/Xq
B8jwzajw1+ZtvU8eouX/mfwMbswlc788wix3jlbu1rwjB+QgTqoj5n33F5cz
L+iLyDvf6d3L+rfdkqzIIWfG5C7C/sF/jHBZc9GZRA6bL9x/tLvX27h23OmF
VMQTP6r/cL8o638HBjaC
        "]], 
       Line3DBox[{2898, 3885, 4008, 2897, 3886, 4009, 2899, 1062, 2511, 
        1078}], Line3DBox[CompressedData["
1:eJwNzTkyhGEUheH7RwJD9wYEEglVWIJufxsChWrz0OaxtUhsJWhkhh0YAksg
sAMCZSajPcFb59xz7v2+lsWdkUoSESWM1kd0ZCJOUeQ76RnG+C56jnF+l7Zm
I9KmiN/GiEc6IV+iRV2b7rIhohv7+kldWX6HnOwKeRzopnQZ+4d8j+waKarm
Z/vT+iO+ILtBL9b88ye718/ol83reOf79B+02Zsbspq9WfMKv4lPvt/OhdsU
W7LAnHyVllGQt7sfsPclz3mjRI9prS7iRT6Iit1tzOv23Nwiwbf5Vf9D824W
aNZ7J/yQ/A3DeHCb4An/QEQ1Ow==
        "]], 
       Line3DBox[{2915, 3890, 4014, 2914, 3891, 4015, 2916, 3892, 4016, 2917, 
        3893, 4017, 2918, 3911, 4075, 3313, 3063, 2919, 2524, 3654, 1565, 
        2920, 4142, 1345, 3314, 1347, 4053, 2921, 1333, 3147, 770, 2535, 1104,
         772, 3148, 2529}], 
       Line3DBox[{2927, 3158, 3317, 944, 4113, 2926, 3064, 3316, 775}], 
       Line3DBox[CompressedData["
1:eJwVzUkug3EYx/FHYtO54QIk6JK1Q0hYGVpDD9BG6lUVJeoSpr24hSuYSg0X
YNMtRXy6+OY3Pf/3nazWl2ojEVFBIxNxWoi4pds44+9ognP+njZxwT/Q1jDz
l0jnIx7lFG3LpWLEAv+V9V3atS3zx7ZZW1O3g1XdVC4iw8/bBljRJfI+dlGW
p91k+Qlvn3xrTbcntzDgy9718Wz7ltv6IxxifXhr6yIn99xUdAd8ko745Wd8
/0X/wy/yVxjzr6o3G7qS/OH+1c2fXNOP20fptW1Ll7cX8OZmU+7Y5tz0dB3c
6Ir0E+9uTug/3+w1eg==
        "]], Line3DBox[CompressedData["
1:eJwVzssuQ2EUhuHVblQdewXETTjMUdQpu206dJjTKhHRYpdbQcydrsmEGR16
9uDNt771rj/5F47b6WkhIlp4mIyoT0eUZiIasjUVkcqOXi5H3POZeYAh98L9
zEacYMDt6fv4447svrGrZ9y2HPNuRzb5pBJRMydutuSdmx5/PhHxyz/bPeHW
flMW3R+6bXAbehU33IFdgRv1dt2uzq/JR6yi72aeT/gvjCB105ZFb6tcJnvu
zuy6+T7/J+a4PnfNjeuf5ktc6R9yJe/md7mMC/ObXELH/CoX0TX/A65YKIk=

        "]], Line3DBox[CompressedData["
1:eJwVzzcyxAEYxuFvpZkd2Uqj04mFermEGVlhdmVm1bTsrngEqcUBtE4hFHIq
uIH0KH7zfm+Yf2jPrAzmEhExhXxlRLo24hwb7n16Sws4cN/RIlbdh7h319fY
Io8jWbYqoqM64kGXcWdlZXURJ7IhzMg6aYP9o800f2kzLDvFCOZkXfTDpl/3
hVlZgS8idN0YkH/jVzfKn2EMC/ya/Aop+yfvmZdturdQYvOj66HPugQdxwSO
/7+X9uJFV0onUS5vS0YseU6jZzThVb/Ir+v6/OONbBsXsmb6iTebZf7aZoev
oLs0J2uhrXi32aN/T4o0Lg==
        "]], Line3DBox[CompressedData["
1:eJwVzjkvhHEUxeGrsK8FhaURtJZhWioxREIUOiQTLWMnKBWWZOxLbSltJaX4
FHwCvsGMJR7FL+ece+7/vm9zOjM2WxARaeyUR/RWRzxhm++jz9jlL+kH3cM4
f4W5iohPOUMnKiNSZnU1EXd8O7JVER10Xj+tq9XdyjlvFs06+Xt0YUF+s1OM
EuTttNEWtGLY2xH3vsyX7e7zpeYHNKFbMjvkj/BtZ4Bm9a/I8YW+MUp/dCna
703+/x6KdJMYtHuNVbcS8rGum67IJ/wphvQ3eDGrl8/QgDV5yzzlbhmdkTfQ
qDtHE9bld92Umxfyr3955HvwgCQ27fwBqiI0lw==
        "]], 
       Line3DBox[CompressedData["
1:eJwNz8kuQ2EYh/G3KE1PW1aWpG6BmIeyZWVPtGLL2gJBJEK1loaYIlwAYgg7
wU3oFbiI+i2e/KfvvMkpVtbmV1MRUcZRElHqjHhHlZ+mH6jxG7mILczIv9jk
l/IRs3x3V8QTP4gHDGHbXqaPSNubbuzqhuUR7PAN3wYt0D97HV98SveJUe8S
eYw26Z7utBBxhhY+ox/Ht20BHXyrPqGL8g8m+CwqaLO90EYm4tyNSX5ft0yf
Mef9PfL8hT3HX9IDb65oXu73L+tyFT26a/TiUF6xD9hv5LT85s4UXlFCTXeS
jbi1t/PHKPJ36ENd/gcOAC+Z
        "]], Line3DBox[CompressedData["
1:eJwNzrsuA2AYxvHXoqrV1pkgUSJ1A4wWs8ViF6eScAsGKgZJtQ51mEScD5OF
dDM43IJwDVyB3/DP/3ve5/2+fPnZtenVhogoYjcVMZmNqKPsXElHVPEjV+SE
8zqa0JiLeG6JmMNwJmKeXzBlN6F7ck7aW+Cqu4v8pms220AKe+Zls3eMIm1W
4BYe4hz27ZT4G60o6V6xhV/5QL/k7Yyc5Cz/mR+aF+WcnOZWHvOvS3+9QE1/
yldo022jHXk7fe4PmB/Z+eJ+eQYTuoy3avZuzK9xbOeMbzGu79DtoBN1u8sY
0S24/4E75y7dOXfzPQ/ixDub+k88yD26XfTiUV7xToH/AVR0Ml4=
        "]], 
       Line3DBox[CompressedData["
1:eJwV0MkugwEUxfFrVzG0iYjEVG3NYSMSCzs7G9PKWiI2tLyLIaia2bJC0Dax
YMETiOlN/L7FP+fec8+935BbKS0VGyJiFUdNaI6o4DcdUdZ3qrfRhdvWiBGM
Yr0looZu/hPtyETM2amrN1CxW6RtvHmkzHdke3BstsCrold/oi+Yj7mb5o3T
QXrKf6dZmVleH52RO+Pn1Gn38/RP5px3J9Ou3uV9qvdoXv5b3Y8LmR+aTfJm
meQb1Mt44N/jUqbEf8Uiv9H+vmwBb7xNTMhV6SOdTkV80YPkPyTvjSs31ux+
4Dl5ttkhBlDTb9m9lply+0ZfT/bMyhjCi34Yk/gHDww0Ow==
        "]], 
       Line3DBox[CompressedData["
1:eJwV0NsqhFEAxfHt1pkkN5SiSDkk4opSyu14Aw8wU86MswfwCA5R43wcFy5k
hhmGl8ADOM0t5TcXq7X2f61vf7Ubx2KRaFEIIUrJkhDWykJYpyr6Kw/hl4Yr
Q7jSpeQ8pSlXGsKLzZs8qI9VhHBps4J1Y6t8z6ZYtyzfYkv8wiYjZ+lJP6B/
xnN0rlvgXbpFnnLnrk1cvsHm+ZlNp/xDQ76N2zzaZHWvWIaf2uTxe7kDe+BZ
mzRvwFP8xOZdnpW/beb4js21XIMneb/7j+0SeLtzHd6EbfAj/AP7os/Cf236
Cu8k1xfegh/atOLVziO6UX6ARfgdbetm/Hea9vFJ3ua7Kb6lmyi8l/M4T+ib
3dHj3Eub+haqdc8/HjtEwA==
        "]], Line3DBox[CompressedData["
1:eJwV0LkyQ3EYhvG/OraO6HTGDVgSZrQ6cQcqVWy3gEi4DsbW2ndmkH2xlzK4
gVD7neKZ93zv854zmfTPzKXSbSGENG5jIYx1hvCHcVTbQ2jIJia6Q9joCuHG
JuH+RRJ7Ng+yj5u0ycprmxFdC6PYtVnTNxHHve7Kpibr2OHHvFv1XMEldxe9
q8vYb/O5jhA+kMUF/y7j/BJf4d/crzjnFnW93LBvvOjK/LP8dD/JM5uWTd1z
AyW+zP3o1nHKF90lFLmazbd+ASdcxV1FgZvXfaHsPo7ei76HPJf0Gwq+kccR
9ygTupz9VvSf2GVwyKW4AW5aTmGQP9DP2sb0Q7pV2039iuzRL8t99z9wsEtn

        "]], Line3DBox[{1642, 1641, 1741, 1639, 4047, 3124, 690, 3125, 1290}],
        Line3DBox[{387, 1329, 244, 1327, 2045, 386, 1651, 243, 2189, 624, 242,
         2650, 1323, 384, 1321, 241, 1928, 241}], 
       Line3DBox[{1924, 239, 1925, 619, 2184, 375, 620, 2185, 360, 621, 2186, 
        362}], Line3DBox[{1314, 380, 1316, 240, 2647, 1318, 382, 1319}], 
       Line3DBox[{364, 622, 2416, 2249}], 
       Line3DBox[{2188, 623, 366, 2646, 1314}], 
       Line3DBox[{2383, 880, 3294, 684, 3293, 4074, 884, 3296, 685, 4087, 
        3295, 888, 3298, 686, 4088, 3297, 892, 3300, 2241}], 
       Line3DBox[{880, 2384}], Line3DBox[{2188, 364}], 
       Line3DBox[{896, 3302, 4089, 688, 3301, 899, 3989, 3121, 1055, 3120, 
        1286, 3990, 3123, 689, 3122, 2624}], 
       Line3DBox[{3149, 4018, 1568, 2923, 3925, 4077, 3315, 1352, 2924, 1344, 
        4141, 3151, 774, 2925, 2305}], Line3DBox[{1096, 2922, 773, 3149}], 
       Line3DBox[{896, 3299, 687}]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzrsuA2AchvFXJFolSBxCJBJxSK1SU5kMCIN0sxgsNkY3wAWIYDAYTGyW
GtWgERZqIQwugQuQ+BmePP/vfb/T+NZubactyTq+OpLXUvJWSBa6knc+7E1a
ss1istyZfMj2zJ98pBvTFXGra6KBU/mi8w/mAd2+vc/mAx60LmG6L3mRtfDr
3Wtnavp21M0bfMbd/G3PD86t+62HvT+CC+tRvpSV+YqH3HtsbxkzsgqfoCCv
/99pvuE5ruirXNQ1ZFP+fMdLPIkJrOgeZU/Ytr/p7/OyVfOsfo3vZT34A/mR
Kao=
        "]], Line3DBox[CompressedData["
1:eJwVzz0vg2EYxfFL4q1E2ki6EMEioaNEjG03hEQtNiGRSJroSvgANjRGQxks
Okq0i0S7iK8g3gYJ6WZSFr8OJ/9znes8930/k1ulwm5XRKzTe2/E+EDEc19E
sT/iBRcSERv8Ir6a9/g3PEtGTOgm6N4uPxixlIpo8I+0Kv/RO9Jv475sky/I
M3q/sifZH67JynYtZx6bT6ibbs2fOl90zrfwQDep+82nsCI/lA3zF74ZwUtM
u+NUZ5TGZNNYpuvO27HHvsrP8Bn7OayZH5w3a67zU3RnbmDW/zUxh9v2VXfO
OyPLD/E53KEP/StnLfM3tEK1zpvpHwPyMIQ=
        "]], Line3DBox[CompressedData["
1:eJwV0EsrhGEUB/Cj5DKva2lQGC9KZoYP4VKYcUksbdxKiTU+gY34BJZslJIF
32DWLM2GsrBXFsLvXfz6n+ec8zy9venW0dphQ0Rs8tYUkeYiRjhoiai2RlRo
64q4k0ssc2y2Kn/srchT52n1DDXnCftz6lle2Nbb4czentzlnpPsLs+dEZdm
G3bXSXjVr/POkPfyer18OvfLPsb1r9xLsm+kW90h22k0O5cDfDOY1eY9+gX1
RfYuBb2SLFNU133LbXPEcBKxwCI1vXlZpULKr/1Rb335jj91yDHnklmZx+zf
eG+fD/ev7dzw4DxlPsmTnX8heSnr
        "]], Line3DBox[CompressedData["
1:eJwNzjsvwwEUhvFjQRGtGrCIJq4Lk8EusVISYqOupaUdhQSjxSA2l0+gQnwE
4pLuEoOBQZgkzOI3PHnOOe/7v2TmN7LFmoiYw3ttRHdDRA8K9RHZRMRnMmKC
rzCJKWzJZvhLNs079mVewb65ORWxbl7DNQoo4kBW5hJusI2k7g4fyfb4z7d3
+dieMw/KF/jNbYkXkW6MGHNfNeeR0C3xJobcy/yj/82/3CpP87P/beFDdCGD
TlmH973I2rkNlbqIO/sl5+Rn3nOOV7dh+6l5VO+Em3CrV5X1uvWjDwO4kI34
nwqPe66ql+cP3Ue3J8zaH/geKfwDnXoybw==
        "]], Line3DBox[CompressedData["
1:eJwVzr8rBHAYx/FH6n4woBSD5YpFfiwK5dxEfmyKlNxJMVKKkUwsDEpnobhz
KWUhiz+AxcKmjH4sNzIZvG54en8+z+d5nu83s7w+s1YXESvqMxHR3xDxkYzY
SPF41BSxmI5Y4vP4pbdLf+OxrKBXpUftbeMk7mB3c8Q0PaF++Cncw3ncx183
/nCB7zF7QBfoQ8xjUV51P1Ejn8TWxogUJrxZb6dodkt2gpt4IWuTnfIV+gzP
3WjXu+I78VLvmq5gWdall+F78VaviHe1fVkffSN7c3vUe4N0zh+GsKxXUsP0
iLm0/LH2Hv2E95hVq/IS5uTv5sf4WTWuHvg5fMas/MXegPuv2KHXov4Bsro1
cA==
        "]], Line3DBox[CompressedData["
1:eJwVzb8rxHEcx/E3gzsnkUFRBrEKyRmcQSiDyYRJ32zEYFEMh8kpi3NF5Efp
bIr5/AksTEaDUBSDkccN757P9/v1/rw/ncnK9HJNRCTqtS6iLxPxlopYTUe8
43x9xAf2m6/jCG5gqSkix7/4t91Rnudr9qM5YpP/mP/ilGwH57CAs7gn27L7
V73FQ23razGR97ixL1viRVzEY9mnf1P2Ds3O9UeY1rfYb9S38VOzMj/Ddn0r
z3tf1u/iFV66U+CJ7AC7sKMhYsCdbl4068USVuxnzS/4HR9yc0F2gs9mw/wW
c3iDkzgmy3hzb/+aP+A4zshe/F2x91i95c8nnMCsGlT/uc8z5Q==
        "]], 
       Line3DBox[CompressedData["
1:eJwV0L0vQ2EUB+BzDb6FRLrY+AOoj6HtoN2I0WKwtP0DWCwMJBYJrTIYGomF
SuysPmKTWAxGs4lIfCcVT4cn59zze+95b+5weXl+KYmIIs/tERPdEZOsdEaU
uyJK9A1E9PZEZMyzvHREFNQ8b/p3Zz/41D/0R2yqW56/+KbKLz/UKHqvxK2z
iec/mtRJ3NfGof7AniP11bltsx2OW/vUCoO+K+W7Vu1aIyXbUNcZlz2qu9QY
kc2aVfUVhry3p+4zKpuSpe0co06GJlnu3J9z5tTZBmdMm+e5l83ILszOeaJg
14mswYLsyuyStDvnZNf6GxZlObNs69/yD0f9NZw=
        "]], 
       Line3DBox[CompressedData["
1:eJwV0DsvhFEQh/HRYF+xl4ZCQkjQLnFJbBQaicIlagp6uyUte0EnUVibqAmV
hg8hsRQKUaCUKNQuid8WT56Z+Z/JOTmDm6XVYltEbOCjPWIqiZjGZ0fEJN9n
Iia4uytihgv4kmX1TVmG0yib1TojluSLyJkt8wr+ZL+yHxyhkrKfjahyXb/P
NTTUB5yTHfKZvmh/CyWkzBKkzXf028g7+8RlVNAr2+Nnb9vlHu+ocg3DslH7
L7IRPsYYvjGOvLzuXL+dEx7gU27gzs6s/EJ9jiHZZeuv3H/FC7JbvsG1OiWf
lyXcZ/aGV7xjzvyBH7HmbLP1z1hX/wN0rzH9
        "]], 
       Line3DBox[{1845, 1910, 2137, 2374, 2373, 4107, 1838, 1906, 2858, 2281, 
        2122, 2566, 2567, 4133, 2565, 1834, 1903, 2111, 4064, 2110, 1828, 
        1899, 4029, 1822, 1894, 4027, 1815, 1889, 4025, 1808, 1884, 4024, 
        1801, 3992, 1878, 4019, 1792, 1871, 4014, 1786, 1866, 4010, 1781, 
        1861, 4008, 1777, 1857, 4007, 1770, 1854, 4122, 2494, 2787, 2786, 
        1758, 1851, 2809, 2589, 2007, 2289, 2288, 2006}], 
       Line3DBox[{1846, 1614, 2227, 1235, 4136, 1839, 1488, 1700, 854, 3627, 
        1170, 740, 1460, 3761, 1168, 1829, 1900, 2098, 4063, 2097, 1823, 1895,
         4028, 1816, 1890, 4026, 1809, 3997, 1885, 1802, 3993, 1879, 4020, 
        1793, 1872, 4015, 1787, 1867, 4011, 1782, 1862, 4009, 1778, 1858, 
        4124, 2500, 2499, 1771, 1601, 2165, 1914, 1759, 4072, 1243, 1628, 
        1219, 2578}], 
       Line3DBox[{1847, 2756, 2755, 2865, 2000, 2754, 4155, 1840, 1907, 1993, 
        4032, 1835, 2277, 2276, 2462, 1983, 4119, 2460, 2362, 2555, 2272, 
        2715, 2271, 2458, 4102, 1973, 2355, 1824, 1896, 4060, 2087, 2086, 
        1817, 4002, 1891, 1810, 3998, 1886, 1803, 3994, 1880, 4021, 1794, 
        1873, 4016, 1788, 1868, 4012, 1783, 1863, 2511, 2503, 2790, 2813, 
        2789, 2788, 4034, 2501, 1917, 2579, 1772, 2811, 4164, 2810, 2166, 
        2010, 2375, 2491, 2490, 4123, 2489, 2876, 1913, 2875, 2827}], 
       Line3DBox[CompressedData["
1:eJwV0L0vQwEUhvEj9VmRdjAhkUaiSw02g8RXIgYGhMEiaSRUou0gsQiD0eqf
YLFJTKYOYjJ0sEoZhKG+g+DX4cm553nPOffmZvKlhWJTROQx0haxg+bOiLP2
iJOOiNdUxLE6zG/jgZ/HBHcrG1dzfBkfyYh3TKYjKvostpBw79RO3fyQmuEK
+NPf6HPoM9OLHn4Ns25MN3r3nlFHN7+KH3tVO91Ie38KXfwKvmXXfBL3/CP6
3bpTW+SLqHlOyDfcrJpfV39bI+ZkV/wR9hu7sj31UzYju+QPUeZKeOGn+C9z
Ff4Am3wBT7Kxxj+RXfC7WOaXUJONyt5k53wRWd8wiAH8A9K3Nso=
        "]], 
       Line3DBox[CompressedData["
1:eJwVz78rxGEcwPHPhfPjCnWUshzTUZbbDEqyWAyyYLmUxXCXOJlMCuV/YLC5
QRZ1k+k7GCQug0HdgEEZMDBwXje8+tzz/jzX03dktbxQSkVEkcnOiB06MhGX
XRHV7ogzhvojCnqFN/2CE/2zL+LYnNA3eNFnaOiJc54SDe2cD73mPMo6j1qi
VVt752HWKHjvsCcipx+Y+wzqRX7df9BPGfB2ll495z8r5p2eoV1vI6Wn9UWy
vuumtSPsXmn63UxHzNs/Of+ZdbPunXvzx25Ou3bviG2twpc+qyfarbt75pa+
ybvdtN23fqXvsqwv8Ww3ZVfTyoz7tjHy/AMouzXT
        "]], 
       Line3DBox[CompressedData["
1:eJwVzr0vg3EUxfFb0tbLUItBwqBGNmGw8hdUYmESMzaTmEwmi8VSMRkMBtGk
XYiExIB4qUQTWhIRhHgfJHwM35xzz7nP/T2d41O5yURETGAgHZFujkih0BAx
jEJjxDraWiJ69U+yLfMjzWEI9U0Rg/pvWocEKsjK+vVl/sc37/TGvMnX6Iq5
z07R3TzfRSvyS+xlvEs3ZO0I//RrZ1e+Jl+VZd35woXsk35g1s6yrpXP0Bfd
qf0T5LEkS+rqvJvmj2SHSGLRXNU9uHFNrzDGd9hd0JXN9+ZzeoYR/k1+wN/x
+///jWNvztNX3YzuORWxY97GHGryUXkJt3ZLsiKmUdX1uNWNP053QFM=
        "]], 
       Line3DBox[CompressedData["
1:eJwV0L8rxHEcx/H3SZwfxXSb4TIZMDAZDIRdJwuLzCT+AJPJdBaDSSzKz/mQ
2Dhl4U6xUC5xp0jdIo/v8Or5er9fr/fnW9/s3OLkQioi5qm3NaKPXpojltIR
p/TbEXGW+JaIGXqVrZovqS67wq+miHF3P7IJvNErUoW/xTX7ab7El+mdf8R9
9+uy2eTGO0Wq8VU6keVlH/wUpmmZb9dZwU/3VbrXq2GGtnR25Q/0Z1/CjF23
bAf3zKm2iLHOiAbssssn38INfJJv6j7jt7nOF2RZ/WH9kl2ZeuwO8dw3RnWP
+Dc8xgo24ojbC/l28i/0c/ZVOjDXcNBuyLsF3X5v35kH8Dr5F5Tm/wH/qEJS

        "]]}, {}, {}}},
    VertexNormals->CompressedData["
1:eJwUl3c4lu8bxqMIISoro1IqIikijavhm0glKTIqklQaskcpyShkZ5c9E9nz
svfee7y8r/EuGamE3/v76zmO+3iO+36e876u8/qce4yfaz1g3rBhgwbPhg0b
GU/lm/lbOHimUO1qsYkBRw2Knv9Zyv6KCPbnoj0+fK9HZ90PhMV0GnStduVL
ZdcD5+I7TvEzBUj/dkUnL5kOp+Un3W33FMFTifkIu9oMlCGy8Az00CEm6/Vc
0J0s2Mtla62RkYhXbMWlC2bo4Hqtjaf5zjdgk3IYkH8YgyUHNyVe+0mHqyNa
Fslvk0CN9UZpxJNI3BbEeezHEh1Gz0qysHLEA/M4v7godwjuSzi+ZvqbDok7
694O28fAgTLdzOhbgaid31a38ocOJ2L19h2s/QpWl0TJhhf98NiZJnHpFTqk
/YvZFx4RBd1OOmnMfd7Ibe7g9pexbp967+oD0wgIF+Wv8BT+gLslau96/6OD
iYDNBbHvYTAkaREXWOeGBSn23pyrjP9te+FUwRwK17tf25y2dUXykwyqJmP9
9aPEPcp7QuBnZrsaKdwV/yQVhVEY+0xI1rVNCIaB+HDW8wXVSpQws1cgF9Qj
e3etqMkfGmgtq1tqanaj0zbLffuPjaNL7Hina8M0ZBS3nLGZb0Zhplxb++eT
+Ocp17XP1lPQ6Zip+fN1JYqs1iiSLEhItsu3FLhEgqhCb5W/FjUo9ST88tzh
GRx5W248SCVAlf3R1I4PediZ6ZyXIDiLYUeYaN2XCMDO5a78KyMXf9SycBtd
JOMDQrWc1usxMLukZbsil4PXDiY1iYhTcPji1bIPbCOQ91HizWX5GCx+HTy2
+T0F9zr+aeikD8E101epfudScXO/k3eyMBXdxENjTt4ZgOqG0RWD7HB8N6ku
/seYiuq2NY2t//WDrKHhzpHRR+BVq+8a4EPFje5XPvu79UGSD34rGSlENoWE
uY8CNIzOmD86nd0Fn/uyP1/u7kbWcT22kMtUZP5Vtu/atUaY/sn8+qrSGB4w
LiDKnyajnHfQGv+jctjp/nagmlqOrzVHFkRLqrBh4xrrzDk6+Fj9GbfzyMAg
u2mIEuvGrrR3YaviNJC4Fzs1pVOAUbdUNk2dm0Eh+9/9R00mYKtWmdQvuUzU
WXwzevU3BSc/uxS59Q6AN9D7BPt88LnvcfWKOSqG/6yYCfTrAT2rZE5XiEbj
PcLip7/R8HPZyH9c/B1wcu+In+BefxS1/N36bZ2Gy26X01kzWqFv5LIZk6MV
tj97U7dNho6uuYSXQgNNEPTX8nOAnz8S9vQNaejQUfHxnncsJfVA/D78Xqrj
LLrwzGdsf8x4/wantea9OtB4KBlZ/e85nAyqnWiyp6O06f6xd7y1EP17ITX/
awIWpXPNUz/QkVnwx+XIlipI3umlb723Ho/Toj16hOgozrLOpxReBjnRSV2+
Pj14gCeq162RitTm6lyebfkw6OuQ/TyqD/VXtDeImVHxgemDYIeTuXD/lO7Z
1f5ilFq22CT7qgwdzVo0Rdzp4IvEN+ezv6HaZJ7bUdYy5Ao4KBKfSYcjumfE
XNuzQeGYzab1m0N4cx/FlTOAAvYp4qPup2IhuMr0+d0LZFw7L821L3cMvt9K
dI2af45EbxkWi0UqSoxxNdBceqB2XuvCnuPhYKd4weKtNw1P7HbhYVnsAO9R
uQBJeU/oF3VpMOSl4x7bsV6+6BaY5/nPVvaUPvg+Eszi1qQjzU35uY9xA2z4
9s60eSgAbKpyhFkf0ZHOrV+TerMOPLYv7lNNcoMHGj+Pkd3pKD+oJ3u8oRqq
XiRavuoLw+yWfXnV4XQsz/wX8eBbJQxz/CcwylKDB6X9q16q0jEpcNhIXAMh
3KQptiCjCw2Cn/zpk6ChX08E0RBzQcOodZPRgR7UNxmIi5+i4ss5Dq0qqRz4
9pHPeuOHVvRfVfYV6KdhGWv0VevgAviVtUzTaMtFpcZr/3RaCjBZqSzZJYcO
8n68+TeSMvFFzRG1jT9/IPpd0FnppgPnbi/f9yaeQHZ4bJnd+wP+MuG8BMN3
q4Sp99STq8Fl9b7m/Y2D4NKpOvPXmQIfaRNyh5cqYMiia/OTwxOw6vunffHQ
DBBGDA5/Z0mCAfZFmY+OkxDPJ6+u/IHhS+9Gjx7LyIe83FIekucUlADrXhZr
Iow/t2I/2JQHsWL2//wvzkCFAN+p+QcT8Cw+nfvkhxQwOVHwRW5sBhx0E3WJ
ZQToVNev2rQeitlb3RfZKTNgsaHsb2spAS6x/EpXfjyDvmFhqoSjFXCgct3J
e4oA0VZXyMs5ZJyd/DnVNjmI2gHm0oEmrfCii4lff5iMrwV+smYfGkIDx946
4pYmeHWe/22yDhUFZBPghMcPNNmmFJUv0g+Gok+EblyhMPrtZLBKeRmcZVPZ
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
DlHPDDgs+KhYQpNnv+LeDjmmFed3BLQgS379LzKZDJPe3Fa6XG2wUHPJdm64
G8uv1hFWdlBQWjbWMTclD07Gvvu9mq0TrVdvrZCOp6Cp4ZRDjHMBzAapzbML
ktH6hO3kwcFO2GxHCjj8qwWOH1FYOqjfgPx/66Z8J6j4a/7d4wNX8qF7h6fa
Vn4/nH10q7ojgwqPv5rX1q9tgTDj177ZVCLyjbNtVj5Kgjk/W8H+q3VQrB2z
HCCagT8aJwKb/WlAMlya+mVZAhnkBoJR3lf0oNVYiXGRQaScxdZt8wBY3Hqc
uqOAgs1TKeKFNk0o9XClapClGZbWHX5J4h7BQYGvHMvfJ7B0Q77oN+FKYGt7
vlmPuxJjQ4fevjSj0vPjJ/PRx5vgqorpJh7uYrw0U5Z1R46GjfZxLcUsFbCl
67PfMbtOyPfkNpL/QcYO/fi+fUu1oDstxcrh24Ctp+c6RbWoqJqYsjprsgaM
vsRMB74bBI6vCREb7CfRsqZp+cOFZoh8uulE4XoCOn/dnbuU3grfddZ+C58i
wTez4Cfkzj4QWJgT3hQ/BVv5AjabBNfBlmkXAa5D8VBozPYjyYYMFcEWlwL5
+sHYjueS0BIRHRTenX1Aj+cZ+6ybvB+1A1fSE8rmqVH0Yjq9+gX3GB6WFJy9
pNcK7C9UzxZfHsfzfMrdv9cOoq+HX/0O7AWjGq9y0j0iFvvOCOp9JuCfeofO
1Fed8Iw39rhICBGpRievqlyg+66nPJLWyo3wJNfiTV7zCA5YxarbzI3jgyfi
0hmatbC88F59cisR39zv2fHzKQnvMXU8LBFqhh+Loi6OLWO4e2vyT7N79cjB
K+F2fDMBfkdO1MztLwXyxKT8WCMFxL3/iAdItkMX2ynlNU0lcO5+pHH5+kkQ
tzkxXfd3GCr4eT5db+0HGSKV44J7I5T8efH8geQUqJx04n053wAPXRsS1pwk
wxbH9e2CHd2wcbXYqBqUgHq2NC/1AAVKqk0LbqfT8wV1YGkKCsLfq/NchhZo
+Ny31eIMZySYxZRMmDFXotWcv0ejCQFlv155v3dhDGpzHgeNaLdioF1/dl5K
P/66p6Tk/XkSHt+74XYoqAgu5uQvFWsS8PcW3m4LvXGQTU95M+XwDCZ2D149
ZkNGrniJK/sv9sMnvX1pY+ExkLEplVOLRMGxbaUON+M7oLGhsaveMwg0jwRe
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
m47vFFOfrLEqBc3A1+GZdh24JLFy5D0HAwWcPbWb+ctAqGaCW+1MIPwrpbF5
KifD7AnJ/ljmfZLanPLrvSkNX+/WHdY4XYYRqU6fnXUGQNCQNdfJRcx1FhJz
nfUO8ad0mkm4f5Dic+vkJCbmXzznTKmFxmTdj7xCU2j2reKOi8UYOupt6zCe
aQTdHddnPGYH0KlyqzboUlGb67rhzcQWOJP2Kr1qxyAeEDIevJ1GRbsKeoOZ
VD1c7eW/cj4sEy+38D8p8mSgWQK/8sm2NqgmfHxS/4+Pj/7eP59yeSZwWC16
Jc8mCkoadebr2deDQdwOoVMXpvBdQOLe/j+jeLHFwHlldBPkhYsFFq+mYm6j
+QHD+koobS7JmdMZgbsbyvLGNtCx/7ra94GblcD+eh1j4H0PNNI0PnFO0NDQ
x9u5rqMJjnFUmvgXd8HA9v3t4h9S8IygCYeF0AzYP+Lg4n/eCPyrNA8Ix7aB
siO7S44+Ayh9qvq3JkphO5fDSZflyTi8JP/im1gyTg/zDFyaYep/glf/+9+8
gZgnJf0fv54ZPfODK/ePYxnHmQ5p5r79evYZdaKpDuYIXkdwDoKD+XKzp8/G
0f73XQfHKAoqdz0MclFqABWC3yP4VYKfVrSO1GHu66kRkZI748i4aazHR7em
BUwJ/pbgM6Ms3tMpK7TEjAfoh6clQt1JOG6eefU9ZxvUEHyJ4F8Jzn5ic5Eh
U9dGnR46vMyrFeN8R711bo1DqyaLrzrD4gUED6+SDf+61IxTlr6TJlzM3yuz
Uiui0yGpgsXlrVi8keCXv1qDjTwJFotPLhv+OwF+A8uS9pNbwYPgswSXIPgr
8avD9NfD0NgblXnr4DhUL0z+p1c0AhM7WbyN4HyLLP5xcfUelLqFSnFtzrF7
gvCkmZ8IgxnXqP9nYm4y+xgVUy93B68IximjG69jmfyxVMzcL/1h9JWs06rK
G0SuG7/r1zPjA0HvsiA5nXHkWWcRPzhLQdXHz0M/fa+Dt25CZtdMx7FUlLa7
OISCaQbPbPqdm0BleMvVoIvjOH7iGDXvLRm91/QlnO5tB9sz53m5ssbR8M5h
LoFMMkbK18dys7fBofsRJ/8EUXD3ys0j8TkU3KT75odIWRvIGHvYiCmO41ne
TWLeRWTc5RrCENzeAbICPacv3UyDrxsEH4lZUXHNVtF36bYj8JZc4lyqMAqW
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
pumfPJbtIGOim9AGSZkWzKWHR9t4TcDRvUd9kw3HYG7nskgvsUnoWz26WB7c
AeQ1bAGHHpJg4yENr/ttEyBo/m2lbUIr8ChHtu0+OwZC0mW7SRoTYBZ+SMbq
SA9MCBgF7w1shyiqGt/v6TForxTtujc2ATmE70Az4TtQByzfgeVhCzdjnmYi
75s02ULeHPShfPoi1jMDOkSdd4yo/woS9d8Dn4tczvJPYuHRJzu3246ik9Xf
ZVr53SBL8DSCVxH85P0Xko3yU+jfIVzfazqKsh976+Oy2uAEwQMJLkXwoTcf
kr7yjmJJZPnnZ4qTuPZp+dYg5nF9X7xbysfowvhSr5eO0jTkmV35/mZ/O8Ql
OZx4WNeD1w1yKzoXqOjgFigwkNEGPUSd1/o2q87bSdR5CzcWq50jTYN06ymb
Q3cqce/g6KeRlyPA8SjmXL8DDU7kV6pN2r7H/bZmYR+XD0Jm5nCPOzPOMcjg
uLc+dATT09nv2HiMwDRR571P1HlfE3VetZQQ8cXEGnitvv2o130aXrJ5pLU5
sA80twx0XBv/D7b+0j8fX0NH91DOD/qq3bC9LFV4Un8AaC45hfYaJEhuu8NB
PkaBZQQfI3gRwQ8WsBWcL/gCD/hnRIJe0bAhyZ7jAXOf3eHgRJMuIcEtRc6/
rXrj8PJf2dop826wPfgmkjNhDIJe/Y3/oz4J8TEylRtr2uAKwV8RvJrgUO4i
fPt7C1C3Xni64+Mk5DUJ/nfWdQwwKqQ4tKQFXHvFEx2mqfDYPVpa7k4fPPhZ
2j+2how7Nmb7nS+cwHPreTmtm5pAjPNm2fmLJBTbVPydbXzi/5V15tFUtlEb
N7ymCmlSRFE0CIWUoXaj0qQoVCSliQpJmiiS0iBTGlSIkkopJULbkGSep8wc
55jOOU1IJd/51rPfb6237997tfrjeJ77ufa1r/3byNv7XSj3TRkYB8d2393e
hhxPzVdTTTqxaella9cPFZCQlqFr8rgZ30ybUFZk3418pSAPybAyGJgctsQ6
vAVNNFakKM3pRmvpnapKxSXAmhTia/O1Dgu7PpzQ+NKN5+P8la7nVUO3k1Gy
ulMbZDo+eyXcx4YZp3ZMW6xcB5f2dekrjW4F21MqCx6c5UDjw6pQr6ZP0G6q
l3xGqBp8GswKstU7gZu91d+wtRXMuV5ye/0aIMpo5TjDfg7obM32VNnTDJaf
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
2/X/0u1B7FqhVQ4h2PYytF566nXUmRDulyf4PVVIh4v9pcNPPJ+eM2l0AFqd
MY3cIByIvXb61UqC8zUO9xs1pR3gdpBstd41N0xSDSluFTxvc0ed8ZgsfQyz
JZNShx8fw9HKq7wyBef/6slxpCcbSE+O2MLotNKDjE7bOo3RadlrrnkU32bj
oPXU8+IOHXjqzci66flFIH9dGFfFxkDfovKbhzJZYHipJtbCvBM+072nS/fe
T23m3ntIftF88ouKyS+Cv+7De3QfZq9yLJMX/B39a1b/CRXcb/n7NR90+BfA
AdJ1IaTrsknXKU3e/zszjYu2FdK+sYPpMDh+cImxUzXMv3iicVCBja7+lc+1
PnfgzLehn84dKPp/dfEg1cVGf/WzvlE/S+lBbfntwjbQD4jeoeTBAevuVbVf
OVUw1a49U3cdG+MS9zlvFmfhksSTV7WcqyGf+i+zqP/yhvovJjwm31JM+ZYf
0Uy+xTn13j0jbQ5u05G/UZDKQun5EVYv5Yth5F96eA3p4ZlxGyccHL4BgUdO
OxuI8uFspXbFvf0lsCbi0cINVlzcNfW8rrtcBVz7Pc0k6k8puE3ZkVYaGYmm
CVU3T43kYvnkyJzpHz/BhkomDyxLeeBZ6kweeH0Gsx9qbiqzH+oc7Yd6Iwqz
ZR+zUdE484eTRAckL6t/eM67FLg0F6xHc8FC75m54CbKnU6h3KkP5U69/mH6
6X0LmH56zwimny4T8H15Q0EH1o2NDrOYKPhdk7dcG9AogRPBmdmzzlRiz7Se
Ok5iO860mS1cL8UBoe9MvVmq+996M+FY8C9OAxt3dTq5N8p34KXfi5XfSBTD
b7Ntoqcc2Ri//bL/0UMsbL9jX3rIqRJ4XL8hdaNQiJnw9NXstYHwTVhSyVZw
/0cbt7lnpF+Cgc9m6VIlfqCY1T+9QPDejb3Gu2At1oGtOa+U+UodeGBMsKqx
VQ34036TuHpmvwnSfpNUk//u49YmHXKK8vYWlLdvorz9nxpG94qT7j1Hulco
0sM57GwrqpmoTDxa3YXc36LP0zcUwgTSJ2zSJ52kT8wv8wIXfSjC5QVZdnk9
bFw/xyXHW7oDTGk+0ZHmE4+4MfOJrPt1W7LbdsAqx7uWCSIs3MT2iXr1oxMk
GmSHtqYEg2nbsP+alXlotjhvra0tH1bQXrYztJethfay1RJvR5x4O53E25nB
Z+qmJKqbKqhu+hkO0UFH2WilXBs3ZXwHVK4PWuSxrQwyqy3CNVk8zLzi/NlV
IwUyYkX4Hp+LIfqvPUS/aK65IFytd/0iDkpH9lXsCGbhiGtj3fsEz09fplPR
5bwObCz4lSQpfBN2hSdldR3kQA3tTzlJ+1OGRjH7U+YR/+oM8a8iiX91jjgn
csQ5ibdlOCdXrjP8qCGF//Kj/MwdA53s74D6LsNDKg4s/K1fct38QSe8aDTK
CdJNABuj4sqsKBbqJOZud9nZCYuI16RJvKYzxGvaTL6QOPFyZckXOkA82FTi
wS4jHuwP8n+GtjD+zw/yfz4dZHgdrsTr8NBgeB2ribf5k3ib6sTbDKV9Dfdp
X4MT7Wv4QPWyJ9XLog5MvWxmOpQ1pYiLa4Jd5Pab5sOAzY0Z55ZWwDniCUcd
ZXjCccQT/kbzhodo3vAIzRu+on0Et2gfgbAos49g4Zjv5RJqafgtgyu7uiwV
T995EeB/V/Cekt+SSn6LLvktf3Msk4ljCW4Mf1Ke+JP5xJ80Hv4zFGbLgqq7
m+bNDGwBnYW3qrvWtcFNqqNTqI6O0Gbq6HaaP9Kk+SNXmj/6t59yjvopH6if
IkF19GSqo+9QHf0qjpk/VaH504MezPxpcDAzN/qkhJkbNSlh5kZXjh40d9/H
xqIL4QFioSy81hNoVFlfIbiXpKTa17HQa9B+ndh9Doy1iHiVYFAEJ6nPUkV9
lq/UZ+kl/6GG/AdN8h8mTNbJuiGSjrErXqre3J+N199Yerc78SGZ5iWX07xk
O81LziVfax/5Wrrka5lRPX6Q6nElqseFC1312yzjITO3fIa+1ycUCRA1shvD
hdCgG7F35r7FT0nyT/P63uLV2uspC2P5kE/zUyNofiqA5qc+O12rd/iRjp3P
NU6MmpoFt4Q7514+ygdhyjfupHyjpDeTbzzoJxGstekFqN7y5QQd7QGlniMi
bmtbYCLt0YukPXpzaY+eyRa+xeBBHrJDUgu2bU2DwMDFzjt9y2Ee7VGV0Wb2
qKrQHtVU6i/zqL+8m/rLt18mT9IQ6JDmh9UuvqtYqP0pY0P7mmpY81d/RJvq
vpxvTy+leESj68hj7urnLyO3YZew5SAfdlEuegTlor9TLvrm8Kz8h0dyMP38
qoDxCzmQ6DK5Yt/2DngYY/V20owOfGQeNWPjMBs3/m5qmhNRAEHO0x4NYhB0
H24VmvyRC1oDf7z1dtfAbMq1BlKudQnlWnvIJ3w9mfEJv9kxPmEq8dIjiJde
Tbx01TjLUI05HXh/75qcmYLvTqit+x4Vx0IYtbFXrzw2DtaNrN5pO6Ud44PF
NG6Ed0Eq37LYpy8XZRytH1op9oJR9NdJdeoNcFnZ73hP9Xt0fKDWqabJB0PO
GHf292ywoZzAD8oJjKOcQOft7X27BfeImOVKl9Y7Hfiz/trBrsPloEO8ZTni
LR8g3vLCK//NcT2hHNe/eaqxlKcSojzVzdKD/UqljbhKV2bHKk8L9JCS5bA2
9kLZEianpEY5JZHlTE6pV7HHzuZ2J0b4bffnc5uxvz1L3uhWHdScFZ0wZN+F
eXuCR5sMtODMlpGx/hoVoEA+Rjz5GDLkY5SRL6FPvsQg+RL/8ir1iFd5g3iV
isRxnXqa4bi+J47rTfJp64k/Vkk+bT1xMnOJk5lOnMxmyjloky+XT76cNfke
4n/5Hqm0/26Q9t/J0/67TeRfnSb/ikP+lRl7+e0ElQCEfvekqImt2NXd/LRy
ZA/sPp+ovU+Hg7XHzffv6m3HvbdPac9vLIdPB778KdVth0M1K4MK9euAPwF/
ma5iQyn5VEXkU+0kn+oe+UuLyV86Tf6SE/VJedQnHaI+qSf1HxdR/zGW+o+X
aN4wnuYNrWneUJty+wmU239Kuf3/AZpAQuI=
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{410.7809229779436, 263.00830234379447`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{0, 1}, {2, 3}, {-0.09818663133950425, 1.3227910433864076`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-1.1689383764087158`, -2.933622571341671, 1.2155005886768058`},
  ViewVertical->{0.1329660460797764, 0.3336978252010972, 
   0.9332554805871588}]], "Output",
 CellChangeTimes->{{3.844372262448958*^9, 3.8443723169131107`*^9}},
 CellLabel->
  "Out[355]=",ExpressionUUID->"1bf98d81-a0b3-4af3-8836-7afcddd6aacd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Animate", "[", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Evaluate", "[", " ", 
       RowBox[{"\[CapitalPhi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}], "]"}], " ", "/.", " ", "sol"}], " ", 
     ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "2", ",", "3"}], "}"}]}], " ", "]"}], " ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.84437400593503*^9, 3.844374019006794*^9}},
 CellLabel->
  "In[428]:=",ExpressionUUID->"789c6d81-8111-47bf-aa2c-3ed5a3aca786"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0.2892457962036133, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 1}}, Typeset`size$$ = {360., {105., 109.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        ReplaceAll[
         Evaluate[
          $CellContext`\[CapitalPhi][$CellContext`t$$, $CellContext`r]], \
$CellContext`sol], {$CellContext`r, 2, 3}], 
      "Specifications" :> {{$CellContext`t$$, 0, 1, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {141., 147.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8443740210636187`*^9},
 CellLabel->
  "Out[428]=",ExpressionUUID->"cd8b89ef-5ff6-49ea-a11e-519dfe829b59"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Evaluate", "[", " ", 
      RowBox[{"\[CapitalPi]", "[", 
       RowBox[{"t", ",", "r"}], "]"}], "]"}], " ", "/.", " ", "sol"}], " ", 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "2", ",", "3"}], "}"}]}], " ", "]"}], " "}]], "Input",
 CellChangeTimes->{{3.844372331915907*^9, 3.844372333758587*^9}},
 CellLabel->
  "In[356]:=",ExpressionUUID->"b510c9cd-7606-48d0-a01f-1553a5ae9a23"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
s/5MM7UXeI17dUW4WSe1F7j5bYWpx0d3UJxiv7L0imJEFFWcLGqfV7pSu4Bb
h/TN31SRRv7Bx5xYlFDxq5384LyPu6zVQSvqOQf5GPKBoEq5fk+3QC7yN/AJ
Uz7tnSkVTPsOcL5t+0IM13mRbjjnWthUHKE2ypHGBeyPfZg/vrPPlvoP8gR1
0djZ39L9yR7cPOD4uA2p/jSfwE9xZP8kq/VHiMN+jr6e3hGDAJpXYZ+kMmpv
kJEljTvY5y//1d3nG0TrBb3Xxdy0uHw7akfYe2+a1TXp/jNaR2A/JFNU8NI+
V+q3sN++wzz5R1UIF+MX9qo3zuZMr/WkcQ17BUc35a64F1y0I+zLhCWGdL70
pfaF/dzpc0rjD76kPAr2pz5/y3wtGkDjBfbljgM1+q2RlNfB/qDFJuHlQgHU
D9GOo8K0XdJVE2h8UT65f+bNo8eDiMO+NWFRwDq9DzTuYD/6Y9dkqfVvab8A
3uVwcoJKbBrZw4+QJd942b4c2qcg/ltTq79Oaoui96XzUx0J47XxjrR/gf1f
u57ykpxwel/Yr+Rf55IfH0D7Gti7N4ZU3f/2jN4L9nwF/HkK0z5S/LAPL6gK
TQzIo/kNeWm3zBfHtgsniSNvzHecMm8kfwD1Q9gre63w/vbNijjs5dpGeCz4
+Zz6IexPFqa/VY2/Qxz28wK9nmrPjaR+CPtFBywvVs50JA77tfdXLCpe+Ir6
IexdOVXPZsW6EId9YWzlqNzq12ye4dm3vU10cJNzpn0Q+KFpbu+yVriQPc4N
HYdnLy1cys4lYb+ybpud0dan1G9hfyZrsZSv3Es6ryT7ljKhlT0fqN/Cnr9o
XbBVRgC1I+LPmPFGO9asmtoF+XbG229hnx+5kv7gZ2RH3zjWyvIx8GUmtRIi
4YGkJ/iwradOt6uG0T4RzzUXrf0aHh1HeuJc7+ntpusBfq/pnAv2ClN+un28
n0i6wX7wvKxgyJDXpBvsP5z7/Kn2n3kTusH+6vTCo0PTrpM+iFNweuWLQZMq
6v/w88v+j3fX3T+0/6V9zTitw6vCw+l9cV62bmNPAic7gM7vYK9r0lk36Mf6
Fezv+/m93q7gT+8Le+Nv19MjJ36i94V94xm5aN3hEaQ/9imjiienzTA6T/t3
cM1rWv1H95uQPc6bGqY8fHftigW9F+ynBna+LB7zkN4L9ve7o4rSRrlTO8L+
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
3A7seEUcflbuHzEqcvp7LsYp/Mwd1u1wt92V1ilwt5nNPdcyfWhexXhR5vPu
8j1aRhz2YUdsZK4HxFK/xb7jaNB4obLqpyyP4u072qafV9mibsfqADzuHxDb
nbXckexRF1qT2lycuuwO9Wf43xUgd3ng23Pqz+CJZ/b5iUmFU3/G/sjAUsbx
zqjn5AfP/WQqMmq1lAurP/C4qOR73ex7buQH8VxovHd7bYQt9X8892f6n/Qc
yQjq/+AxA2N9Tl2OpP6PePbuKLtZLfaS/OC5N1v9vkzy9CY/4H4xakszlPzJ
D+Jp8U3zsWu/Q+MIz01NyR4InBJN4wV8fYBZ8uvZMTReEM/BkjhHqfcR5AfP
HRFf/Pra/gBWh+Hxo0XTz4y69JT8IJ7szs1jN31xoHGH5wp9Prsmcxbbd4ML
GuxOWu8bR+ML8cz3S58rNy2a/OC55iI14y3MAskez12vs0baebILjUf4zxZ/
OzXB9Q2NL/j3VRMZ+cD8NY0LnKu2e/2QbzscRuMCz90y0iLwzO8S4njuLLkH
27R+lFF/xr5YT1tquWG+A/U38Mvm6a6bRByoXgd+qeyQ1RghR+oP4Hsn7T57
Zp8z7e/A5xq/H3A69JDssX/XWD7UQ/qGH7UL7Icp/3DcIPOI2hf2+cOLsvKC
A2kdh/2EQ/H3lXMLaN0Hv3h9tp2udRnZw0+bduB2cedK0hnnpyf5+I6LvvCg
eHBOOiGTb1KnjQP7PTKvPlC6UiV0uRu774R9cera0Cvhqu6snsw7r5ya+232
O2Vvei7sjy9ZXhQX+5XNw6i7KvTdtn9RThznmwMOfw2kZX5R+8L+x4lco9/+
bTTvYZ84cknEvkdbWf6JfaXq9rDvu1520ryB88e74vxdMvNdqD/gvHLf5MVF
h/ius9/z8vw8+TlDSCTqJt2XwD6r1HdUupCRD80P8L8nqWHQVc6N5gf4d7Ob
/kQsMIbl7TgnVTsX6m5cyfI33nudKdg1N5ivmTjiOZ93e1lJcgvpg3jkpG79
/D2ii40X3v5xtaZB4mTPdvY9Oh7fqjTNLPe9LemD89MnuToPtcax+R/3puYF
14cbiu+keybw47LVWHTPel3i2E/91NM6rj3PieZz+J/0Yq1itl44rY/wv39q
6FqDYJbHwo+ZgMjOTxGdxLGP0wk7WzTnPrvHiHi0Xhxtn3eE7YvxXKFDqm45
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
Rzxep5XhtEKshuXbvPoDR9XvZdnj/7qPxLNXzjcWH9vI9EFdYq/a2r3uvUwf
xDPgWfSi8TY7T4R/NfnnGwSDGYf/JZevTNg3t5fmYfh/sfiJ+/oFmlTfAA+N
1DdSVrxC9qgz9EyQXT853IHmPdQNXio4XcgpYffEYK8xZ4rH/YVs34G6hOva
zO3HIrvYusPzw1+XzBltxXSg+sbHz6fUFrDvYCPOqsRn9x6q99L7wv+MqozQ
tz972Pd+edxycX/GWCVpLvJMun/usntSgNoDdn+DxzNEQ8UbfVspftQNkntL
bLtvdRDHPl19Rnl3pXY3+x4v77m7HoyQmTijl93T4PkfTKt233aB/X4f9lEL
dvsdt+yh98JzFeoO+Ar9aGf9n+cnfX67dXN6O63LiKfdrvHI+LzdlG+j/uCn
+8HON/8u9Vvw4pTRr9NyWDuizmB86LbEu54O4qgDrLzyuojvaSftH/Hchap3
BSb5dpM+sD9zeHX7+lbWvuBXCt+P/JHD6lHwE3N+UW9yD6tHIZ5+Fb8P49qY
DvDj/P7OljPS7P4eeFzQ72ef1dn3osGNQk/O+jlZg/YvqHuUzG0/9Sr7JsWP
+saBK02D9bs6WX/m2a9uqQ/Yn8HqTrC/ONmwplqHtS+eW9A//MYieTa/wf6z
7YejyqnsfVE/CbCwNxXa1kr7aPA82VPevfq69B0A8Mo4vgmrL2nROTX2d8JZ
B63MNa6QPti/azwdmPlTIY3tI3j79GWc7Y5egRXsu1s8fpfPTG2DLbvHCP/t
f2fKCXmzegXiWXM2O/fFtXYaX7A/dP7wY62UTupXsL/UZjL0cRL73jh4/9pF
ehJH28gefp6ofG56ysfaBfWTxsUHJJosGafvS2eqVupu/K/vZvD8F+SG161f
1MrGF89PWIR457g81i7Q7aqBqsGkn+z78Kh7zHwy03nvru207kC3T9HP77ov
+cV+T8fj/G0bzGWd2feuwZee0ss687CVfS+C91xlG9vRkwpZ/8dzGx0PvMgs
7aZ9FvZ3IRe0snft9qR9E7hD5rBb3m5OtD8Cn+lfr/k4zYLskf/r5j2qWnLP
i0u/y+Dts0KXXJeb9bKI+j/2Izr3V5vc72PfJabvcQXMSXfY7UO/Z8c+ov/J
zUVZ91soP4R9YUT83s6P7DsGyBsXeq8t+TTfg76DBz69cFxS5Tb2PWFw745d
wuaTf1N/QN64XmmDzxst9h1jrDsPnkc4Xm2qpXoduNU+gaYvtuw726irjL39
tk49qZrWTfQfieqbZ+7ls98Hwd5vv/xUy8AWGl/onyWi0k8yrrTQ725g338n
fWy/Uxu738jznzpyvNXDrjaa/9F/Rl294WugU0Z1adTZSvI0lh6qY9+LALeO
FYs6+bCFdAafO0lA3Smtnc6zwF/d9G06ZNtLuoFHjPXeZDl9gHQDvyvoO0H0
9iDlz+APcpZkuJfzKaJuDH55RlKWUT2/ItoRfLv5cbGCKgFF9HPUqR5o28ZV
H8im+jDqKtVeVmWP3B/RvAcu69u04GjHc6obY389s7d2duhzFar/g8/O/5Bz
p9uW7NHPaxfZ6MVse0znAthHW8wuX2H+QpjyDfD+RapXPi+5QecC2Fd2pld0
T999jUv5P8+e01w2XsirgcYX9qejOG+OK4jW0fqL/dqaZ6WCQuvrqT6JvPrV
3MRVWh8es7oiL68erj0vddbaizRvw17NXHmW5uEKmm/B/cqGutx7/ov6M86J
NHdFCuWMy6c6Kp1z2fFZjjrPvvOP8wiHk0f37xRm92Mxjxk7PnosvojdK0Md
zDNy34mDIoFccPxOfO/VSx8XmD6ldRy8L/+t0hhpP7ofBT8fFBS/DfvqSfMe
+k9J4TeDMSWV1L6og0VvaArs+htM7QuuKf9E49f4MNpnwU/2Wxmp6Kl1VMdG
f1O4GC/kOTuN5gdwf4NjOvzan2ncwY9Pnefp2MEGakfY8y24f2LvxUzaj4A/
n9B+boxHNs0n8LPnSaUeZ2sL1clh/2gjx8K9MIf2y+CjG6yDHk/KpfEOPx6l
I4Kv6rVRXR321+vca+O182heAhfVExsWGJBP8wP8iIefuqNxpIPq8LA/LlV0
STmd3ccGL3b6sGVG5jeaT+BHep9dsIFsF/Uf2DcLRFr/SvtO+Qa4w7mgYbu+
/KD5B36aQ47uGVXXTf0f9nuPxa/5kVNI/R9c/afrkIrEIjrngp+zi27tsbHo
pbo67BevcO3tsy2mdQd8j3prgIl8Cbtvz6ujJm3q0Fu4KIbWL/gf3aM3q76v
j8Y7/Gjt7P5g01lC8wN4bdbWrga+n+w+AM//9iSX4JmB7yivwLjQvJm/cvqO
TMorMI4KW2Sz+l8n0fkO/FTPMpKU/5TJfmfB+85A69HtZW/so+heCsbLAp/r
83KHJRGH/egRGnNWDkbRPTHMtwPzgh7N/vSW3d/g2cvXp19I2hBJvxOB/w1r
GpsyjsYSh/1Kqc91KdLP6Ln0/dt5q9SemHtTO+K5IYt/DfRzP7L5lufnWd+w
NdvEr9C4hv0d38J9Hnf8iGNdWD9rg3jb3UCqp8F+9ELtQ4fPxVP/RB7lrHRG
vv2wM/VD+HnQ5lw952ks6UP184eeGbvnPGLzLW+9sHtpeNmmIZjaBfbTTOdJ
rhrny+7J8+y3bvhSUzMsinSGffSSgC+NTW+p/yCeU+Jpd6c+TSQO+wlzQrTG
//lE/Rn++07sDW0+kUb6YP3SiBocfnOFE90TwPolVtDdeqnJieY98Ffjr4pw
Hnmw37/gu7LZszbbf4glHbCe3ucfcaAq1pnuU8E+6epxZbfPb2j+QTy3n/t5
3R9k9WHYb93ocnjTogTSDf4zzFLG6p71YOsmvq876pbxqcQkiod+f3R4ZdHr
GBuqz8O+I3ViYvs2phv8F5+xmX/Q6DP7/Q7PXnGnf9tCl1x6LvzfHKnQVbab
nTfBT7u7S1LFs180fsEV2gM4cg/riKO93KvTPhtdqKP5HHXdD9zJs5a7vCDd
0C7x1z7kaF57zu6X8uy9IrY2l5ixe62ou0bstxHUFYtivzvm2UduiBrR1RbJ
7pHyOMf2h9qYCna/Dvl80drbJ3/ef8p+p8yzD0lZtyntJPs9FOK8Pnf1aNFN
TDfYBxZFi+ney2b3jnhxDgp4Gpdxw6geiP3CLpGalwWuQex3izz7/ckadV9f
vqQ6Kuq9w2ecuhwceZZ0AL86TbTAbLMpPRf5laPwQcGtdk/pXBjPtSoPWZXP
TSAdUB+u0Dl0vjjuNfsdAerbCS7Zy743EIef4zfyS2bLd7B25/npUvzQvtqy
nfIKxPPE8nLXwUd+7LyGlzfqho6L2VJuTfGD114uy5X0dWL3PHl1ae/Zkybc
veXPfmfN43OUd8UYT/Fj59c8P8IJb10XDUSw+5k8e4eN+YKDXx5Qu6Ce7GCR
qZyTGsTuRfP8KIQtKDKZk83uW/L8dKm1Wpd8e0v+4cfJeN3p+3vY/Ea/s7v+
YNe7f/TC+AJ33rlWWXxZCxt3PP83Hmu+PW3eytZNXjxLlgcdtFzbxcYjz/5o
ep/yNkV2HwP13kyxYv517ey7kfDzbEz/Qb5QVg+HH73o19pvzrHff8HPpnlv
0w+nb6RzT/BoAZXAa5qbaB5GPVnsm5Ynx+0c2aN+Hh2drPG66Q71B3DjmU/e
6Zg/pnYBHyNUs/QBvwO1L/zXTjgYedw7nf1+h2e/xveSp3DyG1bP4cW5b0OU
2OfRrB4L++F60Z+e2rJ7ffDf6uP6Y1oz0xP2SkdHBc2XaKN5FfVkqaBXhx5H
sTok/MzeELr33nymM/xMTBkz1TGYjSP4OftxXrjz8B7K87E/2vvSUl/uAYfm
f9hH1Zb2bylupfUa9ksXaHVuamxh6ylvP5VxUrzlixCLH/Z3Lp/XjNZjdUjw
W+m/XWsk2D1P+Fm1/3J1lyrjsLeKfZVkMordh6Tfo90yfBKax37fhHrI6MLp
Arb57O+nwH/TGmevPCv2HTP4Ed/Q9d50di+1O+rbW1bNNZ5QWEUc9/dOn7aa
djqrivIlut84vP3PPnv2u2/YzxlRIuNzvpXWEdSTP8Xc/iM4879+B8SzH7bN
e2BoGqtjgw92pRhszmK/J4IfAe83r06bsPFLv7t/5yY1Mpv1B/i5ckNyzYld
3Wxc8+r2UYrSBmUx7Ptv9Dsy2TV8w83YeQf9Ht80126YKav7wf+xuNf6Ag9Z
PPCvIvw1tNSng/azqJ+fsnj2LlP0BO2L6V5in+uNqhkHqO4H++8ik0ZH6R+k
9RpxRqss3lVkyerAuA+ZN++V47LnTH/42Tjs+D2JUezeIOxvjvo4P2Y0u88G
/1H2DybNWM/qw7BfqOLWtE6ZtQt9Tzhi/uxd19g+DvX2II0qE9Vmdl4De8vM
FqtgafY7R8S56XTZ/ldTWX+A/ZOHm3q+jmb28J8XZ3BAZin7fiz8SOje/7xi
Gqvzw0/UkO/ha5NYe8FP5V6/5AMN7VSnQp1EuCtO++SkA1T3wHlBQ+946/t5
x4njPCLygeIBWw89+m4z7Fev/jptiq02nXfjuZM3zD/SbNNM+R6eK9379HP4
ixZaN+EnpXj/saB/5k9w+Lk31fyhVUULjUfwpSsVg73yWP0ffm6LdPe8c2Pn
BfS9o+v5Op982fcKYH+5e2Rxiy5rd/Cl7sflJH6y+2x47qWJucFXPVj9H/7d
o/ir25ay+Q1+KnvX1UdLsXaH/UVfA86XNOYfOj+8Gj0/QoXdk4T9SX5F/UlF
bF6Ff+vu9V/kIxiH/dAbJn+uyrFzXtiH1Hwc6HrDzh0o/sUC053PdtF5EOrD
L/VafSp/rWHrOO+8oONdauDYfb8oH0CdbUV56vm7835Tvgd7uYF7Nr4bmmj/
BfumEcN/x+xtpvkZ9n9Gvzo6pqaVOOxDneZ/0exvp/kB5yxdptvLd55pI474
K9tmaFrtZnUh+DEwLU/L4+uifgJe4L3z87Q5rD+AC13i8/D4ytoXXHXbu+yx
m9i8ivq5bG3on68V7DwI9mlXfXw//WLrPurqFaoXH1QfaKf6LeonPW5//KYn
ulKdEHWYdV8UxZc2v6d5GPcJfSOWLJjRuJXswYNl/W5oOtvSc1H/2cQ9Y+0W
MUDtiHOZPYdfLzgx9AnVPcClLKc8/SCUQfY4T0kKlT+5pekp1UPA3fOKxns0
plL/pL/P/nfv/DY/tn7hXkG7q7Z9iQTTH/mAoLzVI4c1rB2xvsx2C31/Lof9
LgN8Yfud69p27N44xu/MCRuFf6r/17rM6z/3Tg4zjg1uZd+X4LXjpQj+Lzdk
fxPHecqv42cXhxz8w74XwbPf3/VE7FUp67ewX74x+ab6UDa/wV7BdN/BsC3s
vWBfeHn2lInO7H4+nT8+zFG+9IvNb+jnOnUx6eqzGIefxoq5UxKV2fdj4WeJ
yzp5j0CmA3j32L6RHdGMw4+opHmzs14nrSPoV6LtoU93zram/BM8Lvu+4OQ2
VmcDDxSLWp6+k0vzG/hS3+X3XtYl03hBPz9m8uiKak8F9VvYz/lcYqEdkE/3
e1GvM5yw6t2lghd0PoL6mEOh1IXdep7su1i8et3Yc80jdGaFUT4JbqOwvXBm
VxGd16BO1Tr0+Ru5IB+6/4D6hvKwTSsXN16nfAbjhfvG5frizxFUTwB/rBxg
Pm9HFOkGvlVPZ+TtuGD6Hhq455yHv8SLvtP7ot5yKNlL6s+om/S+qNvkKL98
L3PeidZljMeC3kqb9fdeUZzgb99WbjityO6Lgo9rbSm9vDyazo/w3JBRkjFL
39TTPI96SMMq9QeXfbzZvSZe3cCz+rDv0HUh9FzUW2SFW/ZGWrjS3y1CHeNt
Sk7h+yRWb4cfSU/vedqCicTpfPafCTMg5R2t74jnpYOpb2ReMfU38Js1A8Wv
9Nj3uOB/doj4WKt7v9nvTHl1DLFU7uI0H0vqh5jHRIV7V3+x7WF/p563r3To
tWjK+6zA6ja8fVnORQ2zPcGZrM7Dm/fec/lP9Lulsnh4vGRq6bffQ9m9F8yH
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
nE+T73WleMCnNc/Me5QVwkU84DWy465p5b+g/oB1WT+0ln+xlwP7nTiPW/eI
f05SticdwEuDuRFV15zpueA/5GbGvZwbRc8FfzI29XJ65St6LtZx994w7opA
G3ou1TEM5TUGZ9yi54JXxSt+fVpynfot+IuFUvFe725SPODNl8Und+X7UTzg
CTtnffPeF0jxIH+4+PrKcenJNyke8CMl5zZzkq5QPOAKGbGlpWdNKR5wi9vz
F+18Np7GEfiCEfYuSksu0rgAX7fTV1bZ9Db1H3DhB5aCiZzn1E/Akw6rWSRO
LaJ+grxF2dhw6eQNlyl+8HPxP+8VSpyj+MFvcZrbAo+epPjBl0WVX1z6aR7F
CZ4/d09YREAsxQk+alVF07Xp2dTPwU9J7J9juquM4kS+9L0+a8n3zLMUJ/gF
hdQHgY6nKE7wY5/Mns7g6FOc4DeWvZj9XlKb2h38QOeiwzJuWRQneMSkRO34
8WWkJ7hrfdZA/eJ6ihN510I9i/qbfkYUJ/hWLbmKyEJdihM8leM+sG2JDsUD
Pk67UiCgspTiAZ8R2y2z2fkX6QZ+Q8OiO/XEb4oTPL248QVnUzPFiXws8yTf
w1f3dChOqlO1ZV4/K6lFcYLfn7k09F3CcS7mc3Dxk5Mk6xblULvTOfVKmWth
n6sofnBDdeuXwTPrKH7wwDuLjauXNFGcyOvMisYIbHqoSXGCjzne/jtbUp+L
8QI+y7Roqr5wLsUDHieu62UZWEfxgBtETLXsvdREuoG3N1UrHJjXRvEgnznq
/1vDlV+P+hX4g2ADzYazeTR+wafHlkePkyujeMC3y41zeNrWRPGA172uNc0p
biF9wN+V2sxZdraN4gS/03dlb/+4DoqT/t7cIpG8Sb32HLQjeF/kusXZPgUU
D7jk/VTXC5atFA/4qZCqI5sftpN/5KX9T9df3VSaSfkG+Lnac+8k+ErpueCF
smV7Mn/84kA3cE+/kBkda1g+AB7XsLLt1bNOihN8d7ORQ4B0D8UJbrbE6HmM
dR/pBj7vlueCufEDpBu4wVj9wr+Zg/Re2Vd0h/JZ/JNvDM4bdyfnCY1H5Buc
/8lDYB/zos59aUoQ+amZ77pIaTy/4rK+Y/0hsj7/Z91fdvD/X/dhr5S11KxF
O4jWl7/5n1SdAvgVD23rLTZ57Er9X5OXT8Zmq4SO/eXyf9bxpf+zjsPPNhmL
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
5G9nBL3eIR1B8wV5/9kRp2KvZVP/Il/uuaZRKKiU+hd5rdGdnSmSNew7xcDX
p0ZHOrf/oP5FfmRsp12lfjP1L/K8kNb2rIVt1L+Yf2ux6Yjcsm+m1F/ITbM3
fjd9cJr6BfnFWa/V4o7rk/yRp1scKC1+qUnj5Bvot+WLJu0yH2FA9SNvyo47
N1nJjOpH7hQzps1QSJvqR66VanrKZjNbP/rNpqbNcnnuok31I1+ZahD+3c+A
6kd+cqh2z+krGjRPkUeIVfl8sH1P8skAP9inKbu9ZjWrU/3IB5xsj9o+SIfq
R663oV3F/yg7DpFrXLjxSC8thsYb8sL2V5805xfQeEM+slL+9+QHpbQ+I3eD
c9k43pCH5U1JyD35k8YbcoGy8YadBuw7gNSe29dm+du30nhDXvpJtbi9rp3G
FfL5nmHb9g7pIPngfXRJUnJ85s8PkHyQh09Qbprhrk79iDxaxDbbZlwUzUfk
a7+01Vy9m0vyQc5XrPI13bqE5IPc4OXAWzp/92uUD/KZ284Pam7+TvJBvj5z
zdUNOY0kH+RzDkQzTQLs+9HIpTe5/Ana1kbyQZ51cFzzTq12mo/It98I6u+5
t43khjzfRUjTZSg776LAz7Myjm+U3CkNGj/I66TjrtkZhNO74chzpujm3B2R
Q3JD/nPXkK/mA7+S3JDf/2NZdEuyguSGPND6xeCMw3UkN+R7O6Y2zc5uILkh
V79ZNnZBfhPJDblRnMSQmG+s3JC/gHe3UW7Ih62coz1OvZnkhrzoz9Az1oYt
JDfk8tLuw9JdW2gdQ16bF16j8D/7viT4M1ua5rpMHhrEoDyRr/1sfC+rLYPk
ibxj3a+fnZrFJE/kMU5J+cLfy0meyPfkXj3pMaqW5Inc9uW5o0+2NZA8kd9L
Dqs4cbWJ5Imc32XQo+21LSRP5LXbd6x7adtG8kQ+28pI4kcPO0+Rr/jpXHrY
hX2/HvltgVcFNV/Y916Rr7z3WWJVeSvJE/mgCQPWj4lsZcwdTWNdJF7SObi1
B07HzjK+yas/9Oi7hHI68bDovBdt5hd5j8e23CiKziEe4TS8gW+2AWN0yTlU
QrmQ+NdDbtY3/J0Zqdp5rwyLPhH32CCyds1UD0bGRcBWQvkb8ZVdS88KnXnA
OK7LHaXsUkk8T29NrfOWCOZ7l5+/YVE1cd+jYX4nIiIZlfDj81wk6oiXHeQf
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
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxNnXXcFcX3x/e5e/fejbt7ERUDC1RQMbC7UEBsxcAARVRsMDFRDAxUsLsR
uwNbsbG7RcXCbrH9fd58xtf398d95jyzs7Ozu7MzJz7nnG67jNhyv1oURaPL
KIpVnpJG0WodUTS8GUWfFlF0s8rd21F0iOjLdPzwVhT9qRN21S9Ruw2TKBqg
30Wir9S5F6i8VOdEVRTtpPp/1e+BOndt1S2rfpbU/3PoQu+qn9tV11nt11C5
n9o+IXo+/R7Q8YX0e0r023kUbaHuDsqi6GG1W0B1G6n8R9ffXb+G/l9Gfc6j
9u+pz2XV/hH6UJuarnu+zv1HZUv1K9aj6Fj100vXOl5tftOxBTXmw0SPV/sn
dGxb9bmQ6j5vRNEQHT9H5af67Sj6LJWT1c9y6me02i6ifhbW72idv5DK6Tr3
KNHzi55PvyNEf6ZzBuvcs1WO1f+/i95Vv7fUz+Yqz9dzWlxtP9O5x+r4nar/
Q/WLaTyn6BrL61rHqJyh83dS/bkqR6rNsqo/SvVddM/3q34h3WNN51wjerLa
/K3fBaJvU/mc2j5b93vtof9fEL2G6B1FX6Nrx7r2lnp+y6jsr/q3dP9Lif5V
/e2kfjupnwd1zUlqe4bO7dCxaWqztMqZarONzu0teoDO/VH1K4r+V/Vb694W
1LkP6dxf9P+6Or6fyu3Vflm12Uj/76z+F1KbbdQ21rl9VDdSbV7SdVZSm7X1
/xeF7yVS+bvueQvVz6u2p6qfrUQfoDbdVb+36GVVP1P3dbKaX6dycV37Fh2/
RX3+pv9PUf31Kv9qeG7cqrK72lzG/FWbZXT+paKvEL206KboZXmuGt84tf9b
bffTOMaLfkrzboToCaIP0XuYV2MYqDHMp/MuV7vrdO71OndF/d8WvYroSfpl
opdX+YfO30bP9He+CbVfS/c8Tn3MJ/pMtblAbX7U+A5X/1eq/EzHl1f/m+jY
n00/vwPpp+lnv7/K59Xm3vB+d9A52zf8fn+M/TwjjaWv6FVEr6M2Hamf8V46
935ddwG1P0Pl+xrToupnP5VP6x6316kfqX4xHV9S566lcy7W8a9Vv6R+34v+
l/fB+xK9gtpsJvqbuufDFlyj8LfMN/1a3XOMObGBzlu15ne/m+i+ogeLTvRs
Gmq3j+hY9Puq30v0FJ2/hvpZT/09o/pSbWpcX79/9NtDbTrrvnZTeYLuK9cz
3UDnzqa6SHR/0Z1Ev5V53v6uNq9nnv+/iX6z7rm9ns7fWONZXfT6fMs8K9G5
yr1U30/0Tqqfrv/XFJ2q3FtjGqTLfKAxfpT4nfINv5N4/eml36qiV9HvNJ27
EvX6jRN9MGuPypt0/hyaT/exPqm/UXzvfK8aWw9d41/V9xI9l+pPUf05oqdq
/H3U93iVX+ZeK17UnH1ZvyNF/8671bFddI3F1ccjanuZfj/o2KX6/zzep/rp
yTMSvZToc3WPg9V+PNfQueeqvEj1q2gOzKtzD9f/H/Ge9fueMes+5lb9KNW/
q3mzsOh9VVa517Yzde7emdfFM0SfmXodPkv0iNxrYw/2G/W/W8Nr3NlNr9OL
qvw29bz6R/Tcmb/9+VXX0nVnV9sD1Vcn0XOKPlj07mrTEj2EUr9N1X4utX9I
dRuK/kb97qt73Fj0zmrfUJtNRHdRm+Gq30j0EL4j1Wc6Z3uVfzc9rw9X+a7a
jFObP/V/n9Tr8Hasc7qXw1X/gO7hRZVH6HeHjj1QmS71TtdJ/X4fVfve6udo
2uv/51R/rOjHdO6zoo9j7qmcov8f1PF31X4lPdPDVF+onwMTX+sWHXuk4T52
VpvXVHeMfg/p/7FqM6bm85+K3T/1q5Zu00X9PF9zn7eq/gvNvaNEz8G+qfYw
CMfxjefeu+bVeZN0L+frOoX29O4a3+5hz7pJbXfQb0/9/4baPK1ndqzaXK02
Q1R/hca4j/o/RMc3Vf8/qc/hot9R2z1Vf5DojVU/sPJ1D1XdD2qzm+of03Vv
1f8jGKvKvfQ7WPWbqP256n+o6hdj/samOfZj7rE9rbbD9TtQ9EZqv6LqD1Cb
uzWe+/W7WfVrq24Hnbuu6ufR/xfWTG+r8xpqMzXxujkw9vc+V+R1YA3Ri7K0
pC4/VjlG7XtSp/vfWm3WUZse+n/b2GvI3KI3aPk6a2g8H9S9FmXs8TWvh5vp
+J2VeZKXNbb+Yd2eQ22Oabi/f3Wt9VW/supnZ45xj6KPVvkGvBx8Gt93zevY
Fqq/KXabs9T+DvU/sma+bq4O0+xn8G77i75U9F0N836b6v3ep74OYnwqD05M
Xxl53Tq05rVruvoaxb3ovppqtwjzVuV8urlBqu+Wep1nbBzju9+u5rm1uo7d
qPJertVwf4NEf9Ty+piqz830rHYUPZJ3qTEMq3k+/R740gNE/5X6+51D5YG6
7giN71T1817qZ1tXWUu9B+6j+qvZ59jL1H+aeU2YU8ePjr1u7K52s6deD45X
++GZ1495RH+S+tk2VFbsR4nXojk15qlqs5T6PDz22rKr6t/Tfa2t+pMbXp+g
H9f7fVf/ryX6JJXT9dtM9HiV9+paX+m813WttUWPhU/TtQbotwp7pup/1jV/
0u8T/b+qrvW7yhX1e1P0yexr8NKiTxH9h+hTdN2ZKn/R71t4A/166thl6uNS
+lL93C2vN2P0/W6ga/2suvf1/zEa6zk6/0aN5UK1PVv0dzwXlcerj75qe4zo
v9gzkQcKr0lHq5+XdOwf6vX/0+pnHd3j85qDndXPbInX7Y90z5uq/nT4tMDn
893u3/I6tC3rnujjmRui/9Xx4TWvHdN0H++IXom5rDbHwluqzTXqa4zoFXTd
2zSGPdTmWtVdqfZ7hrViK11/r5r7PVjnjlW5vc6dO/FetyHsk9rvU3Nfueh9
a77GFpXpUTrv2tT99FbZu2X54nRd9wb1dazK4/UcBmfmWbZVOZvm3gdq/7Da
DhW9neqOVJsv+V507lE6pwv7WuK9tZZ7PBNU/6HuYRNd/zSVnTPvxXPrun81
zSceovICtd9e9NHME13zJ/220f+76FrL6NyHdfzNhunjVb6s+kjXeqn02sVa
t4HaDw5r48aiS11jU7559bldWNM21P8D4IN1+pq61yJ13QHwscyH2NeNuW+V
k9TmTLXfHN5b9Nep6SOQxXT9v2P//6Tof0RvCQ+k57yL6EJjG6ayZD2GV6z7
WV2jfr5K3f+R6mew2u9KO75v9dOhdlvDc7Tc31WFx8O4rmaelj4+UXS9bp6T
vr4Mbbrq3r4THdXN636t8qu6+dtnA7+6HbxUzc/8OvVzjMbRi301M7+8Q4d5
5t48c2RLxsFaFfiNPcOeAm/5Web+RrNGsVfrtwu8YthThrF+iW4HHmYi61ag
f9W1u8MDqxyhNmupfijvQ3Sn0E/Plq9zrsrFWj5+vsoeLfPgZ6tcvOXrXKhy
EvteWMeOUz+zi96PdSTw3YvrvoaXpm8L387moc21KreseS2+XceGMwd1f8eo
n/Vr/n+06M5hvV2iZR7+Fr3DS1qWA+7Seafq/e7LGqZnUg9rxiqsxXXzoxzb
Vf3uqXJv5HW+/dj/71lahrhD/RyqutnCvazU8Lp9iOgegYfdABlSx7fWb3/9
v0zLsuYD8A8N7w0H6f/ugffsx/4h+sgOt1u65fPuU/u31fcVOjYS3rrl8h5k
9rBXrMzaEr7vVUUvEnjY/qx7mce1r+6lp+o/hi/iO9H1+9T8jPbLPJZ91Oav
zMdP0/MZrWt1413pWs/WvEezV39b9/z/HL5K/Syl39v6f2e1/0V1e6j9Fx2W
O57U/wvo/3tV3lB5jZ+1H7F26xqLid6afULjf5Pnp19b7Schsqu/p1PzvWuz
Hmh8H+v4K2r/jK65gn6f84w05hM0pokqn9NviQ7z0qPUZw+1eVH/r6ZzX1b5
lOpnU//XIxdrPFvpXQzkW9Kx69mX2etYb9kr1ecklSvH3tNWYO7l3iuPUPlh
0/vkriofUt2DiffB62vmVVi771fdDernR9H3ir5O9Pesyzp/eZVDde4Q0deo
/k6+V41lUMP73OWJ92v2zk3V5gTR/fQcLkm8h/6g+jVRvIU9a9fce/fH6vNQ
5q7oIUFGgCfvxbxEtlT5kuq31HVOVV8f8rz0LLpzbZX3qO/JzBX2P835NXX8
Cj2zRXV8Ef0+Uf2d+v9L3rWOvwtPpzbT9f+AzHLNJhrngg2f+ylLHjoT9Xlr
6fWNdez6wmsva9S1rL06d5qOjdO5P4S1dgZ8ps75Ah1C5TXvOY15NdH3qc0F
dR+7m/NVXqw585aOXx7k04dU/6PKXVVulJp/+VT3vmFqvmZ6098R3/e3aveM
zjuxZt4IeQcZZxrrhdosq/8/EL1Zw3LR+6K71D1m1oVX4X/q5u0+DPfImv0w
sorK3VXOqzZdw9h6tXz8LvZw1V+p+p/1/zXswzXLxawnfI/fwWPk5sE2Rm5N
vZcepPG/HGTnvfX/GeqzhUyh8vLUutXL1KZ/Yt4XHevE1LxuL3QPql8jsc7o
SR3fuWYdQR/V/Sj6bNYm0esnlvM3VZtN0O2ozc/IYyovUXlWYV67n3iPM0Tf
oPrO8K66t51Ff62xTwjfHd/fbWp7h/q7VeVPOn9v3p3K29lf9Ltbx55Dp6By
oMo1dax3Yp3F2an1H+epfpDqtq5bT7ccz6XDfNqt7Gv63caamQZdr+oP1jie
QqepuVbFlgc7sQYl5uFu5Hx4cdZ1tV9edCl6RdHf1awDQcexaGrdBnLs2Mw6
mHNFLwKPqiaLi14ytZ576ablSnhFdIIXh/WQdXGgrrmdxnON6ufQnD6Ud6Rn
1hndrs75lL1LbXZR/aOs+6qbN7aeukPnX6J+hqi8Svd1n+ru1rVW1nW7iO4D
vx3aNOEfC8th6+sd/ST6HtHriR4t+mK1aaj8tW7eCX7oz7p5J3iRibllvPV0
zo6Zv7nZRS+nsc6vNu9rnP/q/Ad5Zupz2Yb5JfiTlo49w1qp+l10L0P1e4D1
SuUQtXlI9PKx94zX1O6KzOv6q6JnV/09omfXb53c39wLqo9blvVmZw0R/Zjq
9lT/3fTcRqnP8zWuBUUfJPpc0fOJPlD0OaLnDjLsPOprrM7fHL2yzs3VZn+N
KVNZVpZRWyr30O8k0fOgZ6ANuiX100n0cNETRG+cWJ5EF1yLrU9ORW+huo3V
5soO63NeVbkIe2rL6/HZuv4hOv46c0q/vwuX41S+WrNuh3Z7qZ8D1G4K96+6
BfVbWPTvhcsTVUYt75+nif5D9Jc8N5Uz9ZshurPKcYn1Qkvq/2Nb3ivP5L1p
zL30e5qxwb+rzTvstSpH19xuMx1P2YNE/5Z4f0Hu/Uv09XXvZ0er7KY2S4su
W95XL1L/34l+j71d5Vct912p3Ebz5PWax5e3fN4Fan+U+llI9Uvp/6zl8jzV
v1HzffXW7+SW9+TLVL+u5sxbOnai5v5OTevT0Kudpn4Wr3mfRrb7t8N7Za42
T6nNE7r+T+rnefSvmgPn18zrbqW68fplorurPL3le++mcvvKNpFnSu+J6MvZ
hv/SsV9Fz6ty9+asbTk6Wf3eo3m7sNqdrfKxxPp09kV0Qheqn9vVTx/V1WvW
p4/T+YnoBVTeoPoktj3gar5DeIfIezQ2Ga7xu/o+QuVElQcl1us9p2Nr6dov
qHyCdSm2XgV+7lR0Uswh9gg9u846d2WeYey9fPUO66myILu9p2u9W7d9Z6Su
MUK/bfU7Tec34Qlb1hEhd2wp+m21fUu/vmq/Uew26MC/z7xHndS0rqwI8uB0
eO+6bRLor9DtbI4Oiu+ibl36BTXLLNu0rO+aVrfdAp1YHuTHQS2X2+i+b6pc
v7DqPtTzuKpu3rR/y/qzVzX+vqK7oDfSve/EHpZ47s4I61JX0T1yl99qzBtU
1k1cVpq37V4zf/t52IPmZb6qzSb6/xe1+Th8+/Pwval+Lf3/ner7V9a59FP5
TeJ1ie/5+sp6mrk1D79veg/dhH2n6TV8XfhltT09Nn9wZ8M6NtbxwaLHJ/5m
biytu+mn8qbSupsBKu9LzIMuiozX8PcCv/pAYj61h+hNNYYXkffU/nWeR90y
20aV9TWLwB+qnAyt+h+bXgPeVPmv6k6qu89HRU/RbwnRm1XWd2+sPl9I/T3+
rPY7YxMS/ZPoXTSeofr10v//ZL6/b1S/eWW74S0695vYujDG83jqZ/YDfETi
+b0APHfudeZwlQ0du1tje1D9zl1575hT7/r4lnm6TqxPlZ/ZKi3vU290WO74
LvE+wrq8qc5fIjZ9VOL1+jW+qyD7cL2X1ce77M8RG6nvG30a12YMl8NvFLax
sj5/m3hvYj/gmm/pdxffYeb7uETlOYnX0091bELdzwad2PuVefh51M8RddNT
4Dn0/xOsB3wjsWUD1ruu+v9x1f+q8uLSOr5fRHetzPvPXXhfgH5E7dqV+dy5
4BnU/3JBzlo981p9nJ79iMrfyqrq50r1uYba/Ca6r577dJ6Hnv3Jift5OPJ6
juz2KPpe0SfH1kfMjG0nY43YXP1sKrpD5brsp3Xzn5N0vQnsU+hAdGxteGLs
D/qdxbU0zpewdanvzbD3xv7mzmGtUZurWMOwFWts54u+BBuH/j9a7bdWuV7L
evFVw/Nk/K/o97Pa76H6C3T9Q3Lvv5dpDK+o3Wj48cK8G33y/5Ut06+qfobG
sH/QlRyIvV7tztO5O2H7UP2CGtcCpe1k86vsoWOX69yrNLa3df4J6LVVzqyZ
h99f/y+sdr/q/5d1nYlN2+au1vyaVnhfGKxyq7r5WvoaVDcPzP1317k/69wX
de4Wde8pF6p+QN38Cs9xYuw17ArRm+v5bxv4lqF8+zrWTX18Xvj4qaJnQ3cR
7rGz6MOCTqRT3bYx9Eqfo2fUODfANt2ynWEV9XFtYtsy6rAlKuMKnlOfr6Xe
m75AZ4XMUTdm4JfYtmf2xV9j231pN7A0JqCp8jd0foFH2aI0LiFGJ5f7vBnq
83fVbRX2ts9T7xFbaWxblsYiJCo3029Dvh2N95XU+/JA7HvY0xN/szNS719b
YzNFvg66py/YZ8Nz+CK1LPYla3liGzc6x3bdNsKKMcArhmf1Tea6r9R+Rsvr
SSc9qwWRSWPr5oZmvs5euqfHE+tFucZN6A8T69S+RrcUvq9XEttbqV9A5Qmx
dYVfqdwv9Plz6rqvdd3P1P5T/S6GbyvNl3+DLjyxjga+7UuN6U74KXgktdld
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
gxyi4Dz/0O/wyPjnkUFnju6ceF+8I/7/P1coStk=
            "]], 
           Polygon3DBox[CompressedData["
1:eJxFnQOwLEnXRduq7r5j23xj841t27bf2LZt27Zt27b1zfxrze6IP+JW3DyV
qOzqqsyDvU9PvNH2K21XKZVK+zRLpRr//+yUSkfw/7dGqdQbKpXeR14TeWTP
I5eKUukM/v2P+pGQd+P81/VS6SLOndsulTbql0oLUXce54dR/22vVFqAgbeg
/hvKB3AsiXxSuVTan/LKjLcPdZfQ50f6zsA8GtQdz3Fpq1RainO/M/7jtqH9
ubTbjvKyjsH19uU6f1M/C+1vQV6Y9j8gr8M4o3H9pZH/Qn6SPpNSfo5jfcqn
MU6H+im5xgbcgG85pqPP+9Q/QP01jHsW9Ysg/0j/2zm3EOVZadPlWpvS/jLG
2Ir+t1I+r8pB3ewcfeq34NwN1P3NOEfS93fa9hlvd+TvGe8xznWa+dx+/ovp
czHyGXyGtfhs+3LuSvrvxmeeB3kT5Ee7HMjzIm+G/AjlzZjTEoxxPvKmlCfk
OJHxp2e804ucs67M2BNw/XcY/5Paf19jaQT9DmY+Xf6vzHzHoW46rrkZ5ds5
tqH8K/V70vZH2nTpfzfXvIT+x3NuewbZE3k48jHt3M+JOHcXdetzvcmQh/G/
zlzWY7xLGG8y5nMm8/uOc/PyeTbhWJO6Mxm/oP2DjPcw4/3FGJtRdzZ9fqL+
LO7v2Yz1D/M5nbq/aT9E+8e47kOD9sdRno02PcY+h+N6+p7J8QP9F+CaZ1B3
Gm1WoP0SyOcij+B6CyJvSf9nuN7OjP8xdTsgn0rbKei/Pv0foc00tD+L+nm5
9sbUf+mc+Ty70P5prleh3OXYFflC6rvci7MZf+9anqmfGb9H/W7UP0v7BvLV
1B9N/XPUL0q5Rf021D9I/YnI6yHPw3UOQn4PuYq8CfX3Ih+HXEPeFHkc5D24
3mEck1Keg3kex/35gM/wNeOvyLl/mP819DkW+Xmut4T9aTcO/efiGsdT/3I/
78qt9Nuf/ttT/zb1m3LuK9qcTJtDGetq7slG3Jsy7Tei/m7O3cnn6SPvjvwc
cp1ym2PHep7BDnN7lnFf4vqcKu3CeJcyh8OQn0EeTvlJjqeQP0K+gPbz0v9l
Gg9HfoK5zMqxA/J4jL8r1z+P9vvT/lPkubj+5ow/HvI9HGMx1w3ov4DPOf0n
p20DeQv6j0v7EYw/P/JHyGPzeQ6k/mmOZ+n7Me3HZ7yzkPdEvg3568H79yjy
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
J608ywvweT+lPK7fv7YIfX6jz9HNlKdhvJ3duznKyL/4TlE3Du13KOcz+/y0
kednrO25xv8oH8U1Jqd+AcqTcP39G6k/3fvbiL/gAK63DfLMtNmV+W1NeRLG
Woj2/3JuCuoX1wnDuTepH5mxz9S+ZOxxOXcM8nVc/xvGepv6sQef72fqF2rG
Ft+B/nMw1kUcOyFvgnyx+ydz2JHyw45P2zuRd6P8JEfNtbOVvXa0wTs1rJ29
7Uau9y3yPK20n7gRnf8u/u+B/BRHnfo27afUlkTueH+Y0+6U56XfIny+N+mz
Uil7xeHIN9N/POofUiemvBjnj+FaN3P8wHg/6X9wr0X+CvlL15Nq9oAvkQ/h
83/LXN+kvCjjfYY8nboB1xiJa3/Qylo1H+N/SPkNbe5q9I89KK/H8/Un8iqu
i/R/hTaLI7/P8YX6jvOuRmf6HHlP5Kf9vnkezqHPjchd6g/ynW7lufP5u5bj
62b0RvXHmcrx7+ytHw15Y/p8R/vHkf91/pzrUb8u5y6g/Bz9t+JePMkcv/O7
0sdEeTf7qItz/bO51py02YO2y7jP0H9Z5NdpfghtlqM8E21uUXfy+/S71f5y
/R7s7xMgn4a8M33Gozw+x6nIx9H+OZ8nbUbkX5H/dq1DPh35BOQXqB/uGoY8
q/qp7wL1zyH/gDwf7UfwPh7nXLyvXO9R5Cf0BzG3k5CXoP/7yEfRZknKK3P+
PeQjkVehPLc2uN+17zzjPaAeTd1L6jt83onocwb1p1A/E9c4hvFvo25rystr
79D/zEH920V8Hvo+NuLct7TZRR1L+0z9yHcFeQ3k4chFK+vFKtXoSHtw7ZY2
EP1XqOZ5Glt7gfIhnHuQ+a3D9aeh3anMfT2uvyfjbUj9LIz3P8q7cayHPLP6
G+Uj+9H/tQOWpf3R/fgP9SMuhzyfa2A1/rHFXLv011SjE72g7dHIs1dU41/c
Qx/H4PP0WvE/WqdTd9ZW3gfnrk65O32f4nov0P8mxjrH/U4dgLq/uN5w/Sf0
/5D6t+l/pHsQ83mc+tmo35i6aTm+qWSP1zc2I/1vp/5+dRT6T0/995X4VPWt
HtHKWHNRv5l7Nke5GhtT23gexn8C+RHXCPVrxnsE+W3af+daiHwgct9nhfme
RJvfaPsJ/U90PaV+bt6NM/hsq2ivUf91JTaytvIJrbSdXh2BNnMyzv2D9XMu
6ob5DqiL0G9N+s+GfJ/rLfVjFPFH/6+S+WobL0b9a95P1/xu/Jt/VuIz1Xc6
rfYrdb8P1t8n+9EvN+V+nzwU/2Sb/ttSP0sr9scvldjQ57l2MP7Z1E/KPFej
/aLuCYPvZxnaLkn9G8h/quNx/dmpvwf5ceQn1J04GtXYUNpSi1P/djX27bLU
zUL/u5EfQ363m/3CuepjON/no5vv73T1fK5/QSNrhZ9R/21j8D6sWI2O8a86
pbpzNTpTh2OJct4h99sd9HlQnpP+VeQ6x6SlnHuV8lbUL0x5DurLvsPM7wPk
pZj3ukPxUemrWopzr1O/HfJilKej/S+UH+PcNMjLMc/LOtmH3Y8993gr37Hf
tXvmndqOjDt+LTrA8erY6gTUbcmaOjP9t+H6E1O/Fe2m5vrTId9E/YzIqw9F
R1JXGo1zt9L3fsbYl7m8qE+Duk216auxGZakfhPkuZF/Y07v68/geRiG/CR1
azNehfv9lGsJdbMiL8z5/en7MscBrbSz/b2+Y+pwnfjOXqDP3JQ/0gfJfDfk
3Ie93A9t8b0q+fyj6aOhPNzvjfFf1Kahfic+z47IYzrHcnRc7cW1fUcpH8n9
WIS2i1B/XynnnmpFvxqhr4DyWvTfiPazu7ZyrED/bZnDpMxnMfo8S/9n9ZlQ
vlHdTf2c+oOof5j7to72Bv2nqMZnrM96Sdf4ap7R2ejzDP0X1HdAeZ+h6Bu7
VaMTqxtPw3jXuxbyGW50/aH+SuRR3Y8YazrkK/QfIF/BnEfm2LicMdRXyt4H
yp9zLNuOfb0L5a85ltemYPwb/a7dTxl/dPpvVE4b7e+PWnkX1PnUDaei/VXV
2PxXd+Nz1fe6XDU6/dTUX1tNfGA/6scYjLdzNfa79rzlkblHh+q3pv8Wvg+M
Pyptl9Y/oi98oKNfU2T+FfptwP2ZvB3fyK60mcY9pRfdZjR1dK43M/Jd7t/a
6bS/sRFdc3zO3ed61I8/ZuZ21sPNBv50v4N3aFtTP3ItcY2m/FYrZW0SbRP9
Fdshf+U72Y5+u8Pg/qgbT8b1L6hGJ37R+Afz39r1VD2P643E/w3L6aM+/Fsr
9Z9xLIM8lT4/12/azK7u3IuvsIO8DWONxrkNypmD/pIDaX8A8hT66Hm+ik7K
xlTOpPx4N7G0SWi7INfvdOLbsI9932LMSxhrGn0FQ/FB6YuqVvM8ud4eQ/9L
kad1zWin/SKMfwFjvcv8JmO8/Rjvdcp7UD+M+/kW57aj/gLGu6gan5a+rcmo
P78aH/K1yNP3os+p120+lH3B/UEfqfHBKXt5vn3ON6X+E332jP03c3q6yP1x
P7jG95z6t5Enon4f5vNaLzattu35XP9NfRv9rCXemzOHEp950feN8fdAnrAT
W98Y7PH6K7jGKfTfn/N7UX8N585ErtTi39KHry//knbiST8jL1nPHrl9Nzq1
urV77hzt6Ljquur07mf3tqJbGDMxdqKPRF+JNt5DrcQXXG9foLyn86X+DeZ2
Mm2uase/qC586+CZ/oz2s2l7uj5pXxXxJ+tX3p3+P+rPpv4sbZF+1inXq1cq
0U8m0UdtPMjnaij+SdcW1xzXHvcJ9wt9lq4/Vf2JlBenzSTd+Ez1nX7JeCfT
903f6WreKd+tqVvRtdW5J2Cs9ZnD/MzhbO7vRuq31K/O3I+jfjzfr272RvfI
iSgf10zdaow/YSvvue+7NoTxMt9J381DXSPbWeNc6w7nGL0dP4H+AvesZ1tZ
013b9Zmp7zeNTyAvzfUm43qzUH9bNT7SRZvRydW91cG1ccfmOLIaH5++Q+0Q
7ZGJjBE0EjM3dq4OpP91FD7n9Nz/w/Wnt+Nz1feqDXcT9e9z/emoP4z6R7pZ
T/XH6pfdbCgxYmPFP3Pu3Fb2xxnriQ/vpG7BMYOxB/o/Tf9dkOes5X15pIie
qb75Lv3HYKyxXM9oe3A1/kh91PqqtdG1r/RXWqdPSd/SeBw7lvOZjaeXe1n7
3QMm5nrvq+NUo0OpS+mPf7UUH96dlCfWX1wLlmE/Ps+z3KMbkMc03s2131Rf
Zf576YOkfLxxL+MDjPE8/4/txNf5tv5L/h/dSV/ts8W53mo8TxNR9zLnTmf8
NxhjXH151N/Dtdeifkr9sO4x1D3TybW2HuhD6tnq21dVBvHvTtaL2WpZXx/o
JR7/KO13Gor+vYq6tv4z1wDXMe1z5CPbwTeor59Cu531TzPGbfXEJLQZj+rE
t+k9etL4M/Kkjdgo2ipjM9/DaXs98pjMf3TkA5HfZM5fcb9HQ97f+CXysdSP
ZwwK+UXkFvUf9oMXUBc3vndoJ/E+46/X8n956suN2ExLM9cVkCvIL1qPPAry
vvXonEe7ltC/3oh/fz/+j0n9IdRPS/0p1C8sjqYeneoh6kftBBszv/4mymPQ
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
tb4N/WeN2CyPUz+9Mb1K9vg7GO9v/XWNYF4fpv4v/XHIM2jz6K9A3qcRH+p9
2nf0ub6cmI+xItfbOZnfEOc+Nv7SToznXH0Mjj94nrQh5J8Yr9u4knrxzOK5
z6O8Wynfn+vz3JwfSR9lNzaatlrTz98NvlP85kaup42sJ4vpF9XepX6vbvZe
Mfbi9e/qpk6f+d2U9yzCpVFHEGvqO+yzLAbQ9c71VFyZ+LKbGPu6buayPfL1
3fhM9Z2KZ5Ar8UYne5GY462KcDLUg9WHXV/+ix/V8v6LF/3FNaMcDtvuRTiH
Fw6eR7mIrxaxZ39pBB8jh+6iwfPpfu36rU0q3vjmfvhipzm/UvDFt/Ti69IH
eGsvfCrx7UOdxLcmHYqPRDzqO9RNPLCZjK+/2E9MzdiaNvCZ/firxGLPUor/
S/ydXAjXXLHtxuiM1RkfOKcfH5i+MONZ5/djY2hrzIn8Uzf8m4MY737Gu7IX
m0vb62mfX9pv5POhncD4NxbRUdVV9T0uMxR7QCz4rKX4L7WptK20v8Ru629a
VCxMKXjRbalfqB1+kvgVfYj6HH7UP1xEJ9M2ck10bdxygElQX6h343PV9zpz
LVgCOUDiAsUHrt5PfGECyp8w3gaMt3QR/Ig4kuFD4XfJTTLGYKzha8beqxkf
t77uE4uMJebwwG727LVbiU+6l+/XTtzA+MF7nfhY9bVqH+zM2COQL2/nnspn
MqZnbE//4fm9+LsWo27yUvCb+oT1Dbeo35D6XfTbtvMM+yyrQ/j9+g74Lhjj
NNYpR2kZ5rteK9j7RUrx325H/Ur0r1XCH1u/FSz+otS/10jM0Njh99oL3fgo
9FX4vL7KeAd5j9rheMovEwMrFnZdn7EiNr027cTuh0V8YPrC1PnV/VftBo8p
VnipoWAujWkbn3lzYGNpax1Cm7eNhTSDMdUm0DYwxuge4vrzcD+YWjGO6szq
zsYr56I8ein2uZxgY3bGL94f2FzaXrtT/1Y/Npe2l3zKNwbxCmM3xnDWdK3q
Bq/5YiN4QX0a+jbcE90bH2/GTtVeHdaPvSU3YO5S7GNjZMbK5P+eW8RG01Yz
lrkhdRu0wm9YuRR+gXyIlSrBhLs+nUCb+TvBn8tfOXUoMZwz+Dw39MKJug75
p3q4UqcNhdOijqOuYwzthE6eeZ99+Xbit5ul+M98P07qxD8nd077WHw5Tf/D
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
WIP215TCbRDzKvb12Er4/xNyDNe/XQnfXw7ics3oxOrGcnxvbyZmYKxqniJ9
tdnk3u7WDVdTTKD5jbbrhkspBkW8umuYa5kYhJcpz1aEyyaHSnyg683B2paD
9XPtbnxF6iyndMP5nLgdndz1zjXJtUkMuPlpXBNdG8VkvEp57iKfxZjIIt3k
EDC3ljqIuog5KYwhe4+8V+4fxq6MgYnXkFMot1BM2Ibt6GDqYvo71mhHp9cW
WLsTXf+pdnKtfFIPfkQMnVi6Z5G37ESnlY+0SDu6rvxj/fc/loNfkk//QD36
r3rwe83kljEnjrlxxKfeKN6nHD6+Pii5VHLr9U1tre1fD+ZsE66xXjvXFk8i
F+GnZnThe+rJr2POE+0Zryl//6p+fMn62PW1ix+9thb/tPx48cjyUc15dfAg
3io+XX+Ofp3Te/Ft78txDuXxuIdflOPTNv/Phs3kR9IGNg6ljWw+jYvasZ3d
j8WKanPeSHkO8bBiGRjj02584dpq2mzmAluvGVtSeQ/tnn5sFX0Mpw18gerW
V4vpa8an5f18txlf19X9xBJck12bzYcmfljMi9gX8UB+l+YIupRzjzZiy5gz
TTyM+bDcy815Ze4rOf1y+9/h2JHyvf3gW8yVIL5+JP0x+uqMeahndZILxXNX
dsLBkou1n/ZsJ5gGsQ3mTNmCvvu3kp/APUM+5+Wd2I5iYhfqxAcjf8m++mbO
5f/wRmwY/f5XNyIbfzIOtWc/+7f7uL6YOzvBLk8w2M+do3P9ScxcO/hb13bj
SV5P3qa2ozlaPlTH6sQWWqme+NppndiC5nT5uB1OvLwb+Tfq0+Z9MP/DraXk
gxAfdHEpNuEllPdpx7dgDq0d9APw+f9RdyqF/2vs23ttvbm2xHiK9dSHoL/w
9EZ8A+Zw0L8vZ0TuiJhPY+XbIr9WT/zROOQ26rj1cLC2awcvoL1sfNU4q2vH
QoN76L2VoyJXZe164utiiMQS7W08sJN8CosO2nvv5RzLPRYTM1c7OSrMVSGn
aQbkW5uxNe1j/oWRurnXYnLm4l3Yrh/fgT41fWt7deJPUIf1ffmG+nPUx/RZ
dOL/NXYrv/xa6r7tJwfgtsY7OvFfynOQ7zBmLxh1MbP6W8Wui5kTAzgt8mXG
W4Zik06HfEWRGLCxYPM3aJ9pf4rN1EesvWnOhIXbyT9hLoV5esndJMd7Xsp3
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
X8V/mq/K/KzyPRaqJB+rnKb/uDiNcJ3UOdQ99J3K5TA/oPZwUQmf0fxd5r5T
ZzYfihwo9bVPGuFGiQGfAfm1gf4j/1F+o8/0vo3wAb8oBU8o/9V84GuUg/nR
32w8wfVAe0O7w3yomyMvUkk+VTHoYtnfbgSbrk9R/LScEH2N+pfN1yBe9Ih2
4veuN5e3ghUXn2D+ZePHxpHFcPp9HNUMtlMMtVjqPxrhQpmfY5ZafrPFnAxi
3sXWv9UIFl58i7H5iTrhcsgZ0Lf5UyNcAuM13Vp8mMaLxOAvR/0HjWDz5RTo
2/25Ea6B+QW+LcXHZLxHPrNYLHOqLdRKXjR9C8abjXGY38C9Vp+T8azXmnnf
9Z/qRzWe4voiflEco/xzc32oE8k336EfrroYSPFrvn9+/87B/LT6pfVP65Pe
a7Debk35u1L4365nPt/flPL7EmJuf3Z/awaL6/ortuj7Uvjk4jfEZoiJW7aX
eJtYOjGZ4u/M77VeOfha+ZTywR1Pe1D+uPl8RpQT3zffj/xqr629Lt/afLrO
Tfyv/A75615bPK98Tv2n7kUPNJNfTu6Dz5Pfkfm8zOfs+6WNJl/e/FT7lqOz
yz8XMyN2Rry3eAvz9emPEaNpvgfzZy6lbVUJH9h8CHJ9360lP4P5GPSHfVBL
vgXzu4rd8jO7vprvQWzAdbXkbzB/vuuz/kHjLeZDMD54cy35D8xvoj6gD931
2vys2mb6hOX3irn+uJRYj1hs9yP1AX1S5vN1ffS3M8Rrycc3f4B7mzal/Bqx
39PWklPPPUefr9+/XBx9wca/HH+yQbxLfq25GG+phX8rPmSmejA3T+oroM9p
pXCQ3G/FQ4/RCb9Vbqp8gGdaeT7lKxlfeKYazIPYhz+6yY1pTlRzo8ohkks0
TzW/lyFeyli6OUXEv5iz8jr9zdXEW+YsEvvSx6yv2XiMde6J7o1ydOTqzFxN
vhz5B/O3w/cWzyf+0Nzn6iBiRRbvJRYihkQsib/hY74IfUr+foAcIGOtfgbj
I99289sp5vQ0t6cxXmO9jrlIL9+R35VzXL2X+L+56swZbu5w82eZq94c5OYi
9/rPlZKjynjMa/34j7TJtM3MT+XabY5zc53LP/fZNKe5uc3Nx2RufTnnKwzu
j7+NYA6TNXrJp+VvCchBNxelvwkhn18Mlu+v8Xix7/6mgL8t4G/UfIT8QzW/
tyKeQF+xv0ngbxOYU1X+tzFzfw9FPKhtjYEYCzEeY95hc/SZq++vbn4Lxxy8
5uIVz/lCNZjgGWk/fzexc8/5eyzuP+pO7jkb9cL5lnttUNbfb7mzn/w5/paG
+d8WKuIbV+cxH9Aj/XB5zKVnfjtz3JjrRh3d/C/+Ho3cHnVg+Xz6d8es5Z3w
3XA8cwv1B/52c3a+1kpOMu+fObgvKIVzPzvycUV8ccbEjY3v3A+2Tg6iXMR1
inAjrxrsR+bYMNeG1zS/0MI+c6XkrNlqIItlmN41rhM+y4TNxD/1H8kRkSvi
Hrh1ET6tuXvNYSV+RvyQvy1gDoP1e/n9CnPjm+PA+NFLjeQBNh+wv52gDuq6
MPvAPy5nV+6u+erNZSX+3nv/nTZJL/yUQ9rhZ4mXMX+Kucf8zSl/e2qJIrHC
hTj26gV/8Ek5v9nib7d83UmdbeT3mkPIfdn9+T99qxt/vWvOx4Pxti9FR1BX
EE8k9/a2Zn5vwN+H8bcD9CnqWzRnshwCMS5iXdwj3HP1T44ysJ+NYxvPFuts
PHK0dvLHyXU3H6PPjzEK85GIxzPHkb/fdkM/GDH3bnOUyBd4rx+smFhvsf/G
y+SoG0P7twge21ij/kvzqYoPMqeenMCdinA6xmjn98rkesgZkQNgzMjYkRxl
f3dDDrPcZeOl5jWXQ7hzkXugzX91KfdGvKQ58uTA7VUkvmdM35hbtxt8pnkK
zFfwfDfxRXNguKZc00/8dulO7qn3Vny0WKxrSsmvbvzYnHrqj0/0E+8yD6g5
4SR9iN82lqmP0Hzq4kPNueXvl93YD/7vtFYwWWKzxD+JU1dHOqkInsg8e+bb
m6gXfJO4bH0aP1G/TzdccvFP4s/EQ4kTFzN2YBG84eatYHLF5vq8y+Ew5mbs
TfyxOSfFZN7Rj3/R31QTkyk28/Z+sG5iJMVKyoE3t7UYWrG0xmTlkJiP3Vit
nCQ5EObjl6tkPhd/K8+YiHgqbRA5GurrayA/0E+s3FxJ5gc1RiUnXP3Y2JU2
1fatjKGtZX4HsQLq/MYjxXPv0AqmS2yX+OgdW/EByR3XPpYrp45uvN18EObi
lzNu/M/8G2ID1MmNfz7YDzbAXEnmWxW/vlYrfeTmmd/S3wbcvxR8sf4jf+ND
f5ZcR2OCK7eyRxkrNIeuPhN9WIcWyf+urr55KXhEc7Cat9L8leaqFv9nDj59
4rf0k89MrKgcDvG8YkDVFdcYrHfmJBfjor1xfz/rszlW3MPu6+edP8D9rJG1
QDyfORC/0p9ThHNpbnIx02KnjeGZk1j/lrE976m/PyBm3nttfnaxvMa0zEdl
jl9zaKrD3NMPv1TswjIDf5h88rs7iVEaq5Q/OW8zv4cj3vxz9ZlqMN7m95WP
+FAz+ULN9bJIEftDf52xZ/0V6qrmKDKfhfnT5YaqQ5vvYrEi2BExJmJNFi/C
rRdTIrZEvL+5ZM3hay5f1zjXOjnCcoWN/17bDN7F3JPiz/2tLnMQm4tYvLxz
N2ewuYPNF2VuPHNKio/UXyEXerZq8puvVIQLffHAHjqQY5lScm5oXx7Uj317
7MBelU/vb5uZA1Y+gPiMGarhzMudFxPp2uM58RryV2dpJqYgXt54h74lY7jG
csVzujeZ097c9isWsQcvGthzixax18SwiGUxH8nGjWCwzb9hvEXd0Ryq+q8P
6cc+P35g3/ubDFeUksP68250EHURc/aam9Z8T2J3tHnMV2LOpyVK+c0L8Tzm
/3ItNGewuYPNx+Lab44V+dr79mN/HzKwj82pYW6NU6rBP5vPzd/GM6fupL1g
pheh/VHV4HXuLJL71Bwh5gpRB1IXMqYin9ucG+beEPNqvn/xPvY1B4e5ONyP
5Bo6xmi9vKO+q/5GjPEof6/D30Y0R+oMveBp/a1Gc+abO38/5jxfKRx2/RcH
92MvHzfwf5gzwdwJYu79PTs5BXIL5GSYj1q+gbmpbxrgZ98rkotYjoS/j7d/
P/b7EQP723wzYon0AZj/REyv2F5zXvn7kf7eor+FYs5G+fLiVcwVbw5Z+QQH
9GM/Hjnwv8hvXrkZnc7cf65nKzSTn9dc4er/PutiKMVSuh4810pOBOMZ/n6p
2DR9kPK/90EeVgrnXn+Da/5/a385eA/jef6WnTnpJuonfm6syv3o+YG9NH81
GLupi+QMOLYU7KC5A+S3jt9Ofl35Yf5mnL8dZx9/b8I13bXdfHjiSeSraWvp
5B3X766b2PwC1fw+hvmE/W0+c1aau9L8y/4W3hwD+05Ondw68+vvO9B/jTWZ
I9H75e9vqCv5mxz+Nof4fZ9dMfdyBe7qJ/+NsQBjLa7n37SSA1C+m/aCcxFT
L7ZejqhcUeNb5q74PzLpQV4=
            "]], Polygon3DBox[CompressedData["
1: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
D+7S96o=
            "]], 
           Polygon3DBox[{{2795, 2794, 3791, 2445, 2446, 3792}}]},
          Annotation[#, "Charting`Private`Tag$21679#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ktIlFEYh/HXZmoqm2wfFEKLNoYrQaqFW2sRFQXapoIgg1yUkVZuaydE
6SqCyDZBZmkFZTelu1ne0qa0ASWhRW2shYL9TsGc+T/nOZfv/c53yg817j5e
EhEPtF+ZiMQ1civoWx2xTv+x3Cifyi2yX26XL+ROOSbr5Yyc1RrwH9ksF+QF
uSQ7ZKY04oYsk73y2NqIPSsiBvD6Nf6WRVzMRozAaXUsqeOV8VH9/fK1NoZv
mfMGj+O38pN8uCqii5/Aj/BtPInfGR/UPuNu7j0u4Dt4CH/Bd/EH/BX3Wduj
P5XeHffiafwE38Pf8PecUtWasaao37nc2em3G6/ybsPcdW5R/W3cZq6fu8zN
clfyEa18D3eOG+U6uCauM50Lt2DNc76Ba+e6nMcc180d5M5zv63ZZe41bh93
On1Hroa7xNVy887+KF+vviKuw4fVPYJ34FJ81bxt+BlXISu5A9bn+A36g/b8
ifdyL+1dxt2UeXueNddnjB/Gz+B8Oh/cgtMnncHNWOlRcIZFfY+JSTyFRYz7
K+CV+COewKesyaX7hZuwXwzjk8CjYwifwNl0rjbchDPpnlp/P/vvKsURG1SX
/L/bfwF82G1S
        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwV0EcyRAEUheErZzYghyphjJYpOZRccmtlAUwMWIPMBqSpJSim0kCxA4bW
gM/gr/ufc+97Xa+rNrdnt9IiYg93+RGpgoil4ohl7OItO2LHfCyKWDGfzEs3
C2az3Mov8Cw3yi9mWWHEVknEIl9Cwr5UV2/fhAZ8oly3j2U3bW76+Q8m5Y/c
iAp+gBW53X6A33su6d1Tul+5EodYlTvcDPJ2+5CnkYYq3RHW+J7nh+2H5HR5
Bhmolo+R5O++eZhn8llkoUa+/f9ez67LnX5rRJfN55CDWnnE/sRMyV1uRnku
n0cevryjTneKFt7tZozn263K3777Snema5V7+Dh/4OvevWYWuL3Wn+sTci+f
4B32hXZJXZF5o9/4/2/lPv7K/wCjhDN1
        "]], 
       Line3DBox[{2750, 3669, 3706, 3992, 3670, 2912, 3504, 1540, 3149, 1232, 
        3505, 3990, 1541, 3150, 1233, 3813, 3506, 1481, 1542, 841, 3814, 3152,
         662, 3151, 2268}], Line3DBox[CompressedData["
1:eJwV0Lk2Q1EYhuFfaUoolZrEcAk6WhWl4ciJuZBCSckdiNkVIEEi7RG1ZV5L
reQSVJ4U7/qmvXexh9PKzFZXRCR46InYyUX8IePT/ohdvpKPKPMZSr0RDfqt
H9JP0GV5mz7hB6vypHMr9Bl7zl3Khb6IA1Qxh7azie3KVpQPcYR5PNqWbNe2
EfkYJ5jWLdCcd2u2Uf4UBX3NnUU+b6vbxvi6rmg74xMM2G5sd0i7I17kNdzK
r/QNVXd+0dSty+/YQEPOvDHIz3ozlVs4133oLui9/OXuvv1TV5bHOz3fQrPz
p7YS3cSUve2v/wFoVzhx
        "]], 
       Line3DBox[{2755, 3709, 3835, 2754, 3710, 3836, 2756, 1036, 2406, 
        1052}], Line3DBox[{1183, 241, 1593, 1936, 378, 1592, 366, 2072, 591, 
        240, 2559, 1302, 375, 1300, 239, 1820, 239}], 
       Line3DBox[CompressedData["
1:eJwVzrdKg3EUhvHjJNgCdtzcItguQLyIrC4qVtQkZg/qopujXoF3EDD2iCTW
WLGXO7H8HF7Oe57n/Pm+7vFMKl0TESNSqYtYaor4lrK+bP7Iqb5i/sqZXjXz
iYjtxog5GbKf44/6lr7K9Tbw9RHN2AV3gifxItbH7Zgt3CU3hrfqu1g/t2e2
2YfxK75d38cGuAPz1T4vPXyVf9LfZII7lEnJcu/Ygly7eTY/ZIo7kuA3/NMn
lpYbNy/ml2zia3zJ3bSUfPeW7+DWayMG7cd4p/0OL7jvcj+DjXKz/2+4e24R
z+hFyUrO7QP+BxRuOf4=
        "]], 
       Line3DBox[{2773, 3714, 3841, 2772, 3715, 3842, 2774, 3716, 3843, 2775, 
        3717, 3844, 2776, 3736, 3901, 3169, 2922, 2777, 2420, 3513, 1498, 
        2778, 3976, 1317, 3170, 1319, 3882, 2779, 1310, 3010, 741, 2439, 1081,
         743, 3011, 2425}], 
       Line3DBox[{2785, 3016, 3441, 1325, 3977, 2784, 1505, 3515, 2431, 2783, 
        2923, 3171, 3903, 3737, 2782, 1638, 3514, 3966, 3790, 2781, 1501, 
        3845, 3012, 744, 2780, 1071}], Line3DBox[CompressedData["
1:eJwV0Dsvw3EYxfHHJi71BlxiZukbkEjcKY3EZJB0oHXdLO4daze6vAM2s0gk
6lKLRIxU8Xd7CT4dTs73nPP8/mnanVubXm2IiFmqNkUkqYiB5ogX/IUHcQ1/
4yH8gX/wME5wBf/SZmvEiG6DP8rFtogLPN8S8cpHbdf0ZCvZ3nVVutEdutnC
JVvGVta9yQnV6E4+crON1+1j8m39t8iflLedettvG9cvyO36Tuqge92Zvce+
I0/IBTdXdNAYscSPKaNf5GWacXvuzQo+oUnbMr/U5WxzvMu3HvS7fI+mcIWe
bftueuv/jT7tXZH3yVn7H/4HGw07Rw==
        "]], Line3DBox[CompressedData["
1:eJwVzskuQ3EcxfGfDdUa1lh5EIlnEImdhdSWRAfDVmJ4BB7AG9C16r20Mawk
YkNLRKStmvY+d3Fyvr9zzv/mzq6sL6wNRcQS/eUjbsYitscjbnmzEHHN2+6j
XMSvvof7tEVdKk9GPE5E/Oiati1apZpsXneFv3WJbUqbtCtv8Av60p3YFmRF
2xnZNA3kqbuKS7ozm0v/k8ieZQ3+aXMqX9RXsu/JUps6n3Kf875NRV9yz9mW
eWLzxJfdx7oH3rPryF5oI3ubue5e19XtuPPuO/eHexQf4necwwf4DY/gfdzB
w3gPv+J/ML4+Cw==
        "]], Line3DBox[CompressedData["
1:eJwVzkk2Q1EYReFfE8EURNWSjgmwDEARJIpOGECiHIF6YRLqtp5RkEIUK4Mg
iaDne429zrln596X9EYpW+yKiAJ+eiLO+iNSAxEd/VOf74341b/0rP6nl/Um
Fpz3+zg00bJVbZepiEVZwaMt570h/sn+YruSB85Leg3j/LNt2FaWr7ZrOenu
OWb4uq3Ft1HibnDBzXJFvYIRrirf/PaBy3CHtpzzpr2WfB/bmONuZZ7bkvXk
u2i7tyvvsMztyFFvFOxj3REftiPnY6zo72gk/9N7Gfltn3DnHlPOq/yePs0P
cuu2tGzYT+Qp1vSO/Aef0j4P
        "]], Line3DBox[CompressedData["
1:eJwV0LsugwEYxvHXirYXYLIgBoZeSWvVpdhoddByCyijBLGK82EURtFLIOJU
ghug1ar4dfjneZ/D9+XLN5gvZgs9EZFDuzdiLRmRSEW03OvupPvX/eWe7Ivo
uHfd33jkc3jAbX/EpmzGfjgRscc36D590l/opnVDsln+BQe6Ef6QPvNj+rzd
FOb4Cl1AGTu6G9uCvI4jzxwjIy/TouxSX7cdkGVoRV6Tzeuu6IY8K5/Aou4O
W+4G3myWbZpYwSv/Q1vY1jeRtj/BKZZw3f1W77y3/cCqbRtVvPPj3X/n7qDE
/9Ezz43Sc/op+wcURkDm
        "]], Line3DBox[CompressedData["
1:eJwV0MkuQ2Ech+F/Q6Qx1QUgsRREm/RKurFiIVo7EjWLcANFa81NtMbiQrC1
QFQkxJjW08Wb3/Sd7+SckdnF3EIiIqbR6o446I9IpSKafJkf4KMn4hHPqOjS
uif+tjfiSJ6XJ/oiqvIYrdEX+x0dl6fsS/IrTnSnaPAZfZHOIIFBeZlm7WeY
c/c5zenf9C13hW6F39JfYMhW1W3yq/pteigP6/O0gDX9B4pJ75EvnXmX7+mk
O49139iV67jCDkZtBfc8OPuFPbnDuX36Kdf5kr2Trre/R3/tuTS9oT/tzn/s
sm/wfyjbknKF/sr/sMM3zw==
        "]], Line3DBox[CompressedData["
1:eJwVz7syQ2EUhuElJCQ7icQNRFyAIhl6wxWoSKFQKugjDnE+DWaYUWpdhKvQ
O9MpDDNmFA7PLt551/et//9n7/r80vRiT0TMoTeJOC9HVAcjMuZf/KEp93Eb
b1jGjK5RirgtRpzxHTf50v1Zu1Fzx7l7fZYfuKZfMb9jFTkM69Z4Hf1oyB88
5vwnT8oD/Ch3ucMbPKXP85O8mb7HW3ysL/iGPApyhhNsm7+wg5Yzz84n5nHf
eWW/oOvqcijJxRT7LJdxYr8rf2MPFd2puxN8g7p9lffT/+ADfknf4mt5xP7Q
/IMjDOle7S+88Q/lYi3K
        "]], Line3DBox[CompressedData["
1:eJwV0DlOgmEUheGLQ1BBQEAmNUrsrQTjBlyAjYWdMREsdA9qq4ICAomJQ+VO
3IStwy58/uLNuWf4wh+aJ5eHF6mIOEU+E5HJRmTRykfk+FsEf0fLuYjJcsQU
37I9ei/fpR37F/2PvCD7pa/8sTzl7slW8CYryvruYvLWPaNvYxYl2UR2ZPfg
vpI90gNZmf7xA3pNh7RqV0Fbv8rX3GeYS74P8+jqWr6xot+nBdlN8lvyD9sO
6qjq87SBd/T0abuRvMsPvK2519zn+ExH7NAFm3U61Nf1X+5tbzfoE7+oH9NN
fmTTcPf1JX4r+U/5JZspbfJjm2f8A/b/J38=
        "]], Line3DBox[CompressedData["
1:eJwVzjsvg3EYxuHHrIdI2iIopdRmrRXF7AN06NpobWISg+No7avVRELUd2J2
Pu6uDr/cz334v3lLjfZOayQi6lgejeimI7YzET26mopou/fQQpKNqNjU3FvY
RNVmhe6io3+iSza/8sQ3/ugYmrofWtR/00Wbe/0AF/yB/s59i7LuU/aFcfk5
7ckWUPH+UvZIz+STmJcfySbcp8M3KMkOZV16wl/RMj9HC/wxavyD78zKcnyB
H/BFPkGev+Fn3Gt0A+vIybP2H6j633c6bfNKO/wbzeAFeftnOqXf9+5a30d6
uJU19f/PMS7w
        "]], Line3DBox[CompressedData["
1:eJwV0LkuhGEYxfFXbUuIRKisiX0bwoxh7MsYROhU6kFEIzTuAaXGlhDLFZjS
WlK7DLvE7yv+Oec557xf8VWtrC+s5YUQNtGTH8J1YQjzRSHc0OGCEDJ0w31Y
HMIz7bZJy+b4GTpkM01j7n2bJxqzmZRdYQopm0d5n37JPYEumzF6iXEM2qzq
R6POdoR22vzJz/ltXU5e4f7FsOyHdtgM8WfYsnmwGZCnovf8IG23ueez+tmo
lyVt6vkO1KHNZkc/wy8ig5zdruyVb9XX0DRq0e99Mvo2v2dzR1tsyuQJvLl7
5dW0WX5qO80fyF5ok+yClrvj9v36BBrlx9F/053QUt034vwXbdDf6pa9O5J9
ykrwgaz8nVbiH4oBNps=
        "]], 
       Line3DBox[{1584, 1583, 3642, 1581, 3877, 2985, 668, 2986, 1271}], 
       Line3DBox[{1816, 237, 1817, 586, 2067, 350, 587, 2068, 352, 588, 2069, 
        354}], Line3DBox[{1292, 371, 1294, 238, 2555, 1296, 373, 1298}], 
       Line3DBox[{356, 589, 2310, 2142}], 
       Line3DBox[{2071, 590, 358, 2554, 1292}], Line3DBox[{2071, 356}], 
       Line3DBox[{845, 3154, 663, 3153, 3900, 849, 3156, 664, 3913, 3155, 853,
         3158, 665, 3914, 3157, 857, 3160, 2134}], 
       Line3DBox[{861, 3162, 3915, 667, 3161, 864, 3815, 2982, 1027, 2981, 
        1267, 3816, 2984, 1029, 2983, 2538}], Line3DBox[{861, 3159, 666}]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzz1LgmEUh/GTSKWDTUGOfYSCpvoAObSEL4Qo0VJS1NDSoN8h6GVsSWkp
hMylISy3wqmPEIEuBg7O/RwurvM/97nv8zyrB2e7p3MRsYPz+YhiOuJoIeKR
a/yTiSioh+rvxYhjTvAJ/zobpCKeUEQFJYz0u+7sqz+wYvaQs9znNhpL9nAN
l/Ym5SHfIqX+47F37vjKzDUmcktueqeFqfzAm3jG1myPu2tmX3xjR+7xuryn
vy1vqHP8rt/jTy47y6sHKODNjmW9ivrCf1S5zjd69+6/ookvc/8ylC3C
        "]], 
       Line3DBox[CompressedData["
1:eJwVzr1KAmAYxfEnpDKHAoOWBpUaC6KWFruAbHLQUQgc00BvoJKWPmiJoGgN
bDeIBqELaCrLGwiiIuhz7edw+J9znvd9nze3Xi/WhiKiRM2RiLuxiI3RiB+q
0X0y4gUfsI4J3MTn8YgeP0xv7mzpKtiaiNjm3/lX/DLfwUls4ffgPP6a7zq7
xzf4ffzDafO8fkaepRN/SskHZof0Ye8RZlIRp+bH/Nlgjz6rO+cX6YKWqOru
nDNt77blDs7LeX4By+Yr/JW+g7e4ihl9Fwt07Q9pucSXqStPyT3+kT5pWS7Y
/8RferePa/IN/w8S7DKP
        "]], Line3DBox[CompressedData["
1:eJwV0D0vQ2EYBuBH0qh2YGgnE7E0MUmMhIVBWoNBLNpEzCSif6B+gMEkPmZR
BtGEwVKDj6k2VX6ERbUYXGe4cj/v/b7vyTlnfGN7ZWsgItaoDka0MhEvdNMR
7aGIV9ZHIpZ0b+YOKT54J80XXYapONuT3xTd6csf8vzxy7I+R56C86O6vrnH
FbtU2WPH/oN8ZJ9nnqjpJ9w74jjhfU/lCavJnjPn5kNZl2f2N/WX5kndhazr
buQtDfOU/Tl57T8U5Zh1SX7SZNr6Xs47v2DumBueVc76R1Q40M/oZllMvlVX
4s76H/SKNU4=
        "]], Line3DBox[CompressedData["
1:eJwV0Dsvg2EYxvG7Kj2RvF3UIY1E0lEMRjVglUZiY6n6AAwSm0TEIEaCMNQh
YSDRjfgOnZgdEnajifi9wz//576u+3ny5h1bXV9cy0TEMjZzEc/FiBf85CPe
ChFTScQrz8ve+QM5fGFa98lF/OIPCVbkPfYzaCCLXgzoCpzHQjqjZbfCVd0I
75Yihnk0fdd5T1/iHVk/9+EsRZ5wGUe+dZAr2JcP8bH9DT7htv7Ke+O6S67J
7rmDW92FvQndObcxI6uaZ/kbj5g0P3HdnQM7p+ZD7nprST4nb3JNviVvOT/o
ts3XfIcbdP3jfzXMKvU=
        "]], Line3DBox[CompressedData["
1:eJwVzr0vg3EUxfFr0ZJgYWKpQYREiIh2MUhrsDGyaEeJl8VLk7IYMEhM/gUd
TDWR2DDwNyBEglq8JSIh8XmGk++559znd59MaWl6sSEiilRujLhpilhJRfzS
Kj22RrykI+p8HdewBdfxSffKV/hn37XjO3Yku7o3fof/wE78w67kbdzDaI7Y
bovI8Gm+G1NY02/KK7hs3sBduqIteZ+9Hnf78QB76ZAGzQM4hF/uV5OMajQq
G8EsfuuO+SP+BAs47O0J/NGdynLJrmzevXP5mPkCc7JLzPqvfd0Mn+dn8dpO
nqp2yrpbWVF3hyWco09+XL+gv+cn7T/glO5M/g8wmTc3
        "]], 
       Line3DBox[CompressedData["
1:eJwVzjkvhHEQB+DRuIoVCgpXltgVcZR2tyERGpUVjUoQjYTaSnwAxJaURKWg
0klUCgoSXwCFK3EkEhKN43mLyfObeWf+edOzy8WlioiYUaXKiJuaiJWqiB9V
Uq/VEau8Na/nExv4nIp4lNfkDTsvcqOc4mRdRJO8ab7OL7NW/rGNv3xjM7fY
bq/MFn1aHnKf1R/XRnSzw2zYbJu9+iz7uMMp8x52ud01G5D3mNHvs9Mb+eSG
BX7774z8LvfbOWTOzYJ3jpJ7s5NEOxMsmw/KRfnM3gfH9NPqXD7gBUd5zUs7
i24K3pnT36l5dWX+ybxvI77dy+NmDyy6PTX7B94sMsQ=
        "]], 
       Line3DBox[CompressedData["
1:eJwVzz0vQ2EYBuDH4mspJm3SxmGgtRkkPsYKgwmJCBFpWVnEIsJiIPUxiIUQ
BpvJhsRCrH4COpGwMIurw5X7PffznPfkJKWVieW6iFhgvT7itSnijb+GiO/G
iC/mUxHHzRHv+iobZp/ygy3nPTv77Dhv2/3V/zDtnZRsod28TbaSdj7gkIz9
Dvmkf+SGTXZrd1Nh1U7aXRnydnO6LCX9qS5Ljkvf75QJFbMZ2W2vh37vlXUF
5zwXZgV6ua39g9m9nTv6dGd21uS5TMye7Qx6HuCKIYbpMnsxG3Me5ZoT3ayc
o2q2KMsscWRWdOcI4741pZvkwfM/Qikwkg==
        "]], Line3DBox[CompressedData["
1:eJwVz0srhGEYxvF7kNNGTiuKEUUpJkuhLDDKxmosKZbE1kSWsmHFi1nKbsah
SGHnsPYZyNLhC/B7F//+Pdd1P/f7vNmltfnVTEQsolgb8VUf8Y2/uohfHm2K
+OHDxoj3hogPbOsS5z7dEa+gIC+jKFvgZVTLa7BvvoozuJBvYN3cFt/K7nCD
Hedm3tW18J5zG7eiHYl3HCOxr9O5I50xW+Aus93I6Xt4Up7lkq43fSsq7g3w
kK6fB/Fg/sTcI9/rc7IzDGMET/LndKc7E/yKF5zrxnAgH+c3d2c5n/4jyjjV
VXgTV7jENUryKd+cxpxdeZ7Bpx3/dx0xyA==
        "]], 
       Line3DBox[{1736, 1805, 2184, 2022, 2256, 2255, 3932, 1732, 1801, 2363, 
        2179, 2003, 2465, 2466, 3959, 2464, 1725, 1798, 1995, 3893, 1994, 
        1719, 1794, 3857, 1712, 1788, 3855, 1705, 1783, 3853, 1698, 1778, 
        3852, 1691, 3819, 1772, 3846, 1683, 1765, 3841, 1677, 1760, 3837, 
        1672, 1755, 3835, 1668, 1751, 3834, 1661, 1748, 3992, 2705, 2747, 
        2746, 1650, 1745, 2744, 2708, 1895, 2186, 2185, 1894}], 
       Line3DBox[{1737, 1647, 2117, 1156, 3657, 1527, 726, 2004, 819, 3483, 
        1146, 720, 1408, 3604, 1144, 1720, 1795, 1982, 3891, 1981, 1713, 1789,
         3856, 1706, 1784, 3854, 1699, 3824, 1779, 1692, 3820, 1773, 3847, 
        1684, 1766, 3842, 1678, 1761, 3838, 1673, 1756, 3836, 1669, 1752, 
        3951, 2395, 2394, 1662, 1540, 2048, 1010, 1475, 3637, 1009, 1229, 
        1209, 2496}], Line3DBox[CompressedData["
1:eJwVzjEvg2EYheHTNKE6IGFg9A8Mjb9gsWgXQ2Mw0BpqoiFBsNVgqonNpAs2
kxgMxCQxWiwmEgmDBVeHO/fznvO83/tNLa1VW4Ukc3gYSA7LSQfXQ8nzYDIx
ktzJy+a2vM7jsk3zFnZKyTYe5TU0dDPu3stOeIMr9tb7dl7Qz9q7cb7y3V9M
yy5lF+g5fw8nP3yGT/MXn+Ld/MEl+11+Q9F8xK/403f4BcveWkTT2wdoYAWT
9uvyMW/d8q7dffmxfI8L/mtV98Q1fRUt3Tz39KO6c+7iH2GTLGo=
        "]], 
       Line3DBox[CompressedData["
1:eJwVzrErhHEcx/Gv4u6QY8JisPoTDEqKFDdcBhl0ZDKQohuU5wauZDqDTIgy
3Ygkg8kiA7nBojDZLEqW83qGd5/f9/35fX/PM7i4WlxpiYgFPGYi8tmIentE
pSNiszsikfd8J7/rvIVLfaIrcXe6rExyEaMY52fNN3yrLHPDGOOvzRd8E0Xz
Gn/FnXnzFHX+D0e6W/OD72zIdZzzPyjolu0d2ztJM4X/xrRuyXygq9qtpfvc
jjzUf2HbeV+f9+aQrkvW+E+U7A6g350RXZ/c498wz/ciw7Whyr1iyr05vgfB
N2WFb2BSN2PO4QPvKPPPmNAVzL/+pWHvBU/4B+hANeQ=
        "]], 
       Line3DBox[CompressedData["
1:eJwV0D8oxHEYx/HHgLtzdZlMBouSTWKRk5QyEJ3JcFEWJ2TQjUy33OIoyaIo
k1GU6SbbLeqIwYLBZlGyeH2Hd5/f8/4839+/gbXtpa2OiCij1RVR6I6o5yJm
MxHFbMQkNgsRD7q87s58iwPu1dzkM3LffktOOTumK8p7XSdX1U1ghp833/Ah
d7l+blxOm6/5PyxyO9wIRvkr7gcLfIUbxiUucM7v8d9y3Xxi/1geocSf8l84
8z6ryesbsuYbDmVD957ukWZdRQ45tyHr/BvK9vqQ53pQ416wwg3a7ZU5Ppv+
C9/GHL+cPD7xgSr/mL7D9a9nPdt/Qhv/0vkyLg==
        "]], 
       Line3DBox[CompressedData["
1:eJwV0D0vQ2EYxvG7g/eIxCohEiISLFJdSRdbS4SFiEoIaY+3QWvTOI1FByGx
GCTEJiYfgA9gJsy+Qye/Dv9c9/O/nvuckzNaOlhOMhGxic/OiGZvxBUWuyN+
uyLmeyKqAxHPMuUuUNT/6AryWvdur86fI4897kOfs3OPM66GOfebuoIua36z
lzEPc4/OefML1zCnGOJn7WX5V3nnWdNcxVzGFGZ0T/LB3oJu17yDMUzqbuUJ
f2l321zCDT+OGpd4T1WeosN86O6ILnEuO1faiRYa/Jbc5zc8Zx0T7g/KVNev
q/uONedV9OGY/5Mrupy7S+3/hxZ/hG/+C/9BhS5N
        "]], 
       Line3DBox[CompressedData["
1:eJwV0DEvg2EUhuFjUJTEYJCYGGqRsojNUAykS1ORYJIiIaIf2qm1SdRGLKQ/
QGoSu62rBDM/QCLhB3RxfcOT+7zP/Z63zTdVScrVvojYkfdMxE024lrWBiP2
ByI+sDEa8TgU0TIX8BJLWOHHuVfnrt1le0vSkTdujCuYX7hzd5qyKNv6Et81
t71Tx5rMuruiz+OTnSu8c7eF8/wC94wdLkn/A1fFvMxxD3jrvRn9oflAcnLP
Deva9n7SXe9N6/p1p+YzadprSMY8yUXqnI+dTzCRnkxwe3ik302/gfyl30b/
ixfe3/KbRfubOCJ17hs3+HVc5crY09fkS/8p/0VzMFI=
        "]]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
QagWDz6Nn6lkIuBSjfNUYn0VzCiUNh4Mz0BnPBnqp5CGXlprf3THCLDNVFPN
9J9CWUmWF66xE8hxj0PNpnsUcrQcEundZnHbdZZ0q9gpnDpXtLhQ0gCbSYUs
kkEL2FjjGFAsO4ZGPePUSktN4Pq+XXaoZhFnI/myFyc7QepTD5taXR8kuYeu
0lN8T2IjyjzhVD9IG2XeUpbsBP1M94+dVIt4UKZKV/bICCTlv79fYN8GhNUw
h1dkN3ac726ie7EE/0weLppP18HT1zwDjCKVuMfIdueENgFCE6MsMofL4dra
WaXrmqUwxLVx5U48AVGX3c9c6cuFAgNvxvsKCZhef32XRlksFg423ju6QgB7
k//m9a5JrBw6+abv/iRuPmn28/g5Co9eNIQdN55Bmb+JBvLT06gPUgQrQwOw
cvo+rFuZQV3lua5PytOYGxDIma/QACNvFmxUbs6h1LWjFrzPJ/G7bGpDYHoz
LNO6d1gHzqPLxP3PZyLH8eAFMW7Wpha4JxMEd8UXcdV8VFdVrA5PP1zi6dEc
hYlToChFnsGdAUM2DSx9QG96Zb918wR88SYW7u7uhv+MR941EyQ4OepcccSg
HT5fZT5g0RsOFotWn8+LL8F3xjXZf6v98CtI2ejWHTcsz1HnzNT2wimaq3R1
FJ9KTBAyHBqYxOc7BHlfnZjEi4qssgJiY3DJ8lz0lMsMCikyOp1qnMYXhjob
T2kaYNbCS/Rk2gze0WQ5Fm81jZWzb3KZOJrASVUuIcl1BiMHhwc2AqeRqOao
iQxrgntCBcpbq1NoqHzxKB3PLI6Focva3ibYW5XoSG5sxlvbpX9rZy2hm51c
edHHDjjQN1Y/KhWNzzkd9w5tI1DkjfeaxKVW4Ne1G398JhfnjiWKsgCB0BHw
2UGhHhocKyWuqHhDgPPFJIdJfwyXqblaRfFr/Q6xBumaSdxvf3z027dJnN1e
5KSvNArsng9Mqg2nMbZdY68z1SyueUduaOjUQR6nxzupN1O4bYnPouTTLC7d
umYnLdUINUr3B0kWY7jnjp/pQvwCXhSf4WZ43ABn9tHkdU3m4GZrqFeJDoGe
Mk9UIs/XgljagrAe42uQpxcI4E4ncCZfKsx4sRxCuMrOqrmPoxkXn/cL2xlU
V2Twrjg8DNoJhr4vRieRilpu3fzuHF6/yONf3VwLHLEVXrbRkyDZcFSlX3MM
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
ih6GGts+NKSDwLbCSz8Z8VW5RprpDgEatm+dv+++NRt80s6+OTdWhobnfkft
aKXhi5NrYk99ywbWwMJ7H0RKkFX3ZGQvGx0n9uksZs/LAtbYJsGyXfaQcGC7
acboM1gctvykOGPflPjqPxsv/56Rmv9+8Vo/ELlMg3h9/uNx5fecV6H0o+Cz
k2rzOhQMvpbkXQMlAN9S3hl1huBz9dwl9S/9gM4hEmPMWFfR1S+Ix+ghTHuL
CYu7M34P/jEv/nNe/ZFdYkU6Xn6w5h0qGyf1wxXdRwZW1v1gzsr04PgQD47s
J6YHp2mkV2XN3kHM6ks+wv+XEWcaxfnfPVQMyZJsQ64sASgS92g9ZR8dpS1O
Sh84UQYCZh2VW+9/RXrlC1EWaTr+7VbNcntaCoYDr+F6XCEefLNrbxrjOlQ2
vVXI482DBP35T4viG3E+i+6V70LFLHVbRi6WDLerH4Q3LajHfWfuHPBcTcN9
PGwnXdalgN1F9onvL2pxnfFquh8jjpZTmnt0JTAF7nM/O/Kd3Rt26vn7Jj0L
g1fu2WxejOsw4TWpVJBAxdO+QtI1b/Px6NbA0u9i9TBM5sKG9ZlzYe/JXFgK
8YA3JjE94OXEAz62OsG2f98QetzSTM636EH5Be2HHGxK4VrGIoMLkSPoxc8a
dX1tPdomrjobpdAEB759Wayk1YHyT8+coHqO4IZfWnb9Pwtg+gBHc5tsMbIr
rexNzqbh9oce5fzJReBN/CaixG9yiPhN2jZP+1zaNID1B1+gw1YK3t+/pFPE
tARkdjuLuWkOYey3ssMfpRnx4aGps2Ory6Aqnvd1f+ko2qq9zli+OAjSLu06
olvZCoKH9nCWc9HwwI+OCu/NSeC3wvsgbbIOLq6+ufkoGw0jxM8qrNYsgCJd
acWXi2qhPFRfY/ZbMRqZrnI5EUqDhNIjK0bFSuDFr0+q3hEFEPlWLiTwKB2e
n7zTWhecCSPXnZbpqnxF3mKltReygjCttVSHf5wO2XpMvrqEyVMJ/1+PSS6Z
U/tDPCZXn5T4brvdj3KzIXrKFAqOgzydfWkJXCP8JOFXCF+60VW/iLHv658Z
rPM+Q8FYD8+NySolwEL4HcIjCH/3etjsnOogflTkfyD8qBfnj0eWeH4rh2DC
nQnPIvzdYtsaU88hXN+r+3mXXzf6iksLsJdVgD3h2wj/Svj+Y+9A+/AI3jDt
1FKTLsIMPapgw8VO2ET4LTMm7yI8Yyeckqf1o55zm1nJqiZ4eldmk2l5D+gS
3uTC5CaEVzrTh7XX10PlrQ6HcvoofO2yytmiVw2WLkz+jfBPhI+psXE/aPwI
i0dMPosfpkIh29Txv5PNkKrE5GyExxO+tepD3JZHL9A1IizdMOgVLr06PfGI
sS4J+t7ccFPfAdkPGm1OyfNCS7b4SyqM9VmuYs8Kx6JO9N9ts7fKoQOfsr1d
c+TAAPzE6WkRs3500DOckmiioBnfqKPCohL4Uya28nNgP46d4K1Isaag9g2R
jqqeUtBKTZyTOkvB5oCVn3Y59mPAaJSlzflKUIhcZdVQ0Y/WUdtd03ZQkEN1
uGJuohyK1y3NtHzK+P7uc0Vdez+Iu+oNKopOFcPcTP7V16Y9WHvhocMTjSHc
fM8ptDGgGH4+OtnpV5OHd7rGm96V0DCtih7W96MUZq+cuyZoEQVvJiOvR2rR
cUfkmoObLYvgg8DjgvKy55jfdXLM/zkdl32XElGuKgB5tKu8FBKDv7kXlyd6
0LG2VOC6/3wOtMoXrpjLj8KUI21W0t501L4safyQkgPnDK/tchUxhGEhRYHX
2Q744U9dKjCuZ++rFWXWYRSs/eFQeep+P7YYzYvtSi+D7fP6fAE/+7Bf82xW
+0w/4iS9JkemAljevXU0ZORBj2b5DgqF9+G+UdncnctqIDS29LSW9SDGn73y
uvRYPd7dtiW+yKcbll56sPRqdCnSZqxtYku6UXcg1cUjeggiv742o/DWYM2t
/ITVnp2oF7yp0OTcMHCt/JOsWBaGqefv0RfUUJFjrCkj/W8D8InYiVk5VKL3
pPRLyydU/FL5c7XVuVq4Uj+/h6e5G9sCUuQjQobQjK30ppxlKew7Y20p2ZmM
qe4pD/K+vMG2JfJdGU100JI8+kO4MwQm6sQv7o2yRcpOL9a3jH2cO6TfDFsZ
9/9ua8/elxcg9GpfUId+PyTyczpMtDTh5K1YSVrCY2QstjvqnlPBNorTZ/oE
Dd/sbmffGJSEphbqo6UVtcB7odhh7OYoFjvTGo++9MAfHzjfnjdtB54fTK/H
WeL1WEu8Hg+dwnRMLH3h687k21NaNPD8e+SS0t46EH8+PcUt/A7EvNdbrW6i
QU+OgEjVXBWcObNKb0HBIxgx07Bx4aKDduqcmYl4BYRue2Q7zuYDtqrN986p
00Gecnj69kQxTN4+I8Z/2wN6fL/++G5Mh/quO4t9zQqBJXxSfK+4J/qy6mwf
Xk+HzZ0ZS1suVsAhIx3J4EsPwV7OVjONhQ5dSWOfTIIqoZ9rzzP3lkLkifpl
u4uxDpvaN2svYvxeZGOnFjafjcMen+iy2jV0yJPRC+JfXw4LGrk2mZv1oMR9
4UlDjSHYUxgIF98XQ8vsHTdD6UZsWR11RJadCtpq61ZGVpYAddvsnTf073hJ
LuT2lrxRTC27NzIR2QoxBylZ96V98Urdoa6iD1QsPZD6+uLhJjA9fHOvn44n
HrrUrPQuj4pPVZ2/sxg3wp0mK81btj4oo7k8/c4dGu6W3V77p6YWbisUHIVn
n5CeyVfD95aGl48o3p+brwEvfapf/nFvdA0pcbo7QkOx2YCbJnerIEh8sOng
ifeYv/Oond9vGhYtOXvefKwSlhfNnPlZFI3s3ryc8XHDaFOhMPbdthv+P7Le
OqrK9vkeNjGxMBAELARBUAERMEZpCUVUShFFUVBRkJJQUAkppRERKUHp7hi6
u7v7FIqSiu951rnXb63v5/13LxbnXudc9zV7ZvbsYU7J+LhqVQ/Kf8qZs6K/
7y68kboDF7ohpOOv15+oYTz/lkMt2nwCPZUln36gVcAVjbmAzMoOlBQeeHdA
h4KXLK/MnBBKh3shXFLyFkrgl75eSjrbA/uY398ZX6bBJ56QxlWCo6gmecny
9Pe3KHCLKUnvzzhkpG9IGjOk84rfnmOb06rRIvPxtuvzLXBpUHrQw8IG2UaH
A9auIoNg00f2vJk+OCfe3aXa0oT3xFhEO36Q4LOE/ulj3R1AaZrb4cQ8hZUt
23MELfvB4LVElkZRMzTpfWG9rkjFz6UPAyJtqjDmxrUT0QH1kNz+k0m0ZgT7
ltSNSh+MQ1LlzePc1lWQv4GRF5wk8oL49Yy84ACxh1SL8AfzJ/zBEszC1Be0
m1DwxzSH8kYy1DFrttmXdgAPkUfMeTHyiCAijxAWbRtWuEfCIyx6imbenTC4
UUZoYVUrvCxxujl0dRL1BPdTvPmHQNnkxtQW5loIU2TkBeFEXrCWyAu8yLNR
n4QGMBW9jr3lJgEnK+3T5cFiMI02zjzGkYllOtK3FL82YbuyjXyKORXKx/iX
w4ffA1dl2jctrgyslujx9OmlQZA/m+5OHMAHY1XZNkL076PyaNvC1SE4S+sT
EVCrx2BBrjI/xUkcXiCbyM8NQr+HRsJj3xFUmBmfOO0zjg4Rz6x+h1VBmGpA
yteTI8i76d6Cs8oYGlQUSs5iK3z+tGo7s9owznUPVMl2TGD5PxafYXIZ9P4b
2TLfMYhv7ia+83w0iYMz+wQUO+tg3jYkd2/eEBoofVpZK0H/3EHSp2/sFRDd
xvAl2EL4EgRWMXwJdOb2TvI5DmKh1UtJncQJ9N19UpsjqwVc49lMzlt54ymb
VdNme1zx2pqirbX0OJt/2VD31NJnyG1OkWO7Egh7vp9PraXnjyYj7v+OF/eh
kv7dk59Fh7BBTda/SWMU9uusqOqJHsdssbdzZ6KH8ZYrj9K4RyO83yR41NFi
DB1TTLxP9w/iHt+V8XkyPcAiH3pX7+4ERm6wqLE3HMYR87igncM1EK2QaI52
ZEwJel77c6wOP/5ZLygbSee3LPkNB1TIqO6/onbifjsWrF4JibZNsI3Yk9JA
7EnZRuxJEbobmC30bgpvuhgM/BHLwFevvp7l/jYITMcPPSl8REJVe6ur1hCP
wXW/LUPvD0DYEcNDVo8aIc8+243vKQUFwww193E0wbqdV/NqNnvCyWDuLztK
7IDr0+5lP/p7SuH5G5cn7QSmSRHc0qvNYZ+biJYWPc5SRz3z9s34grjhhrIN
Vs7g8nZbpzX9+4wg+Opgxf/lq7wTrZ6WpF5MKnyadvVwD46ryG844zIBb17f
Nr7ycgzLLTZc895D5ymkqqOj+xth0rZaeg89Xt/y3KNb5TiMXTpG+8vde/4f
X5Um+Op3gq9uGnU/JJBCQscF57yCFx34nu+o0pFE+u/eejj1pe84bl0U41qx
cRibf+WIiTq2wDMC5yHw3wReJs7FqrtnEv9FdatxpwyAU7fKkde2rZBVu8bW
YQ8Vxfabb1iztQRYFza0aKo2gzTBP4efM/jnIsE/3bJeudUY9+DJBPHZXjUS
0Ji6T8yfbQSvotCG/rA+/FR744F2xhQsXHBs/Urnk7wEL33hyeClIgQvFWQJ
zqLVZsMUR2iqkAMN3rbaee91KwTF/bqsTmLF4EiqpNoY0EDRZFDzzqF8mOhI
YImtboBigUKh83JUWF/mzxJ0pgIaLzF4KRC8tGgDg5e6hv1g3/fGARZVD3Cq
5tpCpuPcfeX/6vPhDNzx+v/Fm1Ymv6MJXsS+h0sOsX76yKVYKfXfPhTbjx/6
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
8M/hK7dUKD/TjUktF7PnB0hgq93muvlGPUxlyZqlDdbhtJtsZLkKFQqD3T+0
TleBNOGrk7fM8NVxJ3x1Npu1BLg9LgH/of2dMeo0CNhzZueCL8IZYm43h5jb
/UrM7b40eHTs9MZyCOzScLOTokHZ6M0rygp5MEg85wXiOTWI52Qn/L2/r2P4
e38i/L39y76fQDkSWisOKhywb0aZuNKyOv5ukCGeM5J4Tg/iOU/z244yyZDx
2vwMr6hEA55Zn3/+z+lOUIi5rbVrhoRs3U0+NVvfoWToRtmtvP0gqpAkFZva
gk+HLjuKlVCw2PdMj++JMrBdeLLzaGAj/sy67MwrOwnRe7b/qXGh87nVv555
5jSA6cDqHZdPU8DjldV52sYWiJnVHI+2qkHrc6aJu+j5Wui/WxvPFfbB5hiG
73co4fv9cBPD9ztr6+R6z1PJGHFKdHWwTCp+Zx1MMmukgSnRB5Qg+n1qRL8v
hPADNyD8wFUJP/AoJ+lsjk1DmKCYf0zCfRK1f75+1LpcBapkflVaSj9mxdxd
L1k1hays58K6YmphWP2h6q/Nbbj9j/AX/7cU1JpOim16UAYv4sn3RI2bcDng
V8nbLVQU2fYoub2rHPYIHi+0di6FpEhT6VucVDT9aHo9DZtAiO18mrV9C5Tb
vBuV+U1G+9DtUrUTjXCEU3+v3MZ82J2mf9x+Aw0LClt4KpSrQZjoA1L/pz+Y
e3ObXpZgBFr+WS667kJDd/GYDTd+l4DmMWdBXJeGo1uSDv+k42tirCtim4rA
ftTJu+VFCMYduiyWT89rjsu8vTx+vRjaHGS1R5RJGJpax3IzuR2TArKT4+za
IbqyX331JgrOa91NuPepCrMa/6xq1miH2o5dmQ9yyRgkM87pW9OElzKmc5Tn
WuDJ8RUj+7aR8WhWsiDnNfrnFfb0tN/shd9VuypUash4KaZQ7Hl9Mqwpk7xl
8robhB8y/MM5njH8w0cI/3CdiztMdgkm4qRwbNFzIRL+PKZXZ5I3AKktTW02
Ncm4cu2qVKEkEh7kCugKz+oH/4bS+0be2egrmT5Vrz6JBusyNw9fGIa1ZwRl
tByScEOrKre8OQlFTB1WJMkNwJfJCtvPa2sx5FjquphxKhzNPR3fzlkAbRE/
at7cbUDJDR2aNvS8Mu9eQETWhSKwUPlBimFtgyGvbUffGpPxw1sPPCrXDN8J
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
Kp71lS1nwtA8N7z0/iwNjA9xpH7tDME/rWEuyl98cHp3qt/YAg2KdRZsh0ST
sWqw+dDkqRzYc5tTJz2XBq+I/Ho4iJFf3zBj5Ndbv3erSkX64qicqM0GO3+s
dfWpXvWHBoqXFzZE2PXjRZOYUNE7JDwV6Tbv7F0CjYtTVfe5B7DwjKWxwQ0S
Ot6VynXeXQDdnRa/mR95ouZjWotClxc6c289bfifT6Ph1znhQhdMio8OMOJy
w10pXApOyzQoUq+IFQh2Q8cViiIV194jzTbstDIdD9J9ulaz/AmEcUgH3283
Rvn+jXz99N9x5SfJbJ4xJjzVJaLFNGWMLtxV0yQ6fn1t+U4vKSqGW+22WqJ4
wF2lHaulS1qAz2DbmOgFU3w5u/2IG7sFesj1LJfQ/156xRZ76/RAdHmhJ/L6
JQ1un8xa7f2yDJLqEmQFD9diz8ukSac6Kj6sD82zSS0CqtL2jGe/W1GZWzL2
Qz8FW1nmKL0+2TA5ul1EXNQfxFV2Fd2VrkUPELVrOkyDkhM5wlsTp9B3Si91
Pf174ly9nXdzQA0olDP0oouEXpSV0Iv2EnrRXkIveo7Qi/pnMfLl1US+fL2H
kS/nGt0Ov/kqAT/XW68I1EvA93ecfDYO0kDGJvm6BFcfsghE9PS/nYJK161f
NjxshjxCl2JC6FK8nzF0Kfn4T829YxhlrtzM8xIbRlsR/pI73ANwX9I4U5Br
DK/s8agLrh7FlbtW3TIZqAP53AvraH5j2OBvax7mP4o/aUX3OTyqQfO2yuYt
ArWY/Wjp9dcn9Pv7sMXyPJ0fSj5R5jczH8VHooeLNEvH0DTC5UZlRRUcGlTj
tUlJQo+9rbpeymSsTNihoPGuFx6Lpy1f6qbiMzVWY87VhTB9R08p5EYt9POm
6HHe94MbhnlLRYcDYaO0v+3RJRpsJ+Z0uol5+UViXj7yFO/W97s70OpQ/p6/
Bygo5RV92eRvKez5mm/F/3ACU85ble4fH8KnLp5yjv0N4FpE9fnTOYLfGnr1
ddvG8PGZ662xJg3wzPHZllSXUVxcmFPqbhtFpZSyoqdiTZBAT1+uKX9G7nSr
E4ltVPww1//twXIDDFj/PLbSxh0Sp9a27RCnwQdd4/VNC9Uwd//ugRN1H2Hi
hoPZsg4N9rGu6Uhaqvh/9Sg+oh4VT9Sj/hD6rkgBhr5rnNB3jdY1rq+/3YP2
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
lZdthrgexszmtf2QYPX2zVRJ4fef4FHSG7dssPit6R3DqgpEURe8GacLrou5
D1r8FUxuDbwf+jTxFsm6utDwnvD/cBHO+fHj5vy8FOa/SWuvkdHp28xlngeQ
skSxpyHC51/LP8VZSJ8CZZGpasX+J0mK13Xr/97zccri4V6pJ4lM5+sSbp4L
yTplkdwifP5j/qzB+XMA58+4NXTeG5hP5733oXTe81rZFMoqEn7/eml3rrDn
ktIU1w7XrxVwQDvTckswh9SELzRTiOKSTbsHbxSyKiD4tXfdLmkOeRw2a4/e
CS7RGSm2T4+ug/09Q262uY3k8p63XuaXCJH32ybbPYkP9kuKeq484ZHbSW0G
IQvZREOulHensQqY+P40wfenO74/Gy7IObLrXpMFU1O1Svr7ib+bo4zhrly4
ge/Venyv7sD3alqiOSdKk0tWy1hNVl7MJVZ12g4mjq+gBee9YVU6763Gee9v
sUMmofZ88nj/vM6ekOMkXCnoRLx4IygYGQVbmXKJN3/CGplqDjFQUHRLuV8J
W9Wd5/ADuOSXoZUN7XkcIuuaoet9sBy24/7lLO5f7uL+JU2pqDRydzXIlE1q
cj/SD3pDT8ye6zRCDO4jpuM+YgT3EWEF4dyDhhyydT3r19kFXHJlUfq0v/dW
wVWnW1yeC4+UBx06eOE8mzTyvXP6kqogddz8HIrzs4GEcZJnAhP2VF79OsNO
qId1+H5z88pgt9UwQ+poArnefCii2/O/vNyWE3Glb+EIk+Y2wzG3KfEnzW1+
wjs7lSP0zs4UvLOjJvp3/AQnHln6WStlXxQbRnTU3C5kVoLIE9pPTMd+YuJ8
2k98gPm9yZjf68b8Hqi+/3CslUNuS7zQvKzCJe9c/D9WaFVDWr7nt+TLnSS2
xMVUxZFNrGsqlPcrfwCRpVTPer37Wc/WNi1bN6WLSyIXK0SbqnJIr7FDauv0
KtDTU0x13cwlvzu7ql2axSELlqk/hR310BA212d3ZBjoMT5KlGwNgYVexwuf
Cj+n2UEpIws+cMk6p10aplvZZJKKIExjsB4OZyTyelddhSs6vh33bAMhoO0w
iRB+Hutx/6WH+6883H/FjssV+2Ou2BTnjVCcNyQe0HljI86fh8fNnzabad9K
CvtWRypp32rzB9ozisaekc8+2jO6Un1Z/LvvPUg7kXzu2lk2eWu9qyY5uAvy
9qhIp4xFgnJ2/hT9onIy17ddw8VIABfO03tVTXivah3eq5ood9Huyape8k9Z
6CGWyAeyf9pZ+VdJ1RCIukYddY0+6prBprxh3js++Xdf+0KdDBbEOtq03Txc
CQlNtC+zB/syXxbTvsyPOyw+2JdkYl/SKIXrqRDfRZpZugaLNnaSbY+GPBff
qAAX1JWjqCtXoq40wnslL/FeSQfeKylELpAMcoEKkQuUuIvyEyKQn6DMpfwE
lg/l4RiLUx5OMvJwJo21n0t/lAnRTN7ylg42eb+paqnR3C4QOW2SNPFbPgQZ
9V1T1+QQP5OH9ZezePCojXJm2pAz44icGSP0kTQwp8HFnEY18jOtkZ/phfzM
ySPUL4pBv4iFflHaR9r3N8O+/w0H2vePM+t6bjuRSxglC/7cINSXawOZc+/L
1YIEchFjxnERtyKXPh659BuRS2+DOlcfdW4x6lxO3OzAaZ1sUrrGYiXTmwen
AiJj5XtKQRb7Tdux36SE/SZ/5K7/gtz1QOSu1yoBY9XYM5IrwppRJ5NHPLKu
PpO+K4Bu9Fti0G8h2ANq0lyiq7atl7Tk5LFzP5YQBX5CeI59G3gjb7ACeYNx
P3iDqHMTUOdqRVGde3dcn4KBfYqAcfuCHtwXXOyNUcmyjwDFtlHJPkM+/Hv8
jIjdQ+H3AurZFahnG1HPJi2mvTln7M0VF9He3BTcI9jjHuEi7hFkxunZTahn
f/S5clDv+2Kfa9ktvxRP13wSFFljOINRRO7v+3yh8rgARJEL2oBcUDnkglpj
36pkXN8qGf2rFehfpaJ/dV760f48/jvySiXb0s+ij6jI+JjJqFXBevSLot2p
XzQduS65kR7nZoZ+gNyLA3Xiq9nA/aush32tE8pQdx9G3f0Sdfck5IkNIE9M
mkF5YhbDtCeiiD0R7UzaEzFslElrMXpKWIX7zi7dWQyQsih84hEBSGLu6yHm
vsYw98XQWa/SI9ZJHk/yWWlb30WiGC+klFUrQF2Ge4AZmQ7td4ZP6gt/P9YG
Nc25pm3Axdz+P5jbz8bc/ukzNiVOe7ikNaihTrqdA/q2Eauu2FbAIbxTFo13
yjTwTlnc6L3ZckZ8wlCJHH0iXQKVUo6zUv3qoDc2f0L21jjitKG6dqA5iXQH
uT41/CyASszr6mJetwHzuk+RM3NNkXJmGpEzI8eh/sw89GdGONSfGcD7OCWR
9D5OJ97HOcarDy0T6ycavOLyQtG3sGzPonmZl8rgHOZRfTGPKoF5VBbmS00x
X5qM+dJavGc0G+8ZReA9o3r0B+TQH0hEf2D5y6Nn5BV7iMf2+QnBIuWEaVZt
kby3A0KPJQn6dUqIPOumU90NHhRIVBY58NmwBvsRatiPGMJ+hJqAcsXNkCuu
iFzxQMwlpmAuMQlziVPRF12OvqhOOvVFLyGn2hI51R7IqYa0J6c1nTNAzrFd
w8amk/yptUnkxoFu4AqaBrJVeKS6+NRoXyqbtF5stuX41oCO1DFD+XNlRETx
fJ/xoT5IOuhrHiVoBrFYesdcHe+Yj6jTO+a9mHMAzDlUYM7hG+aaBJhreoC5
JiXMF2Vivugm5oviyemTj6f2kBLtAxtXtZSCiexq+yVRHWCHXNNfkWsqjlzT
/Q9onucQ5nmSZ9A8DwN9jEr0MfTQx/h/OYo1X2n+4QzmH85g/mH8HlwL9+Bz
Gi/f8Q8Mh+dOckt2bewgdjmnlLQ+98B6ix7nVm8e6YibsKXbkE0G/H/PeqxZ
A8Ghjqr8uHRiLUjV2tySTh7quGdcF+rTH/eIh/EesSXui0+iXzQV/SJd9ItW
4z7RBH0YM/RhXBpW7BVf0gi9lbXdY7FvIHpEzHDn8j5QkP7Zr1uHfl0G5oQn
F9CcsA3mhP8HCdLMnA==
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{446.45556596540627`, 254.7763439988206},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{0, 1}, {2, 3}, {-0.14092482975433399`, 2.528187053858613}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-1.2743777435283168`, -2.9417204748129713`, 1.0827012583653046`},
  ViewVertical->{0.1271905609831377, 0.2936013904410507, 
   0.947428511671396}]], "Output",
 CellChangeTimes->{3.844372334872486*^9},
 CellLabel->
  "Out[356]=",ExpressionUUID->"dd3ec398-0704-42a3-a71b-f2cc19bb25ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Animate", "[", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Evaluate", "[", " ", 
       RowBox[{"\[CapitalPi]", "[", 
        RowBox[{"t", ",", "r"}], "]"}], "]"}], " ", "/.", " ", "sol"}], " ", 
     ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "2", ",", "3"}], "}"}]}], " ", "]"}], " ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.844374045807447*^9, 3.8443740474419327`*^9}},
 CellLabel->
  "In[429]:=",ExpressionUUID->"3d2eda38-f929-4a5e-b75b-4ba2b0f862b2"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0.33637094497680664`, Typeset`show$$ =
     True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 1}}, Typeset`size$$ = {360., {105., 109.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        ReplaceAll[
         Evaluate[
          $CellContext`\[CapitalPi][$CellContext`t$$, $CellContext`r]], \
$CellContext`sol], {$CellContext`r, 2, 3}], 
      "Specifications" :> {{$CellContext`t$$, 0, 1, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {141., 147.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.844374048162888*^9},
 CellLabel->
  "Out[429]=",ExpressionUUID->"f045e66e-877d-461f-bcc9-d0f8eed4a5f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Construction of Stress Energy Tensor For Massless Noninteracting Real Scalar \
Field and derivation of equation 40 \
\>", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.830254437261305*^9, 3.830254464516058*^9}, {
  3.844524854615192*^9, 
  3.844524859639415*^9}},ExpressionUUID->"1fda6e40-0e19-497b-8e2c-\
dca9ea0dae8c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "Tpart1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tpart1", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"TensorValues", "[", 
    RowBox[{"MergeTensors", "[", 
     RowBox[{
      RowBox[{"CovariantD", "[", 
       RowBox[{"phi", ",", 
        RowBox[{"-", "\[Alpha]"}]}], "]"}], 
      RowBox[{"CovariantD", "[", 
       RowBox[{"phi", ",", 
        RowBox[{"-", "\[Beta]"}]}], "]"}]}], "]"}], "]"}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tpart1", " ", "//", " ", "MatrixForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.8302540000845547`*^9, 3.830254040380745*^9}, 
   3.8302544440774393`*^9, {3.844523871575685*^9, 3.844523910649652*^9}, {
   3.8445241372516813`*^9, 3.844524153844055*^9}},
 CellLabel->
  "In[211]:=",ExpressionUUID->"95823b80-21e7-401a-b04c-8125585841c1"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Phi]", "(", 
            RowBox[{"t", ",", "r"}], ")"}]}], 
          RowBox[{"\[PartialD]", "t"}],
          MultilineFunction->None], ")"}], "2"], 
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Phi]", "(", 
           RowBox[{"t", ",", "r"}], ")"}]}], 
         RowBox[{"\[PartialD]", "r"}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Phi]", "(", 
           RowBox[{"t", ",", "r"}], ")"}]}], 
         RowBox[{"\[PartialD]", "t"}],
         MultilineFunction->None]}], "0", "0"},
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Phi]", "(", 
           RowBox[{"t", ",", "r"}], ")"}]}], 
         RowBox[{"\[PartialD]", "r"}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Phi]", "(", 
           RowBox[{"t", ",", "r"}], ")"}]}], 
         RowBox[{"\[PartialD]", "t"}],
         MultilineFunction->None]}], 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Phi]", "(", 
            RowBox[{"t", ",", "r"}], ")"}]}], 
          RowBox[{"\[PartialD]", "r"}],
          MultilineFunction->None], ")"}], "2"], "0", "0"},
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.830254003821471*^9, 3.830254040829453*^9}, 
   3.830254444078083*^9, 3.844523911271727*^9, 3.844524154171219*^9},
 CellLabel->
  "Out[213]//TraditionalForm=",ExpressionUUID->"f25cfc94-b441-468b-915f-\
a72ef5101d8d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Yes", ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"I", " ", "know"}], "..."}], " ", "the", " ", "indices", 
          " ", "should", " ", "be", " ", "a", " ", "and", " ", "b", " ", 
          "not", " ", "e", " ", "and", " ", "f"}], "..."}], " ", "but", " ", 
        RowBox[{"shouldn", "'"}], "t", " ", "matter", " ", "if", " ", "doing",
         " ", "tensor", " ", "values"}], "..."}], ".", " ", 
      RowBox[{"there", "'"}]}], "s", " ", "a", " ", "clash", " ", "of", " ", 
     "indices"}]}], " ", "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "Tpart2", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tpart2", " ", "=", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "/", "2"}], ")"}], "*", 
          RowBox[{"TensorValues", "[", 
           RowBox[{"MergeTensors", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"tensorList", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{
               RowBox[{"-", "\[Gamma]"}], ",", 
               RowBox[{"-", "\[Delta]"}]}], "]"}], 
             RowBox[{"CovariantD", "[", 
              RowBox[{"phi", ",", "\[Mu]"}], "]"}], 
             RowBox[{"CovariantD", "[", 
              RowBox[{"phi", ",", 
               RowBox[{"-", "\[Mu]"}]}], "]"}]}], "]"}], "]"}]}], " ", "//", 
         " ", "Expand"}], " ", "//", " ", "Simplify"}], "  ", "//", " ", 
       "Expand"}], " ", "//", " ", "Apart"}]}], "   ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tpart2", "//", " ", "MatrixForm"}], " ", "//", " ", 
    "pdConv"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.830254064548998*^9, 3.830254101996511*^9}, {
  3.8302541481840553`*^9, 3.830254174851915*^9}, {3.8302542120156813`*^9, 
  3.830254275652812*^9}, {3.8302543167579727`*^9, 3.830254326734768*^9}, {
  3.830254414284338*^9, 3.830254444078596*^9}, {3.8445239288923063`*^9, 
  3.844523940252282*^9}, {3.844524035848352*^9, 3.844524081108193*^9}, {
  3.844524114742633*^9, 3.8445241197480583`*^9}, {3.844524160083646*^9, 
  3.844524171696702*^9}},
 CellLabel->
  "In[214]:=",ExpressionUUID->"11839d4b-dfdc-4cbc-a215-f74a12740975"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "(", "r", ")"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"\[Beta]", "(", "r", ")"}], "2"]}], "-", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Phi]", "(", 
               RowBox[{"t", ",", "r"}], ")"}]}], 
             RowBox[{"\[PartialD]", "t"}],
             MultilineFunction->None], ")"}], "2"]}], 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}]], "-", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "(", "r", ")"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"\[Beta]", "(", "r", ")"}], "2"]}], "-", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}], ")"}], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Phi]", "(", 
             RowBox[{"t", ",", "r"}], ")"}]}], 
           RowBox[{"\[PartialD]", "r"}],
           MultilineFunction->None], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Phi]", "(", 
             RowBox[{"t", ",", "r"}], ")"}]}], 
           RowBox[{"\[PartialD]", "t"}],
           MultilineFunction->None]}], 
         SuperscriptBox[
          RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox[
               RowBox[{"a", "(", "r", ")"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"\[Beta]", "(", "r", ")"}], "2"]}], "-", 
             SuperscriptBox[
              RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}], ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Phi]", "(", 
               RowBox[{"t", ",", "r"}], ")"}]}], 
             RowBox[{"\[PartialD]", "r"}],
             MultilineFunction->None], ")"}], "2"]}], 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"a", "(", "r", ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}]]}], 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "(", "r", ")"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"\[Beta]", "(", "r", ")"}], "2"]}], "-", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Phi]", "(", 
               RowBox[{"t", ",", "r"}], ")"}]}], 
             RowBox[{"\[PartialD]", "r"}],
             MultilineFunction->None], ")"}], "2"]}], 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}]], "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"a", "(", "r", ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Phi]", "(", 
             RowBox[{"t", ",", "r"}], ")"}]}], 
           RowBox[{"\[PartialD]", "t"}],
           MultilineFunction->None], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Phi]", "(", 
             RowBox[{"t", ",", "r"}], ")"}]}], 
           RowBox[{"\[PartialD]", "r"}],
           MultilineFunction->None]}], 
         SuperscriptBox[
          RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"a", "(", "r", ")"}], "2"], " ", 
          RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Phi]", "(", 
               RowBox[{"t", ",", "r"}], ")"}]}], 
             RowBox[{"\[PartialD]", "t"}],
             MultilineFunction->None], ")"}], "2"]}], 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}]]}], "0", "0"},
      {
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "(", "r", ")"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"\[Beta]", "(", "r", ")"}], "2"]}], "-", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Phi]", "(", 
               RowBox[{"t", ",", "r"}], ")"}]}], 
             RowBox[{"\[PartialD]", "r"}],
             MultilineFunction->None], ")"}], "2"]}], 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}]], "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"a", "(", "r", ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"\[Beta]", "(", "r", ")"}], "2"], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Phi]", "(", 
             RowBox[{"t", ",", "r"}], ")"}]}], 
           RowBox[{"\[PartialD]", "t"}],
           MultilineFunction->None], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Phi]", "(", 
             RowBox[{"t", ",", "r"}], ")"}]}], 
           RowBox[{"\[PartialD]", "r"}],
           MultilineFunction->None]}], 
         SuperscriptBox[
          RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"a", "(", "r", ")"}], "2"], " ", 
          RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Phi]", "(", 
               RowBox[{"t", ",", "r"}], ")"}]}], 
             RowBox[{"\[PartialD]", "t"}],
             MultilineFunction->None], ")"}], "2"]}], 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}]]}], 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"a", "(", "r", ")"}], "2"], " ", 
           RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Phi]", "(", 
              RowBox[{"t", ",", "r"}], ")"}]}], 
            RowBox[{"\[PartialD]", "r"}],
            MultilineFunction->None], " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Phi]", "(", 
              RowBox[{"t", ",", "r"}], ")"}]}], 
            RowBox[{"\[PartialD]", "t"}],
            MultilineFunction->None]}], 
          SuperscriptBox[
           RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]]}], "+", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "(", "r", ")"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"\[Beta]", "(", "r", ")"}], "2"]}], "-", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Phi]", "(", 
               RowBox[{"t", ",", "r"}], ")"}]}], 
             RowBox[{"\[PartialD]", "r"}],
             MultilineFunction->None], ")"}], "2"]}], 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}]], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"a", "(", "r", ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Phi]", "(", 
               RowBox[{"t", ",", "r"}], ")"}]}], 
             RowBox[{"\[PartialD]", "t"}],
             MultilineFunction->None], ")"}], "2"]}], 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}]]}], "0", "0"},
      {"0", "0", 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["r", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "(", "r", ")"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"\[Beta]", "(", "r", ")"}], "2"]}], "-", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Phi]", "(", 
               RowBox[{"t", ",", "r"}], ")"}]}], 
             RowBox[{"\[PartialD]", "r"}],
             MultilineFunction->None], ")"}], "2"]}], 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"a", "(", "r", ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}]], "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["r", "2"], " ", 
          RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Phi]", "(", 
             RowBox[{"t", ",", "r"}], ")"}]}], 
           RowBox[{"\[PartialD]", "r"}],
           MultilineFunction->None], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Phi]", "(", 
             RowBox[{"t", ",", "r"}], ")"}]}], 
           RowBox[{"\[PartialD]", "t"}],
           MultilineFunction->None]}], 
         SuperscriptBox[
          RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Phi]", "(", 
               RowBox[{"t", ",", "r"}], ")"}]}], 
             RowBox[{"\[PartialD]", "t"}],
             MultilineFunction->None], ")"}], "2"]}], 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}]]}], "0"},
      {"0", "0", "0", 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["r", "2"], " ", 
          RowBox[{
           SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "(", "r", ")"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"\[Beta]", "(", "r", ")"}], "2"]}], "-", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Phi]", "(", 
               RowBox[{"t", ",", "r"}], ")"}]}], 
             RowBox[{"\[PartialD]", "r"}],
             MultilineFunction->None], ")"}], "2"]}], 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"a", "(", "r", ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}]], "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["r", "2"], " ", 
          RowBox[{
           SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
          RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Phi]", "(", 
             RowBox[{"t", ",", "r"}], ")"}]}], 
           RowBox[{"\[PartialD]", "r"}],
           MultilineFunction->None], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Phi]", "(", 
             RowBox[{"t", ",", "r"}], ")"}]}], 
           RowBox[{"\[PartialD]", "t"}],
           MultilineFunction->None]}], 
         SuperscriptBox[
          RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["r", "2"], " ", 
          RowBox[{
           SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Phi]", "(", 
               RowBox[{"t", ",", "r"}], ")"}]}], 
             RowBox[{"\[PartialD]", "t"}],
             MultilineFunction->None], ")"}], "2"]}], 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"\[Alpha]", "(", "r", ")"}], "2"]}]]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{
  3.8302543281972513`*^9, {3.8302544176358128`*^9, 3.830254444078973*^9}, 
   3.844524082060451*^9, 3.844524120533792*^9, 3.844524172901845*^9},
 CellLabel->
  "Out[216]//TraditionalForm=",ExpressionUUID->"0ded3103-e97f-4684-91d8-\
7cc66f004e0a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Need", " ", "to", " ", "add", " ", "the", " ", "above", " ", "two", " ", 
    RowBox[{"together", "?"}]}], " ", "*)"}], " "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.8445237499847813`*^9, 
  3.8445237660733*^9}},ExpressionUUID->"fb2e806c-cfc4-49b8-bc00-e826e11fe6e9"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "setScalar", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setScalar", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tpart1", "+", "Tpart2"}], "  ", "//", " ", "Expand"}]}], "    ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"setScalar", " ", "//", " ", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.8445241752861547`*^9, 3.844524205899829*^9}, {
  3.844524386994762*^9, 3.8445244064185257`*^9}},
 CellLabel->
  "In[223]:=",ExpressionUUID->"08fbfac6-b5dc-4b0a-8ea2-e235827dc6b4"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[Alpha]", "[", "r", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Phi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"a", "[", "r", "]"}], "2"]}]], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"\[Beta]", "[", "r", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}], "2"]}], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"a", "[", "r", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"\[Beta]", "[", "r", "]"}], "4"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Phi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]], "+", 
       RowBox[{
        RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "r"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "r"}], "]"}]}], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"a", "[", "r", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"\[Beta]", "[", "r", "]"}], "3"], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}]}], 
        SuperscriptBox[
         RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}], "2"]}], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"a", "[", "r", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"\[Beta]", "[", "r", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Phi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}], "2"]}], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"a", "[", "r", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"\[Beta]", "[", "r", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Phi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]], "+", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[Phi]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "r"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "r"}], "]"}]}], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"a", "[", "r", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"\[Beta]", "[", "r", "]"}], "2"], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}]}], 
        SuperscriptBox[
         RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"a", "[", "r", "]"}], "2"], " ", 
         RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Phi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]]}], "0", "0"},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}], "2"]}], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"a", "[", "r", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"\[Beta]", "[", "r", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Phi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]], "+", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[Phi]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "r"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "r"}], "]"}]}], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"a", "[", "r", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"\[Beta]", "[", "r", "]"}], "2"], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}]}], 
        SuperscriptBox[
         RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"a", "[", "r", "]"}], "2"], " ", 
         RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Phi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]]}], 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}], "2"]}], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"a", "[", "r", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"\[Beta]", "[", "r", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Phi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"a", "[", "r", "]"}], "2"], " ", 
         RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}]}], 
        SuperscriptBox[
         RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"a", "[", "r", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Phi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]]}], "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Phi]", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"a", "[", "r", "]"}], "2"]}]]}], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         SuperscriptBox[
          RowBox[{"\[Beta]", "[", "r", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Phi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}]}], 
        SuperscriptBox[
         RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Phi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]]}], "0"},
     {"0", "0", "0", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Phi]", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"a", "[", "r", "]"}], "2"]}]]}], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"\[Beta]", "[", "r", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Phi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
         RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}]}], 
        SuperscriptBox[
         RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Phi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8445241769700403`*^9, 3.844524206392314*^9}, 
   3.8445244067441797`*^9},
 CellLabel->
  "Out[225]//MatrixForm=",ExpressionUUID->"d007a1d8-a84c-4682-9ef6-\
f027ba86fc46"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "SET", "]"}], "\[IndentingNewLine]", 
 RowBox[{"SET", " ", "=", " ", 
  RowBox[{"ToTensor", "[", 
   RowBox[{"\"\<set\>\"", " ", ",", " ", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "1", "]"}], "]"}], " ", ",", "   ", "setScalar", " ", ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "\[Alpha]"}], ",", 
      RowBox[{"-", "\[Beta]"}]}], "}"}]}], " ", "]"}], " "}]}], "Input",
 CellChangeTimes->{{3.84452440909298*^9, 3.844524412757223*^9}, {
  3.8445244973860703`*^9, 3.844524512129767*^9}, {3.8445245748522387`*^9, 
  3.844524601665757*^9}},
 CellLabel->
  "In[233]:=",ExpressionUUID->"ade4afc1-0489-4165-91b3-ecec13fc3146"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["set", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellChangeTimes->{
  3.844524412950828*^9, {3.844524592712942*^9, 3.84452460211662*^9}},
 CellLabel->
  "Out[234]=",ExpressionUUID->"1787b0bd-bb4a-4bc7-9757-c175a228ec4d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"TensorValues", "[", 
   RowBox[{"MergeTensors", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"\[Mu]", ",", "\[Alpha]"}], "]"}], " ", 
     RowBox[{"SET", "[", 
      RowBox[{
       RowBox[{"-", "\[Alpha]"}], ",", 
       RowBox[{"-", "\[Beta]"}]}], "]"}]}], "]"}], " ", "]"}], " ", "//", " ",
   "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.844524414748735*^9, 3.844524442670738*^9}, {
   3.8445244873465433`*^9, 3.844524495705991*^9}, 3.844524571211008*^9, {
   3.844524626633912*^9, 3.844524693997714*^9}},
 CellLabel->
  "In[239]:=",ExpressionUUID->"05d68be4-7389-429a-9fa4-6f4ab949acb5"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "[", "r", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"\[Beta]", "[", "r", "]"}], "2"]}], 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "-", 
           FractionBox[
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}], "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"a", "[", "r", "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"\[Beta]", "[", "r", "]"}], "2"]}]}], 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], " ", 
            RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Phi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}], "2"]}], "+", 
           FractionBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "[", "r", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"\[Beta]", "[", "r", "]"}], "3"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Phi]", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]], "+", 
           RowBox[{
            RowBox[{
             SuperscriptBox["\[Phi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Phi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}]}], "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "[", "r", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"\[Beta]", "[", "r", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["\[Phi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Phi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"1", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}]}], 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "+", 
           FractionBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "[", "r", "]"}], "2"], " ", 
             RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Phi]", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"1", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]]}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "[", "r", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"\[Beta]", "[", "r", "]"}], "2"]}], 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "-", 
           FractionBox[
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}], "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"a", "[", "r", "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"\[Beta]", "[", "r", "]"}], "2"]}]}], 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"\[Alpha]", "[", "r", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Phi]", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"a", "[", "r", "]"}], "2"]}]], "-", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"\[Beta]", "[", "r", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Phi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}], "2"]}], "+", 
           FractionBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "[", "r", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"\[Beta]", "[", "r", "]"}], "4"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Phi]", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]], "+", 
           RowBox[{
            RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Phi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Phi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}]}], "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "[", "r", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"\[Beta]", "[", "r", "]"}], "3"], " ", 
             RowBox[{
              SuperscriptBox["\[Phi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Phi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"1", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}]}], 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "+", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Phi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"1", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}], "2"]}], "+", 
           FractionBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "[", "r", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"\[Beta]", "[", "r", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Phi]", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"1", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]]}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]]}], 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "[", "r", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"\[Beta]", "[", "r", "]"}], "2"]}], 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "-", 
           FractionBox[
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}], "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"a", "[", "r", "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"\[Beta]", "[", "r", "]"}], "2"]}]}], 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Phi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}], "2"]}], "+", 
           FractionBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "[", "r", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"\[Beta]", "[", "r", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Phi]", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]], "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "[", "r", "]"}], "2"], " ", 
             RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Phi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Phi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"1", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}]}], 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "+", 
           FractionBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "[", "r", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Phi]", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"1", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]]}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "[", "r", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"\[Beta]", "[", "r", "]"}], "2"]}], 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "-", 
           FractionBox[
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}], "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"a", "[", "r", "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"\[Beta]", "[", "r", "]"}], "2"]}]}], 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], " ", 
            RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Phi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}], "2"]}], "+", 
           FractionBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "[", "r", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"\[Beta]", "[", "r", "]"}], "3"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Phi]", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]], "+", 
           RowBox[{
            RowBox[{
             SuperscriptBox["\[Phi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Phi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}]}], "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "[", "r", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"\[Beta]", "[", "r", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["\[Phi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Phi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"1", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}]}], 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "+", 
           FractionBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "[", "r", "]"}], "2"], " ", 
             RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Phi]", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"1", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]]}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]]}], "0", "0"},
     {
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", 
              SuperscriptBox[
               RowBox[{"a", "[", "r", "]"}], "2"]], "-", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"\[Beta]", "[", "r", "]"}], "2"], 
              SuperscriptBox[
               RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"a", "[", "r", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"\[Beta]", "[", "r", "]"}], "2"]}], 
              SuperscriptBox[
               RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"a", "[", "r", "]"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                FractionBox["1", 
                 SuperscriptBox[
                  RowBox[{"a", "[", "r", "]"}], "2"]], "-", 
                FractionBox[
                 SuperscriptBox[
                  RowBox[{"\[Beta]", "[", "r", "]"}], "2"], 
                 SuperscriptBox[
                  RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]]}], ")"}]}]}], 
            ")"}]}], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   SuperscriptBox[
                    RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}], "+", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"a", "[", "r", "]"}], "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"\[Beta]", "[", "r", "]"}], "2"]}]}], ")"}]}], 
               SuperscriptBox[
                RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"a", "[", "r", "]"}], "2"], " ", 
               RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  SuperscriptBox[
                   RowBox[{"a", "[", "r", "]"}], "2"]], "-", 
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"\[Beta]", "[", "r", "]"}], "2"], 
                  SuperscriptBox[
                   RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]]}], ")"}]}]}], 
             ")"}]}], 
           SuperscriptBox[
            RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Phi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}], "2"]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "[", "r", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"\[Beta]", "[", "r", "]"}], "3"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Phi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
           RowBox[{"2", " ", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]], "+", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[Phi]", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"t", ",", "r"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Phi]", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"t", ",", "r"}], "]"}]}], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "[", "r", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"\[Beta]", "[", "r", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Phi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Phi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}]}], 
           SuperscriptBox[
            RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "[", "r", "]"}], "2"], " ", 
            RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Phi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"1", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
           RowBox[{"2", " ", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"a", "[", "r", "]"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"\[Beta]", "[", "r", "]"}], "2"]}], 
               SuperscriptBox[
                RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"a", "[", "r", "]"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  SuperscriptBox[
                   RowBox[{"a", "[", "r", "]"}], "2"]], "-", 
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"\[Beta]", "[", "r", "]"}], "2"], 
                  SuperscriptBox[
                   RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]]}], ")"}]}]}], 
             ")"}]}], 
           SuperscriptBox[
            RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "-", 
          FractionBox[
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox[
                  RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}], "+", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"a", "[", "r", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"\[Beta]", "[", "r", "]"}], "2"]}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "[", "r", "]"}], "2"], " ", 
             RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", 
                SuperscriptBox[
                 RowBox[{"a", "[", "r", "]"}], "2"]], "-", 
               FractionBox[
                SuperscriptBox[
                 RowBox[{"\[Beta]", "[", "r", "]"}], "2"], 
                SuperscriptBox[
                 RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]]}], ")"}]}]}], 
           SuperscriptBox[
            RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"\[Alpha]", "[", "r", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Phi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
           RowBox[{"2", " ", 
            SuperscriptBox[
             RowBox[{"a", "[", "r", "]"}], "2"]}]], "-", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"\[Beta]", "[", "r", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Phi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}], "2"]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "[", "r", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"\[Beta]", "[", "r", "]"}], "4"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Phi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
           RowBox[{"2", " ", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]], "+", 
          RowBox[{
           RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Phi]", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"t", ",", "r"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Phi]", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"t", ",", "r"}], "]"}]}], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "[", "r", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"\[Beta]", "[", "r", "]"}], "3"], " ", 
            RowBox[{
             SuperscriptBox["\[Phi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Phi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}]}], 
           SuperscriptBox[
            RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "+", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Phi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}], "2"]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "[", "r", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"\[Beta]", "[", "r", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Phi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"1", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
           RowBox[{"2", " ", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", 
              SuperscriptBox[
               RowBox[{"a", "[", "r", "]"}], "2"]], "-", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"\[Beta]", "[", "r", "]"}], "2"], 
              SuperscriptBox[
               RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"a", "[", "r", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"\[Beta]", "[", "r", "]"}], "2"]}], 
              SuperscriptBox[
               RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"a", "[", "r", "]"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                FractionBox["1", 
                 SuperscriptBox[
                  RowBox[{"a", "[", "r", "]"}], "2"]], "-", 
                FractionBox[
                 SuperscriptBox[
                  RowBox[{"\[Beta]", "[", "r", "]"}], "2"], 
                 SuperscriptBox[
                  RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]]}], ")"}]}]}], 
            ")"}]}], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   SuperscriptBox[
                    RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}], "+", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"a", "[", "r", "]"}], "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"\[Beta]", "[", "r", "]"}], "2"]}]}], ")"}]}], 
               SuperscriptBox[
                RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"a", "[", "r", "]"}], "2"], " ", 
               RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  SuperscriptBox[
                   RowBox[{"a", "[", "r", "]"}], "2"]], "-", 
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"\[Beta]", "[", "r", "]"}], "2"], 
                  SuperscriptBox[
                   RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]]}], ")"}]}]}], 
             ")"}]}], 
           SuperscriptBox[
            RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Phi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}], "2"]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "[", "r", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"\[Beta]", "[", "r", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Phi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
           RowBox[{"2", " ", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "[", "r", "]"}], "2"], " ", 
            RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Phi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Phi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}]}], 
           SuperscriptBox[
            RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "[", "r", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Phi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"1", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
           RowBox[{"2", " ", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"a", "[", "r", "]"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"\[Beta]", "[", "r", "]"}], "2"]}], 
               SuperscriptBox[
                RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"a", "[", "r", "]"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  SuperscriptBox[
                   RowBox[{"a", "[", "r", "]"}], "2"]], "-", 
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"\[Beta]", "[", "r", "]"}], "2"], 
                  SuperscriptBox[
                   RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]]}], ")"}]}]}], 
             ")"}]}], 
           SuperscriptBox[
            RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "-", 
          FractionBox[
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox[
                  RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}], "+", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"a", "[", "r", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"\[Beta]", "[", "r", "]"}], "2"]}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"a", "[", "r", "]"}], "2"], " ", 
             RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", 
                SuperscriptBox[
                 RowBox[{"a", "[", "r", "]"}], "2"]], "-", 
               FractionBox[
                SuperscriptBox[
                 RowBox[{"\[Beta]", "[", "r", "]"}], "2"], 
                SuperscriptBox[
                 RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]]}], ")"}]}]}], 
           SuperscriptBox[
            RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Phi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}], "2"]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "[", "r", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"\[Beta]", "[", "r", "]"}], "3"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Phi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
           RowBox[{"2", " ", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]], "+", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[Phi]", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"t", ",", "r"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Phi]", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"t", ",", "r"}], "]"}]}], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "[", "r", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"\[Beta]", "[", "r", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Phi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Phi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}]}], 
           SuperscriptBox[
            RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "[", "r", "]"}], "2"], " ", 
            RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Phi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"1", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
           RowBox[{"2", " ", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]]}], ")"}]}]}], "0", 
      "0"},
     {"0", "0", 
      FractionBox[
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Phi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"a", "[", "r", "]"}], "2"]}]]}], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox[
           RowBox[{"\[Beta]", "[", "r", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Phi]", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]], "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["r", "2"], " ", 
          RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Phi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Phi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], 
         SuperscriptBox[
          RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Phi]", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]]}], 
       SuperscriptBox["r", "2"]], "0"},
     {"0", "0", "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["r", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Phi]", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"a", "[", "r", "]"}], "2"]}]]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["r", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"\[Beta]", "[", "r", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Phi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
           RowBox[{"2", " ", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["r", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
            RowBox[{"\[Beta]", "[", "r", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Phi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Phi]", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}]}], 
           SuperscriptBox[
            RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["r", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Phi]", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"1", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}], "2"]}], 
           RowBox[{"2", " ", 
            SuperscriptBox[
             RowBox[{"\[Alpha]", "[", "r", "]"}], "2"]}]]}], ")"}]}], 
       SuperscriptBox["r", "2"]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.844524432749997*^9, 3.84452444290189*^9}, {
  3.844524479083263*^9, 3.84452448779945*^9}, {3.8445246313602943`*^9, 
  3.844524694246372*^9}},
 CellLabel->
  "Out[239]//MatrixForm=",ExpressionUUID->"d6fbe02d-d076-45e1-ab90-\
6ed77367d564"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "might", " ", "just", " ", "give", " ", "equation", " ", 
    "41"}], " ", "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"TensorValues", "[", 
        RowBox[{"MergeTensors", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"tensorList", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"\[Mu]", ",", "\[Alpha]"}], "]"}], " ", 
          RowBox[{"SET", "[", 
           RowBox[{
            RowBox[{"-", "\[Alpha]"}], ",", 
            RowBox[{"-", "\[Beta]"}]}], "]"}]}], "]"}], " ", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], "  ", "/.", " ", "phiFirstD"}],
      "  ", "//", " ", "Expand"}], " ", "//", " ", "Simplify"}], "  ", "//", 
   " ", "pdConv"}]}]], "Input",
 CellChangeTimes->{{3.844524704757503*^9, 3.844524718997744*^9}, {
  3.844524767710146*^9, 3.844524768885255*^9}, {3.8445248039756117`*^9, 
  3.844524812247075*^9}},ExpressionUUID->"058bfb25-8d9f-4b55-8f54-\
340ab7cf3eb5"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"\[Beta]", "(", "r", ")"}], " ", 
      RowBox[{"\[CapitalPi]", "(", 
       RowBox[{"t", ",", "r"}], ")"}], " ", 
      RowBox[{"\[CapitalPhi]", "(", 
       RowBox[{"t", ",", "r"}], ")"}]}], 
     RowBox[{
      RowBox[{"a", "(", "r", ")"}], " ", 
      RowBox[{"\[Alpha]", "(", "r", ")"}]}]]}], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"\[CapitalPi]", "(", 
       RowBox[{"t", ",", "r"}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"\[CapitalPhi]", "(", 
       RowBox[{"t", ",", "r"}], ")"}], "2"]}], 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"a", "(", "r", ")"}], "2"]}]]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.844524706930641*^9, 3.8445247193287687`*^9}, 
   3.84452476954355*^9},
 CellLabel->
  "Out[243]//TraditionalForm=",ExpressionUUID->"71780898-ef1d-48f5-8d66-\
2cdad898f65f"]
}, Closed]]
},
CellGrouping->Manual,
WindowSize->{1197, 675},
WindowMargins->{{20, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.3 for Mac OS X x86 (64-bit) (May 11, 2021)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"43570206-596f-4895-904b-9bb2d8077c15"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1046, 17, 345, "Title",ExpressionUUID->"3783ad43-a12e-41ac-94b0-35782579d6e2",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1629, 41, 551, 11, 76, "Author",ExpressionUUID->"90ee04e4-1919-4a2d-acdc-0cef47ff1b01",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[2217, 57, 251, 4, 69, "Section",ExpressionUUID->"550d7ae6-3c3f-446c-a02a-babf79e953a5",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[CellGroupData[{
Cell[2493, 65, 1670, 45, 189, "Input",ExpressionUUID->"ee4fbc02-a5a8-4dfe-b7e7-6efae72a5cbe",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[4166, 112, 830, 15, 70, "Print",ExpressionUUID->"227729d8-f441-4350-815d-4bd8f97f211d",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[4999, 129, 847, 16, 70, "Print",ExpressionUUID->"61112236-07d3-4a6b-9e99-993b9a2e7613",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[5849, 147, 1124, 18, 70, "Output",ExpressionUUID->"45748dd6-57ad-4176-b5d9-9fe563081e95",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[6988, 168, 270, 4, 41, "Input",ExpressionUUID->"76520ec1-9736-4600-92f2-c946acb162f6",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Closed]],
Cell[CellGroupData[{
Cell[7295, 177, 249, 4, 55, "Section",ExpressionUUID->"7c2a53f5-b99c-4b75-b0a0-66cff8dbb8c4",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[CellGroupData[{
Cell[7569, 185, 382, 8, 63, "Input",ExpressionUUID->"7384d75e-b5a8-49f5-8da9-e8be741ca031",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[7954, 195, 521, 10, 70, "Output",ExpressionUUID->"bd0caa56-a781-4b90-9a87-4965e94d8608",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[8524, 211, 362, 6, 55, "Section",ExpressionUUID->"0236cc7e-7f14-4656-a067-778b3c58130d",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[8889, 219, 1659, 41, 126, "Input",ExpressionUUID->"4571a7e0-5581-4711-9a39-3ebb531fff86",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[10551, 262, 1055, 26, 84, "Input",ExpressionUUID->"3bfcce52-64db-41cf-a82e-bbc3cfc61cc4",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Closed]],
Cell[CellGroupData[{
Cell[11643, 293, 312, 5, 55, "Section",ExpressionUUID->"e605ce9f-a426-4d61-a219-d303e8816c62",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[CellGroupData[{
Cell[11980, 302, 4030, 92, 651, "Input",ExpressionUUID->"53435cd8-6fc2-4eea-a2d5-e2d1822ece35",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[16013, 396, 3614, 108, 70, "Output",ExpressionUUID->"6dc3a91e-cd38-49fb-9eea-eb1f75158f4d",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}]
}, Open  ]],
Cell[19642, 507, 845, 19, 84, "Input",ExpressionUUID->"e7235eae-a88b-47b0-b52e-85c7543b6c2c",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}]
}, Closed]],
Cell[CellGroupData[{
Cell[20524, 531, 320, 7, 55, "Section",ExpressionUUID->"dffbc1aa-7c41-4a2f-843f-f5fd0c0f0883",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[CellGroupData[{
Cell[20869, 542, 1113, 30, 86, "Input",ExpressionUUID->"f676da7c-7178-4781-b7fb-0e69dcc63e6d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[21985, 574, 1149, 31, 44, "Output",ExpressionUUID->"1fd7992f-1932-4d44-8a09-c7afd71dacb2",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[23171, 610, 783, 16, 105, "Input",ExpressionUUID->"a4c6f9fc-d27c-4bbe-a5c3-084d9dbd0480",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[23957, 628, 1593, 42, 112, "Output",ExpressionUUID->"cb943cb5-77c7-44cf-a816-39bf5fd837b9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[25587, 675, 858, 19, 168, "Input",ExpressionUUID->"0adecc03-5bd5-4940-aa96-638cb76ea9bc",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[26448, 696, 1120, 32, 87, "Output",ExpressionUUID->"682278db-008c-4a15-b35d-cdfe01e4d86c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[27605, 733, 726, 16, 105, "Input",ExpressionUUID->"cd9c34c2-217f-4ec8-8703-b4f10fe85908",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[28334, 751, 1793, 49, 112, "Output",ExpressionUUID->"9d184378-8d61-45ed-be33-7e5a13fb01f7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[30164, 805, 887, 20, 126, "Input",ExpressionUUID->"358d6695-7a5a-4639-9dff-ad3ab478923e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[31054, 827, 1967, 54, 154, "Output",ExpressionUUID->"3147b20e-b02a-44f0-8eb7-d63430f301bc",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[33058, 886, 407, 9, 41, "Input",ExpressionUUID->"771bb196-2ac2-498e-9c28-a098ee130503",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[33468, 897, 995, 25, 101, "Output",ExpressionUUID->"8dd47ffc-a9c2-4175-a1ef-ad91e8e230a7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[34500, 927, 408, 9, 41, "Input",ExpressionUUID->"eaa0e313-085a-4c22-b03f-33caa6c027c1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[34911, 938, 988, 25, 101, "Output",ExpressionUUID->"db149293-edc0-4f11-8ad5-e7759e406ec9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[35948, 969, 374, 6, 55, "Section",ExpressionUUID->"44234123-8581-49c3-995f-ad44be54bb43",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[36325, 977, 538, 11, 41, "Input",ExpressionUUID->"6cc158e5-c69b-4eac-b4c3-436d374fea79",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[36866, 990, 5972, 136, 714, "Input",ExpressionUUID->"920a183c-522a-455c-8b22-84196b1d534f",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[CellGroupData[{
Cell[42863, 1130, 1314, 24, 65, "Input",ExpressionUUID->"2ab4d22b-9bff-42f9-bdef-4f1ae9d18d7b",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[44180, 1156, 592, 10, 41, "Output",ExpressionUUID->"40e27ba1-25e2-41a0-b741-218146357d04",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[44809, 1171, 309, 4, 41, "Input",ExpressionUUID->"6803b70f-ec64-4ec5-912a-12424bbfab75",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[45121, 1177, 1666, 37, 45, "Output",ExpressionUUID->"8a605216-e007-4f17-9a44-7b267e9748e7",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[46824, 1219, 862, 19, 84, "Input",ExpressionUUID->"92547f3b-8d21-4b17-aac1-9a01e9312a9a",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[47689, 1240, 974, 17, 45, "Output",ExpressionUUID->"421aa453-1577-45eb-b0a4-a9d576ea3090",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[48666, 1259, 891, 13, 41, "Output",ExpressionUUID->"284a587a-8cc2-46a9-a38c-8110336e47d0",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[49560, 1274, 2229, 56, 112, "Output",ExpressionUUID->"d9b8c73b-03c7-4894-aba0-55ea9fe15fb3",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[51826, 1335, 865, 19, 84, "Input",ExpressionUUID->"fc62bf1a-0403-4ae3-b325-c0663b5d0634",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[52694, 1356, 1083, 19, 45, "Output",ExpressionUUID->"e0a4ef8a-2ffd-4fc3-a14f-a2333841e0b1",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[53780, 1377, 982, 14, 41, "Output",ExpressionUUID->"e60d50cd-f406-4fdf-825c-98577786bf6d",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[54765, 1393, 22769, 605, 416, "Output",ExpressionUUID->"d4d0f90e-838d-4528-97c6-6c92e49cc877",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[77571, 2003, 859, 19, 84, "Input",ExpressionUUID->"5f2c6365-4468-44c7-8d30-1c1fbb78e70d",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[78433, 2024, 964, 16, 45, "Output",ExpressionUUID->"3481747a-a16c-4d27-92bb-111b88c7432d",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[79400, 2042, 906, 13, 41, "Output",ExpressionUUID->"7ec1965d-4b86-42f0-b972-f104ff0ba35f",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[80309, 2057, 77795, 1879, 652, "Output",ExpressionUUID->"ddce4fbf-99df-4b2e-a2d0-529a1d5b4957",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[158141, 3941, 856, 19, 84, "Input",ExpressionUUID->"aae1502b-0a3f-4fec-9e01-291ace7ce3da",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[159000, 3962, 951, 16, 45, "Output",ExpressionUUID->"c5de0777-9a70-4305-8165-a2c4ad5868d6",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[159954, 3980, 910, 13, 41, "Output",ExpressionUUID->"a1b10bb7-c056-4f36-9f5b-a23791d6d56f",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[160867, 3995, 28861, 709, 216, "Output",ExpressionUUID->"afbe46d6-523d-49ff-a636-f9e3f5d122b9",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[189765, 4709, 858, 19, 84, "Input",ExpressionUUID->"cfacda59-7a85-4d73-8fbe-e59a76426ab7",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[190626, 4730, 911, 15, 41, "Output",ExpressionUUID->"05d31c97-87f4-4c9b-8128-ed3e70c39ddb",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[191540, 4747, 905, 13, 41, "Output",ExpressionUUID->"899194f4-55a0-48fe-a23b-e837a351bc02",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[192448, 4762, 7034, 178, 122, "Output",ExpressionUUID->"7a81d2c5-ad43-4a25-9538-eafbcecf26a0",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[199497, 4943, 1083, 22, 126, "Input",ExpressionUUID->"ed834894-906c-416c-969c-d2d4760d5f6a",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[CellGroupData[{
Cell[200605, 4969, 840, 19, 84, "Input",ExpressionUUID->"56ce111d-99f8-4825-b30f-e0a242fef260",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[201448, 4990, 882, 15, 45, "Output",ExpressionUUID->"d047c6f6-6d0a-4e62-816f-f40b126691f2",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[202333, 5007, 841, 12, 41, "Output",ExpressionUUID->"ed747e19-e011-489f-a058-5ae1a91fb6a9",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[203177, 5021, 21275, 517, 248, "Output",ExpressionUUID->"147b9f6b-21aa-4162-a025-caed0f9fb73d",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[224467, 5541, 1073, 22, 126, "Input",ExpressionUUID->"a5f8b78b-8468-4133-bedb-5c25de7e567e",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[225543, 5565, 1007, 21, 126, "Input",ExpressionUUID->"1ef53022-242b-401d-9103-4f64c5e63ffe",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Closed]],
Cell[CellGroupData[{
Cell[226587, 5591, 337, 7, 55, "Section",ExpressionUUID->"79b20700-67fb-417a-ae29-a327faeee0a4",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[CellGroupData[{
Cell[226949, 5602, 552, 13, 41, "Input",ExpressionUUID->"b7b8571a-44f6-4b93-9c4c-068a146263e8",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[227504, 5617, 412, 7, 41, "Output",ExpressionUUID->"19dd0c6c-b039-4333-bb17-260dff0174f8",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[227953, 5629, 378, 8, 41, "Input",ExpressionUUID->"30debdb5-87bb-4806-947f-c7e9e93a4183",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[228334, 5639, 1180, 34, 49, "Output",ExpressionUUID->"a30c297f-71ca-4afe-a44e-0b3ed3eeaba4",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[229551, 5678, 522, 10, 41, "Input",ExpressionUUID->"7454b8eb-e22d-4bb0-94a9-11a530f819fa",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[230076, 5690, 7307, 230, 143, "Output",ExpressionUUID->"8a97f182-2ff4-449f-aee1-2f220c6c5779",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[237420, 5925, 730, 17, 105, "Input",ExpressionUUID->"4f654e20-d365-4c84-bc23-41da2e489e9b",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[238153, 5944, 723, 18, 69, "Output",ExpressionUUID->"d7f4e91b-8c24-47cf-aa12-fd1662cc2b8d",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[238913, 5967, 1188, 29, 124, "Input",ExpressionUUID->"eb898037-cc6e-4482-9358-f678a62d58d9",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[240104, 5998, 1159, 31, 78, "Output",ExpressionUUID->"4fea87e4-702e-48c1-b1ad-2e7d0aac6204",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[241300, 6034, 1326, 32, 105, "Input",ExpressionUUID->"17f79682-922d-463a-a9a9-4480e7c087e7",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[242629, 6068, 1914, 53, 86, "Output",ExpressionUUID->"028a23da-b4c9-4423-8f98-8bae4532a4f8",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[244580, 6126, 479, 10, 41, "Input",ExpressionUUID->"788a5625-d9d4-4422-8f1d-e76d95ffd97f",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[245062, 6138, 927, 25, 72, "Output",ExpressionUUID->"ff9d208f-5a7c-4a46-97d9-9aa677a3ced8",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[246026, 6168, 1249, 28, 168, "Input",ExpressionUUID->"7b3ee92f-beb2-4d33-96de-430d0f5aa519",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[247278, 6198, 3045, 86, 130, "Output",ExpressionUUID->"00dc35cf-2627-4d41-92ac-dd0f90726501",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[250360, 6289, 1118, 24, 105, "Input",ExpressionUUID->"a5a57cfe-3e16-49d8-a865-d578b8ccbfa8",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[251481, 6315, 4722, 144, 80, "Output",ExpressionUUID->"67a52e7a-b351-4930-81be-3191e58ba0c7",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[256240, 6464, 1025, 28, 88, "Input",ExpressionUUID->"4adcb6d1-768d-47c1-9b2e-c17a9c742da4",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[257268, 6494, 4297, 136, 109, "Output",ExpressionUUID->"70904e44-2c75-4b5d-b9f7-36bc2b3f93f0",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[261568, 6632, 513, 10, 61, "Output",ExpressionUUID->"9db49673-9b4b-484a-ad0a-3549dffe347d",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[262084, 6644, 641, 15, 64, "Output",ExpressionUUID->"4f6b6e6c-41a7-474e-8541-ac827cbf267a",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[262762, 6664, 1206, 25, 210, "Input",ExpressionUUID->"bdfa1306-7639-4076-a023-5799b5c794d1",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[263971, 6691, 1283, 38, 123, "Output",ExpressionUUID->"9139dd75-dedb-4e6d-83a0-49a05614e471",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[265291, 6734, 1069, 24, 122, "Input",ExpressionUUID->"bb5d852c-8c21-4054-a780-3b17549aa8e1",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[266363, 6760, 2242, 65, 80, "Output",ExpressionUUID->"9182321d-e735-46b2-8c82-d1dccc6fd646",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[268642, 6830, 1236, 31, 124, "Input",ExpressionUUID->"5d83b1b5-0d66-4832-b183-b062186f89c8",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[269881, 6863, 2631, 76, 80, "Output",ExpressionUUID->"8c7c0099-c68f-478b-b97d-5da3f2543339",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[272549, 6944, 274, 5, 41, "Input",ExpressionUUID->"b51dbac6-e3f3-4543-a47a-0695665b13e4",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[272826, 6951, 4244, 135, 109, "Output",ExpressionUUID->"437060a6-c565-49b0-b49b-bc7e4bfd5bad",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[277107, 7091, 497, 8, 84, "Input",ExpressionUUID->"f2555f14-48b9-49e4-a357-c92e24221348",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[277607, 7101, 4128, 129, 107, "Output",ExpressionUUID->"90d1f2aa-6e22-4b7e-808f-e1da90f2d55b",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[281772, 7235, 567, 14, 41, "Input",ExpressionUUID->"49cb5f3b-f654-4c0b-812e-166213c65042",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[282342, 7251, 1752, 51, 151, "Output",ExpressionUUID->"6095b037-abbf-4f27-968a-09787c81de9d",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[284131, 7307, 264, 4, 41, "Input",ExpressionUUID->"8e244e7f-dbd2-44b0-a4da-0af7b6ef7e80",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[284398, 7313, 1526, 44, 64, "Output",ExpressionUUID->"dfc9656a-3721-4045-9e07-4bd3e23d9f29",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[285961, 7362, 549, 10, 84, "Input",ExpressionUUID->"31fd066a-a98b-4408-9559-4f1e21141eba",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[286513, 7374, 538, 10, 41, "Output",ExpressionUUID->"7a31a65b-c015-47cd-bcea-2c2a31971126",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[287088, 7389, 464, 9, 84, "Input",ExpressionUUID->"4cdc6696-0751-4974-a1e8-afc4d55d76b9",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[287555, 7400, 403, 7, 41, "Output",ExpressionUUID->"b9293391-01e0-4158-a92f-b761ca5495f4",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[287995, 7412, 308, 6, 41, "Input",ExpressionUUID->"e4ebf6bb-0130-4fb2-a63c-0bfc23e0d44c",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[288306, 7420, 326, 5, 41, "Output",ExpressionUUID->"36205cbc-9225-453e-b24f-f25c33f2d986",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[288669, 7430, 1245, 30, 84, "Input",ExpressionUUID->"1b60b92e-d8cd-46d9-a815-5a7c78ea2fc4",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[289917, 7462, 2648, 79, 63, "Output",ExpressionUUID->"ef210e09-206c-4de2-b882-20af56f0b890",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[292602, 7546, 1489, 33, 84, "Input",ExpressionUUID->"71ddc5af-ffa0-4125-bd1f-1c45efd44b15",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[294094, 7581, 1222, 33, 63, "Output",ExpressionUUID->"bf51103e-359a-4288-9cca-3bd25d2ddfba",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[295353, 7619, 268, 5, 41, "Input",ExpressionUUID->"d16a6100-69c3-44d9-be32-4124cefefd84",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[295624, 7626, 1075, 32, 63, "Output",ExpressionUUID->"1cf80f11-faa8-4a43-b454-d75d0ac9b8bc",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[296736, 7663, 1346, 32, 84, "Input",ExpressionUUID->"4cc8acb5-51b9-49cf-beed-616db2a4e510",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[298085, 7697, 1705, 51, 63, "Output",ExpressionUUID->"695a7c8c-ce6e-4001-98e7-5e1f956fbe4f",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[299827, 7753, 323, 7, 41, "Input",ExpressionUUID->"f6d415fc-8dba-420e-9435-45a244a1eba0",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[300153, 7762, 1362, 43, 44, "Output",ExpressionUUID->"588a8df2-02ee-4b33-8447-9305386eeeed",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[301552, 7810, 536, 14, 61, "Input",ExpressionUUID->"e63d10ec-0fb3-4b3c-b201-fb089bf6d26e",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[302091, 7826, 950, 29, 64, "Output",ExpressionUUID->"b14c3c70-43f8-4b51-ad25-3a6f2c0d823e",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[303078, 7860, 446, 12, 61, "Input",ExpressionUUID->"650cb741-5fe6-43bb-8a5f-5e0b33f73ffd",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[303527, 7874, 9972, 284, 241, "Output",ExpressionUUID->"f7d87a84-e09f-47e8-981a-a4a592802d5a",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[313536, 8163, 318, 7, 41, "Input",ExpressionUUID->"3e0fedcf-2304-402f-a1b2-9b98ad5e79c0",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[313857, 8172, 1676, 51, 63, "Output",ExpressionUUID->"8d0dd178-d66d-458f-a070-7d0c56ecc429",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[315570, 8228, 573, 13, 84, "Input",ExpressionUUID->"be573577-7372-4581-8485-04941c5c2751",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[316146, 8243, 520, 11, 41, "Output",ExpressionUUID->"f4cfe3c5-09dc-4882-99a1-ea279cf84596",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[316703, 8259, 1409, 34, 105, "Input",ExpressionUUID->"8867e786-771b-4913-8b46-89ea8705ede1",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[318115, 8295, 3295, 88, 140, "Output",ExpressionUUID->"2c88202c-3490-42c9-a087-929cc9e43650",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[321447, 8388, 398, 10, 59, "Input",ExpressionUUID->"5ab1bfb1-e857-4601-8ae0-89e851a9ddba",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[321848, 8400, 973, 29, 64, "Output",ExpressionUUID->"03a3540a-d627-4146-823c-e62b4f8408fa",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[322858, 8434, 1344, 34, 101, "Input",ExpressionUUID->"2ba5b0c2-701b-47d0-8b25-2bf379e5fb22",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[324205, 8470, 6764, 232, 158, "Output",ExpressionUUID->"b6091a3e-88ba-451e-93ac-7e91cf5b790c",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[331006, 8707, 263, 5, 41, "Input",ExpressionUUID->"19b8a870-afdd-4926-9a42-914847b011f5",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[331272, 8714, 2017, 63, 64, "Output",ExpressionUUID->"17706a53-cb4d-4e60-a754-9e48e2e7e10e",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[333326, 8782, 261, 5, 41, "Input",ExpressionUUID->"dc0d8a44-8e2b-4c55-b40d-be0c0b45c470",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[333590, 8789, 2395, 74, 64, "Output",ExpressionUUID->"a113f039-c115-476d-957b-32fe7c4552a3",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[336022, 8868, 263, 5, 41, "Input",ExpressionUUID->"b8fe0d39-b385-4637-8288-b5645c5dcfaf",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[336288, 8875, 611, 17, 41, "Output",ExpressionUUID->"ec8d5c8f-9dda-424e-8ffb-9a856a837cd0",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[336936, 8897, 258, 5, 41, "Input",ExpressionUUID->"821e1ae1-f7d7-4125-99ea-90b83575f97d",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[337197, 8904, 1132, 34, 63, "Output",ExpressionUUID->"1c082e15-32bd-419d-a684-79874c061e31",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[338366, 8943, 1229, 33, 107, "Input",ExpressionUUID->"65bb3f10-5717-4354-b7b3-fa659d76bd73",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[339598, 8978, 1977, 58, 81, "Output",ExpressionUUID->"affa503f-7357-4af1-9d6b-cae552db49f9",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[341612, 9041, 1099, 24, 168, "Input",ExpressionUUID->"66d33b87-a4ae-4c90-ad7f-19039fef2430",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[342714, 9067, 2949, 93, 105, "Output",ExpressionUUID->"efbeb38c-8321-4aac-a8c1-91c1e0fca3b0",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[345700, 9165, 304, 6, 41, "Input",ExpressionUUID->"7927fb78-04fc-49b1-9029-02abf364bc43",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[346007, 9173, 2506, 74, 79, "Output",ExpressionUUID->"bcab7fd0-22c3-471b-958a-f8480059b34d",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[348550, 9252, 661, 14, 84, "Input",ExpressionUUID->"ab65195c-67eb-4bc3-8400-dec9c881e3ef",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[349214, 9268, 4436, 138, 109, "Output",ExpressionUUID->"d26ae7c6-555c-4b2f-affc-bf79a90b061f",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[353687, 9411, 947, 24, 86, "Input",ExpressionUUID->"2ac551d1-4133-4ad5-b45a-d9bdf5ac1a88",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[354637, 9437, 4065, 128, 107, "Output",ExpressionUUID->"f39fc063-030a-45b8-8d2d-e66e31536b91",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[358739, 9570, 400, 9, 41, "Input",ExpressionUUID->"c18962de-3a24-4878-948c-792cb16f4742",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[359142, 9581, 3236, 90, 84, "Output",ExpressionUUID->"9f2cb761-ffe2-40ee-9278-9d854e052bf7",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[362427, 9677, 274, 5, 55, "Section",ExpressionUUID->"d90cfb71-5a29-432c-8751-b0e4b1c19de6",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[CellGroupData[{
Cell[362726, 9686, 855, 20, 84, "Input",ExpressionUUID->"822d9448-9c6d-4985-b014-993ae707b562"],
Cell[363584, 9708, 625, 18, 70, "Output",ExpressionUUID->"4df51746-dc15-4dbc-866a-9005fa41ba23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[364246, 9731, 764, 19, 84, "Input",ExpressionUUID->"20732a45-4fc7-4171-b788-0f43c45508d8"],
Cell[365013, 9752, 555, 16, 70, "Output",ExpressionUUID->"41e7f7e8-fb87-4b1f-b492-2d73080568bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[365605, 9773, 1124, 32, 102, "Input",ExpressionUUID->"5f30c698-aaf6-43e8-be72-1b465b5cdc4a",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[366732, 9807, 938, 28, 70, "Output",ExpressionUUID->"557754ee-3a04-46a8-84cc-3aebefa06285",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[367707, 9840, 843, 20, 120, "Input",ExpressionUUID->"874e3867-2482-48d4-953b-51b6f57a44a8",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[368553, 9862, 610, 15, 70, "Output",ExpressionUUID->"a09fe1cd-a42e-49a9-b40e-e8e0ccf7e254",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[369200, 9882, 461, 9, 84, "Input",ExpressionUUID->"766a5ffb-ece8-47fd-866c-81dffc49abd2",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[369664, 9893, 362, 7, 70, "Output",ExpressionUUID->"7315f221-4c6b-496c-a043-9425ae5ee22a",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[370063, 9905, 463, 9, 84, "Input",ExpressionUUID->"e0b76b1b-d1dd-44ea-9281-ad66381295fb",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[370529, 9916, 361, 7, 70, "Output",ExpressionUUID->"7aab8b08-ba03-4af5-a989-1895b778babd",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[370927, 9928, 702, 18, 63, "Input",ExpressionUUID->"a4f13839-cc82-46e2-a17c-b0c837de4b1f",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[371632, 9948, 604, 16, 70, "Output",ExpressionUUID->"6d86a113-a8fb-454a-b1a7-3a7c10f51b7b",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[372239, 9966, 560, 15, 70, "Output",ExpressionUUID->"764902ce-69e0-49f0-a640-8c91a003b94d",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[372836, 9986, 752, 18, 63, "Input",ExpressionUUID->"72680ea5-ff97-4484-a28e-272dddf22a73",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[373591, 10006, 559, 14, 70, "Output",ExpressionUUID->"25cb06e2-dead-4698-b898-c8e7db3b6768",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[374153, 10022, 514, 13, 70, "Output",ExpressionUUID->"61b8557e-5699-49e7-ae94-bc2b912bad9e",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[374704, 10040, 1055, 26, 84, "Input",ExpressionUUID->"555a72e8-e147-4ff9-8945-b185254604f3",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[375762, 10068, 636, 14, 70, "Message",ExpressionUUID->"bcd1134a-2c75-4d6c-bb5e-bd99117d846f",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[376401, 10084, 878, 25, 70, "Output",ExpressionUUID->"5bf95255-4a9c-402c-85e8-d7ad46066296",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[377316, 10114, 1126, 26, 147, "Input",ExpressionUUID->"2fdca889-3a2b-4e53-afb6-52a9d6e8cc68",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[378445, 10142, 1209, 37, 70, "Output",ExpressionUUID->"aa5c7f9e-a4da-4c2f-a28c-fbbb9c5a261f",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[379691, 10184, 473, 12, 41, "Input",ExpressionUUID->"2ebad560-5c8f-432f-8a83-2e9c46040c4e",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[380167, 10198, 1201, 36, 70, "Output",ExpressionUUID->"cf44a445-d46c-4e25-aa2b-046bb99b7e67",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[381405, 10239, 778, 17, 84, "Input",ExpressionUUID->"461e54fb-5576-4ef1-9742-c89e4e702820",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[382186, 10258, 959, 28, 70, "Output",ExpressionUUID->"4d290f76-2482-4c50-a959-2b0737f36866",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[383148, 10288, 1932, 57, 70, "Output",ExpressionUUID->"16a34782-59e9-494b-84fa-eabfa23a015c",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[385083, 10347, 3515, 104, 70, "Output",ExpressionUUID->"5ebe6fb4-9aa3-4bc1-82c1-b09b10311ce9",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[388635, 10456, 285, 6, 41, "Input",ExpressionUUID->"eeeaa02d-c3ca-4f32-8eb2-aead0ae2dd6a",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[388923, 10464, 13576, 316, 70, "Output",ExpressionUUID->"cd2bcc54-aa7f-4f07-a66a-de8ad4bbdf9a",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[402536, 10785, 658, 14, 98, "Input",ExpressionUUID->"12791815-9114-4701-8db0-29997e9bb999",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[403197, 10801, 550, 14, 70, "Output",ExpressionUUID->"14289971-16f3-459b-9cb7-819c5396978a",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[403784, 10820, 439, 11, 41, "Input",ExpressionUUID->"2dc1faac-da57-49f3-88b9-9ed84db93a7f",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[404226, 10833, 583, 14, 70, "Output",ExpressionUUID->"321d7cb1-74ae-4896-8c51-12be9fd80721",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[404846, 10852, 559, 13, 41, "Input",ExpressionUUID->"aa9020e1-2704-4b97-9ee1-43b379d04b64",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[405408, 10867, 560, 13, 70, "Output",ExpressionUUID->"8be75064-5089-4b66-96d5-cc22e9dd53ed",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[406005, 10885, 1609, 38, 168, "Input",ExpressionUUID->"63e13514-a2cd-487f-a32a-8fa8bd3f153a",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[407617, 10925, 966, 28, 70, "Output",ExpressionUUID->"b1b91dd7-f1f1-4d9c-9d20-08b87ffc25df",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[408586, 10955, 964, 28, 70, "Output",ExpressionUUID->"fb951509-adfb-4ff5-8cf0-dd07116e3a35",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[409553, 10985, 994, 25, 70, "Output",ExpressionUUID->"a95ff383-3605-4a0b-9647-add9aa979a04",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[410584, 11015, 724, 14, 105, "Input",ExpressionUUID->"d495a042-af22-4f7b-b565-098856449ac1",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[411311, 11031, 1371, 40, 70, "Output",ExpressionUUID->"5294d113-d220-4cea-bc2f-2ae02f9d9248",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[412719, 11076, 572, 12, 84, "Input",ExpressionUUID->"243ced67-1ad4-48b3-a8b0-ba9b3b84174e",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[413294, 11090, 1018, 30, 70, "Output",ExpressionUUID->"b8cdbfe6-ae15-4769-b216-69e038e1ca4b",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[414349, 11125, 511, 9, 84, "Input",ExpressionUUID->"5b9e1f17-b8a8-4b8a-b61b-103cf52ed164",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[414863, 11136, 1026, 30, 70, "Output",ExpressionUUID->"213e7278-8949-4f8f-a9f2-b81ca038bc12",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[415926, 11171, 1134, 34, 100, "Input",ExpressionUUID->"9e549c06-9ae1-404c-b58a-e7dcde50072c",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[417063, 11207, 1042, 31, 70, "Output",ExpressionUUID->"85759400-9757-4ffc-983a-6658530ab0f6",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[418142, 11243, 721, 14, 105, "Input",ExpressionUUID->"55a510d7-2756-44a5-88a1-4b0c0dd5f11e",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[418866, 11259, 1365, 40, 70, "Output",ExpressionUUID->"f5437ad7-17e1-4fa5-ae5b-456883e52865",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[420268, 11304, 307, 6, 41, "Input",ExpressionUUID->"ef36bdde-ad68-4137-a3c3-157ac61723e8",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[420578, 11312, 1389, 40, 70, "Output",ExpressionUUID->"aa5364ae-00ed-47e1-a082-7f0ebbc0ad1f",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[422004, 11357, 690, 14, 105, "Input",ExpressionUUID->"aad0376d-e76f-4cab-915c-3256b5b3b993",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[422697, 11373, 1780, 63, 70, "Output",ExpressionUUID->"bf9ebb9d-3f44-42be-be14-e0cf72aa16c6",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[424514, 11441, 786, 22, 41, "Input",ExpressionUUID->"15f8a6a6-ac74-4be1-9861-59aea8f2a175",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[425303, 11465, 830, 25, 70, "Output",ExpressionUUID->"a6d39855-e367-4e4f-809c-5652ad7bd25f",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[426170, 11495, 962, 25, 84, "Input",ExpressionUUID->"9a8e964b-9dd4-4450-b609-87b1de0a4afc",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[427135, 11522, 485, 12, 70, "Output",ExpressionUUID->"60848007-1945-4014-8fb1-fa0642c6612a",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[427657, 11539, 403, 10, 41, "Input",ExpressionUUID->"94817c71-54e9-47a5-9d07-d03e8a9e44e5",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[428063, 11551, 325, 6, 70, "Output",ExpressionUUID->"f4633fbb-e0cd-434e-9237-52dfd5382c32",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[428425, 11562, 964, 25, 84, "Input",ExpressionUUID->"c106738a-509a-48ca-ad39-b3fad51788da",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[429392, 11589, 449, 12, 70, "Output",ExpressionUUID->"662be3c1-100d-4196-8fe3-af2ebb8e8566",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[429878, 11606, 453, 11, 41, "Input",ExpressionUUID->"1fc51d38-94a5-47c5-a9d9-766cd8650b1c",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[430334, 11619, 323, 6, 70, "Output",ExpressionUUID->"f8ac4837-dae3-4ad7-a022-7458c618eee2",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[430694, 11630, 962, 25, 84, "Input",ExpressionUUID->"69bf11f0-458d-4ac2-9b87-25dc9fc7cfda",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[431659, 11657, 454, 11, 70, "Output",ExpressionUUID->"ba75c224-16f5-4b8b-a62f-4db8aa991098",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[432150, 11673, 501, 11, 41, "Input",ExpressionUUID->"fb90d133-a091-4137-bfe9-c5fabf82888c",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[432654, 11686, 328, 6, 70, "Output",ExpressionUUID->"a56d3bb5-fa7a-4d76-9fce-a272f6be07ce",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[433019, 11697, 1380, 32, 168, "Input",ExpressionUUID->"aa4d5b35-9efa-40e4-a841-562124f712ba",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[434402, 11731, 890, 27, 70, "Output",ExpressionUUID->"6bf7bee8-3f10-489e-9fb6-5cdf46bdcd1b",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[435329, 11763, 502, 8, 84, "Input",ExpressionUUID->"e6e69c02-9b49-417f-a43f-61ede7a04102",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[435834, 11773, 621, 14, 70, "Output",ExpressionUUID->"e1aac56c-44e6-4dbf-bdd8-6231c56fd491",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[436492, 11792, 1032, 22, 168, "Input",ExpressionUUID->"a2e40eeb-f5ba-4714-8e77-58872298ac90",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[437527, 11816, 1089, 33, 70, "Output",ExpressionUUID->"bac9fcff-6b27-4064-8ec8-20d0aaf47b4d",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[438653, 11854, 357, 8, 41, "Input",ExpressionUUID->"c708c8ce-8160-44eb-bcf3-4f7c38a5d028",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[439013, 11864, 970, 17, 70, "Message",ExpressionUUID->"a67d283d-ca7d-4ca5-a421-e22956231c49",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[439986, 11883, 970, 17, 70, "Message",ExpressionUUID->"ae26bb45-c328-4936-8c95-05e6954d8e71",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[440959, 11902, 7798, 239, 70, "Output",ExpressionUUID->"16f44572-a76b-42ff-b989-6e2ee9ffe36a",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[448794, 12146, 1007, 25, 105, "Input",ExpressionUUID->"fe5cf3a4-ce67-4e97-85da-c30594d56764",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[449804, 12173, 1180, 34, 70, "Output",ExpressionUUID->"fd69be85-ac49-4a3f-a024-de27ac5f4579",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[451021, 12212, 366, 9, 58, "Input",ExpressionUUID->"839e1f59-f032-4afd-a86e-c997943383e3",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[451390, 12223, 1122, 33, 70, "Output",ExpressionUUID->"7a466c1a-4728-4dec-a74b-f82a7e05c57a",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[452549, 12261, 547, 11, 105, "Input",ExpressionUUID->"69df3648-fa61-4e7a-89a0-453b8680e631",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[453099, 12274, 1080, 30, 70, "Output",ExpressionUUID->"a73a93e8-a67f-41c4-b327-83bff27082f2",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[454228, 12310, 348, 7, 55, "Section",ExpressionUUID->"8568e8d8-e287-4da5-82b0-319294daa022"],
Cell[454579, 12319, 844, 23, 168, "Input",ExpressionUUID->"b3512920-ed63-42dd-b02f-b36ee08e4269"],
Cell[CellGroupData[{
Cell[455448, 12346, 1156, 30, 278, "Input",ExpressionUUID->"1c2b22a6-ef34-4050-92b9-8e684f0d186b"],
Cell[456607, 12378, 1041, 35, 121, "Output",ExpressionUUID->"20d50fa8-6ac4-46e3-8661-53963fb8d8de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[457685, 12418, 1089, 23, 168, "Input",ExpressionUUID->"5466a0ca-2dbb-4d98-a032-9d59a78d237d"],
Cell[458777, 12443, 3348, 112, 291, "Output",ExpressionUUID->"8c31ac0d-d3f5-44e2-b619-5734d8824d91"]
}, Open  ]],
Cell[462140, 12558, 7151, 193, 349, "Input",ExpressionUUID->"790b0abd-48a5-404f-9489-204a732951f9"],
Cell[CellGroupData[{
Cell[469316, 12755, 283, 6, 41, "Input",ExpressionUUID->"56beb662-62eb-4d1e-919a-502c20517141"],
Cell[469602, 12763, 6580, 182, 174, "Output",ExpressionUUID->"300453f6-9f0b-457f-b91a-f9ea5be2a199"]
}, Open  ]],
Cell[CellGroupData[{
Cell[476219, 12950, 250, 5, 41, "Input",ExpressionUUID->"6b13ee7d-64af-43ce-a92c-99966fed25f7"],
Cell[476472, 12957, 7233, 224, 149, "Output",ExpressionUUID->"2f8dd62b-d37b-4bb7-aa34-4fa755a79a64"]
}, Open  ]],
Cell[CellGroupData[{
Cell[483742, 13186, 863, 26, 56, "Input",ExpressionUUID->"dc79d8dd-6da0-4721-aaf8-724fb18360bd"],
Cell[484608, 13214, 636, 19, 45, "Output",ExpressionUUID->"8fcd406c-f2a4-4c20-83ee-0a57d1e750a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[485281, 13238, 1501, 39, 142, "Input",ExpressionUUID->"c156c174-06f3-48c3-ac00-0b9eb4ad371c"],
Cell[486785, 13279, 444, 11, 45, "Output",ExpressionUUID->"7e5d5e63-d9a1-4288-85db-ba9827cfbbb2"],
Cell[487232, 13292, 827, 25, 45, "Output",ExpressionUUID->"e92a77c2-46b5-4aad-bb80-96c58576d627"]
}, Open  ]],
Cell[CellGroupData[{
Cell[488096, 13322, 869, 24, 44, "Input",ExpressionUUID->"53798f82-6681-434b-8753-3fa42ef4e052"],
Cell[488968, 13348, 683, 22, 64, "Output",ExpressionUUID->"3823ae0a-2cb6-4f1a-b850-250068ffb531"]
}, Open  ]],
Cell[CellGroupData[{
Cell[489688, 13375, 1559, 37, 174, "Input",ExpressionUUID->"82f5c7b6-7aa9-44ce-bb0f-8eac355eea0b"],
Cell[491250, 13414, 1849, 60, 113, "Output",ExpressionUUID->"77b2723f-2407-4544-b407-804d95050ea7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[493136, 13479, 271, 6, 41, "Input",ExpressionUUID->"98a89708-6ff2-4a97-b165-dd42a146dbf5"],
Cell[493410, 13487, 4920, 162, 111, "Output",ExpressionUUID->"87f4bf9b-e4da-40a2-91b5-062971f6674a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[498367, 13654, 1145, 30, 84, "Input",ExpressionUUID->"d36632ca-0c55-4722-9d0c-85a03de88179"],
Cell[499515, 13686, 1288, 38, 65, "Output",ExpressionUUID->"5406fa35-8384-4e5b-a429-cf91b0ab773c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[500840, 13729, 593, 13, 84, "Input",ExpressionUUID->"0d2e0027-90d8-4b96-921b-c0b69541e01f"],
Cell[501436, 13744, 6058, 196, 159, "Output",ExpressionUUID->"86e1ecf9-3571-4417-ac15-f9893ab0b30b"]
}, Open  ]],
Cell[507509, 13943, 175, 3, 41, "Input",ExpressionUUID->"9bc9e777-eb73-48c8-9013-95a438b96c1b"],
Cell[CellGroupData[{
Cell[507709, 13950, 446, 10, 41, "Input",ExpressionUUID->"7a1f6268-1f0a-4757-92c3-01395ab49268"],
Cell[508158, 13962, 1558, 51, 60, "Output",ExpressionUUID->"b38b553e-5b92-4fdf-96c5-4c8b0477b6e9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[509753, 14018, 427, 9, 63, "Input",ExpressionUUID->"425f2845-d3ff-4954-bc38-4182f57a95db"],
Cell[510183, 14029, 417, 10, 45, "Output",ExpressionUUID->"91a28601-55f1-4a76-8cb1-d7e68c0809b1"],
Cell[510603, 14041, 609, 18, 45, "Output",ExpressionUUID->"578f97f7-3c7f-41c3-9f56-223e08bc383d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[511249, 14064, 1282, 34, 65, "Input",ExpressionUUID->"70f7be95-48f3-4cdb-a48e-d575d7e401a9"],
Cell[512534, 14100, 733, 22, 64, "Output",ExpressionUUID->"7ac27cf7-5986-455b-8c74-148b4aa6eb3f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[513304, 14127, 1947, 47, 174, "Input",ExpressionUUID->"ccf2a8b3-396c-4290-87e7-71ba8103836a"],
Cell[515254, 14176, 1614, 52, 89, "Output",ExpressionUUID->"192efab3-347b-4e7f-975e-d5f7d9dddaac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[516905, 14233, 724, 17, 84, "Input",ExpressionUUID->"005d163e-59f4-46d7-8537-bbf2f0f3a6fb"],
Cell[517632, 14252, 1057, 32, 65, "Output",ExpressionUUID->"523229f3-1b78-494a-a821-5c5295476c4f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[518726, 14289, 420, 11, 41, "Input",ExpressionUUID->"11949d89-051c-498d-86b5-0ff607a351dd"],
Cell[519149, 14302, 5772, 189, 159, "Output",ExpressionUUID->"53f3a3f3-62f3-4988-90fb-ef6d1ab9e96d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[524958, 14496, 718, 19, 41, "Input",ExpressionUUID->"cabc5d9a-c510-4848-854a-7651c777a01d"],
Cell[525679, 14517, 1169, 20, 31, "Message",ExpressionUUID->"905742ef-35b1-4542-b834-c2d17b0aed99"],
Cell[526851, 14539, 6277, 194, 159, "Output",ExpressionUUID->"cbd8f080-91e3-4459-b0c3-192be0463822"]
}, Open  ]],
Cell[CellGroupData[{
Cell[533165, 14738, 1155, 32, 101, "Input",ExpressionUUID->"35d320e1-e1f5-4637-8c14-3ff2d96ee7d9"],
Cell[534323, 14772, 1104, 36, 58, "Output",ExpressionUUID->"de6d00e7-a0a7-4f27-8b9d-3d0a05ea2195"]
}, Open  ]],
Cell[CellGroupData[{
Cell[535464, 14813, 279, 6, 41, "Input",ExpressionUUID->"e1b4e368-580b-4cc4-b929-260ee4c5cb52"],
Cell[535746, 14821, 1434, 49, 60, "Output",ExpressionUUID->"44af5e34-ef48-4146-9208-752721fa24e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[537217, 14875, 981, 26, 84, "Input",ExpressionUUID->"e884c3b5-9aa3-49e0-8747-c09151a2523e"],
Cell[538201, 14903, 837, 27, 41, "Output",ExpressionUUID->"bac7b271-a3bc-49e6-b9a7-cd98ef46d4a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[539075, 14935, 588, 17, 44, "Input",ExpressionUUID->"9ebc9952-2ccd-49b9-89dd-3ce7dcaca80e"],
Cell[539666, 14954, 820, 27, 60, "Output",ExpressionUUID->"f78baae8-1008-453a-8076-5fb7db3be7c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[540523, 14986, 256, 5, 41, "Input",ExpressionUUID->"146e69cb-7eda-4694-8eb0-76e5ea874022"],
Cell[540782, 14993, 370, 10, 45, "Output",ExpressionUUID->"4094b7ad-0366-40b4-b68b-cd76f8ebf6c1"]
}, Open  ]],
Cell[541167, 15006, 900, 25, 44, "Input",ExpressionUUID->"c128853f-b26f-4507-89cc-2ca017ed756c"],
Cell[542070, 15033, 786, 27, 64, "Output",ExpressionUUID->"b5447e04-f673-41d4-a547-6fc26f547cd3"]
}, Closed]],
Cell[CellGroupData[{
Cell[542893, 15065, 1276, 35, 62, "Input",ExpressionUUID->"e6019c05-f8e8-46e6-8be4-3c54688502e4"],
Cell[544172, 15102, 696, 22, 64, "Output",ExpressionUUID->"590344d5-cfe7-416c-9866-72dcf7de41fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[544905, 15129, 542, 14, 63, "Input",ExpressionUUID->"681d186c-2457-4626-bb82-7caf589a9fae"],
Cell[545450, 15145, 345, 9, 45, "Output",ExpressionUUID->"670c350f-5d4c-4adc-bcd7-f1cb3b3bda36"],
Cell[545798, 15156, 537, 17, 45, "Output",ExpressionUUID->"8f531bb0-5380-4a8b-809c-9ab034b49ad9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[546372, 15178, 2170, 53, 195, "Input",ExpressionUUID->"dca62657-583c-4726-958e-c5de052baf3a"],
Cell[548545, 15233, 1826, 59, 113, "Output",ExpressionUUID->"9d9ef914-5602-4602-b159-2f8cc565ee9d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[550408, 15297, 273, 6, 41, "Input",ExpressionUUID->"e8b2fa0c-6773-48cf-bc7b-c1c6a4b99220"],
Cell[550684, 15305, 1483, 49, 60, "Output",ExpressionUUID->"ecdc3f54-a74a-44f8-8432-933fb30580ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[552204, 15359, 198, 4, 41, "Input",ExpressionUUID->"42c9a135-a9d8-4965-b0ad-3f546c95e881"],
Cell[552405, 15365, 1029, 34, 58, "Output",ExpressionUUID->"d0d5f210-89a7-49f8-8a1e-5b347341c35b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[553471, 15404, 273, 6, 41, "Input",ExpressionUUID->"524e8888-b640-4a30-811f-0557a11c6e12"],
Cell[553747, 15412, 4898, 162, 111, "Output",ExpressionUUID->"3936d592-26d2-4376-b9ad-1db31d63c10c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[558682, 15579, 692, 16, 84, "Input",ExpressionUUID->"b0411a7e-bc3b-4de7-9115-f7f1c5d6b03b"],
Cell[559377, 15597, 1453, 44, 75, "Output",ExpressionUUID->"c713d0db-2ce8-4753-bc68-bc8a0a6066b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[560867, 15646, 1110, 26, 189, "Input",ExpressionUUID->"e0bb2274-374e-485b-917c-379e772b4d3d"],
Cell[561980, 15674, 1071, 34, 105, "Output",ExpressionUUID->"2e7bba11-762e-4af4-be99-8d58e89a5238"]
}, Open  ]],
Cell[CellGroupData[{
Cell[563088, 15713, 908, 21, 84, "Input",ExpressionUUID->"3f195a3c-c5c5-4ddf-90e8-2c81adcde194"],
Cell[563999, 15736, 411, 10, 28, "Message",ExpressionUUID->"f695314b-9347-4634-b9f0-d55a073cfc73"],
Cell[564413, 15748, 899, 17, 46, "Message",ExpressionUUID->"7845f862-1d6c-4466-885d-b353e3d7e8f5"],
Cell[565315, 15767, 85414, 1480, 70, "Output",ExpressionUUID->"fec7cf21-eb7f-4d15-817b-4ea78bd7f62c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[650766, 17252, 555, 15, 41, "Input",ExpressionUUID->"47ef2b9c-c31d-437b-bd21-5130b7163dc0"],
Cell[651324, 17269, 256158, 4242, 287, "Output",ExpressionUUID->"1bf98d81-a0b3-4af3-8836-7afcddd6aacd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[907519, 21516, 621, 16, 63, "Input",ExpressionUUID->"789c6d81-8111-47bf-aa2c-3ed5a3aca786"],
Cell[908143, 21534, 2035, 43, 314, "Output",ExpressionUUID->"cd8b89ef-5ff6-49ea-a11e-519dfe829b59"]
}, Open  ]],
Cell[CellGroupData[{
Cell[910215, 21582, 554, 15, 41, "Input",ExpressionUUID->"b510c9cd-7606-48d0-a01f-1553a5ae9a23"],
Cell[910772, 21599, 245600, 4071, 279, "Output",ExpressionUUID->"dd3ec398-0704-42a3-a71b-f2cc19bb25ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1156409, 25675, 623, 16, 63, "Input",ExpressionUUID->"3d2eda38-f929-4a5e-b75b-4ba2b0f862b2"],
Cell[1157035, 25693, 2034, 43, 314, "Output",ExpressionUUID->"f045e66e-877d-461f-bcc9-d0f8eed4a5f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1159106, 25741, 372, 8, 107, "Section",ExpressionUUID->"1fda6e40-0e19-497b-8e2c-dca9ea0dae8c",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[CellGroupData[{
Cell[1159503, 25753, 934, 22, 105, "Input",ExpressionUUID->"95823b80-21e7-401a-b04c-8125585841c1",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1160440, 25777, 2302, 66, 122, "Output",ExpressionUUID->"f25cfc94-b441-468b-915f-a72ef5101d8d",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[1162779, 25848, 2488, 59, 168, "Input",ExpressionUUID->"11839d4b-dfdc-4cbc-a215-f74a12740975",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1165270, 25909, 14502, 399, 192, "Output",ExpressionUUID->"0ded3103-e97f-4684-91d8-7cc66f004e0a",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}]
}, Open  ]],
Cell[1179787, 26311, 377, 8, 41, "Input",ExpressionUUID->"fb2e806c-cfc4-49b8-bc00-e826e11fe6e9",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1180167, 26321, 544, 11, 105, "Input",ExpressionUUID->"08fbfac6-b5dc-4b0a-8ea2-e235827dc6b4"],
Cell[1180714, 26334, 17675, 539, 165, "Output",ExpressionUUID->"d007a1d8-a84c-4682-9ef6-f027ba86fc46"],
Cell[CellGroupData[{
Cell[1198414, 26877, 691, 16, 63, "Input",ExpressionUUID->"ade4afc1-0489-4165-91b3-ecec13fc3146"],
Cell[1199108, 26895, 273, 7, 45, "Output",ExpressionUUID->"1787b0bd-bb4a-4bc7-9757-c175a228ec4d"]
}, Open  ]],
Cell[1199396, 26905, 711, 18, 41, "Input",ExpressionUUID->"05d68be4-7389-429a-9fa4-6f4ab949acb5"],
Cell[1200110, 26925, 47736, 1314, 247, "Output",ExpressionUUID->"d6fbe02d-d076-45e1-ab90-6ed77367d564"],
Cell[1247849, 28241, 1114, 29, 63, "Input",ExpressionUUID->"058bfb25-8d9f-4b55-8f54-340ab7cf3eb5"],
Cell[1248966, 28272, 958, 29, 76, "Output",ExpressionUUID->"71780898-ef1d-48f5-8d66-2cdad898f65f"]
}, Closed]]
}
]
*)

