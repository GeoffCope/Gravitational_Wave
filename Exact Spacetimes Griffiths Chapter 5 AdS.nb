(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    506190,      10805]
NotebookOptionsPosition[    488108,      10496]
NotebookOutlinePosition[    488570,      10513]
CellTagsIndexPosition[    488527,      10510]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "Utilities`CleanSlate`"}], "\[IndentingNewLine]", 
 RowBox[{"CleanSlate", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearInOut", "[", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pdConv", "[", "f_", "]"}], ":=", 
   RowBox[{"TraditionalForm", "[", 
    RowBox[{"f", "/.", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Derivative", "[", "inds__", "]"}], "[", "g_", "]"}], "[", 
       "vars__", "]"}], "\[RuleDelayed]", 
      RowBox[{"Apply", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Defer", "[", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"g", "[", "vars", "]"}], ",", "##"}], "]"}], "]"}], "&"}],
         ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "vars", "}"}], ",", 
            RowBox[{"{", "inds", "}"}]}], "}"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"var_", ",", "0"}], "}"}], "\[RuleDelayed]", 
            RowBox[{"Sequence", "[", "]"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"var_", ",", "1"}], "}"}], "\[RuleDelayed]", 
            RowBox[{"{", "var", "}"}]}]}], "}"}]}]}], "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<VariationalMethods`\>\"", "]"}]}], "Input",
 CellLabel->
  "In[157]:=",ExpressionUUID->"9d4facb3-3c0e-4ec9-b1c3-adeaebdbf996"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  (CleanSlate) Contexts purged: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"Global`\"\>", "}"}]}],
  SequenceForm["  (CleanSlate) Contexts purged: ", {"Global`"}],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[157]:=",ExpressionUUID->"7dd34791-0fe5-47d9-8941-ff4b8dbe0799"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  (CleanSlate) Approximate kernel memory recovered: \"\>", 
   "\[InvisibleSpace]", "\<\"568 Kb\"\>"}],
  SequenceForm[
  "  (CleanSlate) Approximate kernel memory recovered: ", "568 Kb"],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[157]:=",ExpressionUUID->"0d4f41d4-02e6-42fc-af70-6166241df672"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Utilities`CleanSlate`\"\>", ",", "\<\"Notation`\"\>", 
   ",", "\<\"GeneralRelativityTensors`\"\>", 
   ",", "\<\"VariationalMethods`\"\>", 
   ",", "\<\"GeneralRelativityTensors`CommonTensors`\"\>", 
   ",", "\<\"GeneralRelativityTensors`TensorDerivatives`\"\>", 
   ",", "\<\"GeneralRelativityTensors`TensorManipulation`\"\>", 
   ",", "\<\"GeneralRelativityTensors`TensorDefinitions`\"\>", 
   ",", "\<\"GeneralRelativityTensors`Utils`\"\>", ",", "\<\"System`\"\>", 
   ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellLabel->"Out[0]=",ExpressionUUID->"e5e8b233-0c5c-4063-87ed-527a53d46465"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"<<", "Notation`"}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"0ac4719c-1d18-4851-ad39-8dc59995f2d1"],

Cell[BoxData[{
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["Z", "0"]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["Z", "1"]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["Z", "2"]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["Z", "3"]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["Z", "4"]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    OverscriptBox["\[Eta]", "~"]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["\[Eta]", "0"]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    OverscriptBox["x", "~"]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["t", 
     RowBox[{"-", "1"}]]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["t", "b"]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["z", "b"]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Symbolize", "[", 
    TemplateBox[{
      RowBox[{"d", 
        OverscriptBox["x", "~"]}]},
     "NotationTemplateTag"], "]"}], " ", "*)"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "figure", " ", "out", " ", "what", " ", "the", " ", "problem", " ", "is", 
    " ", "with", " ", "this", " ", "one"}], " ", "*)"}], " "}]}], "Input",Expr\
essionUUID->"04e1391e-800a-4119-b7cd-8562a6c43873"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CreatePalette", "[", 
  RowBox[{"{", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PasteButton", "[", 
     SubscriptBox["Z", "0"], "]"}], ",", "\[IndentingNewLine]", " ", 
    RowBox[{"PasteButton", "[", 
     SubscriptBox["Z", "1"], "]"}], " ", ",", " ", "\[IndentingNewLine]", 
    RowBox[{"PasteButton", "[", 
     SubscriptBox["Z", "2"], "]"}], " ", ",", "\[IndentingNewLine]", 
    RowBox[{"PasteButton", "[", 
     SubscriptBox["Z", "3"], "]"}], " ", ",", "\[IndentingNewLine]", 
    RowBox[{"PasteButton", "[", 
     SubscriptBox["Z", "4"], "]"}], " ", ",", "\[IndentingNewLine]", 
    RowBox[{"PasteButton", "[", 
     OverscriptBox["\[Eta]", "~"], "]"}], " ", ",", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"PasteButton", "[", 
     SubscriptBox["\[Eta]", "0"], "]"}], " ", ",", " ", "\[IndentingNewLine]", 
    RowBox[{"PasteButton", "[", 
     OverscriptBox["x", "~"], "]"}], " ", ",", "\[IndentingNewLine]", 
    RowBox[{"PasteButton", "[", 
     SubscriptBox["t", 
      RowBox[{"-", "1"}]], "]"}], " ", ",", " ", "\[IndentingNewLine]", 
    RowBox[{"PasteButton", "[", 
     SubscriptBox["t", "b"], "]"}], " ", ",", " ", "\[IndentingNewLine]", 
    RowBox[{"PasteButton", "[", 
     SubscriptBox["z", "b"], "]"}]}], " ", "\[IndentingNewLine]", "}"}], 
  "]"}]], "Input",
 CellLabel->"In[16]:=",ExpressionUUID->"b603c955-a9e6-407a-bd4b-8fdee938ab6b"],

Cell[BoxData[
 TemplateBox[{
   FrontEndObject[
    LinkObject["qytn6_shm", 3, 1]], 116, 
   "FrontEndObject[LinkObject[\"qytn6_shm\", 3, 1]]", "116", "\"Untitled-6\""},
  "NotebookObjectUnsaved"]], "Output",
 CellLabel->"Out[16]=",ExpressionUUID->"bf25282c-90e9-470e-be39-8f2bbe7f99dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "dtReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dtReplace", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Dt", "[", 
       SubscriptBox["Z", "0"], "]"}], " ", "\[Rule]", " ", 
      SubscriptBox["dZ", "0"]}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", 
       SubscriptBox["Z", "1"], "]"}], " ", "\[Rule]", " ", 
      SubscriptBox["dZ", "1"]}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", 
       SubscriptBox["Z", "2"], "]"}], "\[Rule]", " ", 
      SubscriptBox["dZ", "2"]}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", 
       SubscriptBox["Z", "3"], "]"}], "\[Rule]", " ", 
      SubscriptBox["dZ", "3"]}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", 
       SubscriptBox["Z", "4"], "]"}], " ", "\[Rule]", " ", 
      SubscriptBox["dZ", "4"]}], " ", ",", "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{"Dt", "[", "T", "]"}], "\[Rule]", " ", "dT"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "t", "]"}], "\[Rule]", " ", "dt"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Chi]", "]"}], " ", "\[Rule]", " ", "d\[Chi]"}], 
     " ", ",", " ", "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Theta]", "]"}], " ", "\[Rule]", " ", 
      "d\[Theta]"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Phi]", "]"}], " ", "\[Rule]", " ", "d\[Phi]"}], 
     "  ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Eta]", "]"}], " ", "\[Rule]", " ", "d\[Eta]"}], 
     "  ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "R", "]"}], " ", "\[Rule]", " ", "dR"}], "  ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "x", "]"}], "\[Rule]", " ", "dx"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "y", "]"}], " ", "\[Rule]", " ", "dy"}], " ", ",", 
     " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "z", "]"}], "\[Rule]", " ", "dz"}], "  ", ",", " ", 
     "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{"Dt", "[", "r", "]"}], " ", "\[Rule]", " ", "dr"}], " ", ",", 
     " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Psi]", "]"}], " ", "\[Rule]", " ", "d\[Psi]"}], 
     " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", 
       OverscriptBox["\[Eta]", "~"], "]"}], " ", "\[Rule]", " ", 
      RowBox[{"d", 
       OverscriptBox["\[Eta]", "~"]}]}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", 
       SubscriptBox["\[Eta]", "0"], "]"}], " ", "\[Rule]", " ", 
      SubscriptBox["d\[Eta]", "0"]}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", 
       OverscriptBox["x", "~"], "]"}], " ", "\[Rule]", " ", 
      RowBox[{"d", 
       OverscriptBox["x", "~"]}]}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", 
       SubscriptBox["t", 
        RowBox[{"-", "1"}]], "]"}], "\[Rule]", " ", 
      SubscriptBox["dt", 
       RowBox[{"-", "1"}]]}], " ", ",", " ", "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Rho]", "]"}], "\[Rule]", " ", "d\[Rho]"}], " ", 
     ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", 
       SubscriptBox["t", "b"], "]"}], "\[Rule]", " ", 
      SubscriptBox["dt", "b"]}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", 
       SubscriptBox["z", "b"], "]"}], "\[Rule]", " ", 
      SubscriptBox["dz", "b"]}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"dtReplace", " ", "//", " ", "TableForm"}]}], "Input",
 CellLabel->"In[17]:=",ExpressionUUID->"f3fc48d4-f0c7-43c7-a7bf-71006a3ffd69"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"Dt", "[", 
        SubscriptBox["Z", "0"], "]"}], "\[Rule]", 
       SubscriptBox["dZ", "0"]}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", 
        SubscriptBox["Z", "1"], "]"}], "\[Rule]", 
       SubscriptBox["dZ", "1"]}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", 
        SubscriptBox["Z", "2"], "]"}], "\[Rule]", 
       SubscriptBox["dZ", "2"]}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", 
        SubscriptBox["Z", "3"], "]"}], "\[Rule]", 
       SubscriptBox["dZ", "3"]}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", 
        SubscriptBox["Z", "4"], "]"}], "\[Rule]", 
       SubscriptBox["dZ", "4"]}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "T", "]"}], "\[Rule]", "dT"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "t", "]"}], "\[Rule]", "dt"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Chi]", "]"}], "\[Rule]", "d\[Chi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Theta]", "]"}], "\[Rule]", "d\[Theta]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Phi]", "]"}], "\[Rule]", "d\[Phi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Eta]", "]"}], "\[Rule]", "d\[Eta]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "R", "]"}], "\[Rule]", "dR"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "x", "]"}], "\[Rule]", "dx"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "y", "]"}], "\[Rule]", "dy"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "z", "]"}], "\[Rule]", "dz"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "r", "]"}], "\[Rule]", "dr"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Psi]", "]"}], "\[Rule]", "d\[Psi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", 
        OverscriptBox["\[Eta]", "~"], "]"}], "\[Rule]", 
       RowBox[{"d", " ", 
        OverscriptBox["\[Eta]", "~"]}]}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", 
        SubscriptBox["\[Eta]", "0"], "]"}], "\[Rule]", 
       SubscriptBox["d\[Eta]", "0"]}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", 
        OverscriptBox["x", "~"], "]"}], "\[Rule]", 
       RowBox[{"d", " ", 
        OverscriptBox["x", "~"]}]}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", 
        SubscriptBox["t", 
         RowBox[{"-", "1"}]], "]"}], "\[Rule]", 
       SubscriptBox["dt", 
        RowBox[{"-", "1"}]]}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Rho]", "]"}], "\[Rule]", "d\[Rho]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", 
        SubscriptBox["t", "b"], "]"}], "\[Rule]", 
       SubscriptBox["dt", "b"]}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", 
        SubscriptBox["z", "b"], "]"}], "\[Rule]", 
       SubscriptBox["dz", "b"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[19]//TableForm=",ExpressionUUID->"79e68e6b-8022-481f-a184-\
0209c06baf4e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"a", "/:", 
    RowBox[{"Dt", "[", "a", "]"}], "=", "0"}], "  ", ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"a", " ", "is", " ", "a", " ", "constant"}], ",", " ", 
    RowBox[{
    "so", " ", "differential", " ", "defined", " ", "to", " ", "be", " ", 
     "zero"}], ",", " ", 
    RowBox[{"etc", "."}]}], " ", "*)"}], " "}]], "Input",
 CellLabel->"In[20]:=",ExpressionUUID->"ea340ddd-a511-45b2-a2fb-3cbcb35a81d3"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eulerLagrangeEquations", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eulerLagrangeEquations", "[", 
    RowBox[{"metric_", ",", " ", "variables_", " ", ",", " ", "parameter_"}], 
    " ", "]"}], ":=", " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "q", ",", "qReplace", ",", "\[ScriptCapitalL]", ",", "eqs", ",", 
       "eulerEquations"}], "}"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", "q", "]"}], " ", ";", "\[IndentingNewLine]", 
      RowBox[{"q", " ", "=", " ", "\[IndentingNewLine]", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{"variables", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"{", "parameter", "}"}]}], "]"}], " ", ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "variables", "]"}]}], "}"}]}], "]"}], 
        "]"}]}], " ", ";", "\[IndentingNewLine]", 
      RowBox[{"Clear", "[", "qReplace", "]"}], " ", ";", 
      "\[IndentingNewLine]", 
      RowBox[{"qReplace", " ", "=", " ", "\[IndentingNewLine]", 
       RowBox[{"Thread", "[", "\[IndentingNewLine]", 
        RowBox[{"variables", " ", "\[Rule]", " ", "q"}], " ", "]"}]}], " ", 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Clear", "[", "\[ScriptCapitalL]", "]"}], " ", ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[ScriptCapitalL]", " ", "=", " ", "\[IndentingNewLine]", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"metric", " ", "/.", " ", "qReplace"}], ")"}], "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], " ", "*", "   ", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{"q", ",", "parameter"}], "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{"q", ",", "parameter"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], " ", ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", " ", 
           RowBox[{"Length", "[", "q", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", "q", "]"}]}], "}"}]}], "]"}]}], " ", ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Clear", "[", "eqs", "]"}], " ", ";", "\[IndentingNewLine]", 
      RowBox[{"eqs", " ", "=", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"D", "[", " ", 
            RowBox[{
             RowBox[{"D", "[", " ", 
              RowBox[{"\[ScriptCapitalL]", " ", ",", "  ", 
               RowBox[{
                SubscriptBox["\[PartialD]", "parameter"], 
                RowBox[{"q", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], " ", ",", " ", 
             "parameter"}], " ", "]"}], " ", "-", 
           RowBox[{"D", "[", " ", 
            RowBox[{"\[ScriptCapitalL]", " ", ",", "  ", 
             RowBox[{"q", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "  ", ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "q", "]"}]}], "}"}]}], "]"}], " ", "//", 
        " ", "Expand"}]}], "   ", ";", "\[IndentingNewLine]", 
      RowBox[{"Clear", "[", "eulerEquations", "]"}], " ", ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eulerEquations", " ", "=", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Sum", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"(", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"Expand", "[", 
                RowBox[{"eqs", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "]"}], "[", 
               RowBox[{"[", "i", "]"}], "]"}], " ", "/", " ", 
              RowBox[{"Coefficient", "[", 
               RowBox[{
                RowBox[{"eqs", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], " ", ",", 
                RowBox[{
                 SubscriptBox["\[PartialD]", "parameter"], 
                 RowBox[{
                  SubscriptBox["\[PartialD]", "parameter"], 
                  RowBox[{"q", "[", 
                   RowBox[{"[", "j", "]"}], "]"}]}]}]}], "]"}]}], "   ", 
             ")"}], " ", ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", " ", 
               RowBox[{"Expand", "[", 
                RowBox[{"eqs", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "]"}], "]"}]}], " ", "}"}]}],
            " ", "]"}], " ", ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "  ", "//", " ",
         "Simplify"}]}]}]}], " ", "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellLabel->"In[21]:=",ExpressionUUID->"4449cdf0-1969-42f1-b3bd-c2f3de1ff82e"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"metric", "[", 
    RowBox[{"lineelement_", " ", ",", " ", "differentials_"}], "]"}], ":=", 
   " ", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"i", "\[Equal]", "j"}], " ", ",", 
       RowBox[{"Coefficient", "[", 
        RowBox[{"lineelement", ",", " ", 
         RowBox[{
          RowBox[{"differentials", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", 
          RowBox[{"differentials", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}], "*", 
        RowBox[{"Coefficient", "[", 
         RowBox[{"lineelement", ",", " ", 
          RowBox[{
           RowBox[{"differentials", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", 
           RowBox[{"differentials", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}]}], "]"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "differentials", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "differentials", "]"}]}], "}"}]}], "]"}]}], 
  "  ", ";"}]}], "Input",
 CellLabel->"In[23]:=",ExpressionUUID->"2448a1b2-9d72-4be8-89b8-e8bb740c569d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "hyperboloid5pt1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"hyperboloid5pt1", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"-", " ", 
     SuperscriptBox[
      SubscriptBox["Z", "0"], "2"]}], "+", " ", 
    SuperscriptBox[
     SubscriptBox["Z", "1"], "2"], "+", 
    SuperscriptBox[
     SubscriptBox["Z", "2"], "2"], "+", 
    SuperscriptBox[
     SubscriptBox["Z", "3"], "2"], "-", 
    SuperscriptBox[
     SubscriptBox["Z", "4"], "2"]}], "\[Equal]", " ", 
   RowBox[{"-", " ", 
    SuperscriptBox["a", "2"], " ", 
    RowBox[{"(*", " ", 
     RowBox[{"/.", " ", 
      RowBox[{"a", "\[Rule]", " ", 
       RowBox[{
        SqrtBox[
         FractionBox[
          RowBox[{"-", "3"}], "\[CapitalLambda]"]], "  ", "uncomment", " ", 
        "if", " ", "this", " ", "definition", " ", "is", " ", "needed"}]}]}], 
     " ", "*)"}], " "}]}]}]}], "Input",
 CellLabel->"In[25]:=",ExpressionUUID->"49c18e42-b338-4a9b-ae85-e62c705ecdd0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SubsuperscriptBox["Z", "0", "2"]}], "+", 
   SubsuperscriptBox["Z", "1", "2"], "+", 
   SubsuperscriptBox["Z", "2", "2"], "+", 
   SubsuperscriptBox["Z", "3", "2"], "-", 
   SubsuperscriptBox["Z", "4", "2"]}], "\[Equal]", 
  RowBox[{"-", 
   SuperscriptBox["a", "2"]}]}]], "Output",
 CellLabel->"Out[26]=",ExpressionUUID->"7d0c1892-eacf-4ad6-8350-06cbd7eb73bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "lineElement5pt2", "]"}], "\[IndentingNewLine]", 
 RowBox[{"lineElement5pt2", " ", "=", " ", "\[IndentingNewLine]", " ", 
  RowBox[{
   RowBox[{"-", " ", 
    SuperscriptBox[
     SubscriptBox["dZ", "0"], "2"]}], " ", "+", " ", 
   SuperscriptBox[
    SubscriptBox["dZ", "1"], "2"], " ", "+", " ", 
   SuperscriptBox[
    SubscriptBox["dZ", "2"], "2"], " ", "+", " ", 
   SuperscriptBox[
    SubscriptBox["dZ", "3"], "2"], "-", " ", 
   SuperscriptBox[
    SubscriptBox["dZ", "4"], "2"], " "}]}]}], "Input",
 CellLabel->"In[27]:=",ExpressionUUID->"341426aa-f06c-4031-bf25-e1a4cf2050c9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SubsuperscriptBox["dZ", "0", "2"]}], "+", 
  SubsuperscriptBox["dZ", "1", "2"], "+", 
  SubsuperscriptBox["dZ", "2", "2"], "+", 
  SubsuperscriptBox["dZ", "3", "2"], "-", 
  SubsuperscriptBox["dZ", "4", "2"]}]], "Output",
 CellLabel->"Out[28]=",ExpressionUUID->"dc8b428e-dd9b-4924-9567-468533d6a2a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "transform5pt3", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"transform5pt3", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      SubscriptBox["Z", "0"], "\[Rule]", " ", 
      RowBox[{"a", " ", 
       RowBox[{"Cosh", "[", "r", "]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["T", "a"], "]"}]}]}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "1"], "\[Rule]", " ", 
      RowBox[{"a", " ", 
       RowBox[{"Sinh", "[", "r", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "2"], "\[Rule]", " ", 
      RowBox[{"a", " ", 
       RowBox[{"Sinh", "[", "r", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "3"], "\[Rule]", " ", 
      RowBox[{"a", " ", 
       RowBox[{"Sinh", "[", "r", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "4"], "\[Rule]", " ", 
      RowBox[{"a", " ", 
       RowBox[{"Cosh", "[", "r", "]"}], " ", 
       RowBox[{"Cos", "[", 
        FractionBox["T", "a"], "]"}]}]}]}], " ", "\[IndentingNewLine]", 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"transform5pt3", " ", "//", " ", "TableForm"}]}], "Input",
 CellLabel->"In[29]:=",ExpressionUUID->"b9d264ae-5f05-4fbf-a305-5f2631e7c4c9"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       SubscriptBox["Z", "0"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Cosh", "[", "r", "]"}], " ", 
        RowBox[{"Sin", "[", 
         FractionBox["T", "a"], "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "1"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sinh", "[", "r", "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "2"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sinh", "[", "r", "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "3"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Sinh", "[", "r", "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "4"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Cos", "[", 
         FractionBox["T", "a"], "]"}], " ", 
        RowBox[{"Cosh", "[", "r", "]"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[31]//TableForm=",ExpressionUUID->"bd43ef07-7547-47e4-a21e-\
d0b127023bd4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"hyperboloid5pt1", " ", "//.", " ", "transform5pt3"}], " ", "//", 
  " ", "Simplify", " "}]], "Input",
 CellLabel->"In[32]:=",ExpressionUUID->"0b07f99f-ebea-4af5-ae3c-2669253dfe66"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[32]=",ExpressionUUID->"f6128188-e120-48ac-b61c-7e801100231c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Dt", "[", " ", "transform5pt3", " ", "]"}], " ", "/.", " ", 
   "dtReplace"}], " ", "//", "  ", "TableForm"}]], "Input",
 CellLabel->"In[33]:=",ExpressionUUID->"201aba08-cfcc-47c5-91f6-0053e57f802f"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       SubscriptBox["dZ", "0"], "\[Rule]", 
       RowBox[{
        RowBox[{"dT", " ", 
         RowBox[{"Cos", "[", 
          FractionBox["T", "a"], "]"}], " ", 
         RowBox[{"Cosh", "[", "r", "]"}]}], "+", 
        RowBox[{"a", " ", "dr", " ", 
         RowBox[{"Sin", "[", 
          FractionBox["T", "a"], "]"}], " ", 
         RowBox[{"Sinh", "[", "r", "]"}]}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "1"], "\[Rule]", 
       RowBox[{
        RowBox[{"a", " ", "dr", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cosh", "[", "r", "]"}]}], "-", 
        RowBox[{"a", " ", "d\[Theta]", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sinh", "[", "r", "]"}]}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "2"], "\[Rule]", 
       RowBox[{
        RowBox[{"a", " ", "dr", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Cosh", "[", "r", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"a", " ", "d\[Theta]", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sinh", "[", "r", "]"}]}], "-", 
        RowBox[{"a", " ", "d\[Phi]", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sinh", "[", "r", "]"}]}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "3"], "\[Rule]", 
       RowBox[{
        RowBox[{"a", " ", "dr", " ", 
         RowBox[{"Cosh", "[", "r", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
        RowBox[{"a", " ", "d\[Phi]", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sinh", "[", "r", "]"}]}], "+", 
        RowBox[{"a", " ", "d\[Theta]", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sinh", "[", "r", "]"}]}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "4"], "\[Rule]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "dT"}], " ", 
         RowBox[{"Cosh", "[", "r", "]"}], " ", 
         RowBox[{"Sin", "[", 
          FractionBox["T", "a"], "]"}]}], "+", 
        RowBox[{"a", " ", "dr", " ", 
         RowBox[{"Cos", "[", 
          FractionBox["T", "a"], "]"}], " ", 
         RowBox[{"Sinh", "[", "r", "]"}]}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[33]//TableForm=",ExpressionUUID->"3c89c6da-a3a5-4aec-ac46-\
e18032676466"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"(", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{"lineElement5pt2", "  ", "/.", " ", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"Dt", "[", " ", "transform5pt3", " ", "]"}], " ", "/.", " ",
           "dtReplace"}], "  ", ")"}]}], " ", "//", " ", "Expand"}], "  ", "//",
       " ", "Simplify"}], "  ", ")"}], " ", ",", " ", 
    RowBox[{"{", " ", 
     RowBox[{
      SuperscriptBox["dT", "2"], " ", ",", " ", 
      SuperscriptBox["dr", "2"], ",", " ", 
      SuperscriptBox["d\[Theta]", "2"], ",", " ", 
      SuperscriptBox["d\[Phi]", "2"]}], "}"}]}], " ", "]"}], "   ", "//", " ",
   "FullSimplify", " "}]], "Input",
 CellLabel->"In[34]:=",ExpressionUUID->"31c15006-ad1a-46c0-b75f-31f06153ac9d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["dT", "2"]}], " ", 
   SuperscriptBox[
    RowBox[{"Cosh", "[", "r", "]"}], "2"]}], "+", 
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["dr", "2"], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["d\[Theta]", "2"], "+", 
        RowBox[{
         SuperscriptBox["d\[Phi]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Sinh", "[", "r", "]"}], "2"]}]}], ")"}]}]}]], "Output",
 CellLabel->"Out[34]=",ExpressionUUID->"bbe209d4-e1c1-4e81-bdb4-2efb4f7a0fec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric5pt4", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric5pt4", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"metric", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"Collect", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"lineElement5pt2", "  ", "/.", " ", 
            RowBox[{"(", " ", 
             RowBox[{
              RowBox[{"Dt", "[", " ", "transform5pt3", " ", "]"}], " ", "/.", 
              " ", "dtReplace"}], "  ", ")"}]}], " ", "//", " ", "Expand"}], 
          "   ", ",", " ", 
          RowBox[{"{", " ", 
           RowBox[{
            SuperscriptBox["dT", "2"], " ", ",", " ", 
            SuperscriptBox["dr", "2"], ",", " ", 
            SuperscriptBox["d\[Theta]", "2"], ",", " ", 
            SuperscriptBox["d\[Phi]", "2"]}], "}"}]}], " ", "]"}], "   ", "//",
         " ", "Simplify"}], "  ", ")"}], " ", ",", " ", 
      RowBox[{"{", " ", 
       RowBox[{
       "dT", " ", ",", " ", "dr", " ", ",", " ", "d\[Theta]", " ", ",", " ", 
        "d\[Phi]"}], " ", "}"}]}], " ", "]"}], " ", "//", " ", "Simplify"}]}],
   "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"metric5pt4", " ", "//", " ", "MatrixForm"}]}], "Input",
 CellLabel->"In[35]:=",ExpressionUUID->"fadf8f5c-79bb-42a7-8a7c-ee6514ce82e2"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"Cosh", "[", "r", "]"}], "2"]}], "0", "0", "0"},
     {"0", 
      SuperscriptBox["a", "2"], "0", "0"},
     {"0", "0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sinh", "[", "r", "]"}], "2"]}], "0"},
     {"0", "0", "0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sinh", "[", "r", "]"}], "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[37]//MatrixForm=",ExpressionUUID->"9ea63358-98f7-4c34-b63b-\
b07e582ed297"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eulerLagrangeEquations", "[", " ", 
   RowBox[{"metric5pt4", " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"T", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
    "u"}], " ", "]"}], "  ", "//", " ", "TableForm"}]], "Input",
 CellLabel->
  "In[148]:=",ExpressionUUID->"f0a0a000-56eb-4f9f-b9d4-8701484b62f1"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"Tanh", "[", 
         RowBox[{"r", "[", "u", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["r", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}], " ", 
        RowBox[{
         SuperscriptBox["T", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["T", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"Cosh", "[", 
          RowBox[{"r", "[", "u", "]"}], "]"}], " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"r", "[", "u", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["T", "\[Prime]",
            MultilineFunction->None], "[", "u", "]"}], "2"]}], 
        SuperscriptBox["a", "2"]], "-", 
       RowBox[{
        RowBox[{"Cosh", "[", 
         RowBox[{"r", "[", "u", "]"}], "]"}], " ", 
        RowBox[{"Sinh", "[", 
         RowBox[{"r", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "-", 
       RowBox[{
        RowBox[{"Cosh", "[", 
         RowBox[{"r", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], "2"], " ", 
        RowBox[{"Sinh", "[", 
         RowBox[{"r", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["r", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]},
     {
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"Coth", "[", 
         RowBox[{"r", "[", "u", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["r", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]},
     {
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"Coth", "[", 
         RowBox[{"r", "[", "u", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["r", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cot", "[", 
         RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[148]//TableForm=",ExpressionUUID->"c18b38b5-ffbc-44cc-960b-\
ab1ed661d1dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "differentials", "]"}], "\[IndentingNewLine]", 
 RowBox[{"differentials", " ", "=", "  ", 
  RowBox[{"{", " ", 
   RowBox[{
   "dT", " ", ",", " ", "dr", " ", ",", " ", "d\[Theta]", " ", ",", " ", 
    "d\[Phi]"}], " ", "}"}], "  "}]}], "Input",
 CellLabel->"In[38]:=",ExpressionUUID->"490a4034-28a1-4f6f-be23-822c85f276e7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"dT", ",", "dr", ",", "d\[Theta]", ",", "d\[Phi]"}], 
  "}"}]], "Output",
 CellLabel->"Out[39]=",ExpressionUUID->"2b2d235e-1b51-47af-b9dc-55b6d21a9374"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "lineElement5pt4", "]"}], "\[IndentingNewLine]", 
 RowBox[{"lineElement5pt4", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Sum", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"metric5pt4", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "i"}], "]"}], "]"}], "*", " ", 
      SuperscriptBox[
       RowBox[{"(", " ", 
        RowBox[{"differentials", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", ")"}], "2"]}], " ", ",", " ", 
     RowBox[{"{", " ", 
      RowBox[{"i", " ", ",", " ", "1", " ", ",", " ", "4"}], " ", "}"}]}], 
    " ", "]"}], "  ", "//", " ", "Simplify", " "}]}]}], "Input",
 CellLabel->"In[40]:=",ExpressionUUID->"d5d992bf-c797-436d-88df-ad33662342f1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["dT", "2"]}], " ", 
   SuperscriptBox[
    RowBox[{"Cosh", "[", "r", "]"}], "2"]}], "+", 
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["dr", "2"], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["d\[Theta]", "2"], "+", 
        RowBox[{
         SuperscriptBox["d\[Phi]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Sinh", "[", "r", "]"}], "2"]}]}], ")"}]}]}]], "Output",
 CellLabel->"Out[41]=",ExpressionUUID->"d1c59dd7-c0ff-4463-b74c-d49453389c76"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "fig5pt1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"fig5pt1", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"hyperboloid5pt1", " ", "/.", " ", 
     RowBox[{
      SubscriptBox["Z", "2"], "\[Rule]", " ", "0"}]}], "  ", "/.", " ", 
    RowBox[{
     SubscriptBox["Z", "3"], "\[Rule]", " ", "0"}]}], "   ", "/.", " ", 
   RowBox[{"a", " ", "\[Rule]", " ", "1", " "}]}]}]}], "Input",
 CellLabel->"In[42]:=",ExpressionUUID->"067ddaae-2984-4009-a043-59a532d596c0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SubsuperscriptBox["Z", "0", "2"]}], "+", 
   SubsuperscriptBox["Z", "1", "2"], "-", 
   SubsuperscriptBox["Z", "4", "2"]}], "\[Equal]", 
  RowBox[{"-", "1"}]}]], "Output",
 CellLabel->"Out[43]=",ExpressionUUID->"d15d58f2-3860-4d34-8f28-a12b15c25465"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ContourPlot3D", "[", " ", 
  RowBox[{
   RowBox[{"Evaluate", "[", "fig5pt1", "]"}], " ", ",", " ", 
   RowBox[{"{", " ", 
    RowBox[{
     SubscriptBox["Z", "0"], " ", ",", " ", 
     RowBox[{"-", "10"}], " ", ",", " ", "10"}], " ", "}"}], " ", ",", " ", 
   RowBox[{"{", " ", 
    RowBox[{
     SubscriptBox["Z", "1"], " ", ",", " ", 
     RowBox[{"-", "10"}], " ", ",", " ", "10"}], " ", "}"}], " ", ",", " ", 
   RowBox[{"{", " ", 
    RowBox[{
     SubscriptBox["Z", "4"], " ", ",", " ", 
     RowBox[{"-", "10"}], " ", ",", " ", "10"}], " ", "}"}], ",", 
   RowBox[{"MeshFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["#1", "2"], "-", 
        SuperscriptBox["#2", "2"]}], "&"}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["#1", "2"], "+", 
        SuperscriptBox["#3", "2"]}], "&"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"REDO", " ", "this"}], " ", "*)"}], " "}]}], "Input",
 CellLabel->"In[44]:=",ExpressionUUID->"850f3ff7-8016-4c7e-b802-fd5c4e3a1e4d"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
38Z5uQzH5wDogbgMtiuwHw/uHew/xHVMlomTt7q1/5qF64PSy1v3XOD3NQvX
MWF7DPshcT0Xtodh3br2zniwMucrGz+rB0H2J8SbsD0D9VAgj+tKsH2F9eN6
MWyfY/8krjP6L8q3tX4stz9xfA3mB8dJcR0cyON6Imw/w3xiuwX783EdR3HI
Er/NxjXN+u5YHz1m+M6O21c4jonrceBewPU42A7EcQq4v/A9gutfYndNuTbb
hvuRsP8c1+mAXYrrTbB/Cd+PuJ7Lblhy+sQv3J6HdYL5EcRJMc8C+UCHgp45
3TlfwO8L7A2M43oulZzL3WLulNgTs+/D1ua8yjowYIvNbVmpPfn6Jf905S17
16jc1zOfVWcZPNvqvLplXVbxuT5vxZdr7OmDoeVzZd+zVKrWD7qdWZMV2nFL
dFPLOvvkzoGpMx5WZ9GwlxdWDb6dFfr43DUNt3x7knf6/sO8+/YkJsJykk51
1um5Xf1tG6qyXJ8GfCYJVVkH5lWvjD1QxeqY0t4UeG9JVKenM1bMbLyvRrLf
v+uS/4v3IeyYdWrKuatqrF9E5UX7doN3GNHUlaPc03/w/vz6i87Z/8kzoFp1
9aKNzgKyPTqpaeRk3h/SKUiiPf2nEevzsGmAl39ZhIBOPLtVY8Bg3gfmufWS
Hi/Ltegch7dvvtxUY/W8Ox//jhu4VEJrXp95aBgmYrjejKdFLvvE9HvHX5Fd
xglJhPuL7Tq5rVgfrejt0qbKLkKm3+LAUn9xBzGN2L7Z+Uog17PZrOJuCx8F
9cnatOS3QE5cZ6Vf63FCwPbVjG2JVy+p8zpoA9XVWR89zanl7j/miQelxL+3
n8P433qsz9L3nZblzvFScmCP8U6dfN5fbvFbfZ8ILxGrv7b4vvzS7wumdP7n
bwdFE4Skr/68pYYhGrxfXG+HH3J7CSk681ASP4v3uzv1JTzl/QreV3/EsviO
9VdM6dFzu/u/cOF99cs2Xrga30JCL+9s09JrOZevEr0kt8xFVLIrRztuEp8f
twHzX/y+YUCnbelaNruVDlkR1+N6oqiB9RGtp6KgZ/u02XsvUd31M6xOi4b2
zPYrt9Rh77fNlq0W3jd1aPbNL7NmSnWYfH3HLW3TjFVpF9kcxYFHvO/KVLUV
EuMoI2r4cIh/zXABk0/f/3l46AgFrTSc71s3h/exSUq41OXzATntNzhwc+Nl
Oe8Do77fIqzKnE79fv2Vi7acjWfzLsexbssVNP6mk//BBQqGkxQr3U25ckqr
M86Oply+85vu6pMlcjrvlGN9jIDrNzw+4n10P3M6aujIr0sm8b70px//lBgH
y+jN16b2KrEyhp80cIzOmyultv22LczeL2X6Q4Vlg1t5mdOWD8IcF7vzvj23
phRN/HRcRjcHtZs5ci/vL6RTHFu/4q6UhrdV6VF7lOsR5/WNXtTZjEYMbWG9
QMWM3JzY98jJfWpEXpRhFDGxeR/7eQY993aoUNDEQpOxFd68347qT4lKS2cF
PVA/w2R0ppyvh8gDh4fuk9PQC90v5Snnc1rGPtc57+pZf8iGu+51keN5P5/z
s6ZmV9maU8PgJxeDleMHPLqz1o87K2V0+/fdp9adlDL8ZsuNMYM8pLTa80wP
Y10+zufuV45FV5rT0VsXxzhM5n0Gvpe/8zLobExDx6dp2Ml0iPO7/z4arOP9
da8/7f6gXqTD9LQfOrjwZV0bOnGp+2y/Fvz7FF0Xf2j7LUlEDbtXTpFWGTH8
z/K5jTRMSC3PvPZJ7Ckgo/N7WuonazD9T9YKTHZ2F7D9e/DUDQ336jb050d7
nS/X1MgJk5x5+U94H+AJyy5fLTmhRmzsVlmuN+V9aD13x7/zqjcih1XL1Vtv
MOR9/xZm9xisKiCaRsNs6y/z7yNIzU/YXW/J++Ff/pV2kDSY0KnGqYOPNvC+
EJX7b/6qNhNTt7i7sxps+DhdA3K2vjMT0cyfCo+RBjoMn796U9rMaVKqoytK
/BTKz0OyZPyVfckyOlWQaW7ckn9P5KtsZHLiDSklVkOjBMpzBvDPOmt6PbIw
o7kW4TNiV4kJGaKS9MKf99scOEt6VPaH953w0dOb0qe3OR2Q7eArGML7/7eP
Gtcm119G03srSqmvmJiWTu3+dJY6sY52Dtv3T12G5bDRxG2j8j7Z0cnXOo/X
oTxbU3Q2LL4V+921jsFbJmyVsXG2TKi4OPy2nNa3Uci2TeXrKvCjcPYfsZyW
DjbrODFexsZz+GNFZ+NSBdungNcrdg2NclJQx2uGLd7u5fKCx1dqnPfI6Y9J
LcZYJPO+HydLTGTfy83p2T7VK1op1/nzyXNONZppsPtlUUjIyYXzFIROu63y
Qcb7fPbwna8xMpOfPwdf3T33pKOIDnncc8SNQP5dg+1kwcsrv9vQ36supTQp
z3N2zjiJv+5KFdF1FcvsY9fyvnNj6/QsHkYKqX8b64UqU4RMTxf6/EOamoSu
37VRUD2W9916uT+1942OYqpdGLrV3F9MttJ1cQPbXbTfauyVez+bf9eA9Yvo
kecV5yuhIw0nbUlzljD8UXp32YuDYioo+bZXHCgm7bocKdh04Cfrl+uWOP7P
XU/+XLot38mNqCk1OGXsUK60v6AO8aGX8/KxRnJqWTd08ss5amSL4HjlrmBu
BzsUjjhWU6rG+sOc33o/f6uvjBbE7ggY/EibDOrm88G1I+/bKXH93LL/UW0m
n//k3aqEnub07qGrc+f1ERDvTWvfV1/g/UIbn7Zvt6qTgI1Hc/0I+bFrcuqn
1+6mYwnXk55iNraqxJw6u1kGaakak8trtT4fUd4bsK7w9wgWtV57N8Vbua6i
Yitce/M+P2FdrM67eEmoeH2CsfNvbRK3Zv20kDze/9Otdz+N0Lv8d6UOx0oe
TpDSzHvu20rPqpHtUYcHrC/lzwvn1QPjo1tbjjdm81YcGVysP8WcLMlydF6c
LGT4y/GxLle3yIjNsmtfrtzkfSzjXUrnnE+Ukp6fB9w/NkfJo7xq7jq0lrP1
UNs7pSJMKibPHCzW7srj9XTpu+59CY2UMD2P6z99uGQn4f1/ZBZOCz4rqH+H
DZdfrub9f15fXjxDtkRBo29PXztclffzcbl7y3r8TTkNd/aQ1ijPE8B1Rj44
v7+NnHqXDasvXsj1DG962ztpjjnNjxt4bWcw/17ABodbX7YekdF22cFfx44U
EvVnjxu2TWzH+/zXPMyJXioiT3N2vGpPTBi+PUuz8VEHIRv/ycMnRtk5KOiv
dRaTWy4XMTwk3T51cKycRj8KzGsaLCSdS3akRb/hfTJj23R/LfEWkYt9eyZ1
vSBjeOLVX6RBacfm9PcaY/lP/9uQFQFevVsr+eL1dV+2D+H9OW+futjBLUhM
ItoFVdte5v1FVXpNfHpc34wMNd+wrmCBMVs/h4ds35g5WkgOz4vTO/fwn+8X
WPwhw+q0SeO8GcGaFhyXtDTt16O9gFgZeU3o02TM5kEuf2wz31JCFDbffbsN
bcvwcvmLfftGiNl5e/JLr6jqUAE9UBtc0H6XGulyq25eRhXva7r8nWvtu81q
7L003NxdW7JDTDUvzbOqfq5Gwq06uWvs4/2KTzXYLP0Yp0bWHrIY5zKG9xn+
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
KwK0dRuVdtTAnt3frFPadTAPelkhl26cUNozPZ1r7obx74xcrLv5cul/QmoW
OuTE/ilChhvq/xd6QbmutL7Nd3gwivf303kh2Sg5LKZOg2yK3JV2y/KMb4L2
UVeyVsa2Dpx2ndeNsr6vf+viB35feqpoLF8nH1oU7FupfK6cud8/T9nFv//S
f2jn4r73pHS9kWaU8JCUzDq7LvLOzp+sz/P+5dfV1y0QNTv3do1atNI4Vo3i
8xz8Nvi+hvxkfK5uGfLw99FC/n0TOD/Bf+LTUpH49J/zEPJ+C+9VZhgdN6XC
NNupmmrSZt8rAXsS/E7YnkwWHZ656JI2xXbC9pu3P8zsJ6CeD8apHJIb05am
v4wHtOHf++jwftD0iGv8PL+s6BvtV29E+x3JKJ70z3n+dM9059P9BRTbad5N
Z0e6DZRQbKftOtjixgofMcV22ugRavYLR/B+OGCnHZ4b9DkuSMz7awWfkvr3
Nadxpy5G3nWVMLxJpXztf8r1GRs4b8XulVx+n2tjQZe5Ujq+7+69OWEi6qKZ
XX/1H3tMa3zR+YEBvG95G681HubXTKmf95Cg0crxsO9cnE851E5DQjeODsxp
/Ec/4y9mrVf3nSikmL88eLTNTl9p1xzsErvfTPn//PWiP9d+mTT7bkjOsEfL
G/wl9IDVt6Vpa3l/mNc/Xu2KUJ63mUcMrZrGcP3R1+Vq9kpeZqe1VRLszr/3
Ydftx8q5Sl4WNGX84Vl7ZAz/sShrWMcDctp4q9ebT8ekDD/Qqe3FxdXm9Frs
2uVFumY0fbHs+cAmbsdavMq0qd8tpZv6jZ5U7cPt/37dPrw61Zr3OwL+G35r
5aKxk3n/nNxVlzv/3/c1dG4WHhizW0bxueT2esfCsfv5d0zgXLKW3bCeqcb1
j5t+MDN1uYJmvyjyaW0gp/jcO3Giht5U5d8x0XByKj2m5IPHJ6y5FBLPv2NS
amOz2iNYRhO+fb/bPVnK8Jl/Ys4N9JLSoOI6452tzCg+t39XhX9eHsn1wD3y
Kb/CTNeL96GCe8SqIMGlfwYfD9wjxlNf9azQklN8/l92TdU77KGg+PwPdxjk
GHKF64H78fwB2TbLiebsPClfuO73h7nmdGzTRe9Nwfy7KsNvVBYMOi6juRbW
MzaM4X3kjNdtkI+5JaXPm/ySTNSMaciAAS/HPmlLR5ue6eT9jOd7944+XWTm
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
24vjYvuJBdcbR4j2Af2qzM+lbHTNpOpu6Q7ifvnZrRPXA0Pp6Ged69M+c2Id
Y8qFn7uumDLRdy9zuwcKzOn22qXzN7rj/KOY5bJCx4Cwj6t2rrZ2Ogd5z3FS
4/zjh4X1d8ZWJ9KR7dkXp4z8iX0fU/5pl7fN4XYLBb17E9BXeoSKjupGZEaZ
Et8x/htHjY2rG8griN/Te9iZOzUlWUjpeL7YkDlxH7Qx28WaguOo6qHOjpIW
oj3Ieo7ZTAoL6c05Mf6phri39OXhe1JHsD+UGN2ImN9MPL86JbhB2oyJdLn3
Dd8eoKLhHL3fnZ0UlN7clbz5HON/xmk7tLD3E+4nfEPMekcLYp0MKF6MfIbz
sKbUsO27cuKe3/X+34pWY//hvjn3vXqMuOe31HaO+AwJHlqT/Krj7S5iv+oi
UVHBcxU85HrghdGoPrGv87RCSfQ7PC8DdeZfV2N+nnqvFGbJnR3YT0JK1JMS
y4n7cMkhIs7bsX0mz6SdnTVKPK/XFEdLKGCjXycjAyjGxD2qLk/iJAUd5NDY
DEeFoZfEPbMVI9fVj+O8JJFl+GpEgWh3uOvp9BLn29rbiw/d9ONO16+HOT3b
71pw0RofGTUbK+J+7Xlkr7HD2H/W3xPQClejoeqf/I79T2iom1r3IVSS+N41
lX8Uw66P0+t4aMT9p/DVVyIo/ecDVtYPNtIsHPizuIr4TthWO+Axr4aDvBaz
dWa5Et8Jp/LblXW2WeKOcijrXtCA5zvi3uq7S8fI73D9ur/1g0FDHbG+SGbD
RulNeF46JR9uXulP3Bv+U97+UAO2w6DjeqkzSsT95sN+A3/Pa0Ktn1335pox
0GCoNp/Pbhbyf1t/PTCXuJ8ie5lhouc4G7l9UJUZTCXup3BKd9ZzqOSgl5eb
9f7s5f7PPmu3SUvBNTfZqGJbtt2xPMHp/9uwZDT9OM4blwvsOkSZxDqHcVXZ
sAM7KMj9uxPV5Z/1D5bqwnuqzbiII2NsU61P3Ncc8v5e8WLsJ71OLrmqEcR9
zfbshYeN8fjD90SIRJwm7lMW0G1XnYvryK0/ta+e7iHuEX5tc7YgyZ6G0g6M
aAatIuJu4qTdINY1SMnRgV7vRp1+3mkpqbIN133D/Y8KLBSJe5k/zpV9xMN+
uMJPVTNiN3HPcsGjdeticByl5Uc5HC4g9NTU7/vRcZ2zPp4gdNmznvnXrfDz
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
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
/A0dp9ztVJsLm9x8eMTvtcgvA4d4UAu6VaqtUfNcG5TDrLOnzqCac5p7yoVQ
XsQ+d4YqQR1HtA7yfJ5sKXjleW8H+R2mDd0Tlk/eLmh0dfUnxeKMig+eTrKc
7ZE6N7ocLcmorHQ8BR2Uv0LnU/BMr41Xz7jl8Z6KmA//U/r0dtj8/7qn1iVh
fkv5MOXLVHnpUY5xVcqeo659Ifte5OOVr7c2dCzF/MzKT1NcoBLyi9G7y2f5
8PJF696Q7g9tli9MNjUyX0KfTjZfvfx+M5Msjv85epooJgN/HfQ956f1Bs3G
axw0/3ABcFlkOqdZXuYhxr8Q7bmEzv0hi/F+5rU4bykXC9wZsTsMustwVLaT
bOtki4/McT7nMs73+4eTUVy1ctDa3CJo+U9/ByzvX/n/Z1PsfkQdnrVAphTy
6WTz0K6y4EteywsdFLF7aYrXf6I4JfIvIP9mxPIRdD+uCO28Cv1NxPJVSrr8
hOnQ47Sm6Kzj8iplR+1Gx5v6TsEvI1NdtqL8rOBySXbHSvH8K16L6TdyZ2rZ
Tk3R24HnX8TsfmtN5UWE7B6J5C97LZ+sr8sjGgCuj8wryXaPT/f+2isfwfnx
FLf9LNXGI6PWZn53RXaLcjC070J/F7E7ZrprpnvHLSjfDfornSv5XQydDUNm
/8kO1P210pS97tZh3cfTvbwhEXunt906VhT6e8mEbAz3J9tdKs3Px2RjIfMu
Y347YHEHzRO9d73/ncitQ+dxcDH4h5UPELH7m/d517+Ebb9QHErxKPlGFFeq
krC8wE5uDJVDVQu6Bnoei1kurM7divU/Kd+SYkwRu9uXGjdfwlLnTygft/tm
Ws9l8yteoLiB7uXpHrfuc8+k/enRMwg9mZS3Q9seD9rZRPGIQvAzKicSfgbN
UxcDVSxUZVf7bF+YITsBem3YvlPdMcqcsLODvkd9l8o7XY7M+rDlXKudq4Hl
YfOh5UA+L5Dq4lOqS7R4NeOW6yA7WfGdEPxc8GvBP5Ns55o4vO99llMrv1wQ
/ETC1i7thadDFnv8Fpn/AubrvsB4dozZt6FvpBHyBeO2nmhdUVxGubKFExYL
uIZ8s5jF+JTnuRFcKmgxHcVrdB/zFrrTJyzvSHc96iTMLpVvUznn0n8q2e4D
ai2V31N3WhQrfIh8JuT/BC9WrAs8Pmp3OqIJy2e+6ehlOp/4LDdjAzrWA597
LQ5VPmh9aehy+xR/Uf7kXfnuEzZvtd6kQfdSHIj2PBexOMJ95NvD24d8BfQ0
QyaE7FF0RwKWk6TcpNci9t7TFFNKmO9O+7j28/bwfIo7yEcYtXxZ3R1QXq5i
o8UTFqfu6ebeGuUFJts3uFZ5CfCHJex/FOj/Cej/CmjdVlxucML2/Tleu6ek
2HpH+EPhX0DunGKWITsX/4TOzyN2N1h3hPUdlYX/CP5ueAc1nozhSXBtnj3p
zmU6y+lMpzzDPWGLx62O2n0u3evR/Z4OIbsjq7vAS3lWTetlwu7UPAf9CvQS
6KrQ/RPmZ1AOjHJh9O6URzMgYeOsO4y6y6i2qs3K29F5/yT0+ojFrxVD7Cvf
c8TyLkdQb3/tzeqj8rWQ/zHZ7kLOc3tZb+QnQF/lvdVOWI5BFxcD7QQO+q2t
1T2W873Ea/HKv312d0l1qw3KNern1n/tA1rnK7q1XXfnlc8hP5LuMfVEZyZ9
K1E7c2VxdB+/xdl1d0V3WHRXVP8HQDELxS6UY7YQ3Zfoy+Wo5bvr3tl4+D3l
d6SePbRvN/AdcD5q+eK65zVEtgsye2N2xhnmNb/wyajl7scjluc2BpmDyPxL
38r67Y6bcnKGy36G/6Y7U8tnsh7Y7rW7J5XidrdW/pDN4Om0f618olG7WzeF
NlzSHID2as8MWY5cW7WLsvXduX5f1M6SOlPqDpfaoLbshi7jt7z0+W4cInHL
n1rntRyqxfC/TLYcvA3JZtvofqx0VqJsEs+PRy2+GYZuErI70co7/TRkZUPa
czT3kPFF7E7uUO2h8kMqLqQ9Glwx7vl/kH4vz98AWiLjh7eX51uBHfr20NPG
b/eb9C3KXtX8+dXxJwUtF1c+3jIxy4nS+J+A/tadA2UMN3fxd31fM5LtDvA0
8AfITwefjpkfT+3RGWcmfZkF/2zM7lIMY67uli/K+f1yK+4XsXvE00PmI1XO
UttU+x8W37h4ykLqKxe0vIIXIuY/f1cxUJdfob2sALxbymFIthzOqeBTsm3A
A5SLJZ+7zsLgWNzaNgz+LPA8eG9DTwIvoq6KQYvX6x6l/AbyHzwbsjv+vcHV
NL46v0Xsrnq2JFtjdae/KPTr4Nfj5t85H7F79N1c2aHOLy0/2wy90yT7Py3L
o5Zn19rZCcrhvBiz/M+Z0OdcrEQxS8Ur50ZsbM/D/42yNWmnP2I6x8M/HrM4
pO4cfQFUcfbSYWdPSuYIMm2p71HA7sWUi7u77iGz32SbKYdZ8QXl+XaJ2d3/
sUmWy1qS52c8FlPvLf8Xv5fE7O6qYnyK9Sk3cJf8bNRRN253lA5HLBa/wWN3
yRUTyZdseemK8cnfPylm98YOUvZhivVX43AGfpVk+9838v/KD6949/yY+YQr
wlsWs/+RIn/p8pjZxjmQrxayuxm6o/EZ/G4Ri4NMV1woYnP5QcziI9lko8bs
Pqns+UppdkfqOPCD/HE8z4DOws6PJn/aNzH73xGaA/VClmN/mz52iNieVRB+
nZD5KOWrVN5p3pjdd9L/LenvbPgVMVuXarp2as+/obh4sq0tX4CDcfv/Bsrh
X4xMdtp4lnblAM/TOgL/isbExVnyKfeM3+38dj9R83mga7PyeQ9T1h+wPLTq
bj1cxvPJSZbLfjRq93ZGBO0O9wH5cgO2HsoXJ59cbn5fgJ9H+S2y6ZRrJ1sP
3k6d/b22Zr6rvKqQ/S8drc1e2jhO3xK0Lu3oHsQo6L9o22LNC+Q/1HyVD8pv
93yP0Z+LXsuHPAh9zmu5nbPct383ZnELxS+Ur6t7bHp3TwYsTnQZPfPgf+90
6v6X7gusQf5RzHLgFb+bCr0fmTqKYUomZHcKHsL/H8jxk0Q=
            "]], 
           Polygon3DBox[CompressedData["
1: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
+Ldt60XahtCZtbHGTYS/qzbWvntrY61wzbinNtbMh7VtamMtVXYtdQ+xLNmE
l9gftWErajOM0XarDVuiG+1ZAv8utJv7I+gXt5+0rx/6HG38BrkK+TjkR/3G
GGej9Ns4HhlPB1XHN7kP/F65mD/1Rc5DfyRyX+RbkBcin4B8BPLtyO8hL+N5
7ZD7It+KPCCVH4e8GPl26Fj446A74f+iPb/xrg9DHoN8fn2Mbcf4POcQ7u/j
egH/IfrB/G7t/AQNgN8e/eaJvxf9lVB3+B7QVfA/UP8v1H8A8nXl8MG7driG
6Ps5Bjo21f+O6yF0gd8d9DT8P+7tKP9lJt5zA/V9Bvs314+l/4rId6X3eTzy
vvz/T5C/QO5eiriTvrMPoO/h+3Ltc36XuqeHX0H5rXj+1TxvTjniB8ZPPk9l
u9G+PavDB94jFz4X51PbaFv/LkR/2W9PON/Uh29EH8k58P+h7+HaBv8s+n2p
Y7+0vs5Gvg/9ePrnFvdg2bBZHI9T0vj7kfLVzD+dmX9OrTA3IueQG92j52J9
aEZ9G1PfIdRXRP6Huv6AfsnGGuNas1FaP1ZN5ZWPQG6OvAryZsh9kH+m/O+U
X8N1A/kL5O+QK2l+/8j9bFVcU7cO9z8L/xnv5nj0S4x/IS/1Gvwb2lvwJe7v
4vjk2uKquLZSh/wx/AnQKfBbUm5RVdg4Wxvzof7l8M3Seuh/+iO1z/XJ9bOO
9q/nHF8OG1hb2D2V+yHnKOeqIcnfe3dj7KXc87j3uT3J7mncrzgvOT85p7kv
dM9ySirvXuxD6pvP83/l/55YDr+z/ueRqY7JlD89Ezattm1Vat+6rknlsAO0
B6qhtdN6a3/L90D/ezZ02hDaEtrE2sba+Nr6+jT1Zepz1fc6yr1KJvYvLzbG
GuRadE0az71yEcu4HvnFcqyhrqWuga6FmyOvabwA+bJy/Cq75v7Of1xaiO9X
G0BbYEPKf4lcQD4deWvkDatjPpmC/C3lt0A+BnliGi/aTtpQH8MPgI4z/qU9
Xgp/y0Dkc7UZ9K8mf8NobQDk4cinIZ+P/DLyiCRfmPwzrvuu/9pUzjnr0Z6X
q8Km0LawH+yPQ6Ab/Ea4dhj8BMdZOWxabVv9wI/b/4WwVZ1znXv9H/6fXbUv
4bvrk9degp9ZjjnBucE42XPIB+Ti+3cemFuOOdy5fEz63kfwux3yttq48Ef7
jOrw4erLPRY6TnstzYc75SKeY1znTeS+qf03I89HPgr50OT/fzfN9wbk70b+
wL0A8sHI1yG/Ug6b3flXf8uA2lizXbtdfzejP19qjL3mLcke6VwXvkljUsam
etSF76ld8lEZz9zc+UV9NvYx7mfWgPaH3yMbur2TP6sT8lrJnztFXxlyk/7P
urBH1nD8+70jDzF+jlxJ+ouQ10euczwin4V8dCHi2S1rw77SR6SvyGvq1kzx
/jrKD0PfPRvt9388ov+tLnx560C71IVPT9nrk9H3o45/MmGDbYauA/ILmfAZ
LudZT9WGbaCNMLk27KqV9hX0XG2Usax+xl1dj5Afz8Qe3L2498/MxDV9lD+h
fzYTe2b3zg/Wxv59mjYIfJPzcSbi44NL0Sbbpp14jf5U97zIUyk7phR2h/aH
PrsN4beh/DJN/ORP1G+o/7AltI17VPR/oi/AD0Tf1vk2Ez4sfVlDGyN+Yxzn
9WLEjPfJhM9L39f9jeFrcvzou3BOcm66Odl/ZzaGbaxN3CrhF9poO6J/oRg4
hnUz4f/TD6iPQV+DPgj9CaVM4Ex06ReS3aX9pT9Rv+JzyT7UptS2/DC1x7lc
X98zjWEPahdqy2rTatvenezBpch3IN+JvHUp7Fmfr89D34g+PH15fiN+K6fS
P/3SfKb/upDalo2p2K1Upj5MlwzFVmIoumbC56nv8xL9Sqnt+kb1Kepb9Jo6
5/e1MxFD/TUfMVtjt8YHjBNci74H/C7wy4rxHEMyufQ89W35PQL9F/r69OFk
IhZmrOybfPgurcvYg5gTsSfiOWYVI27rs22DNrwxMmNlrdI3V+EPbwR/APzi
Yvho2qV3py/3Mho0ioYMhy7xG6djzqoKH7++/iuQT03z/2LkPXj4Otg6bfTP
we8LtYP/io58gz/1ai7wIuJGuqLbMuFXVqFMR+S1+F2C/Ll7Zvj1oKXwX7oG
w7/C/Z/CbwC/D+V7QBvCbwTtXQmMkFgh8SAtKoEpEVvyDfLayNNyEV81ztq6
EpgZsTPLoNUrUYd1iXEQ6/AM5V+vjvjwVuheQJ6D/APld6oEJkNsxqr6L+Hn
oP8AfQvkTsjnUsfb8NOhQb4/6Cn4mdAZxcCFiA8Rk7ESm8H7Oxf+Gfi/KoHR
EEtyY9KLsRJr1Ra5t/YQz5vG8z6mPaugO5NrF6F7njKLkc8pRkzfWP7AYuA5
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
            "]], 
           Polygon3DBox[CompressedData["
1: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
U5J29z46YHd/Y53PUnuLoloLtR6QrgQqgxzQ9iNfOGI0lRVzz/oe0vdm2fof
Uh/F7e5Wa6z2B7p/3YfsNr/dfd7l9jQLyS/1W198zLNcxLO85rVnep78evph
EP1Rk+dxD/g7YXOl5kytJZ3kz0R2GXy9dM6nfDnp98Bi0B3aRWhLSC8Fb4PO
0M7Jl6vzCHgXPAetvO5OQkZrhO6GoDF4mDpWUMdKrQXubkJ7Zu2d5fvUeWq2
/JPORzzP7Vt82P+W9iHgGemC/6DzkchXssjJVIavJXKtdH8bt7v3m7x/zeE/
rHsZ6GH47gX3BM3/LB/+PKe7IrSu8Pg0dqi3HWjvzoMPuHdnneufqjGjq7yw
x+7+dY5Um9UfZ+T7D1mfKCZhBDyjdRft7gL1HvXMsj1BNGDvqvr7hZA9m2ra
i8fM96g7w2IeixuQb3JT0tbUzrTrCXAgbnsJ7Sm0b3kG2sakvZvVSS9OWl2q
83PyYz12P63xqhiRGVpzyXcEnXT/HLF5pT22FONZlvbZ/NE/Yme5Rz12t669
9z63/taj7B7wddzuGXvDM9Jj74J89uqTLug7T9tOJ6x/dB9QiT6/lTGa02t+
77HwvQoO6ywesnd5GvZn6fyP/VvQv1VzLnNqNp5tBb0zpO/VPRA27gbloWUo
exzaQ/JlgKLQrqLvQdI1QY2M+SkP0bYtTiYrbHqlq7L2NiC79jnw7AE74PsG
lNJ+UPedpHfpPkB3qbonACOp4wq256M8r/xDlG9Gdq3kQAHS+cCj8L0E/xF4
71Cci8988fLJ10XuYVAMm66FzH7x3U96BuXlZC8oE7P1rrDP9nKT5IeErzV9
/hJ42d0RrIfvdMhskh3rYnZ38rDzIT3m/FyHkJ8FXyvKO4CO7j5Zfr8m1DEU
hOTXiVl6DfTVIAztoNYj+Scp6wQ6gz81J4TsXnAoGBYzP7x8x4+CDm4NfQT6
I+jbrXOn/D86i0bNPyg/g9Y+rYH+jJUv8Nlds+6cdScvv5F8RWOg3aBd78I7
A5kPdecg34iT9WXsTr++z+rQ/eleZHKon7XXAtPdnf9W6F+CNGXz5Stn/N2l
M5HmXsbfbfDl8tndSyH4BqQttkD3ub0U1+Ox2INqzoc7l7KpyE3T3krne/mH
0VHSZ2vfrKStTTXgrwVqg9d0B0d9J+U3C9v5V3StOXugH/Sb3G7svqB53mt+
aPmjtc/e7LX9Sgba/Wnra/X5L+Cc1/YzeqdKROzMp/tSvV8T4X0dFMWu2/X+
8ztN+23N99q/akyk7V5pOO0dJt9jwO6ddEc1RGOP5BCwIWI2q02b0f2N39bL
6fJpoe829OcFZWO21/w9bH6Sz8EXcfNxj4Z2t+505UPQGQXejSCf/EzoKOje
leuk/9UY0LwFbQ51tCBdwmfzWMWY7SmeCll71Iapmp/hPQXtY3i+Bpvgu0vv
K+m79Wzgma33zs0rmhvuBpVABVAelKVsn3xg8Jcg7YOvNPQ7QcmMpUsJlIXC
Ri8nOVAGWgxaGfn0NYc5PWUdj+YjzXEF4Duv+7WM7eU0L6ttA6GtTVv8juKG
ZiguhWdQ1q1rWjsXguI6C0VtjdXddjbGwF8eWzd/F4/84/TPbMXrgHlgMDxL
oC8G8yk7mTJelb8N7Q/So0iPBAeUDto9l/zY00j3R34QmB413rnQxulsGjRd
8ssvID03YXpPOv/9dOcDPyE/acrii3LJNwby6E6LsgHyewftDkN3GR2oYxqY
GjV/unTMdjrkU5cNM8BM+bSi5g+dI56g1aE29JOvlN/vU9ae8Qm7H1EdpV1c
mvzyumsYTv4VMDlqa6bWTi/5m/zmgjacsTosbn5AjWudp8Kk/9D9Deko6RgY
BM9AMDhufsUbGfOtTFNcE5jrMd+L6PJXdtF9v9/kIlmmU3pO6/4SvSXgjWFH
EhTQ3Qj2loSW1pnMY/fyup8/7J7RVDAZzKKtQxhXL8uXzniawbhqHrOYz3+R
aUb58JTpk61zsOElfr1Z5gv9F/vexYZeOqvJf5G0e4tJ6J6B7BT3bDonLT7m
esbarXbIno8CFkuR8Zq9Y6CNBmNBdj13+a40/6gdUfPRy8f/ne4Z5NNUfINc
Xmp/2u55xnptLdCaIJ+B4kpye81nskxzJNgB7WuwXH5z8j7Nbdrjyl6vrR/y
SXeEZ0zCynwOWl+meM1f7XEy92lcJOxuQPd7N7BxJeULoP1L+ib4J2X+0Uuu
f3THo/R7pCciP9JrfXY1Zc9mtNfo8zXGob+m/kibX0L+CfVTEfnLKXvV9dnt
OkdB66u7Z6/5LeQzqg6tOukPdOfn/HE5ghazkF9+DndPrXd5MrSXyQ8Bt4O/
aWabhMUg9k3ZuNT4XMSzKxS0WL8YOKmlgHwyaD6PgWAA2K41I2j3IDtIvxy0
O0Ct9z2j5l+SnykH+JyydxPmd9kSNL/Bpqj5tBJpu/vQHchrXpu3lkJfAnKm
3d0N6aaglvYR5O8DtchnOd2LE8YvOfngNR5uo+wLypa4sX6TdjUnXYyy4lHz
1z4N2jifbj3t81MWC/07bT4u/z98Tdw46ISuluBx8r0UT+D8hg9Q9mTUYi8n
IDPYY2NYY1mxoYr5nSg/C3rzpSy+R3E+xUA33p1jGYsZbSDfhsfmCs0ZjVx7
G0ftPlfxwUO1NiGzHgyUvPMLNSHdUGttxnx5io3qBu0xaJvJf+b8e4+DNpSN
Cpu/bJviwcJ2X9jcbzFefSj/CtqhjMVzK657iHyMtLW5zlvY9FjU4oEVV9xT
+3vyNaMWa6SYo75Oxy+yhXxH3UXqfiNsMaGtmGMep43fQWtNug3YF7H1TjGz
8jnL99yS8mbOdyOfzpS4xTmtDtidiPxkt0Tt7Cgf/Qr1Q8TOlk9nWT1t3Dlz
HTaVg7ds1GJ89J7Ih13IxQoXdX4E3SUoBm2U32yXvYpl1X2o7lrlh5oXsJjj
KSmLldUaNk3rlNYnzdHQctBPpTQnk58gXwP63gYXdMecZTG8GheKC1esl2K+
FP+mOLiuSXu+z8StX+UT1lyneDr1u2jq86UpmwPkL34bXk/Ezsk6LytmXbHq
3oj5pT8Ec3W/In8V6aPgiN/OYN3c3cBxeJPoTYGM1pmoxUYrRllzheLepVN6
PkF2Hr/tKL+G7PWA5z8fL+gd03p4SvFstGOoWzuvahxCG6m9LugbN//9IeTu
R6Yp6WYOSoeo+1f5/BIWC6rYxXbIDHGyKlfMcdWExZ0p/kyx5Lo3y+t8Lrp/
UToQsVhqxc3LD9MZ3k7gOdWDzS3Q0Z60N2i+T92Jae1RbN4A9xz2Uv8+B6V7
yFdFe74lvRrZGhpPPKNyiqlB9lm1W3cw8HyotVQ+BmibFN8Rtna0de/FK6T3
Q9sDBitGQvOe/NakX3LreIZ2/B22Ma47qfHIpaH9pfjYpJVrXOXTPkJjC1p+
0gWyrH0X6KvzHvObqP36rqGQfL0eO2ceTdqdzTn0pZAZi/5xcUtfDP+/L1V0
rUtF0dNRd13unWqGPr98PGAj9l0L27luC+3IStqZTWc37R20Jmod1H5FsRI3
tFYpfg1cgn6R/HWQj3x9ncdIX4ka3xXKfYr7g94A/AMtr+4+SF8lfQ20IP2U
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
3kgx5K+6tfv/AGw6ELQ=
            "]], Polygon3DBox[CompressedData["
1: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

            "]], Polygon3DBox[CompressedData["
1:eJwl0ztIllEcx/FTapr5vhq0REQ3G3wJSoeihsxUEkkMpyIRFKEh9SWzeAkK
qaWgTARxC6Olm2EXGrIkSxsyI4dEug0tSSFhFylo6PPwDF/O7/8//9s553k2
tKQbOpaGENYjF52JEEaI70UhdBWEUJUTwgz7LH8+38yyEAYlvLTOokXOanHJ
FSFsyQqhGpWoQDnW8Z+T20/3Ic3uFZ9R94d6T5MhdNCX+A4tt08fRDf7S14I
Q+qX678H//TdbW2T90rs+JIQXmCKfo2v8lKFIbTLWyuvFFuxDWXI8D9Pxr2j
GZrk7Jdfi0Y6w1dn7wQu08/EdtE9dMHKEBb0vu0MF5whwf7GPp+Izx/dw9Hs
EOpRQ7dZ5+09Qqu+RzBCn5S3ir6vRqFZH6s/oP8N/YvYw+xrdL24d/RDe5Ni
D7DL5F1VI9f5R919f75G7F66HQvm6IveKS/uMUD3YNGcJfI/qNuo3mF8wke8
j1b+Jj2OO9s+pOhT+BzduV7VajTQzcji36nPlPN127tLz5hzs9nvFcTzRnMX
s7e7v5vi7hjzlvV6dvye0bvOis31nqPi5/Rf4yylztAsryoZ14/6pDBMT2JH
pO3Vql8ir0peNVL0Xmun3GOYp3/yTSBLzTTfGC7SNXr+jd6WnWbv0necvRB9
j5igp+X/osvEVNCVOfF/EP0PQ/pX0J30affyxp1M40wi/oajb3nOvbS47zrn
HHOfg+7sLR7QV8RtxG+9F7GJfmKGP3SxvP81d3so
            "]]},
          Annotation[#, "Charting`Private`Tag$71750#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0bsrhWEAx/EHB8tBkRRyLwYpch1QRqPRotyjyK0Y3BeDcMQmBrd/hiQL
Ssoti8iACZ8Tw7fP7zmn876d9y3uHu0YSQghLKowEkIZe9mjdrtVzWrTcWII
e9rVSUoIp9q3z9jOGvXZ/RpQtXOtpu0ZtdizrOckp1Rn77CLRxzhIYd5wCFG
k0J446te1JQawjVzeMV83jKPN6xguR7tUj6xincs4D2LWaRCncb/jyL2OdMY
1UX8Hu6dqzzFdOk5XOnT8/nSo/3BBz6rINk1VaQ0D7aE6axkNuuYw3o2qFFv
fveuTDvRd1n8ds7gDxN8NsgB9WvM/Ya4xVVuc4Lj2rDXtaYV5xiXuBz5e8eb
nOdCXM2p07n0//3/Ap0VPQ4=
        "]], Line3DBox[CompressedData["
1:eJwl0bkrx3Ecx/GP2+ZMhh9yL44yioWMiMJGKVdEIaUcuQZ+wmCQIyxSRgr5
B2zkjI2dHYuHDM8er/d3+P7q+8vvHmkdjgkhzKnaqFG9ThNCONOmfcUtRrVv
H+hQq+4jLnCDi9zjCre5o10tu9d1bK/xhBNc4gAHNaS02BBSlaLKxBAqlGGX
MZNZarab1Khcdx3z2MB8trCYHWxXmyLuO+//8nv3/OG3Hu0Lnevy73lcCJ/6
UE9yCL1Kjg+hi0l89bzALlSRHt1ZfGAen5nNJ0aYo1y9uG+VYt8wnRm6s9/0
rn71qVNdOkjyrdVib7GVFZq1ZzStSvc8qxhlOSdZwnGOaVSl7mVd21O84Pnf
O+wNras25v///wWTLD7g
        "]]}, {}, {}, 
      {GrayLevel[0.2], 
       Line3DBox[{1055, 1054, 3562, 3561, 1087, 1076, 3528, 1073, 4110, 1733, 
        1736, 4098, 4099, 1742, 1743}], 
       Line3DBox[{1123, 1085, 1074, 3526, 1071, 4108, 1731, 1734, 1740}], 
       Line3DBox[{1137, 3569, 3568, 3567, 1136, 1149, 3581, 3580, 3579, 1148, 
        3627, 1179, 3616, 1178, 3631, 1180, 3618, 3617, 1099, 3537, 1100, 
        1176, 3614, 1177, 3615, 1049, 1043, 3517, 1044, 1069, 1718, 4082, 
        1717, 1716, 4085, 1720, 4083, 1719, 1678, 4036, 1677, 4064, 4065, 
        1703, 4066, 1704, 4081, 1696, 4054, 1695, 4061, 4062, 4063, 1699, 
        4056, 1698, 4057, 4058, 1700}], 
       Line3DBox[{1150, 1119, 3554, 1117, 3558, 3557, 1092, 1088, 1080, 3529, 
        1077, 4111, 1753, 1729, 1730, 4094, 4095, 1672, 4029, 1640, 1637}], 
       Line3DBox[{1155, 3585, 1158, 3605, 3604, 1174, 3595, 1112, 3544, 1109, 
        3549, 3548, 1060, 1062, 1132, 3565, 1129, 4106, 1750, 1727, 1667, 
        4026, 4027, 1669, 4034, 1647, 4009, 1635, 4002, 4003, 1631, 4016, 
        1657}], Line3DBox[{1166, 3589, 1164, 3599, 3598, 1162, 1160, 3609, 
        3608, 3607, 1107, 3542, 1058, 1050, 3520, 3519, 1053, 1134, 1127, 
        3563, 1125, 4104, 1748, 1756, 1724, 4089, 4090, 1725, 1675, 4032, 
        1629, 3994, 3995, 3996, 1627, 1659, 4020, 4021, 1650, 4012, 1652}], 
       Line3DBox[{1169, 1156, 3587, 3586, 1159, 3606, 1175, 3597, 3596, 1113, 
        3545, 1110, 3550, 1061, 3523, 1063, 1133, 3566, 1130, 4107, 1751, 
        1728, 4092, 1668, 4028, 1670, 4035, 1648, 4010, 4011, 1636, 4004, 
        1632, 4017, 4018, 1658, 1661}], 
       Line3DBox[{1170, 1154, 1157, 3603, 3602, 3601, 1153, 1122, 1115, 1111, 
        3543, 1108, 3547, 3546, 1114, 1091, 1084, 1083, 3539, 1103, 1131, 
        1135, 1752, 1738, 4093, 1737, 1666, 4024, 4025, 1671, 1745, 1676, 
        4033, 1662, 1634, 4000, 4001, 1633, 4008, 1643, 1649, 1656}], 
       Line3DBox[{1172, 3593, 3592, 1142, 3573, 1139, 3571, 3570, 1138, 3626, 
        3625, 1147, 1146, 3624, 3623, 1183, 3622, 1106, 3541, 1093, 3532, 
        1094, 3613, 1065, 1066, 1068, 3525, 1067, 4087, 1721, 1712, 1713, 
        4084, 1684, 4038, 1683, 4043, 1654, 4015, 1655, 4067, 4068, 1705, 
        1708, 4079, 4080, 1688, 4045, 4046, 1689, 4047, 4048, 1690, 4059, 
        1701}], Line3DBox[{1173, 3594, 1145, 3578, 3577, 1141, 3572, 1140, 
        3635, 3634, 1186, 3630, 1182, 3621, 3620, 1105, 1102, 3538, 1097, 
        3536, 3535, 1098, 1070, 1048, 3518, 1046, 4086, 1714, 1715, 1687, 
        4041, 4042, 1686, 4044, 1682, 1679, 4070, 4071, 1707, 4078, 1711, 
        4074, 4075, 1697, 4055, 1694, 4052, 4053, 1691, 4060, 1702}], 
       Line3DBox[{1270, 1269, 3672, 3671, 1244, 1247, 4334, 1887, 4219, 1881, 
        1803, 4143, 4144, 1795, 1796}], 
       Line3DBox[{1272, 3670, 1243, 1246, 4333, 1886, 4218, 1880, 1802, 4142, 
        1805}], Line3DBox[{1295, 3699, 3698, 1296, 1290, 3693, 1288, 1303, 
        3709, 3708, 3707, 1302, 3731, 1282, 3684, 1281, 3697, 1283, 3686, 
        3685, 1189, 3637, 1190, 1315, 3717, 1316, 3719, 1217, 1216, 3648, 
        1210, 1209, 1863, 4208, 1864, 1850, 4203, 1851, 4206, 1859, 1860, 
        4221, 1759, 4115, 4116, 1760, 4117, 1757, 4114, 1758, 4118, 1763, 
        1843, 1840, 4185, 4186, 4187, 1841, 4202, 1848, 4198, 4199, 1849}], 
       Line3DBox[{1298, 3701, 1286, 3691, 3690, 1285, 3704, 1300, 3723, 3722, 
        1318, 3725, 1321, 3728, 3727, 1202, 1204, 3641, 1205, 3645, 3644, 
        1206, 1211, 1194, 3638, 1193, 4204, 1854, 1857, 1861, 4230, 4231, 
        1891, 4233, 1893, 1766, 4121, 4122, 1769, 4191, 1844, 4194, 4195, 
        1846, 4201, 1817, 4162, 4163, 1816, 4164, 1820}], 
       Line3DBox[{1299, 3703, 3702, 1289, 3692, 1291, 3706, 3705, 1301, 3730, 
        3729, 1294, 1293, 3696, 3695, 1292, 3694, 1187, 3636, 1188, 3646, 
        1208, 3718, 1213, 1212, 1214, 3647, 1215, 4207, 1852, 1853, 1858, 
        4205, 1862, 4220, 1888, 4227, 1764, 4119, 1765, 4123, 4124, 1761, 
        1762, 4188, 4189, 1842, 4196, 4197, 1847, 4200, 1814, 4158, 4159, 
        1815}], Line3DBox[{1312, 3716, 3715, 1279, 3683, 1275, 1266, 3669, 
        3668, 1250, 1240, 3655, 1236, 4211, 1867, 1798, 4138, 4139, 1793, 
        1789, 4135, 1787, 4166, 4167, 1825}], 
       Line3DBox[{1314, 1313, 1306, 3712, 3711, 3710, 1309, 1280, 1276, 1259, 
        3658, 1254, 3677, 3676, 1268, 1251, 1241, 3656, 1237, 1248, 1869, 
        4212, 1868, 1799, 4140, 4141, 1794, 4136, 1790, 1788, 4168, 4169, 
        4170, 1821, 1822}], 
       Line3DBox[{1324, 3733, 3732, 1307, 3713, 1304, 3740, 1257, 3659, 1255, 
        3679, 3678, 1252, 1230, 1220, 3649, 1218, 4225, 1877, 1778, 1770, 
        4125, 4126, 1772, 4128, 1774, 4155, 1812, 4176, 4177, 1836, 4179, 
        1838}], Line3DBox[{1333, 1323, 3736, 3735, 3734, 1308, 1305, 3742, 
        3741, 1258, 3660, 1256, 3680, 1253, 3657, 1231, 1221, 3650, 1219, 
        4226, 1878, 1779, 4131, 1771, 4127, 1773, 4129, 1775, 4156, 4157, 
        1813, 4178, 1837, 4180, 4181, 1826, 1827}], 
       Line3DBox[{1336, 1287, 3689, 3688, 3687, 1284, 1319, 3721, 3720, 1317, 
        3724, 1320, 3748, 1330, 1322, 3726, 1201, 3640, 1203, 1199, 1198, 
        1207, 3643, 3642, 1196, 1197, 1227, 1200, 3639, 1195, 1192, 1191, 
        1855, 1856, 4222, 1889, 1874, 1876, 1884, 4228, 4229, 1890, 1892, 
        4232, 1782, 1781, 1767, 4120, 1768, 4190, 1810, 4154, 1809, 1835, 
        4192, 4193, 1845, 1839, 1830, 4174, 1818, 4160, 4161, 1819}], 
       Line3DBox[{1413, 3789, 3788, 1407, 3785, 1408, 3803, 3802, 3801, 1422, 
        3867, 1478, 3872, 1479, 3869, 1480, 3871, 3870, 1360, 1361, 3781, 
        1402, 3783, 1406, 3784, 1393, 1394, 1395, 3780, 1401, 4341, 2012, 
        2013, 1940, 4268, 1939, 4267, 1937, 1938, 4350, 1960, 4298, 4299, 
        1961, 4302, 1962, 4300, 1959, 4297, 1953, 4283, 4284, 4285, 1950, 
        4281, 1948, 4279, 4280, 1949, 1952}], 
       Line3DBox[{1424, 3804, 1425, 3830, 3829, 1453, 3837, 1456, 3856, 1474, 
        3860, 3859, 1471, 1385, 1345, 3757, 1349, 4335, 1979, 1981, 1985, 
        4313, 4314, 1989, 4318, 1898, 4240, 1900, 4249, 4250, 1911, 4262, 
        1931}], Line3DBox[{1436, 1433, 3822, 3821, 3820, 1418, 1415, 3793, 
        3792, 1416, 3797, 3796, 1419, 3863, 1337, 3754, 1339, 1343, 3764, 
        3763, 1355, 1356, 3761, 1357, 1397, 4339, 2011, 2016, 2023, 4351, 
        4352, 2019, 2021, 4355, 1954, 4286, 1927, 4256, 4257, 1925, 4293, 
        4294, 1924, 1923, 4274, 4275, 1920, 4255, 1919}], 
       Line3DBox[{1437, 1423, 3806, 3805, 1426, 3831, 1454, 3839, 3838, 1457, 
        3857, 1475, 3861, 1472, 3854, 1386, 1346, 3758, 1350, 4336, 1980, 
        1982, 4346, 1986, 4315, 1990, 4319, 1899, 4241, 4242, 1901, 4251, 
        1912, 4263, 4264, 1921, 1922}], 
       Line3DBox[{1441, 3817, 3816, 1444, 3852, 1469, 1461, 3845, 3844, 1363, 
        1367, 3776, 1390, 4328, 1999, 1994, 4321, 4322, 1995, 1996, 4325, 
        1904, 4244, 4245, 1908}], 
       Line3DBox[{1446, 1438, 3818, 1445, 3828, 3827, 1452, 1473, 3855, 1468, 
        1462, 3846, 1464, 3858, 1392, 1369, 1368, 1391, 3777, 1347, 1348, 
        2006, 4337, 2001, 2000, 2005, 1987, 4311, 4312, 1988, 4317, 1983, 
        1984, 1905, 1909, 4246, 4247, 4248, 1910, 1914, 1913}], 
       Line3DBox[{1448, 3819, 1447, 3824, 3823, 1410, 3786, 1409, 3795, 3794, 
        1417, 3798, 1420, 3865, 3864, 1338, 1340, 3756, 1344, 3766, 3765, 
        1359, 1403, 1396, 3778, 1398, 4340, 2010, 1933, 1934, 4353, 4354, 
        2020, 4349, 2022, 1955, 4287, 4288, 1928, 4258, 1926, 4295, 4296, 
        1941, 4269, 1942, 4276, 4277, 4278, 1943, 1944}], 
       Line3DBox[{1451, 3826, 3825, 1411, 3787, 1412, 3791, 3790, 1414, 3800, 
        3799, 1421, 3868, 1476, 3866, 1477, 3873, 1341, 3755, 1342, 3762, 
        1358, 3782, 1404, 1405, 1399, 3779, 1400, 4338, 2008, 2009, 1935, 
        4266, 1936, 4356, 2018, 4348, 1963, 4301, 1957, 4289, 4290, 1956, 
        1958, 4291, 4292, 1945, 4270, 4271, 1946, 4272, 4273, 1947, 4282, 
        1951}], Line3DBox[{1460, 3840, 1383, 1371, 3768, 1374, 4330, 2003, 
        1973, 4306, 1976}], 
       Line3DBox[{1467, 1458, 3842, 3841, 1384, 1372, 3769, 1375, 4331, 2004, 
        1974, 4307, 4308, 1977, 1992}], 
       Line3DBox[{1529, 1528, 3894, 3893, 1534, 1501, 3880, 1504, 4443, 2107, 
        2110, 4465, 4466, 2142, 2143}], 
       Line3DBox[{1530, 1532, 1499, 3878, 1502, 4441, 2105, 2108, 2149}], 
       Line3DBox[{1580, 1579, 3935, 3934, 3933, 1576, 3926, 1565, 3914, 3913, 
        1558, 3910, 1560, 3965, 3964, 1590, 1589, 3939, 1587, 3954, 3953, 
        1557, 1556, 1545, 3904, 1547, 4452, 2137, 2047, 2048, 4447, 4448, 
        2132, 4449, 2130, 2037, 4368, 4369, 2034, 4365, 2027, 4361, 4362, 
        2028, 4420, 2092, 4415, 4416, 4417, 2062, 2063}], 
       Line3DBox[{1582, 3931, 3930, 1581, 3936, 1577, 3928, 3927, 1566, 3916, 
        3915, 1567, 1568, 3920, 3919, 1571, 3962, 1584, 3937, 1585, 3938, 
        1554, 3906, 1553, 1542, 1543, 3903, 1544, 4451, 2134, 2135, 2049, 
        4377, 4378, 2050, 2125, 4450, 2091, 4412, 2040, 4370, 4371, 2039, 
        2025, 4357, 4358, 2024, 4421, 4422, 2093, 4418, 4419, 2064, 4391, 
        2066}], Line3DBox[{1602, 1601, 3958, 3957, 1604, 3993, 1619, 3974, 
        3973, 1592, 3943, 1594, 3950, 1541, 3902, 1482, 1484, 3884, 1516, 
        4428, 2103, 2123, 4476, 2118, 4436, 2120, 4462, 2056, 4383, 4384, 
        2052, 4381, 2054, 4399, 4400, 2071, 2072}], 
       Line3DBox[{1605, 3956, 1603, 3992, 3991, 1618, 3972, 1591, 3942, 1593, 
        3949, 3948, 1540, 1481, 1483, 3883, 1515, 4427, 2102, 2122, 2117, 
        4434, 4435, 2119, 4461, 2055, 4382, 2051, 4379, 4380, 2053, 4398, 
        2079}], Line3DBox[{1613, 3966, 1606, 3960, 3959, 1609, 1624, 3986, 
        3985, 3984, 1595, 3944, 1525, 1523, 3899, 3898, 1485, 1486, 1511, 
        3881, 1513, 4437, 2113, 2112, 2124, 4471, 4472, 2151, 2148, 4463, 
        2057, 4385, 4386, 4387, 2060, 2080, 4401, 4402, 2073, 4394, 2076}], 
       Line3DBox[{1617, 1616, 3980, 3979, 3978, 1599, 1527, 3891, 1519, 3889, 
        3888, 1490, 1494, 3877, 1495, 1505, 2104, 4432, 2098, 2099, 2116, 
        4433, 2121, 4457, 2141, 4474, 2147, 2088, 4407, 4408, 4409, 2069, 
        2070}], Line3DBox[{1621, 1596, 3945, 1535, 3896, 3895, 1537, 1487, 
        1491, 3874, 1496, 4429, 2095, 2094, 2111, 4467, 4468, 2144, 4458, 
        2085, 2082}], 
       Line3DBox[{1639, 4007, 4006, 1642, 4031, 1674, 1744, 4102, 4101, 1747, 
        1755, 4113, 1079, 3531, 1082, 1090, 3552, 3553, 1056, 1057, 3556, 
        1121, 3583, 3584, 1152}], 
       Line3DBox[{1653, 4014, 4013, 1651, 4022, 1660, 4019, 1628, 3999, 3998, 
        3997, 1630, 1644, 4103, 1726, 4091, 1722, 4088, 1723, 1749, 4105, 
        1126, 3564, 1128, 1064, 3524, 1052, 3521, 1051, 3522, 1059, 1171, 
        3610, 3611, 3612, 1161, 3588, 1163, 3600, 1165, 3590, 3591, 1167}], 
       Line3DBox[{1692, 4051, 4050, 4049, 1693, 1709, 4073, 4072, 1710, 4077, 
        4076, 1706, 4069, 1646, 1645, 1680, 4037, 1681, 1685, 4040, 4039, 
        1664, 1663, 4023, 1665, 1045, 1047, 3700, 1297, 1095, 3533, 3534, 
        1096, 1101, 3540, 1104, 3619, 1181, 3628, 3629, 1185, 3632, 3633, 
        1184, 1143, 3574, 3575, 3576, 1144, 1168}], 
       Line3DBox[{1741, 4097, 1735, 1732, 4109, 1072, 3527, 1075, 1086, 3560, 
        1124}], Line3DBox[{1804, 1801, 1879, 4217, 1885, 4332, 1245, 1242, 
        1271}], Line3DBox[{1823, 1785, 4133, 1791, 4146, 4145, 1806, 1882, 
        1865, 4209, 1234, 3653, 1238, 1232, 1233, 3673, 3674, 1273, 3681, 
        1277, 1310}], 
       Line3DBox[{1831, 4171, 1828, 4183, 4182, 1833, 1807, 4150, 4149, 4148, 
        1776, 4130, 1777, 1783, 4214, 4213, 1871, 1870, 1872, 4223, 1228, 
        3651, 1225, 1222, 1223, 3663, 3664, 1262, 1261, 3661, 1260, 3743, 
        3744, 3745, 1331, 1325, 3737, 3738, 1327, 3749, 1334}], 
       Line3DBox[{1906, 1902, 4323, 1970, 4304, 4303, 1969, 2007, 1997, 4326, 
        1388, 3774, 1365, 1364, 1381, 3847, 3848, 1465, 3850, 1442, 1439}], 
       Line3DBox[{1917, 4252, 1915, 4260, 4259, 1929, 1895, 4236, 4235, 4234, 
        1894, 4316, 1991, 2014, 4344, 4343, 1978, 1966, 1964, 4309, 1353, 
        3759, 1351, 1387, 1380, 3771, 3772, 1378, 1470, 3862, 1455, 3832, 
        3833, 3834, 1427, 1429, 3809, 3810, 1431, 3812, 1434}], 
       Line3DBox[{1975, 1972, 2002, 4329, 1373, 3767, 1370, 1382, 1459}], 
       Line3DBox[{2067, 4392, 2065, 4426, 2089, 4411, 2090, 4425, 4424, 4423, 
        2030, 4363, 2031, 4366, 2035, 4372, 2041, 4374, 4373, 2042, 4439, 
        2046, 2045, 4376, 2044, 4375, 2043, 2136, 2138, 4453, 1549, 1550, 
        3908, 1555, 1551, 3905, 1552, 3907, 1506, 1507, 3941, 1569, 3917, 
        3918, 1570, 3921, 1562, 3911, 1563, 3912, 1564, 3922, 3923, 1574, 
        3929, 1578, 1573, 1572, 3924, 3925, 1575, 3932, 1583}], 
       Line3DBox[{2078, 4397, 2075, 4414, 4413, 2032, 2029, 4360, 4359, 2026, 
        4364, 2033, 2059, 4393, 2038, 4367, 2036, 4444, 2129, 2153, 2133, 
        2131, 4446, 4445, 2127, 2126, 4440, 2128, 1546, 1548, 3955, 1600, 
        1510, 1509, 1539, 3951, 3952, 1586, 1588, 3940, 1522, 1521, 1612, 
        3963, 1559, 3909, 1561, 3990, 1626, 3982, 3983, 1611, 1608, 3969, 
        3970, 3971, 1615}], 
       Line3DBox[{2084, 4406, 4405, 2087, 4460, 2146, 2140, 4456, 4455, 2101, 
        2097, 4431, 1498, 3876, 1493, 1489, 3886, 3887, 1518, 1526, 3947, 
        1598, 3976, 3977, 1623}], 
       Line3DBox[{2150, 4464, 2109, 2106, 4442, 1503, 3879, 1500, 1533, 3892, 
        1531}], Line3DBox[{1151, 3582, 1120, 3555, 1118, 3559, 1116, 3551, 
        1089, 1081, 3530, 1078, 4112, 1754, 1746, 4100, 1739, 4096, 1673, 
        4030, 1641, 4005, 1638}], 
       Line3DBox[{1311, 3714, 1278, 3682, 1274, 3675, 1267, 3667, 1249, 1239, 
        3654, 1235, 4210, 1866, 1797, 4137, 1800, 4147, 1792, 4134, 1786, 
        4165, 1824}], 
       Line3DBox[{1335, 3751, 3750, 1328, 3739, 1326, 3753, 3752, 1332, 3747, 
        3746, 1329, 1264, 3662, 1263, 3665, 1265, 3666, 1224, 1226, 3652, 
        1229, 4224, 1873, 1875, 4216, 1883, 4215, 1784, 4132, 1780, 1811, 
        4151, 4152, 4153, 1808, 4175, 1834, 4184, 1829, 4172, 4173, 1832}], 
       Line3DBox[{1435, 3814, 3813, 1432, 3811, 1430, 3808, 3807, 1428, 3836, 
        3835, 1450, 1449, 3853, 1379, 3773, 1376, 3770, 1377, 1352, 3760, 
        1354, 4310, 1965, 1967, 4347, 2017, 4345, 2015, 4342, 1932, 1897, 
        4237, 4238, 4239, 1896, 4265, 1930, 4261, 1916, 4253, 4254, 1918}], 
       Line3DBox[{1440, 3815, 1443, 3851, 1466, 3849, 1463, 3843, 1362, 1366, 
        3775, 1389, 4327, 1998, 1993, 4320, 1968, 4305, 1971, 4324, 1903, 
        4243, 1907}], 
       Line3DBox[{1614, 3968, 3967, 1607, 3961, 1610, 3981, 1625, 3989, 3988, 
        3987, 1620, 1520, 3890, 1524, 3900, 1538, 3901, 1508, 1512, 3882, 
        1514, 4438, 2114, 2115, 4475, 2154, 4473, 2152, 4470, 2068, 2058, 
        4388, 4389, 4390, 2061, 4410, 2081, 4403, 2074, 4395, 4396, 2077}], 
       Line3DBox[{1622, 3975, 1597, 3946, 1536, 3897, 1517, 3885, 1488, 1492, 
        3875, 1497, 4430, 2096, 2100, 4454, 2139, 4469, 2145, 4459, 2086, 
        4404, 2083}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{2155, 3517, 3051, 2158, 2168, 2157, 2156, 2250, 2290, 2291, 
        2292, 3648, 2289, 3121, 2801, 4208, 2803, 2802, 2793, 2702, 2693, 
        2694, 3336, 4082, 2698, 2171, 2155}], 
       Line3DBox[{3052, 3518, 3053, 2170, 2169, 3613, 2247, 3614, 3109, 2252, 
        2253, 2342, 2346, 3717, 2347, 3718, 3119, 2286, 2280, 3638, 2279, 
        4204, 3392, 2796, 2797, 4205, 2800, 4206, 2799, 2798, 2719, 2718, 
        2699, 4083, 2700, 4084, 3334, 2697, 3335, 4086, 3052}], 
       Line3DBox[{3056, 3519, 3521, 3055, 2164, 3540, 3081, 3620, 2263, 3623, 
        2265, 3631, 2254, 2255, 2261, 2312, 3162, 3697, 2321, 3695, 2323, 
        3727, 3115, 3640, 2283, 3154, 3665, 3663, 3124, 2295, 2294, 3650, 
        3122, 4226, 2809, 2806, 2807, 4213, 4215, 2749, 3363, 4232, 3355, 
        4121, 2737, 4123, 2731, 4117, 2724, 2722, 2691, 2689, 2677, 4066, 
        2678, 4067, 2683, 4070, 3327, 4037, 3328, 2709, 4091, 4089, 2708, 
        2721, 2717, 4107, 3098, 3566, 3100, 2197, 3056}], 
       Line3DBox[CompressedData["
1:eJwl0L0uRFEYheElCuaMQSYSf1MYMxK9TqcSBcEliEZjVAqhIGpRuQFRmUqt
mHADKnEBREVyJtGIhCdRvHnX+r6zz052c6ezvT+QZB2d4aRXSz6ryQOX3DNr
jSYLeJEX+Za7mJOf+BmVSrKrF1zHgTzBl3yBvZFkUN+Qt+RN/nVujZf1JazI
X2an48mq+5toyfdFcshtvc3z3MCUPIM7+wZ3+QZ1+ZrPcYZyLDnhI7zKx/zO
b+i7t8SQM4V/fptd2f9wVZ9EYTftmw95lvve5bH2/15/xA4o5g==
        "]], 
       Line3DBox[CompressedData["
1:eJwl0c8rpWEYxvH7OAmHg9iIDU0WFmRDpIiO6Ew2xKgpRUooP5JkJ/kXlMhS
mCbJZmpqmrExs1ITK2PDYpKkbMRGPrL49r3u633e53l635qx2f6ZREQsYz4/
Yg636Ygb5BRFPBdGnMiPXFQakZZLkZCT2ExFZPGjJOLe+h3exR5a9be6Q/kI
GXMbvsoHaJfPOGm/S542/+MJvuAp/o8rTDjrhDv4N2f4D3dyk/f7+COa5XP9
oDyAv/Lp2x3lHnSj1ppa/qn/hUa5AfX6XizLWb7jjPt3Yag4YhiDcm5BxKj8
SV7lNdTpVnhct84baNFNvX0TeRcj8iR/5kWu8nyJK3mBK3jL99/Ag/O3uUB/
zCn+wk/6fc4z5+KDvb6bk3IC1eZy/qYLfrG+THedfv+/rxhKPlo=
        "]], 
       Line3DBox[CompressedData["
1:eJwl0T8oxHEcBuCPuoRzKAtFOhn8WZAMdMmAUlKkFAu5weDkLFIWm81OxHZZ
FKUMSiwW2W7isjGzIZ7L8Pa87+97fX93XXp5fSZXERFZ2ayKyMtrKqIku/pv
MuJB/2Z9Q0STflATkdArpdGesm/rI4ZY4JkM6Id8q4244Lj9zhUWOc9HLrLE
HPPlM1lwb8a9Wb7Yq3zmEp84zV7ng7y3MxyWK/1aOvUu5z1lpVsflQ39y28a
q4sY8b0mZFafk0S1e+1JfYqHPJJhz0+45lmB/fYeW7jFVm4zzR128NI7zuXH
O0/5wWN+ss09fT53YyfYbjfzzk4xKft6MfX/f/wBDjk1Mg==
        "]], 
       Line3DBox[{3059, 3524, 2166, 3534, 3079, 3538, 2186, 2187, 3622, 2258, 
        3618, 2260, 2272, 2316, 3686, 2318, 3694, 3112, 2278, 3641, 2284, 
        3643, 3118, 3666, 3125, 3126, 3651, 2297, 4223, 3396, 2808, 4216, 
        2813, 4229, 3406, 4233, 2821, 3354, 4119, 2729, 4116, 2727, 2681, 
        2676, 4065, 2625, 4015, 2623, 2647, 4044, 3329, 4040, 2645, 4088, 
        2707, 3350, 4104, 3093, 3563, 3095, 3059}], 
       Line3DBox[{3525, 3061, 2172, 2246, 3615, 2249, 2251, 2349, 3719, 2348, 
        2287, 3120, 3647, 2288, 4207, 2794, 2795, 2792, 4203, 2791, 2703, 
        2701, 4085, 2696, 2695, 2706, 4087, 3060, 3525}], 
       Line3DBox[CompressedData["
1:eJwl0b0rhWEYB+AbJd8OkoxKMlEoGUidKLGQkBJRIkUpBovBfyB1Iot8ZDEY
KIsySCklMtiUKEkMSilxnQy/rvt3P+85z+m8VeNzfbMZEbEgX/kRF4UR38wq
iHgxr+ZEPLNEf2QZf3lsX1oUUS5Vdpk8sStmtZ7Nff0r/X2yY96VHPtNftil
uCEVuRHz9pVc5JjPJ8wz5ikZ0fc4ww02O0txTSbslllrt8IhfZwDHGa2/SCT
eoe8JSK63b3ELtZJvfksL6KBtXoNa9iZfkaunPWyxa6ft/ogm/UeNrGdSbl0
1qi3mc/Nk3zgk0zLfbEdR+TaPMo73kir+YCffucRk/ohX/Vtbslb+r/gO0/5
k34fXPdsprtK3F0khYn/9/kHdf8/YA==
        "]], Line3DBox[CompressedData["
1:eJwl0L8rxGEcwPGPovw45wYDpXOykbpzGVw3SJEog25Byq/Rj9iUwaj8CRI2
WQyiFMvZlGy6OsmobEzqlJcM797vz/N9vs/329OzvDmzURcRS/hpiXhoFYmI
erzpFFc5wRVOciIZUW6M6OAu3Oo7ZHUeLzpt36f9p7rGF3yJ3qaIXXsyvMNp
zuJA7yOnz3jN+ydcMB/xtHmKJ3mBS1ziCR7BuC7ydipi1Pf60acHcNUccY2M
7rZe5HvzEA8jZ+3JvKhXUNUVrOqiZ3P8bN7COl7bIub5kWd5Dx/6HWN6EMf6
EHl9zl/+rczffMM1bnBuu/M7/+459X//v/Q5Mro=
        "]], 
       Line3DBox[CompressedData["
1:eJwl0L8rxHEcx/E3pfw6ZDAoP0vSySDOxkpYbEqHMzC5xer4B67rslgssh7J
IhkMBru6ImdXcgtlcPK4DM+er9fr0/fTp+9QJruy2xARqzhojjjEYyIix/s4
bo2odUZ0277bI27kWyzYF3Env9lPOKW/8wea6nfoVXmLy5zhTWRxgRJ6uiLO
eY2feM5363Iak/IMD/IwXzvvlwfkPlzpn/jCnj7rHfMdET/e/Ysa0voGlpxF
S8Sy3MinfIYde563ecJelKf5iKd4BJfuKeEBSXuFx/iZR+vfyeO413u5zVb2
zrxewKv8kvj/v38OtjIP
        "]], Line3DBox[CompressedData["
1:eJwl0bsrhXEcx/Gvyf0cirMZTGeUlNwmgwySDCJCdKKTS2alTv4CC8kixD+A
lGIlSmSwKZcswkIudfKS4d378/k8z6/fU0/t2GzvTEFEzCFXFLGIx/KIJyzJ
D1xVFrEnVyZkpHCoHyAhV+BY3sGH97+wKb/zNtc4/yovy6tIFUdUY8Q+7ewU
knqWJzBkb9bX5FU0ysucsed4AWnbgD4uF8qDPIBW27c7OvilIqLLvfP8XRLx
gzq9Xm/AkZ7mtK2Tz/Ue7kWL7Urvk/vRpHfzma2dT3mS7znLd3yLh78dGdwk
I0b5gof5mi/RJr/7vn15F+16E7bkDazj2fM3HMt5Dnfk5TLfseLdJCdsn6UR
J/JP6f//+wW6y0Ff
        "]], 
       Line3DBox[{2180, 3532, 3078, 2184, 3537, 2183, 2182, 2270, 2273, 2274, 
        3637, 2275, 3113, 3646, 2285, 3644, 2281, 2282, 3639, 3114, 3129, 
        2819, 4222, 2817, 2818, 4230, 2815, 4220, 3405, 2816, 4221, 2814, 
        2730, 2679, 2640, 2639, 4036, 2638, 2641, 4038, 2642, 4041, 2631, 
        3319, 4023, 2632, 2195, 2196, 3700, 3169, 2181, 3535, 2180}], 
       Line3DBox[{3533, 3536, 3080, 2185, 3541, 3082, 2257, 3617, 2259, 2271, 
        2315, 3685, 2317, 2276, 3636, 2277, 3116, 3645, 3642, 3117, 2296, 
        3127, 3652, 3128, 4224, 3397, 3398, 2812, 4228, 4231, 3407, 2820, 
        4227, 2736, 2728, 4115, 2726, 2680, 2675, 4064, 2624, 3318, 4043, 
        2646, 2643, 4042, 4039, 2644, 3337, 2716, 4105, 3094, 3564, 3096, 
        2167, 2165, 3533}], Line3DBox[CompressedData["
1:eJwl0L8rxHEcx/H3V5RfX8cgg9AZDCLlR0SUDJIbxEQudYNJKKPBrstgNJwr
u0EGuo1MZoPj/gGlzK7kIcOz5/P1+Xy6uy5bOFjfTyIij7PmiCJ6OiJ68aRH
eag9Ypzf7GEucRn1NOKabzDYEnHsboAL3p/rMX3Ku3aRJ+wrvsSas8TO6VW9
w9vY0CtYxLI9z0edEUu+a+QPfdsa0c99dpbv7Qom9Qxm8WC/o6CrnOcF7+ew
qV+cHWIPtUzEFje4+9In+oMb7U+etkt8gSmdw6P+9tsqfIe67va+7K7L5/+0
RTzbifMmZFC1a0j1a/r/f/8C3Bcv9A==
        "]], 
       Line3DBox[{3182, 3754, 2364, 2386, 3773, 3771, 2388, 2391, 2368, 3758, 
        3189, 4336, 2916, 2914, 2915, 4343, 4345, 2933, 2934, 4355, 3431, 
        4287, 2892, 4289, 2894, 4302, 2904, 2866, 2870, 2954, 3468, 4372, 
        2961, 4370, 2958, 4368, 3469, 4444, 3032, 3516, 4473, 4471, 3507, 
        3028, 3018, 4428, 3266, 3884, 2497, 2496, 2498, 3898, 3900, 2513, 
        3269, 3940, 2593, 3964, 2563, 3919, 2562, 3921, 2546, 2544, 2494, 
        2492, 2484, 3869, 2478, 3866, 2476, 3864, 3182}], 
       Line3DBox[{2365, 3755, 2366, 3185, 3766, 3763, 2378, 3205, 2370, 3760, 
        3191, 4310, 2911, 3435, 2936, 4351, 4354, 2941, 2939, 4348, 2910, 
        2900, 4298, 2902, 2907, 2963, 4373, 2965, 3486, 4450, 3036, 3033, 
        4448, 4445, 3034, 3022, 3500, 4438, 3264, 3882, 2508, 3261, 2522, 
        3951, 3954, 2591, 2588, 3937, 3288, 2560, 3917, 2558, 2488, 2485, 
        3870, 2490, 2365}], 
       Line3DBox[{3184, 3756, 2367, 3183, 3873, 2491, 3871, 2486, 2489, 2559, 
        3918, 2561, 3962, 2586, 2589, 3939, 3289, 3952, 2523, 3901, 2507, 
        3262, 3881, 3263, 4437, 3499, 3501, 4475, 3035, 4446, 3509, 4449, 
        3037, 3007, 4412, 2966, 4374, 2964, 2908, 2903, 4299, 2901, 4301, 
        3433, 2940, 4349, 3462, 4352, 2937, 4347, 2912, 3434, 4309, 2371, 
        3759, 3190, 2385, 3770, 2379, 3764, 3184}], Line3DBox[CompressedData["

1:eJwl0L0rRXEAh/Gvsni5596bkDIw2xgMymrQLbmT1WRiuDcURgZCWYxSJtzF
6l0y+Qf8ARaLpCSlfMrw9Dzf3zm/Tp3h+aXZxbYkNTS7k1aRNHgbRTmpdyRX
zrbskn3MR8769QBa+tTZoL7QQ3zNt/jAlP3Jv5jR7Z3JBq/h1b1HjOonnuAX
703ymX2OEX3P09XkpOQbWNdvXckqX9rLfMh7KOsq9j3v4QPeRaF3eBxjeK4k
c7zgzoOu6Tu+QZ/uxZfe9PybV+wfbtoNvFf+/9cf6McsxQ==
        "]], 
       Line3DBox[CompressedData["
1:eJwl0b0rhWEcxvGfgTo4XhKLSRjs/AEGUgY6pJikiBKx2IhEJw4iZp2Nxdsm
i1hEIXISNiWTFBksPmX49r2u637u4XmemoHx1FheRExgsjiiORFxWhLRyxl9
OhnxWRYxx5MYLIoYwqPtCVO2Ef1ZLuAMJ3ibs+h33qGfySm+4C5uRBOa0YIF
LGIZS+4UlUfMyPk8y2lbUk7La2iQ1211vKcf4Vgf19/kd7ziBt22FK7lA8/c
cQ5X6LRf8ol3PUR9acS5d39ADqP6GOoLI2oxLL94boM/nLdwK25tP3q7/M1t
/MVJd4qRkVewij1UO9/nI2y5m/PN0/IB5rFpe7DdY1H/5aytyr1dfUeulCvQ
p/ck/v/fHzxJQq8=
        "]], Line3DBox[CompressedData["
1:eJwl0E0rRGEYBuB7igXG1xIlI0V+h88yGxtSkpmwI2wYZWUttjYUfsCI/AL5
KBaKNTuRlb1cZXF138/TOW/nPaXK2vRqIUmZsaZknKu2pFZMlvVJLszb5hW9
yo15x1zWp7imsTm5lw/06UvtyZ1+ywc9dhW7Xrkuv+2++GTQbtPuXX/jkSee
W5LZzuSyNXnVF/RzeUa3fixPeGHGfCqPOHDeIfP6HEMMUHXOb0fSr5cYpkaD
d3dlQXbJRc/t8ePZDfOEbxlhlLq7b7n7fvH/f/0BbEAq9A==
        "]], 
       Line3DBox[CompressedData["
1:eJwl0b0rhWEcxvGfpM7xdjCZxDEKyWY+icGA0rEKKcXKISUvg4jYLPJSkmRQ
JgxODBZRJqmT4fwJBhIfGb59r+v+3ffzdD9P08j0wFRJRIxhvjJiATfVEdlk
RLEmYq4qYgYF+R05ebIi4k0elLd4Gwlr69xv7YTr9Xse1c+4RT/nDr7mDPfg
Cr21EXfczbec4TXnEryid/GO3sxneiM34FQuIidfmk/wOA7kPfTJF+6TTnk3
592pVW5HXu/kZ2vp8ohleRVt8jYXzTd4E1/2fGBIrjPP8jBe7En+7Tdbx6vv
tsiPPMsPPMNPvMQF3nXmk/f1H/7GoZzyvGOzI5TJpan///ELIgQ7UQ==
        "]], 
       Line3DBox[CompressedData["
1:eJwl0TsohmEYBuDH5nxIyWAxSQZSihLKZlSUPykGAzkVpShiIYtEDmFy6B+R
QzYTyqAkk5RDSSlKZtef4e567ud9+/q+vtKeodbBtIgYk9nsiLPciBnOS1pe
xG5GRDr39Cxu892dTfsf/sqq3SNX7J5TZ/ob1/VPfsmEecn+2zxpvuEIRyUv
M6LNswuY4IN7ReYuczFnOCUv9uMstxvjs77GKn2Bc/Jk18dr1vLe82t4pZ9K
mfmciQLflBORlBHze5Z34Znez03WsFaSzkq4aFeZuqNXc02v4InewCa5MDdz
xdmhucV8mVIa5TQ/op69zg/MdeZjHkmX3RY7ucNCZ/vs0De4Ktl2y2y3e+UA
b9ltf8dhfVo+8v//5x8jSUUf
        "]], Line3DBox[CompressedData["
1:eJwl0bsrxXEYgPGXzZ1YjBakQ5SUQTFbpBRRykZyC2Vwy4BShoPkPqCTTcnt
H2CxIJOUiFAGf4GPDE/P877fvr9zzu+U9Ay2DqRFxARmsyPOciNaMiI+8iOm
cyIGcavvMaz7syJedJtO8ipy7Na53e6QUyiy6zRv6R3sosDulBNciUvdwOfc
yM24xpp75QURZTg2r5ib9AZXcgIVOHF2gWpdhWXnR+Z6XYdabNr18Yv9mR7R
Q0jpA3ToC7+7NM934yvU6jrceQ/36NVP9vO8iCXUZEY8243qcVSYE5jSM5hD
sbmbC7kInboLD+7lm8c8ewQ33vkk//AOf/E2f/MGv/ErNt1bMz/pRyT1nt2n
/sD73z1zps9IOdtHug4sZP//v7+tGEWV
        "]], Line3DBox[CompressedData["
1:eJwl0T0ohWEYgOHHQv6On5JBBpsySAZ/oWwmJVJ0SlY6SIhNKWUW5yQZJDJJ
xElkUkhSBiNhogyS1SXD3X0/z3l7v77v1IyM96ZyImISS0UR/fkRPcgmIhbN
76URC8URqcKIMb4z3yOl33iAC/22qjNYx6Bdud2W3kapTtod6EM0m/e5lbPc
xh3oxiXO0FYWcc5dfMGd3I4jnXFXo27AsXkH1boKu7qJN5wZ4yxP8xT29O3f
eR4yn3q/2pKIE370zjfcZG7BtR7lJ17m+oKINc6gTtdiVs/h1ZkFrrRLcgUP
84N9ru7TCZ7yjAnM4Mr3nf17Js/zJ38grdfwop+xotPu+dHf+MK63aZdkXt3
dD7nlfz/f7/HIkDX
        "]], Line3DBox[CompressedData["
1:eJwl0L0rxHEcwPGPkuPOw5mMQtmIv0Eig7qjzJSnAZNBecrjcEW/wWBTMih0
g42yUCadLDpFpvsbSPK6DO/e78+nT99+/TqmlvKLNRExiUJjxF1zxAavobYl
og5n+rwhIqtP9a+bE/MXH5s/eMtc4hfs6XU86U0uc4ET1KcjxryT4Qn+qb6D
Ef3NB1zx5hEn6HG3y2W7GX7jkrt+3YtLcxFd+ppHW31bk+/ErJ7Hcybiyryg
E27nC7tO7kZR7yCl09jW++4G9b0e5hsewgBusxF91Td52l1OP+oHtOm83aEu
IGVOeNzunZf5lefsP3nFvIpK9v///wG1zzmc
        "]], 
       Line3DBox[{3215, 3778, 2395, 2412, 2410, 3782, 2411, 3783, 3217, 2404, 
        2405, 2501, 2502, 3907, 2535, 3906, 3279, 2540, 3277, 3904, 3278, 
        4452, 3040, 3039, 2982, 4377, 2974, 4376, 2973, 2969, 2857, 2851, 
        2848, 4267, 2844, 4266, 3426, 2928, 2929, 4340, 3215}], 
       Line3DBox[{3216, 2398, 2400, 3780, 2399, 2401, 2402, 2413, 2524, 2525, 
        2537, 3280, 3908, 2532, 2531, 2530, 2972, 4453, 3041, 3042, 2978, 
        2967, 2854, 2831, 2830, 2847, 2932, 2846, 2845, 4341, 2931, 2927, 
        3216}], Line3DBox[{2396, 3779, 2397, 4338, 3459, 2842, 2843, 4268, 
        2853, 2855, 2968, 4375, 2971, 2977, 3038, 4451, 3276, 3903, 2527, 
        2526, 2534, 3905, 2533, 2415, 2414, 3784, 2409, 2408, 2396}], 
       Line3DBox[CompressedData["
1:eJwl0M8rw3Ecx/G3C+1rxuQfWI0j/gYHUvJjzlIuK7W5uclSai1pZbnPQUoN
BxcuipKTmuRHykk5Oe/g4LEcnj1f79f7863v55Nb2yiUeyJiBY10RDsTsZuK
eOUD87b8Jte4jr4kojAYkfCT/Zzc0c/yD7d1h3IDdYw5l0dR/rAr8aNzk9wy
XyAvX/JCNqI5EPHQH3HOS+ZlnMll/tK3kJNHUZXTXduneMfcyxW+xYx8xdOY
wvVQxASP405e5Hte9X2TE/M+17o73br5U96U3/kFRV0JW7pv857/vvE+FZ53
r2MMu88ITnRZPtUdoePcL6ryc+b/vf8AVgY2WA==
        "]]}}},
    VertexNormals->CompressedData["
1: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
Hhh1xvqkft95zD+wHYnwHPnz+PsQMquxoz3A+kD89h9TAnTEehq1S+bpMPr8
69qVTCzftvvucvNjNGQXv9Ldfg0dTdzMvleI4+F7p/kLkpOKLo6RueNv6ejH
EWvecPb7Gi4CuyyCB5F7nNgXrk4aehTaBgd2kui2vIvSsohh5GR7XCGKxUDa
6Vu0V+D6IHH85mUDKgUdeuIhcsMVr1djGH8E60/5vOtS0qYKpKeiaZWTSqCD
s6bF5XIkOk/XsVJXb0NvrDP/OVwaQblz0+V3WwkkJKqWU8BzGm15Ps1IER9B
P5jKT4TlSWS/9arDutcn0RY7w8HxHwQqnUlYv9sA55dny4aMu40oJfW/y/em
SWTo13Q68RSJvo4/mW4LOYaO5nSlHD1AoIWtH1+XYP7ga3BA4JdlG1ohY/mY
Zk4ir7dhvw5gucVGxXaKShUKzYz77YJ5wCXK0TMeuE4vnyiWeidViQbEL691
usZCkj85/+fouuO5/L44EZFVtIwiKS0pNJRuVsgoRL6izBCKZGUXKntFSVul
VFJkO/YeH3vzWc8jWUkSKr/7+f17Xtd5zj3jfd7H57n3UZl1x3W676yU/vZO
lLJ0/uvBDib6KxN1nvW+EPu38FUPLrejW9utLbqPkkjN/h9hgOvPxmOQc9Gz
CqVPSbNx6uE41Z1aDsXrpcbm/qkGVaAzZ25ekq0i0X8HpvsHcB3fM5PzSI09
gTamO1tWl5LobMm5Lwas80RHjYe2/juOinps5lNwf5PMj/fJwzjwe4fqnY7P
uG8d+K9xypCBFH8JOhhi/6+pmqXKLvag+Bcf9uWJE+jfVon72gG437ka/H3G
3YZ5TFp/agkDmWj/DErAdS39W7Ti0+1u1Jr03EGRk4kmX8g7sO6TP3BIeUev
Vxf6SzQEsukw0arxd26yGPf+yyya4LfrRHNyv0bYrhFoz6vs9Wtw/nh+fSF7
kK8FlQh4cq4bIhFZN9N3C/OEqEc9si1PNVGzU6+lRgfG336DsDBXnC9SKn4c
WeqIqVt09mo9ibJPd9FuYhzSNcheoVSiior+PIlhmGMetOfzln24by7+605I
666ADhkO/p27cb8U/HYzz45ExmJjrd76NSCyfUQZTeB+ft6IPo/7b5AuMrE0
6YYFAbulnRuYyG5GM1zSl0Qfn2z6e/1GF3hwabhvXKKijAUxR3nMN6SE83VG
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
iaQnP67rkFtMpxBrJpro/PdJ8k0ffD4uJm+H821uMfu/1ZV0dNdtk9DVA4Ow
xDnBd4l1P7PEiNwZCg1VcPXYS2zG85PDNmUjrEff63pr320G2uN+5+zlkg7I
ZXIfvov9UBk1zk06MZGkkXT2hoQmuBs01TmC9YjzmccYxhGIzh5KPiJqIS5y
kwOe0yHJYX2FAZVABkb1HxWTP8GZrxuYB38R4EKdI21lR1HWrwofjc29sOO4
np+MHQkFfF05nC4MNCA9KfAougFOX3fy99YnweXevn0u8wQ6t1W+wYezAlp5
0BbW/0vLWzrjt2K+yZY1aB7TQwGafCpFqJGApa4zMpQhAkncoP5LwnPALYPB
CD7c97eW/xRwa+tC3hbD/95n98Gl/C/XYnEeVVfwNZyuo6OjF5+n6M4PQeO7
Z2c7MP8ZnTj29NRGGspOutBHyeuCumecy1fxftMtZUD7JwMFHhr6uHCuC1Se
fOCyw/n5PqIizF6aiTbN7xppoffjfq/LU4XnTvcXtt8v29KRYOWtx+daqLC1
xU1y1ImESWqnofXUMArIFtXZNEeFD3mm6kE4by2jWtKOeg+je6EBMZek6DCw
MsbmtTfG4X+fT5SlDiCl0zsbHl4ahk7TZYHveL0z57P5+SUqilrUmfr9Yxhu
09un/2D9LmHf9SWaqGh3z2ei0oOA5NEpxjTOq+XQt1zJk82wPoOWXmZDgJvD
a48TrPeW+UtHVK62wLWdNu72ZQwwHLmrzuLh5QGrNeu8uiEjhzfhNhcTum1y
Aj0wDktKexVEOXTBrF9wLu0UE8bH+ASjWO+ZTJ8HR9NOWL356NWYXXS4cdxu
629Wnnum+CodGYBnQQF5l1PpEGaj8FISr69ov93+gqMf3HiP7r+O8XTF6YrR
eZy3rwV4VS6/zIfi+VUfKdiPGcd///iL42J6IHj5764iYHSelCnOo8Ecf6x6
F8bP8ivvneKcB8H565GkF+dpsD8sP2ortv+y2oZbpcZDMLHgG2LwH45HVOsR
N1yPSwNb7IuEyoE7LZ8rE/O/1FmiKhHXtVi1tBHJXgbbT+oNPXUlYSDEUfgM
tsu98OTTWKIEFm+BFev/t5e/+yWz+mT/zWualqOtsFbTPIfRQAeG8AGtmxgP
hezfO+q96AMB9fC7eSYMCJBUYJhj+6O7uZN5v/XA1Oc3FiEbaECS+Yy/rH6b
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
/g==
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{393.3983639680972, 406.29057999837653`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-10, 10}, {-10, 10}, {-10, 10}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-2.538710891668144, 1.5928224127446167`, 1.5709435922349213`},
  ViewVertical->{-0.11618122455100939`, 0.9898604776225302, 
   0.08171999695744321}]], "Output",
 CellLabel->"Out[44]=",ExpressionUUID->"46456df1-41b0-4de7-9878-1a800760f5a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "transform5pt5", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"transform5pt5", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      SubscriptBox["Z", "0"], "\[Rule]", " ", 
      RowBox[{
       SqrtBox[
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         SuperscriptBox["R", "2"]}]], 
       RowBox[{"Sin", "[", 
        FractionBox["T", "a"], "]"}]}]}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "1"], "\[Rule]", " ", 
      RowBox[{"R", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "2"], "\[Rule]", " ", 
      RowBox[{"R", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "3"], "\[Rule]", " ", 
      RowBox[{"R", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "4"], "\[Rule]", " ", 
      RowBox[{
       SqrtBox[
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         SuperscriptBox["R", "2"]}]], 
       RowBox[{"Cos", "[", 
        FractionBox["T", "a"], "]"}]}]}]}], "\[IndentingNewLine]", "}"}]}], 
  " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"transform5pt5", " ", "//", " ", "TableForm"}]}], "Input",
 CellLabel->"In[45]:=",ExpressionUUID->"3b52eb4d-7f18-4352-87dc-8e5cebf1b791"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       SubscriptBox["Z", "0"], "\[Rule]", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          SuperscriptBox["R", "2"]}]], " ", 
        RowBox[{"Sin", "[", 
         FractionBox["T", "a"], "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "1"], "\[Rule]", 
       RowBox[{"R", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "2"], "\[Rule]", 
       RowBox[{"R", " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "3"], "\[Rule]", 
       RowBox[{"R", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "4"], "\[Rule]", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          SuperscriptBox["R", "2"]}]], " ", 
        RowBox[{"Cos", "[", 
         FractionBox["T", "a"], "]"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[47]//TableForm=",ExpressionUUID->"7703b2e6-a499-4311-a38f-\
50b5564f5d99"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"hyperboloid5pt1", "\[IndentingNewLine]", 
 RowBox[{"hyperboloid5pt1", " ", "/.", " ", 
  "transform5pt5"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hyperboloid5pt1", " ", "/.", " ", "transform5pt5"}], " ", "//", 
  " ", "Simplify", " "}]}], "Input",
 CellLabel->"In[48]:=",ExpressionUUID->"6827325e-af1a-472a-9480-e7e0401403c8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SubsuperscriptBox["Z", "0", "2"]}], "+", 
   SubsuperscriptBox["Z", "1", "2"], "+", 
   SubsuperscriptBox["Z", "2", "2"], "+", 
   SubsuperscriptBox["Z", "3", "2"], "-", 
   SubsuperscriptBox["Z", "4", "2"]}], "\[Equal]", 
  RowBox[{"-", 
   SuperscriptBox["a", "2"]}]}]], "Output",
 CellLabel->"Out[48]=",ExpressionUUID->"df898c46-3639-427f-bd3a-2021034361ac"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["a", "2"], "+", 
       SuperscriptBox["R", "2"]}], ")"}]}], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", 
      FractionBox["T", "a"], "]"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox["R", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["a", "2"], "+", 
      SuperscriptBox["R", "2"]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      FractionBox["T", "a"], "]"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox["R", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox["R", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], "\[Equal]", 
  RowBox[{"-", 
   SuperscriptBox["a", "2"]}]}]], "Output",
 CellLabel->"Out[49]=",ExpressionUUID->"657edd00-590c-4d8c-8834-73220e3c2b82"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[50]=",ExpressionUUID->"66799879-4380-45d4-9a05-66aa693af324"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Dt", "[", " ", "transform5pt5", "  ", "]"}], "  ", "/.", " ", 
   "dtReplace"}], "  ", "//", " ", "TableForm"}]], "Input",
 CellLabel->"In[51]:=",ExpressionUUID->"3f361964-211a-4ad8-b03e-04b4c385b8e1"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       SubscriptBox["dZ", "0"], "\[Rule]", 
       RowBox[{
        FractionBox[
         RowBox[{"dT", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            SuperscriptBox["R", "2"]}]], " ", 
          RowBox[{"Cos", "[", 
           FractionBox["T", "a"], "]"}]}], "a"], "+", 
        FractionBox[
         RowBox[{"dR", " ", "R", " ", 
          RowBox[{"Sin", "[", 
           FractionBox["T", "a"], "]"}]}], 
         SqrtBox[
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           SuperscriptBox["R", "2"]}]]]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "1"], "\[Rule]", 
       RowBox[{
        RowBox[{"dR", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{"d\[Theta]", " ", "R", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "2"], "\[Rule]", 
       RowBox[{
        RowBox[{"d\[Theta]", " ", "R", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
        RowBox[{"dR", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{"d\[Phi]", " ", "R", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "3"], "\[Rule]", 
       RowBox[{
        RowBox[{"d\[Phi]", " ", "R", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"d\[Theta]", " ", "R", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
        RowBox[{"dR", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "4"], "\[Rule]", 
       RowBox[{
        FractionBox[
         RowBox[{"dR", " ", "R", " ", 
          RowBox[{"Cos", "[", 
           FractionBox["T", "a"], "]"}]}], 
         SqrtBox[
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           SuperscriptBox["R", "2"]}]]], "-", 
        FractionBox[
         RowBox[{"dT", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            SuperscriptBox["R", "2"]}]], " ", 
          RowBox[{"Sin", "[", 
           FractionBox["T", "a"], "]"}]}], "a"]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[51]//TableForm=",ExpressionUUID->"35e1742f-3637-4ac3-b603-\
816cc7c95929"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Collect", "[", " ", 
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"lineElement5pt2", "  ", "/.", " ", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"Dt", "[", " ", "transform5pt5", "  ", "]"}], "  ", "/.", 
          " ", "dtReplace"}], " ", ")"}]}], "  ", "//", " ", "Expand"}], "  ",
       "//", " ", "Simplify"}], "  ", ")"}], " ", ",", " ", 
    RowBox[{"{", " ", 
     RowBox[{
     "dT", ",", " ", "dR", " ", ",", " ", "d\[Theta]", ",", " ", "d\[Phi]"}], 
     "}"}]}], " ", "]"}], "  ", "//", " ", "FullSimplify", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "example", " ", "where", " ", "it", " ", "factors", " ", "differently"}], 
   " ", "*)"}], " "}]], "Input",
 CellLabel->"In[52]:=",ExpressionUUID->"4700c714-2d4f-4c2e-819c-16ae5694487d"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"2", " ", 
    SuperscriptBox["a", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["a", "2"], "+", 
      SuperscriptBox["R", "2"]}], ")"}]}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     SuperscriptBox["dT", "2"], " ", 
     SuperscriptBox["R", "4"]}], "+", 
    RowBox[{
     SuperscriptBox["a", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"dR", "-", "dT"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"dR", "+", "dT"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["d\[Theta]", "2"]}], "+", 
          SuperscriptBox["d\[Phi]", "2"]}], ")"}], " ", 
        SuperscriptBox["R", "2"]}]}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SuperscriptBox["dT", "2"], " ", 
        SuperscriptBox["R", "2"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["d\[Theta]", "2"]}], "+", 
          SuperscriptBox["d\[Phi]", "2"]}], ")"}], " ", 
        SuperscriptBox["R", "4"]}]}], ")"}]}], "-", 
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox["d\[Phi]", "2"], " ", 
     SuperscriptBox["R", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["a", "2"], "+", 
       SuperscriptBox["R", "2"]}], ")"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]], "Output",
 CellLabel->"Out[52]=",ExpressionUUID->"c161bf07-0488-42d7-90b0-d1b066c7b8d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric5pt6", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric5pt6", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"metric", "[", " ", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{"Collect", "[", " ", 
        RowBox[{
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"lineElement5pt2", "  ", "/.", " ", 
            RowBox[{"(", " ", 
             RowBox[{
              RowBox[{"Dt", "[", " ", "transform5pt5", "  ", "]"}], "  ", "/.",
               " ", "dtReplace"}], " ", ")"}]}], "  ", "//", " ", "Expand"}], 
          " ", ")"}], " ", ",", " ", 
         RowBox[{"{", " ", 
          RowBox[{
           SuperscriptBox["dT", "2"], ",", " ", 
           SuperscriptBox["dR", "2"], " ", ",", " ", 
           SuperscriptBox["d\[Theta]", "2"], ",", " ", 
           SuperscriptBox["d\[Phi]", "2"]}], "}"}]}], " ", "]"}], "  ", ")"}],
       " ", ",", " ", 
      RowBox[{"{", " ", 
       RowBox[{
       "dT", " ", ",", " ", "dR", " ", ",", " ", "d\[Theta]", " ", ",", " ", 
        "d\[Phi]"}], " ", "}"}]}], " ", "]"}], " ", "//", " ", "Simplify"}]}],
   "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"metric5pt6", " ", "//", " ", "MatrixForm"}]}], "Input",
 CellLabel->"In[53]:=",ExpressionUUID->"e9d916af-8599-4fc6-a7ab-1aaa4eded9a5"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       FractionBox[
        SuperscriptBox["R", "2"], 
        SuperscriptBox["a", "2"]]}], "0", "0", "0"},
     {"0", 
      FractionBox[
       SuperscriptBox["a", "2"], 
       RowBox[{
        SuperscriptBox["a", "2"], "+", 
        SuperscriptBox["R", "2"]}]], "0", "0"},
     {"0", "0", 
      SuperscriptBox["R", "2"], "0"},
     {"0", "0", "0", 
      RowBox[{
       SuperscriptBox["R", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[55]//MatrixForm=",ExpressionUUID->"7189e4cd-ac1d-4ee5-84ed-\
d5d9014adcf2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eulerLagrangeEquations", "[", "  ", 
   RowBox[{"metric5pt6", " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"T", ",", "R", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], " ", ",",
     " ", "u"}], " ", "]"}], "  ", "//", " ", "TableForm"}]], "Input",
 CellLabel->
  "In[150]:=",ExpressionUUID->"3779f35b-16de-4bf8-b7c7-5a0ce54a94a8"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      FractionBox[
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"R", "[", "u", "]"}], " ", 
         RowBox[{
          SuperscriptBox["R", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], " ", 
         RowBox[{
          SuperscriptBox["T", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         RowBox[{
          SuperscriptBox["T", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "u", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"R", "[", "u", "]"}], "2"], " ", 
         RowBox[{
          SuperscriptBox["T", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "u", "]"}]}]}], 
       RowBox[{
        SuperscriptBox["a", "2"], "+", 
        SuperscriptBox[
         RowBox[{"R", "[", "u", "]"}], "2"]}]]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"R", "[", "u", "]"}], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["R", "\[Prime]",
             MultilineFunction->None], "[", "u", "]"}], "2"]}], 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          SuperscriptBox[
           RowBox[{"R", "[", "u", "]"}], "2"]}]]}], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"R", "[", "u", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           SuperscriptBox[
            RowBox[{"R", "[", "u", "]"}], "2"]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["T", "\[Prime]",
            MultilineFunction->None], "[", "u", "]"}], "2"]}], 
        SuperscriptBox["a", "4"]], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"R", "[", "u", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           SuperscriptBox[
            RowBox[{"R", "[", "u", "]"}], "2"]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], "[", "u", "]"}], "2"]}], 
        SuperscriptBox["a", "2"]], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"R", "[", "u", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           SuperscriptBox[
            RowBox[{"R", "[", "u", "]"}], "2"]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Phi]", "\[Prime]",
            MultilineFunction->None], "[", "u", "]"}], "2"]}], 
        SuperscriptBox["a", "2"]], "+", 
       RowBox[{
        SuperscriptBox["R", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{
          SuperscriptBox["R", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}]}], 
        RowBox[{"R", "[", "u", "]"}]], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{
          SuperscriptBox["R", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}]}], 
        RowBox[{"R", "[", "u", "]"}]], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cot", "[", 
         RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[150]//TableForm=",ExpressionUUID->"3855b791-2439-4ecb-a494-\
2b18a41592b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "differentials", "]"}], "\[IndentingNewLine]", 
 RowBox[{"differentials", " ", "=", " ", 
  RowBox[{"{", " ", 
   RowBox[{
   "dT", " ", ",", " ", "dR", " ", ",", " ", "d\[Theta]", " ", ",", " ", 
    "d\[Phi]"}], " ", "}"}], " "}]}], "Input",
 CellLabel->"In[56]:=",ExpressionUUID->"f481a51b-b2dd-4d2f-a9d0-04e6480f8cf7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"dT", ",", "dR", ",", "d\[Theta]", ",", "d\[Phi]"}], 
  "}"}]], "Output",
 CellLabel->"Out[57]=",ExpressionUUID->"6aa4d6b0-f3d5-4707-8661-89a46b80c631"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "lineElement5pt6", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lineElement5pt6", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sum", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"metric5pt6", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "i"}], "]"}], "]"}], "*", " ", 
       SuperscriptBox[
        RowBox[{"(", " ", 
         RowBox[{"differentials", "[", 
          RowBox[{"[", "i", "]"}], "]"}], " ", ")"}], "2"]}], " ", ",", " ", 
      RowBox[{"{", " ", 
       RowBox[{"i", " ", ",", " ", "1", " ", ",", " ", "4"}], " ", "}"}]}], 
     " ", "]"}], "  ", "//", " ", "Simplify"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"looks", " ", "different", "  ", "but", " ", "equivalent"}], " ", 
   "*)"}], " "}]}], "Input",
 CellLabel->"In[58]:=",ExpressionUUID->"65142ab9-136d-49d0-89be-902ec1e15dad"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["d\[Theta]", "2"], " ", 
   SuperscriptBox["R", "2"]}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox["dR", "2"]}], 
   RowBox[{
    SuperscriptBox["a", "2"], "+", 
    SuperscriptBox["R", "2"]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["dT", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["a", "2"], "+", 
      SuperscriptBox["R", "2"]}], ")"}]}], 
   SuperscriptBox["a", "2"]], "+", 
  RowBox[{
   SuperscriptBox["d\[Phi]", "2"], " ", 
   SuperscriptBox["R", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]], "Output",
 CellLabel->"Out[59]=",ExpressionUUID->"c2be5b65-283f-4369-b79f-e9a4a5df249a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "transform5pt7", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"transform5pt7", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      SubscriptBox["Z", "0"], "\[Rule]", " ", 
      RowBox[{"a", 
       RowBox[{"(", 
        FractionBox[
         RowBox[{"1", "+", 
          SuperscriptBox["\[Psi]", "2"]}], 
         RowBox[{"1", "-", 
          SuperscriptBox["\[Psi]", "2"]}]], ")"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["T", "a"], "]"}]}]}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "1"], "\[Rule]", " ", 
      RowBox[{"a", 
       RowBox[{"(", 
        FractionBox[
         RowBox[{"2", " ", "\[Psi]"}], 
         RowBox[{"1", "-", 
          SuperscriptBox["\[Psi]", "2"]}]], ")"}], 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "2"], "\[Rule]", " ", 
      RowBox[{"a", 
       RowBox[{"(", 
        FractionBox[
         RowBox[{"2", " ", "\[Psi]"}], 
         RowBox[{"1", "-", 
          SuperscriptBox["\[Psi]", "2"]}]], ")"}], 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "3"], "\[Rule]", "  ", 
      RowBox[{"a", 
       RowBox[{"(", 
        FractionBox[
         RowBox[{"2", " ", "\[Psi]"}], 
         RowBox[{"1", "-", 
          SuperscriptBox["\[Psi]", "2"]}]], ")"}], 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "4"], "\[Rule]", "   ", 
      RowBox[{"a", 
       RowBox[{"(", 
        FractionBox[
         RowBox[{"1", "+", 
          SuperscriptBox["\[Psi]", "2"]}], 
         RowBox[{"1", "-", 
          SuperscriptBox["\[Psi]", "2"]}]], ")"}], " ", 
       RowBox[{"Cos", "[", 
        FractionBox["T", "a"], "]"}]}]}]}], "\[IndentingNewLine]", "}"}]}], 
  " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"transform5pt7", " ", "//", " ", "TableForm"}]}], "Input",
 CellLabel->"In[60]:=",ExpressionUUID->"7b2b6ed1-976c-4a63-8c64-549982092367"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       SubscriptBox["Z", "0"], "\[Rule]", 
       FractionBox[
        RowBox[{"a", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["\[Psi]", "2"]}], ")"}], " ", 
         RowBox[{"Sin", "[", 
          FractionBox["T", "a"], "]"}]}], 
        RowBox[{"1", "-", 
         SuperscriptBox["\[Psi]", "2"]}]]}]},
     {
      RowBox[{
       SubscriptBox["Z", "1"], "\[Rule]", 
       FractionBox[
        RowBox[{"2", " ", "a", " ", "\[Psi]", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
        RowBox[{"1", "-", 
         SuperscriptBox["\[Psi]", "2"]}]]}]},
     {
      RowBox[{
       SubscriptBox["Z", "2"], "\[Rule]", 
       FractionBox[
        RowBox[{"2", " ", "a", " ", "\[Psi]", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
        RowBox[{"1", "-", 
         SuperscriptBox["\[Psi]", "2"]}]]}]},
     {
      RowBox[{
       SubscriptBox["Z", "3"], "\[Rule]", 
       FractionBox[
        RowBox[{"2", " ", "a", " ", "\[Psi]", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}], 
        RowBox[{"1", "-", 
         SuperscriptBox["\[Psi]", "2"]}]]}]},
     {
      RowBox[{
       SubscriptBox["Z", "4"], "\[Rule]", 
       FractionBox[
        RowBox[{"a", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["\[Psi]", "2"]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          FractionBox["T", "a"], "]"}]}], 
        RowBox[{"1", "-", 
         SuperscriptBox["\[Psi]", "2"]}]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[62]//TableForm=",ExpressionUUID->"5788f2c0-3cdf-4abf-9a9a-\
97cb51d12060"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"hyperboloid5pt1", "\[IndentingNewLine]", 
 RowBox[{"hyperboloid5pt1", " ", "/.", " ", 
  "transform5pt7"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hyperboloid5pt1", " ", "/.", " ", "transform5pt7"}], "  ", "//", 
  " ", "Simplify", " "}]}], "Input",
 CellLabel->"In[63]:=",ExpressionUUID->"bea89b0d-c7d3-4dcf-9e37-970aca6acdf7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SubsuperscriptBox["Z", "0", "2"]}], "+", 
   SubsuperscriptBox["Z", "1", "2"], "+", 
   SubsuperscriptBox["Z", "2", "2"], "+", 
   SubsuperscriptBox["Z", "3", "2"], "-", 
   SubsuperscriptBox["Z", "4", "2"]}], "\[Equal]", 
  RowBox[{"-", 
   SuperscriptBox["a", "2"]}]}]], "Output",
 CellLabel->"Out[63]=",ExpressionUUID->"b40fef05-fa9f-4e13-aff0-6fb5eac435c7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["a", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[Psi]", "2"]}], ")"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        FractionBox["T", "a"], "]"}], "2"]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[Psi]", "2"]}], ")"}], "2"]]}], "+", 
   FractionBox[
    RowBox[{"4", " ", 
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox["\[Psi]", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["\[Psi]", "2"]}], ")"}], "2"]], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["\[Psi]", "2"]}], ")"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       FractionBox["T", "a"], "]"}], "2"]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["\[Psi]", "2"]}], ")"}], "2"]], "+", 
   FractionBox[
    RowBox[{"4", " ", 
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox["\[Psi]", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["\[Psi]", "2"]}], ")"}], "2"]], "+", 
   FractionBox[
    RowBox[{"4", " ", 
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox["\[Psi]", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["\[Psi]", "2"]}], ")"}], "2"]]}], "\[Equal]", 
  RowBox[{"-", 
   SuperscriptBox["a", "2"]}]}]], "Output",
 CellLabel->"Out[64]=",ExpressionUUID->"eaf1809f-9ecf-467e-9470-f85fd42cfbca"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[65]=",ExpressionUUID->"e939e0fc-74ed-417c-95cd-62720a2ccabb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dt", "[", " ", "transform5pt7", " ", "]"}], " ", "/.", " ", 
  "dtReplace", " "}]], "Input",
 CellLabel->"In[66]:=",ExpressionUUID->"b36059b4-da98-45cd-a42f-3298b0b2676a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["dZ", "0"], "\[Rule]", 
    RowBox[{
     FractionBox[
      RowBox[{"dT", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[Psi]", "2"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        FractionBox["T", "a"], "]"}]}], 
      RowBox[{"1", "-", 
       SuperscriptBox["\[Psi]", "2"]}]], "+", 
     FractionBox[
      RowBox[{"2", " ", "a", " ", "d\[Psi]", " ", "\[Psi]", " ", 
       RowBox[{"Sin", "[", 
        FractionBox["T", "a"], "]"}]}], 
      RowBox[{"1", "-", 
       SuperscriptBox["\[Psi]", "2"]}]], "+", 
     FractionBox[
      RowBox[{"2", " ", "a", " ", "d\[Psi]", " ", "\[Psi]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[Psi]", "2"]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["T", "a"], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["\[Psi]", "2"]}], ")"}], "2"]]}]}], ",", 
   RowBox[{
    SubscriptBox["dZ", "1"], "\[Rule]", 
    RowBox[{
     FractionBox[
      RowBox[{"4", " ", "a", " ", "d\[Psi]", " ", 
       SuperscriptBox["\[Psi]", "2"], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["\[Psi]", "2"]}], ")"}], "2"]], "+", 
     FractionBox[
      RowBox[{"2", " ", "a", " ", "d\[Psi]", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
      RowBox[{"1", "-", 
       SuperscriptBox["\[Psi]", "2"]}]], "-", 
     FractionBox[
      RowBox[{"2", " ", "a", " ", "d\[Theta]", " ", "\[Psi]", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{"1", "-", 
       SuperscriptBox["\[Psi]", "2"]}]]}]}], ",", 
   RowBox[{
    SubscriptBox["dZ", "2"], "\[Rule]", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "a", " ", "d\[Theta]", " ", "\[Psi]", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}], 
      RowBox[{"1", "-", 
       SuperscriptBox["\[Psi]", "2"]}]], "+", 
     FractionBox[
      RowBox[{"4", " ", "a", " ", "d\[Psi]", " ", 
       SuperscriptBox["\[Psi]", "2"], " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["\[Psi]", "2"]}], ")"}], "2"]], "+", 
     FractionBox[
      RowBox[{"2", " ", "a", " ", "d\[Psi]", " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{"1", "-", 
       SuperscriptBox["\[Psi]", "2"]}]], "-", 
     FractionBox[
      RowBox[{"2", " ", "a", " ", "d\[Phi]", " ", "\[Psi]", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], 
      RowBox[{"1", "-", 
       SuperscriptBox["\[Psi]", "2"]}]]}]}], ",", 
   RowBox[{
    SubscriptBox["dZ", "3"], "\[Rule]", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "a", " ", "d\[Phi]", " ", "\[Psi]", " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{"1", "-", 
       SuperscriptBox["\[Psi]", "2"]}]], "+", 
     FractionBox[
      RowBox[{"2", " ", "a", " ", "d\[Theta]", " ", "\[Psi]", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], 
      RowBox[{"1", "-", 
       SuperscriptBox["\[Psi]", "2"]}]], "+", 
     FractionBox[
      RowBox[{"4", " ", "a", " ", "d\[Psi]", " ", 
       SuperscriptBox["\[Psi]", "2"], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["\[Psi]", "2"]}], ")"}], "2"]], "+", 
     FractionBox[
      RowBox[{"2", " ", "a", " ", "d\[Psi]", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], 
      RowBox[{"1", "-", 
       SuperscriptBox["\[Psi]", "2"]}]]}]}], ",", 
   RowBox[{
    SubscriptBox["dZ", "4"], "\[Rule]", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "a", " ", "d\[Psi]", " ", "\[Psi]", " ", 
       RowBox[{"Cos", "[", 
        FractionBox["T", "a"], "]"}]}], 
      RowBox[{"1", "-", 
       SuperscriptBox["\[Psi]", "2"]}]], "+", 
     FractionBox[
      RowBox[{"2", " ", "a", " ", "d\[Psi]", " ", "\[Psi]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[Psi]", "2"]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        FractionBox["T", "a"], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["\[Psi]", "2"]}], ")"}], "2"]], "-", 
     FractionBox[
      RowBox[{"dT", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[Psi]", "2"]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["T", "a"], "]"}]}], 
      RowBox[{"1", "-", 
       SuperscriptBox["\[Psi]", "2"]}]]}]}]}], "}"}]], "Output",
 CellLabel->"Out[66]=",ExpressionUUID->"1561889e-2a5a-4200-b21a-6fee4adc0ffb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Collect", "[", " ", 
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"lineElement5pt2", " ", "/.", " ", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"Dt", "[", " ", "transform5pt7", " ", "]"}], " ", "/.", " ",
           "dtReplace"}], "  ", ")"}]}], " ", "//", " ", "Expand"}], " ", "//",
       " ", "Simplify"}], "  ", ")"}], " ", ",", " ", 
    RowBox[{"{", " ", 
     RowBox[{
     "dT", " ", ",", " ", "d\[Psi]", " ", ",", " ", "d\[Theta]", " ", ",", 
      " ", "d\[Phi]"}], " ", "}"}]}], " ", "]"}], " ", "//", " ", 
  "FullSimplify", " "}]], "Input",
 CellLabel->"In[67]:=",ExpressionUUID->"a52eea5e-2850-4536-9409-bd1916d11da7"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["dT", "2"]}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[Psi]", "2"]}], ")"}], "2"]}], "+", 
   RowBox[{"2", " ", 
    SuperscriptBox["a", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       SuperscriptBox["d\[Psi]", "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["d\[Theta]", "2"]}], "+", 
         SuperscriptBox["d\[Phi]", "2"]}], ")"}], " ", 
       SuperscriptBox["\[Psi]", "2"]}]}], ")"}]}], "-", 
   RowBox[{"2", " ", 
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox["d\[Phi]", "2"], " ", 
    SuperscriptBox["\[Psi]", "2"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["\[Psi]", "2"]}], ")"}], "2"]]], "Output",
 CellLabel->"Out[67]=",ExpressionUUID->"af22d6e1-df73-425a-9c5c-2aada0f99864"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric5pt8", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric5pt8", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"metric", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{"Collect", "[", " ", 
        RowBox[{
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"lineElement5pt2", " ", "/.", " ", 
            RowBox[{"(", " ", 
             RowBox[{
              RowBox[{"Dt", "[", " ", "transform5pt7", " ", "]"}], " ", "/.", 
              " ", "dtReplace"}], "  ", ")"}]}], " ", "//", " ", "Expand"}], 
          "  ", ")"}], " ", ",", " ", 
         RowBox[{"{", " ", 
          RowBox[{
           SuperscriptBox["dT", "2"], " ", ",", " ", 
           SuperscriptBox["d\[Psi]", "2"], " ", ",", " ", 
           SuperscriptBox["d\[Theta]", "2"], " ", ",", " ", 
           SuperscriptBox["d\[Phi]", "2"]}], " ", "}"}]}], " ", "]"}], " ", 
       ")"}], " ", ",", " ", "\[IndentingNewLine]", 
      RowBox[{"{", " ", 
       RowBox[{
       "dT", " ", ",", " ", "d\[Psi]", " ", ",", " ", "d\[Theta]", " ", ",", 
        " ", "d\[Phi]"}], " ", "}"}]}], " ", "]"}], "  ", "//", " ", 
    "Simplify"}]}], "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"metric5pt8", " ", "//", " ", "MatrixForm"}]}], "Input",
 CellLabel->"In[68]:=",ExpressionUUID->"46fcf93a-f985-4967-a85c-e5c966f10f07"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["\[Psi]", "2"]}], ")"}], "2"], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["\[Psi]", "2"]}], ")"}], "2"]]}], "0", "0", "0"},
     {"0", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["a", "2"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["\[Psi]", "2"]}], ")"}], "2"]], "0", "0"},
     {"0", "0", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["\[Psi]", "2"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["\[Psi]", "2"]}], ")"}], "2"]], "0"},
     {"0", "0", "0", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["\[Psi]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["\[Psi]", "2"]}], ")"}], "2"]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[70]//MatrixForm=",ExpressionUUID->"f18db42c-c07a-4f7d-890d-\
f7d0b2a1c6ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eulerLagrangeEquations", "[", "  ", 
   RowBox[{"metric5pt8", " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"T", ",", "\[Psi]", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], " ",
     ",", " ", "u"}], " ", "]"}], "  ", "//", " ", "TableForm"}]], "Input",
 CellLabel->
  "In[151]:=",ExpressionUUID->"4f6b29d0-2ef2-439f-a630-10463cbe8973"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      FractionBox[
       RowBox[{
        RowBox[{"8", " ", 
         RowBox[{"\[Psi]", "[", "u", "]"}], " ", 
         RowBox[{
          SuperscriptBox["T", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["T", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "u", "]"}], "-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[Psi]", "[", "u", "]"}], "4"], " ", 
         RowBox[{
          SuperscriptBox["T", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "u", "]"}]}]}], 
       RowBox[{"1", "-", 
        SuperscriptBox[
         RowBox[{"\[Psi]", "[", "u", "]"}], "4"]}]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[Psi]", "[", "u", "]"}], "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["T", "\[Prime]",
               MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Theta]", "\[Prime]",
                 MultilineFunction->None], "[", "u", "]"}], "2"], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Phi]", "\[Prime]",
                  MultilineFunction->None], "[", "u", "]"}], "2"]}]}], 
             ")"}]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"\[Psi]", "[", "u", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["T", "\[Prime]",
               MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Theta]", "\[Prime]",
                 MultilineFunction->None], "[", "u", "]"}], "2"], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Phi]", "\[Prime]",
                  MultilineFunction->None], "[", "u", "]"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Psi]", "\[Prime]",
                  MultilineFunction->None], "[", "u", "]"}], "2"]}]}], 
             ")"}]}]}], ")"}]}], "-", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "u", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox[
          RowBox[{"\[Psi]", "[", "u", "]"}], "2"], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "u", "]"}]}]}], 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox[
           RowBox[{"\[Psi]", "[", "u", "]"}], "2"]}], ")"}]}]]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "u", "]"}], "]"}]}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}]}], 
        RowBox[{"\[Psi]", "[", "u", "]"}]], "-", 
       FractionBox[
        RowBox[{"4", " ", 
         RowBox[{"\[Psi]", "[", "u", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          RowBox[{"\[Psi]", "[", "u", "]"}], "2"]}]], "+", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]},
     {
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"Cot", "[", 
         RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}]}], 
        RowBox[{"\[Psi]", "[", "u", "]"}]], "-", 
       FractionBox[
        RowBox[{"4", " ", 
         RowBox[{"\[Psi]", "[", "u", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          RowBox[{"\[Psi]", "[", "u", "]"}], "2"]}]], "+", 
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[151]//TableForm=",ExpressionUUID->"063b7f27-d5ba-422c-ae2e-\
30c070667995"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "differentials", "]"}], "\[IndentingNewLine]", 
 RowBox[{"differentials", " ", "=", " ", 
  RowBox[{"{", " ", 
   RowBox[{
   "dT", " ", ",", " ", "d\[Psi]", " ", ",", " ", "d\[Theta]", " ", ",", " ", 
    "d\[Phi]"}], " ", "}"}], " "}]}], "Input",
 CellLabel->"In[71]:=",ExpressionUUID->"97a56018-e5b8-49da-b2ae-8720609bcdce"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"dT", ",", "d\[Psi]", ",", "d\[Theta]", ",", "d\[Phi]"}], 
  "}"}]], "Output",
 CellLabel->"Out[72]=",ExpressionUUID->"1a8e697c-ac6e-4d78-8670-ab404e55acc5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "lineElement5pt8", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lineElement5pt8", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"Collect", "[", " ", 
    RowBox[{
     RowBox[{"Sum", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"metric5pt8", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "i"}], "]"}], "]"}], "*", " ", 
        SuperscriptBox[
         RowBox[{"(", " ", 
          RowBox[{"differentials", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", ")"}], "2"]}], " ", ",", " ", 
       
       RowBox[{"{", " ", 
        RowBox[{"i", " ", ",", " ", "1", " ", ",", " ", "4"}], " ", "}"}]}], 
      " ", "]"}], "   ", ",", " ", 
     FractionBox[
      RowBox[{"4", " ", 
       SuperscriptBox["a", "2"], " "}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[Psi]", "2"]}], ")"}], "2"]]}], "]"}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"lineElement5pt8", " ", "//", " ", "TraditionalForm"}]}], "Input",
 CellLabel->"In[73]:=",ExpressionUUID->"bee685b0-e824-4d21-99f5-178333d006fb"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"4", " ", 
     SuperscriptBox["a", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["d\[Theta]", "2"], " ", 
        SuperscriptBox["\[Psi]", "2"]}], "+", 
       SuperscriptBox["d\[Psi]", "2"], "+", 
       RowBox[{
        SuperscriptBox["d\[Phi]", "2"], " ", 
        SuperscriptBox["\[Psi]", "2"], " ", 
        RowBox[{
         SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}]}], ")"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Psi]", "2"], "-", "1"}], ")"}], "2"]], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["dT", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Psi]", "2"], "+", "1"}], ")"}], "2"]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Psi]", "2"], "-", "1"}], ")"}], "2"]]}], 
  TraditionalForm]], "Output",
 CellLabel->
  "Out[75]//TraditionalForm=",ExpressionUUID->"43b3945e-cd23-4a12-9234-\
a5150063ed37"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["lineElement5pt4"], "Input",
 CellLabel->"In[76]:=",ExpressionUUID->"6cd737c3-5b4e-4718-9a63-ee48e2a9c9ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["dT", "2"]}], " ", 
   SuperscriptBox[
    RowBox[{"Cosh", "[", "r", "]"}], "2"]}], "+", 
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["dr", "2"], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["d\[Theta]", "2"], "+", 
        RowBox[{
         SuperscriptBox["d\[Phi]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Sinh", "[", "r", "]"}], "2"]}]}], ")"}]}]}]], "Output",
 CellLabel->"Out[76]=",ExpressionUUID->"7aa95fa5-a7ed-4ff7-b442-21a9884afa8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "transform5pt9", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"REDO", " ", "this", " ", "so", " ", 
    RowBox[{"doesn", "'"}], "t", " ", "need", " ", "flatten"}], " ", "*)"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"transform5pt9", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Solve", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Tan", "[", "\[Chi]", "]"}], "\[Equal]", " ", 
          RowBox[{"Sinh", "[", "r", "]"}]}], " ", ",", " ", "r"}], " ", "]"}],
        "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], " ", "/.", " ", 
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Rule]", " ", "0"}]}], "   ", ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Solve", "[", " ", 
       RowBox[{
        RowBox[{"\[Eta]", " ", "\[Equal]", " ", 
         FractionBox["T", "a"]}], " ", ",", " ", "T"}], " ", "]"}], "]"}], 
     "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], " ", "\[IndentingNewLine]", 
   "}"}]}]}], "Input",
 CellLabel->"In[77]:=",ExpressionUUID->"2ff34737-e45f-4ce1-865c-129f9c17e132"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"r", "\[Rule]", 
    RowBox[{"ArcSinh", "[", 
     RowBox[{"Tan", "[", "\[Chi]", "]"}], "]"}]}], ",", 
   RowBox[{"T", "\[Rule]", 
    RowBox[{"a", " ", "\[Eta]"}]}]}], "}"}]], "Output",
 CellLabel->"Out[78]=",ExpressionUUID->"f8e37c8b-1e5f-4d6b-863c-24c7d443d208"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Dt", "[", " ", "transform5pt9", " ", "]"}], " ", "/.", " ", 
     "dtReplace"}], "  ", "//", " ", "Simplify"}], "  ", "//", " ", 
   "PowerExpand"}], "  ", "//", " ", "TableForm"}]], "Input",
 CellLabel->"In[79]:=",ExpressionUUID->"1be2776d-134d-4395-84d1-3222ceafaca2"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"dr", "\[Rule]", 
       RowBox[{"d\[Chi]", " ", 
        RowBox[{"Sec", "[", "\[Chi]", "]"}]}]}]},
     {
      RowBox[{"dT", "\[Rule]", 
       RowBox[{"a", " ", "d\[Eta]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[79]//TableForm=",ExpressionUUID->"11c7591e-42de-43b5-9882-\
b0e013265b65"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"lineElement5pt4", " ", "/.", " ", "transform5pt9"}], " ", "/.", 
  RowBox[{"(", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Dt", "[", " ", "transform5pt9", " ", "]"}], " ", "/.", " ", 
      "dtReplace"}], "  ", "//", " ", "Simplify"}], "  ", "//", " ", 
    "PowerExpand"}], "  ", ")"}], " "}]], "Input",
 CellLabel->"In[80]:=",ExpressionUUID->"ad6a2da3-6492-40df-b1a0-8c20830e27ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["a", "2"]}], " ", 
   SuperscriptBox["d\[Eta]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox[
      RowBox[{"Tan", "[", "\[Chi]", "]"}], "2"]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["d\[Chi]", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sec", "[", "\[Chi]", "]"}], "2"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["d\[Theta]", "2"], "+", 
        RowBox[{
         SuperscriptBox["d\[Phi]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Tan", "[", "\[Chi]", "]"}], "2"]}]}], ")"}]}]}]], "Output",
 CellLabel->"Out[80]=",ExpressionUUID->"514a902d-4418-4faa-b34f-6e8806b34e06"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric5pt10", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric5pt10", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"metric", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"lineElement5pt4", " ", "/.", " ", "transform5pt9"}], " ", "/.", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Dt", "[", " ", "transform5pt9", " ", "]"}], " ", "/.", 
            " ", "dtReplace"}], "  ", "//", " ", "Simplify"}], "  ", "//", 
          " ", "PowerExpand"}], "  ", ")"}]}], "  ", ")"}], "  ", ",", " ", 
      RowBox[{"{", " ", 
       RowBox[{
       "d\[Eta]", " ", ",", " ", "d\[Chi]", " ", ",", " ", "d\[Theta]", " ", 
        ",", " ", "d\[Phi]"}], " ", "}"}]}], " ", "]"}], "   ", "//", " ", 
    "Simplify"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"metric5pt10", " ", "//", " ", "MatrixForm"}]}], "Input",
 CellLabel->"In[81]:=",ExpressionUUID->"4a8008d5-0075-4a5f-8ba0-6f4833577da6"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["a", "2"]}], " ", 
       SuperscriptBox[
        RowBox[{"Sec", "[", "\[Chi]", "]"}], "2"]}], "0", "0", "0"},
     {"0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sec", "[", "\[Chi]", "]"}], "2"]}], "0", "0"},
     {"0", "0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Tan", "[", "\[Chi]", "]"}], "2"]}], "0"},
     {"0", "0", "0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Tan", "[", "\[Chi]", "]"}], "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[83]//MatrixForm=",ExpressionUUID->"a24639c1-fda0-423e-b228-\
8813554be37a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eulerLagrangeEquations", "[", "  ", 
   RowBox[{"metric5pt10", " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[Eta]", ",", "\[Chi]", ",", "\[Theta]", ",", "\[Phi]"}], "}"}],
     " ", ",", " ", "u"}], " ", "]"}], "  ", "//", " ", 
  "TableForm"}]], "Input",
 CellLabel->
  "In[152]:=",ExpressionUUID->"45ed0c29-de99-4f09-b00b-a1b11a2aeb96"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"Tan", "[", 
         RowBox[{"\[Chi]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Eta]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Chi]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"Tan", "[", 
         RowBox[{"\[Chi]", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Eta]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "-", 
       RowBox[{
        RowBox[{"Tan", "[", 
         RowBox[{"\[Chi]", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], "2"], " ", 
        RowBox[{"Tan", "[", 
         RowBox[{"\[Chi]", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"Tan", "[", 
         RowBox[{"\[Chi]", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Chi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Chi]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "u", "]"}], "]"}]}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       RowBox[{"4", " ", 
        RowBox[{"Csc", "[", 
         RowBox[{"2", " ", 
          RowBox[{"\[Chi]", "[", "u", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Chi]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]},
     {
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"Cot", "[", 
         RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}], "+", 
       RowBox[{"4", " ", 
        RowBox[{"Csc", "[", 
         RowBox[{"2", " ", 
          RowBox[{"\[Chi]", "[", "u", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Chi]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[152]//TableForm=",ExpressionUUID->"673aa208-7926-4e3d-8994-\
a1a3e49154cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "differentials", "]"}], "\[IndentingNewLine]", 
 RowBox[{"differentials", " ", "=", " ", 
  RowBox[{"{", " ", 
   RowBox[{
   "d\[Eta]", " ", ",", " ", "d\[Chi]", " ", ",", " ", "d\[Theta]", " ", ",", 
    " ", "d\[Phi]"}], " ", "}"}]}]}], "Input",
 CellLabel->"In[84]:=",ExpressionUUID->"f800d078-55c2-4ccd-ab60-11ce13136851"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"d\[Eta]", ",", "d\[Chi]", ",", "d\[Theta]", ",", "d\[Phi]"}], 
  "}"}]], "Output",
 CellLabel->"Out[85]=",ExpressionUUID->"c9c16e0b-8a99-41b3-b2ce-1ab18bd9179e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Chi]", "]"}], "2"], " ", 
    RowBox[{"Sum", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"metric5pt10", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "i"}], "]"}], "]"}], "*", " ", 
       SuperscriptBox[
        RowBox[{"(", " ", 
         RowBox[{"differentials", "[", 
          RowBox[{"[", "i", "]"}], "]"}], " ", ")"}], "2"]}], " ", ",", " ", 
      RowBox[{"{", " ", 
       RowBox[{"i", " ", ",", " ", "1", " ", ",", " ", "4"}], " ", "}"}]}], 
     " ", "]"}]}], "  ", "//", " ", "Expand", " "}]}]], "Input",
 CellLabel->"In[86]:=",ExpressionUUID->"aafdde9b-ffcd-43f2-a67d-9d64a810396e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["a", "2"]}], " ", 
   SuperscriptBox["d\[Eta]", "2"]}], "+", 
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox["d\[Chi]", "2"]}], "+", 
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox["d\[Theta]", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Chi]", "]"}], "2"]}], "+", 
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox["d\[Phi]", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Chi]", "]"}], "2"]}]}]], "Output",
 CellLabel->"Out[86]=",ExpressionUUID->"e9eb50de-18ae-4dc9-89b1-63c9011d8ffd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "lineElement5pt10", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lineElement5pt10", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", 
      RowBox[{" ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Chi]", "]"}], "2"], " "}]], ")"}], "*", " ", 
    RowBox[{"(", "  ", 
     RowBox[{"Collect", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Chi]", "]"}], "2"], " ", 
         RowBox[{"Sum", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"metric5pt10", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "i"}], "]"}], "]"}], "*", " ", 
            SuperscriptBox[
             RowBox[{"(", " ", 
              RowBox[{"differentials", "[", 
               RowBox[{"[", "i", "]"}], "]"}], " ", ")"}], "2"]}], " ", ",", 
           " ", 
           RowBox[{"{", " ", 
            RowBox[{"i", " ", ",", " ", "1", " ", ",", " ", "4"}], " ", 
            "}"}]}], " ", "]"}]}], "  ", "//", " ", "Expand"}], "  ", ",", 
       " ", 
       SuperscriptBox["a", "2"]}], "]"}], " ", ")"}]}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Not", " ", "sure", " ", "how", " ", "to", " ", "keep", " ", "as", " ", 
    RowBox[{"1", "/", "cos"}], "  ", "maybe", " ", "use", " ", 
    RowBox[{"inactivate", "?"}]}], " ", "*)"}], " "}]}], "Input",
 CellLabel->"In[87]:=",ExpressionUUID->"60675061-209a-4fcb-81a2-c777a59595aa"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["a", "2"], " ", 
  SuperscriptBox[
   RowBox[{"Sec", "[", "\[Chi]", "]"}], "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["d\[Eta]", "2"]}], "+", 
    SuperscriptBox["d\[Chi]", "2"], "+", 
    RowBox[{
     SuperscriptBox["d\[Theta]", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Chi]", "]"}], "2"]}], "+", 
    RowBox[{
     SuperscriptBox["d\[Phi]", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Chi]", "]"}], "2"]}]}], ")"}]}]], "Output",
 CellLabel->"Out[88]=",ExpressionUUID->"cf5652f2-fcd3-479a-afa8-ddf5ed6472ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "transform5pt12", "]"}], "\[IndentingNewLine]", 
 RowBox[{"transform5pt12", " ", "=", "\[IndentingNewLine]", " ", 
  RowBox[{"\[Eta]", "\[Rule]", " ", 
   RowBox[{"4", " ", 
    RowBox[{"Tan", "[", 
     OverscriptBox["\[Eta]", "~"], "]"}]}]}]}]}], "Input",
 CellLabel->"In[89]:=",ExpressionUUID->"01eafe89-dab2-416a-a858-34d4251aab56"],

Cell[BoxData[
 RowBox[{"\[Eta]", "\[Rule]", 
  RowBox[{"4", " ", 
   RowBox[{"Tan", "[", 
    OverscriptBox["\[Eta]", "~"], "]"}]}]}]], "Output",
 CellLabel->"Out[90]=",ExpressionUUID->"e39ca974-7588-4fe3-8fbf-e052be120e84"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dt", "[", " ", "transform5pt12", " ", "]"}], "  ", "/.", " ", 
  "dtReplace", " "}]], "Input",
 CellLabel->"In[91]:=",ExpressionUUID->"8cf7e87b-a6d5-46ed-bcc7-94f4b0ff9da4"],

Cell[BoxData[
 RowBox[{"d\[Eta]", "\[Rule]", 
  RowBox[{"4", " ", "d", " ", 
   OverscriptBox["\[Eta]", "~"], " ", 
   SuperscriptBox[
    RowBox[{"Sec", "[", 
     OverscriptBox["\[Eta]", "~"], "]"}], "2"]}]}]], "Output",
 CellLabel->"Out[91]=",ExpressionUUID->"b2b3afaf-d3a9-4412-9ec6-b6f28da9e40e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "REDO", " ", "metric", " ", "of", " ", "Einstein", " ", "static", " ", 
    "universe", " ", "later", " ", "after", " ", "minkowksi"}], " ", "*)"}], 
  " "}]], "Input",
 CellLabel->"In[92]:=",ExpressionUUID->"d0e5da07-6f80-49c8-8c71-6a0aced7d1c7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "transform5pt13", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"transform5pt13", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox["Z", "0"], "\[Rule]", " ", 
       RowBox[{
        RowBox[{"(", 
         FractionBox["1", 
          RowBox[{"2", " ", "x"}]], ")"}], 
        RowBox[{"(", " ", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", " ", "s"}], " ", ")"}]}]}], " ", ",",
       " ", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["Z", "1"], "\[Rule]", "  ", 
       RowBox[{
        RowBox[{"(", 
         FractionBox["1", 
          RowBox[{"2", " ", "x"}]], ")"}], 
        RowBox[{"(", " ", 
         RowBox[{
          SuperscriptBox["a", "2"], "-", " ", "s"}], " ", ")"}]}]}], " ", ",",
       " ", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["Z", "2"], "\[Rule]", " ", 
       RowBox[{"a", " ", 
        RowBox[{"(", 
         FractionBox["y", 
          RowBox[{"x", " "}]], ")"}]}]}], " ", ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["Z", "3"], "\[Rule]", "  ", 
       RowBox[{"a", " ", 
        RowBox[{"(", 
         FractionBox["z", 
          RowBox[{"x", " "}]], ")"}]}]}], " ", ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["Z", "4"], "\[Rule]", "  ", 
       RowBox[{"a", " ", 
        RowBox[{"(", 
         FractionBox[
          SubscriptBox["\[Eta]", "0"], 
          RowBox[{"x", " "}]], ")"}]}]}]}], "\[IndentingNewLine]", "}"}], " ",
     "/.", " ", 
    RowBox[{"s", "\[Rule]", " ", 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"-", " ", 
        SuperscriptBox[
         SubscriptBox["\[Eta]", "0"], "2"]}], "+", 
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"], "+", 
       SuperscriptBox["z", "2"]}], ")"}]}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"transform5pt13", " ", "//", " ", "TableForm"}]}], "Input",
 CellLabel->"In[93]:=",ExpressionUUID->"89748cf5-f143-4444-b176-ad567e7bef4a"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       SubscriptBox["Z", "0"], "\[Rule]", 
       FractionBox[
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"], "+", 
         SuperscriptBox["z", "2"], "-", 
         SubsuperscriptBox["\[Eta]", "0", "2"]}], 
        RowBox[{"2", " ", "x"}]]}]},
     {
      RowBox[{
       SubscriptBox["Z", "1"], "\[Rule]", 
       FractionBox[
        RowBox[{
         SuperscriptBox["a", "2"], "-", 
         SuperscriptBox["x", "2"], "-", 
         SuperscriptBox["y", "2"], "-", 
         SuperscriptBox["z", "2"], "+", 
         SubsuperscriptBox["\[Eta]", "0", "2"]}], 
        RowBox[{"2", " ", "x"}]]}]},
     {
      RowBox[{
       SubscriptBox["Z", "2"], "\[Rule]", 
       FractionBox[
        RowBox[{"a", " ", "y"}], "x"]}]},
     {
      RowBox[{
       SubscriptBox["Z", "3"], "\[Rule]", 
       FractionBox[
        RowBox[{"a", " ", "z"}], "x"]}]},
     {
      RowBox[{
       SubscriptBox["Z", "4"], "\[Rule]", 
       FractionBox[
        RowBox[{"a", " ", 
         SubscriptBox["\[Eta]", "0"]}], "x"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[95]//TableForm=",ExpressionUUID->"6d66c89a-be49-40f4-956b-\
12ca82aede45"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"hyperboloid5pt1", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hyperboloid5pt1", " ", "/.", " ", "transform5pt13"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hyperboloid5pt1", " ", "/.", " ", "transform5pt13"}], " ", "//", 
  " ", "Expand", " "}]}], "Input",
 CellLabel->"In[96]:=",ExpressionUUID->"239aa125-2653-4a82-abf0-28a4cb226835"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SubsuperscriptBox["Z", "0", "2"]}], "+", 
   SubsuperscriptBox["Z", "1", "2"], "+", 
   SubsuperscriptBox["Z", "2", "2"], "+", 
   SubsuperscriptBox["Z", "3", "2"], "-", 
   SubsuperscriptBox["Z", "4", "2"]}], "\[Equal]", 
  RowBox[{"-", 
   SuperscriptBox["a", "2"]}]}]], "Output",
 CellLabel->"Out[96]=",ExpressionUUID->"efc94e35-c636-4ce0-ac9a-26bdea470a95"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox["y", "2"]}], 
    SuperscriptBox["x", "2"]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox["z", "2"]}], 
    SuperscriptBox["x", "2"]], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     SubsuperscriptBox["\[Eta]", "0", "2"]}], 
    SuperscriptBox["x", "2"]], "-", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["a", "2"], "+", 
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"], "+", 
       SuperscriptBox["z", "2"], "-", 
       SubsuperscriptBox["\[Eta]", "0", "2"]}], ")"}], "2"], 
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"]}]], "+", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["a", "2"], "-", 
       SuperscriptBox["x", "2"], "-", 
       SuperscriptBox["y", "2"], "-", 
       SuperscriptBox["z", "2"], "+", 
       SubsuperscriptBox["\[Eta]", "0", "2"]}], ")"}], "2"], 
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"]}]]}], "\[Equal]", 
  RowBox[{"-", 
   SuperscriptBox["a", "2"]}]}]], "Output",
 CellLabel->"Out[97]=",ExpressionUUID->"2c765a29-2772-41ef-824f-3d0d4226a966"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[98]=",ExpressionUUID->"14702aa0-83df-4020-ac1b-2cdabe54aa70"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Dt", "[", " ", "transform5pt13", "  ", "]"}], " ", "/.", " ", 
   "dtReplace"}], "  ", "//", " ", "TableForm"}]], "Input",
 CellLabel->"In[99]:=",ExpressionUUID->"c768bc3e-2524-4fca-92b5-36291398c343"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       SubscriptBox["dZ", "0"], "\[Rule]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"dx", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["a", "2"], "+", 
             SuperscriptBox["x", "2"], "+", 
             SuperscriptBox["y", "2"], "+", 
             SuperscriptBox["z", "2"], "-", 
             SubsuperscriptBox["\[Eta]", "0", "2"]}], ")"}]}], 
          RowBox[{"2", " ", 
           SuperscriptBox["x", "2"]}]]}], "+", 
        FractionBox[
         RowBox[{
          RowBox[{"2", " ", "dx", " ", "x"}], "+", 
          RowBox[{"2", " ", "dy", " ", "y"}], "+", 
          RowBox[{"2", " ", "dz", " ", "z"}], "-", 
          RowBox[{"2", " ", 
           SubscriptBox["\[Eta]", "0"], " ", 
           SubscriptBox["d\[Eta]", "0"]}]}], 
         RowBox[{"2", " ", "x"}]]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "1"], "\[Rule]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"dx", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["a", "2"], "-", 
             SuperscriptBox["x", "2"], "-", 
             SuperscriptBox["y", "2"], "-", 
             SuperscriptBox["z", "2"], "+", 
             SubsuperscriptBox["\[Eta]", "0", "2"]}], ")"}]}], 
          RowBox[{"2", " ", 
           SuperscriptBox["x", "2"]}]]}], "+", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "dx", " ", "x"}], "-", 
          RowBox[{"2", " ", "dy", " ", "y"}], "-", 
          RowBox[{"2", " ", "dz", " ", "z"}], "+", 
          RowBox[{"2", " ", 
           SubscriptBox["\[Eta]", "0"], " ", 
           SubscriptBox["d\[Eta]", "0"]}]}], 
         RowBox[{"2", " ", "x"}]]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "2"], "\[Rule]", 
       RowBox[{
        FractionBox[
         RowBox[{"a", " ", "dy"}], "x"], "-", 
        FractionBox[
         RowBox[{"a", " ", "dx", " ", "y"}], 
         SuperscriptBox["x", "2"]]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "3"], "\[Rule]", 
       RowBox[{
        FractionBox[
         RowBox[{"a", " ", "dz"}], "x"], "-", 
        FractionBox[
         RowBox[{"a", " ", "dx", " ", "z"}], 
         SuperscriptBox["x", "2"]]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "4"], "\[Rule]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"a", " ", "dx", " ", 
           SubscriptBox["\[Eta]", "0"]}], 
          SuperscriptBox["x", "2"]]}], "+", 
        FractionBox[
         RowBox[{"a", " ", 
          SubscriptBox["d\[Eta]", "0"]}], "x"]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[99]//TableForm=",ExpressionUUID->"67d89fb2-a22f-4cce-9b99-\
d0e69560614c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"lineElement5pt2", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lineElement5pt2", " ", "/.", " ", 
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"Dt", "[", " ", "transform5pt13", "  ", "]"}], " ", "/.", " ", 
      "dtReplace"}], " ", ")"}]}], " ", "//", " ", "Expand"}], " ", "//", " ",
   "Simplify", " "}]}], "Input",
 CellLabel->
  "In[100]:=",ExpressionUUID->"f7dcd071-03a0-4bdf-bf8c-ea4fdeba3e04"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SubsuperscriptBox["dZ", "0", "2"]}], "+", 
  SubsuperscriptBox["dZ", "1", "2"], "+", 
  SubsuperscriptBox["dZ", "2", "2"], "+", 
  SubsuperscriptBox["dZ", "3", "2"], "-", 
  SubsuperscriptBox["dZ", "4", "2"]}]], "Output",
 CellLabel->
  "Out[100]=",ExpressionUUID->"8de783fc-cdef-4212-9575-6b0a9e69ada9"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["dx", "2"], "+", 
     SuperscriptBox["dy", "2"], "+", 
     SuperscriptBox["dz", "2"], "-", 
     SubsuperscriptBox["d\[Eta]", "0", "2"]}], ")"}]}], 
  SuperscriptBox["x", "2"]]], "Output",
 CellLabel->
  "Out[101]=",ExpressionUUID->"aa72ee44-ed15-4995-884d-644dacd6afc3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "lineElement5pt14", "]"}], "\[IndentingNewLine]", 
 RowBox[{"lineElement5pt14", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"lineElement5pt2", " ", "/.", " ", 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"Dt", "[", " ", "transform5pt13", "  ", "]"}], " ", "/.", " ", 
       "dtReplace"}], " ", ")"}]}], " ", "//", " ", "Expand"}], " ", "//", 
   " ", "Simplify", " "}]}]}], "Input",
 CellLabel->
  "In[102]:=",ExpressionUUID->"ff61b597-57ad-4b9a-8210-f1c2e7985311"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["dx", "2"], "+", 
     SuperscriptBox["dy", "2"], "+", 
     SuperscriptBox["dz", "2"], "-", 
     SubsuperscriptBox["d\[Eta]", "0", "2"]}], ")"}]}], 
  SuperscriptBox["x", "2"]]], "Output",
 CellLabel->
  "Out[103]=",ExpressionUUID->"12d53496-da76-46f8-bb15-9cd02d1e3ac1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "differentials", "]"}], "\[IndentingNewLine]", 
 RowBox[{"differentials", " ", "=", " ", 
  RowBox[{"{", " ", 
   RowBox[{
    SubscriptBox["d\[Eta]", "0"], " ", ",", " ", "dx", " ", ",", " ", "dy", 
    " ", ",", " ", "dz"}], " ", "}"}], " "}]}], "Input",
 CellLabel->
  "In[104]:=",ExpressionUUID->"5ef3c045-b672-4055-b0c2-bb713b314b6b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox["d\[Eta]", "0"], ",", "dx", ",", "dy", ",", "dz"}], 
  "}"}]], "Output",
 CellLabel->
  "Out[105]=",ExpressionUUID->"c44e7366-8844-4d6d-a845-daf77fc802cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric5pt14", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric5pt14", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"metric", "[", " ", 
    RowBox[{"lineElement5pt14", " ", ",", " ", "differentials"}], " ", 
    "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"metric5pt14", " ", "//", " ", "MatrixForm", " "}]}], "Input",
 CellLabel->
  "In[106]:=",ExpressionUUID->"a47e2b8a-8fea-42fc-b5a6-f3c2b911a0a0"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["a", "2"], 
        SuperscriptBox["x", "2"]]}], "0", "0", "0"},
     {"0", 
      FractionBox[
       SuperscriptBox["a", "2"], 
       SuperscriptBox["x", "2"]], "0", "0"},
     {"0", "0", 
      FractionBox[
       SuperscriptBox["a", "2"], 
       SuperscriptBox["x", "2"]], "0"},
     {"0", "0", "0", 
      FractionBox[
       SuperscriptBox["a", "2"], 
       SuperscriptBox["x", "2"]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[108]//MatrixForm=",ExpressionUUID->"8e2c80aa-542a-4f26-9f8e-\
778c5fa05864"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eulerLagrangeEquations", "[", "  ", 
   RowBox[{"metric5pt6", " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["\[Eta]", "0"], ",", "x", ",", "y", ",", "z"}], "}"}], " ",
     ",", " ", "u"}], " ", "]"}], "  ", "//", " ", "TableForm"}]], "Input",
 CellLabel->
  "In[153]:=",ExpressionUUID->"0af241d3-67f4-4294-9afd-5ac5764e2b87"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Eta]", "0"], "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "u", "]"}]},
     {
      FractionBox[
       RowBox[{"1", "+", 
        SuperscriptBox["a", "4"], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["R", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           SuperscriptBox["R", "2"]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           SuperscriptBox["R", "2"]}], ")"}], " ", 
         RowBox[{
          SuperscriptBox["x", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "u", "]"}]}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox["a", "2"]}]]},
     {
      FractionBox[
       RowBox[{"2", "+", 
        SuperscriptBox["R", "2"], "+", 
        RowBox[{
         SuperscriptBox["y", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox["R", "2"]}]]},
     {
      FractionBox[
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", 
           SuperscriptBox["R", "2"]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
         RowBox[{
          SuperscriptBox["z", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "u", "]"}]}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox["R", "2"]}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[153]//TableForm=",ExpressionUUID->"5a7f408d-9fbd-4d88-9246-\
0d3916202fb5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"REDO", " ", ",", " ", 
    RowBox[{
    "this", " ", "is", " ", "the", " ", "reverse", " ", "of", " ", "what", 
     " ", "you", " ", "want"}]}], " ", "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "transform5pt15", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"transform5pt15", " ", "=", " ", 
     RowBox[{"{", " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Eta]", "0"], "\[Rule]", "  ", 
        RowBox[{
         RowBox[{"Exp", "[", "\[Chi]", "]"}], " ", 
         RowBox[{"Tan", "[", 
          FractionBox["t", "a"], "]"}]}]}], "  ", ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"x", " ", "\[Rule]", "   ", 
        FractionBox[
         RowBox[{"Exp", "[", "\[Chi]", "]"}], 
         RowBox[{"Cos", "[", 
          FractionBox["t", "a"], "]"}]]}]}], " ", "\[IndentingNewLine]", 
      "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{"transform5pt15", "  ", "//", " ", "TableForm"}]}]}]], "Input",
 CellLabel->
  "In[109]:=",ExpressionUUID->"7999cae3-1c17-45e9-a094-ce85533136d8"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       SubscriptBox["\[Eta]", "0"], "\[Rule]", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "\[Chi]"], " ", 
        RowBox[{"Tan", "[", 
         FractionBox["t", "a"], "]"}]}]}]},
     {
      RowBox[{"x", "\[Rule]", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "\[Chi]"], " ", 
        RowBox[{"Sec", "[", 
         FractionBox["t", "a"], "]"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[111]//TableForm=",ExpressionUUID->"384a7ec1-17be-4518-a50e-\
877636a7afe2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dt", "[", " ", "transform5pt15", "]"}], " ", "/.", " ", 
  "dtReplace", " "}]], "Input",
 CellLabel->
  "In[112]:=",ExpressionUUID->"25b9c188-cdd7-4691-b7f3-2212abc04990"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["d\[Eta]", "0"], "\[Rule]", 
    RowBox[{
     FractionBox[
      RowBox[{"dt", " ", 
       SuperscriptBox["\[ExponentialE]", "\[Chi]"], " ", 
       SuperscriptBox[
        RowBox[{"Sec", "[", 
         FractionBox["t", "a"], "]"}], "2"]}], "a"], "+", 
     RowBox[{"d\[Chi]", " ", 
      SuperscriptBox["\[ExponentialE]", "\[Chi]"], " ", 
      RowBox[{"Tan", "[", 
       FractionBox["t", "a"], "]"}]}]}]}], ",", 
   RowBox[{"dx", "\[Rule]", 
    RowBox[{
     RowBox[{"d\[Chi]", " ", 
      SuperscriptBox["\[ExponentialE]", "\[Chi]"], " ", 
      RowBox[{"Sec", "[", 
       FractionBox["t", "a"], "]"}]}], "+", 
     FractionBox[
      RowBox[{"dt", " ", 
       SuperscriptBox["\[ExponentialE]", "\[Chi]"], " ", 
       RowBox[{"Sec", "[", 
        FractionBox["t", "a"], "]"}], " ", 
       RowBox[{"Tan", "[", 
        FractionBox["t", "a"], "]"}]}], "a"]}]}]}], "}"}]], "Output",
 CellLabel->
  "Out[112]=",ExpressionUUID->"710ccde0-1a58-431e-80b6-3fd510282a02"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"lineElement5pt14", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lineElement5pt14", " ", "/.", " ", 
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"Dt", "[", " ", "transform5pt15", "]"}], " ", "/.", " ", 
      "dtReplace"}], "  ", ")"}]}], "  ", "//", " ", "Expand"}], " ", "//", 
  " ", "FullSimplify", " "}]}], "Input",
 CellLabel->
  "In[113]:=",ExpressionUUID->"8e779dac-9ad1-47a9-8acf-e34e2bcebe6d"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["dx", "2"], "+", 
     SuperscriptBox["dy", "2"], "+", 
     SuperscriptBox["dz", "2"], "-", 
     SubsuperscriptBox["d\[Eta]", "0", "2"]}], ")"}]}], 
  SuperscriptBox["x", "2"]]], "Output",
 CellLabel->
  "Out[113]=",ExpressionUUID->"01990407-2120-4f83-a860-6ccf2cddff08"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["dy", "2"], "+", 
      SuperscriptBox["dz", "2"], "+", 
      RowBox[{
       SuperscriptBox["d\[Chi]", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "\[Chi]"}]]}]}], ")"}]}], "-", 
   RowBox[{
    SuperscriptBox["dt", "2"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", "\[Chi]"}]], " ", 
    SuperscriptBox[
     RowBox[{"Sec", "[", 
      FractionBox["t", "a"], "]"}], "2"]}]}], 
  SuperscriptBox["x", "2"]]], "Output",
 CellLabel->
  "Out[114]=",ExpressionUUID->"81440004-8272-4548-a8ce-501169fedeff"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"skipping", " ", "5", "pt16"}], " ", ",", " ", 
    RowBox[{"go", " ", "back", " ", "later"}]}], " ", "*)"}], " "}]], "Input",\

 CellLabel->
  "In[115]:=",ExpressionUUID->"a42cfd49-aa7b-4063-b0ab-469b4bbd1ff0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "transform5pt16", "]"}], "\[IndentingNewLine]", 
 RowBox[{"transform5pt16", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"x", "\[Rule]", " ", 
   RowBox[{"a", " ", 
    RowBox[{"Exp", "[", 
     FractionBox[
      RowBox[{"-", " ", 
       OverscriptBox["x", "~"]}], "a"], "]"}]}]}]}]}], "Input",
 CellLabel->
  "In[116]:=",ExpressionUUID->"62c3756e-2cbb-4021-9ca5-126798eb832b"],

Cell[BoxData[
 RowBox[{"x", "\[Rule]", 
  RowBox[{"a", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      OverscriptBox["x", "~"], "a"]}]]}]}]], "Output",
 CellLabel->
  "Out[117]=",ExpressionUUID->"f9314ac5-4861-47ae-90db-a3a3a52afd84"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dt", "[", " ", "transform5pt16", " ", "]"}], " ", "/.", " ", 
  "dtReplace", "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"issue", " ", "with", " ", "differential"}], " ", "*)"}], 
  " "}]], "Input",
 CellLabel->
  "In[118]:=",ExpressionUUID->"2bf55ef6-6252-433f-a8dd-b095ce4fbb19"],

Cell[BoxData[
 RowBox[{"dx", "\[Rule]", 
  RowBox[{
   RowBox[{"-", "d"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      OverscriptBox["x", "~"], "a"]}]], " ", 
   OverscriptBox["x", "~"]}]}]], "Output",
 CellLabel->
  "Out[118]=",ExpressionUUID->"f5366c6e-7582-435d-8741-f5965c2e4e22"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "transform5pt17", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"transform5pt17", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      SubscriptBox["Z", "0"], "\[Rule]", " ", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         SubscriptBox["t", 
          RowBox[{"-", "1"}]], "a"], "]"}]}]}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "1"], "\[Rule]", " ", 
      RowBox[{"a", " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         SubscriptBox["t", 
          RowBox[{"-", "1"}]], "a"], "]"}], " ", 
       RowBox[{"Sinh", "[", "\[Rho]", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "2"], "\[Rule]", "  ", 
      RowBox[{"a", " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         SubscriptBox["t", 
          RowBox[{"-", "1"}]], "a"], "]"}], " ", 
       RowBox[{"Sinh", "[", "\[Rho]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "3"], "\[Rule]", " ", 
      RowBox[{"a", " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         SubscriptBox["t", 
          RowBox[{"-", "1"}]], "a"], "]"}], " ", 
       RowBox[{"Sinh", "[", "\[Rho]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "4"], "\[Rule]", " ", 
      RowBox[{"a", " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         SubscriptBox["t", 
          RowBox[{"-", "1"}]], "a"], "]"}], " ", 
       RowBox[{"Cosh", "[", "\[Rho]", "]"}]}]}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"transform5pt17", " ", "//", " ", "TableForm"}]}], "Input",
 CellLabel->
  "In[119]:=",ExpressionUUID->"e66a3bf0-e630-4c64-90ea-bf0773ce93ba"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       SubscriptBox["Z", "0"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Sin", "[", 
         FractionBox[
          SubscriptBox["t", 
           RowBox[{"-", "1"}]], "a"], "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "1"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          SubscriptBox["t", 
           RowBox[{"-", "1"}]], "a"], "]"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sinh", "[", "\[Rho]", "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "2"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          SubscriptBox["t", 
           RowBox[{"-", "1"}]], "a"], "]"}], " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sinh", "[", "\[Rho]", "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "3"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          SubscriptBox["t", 
           RowBox[{"-", "1"}]], "a"], "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Sinh", "[", "\[Rho]", "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "4"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          SubscriptBox["t", 
           RowBox[{"-", "1"}]], "a"], "]"}], " ", 
        RowBox[{"Cosh", "[", "\[Rho]", "]"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[121]//TableForm=",ExpressionUUID->"8f967288-2528-430f-8363-\
756fd3d52d4f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"hyperboloid5pt1", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hyperboloid5pt1", " ", "/.", " ", "transform5pt17"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hyperboloid5pt1", " ", "/.", " ", "transform5pt17"}], "  ", "//", 
   " ", "Expand"}], " ", "//", " ", "Simplify", " "}]}], "Input",
 CellLabel->
  "In[122]:=",ExpressionUUID->"14b34957-0641-4403-a499-96e7e3152b12"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SubsuperscriptBox["Z", "0", "2"]}], "+", 
   SubsuperscriptBox["Z", "1", "2"], "+", 
   SubsuperscriptBox["Z", "2", "2"], "+", 
   SubsuperscriptBox["Z", "3", "2"], "-", 
   SubsuperscriptBox["Z", "4", "2"]}], "\[Equal]", 
  RowBox[{"-", 
   SuperscriptBox["a", "2"]}]}]], "Output",
 CellLabel->
  "Out[122]=",ExpressionUUID->"737cd4d5-d580-4efa-ac4a-e02d1fae391f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["a", "2"]}], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", 
      FractionBox[
       SubscriptBox["t", 
        RowBox[{"-", "1"}]], "a"], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Cosh", "[", "\[Rho]", "]"}], "2"]}], "-", 
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      FractionBox[
       SubscriptBox["t", 
        RowBox[{"-", "1"}]], "a"], "]"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", 
      FractionBox[
       SubscriptBox["t", 
        RowBox[{"-", "1"}]], "a"], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sinh", "[", "\[Rho]", "]"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", 
      FractionBox[
       SubscriptBox["t", 
        RowBox[{"-", "1"}]], "a"], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sinh", "[", "\[Rho]", "]"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", 
      FractionBox[
       SubscriptBox["t", 
        RowBox[{"-", "1"}]], "a"], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sinh", "[", "\[Rho]", "]"}], "2"]}]}], "\[Equal]", 
  RowBox[{"-", 
   SuperscriptBox["a", "2"]}]}]], "Output",
 CellLabel->
  "Out[123]=",ExpressionUUID->"78559d71-d77d-454d-ba33-ba60514e085e"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[124]=",ExpressionUUID->"f6b2044e-b25f-4dfd-94ff-f2c9f0aba670"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Dt", "[", " ", "transform5pt17", " ", "]"}], " ", "/.", " ", 
   "dtReplace"}], "  ", "//", " ", "TableForm"}]], "Input",
 CellLabel->
  "In[125]:=",ExpressionUUID->"1ff8a189-ace4-4b3e-84e7-f5771c834408"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       SubscriptBox["dZ", "0"], "\[Rule]", 
       RowBox[{
        RowBox[{"Cos", "[", 
         FractionBox[
          SubscriptBox["t", 
           RowBox[{"-", "1"}]], "a"], "]"}], " ", 
        SubscriptBox["dt", 
         RowBox[{"-", "1"}]]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "1"], "\[Rule]", 
       RowBox[{
        RowBox[{"a", " ", "d\[Rho]", " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "a"], "]"}], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cosh", "[", "\[Rho]", "]"}]}], "-", 
        RowBox[{"a", " ", "d\[Theta]", " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "a"], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sinh", "[", "\[Rho]", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", 
          FractionBox[
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "a"], "]"}], " ", 
         RowBox[{"Sinh", "[", "\[Rho]", "]"}], " ", 
         SubscriptBox["dt", 
          RowBox[{"-", "1"}]]}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "2"], "\[Rule]", 
       RowBox[{
        RowBox[{"a", " ", "d\[Rho]", " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "a"], "]"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Cosh", "[", "\[Rho]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"a", " ", "d\[Theta]", " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "a"], "]"}], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sinh", "[", "\[Rho]", "]"}]}], "-", 
        RowBox[{"a", " ", "d\[Phi]", " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "a"], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sinh", "[", "\[Rho]", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sin", "[", 
          FractionBox[
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "a"], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sinh", "[", "\[Rho]", "]"}], " ", 
         SubscriptBox["dt", 
          RowBox[{"-", "1"}]]}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "3"], "\[Rule]", 
       RowBox[{
        RowBox[{"a", " ", "d\[Rho]", " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "a"], "]"}], " ", 
         RowBox[{"Cosh", "[", "\[Rho]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
        RowBox[{"a", " ", "d\[Phi]", " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "a"], "]"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sinh", "[", "\[Rho]", "]"}]}], "+", 
        RowBox[{"a", " ", "d\[Theta]", " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "a"], "]"}], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sinh", "[", "\[Rho]", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Sin", "[", 
          FractionBox[
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "a"], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sinh", "[", "\[Rho]", "]"}], " ", 
         SubscriptBox["dt", 
          RowBox[{"-", "1"}]]}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "4"], "\[Rule]", 
       RowBox[{
        RowBox[{"a", " ", "d\[Rho]", " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "a"], "]"}], " ", 
         RowBox[{"Sinh", "[", "\[Rho]", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cosh", "[", "\[Rho]", "]"}], " ", 
         RowBox[{"Sin", "[", 
          FractionBox[
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "a"], "]"}], " ", 
         SubscriptBox["dt", 
          RowBox[{"-", "1"}]]}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[125]//TableForm=",ExpressionUUID->"d6db36f3-4d3c-45e5-b077-\
a472e45ab9e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"lineElement5pt2", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "lineElement5pt18", "]"}], "\[IndentingNewLine]", 
 RowBox[{"lineElement5pt18", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Collect", "[", " ", 
    RowBox[{
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"lineElement5pt2", "  ", "/.", " ", 
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"Dt", "[", " ", "transform5pt17", " ", "]"}], " ", "/.", 
           " ", "dtReplace"}], " ", ")"}]}], "   ", "//", " ", "Expand"}], 
       " ", "//", " ", "Simplify"}], "  ", ")"}], " ", ",", 
     RowBox[{"{", "  ", 
      RowBox[{
       SubscriptBox["dt", 
        RowBox[{"-", "1"}]], " ", ",", " ", "d\[Rho]", " ", ",", " ", 
       "d\[Theta]", " ", ",", " ", "d\[Phi]"}], " ", "}"}]}], " ", "]"}], "//",
    " ", "FullSimplify", " "}]}]}], "Input",
 CellLabel->
  "In[126]:=",ExpressionUUID->"7df7fa8a-3126-4bbd-97d3-e356fe0047d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SubsuperscriptBox["dZ", "0", "2"]}], "+", 
  SubsuperscriptBox["dZ", "1", "2"], "+", 
  SubsuperscriptBox["dZ", "2", "2"], "+", 
  SubsuperscriptBox["dZ", "3", "2"], "-", 
  SubsuperscriptBox["dZ", "4", "2"]}]], "Output",
 CellLabel->
  "Out[126]=",ExpressionUUID->"e2ef774d-0c97-4f21-b53d-62c9e72cb502"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", 
     FractionBox[
      SubscriptBox["t", 
       RowBox[{"-", "1"}]], "a"], "]"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["d\[Rho]", "2"], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["d\[Theta]", "2"], "+", 
        RowBox[{
         SuperscriptBox["d\[Phi]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Sinh", "[", "\[Rho]", "]"}], "2"]}]}], ")"}]}], "-", 
  SubsuperscriptBox["dt", 
   RowBox[{"-", "1"}], "2"]}]], "Output",
 CellLabel->
  "Out[128]=",ExpressionUUID->"7774d9a9-5a40-4965-a3b0-c09273e027bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric5pt18", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric5pt18", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"metric", "[", " ", 
    RowBox[{"lineElement5pt18", "  ", ",", " ", 
     RowBox[{"{", "  ", 
      RowBox[{
       SubscriptBox["dt", 
        RowBox[{"-", "1"}]], " ", ",", " ", "d\[Rho]", " ", ",", " ", 
       "d\[Theta]", " ", ",", " ", "d\[Phi]"}], " ", "}"}]}], " ", "]"}]}], 
  " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"metric5pt18", " ", "//", " ", "MatrixForm"}]}], "Input",
 CellLabel->
  "In[129]:=",ExpressionUUID->"e4b9a118-8984-4f89-851b-47906ed7a551"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], "0", "0", "0"},
     {"0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         FractionBox[
          SubscriptBox["t", 
           RowBox[{"-", "1"}]], "a"], "]"}], "2"]}], "0", "0"},
     {"0", "0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         FractionBox[
          SubscriptBox["t", 
           RowBox[{"-", "1"}]], "a"], "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sinh", "[", "\[Rho]", "]"}], "2"]}], "0"},
     {"0", "0", "0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         FractionBox[
          SubscriptBox["t", 
           RowBox[{"-", "1"}]], "a"], "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sinh", "[", "\[Rho]", "]"}], "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[131]//MatrixForm=",ExpressionUUID->"7998a983-5d65-4e70-a04c-\
3104cba1f6f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eulerLagrangeEquations", "[", "  ", 
   RowBox[{"metric5pt18", " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["t", 
       RowBox[{"-", "1"}]], ",", "\[Rho]", ",", "\[Theta]", ",", "\[Phi]"}], 
     "}"}], " ", ",", " ", "u"}], " ", "]"}], "  ", "//", " ", 
  "TableForm"}]], "Input",
 CellLabel->
  "In[154]:=",ExpressionUUID->"2eb23675-1ad0-4845-b19d-e7aa7e7041b5"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "a"}], " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{
              SubscriptBox["t", 
               RowBox[{"-", "1"}]], "[", "u", "]"}]}], "a"], "]"}], " ", 
          SuperscriptBox[
           RowBox[{"Sinh", "[", 
            RowBox[{"\[Rho]", "[", "u", "]"}], "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "u", "]"}], "2"]}], "-", 
         RowBox[{"a", " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{
              SubscriptBox["t", 
               RowBox[{"-", "1"}]], "[", "u", "]"}]}], "a"], "]"}], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Rho]", "\[Prime]",
             MultilineFunction->None], "[", "u", "]"}], "2"]}], "-", 
         RowBox[{"a", " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{
              SubscriptBox["t", 
               RowBox[{"-", "1"}]], "[", "u", "]"}]}], "a"], "]"}], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sinh", "[", 
            RowBox[{"\[Rho]", "[", "u", "]"}], "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Phi]", "\[Prime]",
             MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["t", 
             RowBox[{"-", "1"}]], "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "u", "]"}]}]}], ")"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cosh", "[", 
          RowBox[{"\[Rho]", "[", "u", "]"}], "]"}]}], " ", 
        RowBox[{"Sinh", "[", 
         RowBox[{"\[Rho]", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "-", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"Tan", "[", 
          FractionBox[
           RowBox[{
            SubscriptBox["t", 
             RowBox[{"-", "1"}]], "[", "u", "]"}], "a"], "]"}], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["t", 
            RowBox[{"-", "1"}]], "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Rho]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}]}], "a"], "-", 
       RowBox[{
        RowBox[{"Cosh", "[", 
         RowBox[{"\[Rho]", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], "2"], " ", 
        RowBox[{"Sinh", "[", 
         RowBox[{"\[Rho]", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Rho]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"Tan", "[", 
           FractionBox[
            RowBox[{
             SubscriptBox["t", 
              RowBox[{"-", "1"}]], "[", "u", "]"}], "a"], "]"}], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["t", 
             RowBox[{"-", "1"}]], "\[Prime]",
            MultilineFunction->None], "[", "u", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], "[", "u", "]"}]}], "a"]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Coth", "[", 
         RowBox[{"\[Rho]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Rho]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"Tan", "[", 
           FractionBox[
            RowBox[{
             SubscriptBox["t", 
              RowBox[{"-", "1"}]], "[", "u", "]"}], "a"], "]"}], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["t", 
             RowBox[{"-", "1"}]], "\[Prime]",
            MultilineFunction->None], "[", "u", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Phi]", "\[Prime]",
            MultilineFunction->None], "[", "u", "]"}]}], "a"]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cot", "[", 
         RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Coth", "[", 
         RowBox[{"\[Rho]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Rho]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[154]//TableForm=",ExpressionUUID->"21989a46-cf29-4880-9598-\
bee8043a4a9c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"skipping", " ", "5", " ", "pt", " ", "19"}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"also", " ", "same", " ", "problem", " ", "with", " ", "overbar"}],
    " ", "*)"}], " "}]], "Input",
 CellLabel->
  "In[132]:=",ExpressionUUID->"f2af586e-d0d1-4040-a82a-cb93f3132477"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "transform5pt20", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"transform5pt20", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      SubscriptBox["Z", "0"], "\[Rule]", " ", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         SubscriptBox["t", "b"], "a"], "]"}], " ", 
       RowBox[{"Cosh", "[", "\[Theta]", "]"}]}]}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "1"], "\[Rule]", " ", 
      RowBox[{"a", " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         SubscriptBox["t", "b"], "a"], "]"}], " ", 
       RowBox[{"Sinh", "[", 
        SubscriptBox["z", "b"], "]"}]}]}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "2"], "\[Rule]", " ", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         SubscriptBox["t", "b"], "a"], "]"}], " ", 
       RowBox[{"Sinh", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "3"], "\[Rule]", " ", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         SubscriptBox["t", "b"], "a"], "]"}], " ", 
       RowBox[{"Sinh", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Z", "4"], "\[Rule]", " ", 
      RowBox[{"a", " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         SubscriptBox["t", "b"], "a"], "]"}], " ", 
       RowBox[{"Cosh", "[", 
        SubscriptBox["z", "b"], "]"}]}]}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"transform5pt20", " ", "//", " ", "TableForm"}]}], "Input",
 CellLabel->
  "In[133]:=",ExpressionUUID->"ae15d04e-868f-4185-8da6-710b279563c4"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       SubscriptBox["Z", "0"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Cosh", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", 
         FractionBox[
          SubscriptBox["t", "b"], "a"], "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "1"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          SubscriptBox["t", "b"], "a"], "]"}], " ", 
        RowBox[{"Sinh", "[", 
         SubscriptBox["z", "b"], "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "2"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Sin", "[", 
         FractionBox[
          SubscriptBox["t", "b"], "a"], "]"}], " ", 
        RowBox[{"Sinh", "[", "\[Theta]", "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "3"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Sin", "[", 
         FractionBox[
          SubscriptBox["t", "b"], "a"], "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Sinh", "[", "\[Theta]", "]"}]}]}]},
     {
      RowBox[{
       SubscriptBox["Z", "4"], "\[Rule]", 
       RowBox[{"a", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          SubscriptBox["t", "b"], "a"], "]"}], " ", 
        RowBox[{"Cosh", "[", 
         SubscriptBox["z", "b"], "]"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[135]//TableForm=",ExpressionUUID->"eda397a7-9446-46e9-af6e-\
e62a64bcfb7e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"hyperboloid5pt1", "\[IndentingNewLine]", 
 RowBox[{"hyperboloid5pt1", " ", "/.", " ", 
  "transform5pt20"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hyperboloid5pt1", " ", "/.", " ", "transform5pt20"}], " ", "//", 
  " ", "Simplify", " "}]}], "Input",
 CellLabel->
  "In[136]:=",ExpressionUUID->"1adeaa96-50d9-48cc-8167-1f1517f2db24"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SubsuperscriptBox["Z", "0", "2"]}], "+", 
   SubsuperscriptBox["Z", "1", "2"], "+", 
   SubsuperscriptBox["Z", "2", "2"], "+", 
   SubsuperscriptBox["Z", "3", "2"], "-", 
   SubsuperscriptBox["Z", "4", "2"]}], "\[Equal]", 
  RowBox[{"-", 
   SuperscriptBox["a", "2"]}]}]], "Output",
 CellLabel->
  "Out[136]=",ExpressionUUID->"9247a6f8-584e-4517-8b0e-5d806fb30f00"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["a", "2"]}], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", 
      FractionBox[
       SubscriptBox["t", "b"], "a"], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Cosh", "[", 
      SubscriptBox["z", "b"], "]"}], "2"]}], "-", 
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Cosh", "[", "\[Theta]", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      FractionBox[
       SubscriptBox["t", "b"], "a"], "]"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", 
      FractionBox[
       SubscriptBox["t", "b"], "a"], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sinh", "[", 
      SubscriptBox["z", "b"], "]"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      FractionBox[
       SubscriptBox["t", "b"], "a"], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sinh", "[", "\[Theta]", "]"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      FractionBox[
       SubscriptBox["t", "b"], "a"], "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sinh", "[", "\[Theta]", "]"}], "2"]}]}], "\[Equal]", 
  RowBox[{"-", 
   SuperscriptBox["a", "2"]}]}]], "Output",
 CellLabel->
  "Out[137]=",ExpressionUUID->"dfcbfdfb-b134-416a-836e-553566e529fc"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[138]=",ExpressionUUID->"8adee200-6f3d-41ea-a78e-964bc0ee0fa6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Dt", "[", " ", "transform5pt20", " ", "]"}], " ", "/.", " ", 
   "dtReplace"}], " ", "//", " ", "TableForm"}]], "Input",
 CellLabel->
  "In[139]:=",ExpressionUUID->"55bbe8ca-17b7-45a2-a79a-19418aec70d7"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       SubscriptBox["dZ", "0"], "\[Rule]", 
       RowBox[{
        RowBox[{"a", " ", "d\[Theta]", " ", 
         RowBox[{"Sin", "[", 
          FractionBox[
           SubscriptBox["t", "b"], "a"], "]"}], " ", 
         RowBox[{"Sinh", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          FractionBox[
           SubscriptBox["t", "b"], "a"], "]"}], " ", 
         RowBox[{"Cosh", "[", "\[Theta]", "]"}], " ", 
         SubscriptBox["dt", "b"]}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "1"], "\[Rule]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           FractionBox[
            SubscriptBox["t", "b"], "a"], "]"}]}], " ", 
         RowBox[{"Sinh", "[", 
          SubscriptBox["z", "b"], "]"}], " ", 
         SubscriptBox["dt", "b"]}], "+", 
        RowBox[{"a", " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           SubscriptBox["t", "b"], "a"], "]"}], " ", 
         RowBox[{"Cosh", "[", 
          SubscriptBox["z", "b"], "]"}], " ", 
         SubscriptBox["dz", "b"]}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "2"], "\[Rule]", 
       RowBox[{
        RowBox[{"a", " ", "d\[Theta]", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Cosh", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", 
          FractionBox[
           SubscriptBox["t", "b"], "a"], "]"}]}], "-", 
        RowBox[{"a", " ", "d\[Phi]", " ", 
         RowBox[{"Sin", "[", 
          FractionBox[
           SubscriptBox["t", "b"], "a"], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sinh", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          FractionBox[
           SubscriptBox["t", "b"], "a"], "]"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sinh", "[", "\[Theta]", "]"}], " ", 
         SubscriptBox["dt", "b"]}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "3"], "\[Rule]", 
       RowBox[{
        RowBox[{"a", " ", "d\[Theta]", " ", 
         RowBox[{"Cosh", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", 
          FractionBox[
           SubscriptBox["t", "b"], "a"], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
        RowBox[{"a", " ", "d\[Phi]", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sin", "[", 
          FractionBox[
           SubscriptBox["t", "b"], "a"], "]"}], " ", 
         RowBox[{"Sinh", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          FractionBox[
           SubscriptBox["t", "b"], "a"], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sinh", "[", "\[Theta]", "]"}], " ", 
         SubscriptBox["dt", "b"]}]}]}]},
     {
      RowBox[{
       SubscriptBox["dZ", "4"], "\[Rule]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cosh", "[", 
           SubscriptBox["z", "b"], "]"}]}], " ", 
         RowBox[{"Sin", "[", 
          FractionBox[
           SubscriptBox["t", "b"], "a"], "]"}], " ", 
         SubscriptBox["dt", "b"]}], "+", 
        RowBox[{"a", " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           SubscriptBox["t", "b"], "a"], "]"}], " ", 
         RowBox[{"Sinh", "[", 
          SubscriptBox["z", "b"], "]"}], " ", 
         SubscriptBox["dz", "b"]}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[139]//TableForm=",ExpressionUUID->"70d88a78-ee42-48e6-86e2-\
5822ee2cca99"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"lineElement5pt2", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lineElement5pt2", " ", "/.", " ", 
   RowBox[{"(", " ", 
    RowBox[{
     RowBox[{"Dt", "[", " ", "transform5pt20", " ", "]"}], " ", "/.", " ", 
     "dtReplace"}], "  ", ")"}]}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "lineElement5pt21", "]"}], "\[IndentingNewLine]", 
 RowBox[{"lineElement5pt21", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Collect", "[", " ", 
    RowBox[{
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"lineElement5pt2", " ", "/.", " ", 
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"Dt", "[", " ", "transform5pt20", " ", "]"}], " ", "/.", 
           " ", "dtReplace"}], "  ", ")"}]}], "  ", "//", " ", "Expand"}], 
       " ", "//", " ", "Simplify"}], "  ", ")"}], " ", ",", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["dt", "b"], "2"], " ", ",", " ", 
       SuperscriptBox[
        SubscriptBox["dz", "b"], "2"], " ", ",", " ", 
       SuperscriptBox["d\[Theta]", "2"], " ", ",", " ", 
       SuperscriptBox["d\[Phi]", "2"]}], " ", "}"}]}], " ", "]"}], " ", "//", 
   " ", "FullSimplify", " "}]}]}], "Input",
 CellLabel->
  "In[140]:=",ExpressionUUID->"d3c3ec12-8663-4d7d-9f39-6118a3afc72a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SubsuperscriptBox["dZ", "0", "2"]}], "+", 
  SubsuperscriptBox["dZ", "1", "2"], "+", 
  SubsuperscriptBox["dZ", "2", "2"], "+", 
  SubsuperscriptBox["dZ", "3", "2"], "-", 
  SubsuperscriptBox["dZ", "4", "2"]}]], "Output",
 CellLabel->
  "Out[140]=",ExpressionUUID->"7aa855a8-e798-412d-980a-49b28c420e6f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"a", " ", "d\[Theta]", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         SubscriptBox["t", "b"], "a"], "]"}], " ", 
       RowBox[{"Sinh", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox[
         SubscriptBox["t", "b"], "a"], "]"}], " ", 
       RowBox[{"Cosh", "[", "\[Theta]", "]"}], " ", 
       SubscriptBox["dt", "b"]}]}], ")"}], "2"]}], "+", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"a", " ", "d\[Theta]", " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
      RowBox[{"Cosh", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox[
        SubscriptBox["t", "b"], "a"], "]"}]}], "-", 
     RowBox[{"a", " ", "d\[Phi]", " ", 
      RowBox[{"Sin", "[", 
       FractionBox[
        SubscriptBox["t", "b"], "a"], "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
      RowBox[{"Sinh", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", 
       FractionBox[
        SubscriptBox["t", "b"], "a"], "]"}], " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
      RowBox[{"Sinh", "[", "\[Theta]", "]"}], " ", 
      SubscriptBox["dt", "b"]}]}], ")"}], "2"], "+", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"a", " ", "d\[Theta]", " ", 
      RowBox[{"Cosh", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox[
        SubscriptBox["t", "b"], "a"], "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
     RowBox[{"a", " ", "d\[Phi]", " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox[
        SubscriptBox["t", "b"], "a"], "]"}], " ", 
      RowBox[{"Sinh", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", 
       FractionBox[
        SubscriptBox["t", "b"], "a"], "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
      RowBox[{"Sinh", "[", "\[Theta]", "]"}], " ", 
      SubscriptBox["dt", "b"]}]}], ")"}], "2"], "+", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sin", "[", 
        FractionBox[
         SubscriptBox["t", "b"], "a"], "]"}]}], " ", 
      RowBox[{"Sinh", "[", 
       SubscriptBox["z", "b"], "]"}], " ", 
      SubscriptBox["dt", "b"]}], "+", 
     RowBox[{"a", " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        SubscriptBox["t", "b"], "a"], "]"}], " ", 
      RowBox[{"Cosh", "[", 
       SubscriptBox["z", "b"], "]"}], " ", 
      SubscriptBox["dz", "b"]}]}], ")"}], "2"], "-", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cosh", "[", 
        SubscriptBox["z", "b"], "]"}]}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox[
        SubscriptBox["t", "b"], "a"], "]"}], " ", 
      SubscriptBox["dt", "b"]}], "+", 
     RowBox[{"a", " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        SubscriptBox["t", "b"], "a"], "]"}], " ", 
      RowBox[{"Sinh", "[", 
       SubscriptBox["z", "b"], "]"}], " ", 
      SubscriptBox["dz", "b"]}]}], ")"}], "2"]}]], "Output",
 CellLabel->
  "Out[141]=",ExpressionUUID->"c7612134-04b4-4ae4-9c86-4cd509b17131"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SubsuperscriptBox["dt", "b", "2"]}], "+", 
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        FractionBox[
         SubscriptBox["t", "b"], "a"], "]"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["d\[Theta]", "2"], "+", 
        RowBox[{
         SuperscriptBox["d\[Phi]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sinh", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        FractionBox[
         SubscriptBox["t", "b"], "a"], "]"}], "2"], " ", 
      SubsuperscriptBox["dz", "b", "2"]}]}], ")"}]}]}]], "Output",
 CellLabel->
  "Out[143]=",ExpressionUUID->"bd67913a-d278-40aa-b256-53756b0d6091"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric5pt21", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric5pt21", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"metric", "[", 
    RowBox[{
     RowBox[{"Expand", "[", "lineElement5pt21", "]"}], ",", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       SubscriptBox["dt", "b"], " ", ",", " ", 
       SubscriptBox["dz", "b"], " ", ",", " ", "d\[Theta]", " ", ",", " ", 
       "d\[Phi]"}], " ", "}"}]}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"metric5pt21", "  ", "//", " ", "MatrixForm"}]}], "Input",
 CellLabel->
  "In[144]:=",ExpressionUUID->"c513201a-cbb1-4471-9294-ac15ce583388"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], "0", "0", "0"},
     {"0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         FractionBox[
          SubscriptBox["t", "b"], "a"], "]"}], "2"]}], "0", "0"},
     {"0", "0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         FractionBox[
          SubscriptBox["t", "b"], "a"], "]"}], "2"]}], "0"},
     {"0", "0", "0", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         FractionBox[
          SubscriptBox["t", "b"], "a"], "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sinh", "[", "\[Theta]", "]"}], "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[146]//MatrixForm=",ExpressionUUID->"8ba9eb5d-488f-4433-9b50-\
c767465b2815"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eulerLagrangeEquations", "[", "  ", 
   RowBox[{"metric5pt6", " ", ",", 
    RowBox[{"{", " ", 
     RowBox[{
      SubscriptBox["t", "b"], " ", ",", " ", 
      SubscriptBox["z", "b"], " ", ",", " ", "\[Theta]", " ", ",", " ", 
      "\[Phi]"}], " ", "}"}], ",", " ", "u"}], " ", "]"}], "  ", "//", " ", 
  "TableForm"}]], "Input",
 CellLabel->
  "In[155]:=",ExpressionUUID->"191bb9c2-7e2d-4f9c-bbe5-e9e35d113140"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       SuperscriptBox[
        SubscriptBox["t", "b"], "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "u", "]"}]},
     {
      FractionBox[
       RowBox[{"1", "+", 
        SuperscriptBox["a", "4"], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["R", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           SuperscriptBox["R", "2"]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           SuperscriptBox["R", "2"]}], ")"}], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["z", "b"], "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "u", "]"}]}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox["a", "2"]}]]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "u", "]"}], "]"}]}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "u", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]},
     {
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"Cot", "[", 
         RowBox[{"\[Theta]", "[", "u", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "u", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "u", "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[155]//TableForm=",ExpressionUUID->"b6454f15-3b86-431c-8945-\
00aa1be72963"]
}, Open  ]]
},
WindowSize->{767, 671},
WindowMargins->{{4, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 19, 2020)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"8d7176dd-b225-450f-83a2-9927535ccc6e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1649, 44, 273, "Input",ExpressionUUID->"9d4facb3-3c0e-4ec9-b1c3-adeaebdbf996"],
Cell[CellGroupData[{
Cell[2254, 70, 354, 8, 24, "Print",ExpressionUUID->"7dd34791-0fe5-47d9-8941-ff4b8dbe0799"],
Cell[2611, 80, 373, 9, 24, "Print",ExpressionUUID->"0d4f41d4-02e6-42fc-af70-6166241df672"]
}, Open  ]],
Cell[2999, 92, 638, 11, 147, "Output",ExpressionUUID->"e5e8b233-0c5c-4063-87ed-527a53d46465"]
}, Open  ]],
Cell[3652, 106, 131, 2, 41, "Input",ExpressionUUID->"0ac4719c-1d18-4851-ad39-8dc59995f2d1"],
Cell[3786, 110, 1924, 57, 426, "Input",ExpressionUUID->"04e1391e-800a-4119-b7cd-8562a6c43873"],
Cell[CellGroupData[{
Cell[5735, 171, 1400, 29, 298, "Input",ExpressionUUID->"b603c955-a9e6-407a-bd4b-8fdee938ab6b"],
Cell[7138, 202, 287, 6, 50, "Output",ExpressionUUID->"bf25282c-90e9-470e-be39-8f2bbe7f99dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7462, 213, 3971, 95, 613, "Input",ExpressionUUID->"f3fc48d4-f0c7-43c7-a7bf-71006a3ffd69"],
Cell[11436, 310, 3244, 115, 467, "Output",ExpressionUUID->"79e68e6b-8022-481f-a184-0209c06baf4e"]
}, Open  ]],
Cell[14695, 428, 476, 12, 63, "Input",ExpressionUUID->"ea340ddd-a511-45b2-a2fb-3cbcb35a81d3"],
Cell[15174, 442, 5277, 121, 608, "Input",ExpressionUUID->"4449cdf0-1969-42f1-b3bd-c2f3de1ff82e"],
Cell[20454, 565, 1458, 38, 147, "Input",ExpressionUUID->"2448a1b2-9d72-4be8-89b8-e8bb740c569d"],
Cell[CellGroupData[{
Cell[21937, 607, 1001, 27, 119, "Input",ExpressionUUID->"49c18e42-b338-4a9b-ae85-e62c705ecdd0"],
Cell[22941, 636, 417, 11, 43, "Output",ExpressionUUID->"7d0c1892-eacf-4ad6-8350-06cbd7eb73bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23395, 652, 624, 15, 84, "Input",ExpressionUUID->"341426aa-f06c-4031-bf25-e1a4cf2050c9"],
Cell[24022, 669, 343, 8, 43, "Output",ExpressionUUID->"dc8b428e-dd9b-4924-9567-468533d6a2a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24402, 682, 1627, 40, 262, "Input",ExpressionUUID->"b9d264ae-5f05-4fbf-a305-5f2631e7c4c9"],
Cell[26032, 724, 1620, 51, 137, "Output",ExpressionUUID->"bd43ef07-7547-47e4-a21e-d0b127023bd4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27689, 780, 215, 4, 41, "Input",ExpressionUUID->"0b07f99f-ebea-4af5-ae3c-2669253dfe66"],
Cell[27907, 786, 110, 1, 41, "Output",ExpressionUUID->"f6128188-e120-48ac-b61c-7e801100231c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28054, 792, 246, 5, 41, "Input",ExpressionUUID->"201aba08-cfcc-47c5-91f6-0053e57f802f"],
Cell[28303, 799, 3071, 84, 137, "Output",ExpressionUUID->"3c89c6da-a3a5-4aec-ac46-e18032676466"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31411, 888, 802, 20, 67, "Input",ExpressionUUID->"31c15006-ad1a-46c0-b75f-31f06153ac9d"],
Cell[32216, 910, 706, 22, 44, "Output",ExpressionUUID->"bbe209d4-e1c1-4e81-bdb4-2efb4f7a0fec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32959, 937, 1373, 31, 153, "Input",ExpressionUUID->"fadf8f5c-79bb-42a7-8a7c-ee6514ce82e2"],
Cell[34335, 970, 1094, 34, 113, "Output",ExpressionUUID->"9ea63358-98f7-4c34-b63b-b07e582ed297"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35466, 1009, 352, 8, 41, "Input",ExpressionUUID->"f0a0a000-56eb-4f9f-b9d4-8701484b62f1"],
Cell[35821, 1019, 4051, 114, 119, "Output",ExpressionUUID->"c18b38b5-ffbc-44cc-960b-ab1ed661d1dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39909, 1138, 362, 7, 63, "Input",ExpressionUUID->"490a4034-28a1-4f6f-be23-822c85f276e7"],
Cell[40274, 1147, 191, 4, 41, "Output",ExpressionUUID->"2b2d235e-1b51-47af-b9dc-55b6d21a9374"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40502, 1156, 742, 17, 86, "Input",ExpressionUUID->"d5d992bf-c797-436d-88df-ad33662342f1"],
Cell[41247, 1175, 706, 22, 44, "Output",ExpressionUUID->"d1c59dd7-c0ff-4463-b74c-d49453389c76"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41990, 1202, 525, 11, 84, "Input",ExpressionUUID->"067ddaae-2984-4009-a043-59a532d596c0"],
Cell[42518, 1215, 306, 8, 43, "Output",ExpressionUUID->"d15d58f2-3860-4d34-8f28-a12b15c25465"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42861, 1228, 1118, 31, 88, "Input",ExpressionUUID->"850f3ff7-8016-4c7e-b802-fd5c4e3a1e4d"],
Cell[43982, 1261, 306984, 5030, 430, "Output",ExpressionUUID->"46456df1-41b0-4de7-9878-1a800760f5a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[351003, 6296, 1591, 43, 262, "Input",ExpressionUUID->"3b52eb4d-7f18-4352-87dc-8e5cebf1b791"],
Cell[352597, 6341, 1609, 54, 141, "Output",ExpressionUUID->"7703b2e6-a499-4311-a38f-50b5564f5d99"]
}, Open  ]],
Cell[CellGroupData[{
Cell[354243, 6400, 348, 6, 84, "Input",ExpressionUUID->"6827325e-af1a-472a-9480-e7e0401403c8"],
Cell[354594, 6408, 417, 11, 43, "Output",ExpressionUUID->"df898c46-3639-427f-bd3a-2021034361ac"],
Cell[355014, 6421, 1182, 38, 96, "Output",ExpressionUUID->"657edd00-590c-4d8c-8834-73220e3c2b82"],
Cell[356199, 6461, 110, 1, 41, "Output",ExpressionUUID->"66799879-4380-45d4-9a05-66aa693af324"]
}, Open  ]],
Cell[CellGroupData[{
Cell[356346, 6467, 248, 5, 41, "Input",ExpressionUUID->"3f361964-211a-4ad8-b03e-04b4c385b8e1"],
Cell[356597, 6474, 3052, 91, 165, "Output",ExpressionUUID->"35e1742f-3637-4ac3-b603-816cc7c95929"]
}, Open  ]],
Cell[CellGroupData[{
Cell[359686, 6570, 838, 21, 84, "Input",ExpressionUUID->"4700c714-2d4f-4c2e-819c-16ae5694487d"],
Cell[360527, 6593, 1757, 56, 89, "Output",ExpressionUUID->"c161bf07-0488-42d7-90b0-d1b066c7b8d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[362321, 6654, 1337, 31, 153, "Input",ExpressionUUID->"e9d916af-8599-4fc6-a7ab-1aaa4eded9a5"],
Cell[363661, 6687, 1086, 35, 133, "Output",ExpressionUUID->"7189e4cd-ac1d-4ee5-84ed-d5d9014adcf2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[364784, 6727, 363, 8, 41, "Input",ExpressionUUID->"3779f35b-16de-4bf8-b7c7-5a0ce54a94a8"],
Cell[365150, 6737, 5124, 148, 163, "Output",ExpressionUUID->"3855b791-2439-4ecb-a494-2b18a41592b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[370311, 6890, 360, 7, 63, "Input",ExpressionUUID->"f481a51b-b2dd-4d2f-a9d0-04e6480f8cf7"],
Cell[370674, 6899, 191, 4, 41, "Output",ExpressionUUID->"6aa4d6b0-f3d5-4707-8661-89a46b80c631"]
}, Open  ]],
Cell[CellGroupData[{
Cell[370902, 6908, 924, 23, 107, "Input",ExpressionUUID->"65142ab9-136d-49d0-89be-902ec1e15dad"],
Cell[371829, 6933, 761, 25, 64, "Output",ExpressionUUID->"c2be5b65-283f-4369-b79f-e9a4a5df249a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[372627, 6963, 2262, 62, 343, "Input",ExpressionUUID->"7b2b6ed1-976c-4a63-8c64-549982092367"],
Cell[374892, 7027, 2147, 67, 199, "Output",ExpressionUUID->"5788f2c0-3cdf-4abf-9a9a-97cb51d12060"]
}, Open  ]],
Cell[CellGroupData[{
Cell[377076, 7099, 349, 6, 84, "Input",ExpressionUUID->"bea89b0d-c7d3-4dcf-9e37-970aca6acdf7"],
Cell[377428, 7107, 417, 11, 43, "Output",ExpressionUUID->"b40fef05-fa9f-4e13-aff0-6fb5eac435c7"],
Cell[377848, 7120, 2140, 68, 124, "Output",ExpressionUUID->"eaf1809f-9ecf-467e-9470-f85fd42cfbca"],
Cell[379991, 7190, 110, 1, 41, "Output",ExpressionUUID->"e939e0fc-74ed-417c-95cd-62720a2ccabb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[380138, 7196, 206, 4, 41, "Input",ExpressionUUID->"b36059b4-da98-45cd-a42f-3298b0b2676a"],
Cell[380347, 7202, 5167, 142, 324, "Output",ExpressionUUID->"1561889e-2a5a-4200-b21a-6fee4adc0ffb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[385551, 7349, 723, 18, 63, "Input",ExpressionUUID->"a52eea5e-2850-4536-9409-bd1916d11da7"],
Cell[386277, 7369, 1077, 34, 70, "Output",ExpressionUUID->"af22d6e1-df73-425a-9c5c-2aada0f99864"]
}, Open  ]],
Cell[CellGroupData[{
Cell[387391, 7408, 1404, 31, 176, "Input",ExpressionUUID->"46fcf93a-f985-4967-a85c-e5c966f10f07"],
Cell[388798, 7441, 1861, 59, 189, "Output",ExpressionUUID->"f18db42c-c07a-4f7d-890d-f7d0b2a1c6ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[390696, 7505, 368, 8, 41, "Input",ExpressionUUID->"4f6b29d0-2ef2-439f-a630-10463cbe8973"],
Cell[391067, 7515, 6973, 193, 169, "Output",ExpressionUUID->"063b7f27-d5ba-422c-ae2e-30c070667995"]
}, Open  ]],
Cell[CellGroupData[{
Cell[398077, 7713, 365, 7, 63, "Input",ExpressionUUID->"97a56018-e5b8-49da-b2ae-8720609bcdce"],
Cell[398445, 7722, 196, 4, 41, "Output",ExpressionUUID->"1a8e697c-ac6e-4d78-8670-ab404e55acc5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[398678, 7731, 1153, 30, 165, "Input",ExpressionUUID->"bee685b0-e824-4d21-99f5-178333d006fb"],
Cell[399834, 7763, 1067, 35, 80, "Output",ExpressionUUID->"43b3945e-cd23-4a12-9234-a5150063ed37"]
}, Open  ]],
Cell[CellGroupData[{
Cell[400938, 7803, 120, 1, 41, "Input",ExpressionUUID->"6cd737c3-5b4e-4718-9a63-ee48e2a9c9ed"],
Cell[401061, 7806, 706, 22, 44, "Output",ExpressionUUID->"7aa95fa5-a7ed-4ff7-b442-21a9884afa8c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[401804, 7833, 1239, 32, 178, "Input",ExpressionUUID->"2ff34737-e45f-4ce1-865c-129f9c17e132"],
Cell[403046, 7867, 316, 8, 41, "Output",ExpressionUUID->"f8e37c8b-1e5f-4d6b-863c-24c7d443d208"]
}, Open  ]],
Cell[CellGroupData[{
Cell[403399, 7880, 344, 8, 41, "Input",ExpressionUUID->"1be2776d-134d-4395-84d1-3222ceafaca2"],
Cell[403746, 7890, 727, 24, 69, "Output",ExpressionUUID->"11c7591e-42de-43b5-9882-b0e013265b65"]
}, Open  ]],
Cell[CellGroupData[{
Cell[404510, 7919, 435, 10, 63, "Input",ExpressionUUID->"ad6a2da3-6492-40df-b1a0-8c20830e27ae"],
Cell[404948, 7931, 907, 28, 44, "Output",ExpressionUUID->"514a902d-4418-4faa-b34f-6e8806b34e06"]
}, Open  ]],
Cell[CellGroupData[{
Cell[405892, 7964, 1068, 23, 168, "Input",ExpressionUUID->"4a8008d5-0075-4a5f-8ba0-6f4833577da6"],
Cell[406963, 7989, 1262, 39, 113, "Output",ExpressionUUID->"a24639c1-fda0-423e-b228-8813554be37a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[408262, 8033, 377, 9, 41, "Input",ExpressionUUID->"45ed0c29-de99-4f09-b00b-a1b11a2aeb96"],
Cell[408642, 8044, 4146, 116, 109, "Output",ExpressionUUID->"673aa208-7926-4e3d-8994-a1a3e49154cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[412825, 8165, 365, 7, 63, "Input",ExpressionUUID->"f800d078-55c2-4ccd-ab60-11ce13136851"],
Cell[413193, 8174, 201, 4, 41, "Output",ExpressionUUID->"c9c16e0b-8a99-41b3-b2ce-1ab18bd9179e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[413431, 8183, 715, 19, 65, "Input",ExpressionUUID->"aafdde9b-ffcd-43f2-a67d-9d64a810396e"],
Cell[414149, 8204, 705, 21, 41, "Output",ExpressionUUID->"e9eb50de-18ae-4dc9-89b1-63c9011d8ffd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[414891, 8230, 1550, 40, 199, "Input",ExpressionUUID->"60675061-209a-4fcb-81a2-c777a59595aa"],
Cell[416444, 8272, 703, 20, 44, "Output",ExpressionUUID->"cf5652f2-fcd3-479a-afa8-ddf5ed6472ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417184, 8297, 374, 7, 84, "Input",ExpressionUUID->"01eafe89-dab2-416a-a858-34d4251aab56"],
Cell[417561, 8306, 224, 5, 41, "Output",ExpressionUUID->"e39ca974-7588-4fe3-8fbf-e052be120e84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417822, 8316, 208, 4, 41, "Input",ExpressionUUID->"8cf7e87b-a6d5-46ed-bcc7-94f4b0ff9da4"],
Cell[418033, 8322, 301, 7, 41, "Output",ExpressionUUID->"b2b3afaf-d3a9-4412-9ec6-b6f28da9e40e"]
}, Open  ]],
Cell[418349, 8332, 308, 7, 41, "Input",ExpressionUUID->"d0e5da07-6f80-49c8-8c71-6a0aced7d1c7"],
Cell[CellGroupData[{
Cell[418682, 8343, 2088, 60, 303, "Input",ExpressionUUID->"89748cf5-f143-4444-b176-ad567e7bef4a"],
Cell[420773, 8405, 1649, 55, 171, "Output",ExpressionUUID->"6d66c89a-be49-40f4-956b-12ca82aede45"]
}, Open  ]],
Cell[CellGroupData[{
Cell[422459, 8465, 366, 7, 84, "Input",ExpressionUUID->"239aa125-2653-4a82-abf0-28a4cb226835"],
Cell[422828, 8474, 417, 11, 43, "Output",ExpressionUUID->"efc94e35-c636-4ce0-ac9a-26bdea470a95"],
Cell[423248, 8487, 1308, 42, 64, "Output",ExpressionUUID->"2c765a29-2772-41ef-824f-3d0d4226a966"],
Cell[424559, 8531, 110, 1, 41, "Output",ExpressionUUID->"14702aa0-83df-4020-ac1b-2cdabe54aa70"]
}, Open  ]],
Cell[CellGroupData[{
Cell[424706, 8537, 248, 5, 41, "Input",ExpressionUUID->"c768bc3e-2524-4fca-92b5-36291398c343"],
Cell[424957, 8544, 3183, 98, 187, "Output",ExpressionUUID->"67d89fb2-a22f-4cce-9b99-d0e69560614c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[428177, 8647, 434, 10, 84, "Input",ExpressionUUID->"f7dcd071-03a0-4bdf-bf8c-ea4fdeba3e04"],
Cell[428614, 8659, 347, 9, 43, "Output",ExpressionUUID->"8de783fc-cdef-4212-9575-6b0a9e69ada9"],
Cell[428964, 8670, 397, 12, 63, "Output",ExpressionUUID->"aa72ee44-ed15-4995-884d-644dacd6afc3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[429398, 8687, 544, 12, 84, "Input",ExpressionUUID->"ff61b597-57ad-4b9a-8210-f1c2e7985311"],
Cell[429945, 8701, 397, 12, 63, "Output",ExpressionUUID->"12d53496-da76-46f8-bb15-9cd02d1e3ac1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[430379, 8718, 377, 8, 64, "Input",ExpressionUUID->"5ef3c045-b672-4055-b0c2-bb713b314b6b"],
Cell[430759, 8728, 211, 6, 43, "Output",ExpressionUUID->"c44e7366-8844-4d6d-a845-daf77fc802cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[431007, 8739, 465, 9, 105, "Input",ExpressionUUID->"a47e2b8a-8fea-42fc-b5a6-f3c2b911a0a0"],
Cell[431475, 8750, 1010, 33, 153, "Output",ExpressionUUID->"8e2c80aa-542a-4f26-9f8e-778c5fa05864"]
}, Open  ]],
Cell[CellGroupData[{
Cell[432522, 8788, 382, 9, 41, "Input",ExpressionUUID->"0af241d3-67f4-4294-9afd-5ac5764e2b87"],
Cell[432907, 8799, 2185, 69, 151, "Output",ExpressionUUID->"5a7f408d-9fbd-4d88-9246-0d3916202fb5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[435129, 8873, 1137, 28, 229, "Input",ExpressionUUID->"7999cae3-1c17-45e9-a094-ce85533136d8"],
Cell[436269, 8903, 931, 30, 83, "Output",ExpressionUUID->"384a7ec1-17be-4518-a50e-877636a7afe2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[437237, 8938, 206, 5, 41, "Input",ExpressionUUID->"25b9c188-cdd7-4691-b7f3-2212abc04990"],
Cell[437446, 8945, 1042, 30, 65, "Output",ExpressionUUID->"710ccde0-1a58-431e-80b6-3fd510282a02"]
}, Open  ]],
Cell[CellGroupData[{
Cell[438525, 8980, 436, 10, 84, "Input",ExpressionUUID->"8e779dac-9ad1-47a9-8acf-e34e2bcebe6d"],
Cell[438964, 8992, 397, 12, 63, "Output",ExpressionUUID->"01990407-2120-4f83-a860-6ccf2cddff08"],
Cell[439364, 9006, 702, 22, 66, "Output",ExpressionUUID->"81440004-8272-4548-a8ce-501169fedeff"]
}, Open  ]],
Cell[440081, 9031, 281, 8, 41, "Input",ExpressionUUID->"a42cfd49-aa7b-4063-b0ab-469b4bbd1ff0"],
Cell[CellGroupData[{
Cell[440387, 9043, 421, 10, 105, "Input",ExpressionUUID->"62c3756e-2cbb-4021-9ca5-126798eb832b"],
Cell[440811, 9055, 272, 8, 50, "Output",ExpressionUUID->"f9314ac5-4861-47ae-90db-a3a3a52afd84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[441120, 9068, 312, 8, 41, "Input",ExpressionUUID->"2bf55ef6-6252-433f-a8dd-b095ce4fbb19"],
Cell[441435, 9078, 326, 10, 50, "Output",ExpressionUUID->"f5366c6e-7582-435d-8741-f5965c2e4e22"]
}, Open  ]],
Cell[CellGroupData[{
Cell[441798, 9093, 2116, 57, 313, "Input",ExpressionUUID->"e66a3bf0-e630-4c64-90ea-bf0773ce93ba"],
Cell[443917, 9152, 2101, 66, 167, "Output",ExpressionUUID->"8f967288-2528-430f-8363-756fd3d52d4f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[446055, 9223, 414, 9, 84, "Input",ExpressionUUID->"14b34957-0641-4403-a499-96e7e3152b12"],
Cell[446472, 9234, 421, 12, 43, "Output",ExpressionUUID->"737cd4d5-d580-4efa-ac4a-e02d1fae391f"],
Cell[446896, 9248, 1858, 60, 94, "Output",ExpressionUUID->"78559d71-d77d-454d-ba33-ba60514e085e"],
Cell[448757, 9310, 114, 2, 41, "Output",ExpressionUUID->"f6b2044e-b25f-4dfd-94ff-f2c9f0aba670"]
}, Open  ]],
Cell[CellGroupData[{
Cell[448908, 9317, 251, 6, 41, "Input",ExpressionUUID->"1ff8a189-ace4-4b3e-84e7-f5771c834408"],
Cell[449162, 9325, 5332, 148, 167, "Output",ExpressionUUID->"d6db36f3-4d3c-45e5-b077-a472e45ab9e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[454531, 9478, 1005, 23, 147, "Input",ExpressionUUID->"7df7fa8a-3126-4bbd-97d3-e356fe0047d0"],
Cell[455539, 9503, 347, 9, 43, "Output",ExpressionUUID->"e2ef774d-0c97-4f21-b53d-62c9e72cb502"],
Cell[455889, 9514, 785, 25, 56, "Output",ExpressionUUID->"7774d9a9-5a40-4965-a3b0-c09273e027bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[456711, 9544, 636, 14, 105, "Input",ExpressionUUID->"e4b9a118-8984-4f89-851b-47906ed7a551"],
Cell[457350, 9560, 1537, 48, 131, "Output",ExpressionUUID->"7998a983-5d65-4e70-a04c-3104cba1f6f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[458924, 9613, 422, 11, 41, "Input",ExpressionUUID->"2eb23675-1ad0-4845-b19d-e7aa7e7041b5"],
Cell[459349, 9626, 6869, 191, 167, "Output",ExpressionUUID->"21989a46-cf29-4880-9598-bee8043a4a9c"]
}, Open  ]],
Cell[466233, 9820, 365, 9, 63, "Input",ExpressionUUID->"f2af586e-d0d1-4040-a82a-cb93f3132477"],
Cell[CellGroupData[{
Cell[466623, 9833, 1930, 52, 313, "Input",ExpressionUUID->"ae15d04e-868f-4185-8da6-710b279563c4"],
Cell[468556, 9887, 1913, 61, 173, "Output",ExpressionUUID->"eda397a7-9446-46e9-af6e-e62a64bcfb7e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[470506, 9953, 354, 7, 84, "Input",ExpressionUUID->"1adeaa96-50d9-48cc-8167-1f1517f2db24"],
Cell[470863, 9962, 421, 12, 43, "Output",ExpressionUUID->"9247a6f8-584e-4517-8b0e-5d806fb30f00"],
Cell[471287, 9976, 1633, 53, 94, "Output",ExpressionUUID->"dfcbfdfb-b134-416a-836e-553566e529fc"],
Cell[472923, 10031, 114, 2, 41, "Output",ExpressionUUID->"8adee200-6f3d-41ea-a78e-964bc0ee0fa6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[473074, 10038, 250, 6, 41, "Input",ExpressionUUID->"55bbe8ca-17b7-45a2-a79a-19418aec70d7"],
Cell[473327, 10046, 3999, 116, 173, "Output",ExpressionUUID->"70d88a78-ee42-48e6-86e2-5822ee2cca99"]
}, Open  ]],
Cell[CellGroupData[{
Cell[477363, 10167, 1345, 32, 172, "Input",ExpressionUUID->"d3c3ec12-8663-4d7d-9f39-6118a3afc72a"],
Cell[478711, 10201, 347, 9, 43, "Output",ExpressionUUID->"7aa855a8-e798-412d-980a-49b28c420e6f"],
Cell[479061, 10212, 3290, 98, 246, "Output",ExpressionUUID->"c7612134-04b4-4ae4-9c86-4cd509b17131"],
Cell[482354, 10312, 845, 27, 56, "Output",ExpressionUUID->"bd67913a-d278-40aa-b256-53756b0d6091"]
}, Open  ]],
Cell[CellGroupData[{
Cell[483236, 10344, 659, 15, 105, "Input",ExpressionUUID->"c513201a-cbb1-4471-9294-ac15ce583388"],
Cell[483898, 10361, 1295, 41, 133, "Output",ExpressionUUID->"8ba9eb5d-488f-4433-9b50-c767465b2815"]
}, Open  ]],
Cell[CellGroupData[{
Cell[485230, 10407, 450, 11, 41, "Input",ExpressionUUID->"191bb9c2-7e2d-4f9c-bbe5-e9e35d113140"],
Cell[485683, 10420, 2409, 73, 123, "Output",ExpressionUUID->"b6454f15-3b86-431c-8945-00aa1be72963"]
}, Open  ]]
}
]
*)

