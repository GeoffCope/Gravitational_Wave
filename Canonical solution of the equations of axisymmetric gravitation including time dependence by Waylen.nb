(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    915138,      18335]
NotebookOptionsPosition[    897821,      18083]
NotebookOutlinePosition[    898287,      18100]
CellTagsIndexPosition[    898244,      18097]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Notebook for :  
 Canonical solution of the equations of axisymmetric gravitation including \
time dependence by Waylen\
\>", "Title",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8217294718661222`*^9, 3.821729502043838*^9}, 
   3.8217295683553457`*^9, 3.821732221863006*^9, {3.821811203295624*^9, 
   3.8218112036548367`*^9}, {3.822041768762134*^9, 3.822041781290854*^9}, {
   3.822048009752109*^9, 3.8220480569607773`*^9}, {3.822504877727007*^9, 
   3.8225048874039307`*^9}, {3.822565447028533*^9, 3.822565457908236*^9}, {
   3.822822107930128*^9, 3.822822113128089*^9}, {3.823176459993638*^9, 
   3.823176470345335*^9}, {3.823359338529508*^9, 3.823359361520629*^9}, {
   3.8235974638251762`*^9, 3.823597473367338*^9}, {3.823618458364909*^9, 
   3.8236184669077578`*^9}, {3.8236833044709806`*^9, 3.823683312509585*^9}, {
   3.8236885755476217`*^9, 3.823688587026948*^9}, {3.823689672516461*^9, 
   3.823689672910822*^9}, {3.8237044493810883`*^9, 3.8237044672759027`*^9}, {
   3.8239668765180197`*^9, 3.8239668768923607`*^9}, {3.823969962518847*^9, 
   3.823969963027501*^9}, {3.825843456962591*^9, 3.825843470538437*^9}, {
   3.82587531772775*^9, 3.825875324670994*^9}, {3.825877486465591*^9, 
   3.825877490888733*^9}, {3.852131433309181*^9, 3.8521314490136633`*^9}, 
   3.852131715748138*^9, {3.852142824207406*^9, 3.852142839367119*^9}, {
   3.8521528932912827`*^9, 3.852152897139512*^9}, {3.852154368018138*^9, 
   3.852154373026285*^9}, {3.8521551038231077`*^9, 3.8521551043703213`*^9}, {
   3.852215177841008*^9, 3.852215185896905*^9}, {3.852305445240368*^9, 
   3.852305450688365*^9}},
 TextAlignment->Center,ExpressionUUID->"66f5ac91-0127-4d5a-9de5-4cc3f88b5891"],

Cell["\<\
Geoff Cope
University of Utah
                                                                              \
                               \|01040f\|01042d\|01044c\|010432\|010442\
\|010432\|010449\|010445\|01042e\|01043b\|010428 \|010432\|010442 \|01040f\
\|01042d\|01043b\|01042b
January 27, 2022\
\>", "Author",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.821729507652328*^9, 3.821729529657844*^9}, 
   3.8220480097522783`*^9, {3.822048070235491*^9, 3.822048084689715*^9}, {
   3.8225654346519403`*^9, 3.8225654361641483`*^9}, {3.8231764728567343`*^9, 
   3.823176482313031*^9}, {3.8233640113399878`*^9, 3.823364023347041*^9}, {
   3.823422996286858*^9, 3.823422999926001*^9}, {3.823602893791738*^9, 
   3.823602896188092*^9}, {3.8236833287515574`*^9, 3.823683328958127*^9}, {
   3.823966903508623*^9, 3.823966903859309*^9}, {3.823966992570949*^9, 
   3.823966994785722*^9}, {3.825859229609981*^9, 3.825859230168909*^9}, {
   3.850737092718917*^9, 3.850737113741796*^9}, 3.8521317157482023`*^9, {
   3.852133617349394*^9, 3.852133621456737*^9}, {3.8523062465844316`*^9, 
   3.85230624695208*^9}},
 TextAlignment->Center,ExpressionUUID->"981c3a7e-1325-45be-a5ac-c112e6a7a230"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hyperlink To Documentation", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.820944675605734*^9, 
  3.8209446931410646`*^9}},ExpressionUUID->"f388601c-60de-4028-8a6f-\
b118c2c58002"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<GeneralRelativityTensors Documentation and Download\>\"", ",", 
   "\[IndentingNewLine]", 
   "\"\<https://github.com/BlackHolePerturbationToolkit\>\""}], 
  "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.820944619768764*^9, 3.820944681268063*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b2f09453-ed94-41b0-af1d-f162258c746d"],

Cell[BoxData[
 TemplateBox[{
  "\"GeneralRelativityTensors Documentation and Download\"", 
   "https://github.com/BlackHolePerturbationToolkit"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.820944653562152*^9, 3.820944681268403*^9}, 
   3.821729905862431*^9, 3.821732641380642*^9, 3.8218069931429567`*^9, 
   3.821811425912986*^9, 3.822042652654992*^9, {3.822048793766124*^9, 
   3.8220488009116488`*^9}, 3.82250502887521*^9, 3.822505578829629*^9, 
   3.822565490613895*^9, 3.8225662097813597`*^9, 3.822606717894772*^9, 
   3.822739433713368*^9, 3.822822210464344*^9, 3.8233594284652433`*^9, 
   3.8233607803938913`*^9, 3.823360880234103*^9, 3.823361224481102*^9, 
   3.82336209870968*^9, 3.823364030542309*^9, 3.823597528606563*^9, 
   3.823618495251218*^9, 3.82368341365138*^9, 3.82368384184562*^9, 
   3.823684775269041*^9, 3.823688794270237*^9, 3.82369077711421*^9, 
   3.823704572306265*^9, 3.8239670360944*^9, 3.8239675178827963`*^9, 
   3.823970038559888*^9, 3.824025681964837*^9, 3.825843522027536*^9, 
   3.825875355898499*^9, 3.825877049587747*^9, 3.827924950311701*^9, 
   3.8518606094123907`*^9, 3.852131502800988*^9, 3.8521429747544107`*^9, 
   3.852143198526895*^9, 3.852143285151144*^9, 3.852143551701459*^9, 
   3.852152953739504*^9, 3.852154593926025*^9, 3.8521553641077557`*^9, 
   3.852305813572359*^9, 3.852311848650827*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"5ec45d64-b09c-4e83-90a0-76f3440c8dfe"]
}, Closed]],

Cell[CellGroupData[{

Cell["Hyperlink  To Book and Related Articles", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.820937794883616*^9, {3.820938266275806*^9, 3.82093829464357*^9}, 
   3.820943883376583*^9, {3.8210324492405148`*^9, 3.821032453951701*^9}, {
   3.8217297279218817`*^9, 3.8217297313782063`*^9}, {3.822593613363134*^9, 
   3.822593616181035*^9}, {3.822736144359599*^9, 3.8227361450547543`*^9}, {
   3.823359417697976*^9, 3.823359420672374*^9}, 3.843139692938038*^9, {
   3.852215255681182*^9, 
   3.852215261529188*^9}},ExpressionUUID->"ee959f79-c2a5-459d-ae69-\
3eb984e69072"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Canonical solution of the equations of axisymmetric gravitation \
including time dependence by Waylen\>\"", ",", "\[IndentingNewLine]", 
   "\"\<https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1987.0053\>\"\
"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8523054913061*^9, 3.85230550323248*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"a0b07b1d-e954-4b93-bc56-2552cefff0c0"],

Cell[BoxData[
 TemplateBox[{
  "\"Canonical solution of the equations of axisymmetric gravitation \
including time dependence by Waylen\"", 
   "https://royalsocietypublishing.org/doi/abs/10.1098/rspa.1987.0053"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.8523055048325377`*^9, 3.8523058136230373`*^9, 
  3.8523118489795*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"51f430ed-b274-4a7b-be5a-37ac72c8d79a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Utilities and Package Load", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.820937646765551*^9, 3.8209376725449123`*^9}, 
   3.825287778263229*^9},ExpressionUUID->"effeeb4d-bc8b-4d6e-bf79-\
700d520154b1"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "Utilities`CleanSlate`"}], "\[IndentingNewLine]", 
 RowBox[{"CleanSlate", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearInOut", "[", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pdConv", "[", "f_", "]"}], ":=", 
  RowBox[{"TraditionalForm", "[", 
   RowBox[{"f", "/.", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Derivative", "[", "inds__", "]"}], "[", "g_", "]"}], "[", 
      "vars__", "]"}], "\[RuleDelayed]", 
     RowBox[{"Apply", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Defer", "[", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"g", "[", "vars", "]"}], ",", "##"}], "]"}], "]"}], "&"}], 
       ",", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "vars", "}"}], ",", 
           RowBox[{"{", "inds", "}"}]}], "}"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"var_", ",", "0"}], "}"}], "\[RuleDelayed]", 
           RowBox[{"Sequence", "[", "]"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"var_", ",", "1"}], "}"}], "\[RuleDelayed]", 
           RowBox[{"{", "var", "}"}]}]}], "}"}]}]}], "]"}]}]}], 
   "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.8209376549030037`*^9, {3.821032517164062*^9, 3.821032518258361*^9}, 
   3.8252877782634068`*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"5f113ec2-df0f-4bb2-88eb-5e90a3be582b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  (CleanSlate) Contexts purged: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"Global`\"\>", "}"}]}],
  SequenceForm["  (CleanSlate) Contexts purged: ", {"Global`"}],
  Editable->False]], "Print",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.820932754769992*^9, 3.820933427630714*^9, 3.820937654903143*^9, 
   3.821729906190301*^9, 3.821732641685704*^9, 3.8218069933778133`*^9, 
   3.82181142618342*^9, 3.8220426528487463`*^9, {3.822048793940605*^9, 
   3.822048801089246*^9}, 3.822505029191699*^9, 3.822505579049889*^9, 
   3.822565490838564*^9, 3.822566210008327*^9, 3.822606718180009*^9, 
   3.8226371008270607`*^9, 3.822739433887854*^9, 3.822761800089258*^9, 
   3.8228172997642097`*^9, 3.822822210725956*^9, 3.822988687208267*^9, 
   3.823359428732101*^9, 3.823360780582996*^9, 3.823360880477087*^9, 
   3.823361224742215*^9, 3.8233620990886593`*^9, 3.8233640308219624`*^9, 
   3.8235320061137466`*^9, 3.823597528753026*^9, 3.823618495521882*^9, 
   3.823683414021819*^9, 3.823683842015107*^9, 3.823684775412067*^9, 
   3.823688794547976*^9, 3.823690777270031*^9, 3.8237045725706463`*^9, 
   3.823967036254635*^9, 3.823967518049459*^9, 3.823970038788274*^9, 
   3.824025682258999*^9, 3.825287778263542*^9, 3.825843522300147*^9, 
   3.8258753561698093`*^9, 3.825877049883161*^9, 3.827924950534737*^9, 
   3.851860609620921*^9, 3.85213150298538*^9, 3.8521429748996067`*^9, 
   3.85214319872901*^9, 3.852143285391108*^9, 3.852143551953841*^9, 
   3.852152954043881*^9, 3.852154594175189*^9, 3.852155364385145*^9, 
   3.852215576332075*^9, 3.852217035548655*^9, 3.852246706667981*^9, 
   3.852305813828136*^9, 3.852311849136147*^9},
 CellLabel->
  "During evaluation of \
In[3]:=",ExpressionUUID->"1e894660-3890-45da-a92b-96bf48644698"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  (CleanSlate) Approximate kernel memory recovered: \"\>", 
   "\[InvisibleSpace]", "\<\"6 Kb\"\>"}],
  SequenceForm["  (CleanSlate) Approximate kernel memory recovered: ", "6 Kb"],
  Editable->False]], "Print",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.820932754769992*^9, 3.820933427630714*^9, 3.820937654903143*^9, 
   3.821729906190301*^9, 3.821732641685704*^9, 3.8218069933778133`*^9, 
   3.82181142618342*^9, 3.8220426528487463`*^9, {3.822048793940605*^9, 
   3.822048801089246*^9}, 3.822505029191699*^9, 3.822505579049889*^9, 
   3.822565490838564*^9, 3.822566210008327*^9, 3.822606718180009*^9, 
   3.8226371008270607`*^9, 3.822739433887854*^9, 3.822761800089258*^9, 
   3.8228172997642097`*^9, 3.822822210725956*^9, 3.822988687208267*^9, 
   3.823359428732101*^9, 3.823360780582996*^9, 3.823360880477087*^9, 
   3.823361224742215*^9, 3.8233620990886593`*^9, 3.8233640308219624`*^9, 
   3.8235320061137466`*^9, 3.823597528753026*^9, 3.823618495521882*^9, 
   3.823683414021819*^9, 3.823683842015107*^9, 3.823684775412067*^9, 
   3.823688794547976*^9, 3.823690777270031*^9, 3.8237045725706463`*^9, 
   3.823967036254635*^9, 3.823967518049459*^9, 3.823970038788274*^9, 
   3.824025682258999*^9, 3.825287778263542*^9, 3.825843522300147*^9, 
   3.8258753561698093`*^9, 3.825877049883161*^9, 3.827924950534737*^9, 
   3.851860609620921*^9, 3.85213150298538*^9, 3.8521429748996067`*^9, 
   3.85214319872901*^9, 3.852143285391108*^9, 3.852143551953841*^9, 
   3.852152954043881*^9, 3.852154594175189*^9, 3.852155364385145*^9, 
   3.852215576332075*^9, 3.852217035548655*^9, 3.852246706667981*^9, 
   3.852305813828136*^9, 3.852311849140437*^9},
 CellLabel->
  "During evaluation of \
In[3]:=",ExpressionUUID->"f4c6de22-19ec-49d5-88d3-7bd99c2e64f9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Utilities`CleanSlate`\"\>", 
   ",", "\<\"DocumentationSearch`\"\>", ",", "\<\"ResourceLocator`\"\>", 
   ",", "\<\"NaturalLanguageProcessingLoader`\"\>", ",", "\<\"System`\"\>", 
   ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.820932754773623*^9, 3.820933427635436*^9, 3.8209376549033947`*^9, 
   3.821729906193787*^9, 3.821732641691049*^9, 3.821806993386058*^9, 
   3.821811426187071*^9, 3.822042652852829*^9, {3.822048793944077*^9, 
   3.822048801092909*^9}, 3.822505029195156*^9, 3.8225055790570173`*^9, 
   3.8225654908422747`*^9, 3.8225662100125237`*^9, 3.8226067181902227`*^9, 
   3.822637100839163*^9, 3.8227394339100733`*^9, 3.822761800103311*^9, 
   3.822817299776285*^9, 3.822822210739685*^9, 3.822988687217742*^9, 
   3.823359428736412*^9, 3.823360780587545*^9, 3.8233608804810534`*^9, 
   3.823361224746982*^9, 3.823362099093968*^9, 3.823364030838743*^9, 
   3.8235320061191893`*^9, 3.823597528756508*^9, 3.8236184955254183`*^9, 
   3.823683414029439*^9, 3.823683842020509*^9, 3.823684775416593*^9, 
   3.823688794552709*^9, 3.823690777273932*^9, 3.8237045725743713`*^9, 
   3.823967036258197*^9, 3.823967518053287*^9, 3.8239700387921047`*^9, 
   3.824025682265245*^9, 3.825287778263782*^9, 3.825843522304077*^9, 
   3.82587535617485*^9, 3.825877049888481*^9, 3.827924950539536*^9, 
   3.8518606096277523`*^9, 3.852131502991153*^9, 3.85214297490674*^9, 
   3.8521431987358418`*^9, 3.852143285398467*^9, 3.852143551960775*^9, 
   3.852152954050476*^9, 3.85215459418124*^9, 3.8521553643936033`*^9, 
   3.8522155763379374`*^9, 3.852217035554071*^9, 3.85224670668085*^9, 
   3.852305813837055*^9, 3.852311849143076*^9},
 CellLabel->"Out[0]=",ExpressionUUID->"0ae973d6-93be-4b36-91d9-47a20d0db996"],

Cell[BoxData[
 RowBox[{"<<", "GeneralRelativityTensors`"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8209376549035053`*^9, 3.825287778263854*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"c6dfb6b8-c303-4e00-9682-f1cf8bf8783e"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<VariationalMethods`\>\"", "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.82282432548825*^9, 3.822824327819418*^9}, 
   3.825287778263926*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"a902b79b-66aa-4952-a8bf-ca5914b40f25"]
}, Closed]],

Cell[CellGroupData[{

Cell["Custom Notation", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.8225114042235403`*^9, 3.822511435665856*^9}, 
   3.823176577809782*^9, 
   3.825287791153748*^9},ExpressionUUID->"3c488378-6de5-4fd7-b683-\
1e486614f022"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "dtReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dtReplace", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Dt", "[", "r", "]"}], "\[Rule]", " ", "dr"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "t", "]"}], "\[Rule]", " ", "dt"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "u", "]"}], "\[Rule]", " ", "du"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "v", "]"}], "\[Rule]", " ", "dv"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "x", "]"}], "\[Rule]", " ", "dx"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "y", "]"}], " ", "\[Rule]", " ", "dy"}], " ", ",", 
     " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "z", "]"}], "\[Rule]", " ", "dz"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Mu]", "]"}], "->", " ", "d\[Mu]"}], " ", ",", " ",
      "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Theta]", "]"}], " ", "\[Rule]", " ", 
      "d\[Theta]"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Phi]", "]"}], " ", "\[Rule]", " ", "d\[Phi]"}], 
     "  ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Eta]", "]"}], " ", "\[Rule]", " ", "d\[Eta]"}], 
     "  ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Chi]", "]"}], "\[Rule]", " ", "d\[Chi]"}], " ", 
     ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Rho]", "]"}], " ", "\[Rule]", " ", "d\[Rho]"}], 
     " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[CurlyRho]", "]"}], "\[Rule]", " ", 
      "d\[CurlyRho]"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[CurlyPhi]", "]"}], " ", "\[Rule]", " ", 
      "d\[CurlyPhi]"}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Xi]", "]"}], "\[Rule]", " ", "d\[Xi]"}], " ", ",",
      "  ", "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptT]", "]"}], " ", "\[Rule]", " ", 
      "d\[ScriptT]"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptZ]", "]"}], " ", "\[Rule]", " ", 
      "d\[ScriptZ]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "T", "]"}], "\[Rule]", " ", "dT"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "X", "]"}], "\[Rule]", " ", "dX"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "Y", "]"}], "\[Rule]", " ", "dY"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "Z", "]"}], "\[Rule]", " ", "dZ"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "U", "]"}], "\[Rule]", " ", "dU"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "V", "]"}], "\[Rule]", " ", "dV"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptR]", "]"}], "\[Rule]", " ", "d\[ScriptR]"}],
      "  ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[CapitalPhi]", "]"}], "\[Rule]", " ", 
      "d\[CapitalPhi]"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"dtReplace", " ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.82317656063256*^9, 3.823176577809904*^9}, {
   3.823598236175474*^9, 3.823598253654046*^9}, {3.823598849383689*^9, 
   3.82359891091936*^9}, {3.8236913141384983`*^9, 3.823691322585009*^9}, {
   3.8237047861092253`*^9, 3.823704790612156*^9}, 3.825287791153907*^9, {
   3.852249673059022*^9, 3.852249677130229*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"a7dce08d-0bd0-4a2c-973e-431261a560f3"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"Dt", "[", "r", "]"}], "\[Rule]", "dr"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "t", "]"}], "\[Rule]", "dt"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "u", "]"}], "\[Rule]", "du"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "v", "]"}], "\[Rule]", "dv"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "x", "]"}], "\[Rule]", "dx"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "y", "]"}], "\[Rule]", "dy"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "z", "]"}], "\[Rule]", "dz"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Mu]", "]"}], "\[Rule]", "d\[Mu]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Theta]", "]"}], "\[Rule]", "d\[Theta]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Phi]", "]"}], "\[Rule]", "d\[Phi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Eta]", "]"}], "\[Rule]", "d\[Eta]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Chi]", "]"}], "\[Rule]", "d\[Chi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Rho]", "]"}], "\[Rule]", "d\[Rho]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[CurlyRho]", "]"}], "\[Rule]", "d\[CurlyRho]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[CurlyPhi]", "]"}], "\[Rule]", "d\[CurlyPhi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Xi]", "]"}], "\[Rule]", "d\[Xi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptT]", "]"}], "\[Rule]", "d\[ScriptT]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptZ]", "]"}], "\[Rule]", "d\[ScriptZ]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "T", "]"}], "\[Rule]", "dT"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "X", "]"}], "\[Rule]", "dX"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "Y", "]"}], "\[Rule]", "dY"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "Z", "]"}], "\[Rule]", "dZ"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "U", "]"}], "\[Rule]", "dU"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "V", "]"}], "\[Rule]", "dV"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptR]", "]"}], "\[Rule]", "d\[ScriptR]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[CapitalPhi]", "]"}], "\[Rule]", 
       "d\[CapitalPhi]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{3.823598254375844*^9, 3.823598877146447*^9, 
  3.823598911379983*^9, 3.823618495599228*^9, 3.823683414107848*^9, 
  3.823683842051852*^9, 3.823684775483016*^9, 3.82368879462633*^9, 
  3.823690777330206*^9, 3.823691323069952*^9, 3.823704572638439*^9, 
  3.823704791783836*^9, 3.823967036322558*^9, 3.8239675180766773`*^9, 
  3.823970038900818*^9, 3.824025682372151*^9, 3.8252877911540327`*^9, 
  3.825843522413425*^9, 3.825875356265313*^9, 3.825877049929414*^9, 
  3.827924950581037*^9, 3.851860609739396*^9, 3.852131503079575*^9, 
  3.8521429749831667`*^9, 3.852143198772703*^9, 3.8521432854459867`*^9, 
  3.852143551997694*^9, 3.8521529540928907`*^9, 3.852154594215827*^9, 
  3.852155364447318*^9, 3.852215581272283*^9, 3.852246712067449*^9, 
  3.852249677604395*^9, 3.85230581395196*^9, 3.852311849236208*^9},
 CellLabel->
  "Out[6]//TableForm=",ExpressionUUID->"2b1860bf-739b-41a7-b45c-c7095f12085f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Transformations", " ", "Wang", " ", "page", " ", "67", " ", "equation", 
    " ", "3.39"}], " ", "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"m", "/:", 
     RowBox[{"Dt", "[", "m", "]"}], "=", "0"}], "  ", ";"}], "  ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n", " ", "/:", " ", 
     RowBox[{"Dt", "[", "n", "]"}], " ", "=", " ", "0"}], " ", ";"}], 
   "  "}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.823598195430221*^9, 3.823598210501268*^9}, {
   3.823602495092556*^9, 3.823602530987715*^9}, {3.8236188964036007`*^9, 
   3.8236189207008657`*^9}, {3.8237047330364532`*^9, 3.823704739867001*^9}, 
   3.825287791154132*^9, {3.852247022889236*^9, 3.852247049904544*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"d41f2868-563c-4b68-a761-dd6d80614b9c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Line Element and Metric Functions", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.820937548919169*^9, 3.8209375728447866`*^9}, 
   3.8209383129401073`*^9, 3.8220481344968433`*^9, {3.8225115057038183`*^9, 
   3.822511507783984*^9}, 
   3.822763734568725*^9},ExpressionUUID->"345e9b99-bb4b-41c9-a98e-\
2ccc62e3954a"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "lineToMetric", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lineToMetric", "[", 
    RowBox[{"lineelement_", " ", ",", " ", "differentials_"}], "]"}], ":=", 
   " ", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"i", "\[Equal]", "j"}], " ", ",", 
       RowBox[{"Coefficient", "[", 
        RowBox[{"lineelement", ",", " ", 
         RowBox[{
          RowBox[{"differentials", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", 
          RowBox[{"differentials", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}], "*", 
        RowBox[{"Coefficient", "[", 
         RowBox[{"lineelement", ",", " ", 
          RowBox[{
           RowBox[{"differentials", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", 
           RowBox[{"differentials", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}]}], "]"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "differentials", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "differentials", "]"}]}], "}"}]}], "]"}]}], 
  "  ", ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{3.821567412203915*^9, 3.821641945174967*^9, 
  3.821641981470141*^9, 3.8220481344970007`*^9, 3.822763734569355*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"97b7e9c8-6d9c-42e6-bba0-d0940c96dd8c"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "metricToLine", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metricToLine", "[", 
   RowBox[{"metric_", ",", " ", "differentials_"}], "]"}], ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"metric", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "j"}], "]"}], "]"}], " ", 
     RowBox[{"differentials", "[", 
      RowBox[{"[", "i", "]"}], "]"}], " ", 
     RowBox[{"differentials", "[", 
      RowBox[{"[", "j", "]"}], "]"}]}], " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "differentials", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", 
      RowBox[{"Length", "[", "differentials", "]"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.822762557092309*^9, 3.8227626322008677`*^9}, 
   3.8227637345698223`*^9, 3.822988709740047*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"da4f5750-3b14-4e36-85cc-98458a0609c8"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Line Element and Metric 17:  Einstein Rosen Cylindrical Gravitational Waves\
\>", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.852305782176017*^9, 
  3.852305804951756*^9}},ExpressionUUID->"e335b8f1-ef8b-4d2d-9841-\
07eaa79fa21c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Not", " ", "numbered", " ", "in", " ", "text"}], " ", "*)"}], " ",
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "eq17a", "]"}], "\[IndentingNewLine]", 
   RowBox[{"eq17a", " ", "=", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"2", "\[Gamma]"}], "-", 
        RowBox[{"2", "\[Psi]"}]}], "]"}], 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["dt", "2"], "-", 
        SuperscriptBox["d\[Rho]", "2"]}], ")"}]}], " ", "-", " ", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"2", "\[Psi]"}], "]"}], 
      SuperscriptBox["dz", "2"]}], " ", "-", 
     RowBox[{
      SuperscriptBox["\[Rho]", "2"], 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "2"}], "\[Psi]"}], "]"}], 
      SuperscriptBox["d\[Phi]", "2"], " "}]}]}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.852305525297893*^9, 3.852305591959611*^9}, 
   3.8523057884348516`*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"be0492bb-cd61-48b6-bef7-721f44301180"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["dt", "2"], "-", 
     SuperscriptBox["d\[Rho]", "2"]}], ")"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"2", " ", "\[Gamma]"}], "-", 
     RowBox[{"2", " ", "\[Psi]"}]}]]}], "-", 
  RowBox[{
   SuperscriptBox["dz", "2"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", "\[Psi]"}]]}], "-", 
  RowBox[{
   SuperscriptBox["d\[Phi]", "2"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", "\[Psi]"}]], " ", 
   SuperscriptBox["\[Rho]", "2"]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{
  3.852305593379689*^9, {3.852305788435217*^9, 3.8523058140198517`*^9}, 
   3.852311849304928*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"ca390fc9-fe24-4865-a209-b0647dfab7c4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lineToMetric", "[", " ", 
   RowBox[{"eq17a", ",", " ", 
    RowBox[{"{", 
     RowBox[{"dt", ",", "d\[Rho]", ",", "d\[Phi]", ",", "dz"}], "}"}]}], 
   "]"}], " ", "//", " ", "MatrixForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.852305595296793*^9, 3.852305614352388*^9}, 
   3.8523057884353943`*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"b76f659f-cec8-4a82-b18c-87784855d17f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"2", " ", "\[Gamma]"}], "-", 
        RowBox[{"2", " ", "\[Psi]"}]}]], "0", "0", "0"},
     {"0", 
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"2", " ", "\[Gamma]"}], "-", 
         RowBox[{"2", " ", "\[Psi]"}]}]]}], "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Psi]"}]]}], " ", 
       SuperscriptBox["\[Rho]", "2"]}], "0"},
     {"0", "0", "0", 
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "\[Psi]"}]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{
  3.8523056148625298`*^9, {3.852305788435685*^9, 3.852305814034687*^9}, 
   3.852311849322296*^9},
 CellLabel->
  "Out[15]//MatrixForm=",ExpressionUUID->"05abd8fe-cfb5-4277-8227-\
5c21249d2432"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Not", " ", "numbered", " ", "in", " ", "text"}], " ", "*)"}], " ",
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "eq17b", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eq17b", " ", "=", "  ", 
     RowBox[{"{", " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Gamma]", "->", " ", 
        RowBox[{"\[Gamma]", "[", 
         RowBox[{"t", ",", "\[Rho]"}], "]"}]}], " ", ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Psi]", "->", " ", 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"t", ",", "\[Rho]"}], "]"}]}]}], "\[IndentingNewLine]", 
      "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{"eq17b", " ", "//", " ", "TableForm"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.852305624896345*^9, 3.852305671016521*^9}, 
   3.8523057884359083`*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"dc4f4b21-5569-418a-ba99-3f207ba63393"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"\[Gamma]", "\[Rule]", 
       RowBox[{"\[Gamma]", "[", 
        RowBox[{"t", ",", "\[Rho]"}], "]"}]}]},
     {
      RowBox[{"\[Psi]", "\[Rule]", 
       RowBox[{"\[Psi]", "[", 
        RowBox[{"t", ",", "\[Rho]"}], "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.852305665383329*^9, 3.852305671874914*^9}, {
   3.852305788436153*^9, 3.852305814069003*^9}, 3.852311849357576*^9},
 CellLabel->
  "Out[18]//TableForm=",ExpressionUUID->"759e7f61-b4f4-4c73-99a4-\
fd8b1873f8d6"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric17", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric17", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lineToMetric", "[", " ", 
     RowBox[{"eq17a", ",", " ", 
      RowBox[{"{", 
       RowBox[{"dt", ",", "d\[Rho]", ",", "d\[Phi]", ",", "dz"}], "}"}]}], 
     "]"}], " ", "/.", 
    RowBox[{"(", "  ", 
     RowBox[{"eq17b", "  ", "/.", " ", 
      RowBox[{"Equal", "->", " ", "Rule"}]}], " ", ")"}]}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric17", " ", "//", " ", "MatrixForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.852305682456382*^9, 3.852305711009294*^9}, 
   3.8523057884363537`*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"a854b025-b137-40b3-bad1-08c6567bc112"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"t", ",", "\[Rho]"}], ")"}]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"t", ",", "\[Rho]"}], ")"}]}]}]], "0", "0", "0"},
      {"0", 
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}]}]]}], "0", "0"},
      {"0", "0", 
       RowBox[{
        SuperscriptBox["\[Rho]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"t", ",", "\[Rho]"}], ")"}]}]]}], ")"}]}], "0"},
      {"0", "0", "0", 
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"t", ",", "\[Rho]"}], ")"}]}]]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.852305694403199*^9, 3.852305711539193*^9}, {
   3.852305788436758*^9, 3.8523058141155148`*^9}, 3.8523118493978252`*^9},
 CellLabel->
  "Out[21]//TraditionalForm=",ExpressionUUID->"a6da330f-be7c-4138-a1c0-\
c5df6936c58c"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Tensors Calculated For Metric 17:  Einstein Rosen Cylindrical Gravitational \
Waves\
\>", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.82753103002352*^9, 3.827531052415834*^9}, {
  3.8523057407117968`*^9, 3.852305741407835*^9}, {3.852306206575652*^9, 
  3.852306213541214*^9}},ExpressionUUID->"f30dc98b-9ab0-4658-9de8-\
9fba9ccda8a5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "input", "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"input", "[", 
    RowBox[{
    "equationNumber_", ",", "equation_", ",", "metricName_", ",", 
     "displayName_", ",", "variables_", ",", "indices_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", "tensorList", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"tensorList", " ", "=", " ", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<g\>\"", "<>", "equationNumber"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<christoffel\>\"", "<>", "equationNumber"}], " ", ",", 
         " ", "\[IndentingNewLine]", 
         RowBox[{"\"\<riemann\>\"", "<>", "equationNumber"}], "  ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<ricci\>\"", "<>", "equationNumber"}], " ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<ricciscalar\>\"", "<>", "equationNumber"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<kretschmannscalar\>\"", "<>", "equationNumber"}], "  ", 
         ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<einstein\>\"", "<>", "equationNumber"}], "  ", ",", " ",
          "\[IndentingNewLine]", 
         RowBox[{"\"\<weyl\>\"", "<>", "equationNumber"}], "  ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<cotton\>\"", "<>", "equationNumber"}]}], "  ", 
        "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"ToMetric", "[", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{"metricName", ",", " ", "displayName"}], " ", "}"}], " ", 
         ",", " ", "variables", ",", " ", "equation", ",", " ", "indices"}], 
        " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "  ", "=", " ", "\[IndentingNewLine]", 
       RowBox[{"ChristoffelSymbol", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], "]"}]}], " ", ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "3", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"RiemannTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWithNested", "\[Rule]", " ", "Simplify"}]}], " ", 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "4", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"RicciTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}]}], " ",
       ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "5", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"RicciScalar", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}]}], " ",
       ";", "\[IndentingNewLine]", " ", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "6", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"KretschmannScalar", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], "]"}]}], " ", ";",
       " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "7", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"EinsteinTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], "]"}]}], " ", ";",
       "  ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "8", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"WeylTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}]}], " ",
       ";"}]}], "\[IndentingNewLine]", 
    RowBox[{"(*", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "9", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"CottonTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}]}], " ",
       ";"}], " ", "*)"}], " ", "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820937492203251*^9, 3.821110229350912*^9, {3.824381686137444*^9, 
   3.824381701791286*^9}, {3.824382212611581*^9, 3.824382216339905*^9}, {
   3.8243823186862707`*^9, 3.824382322501081*^9}, {3.8275309635868196`*^9, 
   3.827530965633152*^9}, 3.827531041137661*^9, {3.852305771348864*^9, 
   3.8523057746990147`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"f488e52b-d48b-4ca3-b288-6c75a72478aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Last", " ", "timing", " ", "took", " ", "3.58", " ", "for", " ", "all", 
    " ", "tensors", " ", "except", "  ", "Cotton"}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"input", "[", " ", 
    RowBox[{
    "\"\<metric17\>\"", ",", " ", "metric17", ",", " ", 
     "\"\<EinsteinRosen\>\"", ",", 
     "\"\<\!\(\*SuperscriptBox[\(g\), \(er\)]\)\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "\[Rho]", ",", "\[Phi]", ",", "z"}], "}"}], ",", " ", 
     "\"\<Greek\>\""}], "]"}], " ", "//", " ", "Timing"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820937492203436*^9, 3.821110229350998*^9, {3.822307281934704*^9, 
   3.822307303605431*^9}, {3.8243818575378323`*^9, 3.82438186818433*^9}, {
   3.824513580589107*^9, 3.824513589908223*^9}, {3.827530980865696*^9, 
   3.827531060072402*^9}, {3.852305745851985*^9, 3.852305768432556*^9}, {
   3.852305832785726*^9, 3.852305841681376*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"48101f44-742e-4a62-b306-52c71e49e1c8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.348262`", ",", "Null"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.827531030651795*^9, 3.8275310411379538`*^9}, 
   3.827923267025786*^9, 3.843834761394718*^9, 3.843947230419145*^9, 
   3.8523058177676983`*^9, 3.852311852741253*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"402ae0ba-ac6c-4792-a435-784afdfa41f7"],

Cell[BoxData["tensorList"], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.8275310153844624`*^9, 3.827531041138036*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"99be7691-3f79-4cb4-baf2-59f36149f505"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    SubsuperscriptBox[
     SuperscriptBox["g", "er"], "\[Alpha]\[Beta]", ""],
    DisplayForm], ",", 
   TagBox[
    SubsuperscriptBox["\[CapitalGamma]", 
     RowBox[{"  ", "\[Beta]\[Gamma]"}], 
     RowBox[{"\[Alpha]", "    "}]],
    DisplayForm], ",", 
   TagBox[
    SubsuperscriptBox["R", "\[Alpha]\[Beta]\[Gamma]\[Delta]", ""],
    DisplayForm], ",", 
   TagBox[
    SubsuperscriptBox["R", "\[Beta]\[Gamma]", ""],
    DisplayForm], ",", 
   TagBox["\<\"R\"\>",
    DisplayForm], ",", 
   TagBox["\<\"K\"\>",
    DisplayForm], ",", 
   TagBox[
    SubsuperscriptBox["G", "\[Alpha]\[Beta]", ""],
    DisplayForm], ",", 
   TagBox[
    SubsuperscriptBox["C", "\[Alpha]\[Beta]\[Gamma]\[Delta]", ""],
    DisplayForm], ",", "\<\"cottonmetric17\"\>"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.82753106614108*^9, 3.8275321257370567`*^9, 
  3.827923267136018*^9, 3.8438347614581127`*^9, 3.843947230470193*^9, 
  3.852305817925479*^9, 3.8523118529072638`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"8aaf2ced-9b45-4708-8ae0-c029ae6e0f01"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "1", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.82093459847665*^9, 3.820934601699522*^9}, 
   3.8209374922041063`*^9, 3.821110229351385*^9, 3.824373536864387*^9, 
   3.824381939541588*^9, 3.824751170474918*^9, 3.827531041138124*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"a0a8f15a-ade9-4a84-bb2a-7a0b92759a7e"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox[
   SuperscriptBox["g", "er"], "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934602303184*^9, 3.820937492204216*^9, 3.821110229351462*^9, 
   3.824373536864538*^9, 3.824381620924634*^9, 3.8243818501805983`*^9, 
   3.824381939541747*^9, 3.824511842173975*^9, 3.824514167840876*^9, 
   3.8247511704751453`*^9, {3.8275310411382227`*^9, 3.827531066196312*^9}, 
   3.827923267150333*^9, 3.843834761487138*^9, 3.843947230489871*^9, 
   3.852305817939487*^9, 3.852311852919394*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"a9f52743-66e4-47f8-9f0b-e141aaee3846"],

Cell[BoxData["\<\"EinsteinRosen\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934602303184*^9, 3.820937492204216*^9, 3.821110229351462*^9, 
   3.824373536864538*^9, 3.824381620924634*^9, 3.8243818501805983`*^9, 
   3.824381939541747*^9, 3.824511842173975*^9, 3.824514167840876*^9, 
   3.8247511704751453`*^9, {3.8275310411382227`*^9, 3.827531066196312*^9}, 
   3.827923267150333*^9, 3.843834761487138*^9, 3.843947230489871*^9, 
   3.852305817939487*^9, 3.852311852925473*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"bfb93776-8d3d-4b6d-9619-cf920c595ac8"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"t", ",", "\[Rho]"}], ")"}]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"t", ",", "\[Rho]"}], ")"}]}]}]], "0", "0", "0"},
      {"0", 
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}]}]]}], "0", "0"},
      {"0", "0", 
       RowBox[{
        SuperscriptBox["\[Rho]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"t", ",", "\[Rho]"}], ")"}]}]]}], ")"}]}], "0"},
      {"0", "0", "0", 
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"t", ",", "\[Rho]"}], ")"}]}]]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934602303184*^9, 3.820937492204216*^9, 3.821110229351462*^9, 
   3.824373536864538*^9, 3.824381620924634*^9, 3.8243818501805983`*^9, 
   3.824381939541747*^9, 3.824511842173975*^9, 3.824514167840876*^9, 
   3.8247511704751453`*^9, {3.8275310411382227`*^9, 3.827531066196312*^9}, 
   3.827923267150333*^9, 3.843834761487138*^9, 3.843947230489871*^9, 
   3.852305817939487*^9, 3.852311852953525*^9},
 CellLabel->
  "Out[28]//TraditionalForm=",ExpressionUUID->"5e8e0d66-f1d2-4fdf-958d-\
9302ddb9c999"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "2", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.820934553796588*^9, 3.820934587380786*^9}, 
   3.8209374922046547`*^9, 3.821110229351994*^9, 3.824373536864839*^9, 
   3.824381939542098*^9, 3.8247511704755993`*^9, 3.827531041138465*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"8d4c368e-7b2e-44df-90ec-5dbc0b6120e6"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["\[CapitalGamma]", 
   RowBox[{"  ", "\[Beta]\[Gamma]"}], 
   RowBox[{"\[Alpha]", "    "}]],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820932775595148*^9, 3.8209334480804567`*^9, {3.8209345574198027`*^9, 
   3.820934588189248*^9}, 3.82093749220476*^9, 3.821110229352072*^9, 
   3.824373536864976*^9, 3.8243816209856853`*^9, 3.824381850238319*^9, 
   3.8243819395421953`*^9, 3.8245118422163897`*^9, 3.8245141678935013`*^9, 
   3.82475117047574*^9, {3.827531041138555*^9, 3.827531066250152*^9}, 
   3.82792326719608*^9, 3.843834761566759*^9, 3.843947230564633*^9, 
   3.852305817983101*^9, 3.8523118529650383`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"1d9b2a0a-03b0-4f2a-8b67-c1176d95c36e"],

Cell[BoxData["\<\"ChristoffelSymbolEinsteinRosen\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820932775595148*^9, 3.8209334480804567`*^9, {3.8209345574198027`*^9, 
   3.820934588189248*^9}, 3.82093749220476*^9, 3.821110229352072*^9, 
   3.824373536864976*^9, 3.8243816209856853`*^9, 3.824381850238319*^9, 
   3.8243819395421953`*^9, 3.8245118422163897`*^9, 3.8245141678935013`*^9, 
   3.82475117047574*^9, {3.827531041138555*^9, 3.827531066250152*^9}, 
   3.82792326719608*^9, 3.843834761566759*^9, 3.843947230564633*^9, 
   3.852305817983101*^9, 3.852311852970427*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"43efbd9c-9f02-48e2-a56c-57a0ce7df958"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
              RowBox[{"\[PartialD]", "t"}],
              MultilineFunction->None], "-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
              RowBox[{"\[PartialD]", "t"}],
              MultilineFunction->None]}]},
           {
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
              RowBox[{"\[PartialD]", "\[Rho]"}],
              MultilineFunction->None], "-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
              RowBox[{"\[PartialD]", "\[Rho]"}],
              MultilineFunction->None]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
              RowBox[{"\[PartialD]", "\[Rho]"}],
              MultilineFunction->None], "-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
              RowBox[{"\[PartialD]", "\[Rho]"}],
              MultilineFunction->None]}]},
           {
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
              RowBox[{"\[PartialD]", "t"}],
              MultilineFunction->None], "-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
              RowBox[{"\[PartialD]", "t"}],
              MultilineFunction->None]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{
             SuperscriptBox["\[Rho]", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"-", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "2"}], " ", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}]]}], ")"}], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
              RowBox[{"\[PartialD]", "t"}],
              MultilineFunction->None]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"4", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}]}]], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
              RowBox[{"\[PartialD]", "t"}],
              MultilineFunction->None]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
              RowBox[{"\[PartialD]", "\[Rho]"}],
              MultilineFunction->None], "-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
              RowBox[{"\[PartialD]", "\[Rho]"}],
              MultilineFunction->None]}]},
           {
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
              RowBox[{"\[PartialD]", "t"}],
              MultilineFunction->None], "-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
              RowBox[{"\[PartialD]", "t"}],
              MultilineFunction->None]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
              RowBox[{"\[PartialD]", "t"}],
              MultilineFunction->None], "-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
              RowBox[{"\[PartialD]", "t"}],
              MultilineFunction->None]}]},
           {
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
              RowBox[{"\[PartialD]", "\[Rho]"}],
              MultilineFunction->None], "-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
              RowBox[{"\[PartialD]", "\[Rho]"}],
              MultilineFunction->None]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{"\[Rho]", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Rho]", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "\[Rho]"}],
                 MultilineFunction->None]}], "-", "1"}], ")"}]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"4", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}]}]]}], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
              RowBox[{"\[PartialD]", "\[Rho]"}],
              MultilineFunction->None]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
              RowBox[{"\[PartialD]", "t"}],
              MultilineFunction->None]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{
             FractionBox["1", "\[Rho]"], "-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
              RowBox[{"\[PartialD]", "\[Rho]"}],
              MultilineFunction->None]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
              RowBox[{"\[PartialD]", "t"}],
              MultilineFunction->None]}]},
           {
            RowBox[{
             FractionBox["1", "\[Rho]"], "-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
              RowBox[{"\[PartialD]", "\[Rho]"}],
              MultilineFunction->None]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "t"}],
             MultilineFunction->None]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "\[Rho]"}],
             MultilineFunction->None]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "t"}],
             MultilineFunction->None]},
           {
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "\[Rho]"}],
             MultilineFunction->None]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820932775595148*^9, 3.8209334480804567`*^9, {3.8209345574198027`*^9, 
   3.820934588189248*^9}, 3.82093749220476*^9, 3.821110229352072*^9, 
   3.824373536864976*^9, 3.8243816209856853`*^9, 3.824381850238319*^9, 
   3.8243819395421953`*^9, 3.8245118422163897`*^9, 3.8245141678935013`*^9, 
   3.82475117047574*^9, {3.827531041138555*^9, 3.827531066250152*^9}, 
   3.82792326719608*^9, 3.843834761566759*^9, 3.843947230564633*^9, 
   3.852305817983101*^9, 3.852311853028708*^9},
 CellLabel->
  "Out[31]//TraditionalForm=",ExpressionUUID->"8a01c27a-af35-4ccf-aafd-\
ed23a42a3f4c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "3", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.82093461950063*^9, 3.820934623299252*^9}, 
   3.820937492205227*^9, 3.821110229352274*^9, 3.8243735368652897`*^9, 
   3.824381939542493*^9, 3.824751170476118*^9, 3.82753104113878*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"a375654a-754e-4fad-8e0e-870af999ee68"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["R", "\[Alpha]\[Beta]\[Gamma]\[Delta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934623837241*^9, 3.820937492205323*^9, 3.821110229352366*^9, 
   3.824373536865405*^9, 3.824381621264045*^9, 3.824381850457645*^9, 
   3.824381939542604*^9, 3.8245118424513693`*^9, 3.8245141681144238`*^9, 
   3.8247511704762497`*^9, {3.8275310411388607`*^9, 3.827531066525813*^9}, 
   3.827923267444069*^9, 3.843834762103753*^9, 3.843947230775958*^9, 
   3.852305818077752*^9, 3.852311853088848*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"04dcd0db-63e5-4f7a-95dc-fa3753beff25"],

Cell[BoxData["\<\"RiemannTensorEinsteinRosen\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934623837241*^9, 3.820937492205323*^9, 3.821110229352366*^9, 
   3.824373536865405*^9, 3.824381621264045*^9, 3.824381850457645*^9, 
   3.824381939542604*^9, 3.8245118424513693`*^9, 3.8245141681144238`*^9, 
   3.8247511704762497`*^9, {3.8275310411388607`*^9, 3.827531066525813*^9}, 
   3.827923267444069*^9, 3.843834762103753*^9, 3.843947230775958*^9, 
   3.852305818077752*^9, 3.8523118530946074`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"a8acdbf4-7cb8-459b-b710-30dbfc2f8cac"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["t", "2"]}],
               MultilineFunction->None], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["t", "2"]}],
               MultilineFunction->None], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["\[Rho]", "2"]}],
               MultilineFunction->None], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["\[Rho]", "2"]}],
               MultilineFunction->None]}], ")"}]}], "0", "0"},
          {
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}]}]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["t", "2"]}],
               MultilineFunction->None], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["t", "2"]}],
               MultilineFunction->None], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["\[Rho]", "2"]}],
               MultilineFunction->None], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["\[Rho]", "2"]}],
               MultilineFunction->None]}], ")"}]}], "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{"\[Rho]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"\[Rho]", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["t", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{"\[Rho]", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Rho]", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "-", 
              RowBox[{"\[Rho]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "\[Rho]"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", "\[Rho]"}],
               MultilineFunction->None]}], ")"}]}], "0"},
          {"0", "0", 
           RowBox[{"\[Rho]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "\[Rho]"}]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Rho]", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}]}], ")"}]}],
            "0"},
          {
           RowBox[{"\[Rho]", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"\[Rho]", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["t", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{"\[Rho]", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Rho]", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "-", 
              RowBox[{"\[Rho]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "\[Rho]"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", "\[Rho]"}],
               MultilineFunction->None]}], ")"}]}], 
           RowBox[{"\[Rho]", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "\[Rho]"}]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Rho]", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}]}], ")"}]}],
            "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["t", "2"]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "t"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "\[Rho]"}],
                 MultilineFunction->None], ")"}], "2"]}], ")"}]}]},
          {"0", "0", "0", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{
                RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
                RowBox[{"\[PartialD]", "\[Rho]"}]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "t"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}]},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["t", "2"]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "t"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "\[Rho]"}],
                 MultilineFunction->None], ")"}], "2"]}], ")"}]}], 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{
                RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
                RowBox[{"\[PartialD]", "\[Rho]"}]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "t"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], "0", 
           "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}]}]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["t", "2"]}],
               MultilineFunction->None], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["t", "2"]}],
               MultilineFunction->None], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["\[Rho]", "2"]}],
               MultilineFunction->None], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["\[Rho]", "2"]}],
               MultilineFunction->None]}], ")"}]}], "0", "0"},
          {
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["t", "2"]}],
               MultilineFunction->None], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["t", "2"]}],
               MultilineFunction->None], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["\[Rho]", "2"]}],
               MultilineFunction->None], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["\[Rho]", "2"]}],
               MultilineFunction->None]}], ")"}]}], "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{"\[Rho]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "\[Rho]"}]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Rho]", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}]}], ")"}]}],
            "0"},
          {"0", "0", 
           RowBox[{"\[Rho]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"\[Rho]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None]}]}], "+", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                   MultilineFunction->None], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], ")"}], "2"]}], ")"}]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Rho]", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "-", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", "\[Rho]"}],
               MultilineFunction->None]}], ")"}]}], "0"},
          {
           RowBox[{"\[Rho]", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "\[Rho]"}]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Rho]", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}]}], ")"}]}], 
           RowBox[{"\[Rho]", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"\[Rho]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None]}]}], "+", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                   MultilineFunction->None], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], ")"}], "2"]}], ")"}]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Rho]", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "-", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", "\[Rho]"}],
               MultilineFunction->None]}], ")"}]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{
                RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
                RowBox[{"\[PartialD]", "\[Rho]"}]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "t"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}]},
          {"0", "0", "0", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "t"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "t"}],
                 MultilineFunction->None]}]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None]}], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["\[Rho]", "2"]}],
               MultilineFunction->None], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "t"}],
                 MultilineFunction->None], ")"}], "2"], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "\[Rho]"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{
                RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
                RowBox[{"\[PartialD]", "\[Rho]"}]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "t"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "t"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "t"}],
                 MultilineFunction->None]}]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None]}], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["\[Rho]", "2"]}],
               MultilineFunction->None], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "t"}],
                 MultilineFunction->None], ")"}], "2"], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "\[Rho]"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{"\[Rho]", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"\[Rho]", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["t", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{"\[Rho]", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Rho]", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "-", 
              RowBox[{"\[Rho]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "\[Rho]"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", "\[Rho]"}],
               MultilineFunction->None]}], ")"}]}], "0"},
          {"0", "0", 
           RowBox[{"\[Rho]", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "\[Rho]"}]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Rho]", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}]}], ")"}]}],
            "0"},
          {
           RowBox[{"\[Rho]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"\[Rho]", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["t", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{"\[Rho]", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Rho]", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "-", 
              RowBox[{"\[Rho]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "\[Rho]"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", "\[Rho]"}],
               MultilineFunction->None]}], ")"}]}], 
           RowBox[{"\[Rho]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "\[Rho]"}]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Rho]", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}]}], ")"}]}],
            "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{"\[Rho]", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "\[Rho]"}]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Rho]", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}]}], ")"}]}],
            "0"},
          {"0", "0", 
           RowBox[{"\[Rho]", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"\[Rho]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None]}]}], "+", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                   MultilineFunction->None], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], ")"}], "2"]}], ")"}]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Rho]", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "-", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", "\[Rho]"}],
               MultilineFunction->None]}], ")"}]}], "0"},
          {
           RowBox[{"\[Rho]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "\[Rho]"}]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Rho]", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}]}], ")"}]}], 
           RowBox[{"\[Rho]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"\[Rho]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None]}]}], "+", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                   MultilineFunction->None], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], ")"}], "2"]}], ")"}]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Rho]", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "-", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", "\[Rho]"}],
               MultilineFunction->None]}], ")"}]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{"\[Rho]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "t"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"\[Rho]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "\[Rho]"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", "\[Rho]"}],
               MultilineFunction->None]}], ")"}]}]},
          {"0", "0", 
           RowBox[{"\[Rho]", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "t"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"\[Rho]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "\[Rho]"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", "\[Rho]"}],
               MultilineFunction->None]}], ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["t", "2"]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "t"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "\[Rho]"}],
                 MultilineFunction->None], ")"}], "2"]}], ")"}]}]},
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{
                RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
                RowBox[{"\[PartialD]", "\[Rho]"}]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "t"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}]},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["t", "2"]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "t"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "\[Rho]"}],
                 MultilineFunction->None], ")"}], "2"]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{
                RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
                RowBox[{"\[PartialD]", "\[Rho]"}]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "t"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], "0", 
           "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{
                RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
                RowBox[{"\[PartialD]", "\[Rho]"}]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "t"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}]},
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}]]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "t"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "t"}],
                 MultilineFunction->None]}]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None]}], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["\[Rho]", "2"]}],
               MultilineFunction->None], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "t"}],
                 MultilineFunction->None], ")"}], "2"], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "\[Rho]"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{
                RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
                RowBox[{"\[PartialD]", "\[Rho]"}]}],
               MultilineFunction->None], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "t"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "t"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "t"}],
                 MultilineFunction->None]}]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None]}], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["\[Rho]", "2"]}],
               MultilineFunction->None], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "t"}],
                 MultilineFunction->None], ")"}], "2"], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "\[Rho]"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{"\[Rho]", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "t"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"\[Rho]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "\[Rho]"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", "\[Rho]"}],
               MultilineFunction->None]}], ")"}]}]},
          {"0", "0", 
           RowBox[{"\[Rho]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "t"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"\[Rho]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "\[Rho]"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", "\[Rho]"}],
               MultilineFunction->None]}], ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934623837241*^9, 3.820937492205323*^9, 3.821110229352366*^9, 
   3.824373536865405*^9, 3.824381621264045*^9, 3.824381850457645*^9, 
   3.824381939542604*^9, 3.8245118424513693`*^9, 3.8245141681144238`*^9, 
   3.8247511704762497`*^9, {3.8275310411388607`*^9, 3.827531066525813*^9}, 
   3.827923267444069*^9, 3.843834762103753*^9, 3.843947230775958*^9, 
   3.852305818077752*^9, 3.852311853702664*^9},
 CellLabel->
  "Out[34]//TraditionalForm=",ExpressionUUID->"2e2f6498-24b9-4ac7-8607-\
9693082d396e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "4", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "4", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.820934641180434*^9, 3.820934644683545*^9}, 
   3.820937492205658*^9, 3.821110229352577*^9, 3.8243735368657513`*^9, 
   3.8243819395429*^9, 3.82475117047663*^9, 3.827531041139097*^9},
 CellLabel->"In[35]:=",ExpressionUUID->"4c31931b-144c-4240-aec5-f01ac6a8417b"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["R", "\[Beta]\[Gamma]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934645395719*^9, 3.8209374922057543`*^9, 3.82111022935266*^9, 
   3.8243735368658533`*^9, 3.824381626124463*^9, 3.824381854371036*^9, 
   3.824381939543002*^9, 3.824511846625956*^9, 3.8245141719213133`*^9, 
   3.824751170476756*^9, {3.8275310411391783`*^9, 3.8275310710006037`*^9}, 
   3.827923271547653*^9, 3.843834766494377*^9, 3.843947234918741*^9, 
   3.8523058188773727`*^9, 3.8523118537484703`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"97be175c-6728-403e-8582-e206efac28a1"],

Cell[BoxData["\<\"RicciTensorEinsteinRosen\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934645395719*^9, 3.8209374922057543`*^9, 3.82111022935266*^9, 
   3.8243735368658533`*^9, 3.824381626124463*^9, 3.824381854371036*^9, 
   3.824381939543002*^9, 3.824511846625956*^9, 3.8245141719213133`*^9, 
   3.824751170476756*^9, {3.8275310411391783`*^9, 3.8275310710006037`*^9}, 
   3.827923271547653*^9, 3.843834766494377*^9, 3.843947234918741*^9, 
   3.8523058188773727`*^9, 3.852311853754225*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"16d60b78-cbda-46d9-a59c-60c0058cab99"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       FractionBox[
        RowBox[{
         RowBox[{"\[Rho]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[PartialD]", "2"], 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
              RowBox[{"\[PartialD]", 
               SuperscriptBox["t", "2"]}],
              MultilineFunction->None]}], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["t", "2"]}],
             MultilineFunction->None], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["\[Rho]", "2"]}],
             MultilineFunction->None], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["\[Rho]", "2"]}],
             MultilineFunction->None], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", "\[Rho]"}],
          MultilineFunction->None], "-", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", "\[Rho]"}],
          MultilineFunction->None]}], "\[Rho]"], 
       RowBox[{
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", "t"}],
          MultilineFunction->None], "\[Rho]"], "-", 
        RowBox[{"2", " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", "t"}],
          MultilineFunction->None], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", "\[Rho]"}],
          MultilineFunction->None]}]}], "0", "0"},
      {
       RowBox[{
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", "t"}],
          MultilineFunction->None], "\[Rho]"], "-", 
        RowBox[{"2", " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", "t"}],
          MultilineFunction->None], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", "\[Rho]"}],
          MultilineFunction->None]}]}], 
       FractionBox[
        RowBox[{
         RowBox[{"\[Rho]", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["t", "2"]}],
             MultilineFunction->None], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["t", "2"]}],
             MultilineFunction->None], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["\[Rho]", "2"]}],
             MultilineFunction->None], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["\[Rho]", "2"]}],
             MultilineFunction->None]}], ")"}]}], "+", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", "\[Rho]"}],
          MultilineFunction->None], "-", 
         RowBox[{"2", " ", "\[Rho]", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "\[Rho]"}],
             MultilineFunction->None], ")"}], "2"]}], "+", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", "\[Rho]"}],
          MultilineFunction->None]}], "\[Rho]"], "0", "0"},
      {"0", "0", 
       RowBox[{"\[Rho]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Rho]", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{
               SuperscriptBox["\[PartialD]", "2"], 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
              RowBox[{"\[PartialD]", 
               SuperscriptBox["\[Rho]", "2"]}],
              MultilineFunction->None], "-", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[PartialD]", "2"], 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
              RowBox[{"\[PartialD]", 
               SuperscriptBox["t", "2"]}],
              MultilineFunction->None]}], ")"}]}], "+", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
           RowBox[{"\[PartialD]", "\[Rho]"}],
           MultilineFunction->None]}], ")"}]}], "0"},
      {"0", "0", "0", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"4", " ", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"t", ",", "\[Rho]"}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"t", ",", "\[Rho]"}], ")"}]}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Rho]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["\[Rho]", "2"]}],
                MultilineFunction->None], "-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["t", "2"]}],
                MultilineFunction->None]}], ")"}]}], "+", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "\[Rho]"}],
             MultilineFunction->None]}], ")"}]}], "\[Rho]"]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934645395719*^9, 3.8209374922057543`*^9, 3.82111022935266*^9, 
   3.8243735368658533`*^9, 3.824381626124463*^9, 3.824381854371036*^9, 
   3.824381939543002*^9, 3.824511846625956*^9, 3.8245141719213133`*^9, 
   3.824751170476756*^9, {3.8275310411391783`*^9, 3.8275310710006037`*^9}, 
   3.827923271547653*^9, 3.843834766494377*^9, 3.843947234918741*^9, 
   3.8523058188773727`*^9, 3.852311853814369*^9},
 CellLabel->
  "Out[37]//TraditionalForm=",ExpressionUUID->"23086376-1156-486a-814b-\
46ca10de19d2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "5", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "5", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "5", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.820934650372052*^9, 3.820934653739538*^9}, 
   3.820937492206099*^9, 3.821110229352878*^9, 3.824373536866138*^9, 
   3.82438193954329*^9, 3.8247511704771013`*^9, 3.827531041139411*^9},
 CellLabel->"In[38]:=",ExpressionUUID->"1019199f-afb9-40fd-a1f2-3ea7563b2d46"],

Cell[BoxData[
 TagBox["\<\"R\"\>",
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.8209346543102093`*^9, 3.820937492206188*^9, 
  3.821110229352955*^9, 3.82437353686622*^9, 3.8243816263835297`*^9, 
  3.824381854615872*^9, 3.8243819395433826`*^9, 3.824511846864684*^9, 
  3.824514172146737*^9, 3.8247511704772167`*^9, 3.827531041139492*^9, 
  3.827531071261441*^9, 3.82792327178183*^9, 3.8438347667247953`*^9, 
  3.843947235156402*^9, 3.852305818956938*^9, 3.8523118538951063`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"adb520f7-095f-4ddb-bfcc-b1283c7a0455"],

Cell[BoxData["\<\"RicciScalarEinsteinRosen\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.8209346543102093`*^9, 3.820937492206188*^9, 
  3.821110229352955*^9, 3.82437353686622*^9, 3.8243816263835297`*^9, 
  3.824381854615872*^9, 3.8243819395433826`*^9, 3.824511846864684*^9, 
  3.824514172146737*^9, 3.8247511704772167`*^9, 3.827531041139492*^9, 
  3.827531071261441*^9, 3.82792327178183*^9, 3.8438347667247953`*^9, 
  3.843947235156402*^9, 3.852305818956938*^9, 3.8523118538995*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"405ea250-763a-4862-ae49-7f3e9aaa5e65"],

Cell[BoxData[
 FormBox[
  TagBox[
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"\[Psi]", "(", 
         RowBox[{"t", ",", "\[Rho]"}], ")"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"\[Gamma]", "(", 
         RowBox[{"t", ",", "\[Rho]"}], ")"}]}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Rho]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["t", "2"]}],
            MultilineFunction->None]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["t", "2"]}],
           MultilineFunction->None], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["\[Rho]", "2"]}],
           MultilineFunction->None], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["\[Rho]", "2"]}],
           MultilineFunction->None], "-", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "t"}],
             MultilineFunction->None], ")"}], "2"]}], ")"}]}], "+", 
       RowBox[{"\[Rho]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
           RowBox[{"\[PartialD]", "\[Rho]"}],
           MultilineFunction->None], ")"}], "2"]}], "-", 
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
        RowBox[{"\[PartialD]", "\[Rho]"}],
        MultilineFunction->None]}], ")"}]}], "\[Rho]"],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.8209346543102093`*^9, 3.820937492206188*^9, 
  3.821110229352955*^9, 3.82437353686622*^9, 3.8243816263835297`*^9, 
  3.824381854615872*^9, 3.8243819395433826`*^9, 3.824511846864684*^9, 
  3.824514172146737*^9, 3.8247511704772167`*^9, 3.827531041139492*^9, 
  3.827531071261441*^9, 3.82792327178183*^9, 3.8438347667247953`*^9, 
  3.843947235156402*^9, 3.852305818956938*^9, 3.852311853902862*^9},
 CellLabel->
  "Out[40]//TraditionalForm=",ExpressionUUID->"91ecb473-1b55-47a5-99f2-\
4f4032774075"],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"tensorList", "[", 
      RowBox[{"[", "6", "]"}], "]"}], " ", "\[IndentingNewLine]", 
     RowBox[{"TensorName", "[", 
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "6", "]"}], "]"}], "]"}], " ", "\[IndentingNewLine]", 
     RowBox[{"TensorValues", "[", 
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "6", "]"}], "]"}], "]"}]}], " ", "//", " ", 
    "MatrixForm"}], " ", "//", " ", "pdConv"}], "\[IndentingNewLine]", 
  "*)"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.824382031881773*^9, 3.824382035720847*^9}, 
   3.824382068120364*^9, 3.8247511704775753`*^9, 3.8275310411397467`*^9, {
   3.827531085049985*^9, 3.8275310892800713`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"a44fe4c8-86a0-48b7-9d78-aa1a3a53017e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "7", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "7", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "7", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.8243818880356607`*^9, 3.824381891296851*^9}, 
   3.82438193954393*^9, {3.824382052340536*^9, 3.824382068120544*^9}, 
   3.8247511704783077`*^9, 3.827531041140236*^9},
 CellLabel->"In[42]:=",ExpressionUUID->"8b57077c-8b64-4e6b-b803-43e83dc0cd25"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["G", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.824381892203912*^9, 3.824381939544029*^9, {3.824382052340662*^9, 
   3.8243820681206617`*^9}, 3.82451184696933*^9, 3.824514172248722*^9, 
   3.8247511704784727`*^9, 3.8275310411403227`*^9, 3.827531071383174*^9, 
   3.827923271857465*^9, 3.84383476683326*^9, 3.843947235237376*^9, 
   3.85230581904422*^9, 3.852311853954364*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"e7d360f5-a5b0-4f24-98ac-d8913a3407a6"],

Cell[BoxData["\<\"EinsteinTensorEinsteinRosen\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.824381892203912*^9, 3.824381939544029*^9, {3.824382052340662*^9, 
   3.8243820681206617`*^9}, 3.82451184696933*^9, 3.824514172248722*^9, 
   3.8247511704784727`*^9, 3.8275310411403227`*^9, 3.827531071383174*^9, 
   3.827923271857465*^9, 3.84383476683326*^9, 3.843947235237376*^9, 
   3.85230581904422*^9, 3.852311853961125*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"647e85dc-d3a1-4040-91d9-ec11493af391"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       FractionBox[
        RowBox[{
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", "\[Rho]"}],
          MultilineFunction->None], "-", 
         RowBox[{"\[Rho]", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", "t"}],
               MultilineFunction->None], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", "\[Rho]"}],
               MultilineFunction->None], ")"}], "2"]}], ")"}]}]}], "\[Rho]"], 
       
       RowBox[{
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", "t"}],
          MultilineFunction->None], "\[Rho]"], "-", 
        RowBox[{"2", " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", "t"}],
          MultilineFunction->None], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", "\[Rho]"}],
          MultilineFunction->None]}]}], "0", "0"},
      {
       RowBox[{
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", "t"}],
          MultilineFunction->None], "\[Rho]"], "-", 
        RowBox[{"2", " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", "t"}],
          MultilineFunction->None], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", "\[Rho]"}],
          MultilineFunction->None]}]}], 
       FractionBox[
        RowBox[{
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", "\[Rho]"}],
          MultilineFunction->None], "-", 
         RowBox[{"\[Rho]", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", "t"}],
               MultilineFunction->None], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", "\[Rho]"}],
               MultilineFunction->None], ")"}], "2"]}], ")"}]}]}], "\[Rho]"], 
       "0", "0"},
      {"0", "0", 
       RowBox[{
        SuperscriptBox["\[Rho]", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["t", "2"]}],
            MultilineFunction->None]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["\[Rho]", "2"]}],
           MultilineFunction->None], "-", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "t"}],
             MultilineFunction->None], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "\[Rho]"}],
             MultilineFunction->None], ")"}], "2"]}], ")"}]}], "0"},
      {"0", "0", "0", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"4", " ", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"t", ",", "\[Rho]"}], ")"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"t", ",", "\[Rho]"}], ")"}]}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Rho]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["t", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["t", "2"]}],
                MultilineFunction->None]}], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["\[Rho]", "2"]}],
               MultilineFunction->None], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["\[Rho]", "2"]}],
                MultilineFunction->None]}], "-", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "t"}],
                 MultilineFunction->None], ")"}], "2"]}], ")"}]}], "+", 
           RowBox[{"\[Rho]", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", "\[Rho]"}],
               MultilineFunction->None], ")"}], "2"]}], "-", 
           RowBox[{"2", " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "\[Rho]"}],
             MultilineFunction->None]}]}], ")"}]}], "\[Rho]"]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.824381892203912*^9, 3.824381939544029*^9, {3.824382052340662*^9, 
   3.8243820681206617`*^9}, 3.82451184696933*^9, 3.824514172248722*^9, 
   3.8247511704784727`*^9, 3.8275310411403227`*^9, 3.827531071383174*^9, 
   3.827923271857465*^9, 3.84383476683326*^9, 3.843947235237376*^9, 
   3.85230581904422*^9, 3.852311854001616*^9},
 CellLabel->
  "Out[44]//TraditionalForm=",ExpressionUUID->"405569a1-82ae-45ef-9446-\
4970af3dbe15"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "8", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "8", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "8", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.82093465870828*^9, 3.820934665723707*^9}, 
   3.820937492206532*^9, 3.821110229353163*^9, 3.824373536866439*^9, 
   3.82438193954467*^9, {3.824382052340996*^9, 3.824382068120945*^9}, 
   3.824751170478986*^9, 3.827531041140554*^9},
 CellLabel->"In[45]:=",ExpressionUUID->"8a5bdd22-087f-43a5-9895-75f2bde6882e"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["C", "\[Alpha]\[Beta]\[Gamma]\[Delta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934666611442*^9, 3.820937492206628*^9, 3.821110229353245*^9, 
   3.824381626454548*^9, 3.824381854687508*^9, {3.824382052341096*^9, 
   3.8243820681210527`*^9}, 3.824511847219433*^9, 3.824514172561551*^9, 
   3.824751170479109*^9, 3.8275310411406403`*^9, 3.827531071681217*^9, 
   3.82792327213684*^9, 3.843834767390759*^9, 3.843947235615587*^9, 
   3.852305819123241*^9, 3.852311854074031*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"f5c22b96-c43e-475a-87b1-80dedfce427f"],

Cell[BoxData["\<\"WeylTensorEinsteinRosen\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934666611442*^9, 3.820937492206628*^9, 3.821110229353245*^9, 
   3.824381626454548*^9, 3.824381854687508*^9, {3.824382052341096*^9, 
   3.8243820681210527`*^9}, 3.824511847219433*^9, 3.824514172561551*^9, 
   3.824751170479109*^9, 3.8275310411406403`*^9, 3.827531071681217*^9, 
   3.82792327213684*^9, 3.843834767390759*^9, 3.843947235615587*^9, 
   3.852305819123241*^9, 3.8523118540769577`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"05f793cb-4b17-4e8a-b9f2-8a559d272589"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Rho]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                   MultilineFunction->None], "-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                   MultilineFunction->None], "-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                   MultilineFunction->None], "+", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                   MultilineFunction->None], "-", 
                  RowBox[{"2", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
               RowBox[{"2", " ", "\[Rho]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], ")"}], "2"]}], "-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "\[Rho]"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            RowBox[{"3", " ", "\[Rho]"}]], "0", "0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Rho]", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                    MultilineFunction->None], "-", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                    MultilineFunction->None], "-", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                    MultilineFunction->None], "+", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                    MultilineFunction->None], "-", 
                   RowBox[{"2", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
                RowBox[{"2", " ", "\[Rho]", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                RowBox[{"2", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "\[Rho]"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             RowBox[{"3", " ", "\[Rho]"}]]}], "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{
            FractionBox["1", "6"], " ", "\[Rho]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                   MultilineFunction->None]}], "+", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["\[Rho]", "2"]}],
                  MultilineFunction->None], "+", 
                 RowBox[{"6", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"4", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"6", " ", "\[Rho]", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None]}], "-", "3"}], ")"}]}], "-", 
              RowBox[{"8", " ", "\[Rho]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "\[Rho]"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None]}]}], ")"}]}], "0"},
          {"0", "0", 
           RowBox[{
            FractionBox["1", "2"], " ", "\[Rho]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "\[Rho]"}]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "\[Rho]", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}]}], ")"}]}],
            "0"},
          {
           RowBox[{
            FractionBox["1", "6"], " ", "\[Rho]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["t", "2"]}],
                  MultilineFunction->None], "+", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                   MultilineFunction->None]}], "-", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["\[Rho]", "2"]}],
                  MultilineFunction->None], "-", 
                 RowBox[{"6", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"4", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{"3", "-", 
                 RowBox[{"6", " ", "\[Rho]", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{"8", " ", "\[Rho]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "\[Rho]"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None]}]}], ")"}]}], 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], " ", "\[Rho]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "\[Rho]"}]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "\[Rho]", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}]}], ")"}]}],
            "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Rho]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                    MultilineFunction->None]}], "+", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                   MultilineFunction->None], "-", 
                  RowBox[{"6", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"8", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "\[Rho]"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{"3", "-", 
                  RowBox[{"6", " ", "\[Rho]", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
               RowBox[{"4", " ", "\[Rho]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "\[Rho]"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            RowBox[{"6", " ", "\[Rho]"}]]},
          {"0", "0", "0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "\[Rho]", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "\[Rho]"}]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"2", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "t"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "\[Rho]", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}]}], 
               ")"}]}], 
             RowBox[{"2", " ", "\[Rho]"}]]}]},
          {"0", "0", "0", "0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Rho]", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"4", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                    MultilineFunction->None]}], "+", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                    MultilineFunction->None], "-", 
                   RowBox[{"6", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"2", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"8", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "\[Rho]"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{"3", "-", 
                   RowBox[{"6", " ", "\[Rho]", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
                RowBox[{"4", " ", "\[Rho]", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                RowBox[{"2", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "\[Rho]"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             RowBox[{"6", " ", "\[Rho]"}]]}], 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Rho]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "\[Rho]"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "t"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "\[Rho]", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}]}], 
              ")"}]}], 
            RowBox[{"2", " ", "\[Rho]"}]], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Rho]", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                    MultilineFunction->None], "-", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                    MultilineFunction->None], "-", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                    MultilineFunction->None], "+", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                    MultilineFunction->None], "-", 
                   RowBox[{"2", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
                RowBox[{"2", " ", "\[Rho]", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                RowBox[{"2", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "\[Rho]"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             RowBox[{"3", " ", "\[Rho]"}]]}], "0", "0"},
          {
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Rho]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                   MultilineFunction->None], "-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                   MultilineFunction->None], "-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                   MultilineFunction->None], "+", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                   MultilineFunction->None], "-", 
                  RowBox[{"2", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
               RowBox[{"2", " ", "\[Rho]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], ")"}], "2"]}], "-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "\[Rho]"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            RowBox[{"3", " ", "\[Rho]"}]], "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{
            FractionBox["1", "2"], " ", "\[Rho]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "\[Rho]"}]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "\[Rho]", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}]}], ")"}]}],
            "0"},
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "6"]}], " ", "\[Rho]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"4", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                   MultilineFunction->None]}], "+", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["\[Rho]", "2"]}],
                  MultilineFunction->None], "-", 
                 RowBox[{"6", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"8", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{"3", "-", 
                 RowBox[{"6", " ", "\[Rho]", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{"4", " ", "\[Rho]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "\[Rho]"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None]}]}], ")"}]}], "0"},
          {
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], " ", "\[Rho]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "\[Rho]"}]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "\[Rho]", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}]}], ")"}]}], 
           RowBox[{
            FractionBox["1", "6"], " ", "\[Rho]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"4", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                   MultilineFunction->None]}], "+", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["\[Rho]", "2"]}],
                  MultilineFunction->None], "-", 
                 RowBox[{"6", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"8", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{"3", "-", 
                 RowBox[{"6", " ", "\[Rho]", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{"4", " ", "\[Rho]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "\[Rho]"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None]}]}], ")"}]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "\[Rho]", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "\[Rho]"}]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"2", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "t"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "\[Rho]", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}]}], 
               ")"}]}], 
             RowBox[{"2", " ", "\[Rho]"}]]}]},
          {"0", "0", "0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Rho]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                   MultilineFunction->None], "+", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                    MultilineFunction->None]}], "-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                   MultilineFunction->None], "-", 
                  RowBox[{"6", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "\[Rho]"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{"3", "-", 
                  RowBox[{"6", " ", "\[Rho]", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
               RowBox[{"8", " ", "\[Rho]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], ")"}], "2"]}], "-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "\[Rho]"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            RowBox[{"6", " ", "\[Rho]"}]]},
          {"0", "0", "0", "0"},
          {
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Rho]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "\[Rho]"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "t"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "\[Rho]", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}]}], 
              ")"}]}], 
            RowBox[{"2", " ", "\[Rho]"}]], 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Rho]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                    MultilineFunction->None]}], "+", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                   MultilineFunction->None], "+", 
                  RowBox[{"6", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"4", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "\[Rho]"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"6", " ", "\[Rho]", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None]}], "-", "3"}], ")"}]}], "-", 
               RowBox[{"8", " ", "\[Rho]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "\[Rho]"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            RowBox[{"6", " ", "\[Rho]"}]], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{
            FractionBox["1", "6"], " ", "\[Rho]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["t", "2"]}],
                  MultilineFunction->None], "+", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                   MultilineFunction->None]}], "-", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["\[Rho]", "2"]}],
                  MultilineFunction->None], "-", 
                 RowBox[{"6", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"4", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{"3", "-", 
                 RowBox[{"6", " ", "\[Rho]", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{"8", " ", "\[Rho]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "\[Rho]"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None]}]}], ")"}]}], "0"},
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], " ", "\[Rho]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "\[Rho]"}]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "\[Rho]", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}]}], ")"}]}],
            "0"},
          {
           RowBox[{
            FractionBox["1", "6"], " ", "\[Rho]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                   MultilineFunction->None]}], "+", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["\[Rho]", "2"]}],
                  MultilineFunction->None], "+", 
                 RowBox[{"6", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"4", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"6", " ", "\[Rho]", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None]}], "-", "3"}], ")"}]}], "-", 
              RowBox[{"8", " ", "\[Rho]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "\[Rho]"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None]}]}], ")"}]}], 
           RowBox[{
            FractionBox["1", "2"], " ", "\[Rho]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "\[Rho]"}]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "\[Rho]", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}]}], ")"}]}],
            "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], " ", "\[Rho]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "\[Rho]"}]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "\[Rho]", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}]}], ")"}]}],
            "0"},
          {"0", "0", 
           RowBox[{
            FractionBox["1", "6"], " ", "\[Rho]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"4", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                   MultilineFunction->None]}], "+", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["\[Rho]", "2"]}],
                  MultilineFunction->None], "-", 
                 RowBox[{"6", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"8", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{"3", "-", 
                 RowBox[{"6", " ", "\[Rho]", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{"4", " ", "\[Rho]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "\[Rho]"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None]}]}], ")"}]}], "0"},
          {
           RowBox[{
            FractionBox["1", "2"], " ", "\[Rho]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "\[Rho]"}]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "\[Rho]", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}]}], ")"}]}], 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "6"]}], " ", "\[Rho]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"4", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                   MultilineFunction->None]}], "+", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["\[Rho]", "2"]}],
                  MultilineFunction->None], "-", 
                 RowBox[{"6", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None], " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "t"}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"8", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{"3", "-", 
                 RowBox[{"6", " ", "\[Rho]", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None]}]}], ")"}]}], "+", 
              RowBox[{"4", " ", "\[Rho]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "\[Rho]"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None]}]}], ")"}]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "3"]}], " ", "\[Rho]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["t", "2"]}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["t", "2"]}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["\[Rho]", "2"]}],
                  MultilineFunction->None], "+", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["\[Rho]", "2"]}],
                  MultilineFunction->None], "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
              RowBox[{"2", " ", "\[Rho]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "\[Rho]"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None]}]}], ")"}]}]},
          {"0", "0", 
           RowBox[{
            FractionBox["1", "3"], " ", "\[Rho]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["t", "2"]}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["t", "2"]}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["\[Rho]", "2"]}],
                  MultilineFunction->None], "+", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["\[Rho]", "2"]}],
                  MultilineFunction->None], "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
              RowBox[{"2", " ", "\[Rho]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "\[Rho]"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None]}]}], ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Rho]", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"4", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                    MultilineFunction->None]}], "+", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                    MultilineFunction->None], "-", 
                   RowBox[{"6", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"2", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"8", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "\[Rho]"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{"3", "-", 
                   RowBox[{"6", " ", "\[Rho]", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
                RowBox[{"4", " ", "\[Rho]", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                RowBox[{"2", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "\[Rho]"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             RowBox[{"6", " ", "\[Rho]"}]]}]},
          {"0", "0", "0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Rho]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "\[Rho]"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "t"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "\[Rho]", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}]}], 
              ")"}]}], 
            RowBox[{"2", " ", "\[Rho]"}]]},
          {"0", "0", "0", "0"},
          {
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Rho]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                    MultilineFunction->None]}], "+", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                   MultilineFunction->None], "-", 
                  RowBox[{"6", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"8", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "\[Rho]"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{"3", "-", 
                  RowBox[{"6", " ", "\[Rho]", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
               RowBox[{"4", " ", "\[Rho]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "\[Rho]"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            RowBox[{"6", " ", "\[Rho]"}]], 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "\[Rho]", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "\[Rho]"}]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"2", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "t"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "\[Rho]", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}]}], 
               ")"}]}], 
             RowBox[{"2", " ", "\[Rho]"}]]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Rho]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "\[Rho]"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "t"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "\[Rho]", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}]}], 
              ")"}]}], 
            RowBox[{"2", " ", "\[Rho]"}]]},
          {"0", "0", "0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Rho]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                    MultilineFunction->None]}], "+", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                   MultilineFunction->None], "+", 
                  RowBox[{"6", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"4", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "\[Rho]"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"6", " ", "\[Rho]", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None]}], "-", "3"}], ")"}]}], "-", 
               RowBox[{"8", " ", "\[Rho]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "\[Rho]"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            RowBox[{"6", " ", "\[Rho]"}]]},
          {"0", "0", "0", "0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "\[Rho]", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "t"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "\[Rho]"}]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"2", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None], " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "t"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "\[Rho]", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}]}], 
               ")"}]}], 
             RowBox[{"2", " ", "\[Rho]"}]]}], 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Rho]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                   MultilineFunction->None], "+", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["t", "2"]}],
                    MultilineFunction->None]}], "-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                   MultilineFunction->None], "-", 
                  RowBox[{"6", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["\[Rho]", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "\[Rho]"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{"3", "-", 
                  RowBox[{"6", " ", "\[Rho]", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "\[Rho]"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
               RowBox[{"8", " ", "\[Rho]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "\[Rho]"}],
                   MultilineFunction->None], ")"}], "2"]}], "-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "\[Rho]"}],
                 MultilineFunction->None]}]}], ")"}]}], 
            RowBox[{"6", " ", "\[Rho]"}]], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{
            FractionBox["1", "3"], " ", "\[Rho]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["t", "2"]}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["t", "2"]}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["\[Rho]", "2"]}],
                  MultilineFunction->None], "+", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["\[Rho]", "2"]}],
                  MultilineFunction->None], "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
              RowBox[{"2", " ", "\[Rho]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "\[Rho]"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None]}]}], ")"}]}]},
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "3"]}], " ", "\[Rho]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["t", "2"]}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["t", "2"]}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["\[Rho]", "2"]}],
                  MultilineFunction->None], "+", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["\[Rho]", "2"]}],
                  MultilineFunction->None], "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "t"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
              RowBox[{"2", " ", "\[Rho]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "\[Rho]"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "\[Rho]"}],
                MultilineFunction->None]}]}], ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934666611442*^9, 3.820937492206628*^9, 3.821110229353245*^9, 
   3.824381626454548*^9, 3.824381854687508*^9, {3.824382052341096*^9, 
   3.8243820681210527`*^9}, 3.824511847219433*^9, 3.824514172561551*^9, 
   3.824751170479109*^9, 3.8275310411406403`*^9, 3.827531071681217*^9, 
   3.82792327213684*^9, 3.843834767390759*^9, 3.843947235615587*^9, 
   3.852305819123241*^9, 3.852311854953127*^9},
 CellLabel->
  "Out[47]//TraditionalForm=",ExpressionUUID->"f1a31b0d-4965-4b24-a1c9-\
663480910762"],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"tensorList", "[", 
      RowBox[{"[", "9", "]"}], "]"}], " ", "\[IndentingNewLine]", 
     RowBox[{"TensorName", "[", 
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "]"}], " ", "\[IndentingNewLine]", 
     RowBox[{"TensorValues", "[", 
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "]"}]}], " ", "//", " ", 
    "MatrixForm"}], " ", "//", " ", "pdConv"}], "\[IndentingNewLine]", 
  "*)"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.824382043442072*^9, 3.824382068121275*^9}, 
   3.824751170479444*^9, 3.8275310411408653`*^9, {3.8275310942501097`*^9, 
   3.827531098768097*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"96108c62-a282-4da1-8136-a98fbd737b78"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Derivation of Vacuum Field Equations For Metric 17:  Einstein Rosen \
Cylindrical Gravitational Waves\
\>", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.852305886605892*^9, 3.852305903631928*^9}, {
  3.85230621556875*^9, 
  3.852306218711965*^9}},ExpressionUUID->"ace29171-d086-450c-884f-\
709947e588db"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "nonzeroRicci", "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nonzeroRicci", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"Cases", "[", " ", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", " ", 
         RowBox[{
          RowBox[{"i", "<=", " ", "j"}], " ", ",", " ", 
          RowBox[{
           RowBox[{"TensorValues", "[", 
            RowBox[{"tensorList", "[", 
             RowBox[{"[", "4", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", "Nothing"}], "]"}], 
        " ", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}], " ", ",", 
     " ", 
     RowBox[{"Except", "[", "0", "]"}]}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nonzeroRicci", " ", "//", " ", "TableForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{3.852305893015394*^9},
 CellLabel->"In[49]:=",ExpressionUUID->"33b31ebe-272c-4716-8e8c-31e75920e152"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       FractionBox[
        RowBox[{
         RowBox[{"\[Rho]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[PartialD]", "2"], 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
              RowBox[{"\[PartialD]", 
               SuperscriptBox["t", "2"]}],
              MultilineFunction->None]}], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["t", "2"]}],
             MultilineFunction->None], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["\[Rho]", "2"]}],
             MultilineFunction->None], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["\[Rho]", "2"]}],
             MultilineFunction->None], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", "t"}],
                MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", "\[Rho]"}],
          MultilineFunction->None], "-", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", "\[Rho]"}],
          MultilineFunction->None]}], "\[Rho]"]},
      {
       RowBox[{
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", "t"}],
          MultilineFunction->None], "\[Rho]"], "-", 
        RowBox[{"2", " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", "t"}],
          MultilineFunction->None], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", "\[Rho]"}],
          MultilineFunction->None]}]}]},
      {
       FractionBox[
        RowBox[{
         RowBox[{"\[Rho]", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["t", "2"]}],
             MultilineFunction->None], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["t", "2"]}],
             MultilineFunction->None], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["\[Rho]", "2"]}],
             MultilineFunction->None], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["\[Rho]", "2"]}],
             MultilineFunction->None]}], ")"}]}], "+", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", "\[Rho]"}],
          MultilineFunction->None], "-", 
         RowBox[{"2", " ", "\[Rho]", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "\[Rho]"}],
             MultilineFunction->None], ")"}], "2"]}], "+", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", "\[Rho]"}],
          MultilineFunction->None]}], "\[Rho]"]},
      {
       RowBox[{"\[Rho]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Rho]", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{
               SuperscriptBox["\[PartialD]", "2"], 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
              RowBox[{"\[PartialD]", 
               SuperscriptBox["\[Rho]", "2"]}],
              MultilineFunction->None], "-", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[PartialD]", "2"], 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
              RowBox[{"\[PartialD]", 
               SuperscriptBox["t", "2"]}],
              MultilineFunction->None]}], ")"}]}], "+", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
           RowBox[{"\[PartialD]", "\[Rho]"}],
           MultilineFunction->None]}], ")"}]}]},
      {
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"4", " ", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"t", ",", "\[Rho]"}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"t", ",", "\[Rho]"}], ")"}]}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Rho]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["\[Rho]", "2"]}],
                MultilineFunction->None], "-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["t", "2"]}],
                MultilineFunction->None]}], ")"}]}], "+", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "\[Rho]"}],
             MultilineFunction->None]}], ")"}]}], "\[Rho]"]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.852305881633439*^9, 3.8523058930157146`*^9}, 
   3.8523118551129293`*^9},
 CellLabel->
  "Out[51]//TraditionalForm=",ExpressionUUID->"cf6d559a-a898-40f9-95d0-\
a25cae000785"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "nonzeroEinstein", "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nonzeroEinstein", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"Cases", "[", " ", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", " ", 
         RowBox[{
          RowBox[{"i", "<=", " ", "j"}], " ", ",", " ", 
          RowBox[{
           RowBox[{"TensorValues", "[", 
            RowBox[{"tensorList", "[", 
             RowBox[{"[", "7", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", "Nothing"}], "]"}], 
        " ", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}], " ", ",", 
     " ", 
     RowBox[{"Except", "[", "0", "]"}]}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nonzeroEinstein", " ", "//", " ", "TableForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{3.852305893015931*^9},
 CellLabel->"In[52]:=",ExpressionUUID->"9d45c198-553c-4ba1-b97e-4ba471c601a0"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       FractionBox[
        RowBox[{
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", "\[Rho]"}],
          MultilineFunction->None], "-", 
         RowBox[{"\[Rho]", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", "t"}],
               MultilineFunction->None], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", "\[Rho]"}],
               MultilineFunction->None], ")"}], "2"]}], ")"}]}]}], 
        "\[Rho]"]},
      {
       RowBox[{
        FractionBox[
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", "t"}],
          MultilineFunction->None], "\[Rho]"], "-", 
        RowBox[{"2", " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", "t"}],
          MultilineFunction->None], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", "\[Rho]"}],
          MultilineFunction->None]}]}]},
      {
       FractionBox[
        RowBox[{
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", "\[Rho]"}],
          MultilineFunction->None], "-", 
         RowBox[{"\[Rho]", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", "t"}],
               MultilineFunction->None], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", "\[Rho]"}],
               MultilineFunction->None], ")"}], "2"]}], ")"}]}]}], 
        "\[Rho]"]},
      {
       RowBox[{
        SuperscriptBox["\[Rho]", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"t", ",", "\[Rho]"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["t", "2"]}],
            MultilineFunction->None]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["\[Rho]", "2"]}],
           MultilineFunction->None], "-", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "t"}],
             MultilineFunction->None], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "\[Rho]"}],
             MultilineFunction->None], ")"}], "2"]}], ")"}]}]},
      {
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"4", " ", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"t", ",", "\[Rho]"}], ")"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"t", ",", "\[Rho]"}], ")"}]}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Rho]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["t", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["t", "2"]}],
                MultilineFunction->None]}], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["\[Rho]", "2"]}],
               MultilineFunction->None], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["\[Rho]", "2"]}],
                MultilineFunction->None]}], "-", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "t"}],
                 MultilineFunction->None], ")"}], "2"]}], ")"}]}], "+", 
           RowBox[{"\[Rho]", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
               RowBox[{"\[PartialD]", "\[Rho]"}],
               MultilineFunction->None], ")"}], "2"]}], "-", 
           RowBox[{"2", " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
             RowBox[{"\[PartialD]", "\[Rho]"}],
             MultilineFunction->None]}]}], ")"}]}], "\[Rho]"]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.852305883892735*^9, 3.852305893016214*^9}, 
   3.852311855184311*^9},
 CellLabel->
  "Out[54]//TraditionalForm=",ExpressionUUID->"d2f0fb9b-efd2-4754-8413-\
6fbfc1d52656"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "dgammadt", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dgammadt", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Solve", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"nonzeroEinstein", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "==", "0"}], ",", 
        RowBox[{
         SuperscriptBox["\[Gamma]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "\[Rho]"}], "]"}]}], "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], " ", "/.", " ", 
    RowBox[{"Rule", "->", " ", "Equal"}]}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"dgammadt", " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.852305946272415*^9, 3.852305969600915*^9}, {
   3.8523061091050158`*^9, 3.8523061249603*^9}, 3.852306199731606*^9},
 CellLabel->"In[55]:=",ExpressionUUID->"7b9c626e-1212-4f3b-9f3a-f75c0e52d9e4"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", 
     RowBox[{"\[Gamma]", "(", 
      RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
    RowBox[{"\[PartialD]", "t"}],
    MultilineFunction->None], "\[LongEqual]", 
   RowBox[{"2", " ", "\[Rho]", " ", 
    FractionBox[
     RowBox[{"\[PartialD]", 
      RowBox[{"\[Psi]", "(", 
       RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
     RowBox[{"\[PartialD]", "t"}],
     MultilineFunction->None], " ", 
    FractionBox[
     RowBox[{"\[PartialD]", 
      RowBox[{"\[Psi]", "(", 
       RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
     RowBox[{"\[PartialD]", "\[Rho]"}],
     MultilineFunction->None]}]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.852305947583209*^9, 3.852305969930209*^9}, 
   3.852306125541966*^9, 3.852306199732011*^9, 3.852311855223981*^9},
 CellLabel->
  "Out[57]//TraditionalForm=",ExpressionUUID->"77e38db9-8478-431c-9927-\
8109d49de185"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "dgammadrho", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dgammadrho", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Solve", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"nonzeroEinstein", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "==", "0"}], " ", ",", " ", 
        RowBox[{
         SuperscriptBox["\[Gamma]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"t", ",", "\[Rho]"}], "]"}]}], " ", "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "/.", " ", 
    RowBox[{"Rule", "->", " ", "Equal"}]}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"dgammadrho", " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.852305989272901*^9, 3.8523060133339357`*^9}, {
   3.852306089393187*^9, 3.8523061059918737`*^9}, 3.852306199732243*^9},
 CellLabel->"In[58]:=",ExpressionUUID->"834d44de-4b52-4146-89cd-502a9a5cea37"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", 
     RowBox[{"\[Gamma]", "(", 
      RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
    RowBox[{"\[PartialD]", "\[Rho]"}],
    MultilineFunction->None], "\[LongEqual]", 
   RowBox[{"\[Rho]", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
         RowBox[{"\[PartialD]", "t"}],
         MultilineFunction->None], ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
         RowBox[{"\[PartialD]", "\[Rho]"}],
         MultilineFunction->None], ")"}], "2"]}], ")"}]}]}], 
  TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.852305990481717*^9, 3.85230601400309*^9}, 
   3.8523061066117*^9, 3.852306199732758*^9, 3.852311855263612*^9},
 CellLabel->
  "Out[60]//TraditionalForm=",ExpressionUUID->"95eeff36-d848-4ba6-824b-\
50d0af82ee24"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq17", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq17", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Expand", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "\[Rho]"}], ")"}], 
      RowBox[{
       RowBox[{"nonzeroRicci", "[", 
        RowBox[{"[", "5", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], "]"}], "==", "0"}]}], "   ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq17", " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.8523060358723803`*^9, 3.8523060866723623`*^9}, 
   3.852306199733086*^9},
 CellLabel->"In[61]:=",ExpressionUUID->"606353a2-1206-41dd-9cd9-b365fb1ba0c9"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
      RowBox[{"\[PartialD]", 
       SuperscriptBox["t", "2"]}],
      MultilineFunction->None]}], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[PartialD]", "2"], 
      RowBox[{"\[Psi]", "(", 
       RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
     RowBox[{"\[PartialD]", 
      SuperscriptBox["\[Rho]", "2"]}],
     MultilineFunction->None], "+", 
    FractionBox[
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
      RowBox[{"\[PartialD]", "\[Rho]"}],
      MultilineFunction->None], "\[Rho]"]}], "\[LongEqual]", "0"}], 
  TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.852306036828588*^9, 3.852306087242256*^9}, 
   3.852306199733418*^9, 3.852311855279827*^9},
 CellLabel->
  "Out[63]//TraditionalForm=",ExpressionUUID->"1942d3dc-e667-4006-b5f7-\
b77dcef71630"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "erVacuumFieldEquations", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"erVacuumFieldEquations", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"eq17", " ", ",", "dgammadt", ",", "dgammadrho"}], " ", 
    "\[IndentingNewLine]", "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"erVacuumFieldEquations", " ", "//", " ", "TableForm"}], " ", "//", 
  " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.852306128947336*^9, 3.852306199733617*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"ad92585f-9f49-4402-8bc2-9e0efcadbda4"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["t", "2"]}],
           MultilineFunction->None]}], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["\[Rho]", "2"]}],
          MultilineFunction->None], "+", 
         FractionBox[
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
           RowBox[{"\[PartialD]", "\[Rho]"}],
           MultilineFunction->None], "\[Rho]"]}], "\[LongEqual]", "0"}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
         RowBox[{"\[PartialD]", "t"}],
         MultilineFunction->None], "\[LongEqual]", 
        RowBox[{"2", " ", "\[Rho]", " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", "t"}],
          MultilineFunction->None], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
          RowBox[{"\[PartialD]", "\[Rho]"}],
          MultilineFunction->None]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
         RowBox[{"\[PartialD]", "\[Rho]"}],
         MultilineFunction->None], "\[LongEqual]", 
        RowBox[{"\[Rho]", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
              RowBox[{"\[PartialD]", "t"}],
              MultilineFunction->None], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
              RowBox[{"\[PartialD]", "\[Rho]"}],
              MultilineFunction->None], ")"}], "2"]}], ")"}]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.852306190836103*^9, 3.85230619973388*^9}, 
   3.852311855316153*^9},
 CellLabel->
  "Out[66]//TraditionalForm=",ExpressionUUID->"cc91a9a0-698e-42da-b409-\
4e580c482b8c"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Solution To Vacuum Field Equations For Metric 17 by Separation of Variables \
(Constants of Integration are Currently Arbitrary... fix this later)\
\>", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.852312226742649*^9, 
  3.852312268480116*^9}},ExpressionUUID->"88df3400-8ef9-492b-a553-\
444e2ffb2eaf"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "psiReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{"psiReplace", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[Psi]", "[", 
    RowBox[{"t", ",", "\[Rho]"}], "]"}], "\[Rule]", " ", 
   RowBox[{
    RowBox[{"f", "[", "\[Rho]", "]"}], " ", 
    RowBox[{"g", "[", "t", "]"}]}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.852311880881444*^9, 3.852311882353075*^9}, {
   3.8523119270992413`*^9, 3.85231192815312*^9}, 3.852312233880495*^9},
 CellLabel->"In[72]:=",ExpressionUUID->"c98feee1-e02a-40a6-b5f5-e161f11cee50"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"t", ",", "\[Rho]"}], "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{"f", "[", "\[Rho]", "]"}], " ", 
   RowBox[{"g", "[", "t", "]"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{3.852311883670089*^9, 3.852311928786091*^9, 
  3.852312233880917*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"5ad28897-ac7a-4a1b-a2df-2148b0123d25"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "psiDerivatives", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psiDerivatives", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{"psiReplace", "  ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"D", "[", " ", 
      RowBox[{"psiReplace", " ", ",", " ", "\[Rho]"}], "]"}], "  ", ",", " ", 
     "\n", "       ", 
     RowBox[{"D", "[", " ", 
      RowBox[{"psiReplace", " ", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Rho]", ",", "2"}], "}"}]}], "]"}], "  ", ",", " ", "\n", 
     "       ", 
     RowBox[{"D", "[", " ", 
      RowBox[{"psiReplace", " ", ",", " ", 
       RowBox[{"{", 
        RowBox[{"t", ",", "2"}], "}"}]}], "]"}]}], " ", "\[IndentingNewLine]",
     "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psiDerivatives", "  ", "//", " ", "TableForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.852311902961092*^9, 3.852311907961727*^9}, 
   3.85231223388137*^9},
 CellLabel->"In[74]:=",ExpressionUUID->"6199d9ab-08a7-4c02-a337-60d7c9e823d8"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{"\[Psi]", "(", 
         RowBox[{"t", ",", "\[Rho]"}], ")"}], "\[Rule]", 
        RowBox[{
         RowBox[{"f", "(", "\[Rho]", ")"}], " ", 
         RowBox[{"g", "(", "t", ")"}]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
         RowBox[{"\[PartialD]", "\[Rho]"}],
         MultilineFunction->None], "\[Rule]", 
        RowBox[{
         RowBox[{"g", "(", "t", ")"}], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"f", "(", "\[Rho]", ")"}]}], 
          RowBox[{"\[PartialD]", "\[Rho]"}],
          MultilineFunction->None]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["\[Rho]", "2"]}],
         MultilineFunction->None], "\[Rule]", 
        RowBox[{
         RowBox[{"g", "(", "t", ")"}], " ", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"f", "(", "\[Rho]", ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["\[Rho]", "2"]}],
          MultilineFunction->None]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"t", ",", "\[Rho]"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["t", "2"]}],
         MultilineFunction->None], "\[Rule]", 
        RowBox[{
         RowBox[{"f", "(", "\[Rho]", ")"}], " ", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"g", "(", "t", ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["t", "2"]}],
          MultilineFunction->None]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.852311909308552*^9, 3.85231193091143*^9}, 
   3.85231223388186*^9},
 CellLabel->
  "Out[76]//TraditionalForm=",ExpressionUUID->"b0e00080-f1df-48eb-bfe7-\
7e91d9f3b4ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{"eq17", "[", 
   RowBox[{"[", "1", "]"}], "]"}], " ", "/.", " ", "psiDerivatives", 
  " "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.8523119592402163`*^9, 3.852311967780374*^9}, 
   3.852312233882197*^9},
 CellLabel->"In[78]:=",ExpressionUUID->"ca71e468-f2b0-4bd1-9158-558002ef4731"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"g", "[", "t", "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", "\[Prime]",
      MultilineFunction->None], "[", "\[Rho]", "]"}]}], "\[Rho]"], "+", 
  RowBox[{
   RowBox[{"g", "[", "t", "]"}], " ", 
   RowBox[{
    SuperscriptBox["f", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "\[Rho]", "]"}]}], "-", 
  RowBox[{
   RowBox[{"f", "[", "\[Rho]", "]"}], " ", 
   RowBox[{
    SuperscriptBox["g", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.8523119606373463`*^9, 3.852311968291947*^9}, 
   3.8523122338825197`*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"2a7609f6-eb2d-4de6-9df4-6bb700be2d51"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "sov", "]"}], "\[IndentingNewLine]", 
 RowBox[{"sov", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"\[Psi]", "[", 
          RowBox[{"t", ",", "\[Rho]"}], "]"}]], "/.", " ", "psiReplace"}], 
       ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"eq17", "[", 
         RowBox[{"[", "1", "]"}], "]"}], " ", "/.", " ", "psiDerivatives"}], 
       " ", ")"}]}], " ", "//", " ", "Expand"}], " ", "//", " ", "Apart"}], 
   " ", "//", " ", "Expand", " "}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.852311976441289*^9, 3.8523120210488377`*^9}, 
   3.852312233882761*^9},
 CellLabel->"In[79]:=",ExpressionUUID->"8443c8b0-6c5d-4c6b-800c-766063a7e6d2"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["f", "\[Prime]",
     MultilineFunction->None], "[", "\[Rho]", "]"}], 
   RowBox[{"\[Rho]", " ", 
    RowBox[{"f", "[", "\[Rho]", "]"}]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["f", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "\[Rho]", "]"}], 
   RowBox[{"f", "[", "\[Rho]", "]"}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["g", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], 
   RowBox[{"g", "[", "t", "]"}]]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{3.852312021415193*^9, 3.852312233883006*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"728273f6-c1c0-4d60-b169-cc3d0ac37ece"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "gODE", "]"}], "\[IndentingNewLine]", 
 RowBox[{"gODE", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Select", "[", " ", 
    RowBox[{"sov", " ", ",", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"!", 
        RowBox[{"FreeQ", "[", 
         RowBox[{"#", ",", "t"}], "]"}]}], ")"}], "&"}]}], "]"}], " ", 
   "\[Equal]", "  ", 
   SuperscriptBox["\[Omega]", "2"]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{3.85231203648213*^9, 3.852312233883209*^9},
 CellLabel->"In[83]:=",ExpressionUUID->"378e2c10-b33f-400b-9321-5a64d0d90079"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["g", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], 
    RowBox[{"g", "[", "t", "]"}]]}], "\[Equal]", 
  SuperscriptBox["\[Omega]", "2"]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.852312032216442*^9, 3.852312036926175*^9}, 
   3.85231223388345*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"0b88dad2-0588-488a-a27f-3567e2bad0a6"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "gReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{"gReplace", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"DSolve", "[", " ", 
     RowBox[{"gODE", " ", ",", " ", 
      RowBox[{"g", "[", "t", "]"}], ",", "t"}], "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Fix", " ", "these", " ", "constants", " ", "later"}], " ", "*)"}],
   " "}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{3.852312233883649*^9},
 CellLabel->"In[85]:=",ExpressionUUID->"1f36bd68-3d3b-42a5-b7fa-933af7852c1c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "t", "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"1"},
     "C"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"t", " ", "\[Omega]"}], "]"}]}], "+", 
   RowBox[{
    TemplateBox[{"2"},
     "C"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"t", " ", "\[Omega]"}], "]"}]}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{3.852312046126935*^9, 3.852312233883903*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"eb976eda-6213-4de4-8d08-b298b75dfd39"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "fODE", "]"}], "\[IndentingNewLine]", 
 RowBox[{"fODE", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Select", "[", " ", 
    RowBox[{"sov", " ", ",", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"!", 
        RowBox[{"FreeQ", "[", 
         RowBox[{"#", ",", "\[Rho]"}], "]"}]}], ")"}], "&"}]}], "]"}], " ", 
   "\[Equal]", 
   RowBox[{"-", " ", 
    SuperscriptBox["\[Omega]", "2"]}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.8523120555208387`*^9, 3.852312060587285*^9}, 
   3.852312233884103*^9},
 CellLabel->"In[87]:=",ExpressionUUID->"e3a1863a-ecab-4470-a826-e64026ebf22c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["f", "\[Prime]",
      MultilineFunction->None], "[", "\[Rho]", "]"}], 
    RowBox[{"\[Rho]", " ", 
     RowBox[{"f", "[", "\[Rho]", "]"}]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["f", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "\[Rho]", "]"}], 
    RowBox[{"f", "[", "\[Rho]", "]"}]]}], "\[Equal]", 
  RowBox[{"-", 
   SuperscriptBox["\[Omega]", "2"]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{3.852312061172146*^9, 3.852312233884355*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"035bf759-598a-40dd-8a82-62d8a37962fd"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "fReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{"fReplace", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"DSolve", "[", " ", 
       RowBox[{"fODE", " ", ",", " ", 
        RowBox[{"f", "[", "\[Rho]", "]"}], ",", "\[Rho]"}], "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "  ", "/.", " ", 
    RowBox[{
     RowBox[{"C", "[", "1", "]"}], "\[Rule]", " ", 
     RowBox[{"C", "[", "3", "]"}]}]}], " ", "/.", " ", 
   RowBox[{
    RowBox[{"C", "[", "2", "]"}], "\[Rule]", " ", 
    RowBox[{"C", "[", "4", "]"}], " ", 
    RowBox[{"(*", " ", 
     RowBox[{"Fix", " ", "these", " ", "constants", " ", "later"}], " ", 
     "*)"}], " "}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.8523120814494*^9, 3.8523120845453176`*^9}, 
   3.852312233884851*^9},
 CellLabel->"In[89]:=",ExpressionUUID->"f81d920d-cc16-48c4-a2d3-d83b98bd59a3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "\[Rho]", "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{
    RowBox[{"BesselJ", "[", 
     RowBox[{"0", ",", 
      RowBox[{"\[Rho]", " ", "\[Omega]"}]}], "]"}], " ", 
    TemplateBox[{"3"},
     "C"]}], "+", 
   RowBox[{
    RowBox[{"BesselY", "[", 
     RowBox[{"0", ",", 
      RowBox[{"\[Rho]", " ", "\[Omega]"}]}], "]"}], " ", 
    TemplateBox[{"4"},
     "C"]}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{3.852312085617736*^9, 3.852312233885172*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"1de14608-a1e7-4fbc-95d9-0eca09afd226"],

Cell[BoxData[{
 RowBox[{"\[Psi]", "[", 
  RowBox[{"t", ",", "\[Rho]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"t", ",", "\[Rho]"}], "]"}], " ", "/.", " ", 
  "psiReplace"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]", "[", 
    RowBox[{"t", ",", "\[Rho]"}], "]"}], " ", "/.", " ", "psiReplace"}], " ", 
  "/.", " ", "fReplace"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", 
      RowBox[{"t", ",", "\[Rho]"}], "]"}], " ", "/.", " ", "psiReplace"}], 
    " ", "/.", " ", "fReplace"}], " ", "/.", " ", "gReplace"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "psiSolution", "]"}], "\[IndentingNewLine]", 
 RowBox[{"psiSolution", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[Psi]", "[", 
    RowBox[{"t", ",", "\[Rho]"}], "]"}], "\[Rule]", " ", 
   RowBox[{"(", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", 
        RowBox[{"t", ",", "\[Rho]"}], "]"}], "/.", " ", "psiReplace"}], " ", "/.",
       " ", "fReplace"}], " ", "/.", " ", "gReplace"}], "  ", ")"}], 
   " "}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.852312113561346*^9, 3.852312135836295*^9}, 
   3.852312233885436*^9},
 CellLabel->"In[91]:=",ExpressionUUID->"67424cca-21f8-40d9-a6e8-d2773ac4bd88"],

Cell[BoxData[
 RowBox[{"\[Psi]", "[", 
  RowBox[{"t", ",", "\[Rho]"}], "]"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{3.852312137915175*^9, 3.8523122338856277`*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"cf58a090-c4d4-47ad-9ce1-680c1b2ebc82"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "\[Rho]", "]"}], " ", 
  RowBox[{"g", "[", "t", "]"}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{3.85231213791813*^9, 3.8523122338858023`*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"47a41d0a-636b-4b0e-9b8e-df142f95a5a4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"BesselJ", "[", 
      RowBox[{"0", ",", 
       RowBox[{"\[Rho]", " ", "\[Omega]"}]}], "]"}], " ", 
     TemplateBox[{"3"},
      "C"]}], "+", 
    RowBox[{
     RowBox[{"BesselY", "[", 
      RowBox[{"0", ",", 
       RowBox[{"\[Rho]", " ", "\[Omega]"}]}], "]"}], " ", 
     TemplateBox[{"4"},
      "C"]}]}], ")"}], " ", 
  RowBox[{"g", "[", "t", "]"}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{3.85231213792045*^9, 3.852312233885983*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"109aebb9-dff6-48cd-816e-e19b24001048"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"BesselJ", "[", 
      RowBox[{"0", ",", 
       RowBox[{"\[Rho]", " ", "\[Omega]"}]}], "]"}], " ", 
     TemplateBox[{"3"},
      "C"]}], "+", 
    RowBox[{
     RowBox[{"BesselY", "[", 
      RowBox[{"0", ",", 
       RowBox[{"\[Rho]", " ", "\[Omega]"}]}], "]"}], " ", 
     TemplateBox[{"4"},
      "C"]}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     TemplateBox[{"1"},
      "C"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"t", " ", "\[Omega]"}], "]"}]}], "+", 
    RowBox[{
     TemplateBox[{"2"},
      "C"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"t", " ", "\[Omega]"}], "]"}]}]}], ")"}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{3.852312137925663*^9, 3.8523122338861647`*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"8ab07c33-57ba-404b-9f23-b811c9a5ce00"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"t", ",", "\[Rho]"}], "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"BesselJ", "[", 
       RowBox[{"0", ",", 
        RowBox[{"\[Rho]", " ", "\[Omega]"}]}], "]"}], " ", 
      TemplateBox[{"3"},
       "C"]}], "+", 
     RowBox[{
      RowBox[{"BesselY", "[", 
       RowBox[{"0", ",", 
        RowBox[{"\[Rho]", " ", "\[Omega]"}]}], "]"}], " ", 
      TemplateBox[{"4"},
       "C"]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      TemplateBox[{"1"},
       "C"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"t", " ", "\[Omega]"}], "]"}]}], "+", 
     RowBox[{
      TemplateBox[{"2"},
       "C"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"t", " ", "\[Omega]"}], "]"}]}]}], ")"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{3.852312137930163*^9, 3.852312233886404*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"19cf93fd-496e-4d33-bd1f-ae644602c89e"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "psiSolution1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"psiSolution1", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", 
      RowBox[{"t", ",", "\[Rho]"}], "]"}], "\[Rule]", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Expand", "[", "psiSolution", "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], " ", "/.", " ", 
         RowBox[{
          RowBox[{"C", "[", "2", "]"}], "\[Rule]", " ", "A"}]}], "  ", "/.", 
        " ", 
        RowBox[{
         RowBox[{"C", "[", "3", "]"}], "\[Rule]", " ", "1"}]}], " ", ")"}], 
      " ", "+", 
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Expand", "[", "psiSolution", "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], " ", "/.", " ", 
         RowBox[{
          RowBox[{"C", "[", "1", "]"}], "\[Rule]", " ", "A"}]}], "  ", "/.", 
        " ", 
        RowBox[{
         RowBox[{"C", "[", "4", "]"}], "\[Rule]", " ", "1"}]}], " ", 
       ")"}]}]}], "  ", "/.", " ", 
    RowBox[{"A", "\[Rule]", " ", "1"}]}], "  ", "/.", " ", 
   RowBox[{"\[Omega]", "\[Rule]", " ", "1", " "}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.8523121622494698`*^9, 3.852312184930723*^9}, 
   3.85231223388666*^9},
 CellLabel->
  "In[100]:=",ExpressionUUID->"42e569bc-77df-4deb-9cd9-a46bd09322ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"t", ",", "\[Rho]"}], "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{
    RowBox[{"BesselY", "[", 
     RowBox[{"0", ",", "\[Rho]"}], "]"}], " ", 
    RowBox[{"Cos", "[", "t", "]"}]}], "+", 
   RowBox[{
    RowBox[{"BesselJ", "[", 
     RowBox[{"0", ",", "\[Rho]"}], "]"}], " ", 
    RowBox[{"Sin", "[", "t", "]"}]}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.8523121644870787`*^9, 3.852312185804579*^9}, 
   3.8523122338869*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"b4966ca6-a9c6-4dcc-a85b-acaf8b5e44eb"],

Cell[BoxData[
 RowBox[{"RevolutionPlot3D", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", " ", 
    RowBox[{
     RowBox[{"\[Psi]", "[", 
      RowBox[{"t", ",", "\[Rho]"}], "]"}], " ", "/.", " ", "psiSolution1"}], 
    " ", "]"}], "  ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Rho]", ",", "0.1", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.852312187641747*^9, 3.8523121938497763`*^9}, 
   3.8523122338870983`*^9},
 CellLabel->
  "In[102]:=",ExpressionUUID->"74f501a9-dd79-47ae-a6b2-4d52226b8078"],

Cell[BoxData[
 Graphics3DBox[{{GraphicsComplex3DBox[CompressedData["
1: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
FsJxuHAhe68NtBWbpaiQU0K/Q8szvASimIAxW+VP8mOg63PTbfckDbT8Qbdx
WCSOuSkd/Hu3mtBI0imuX5r08Lh7zdtfd6Rwhvj1GdZ7uYjdt52gYpABMoj6
6mMZWaw1SNjaO1gLTK2sp1O9meCmO7tP+x15vOTWKPZ7rhREnphvesLMAqcM
11pwuwJ22uItS5nHqJHdO9cplxV2i7YK5soo4SidWWFitUo09WN8wPPFd9Dz
4NUuycsvCKokHN7UO0DMmcZmGoHrQJDGulNWbR6lbKbwpQ5+A9ZxAaU5PcTQ
yDIkM9h6B5Us7ka+ixkBOV1W50+50kBi1pWN3VYi3C13D77Y+QYCKThXXB8z
Qbuj5FeKy+Q46NxsMY96N5L+HKxWYMAO0ayhqisdHX6p2NlodxujHv21oAMm
Hkg7t/enPZ4R31eWcHvQ0AzAeraT0DI/LLU2LV1IZ8GnO65SeJTXAGYdJyp9
cyHo1pkRTl7Ijl8b3/J9uV+JZmO5c24UiUAOvaMrwvVcWO7VI8UR33pUOtFp
/oJXHNaVXJCB/bxYOEy2rPZUAXihFLrzPUgSqrP3Hsqs8+N1x+OPBMkagGMQ
eDs4Kw1jTAln1B8K4vtPq4xPnXyB1Lo2tI/OysG5cOk2AxJh/JBIttDwYx0K
ZehdezEgD7XrLH5ahIvgMCNLA13qNDThWGsZYV4ENkYuOuZ+iQBZ+gcNezsb
SFzrNxs56zbw2mIdj1dpBmZjLA8knEfADiVTlsOZYzAYLlxUMxgCzs9+kDXU
9wKPEs7037oM8HOgk02c+iTYH3l3If9LA7Jf+eLNMM0K6aYuvgjrnAe6rzTc
Gdy6kLmYpv7JYG5YnCZkX1HwF/BXc4onkBeAD7LO4f8xCcDF7qQ9DYJ18ECZ
vSxWqwO8aci+azwhBPnJmF8WntkCOTwRr9j2fcHLa9tXrueLQlPVcFnl+F3w
2Jir/VdWC4o8grr+QRLw6XWS+uzxAyD6IsDGki4PPXsdKpNgJg2HjMpzWOIJ
4AfjlbtqlPXA/3gnS46QHLzn+MCvS4MIUnOQsWr8KQMa12mOJnbkIe0jFcMX
48Tw6QTLLZOfFajou8Lasp0izHi1yno+hBRqcb1Gae2VSJX44sxegxI8lf1t
glr2GKx0bxrNp/sBUENgTMD3HKB/QsLwlGM+kBZ5Nb57qw0d/KfwsLF2GcT8
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
7J5Pdwbq/51b1kI8Ye+0A/ZOXzVx9k6fw15ZNeyVecJeWUTw/CaRdgkqWK+w
m/VTk3LX2k/KPyCEOTXJUpeaS4tp1gZ7QQO67n2yfF99KZoD3Im5wJ2wAO7E
/DPNkj++ytCTUTbRkZuNqNOOoSS5uEpkCfur47C/2rjn/+dRqC0/ndr7Rgor
UJdzIQaiVGmYaaLo3UYMizaXbdsmi+29S/PiJaVoWfoJnt7Nj4iZq/qTdH1t
vKcmSazqTzW6LU1ssuX3amSRcLZ1+z5dLBzrZfHZRJ32NA0ETBikEeMrnk0z
MXJ4Wpglcp9ZS3hvSfO5yzUTv61zqoXnGuHpPWWZGXPfksjCxwPCzwuRFH/h
1D9zhGiElu0dHSE+LM/D8PbOaiDuv3iuL4PnWhb80XzzOP7oRvBHP1nG8Uev
A3+0FvijK7W6Cp4+lKCpmx4+ZmXXogAu4+bR3rvo/ANhJQcDabrRcIng/Lti
mM/FJKMqug19MeT4ncfA77zrMcfvfBv8y2LXOf7lY+BfVua2M5BT0aa9rbb6
3fIsHL0wk1Ua9pQ4gE9Z8DnHp3ypkuNT7hot3vG1RZaG7RoUujDdghzX2/5w
s2xFW8s7SH6oIl17USt+W0QHYl/Qc90VW0D8wFMsU87xFEeDpzgHfMTqNRwf
sdAwx0ds+H2d3ISZHh3955S4S/jfiBG0bPY/STl56IYOnqsxpKda7d5ddP2A
6HnP0MqAUjKduituiYMx3Tc4rD2Z9BFlVC3K3LC+DFn84qXaC14qBPPwtTAP
D4J5uD3sX3XC/pUI8LeHwB/UvYrjD9oP/iDPpz7bHfIHyJgOY9LDgYGteBLZ
P9RaSENO7Ev1sEEy2uOkKjWfgZeHXY+88rmFbLwyNWynxE/NlH+v33fsJkp5
JSnkfOMVUYTvEWPwPaIOvkeE3wnKk5Ljp0I/zbKjr5ahAKmehOmJV6QDON7V
wPHOXsvhePvA3oIt7C3wwt6CDfCcrYDnLAg85zHgABcBB1i3hcMBpsBbkwbe
2gvgranJcXitucBr9QRe628wn4+H+fw34KSlAL/UiTv2//ildnc4/NJ/eaGx
ZRxeqC7wQlcDz/N34HnOAZ7nJuukUrWXgjic5Rf9YYQbh5yLn5z7rJo435uc
xMeZuO4S17rr8aLYz8blyB232d/BbP0ZuSg5/Kdvv+vPAkmc2NDI2BvbhByB
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
     "], {{
       {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
         GrayLevel[1], 3], 
        StyleBox[GraphicsGroup3DBox[
          TagBox[
           TagBox[{Polygon3DBox[CompressedData["
1:eJxFnXX4FsXXxvfZ3n0eBbuDRkTsQlExsEBRQFARFBW742d3YGEHYmIHqFjY
KNiFgR2oqNiNre/9+d7j9f4x187Ozs7O7s7OnHOf+5ztMOqAbfePoyhat46i
RNunsyjqXURR3oiiVXRgorYTVb5fHkVLqfx27f9P5ZO0naTyfdMoukEn3qD9
lVR+i7a3qHxP1V9S9W/V/nqqc5O2f6n8EJXPVpqs/fN1zU3LKBqh8w5V2bKq
f7fKN9P+h9q+q/qj1Pbl2l9S+2NUp4vqPKv88Sp7WtunVWc15e9U/k7lV2qq
f2rzcJUdpPrLqP5dOraq9u/Q9g7V2Vvls5Ru0/6Kqn+Y6h+m4/cp3auyv1Xn
fl13uvJTlB5U+RPaNpRO1HlfKk1V/liVP6btYzw/5R9V/lHl31J+itI07R+l
up8rPaj8Edp+pvSA8h/r3s/SdddTvdN0rR2U31X54XpWw5XfjXLV/UrpGdWf
qfLXlcYpralj99M3XWsN2lB6VuXbKw1Sfhcd30f3farSXOWX1T1uqfKdlT9V
1xqm/Cjlj1XbHVTnIbX1uPYvUsqUP1l9O6H0dd7Sfqr0hq41TvWXU/33uGcd
e03bROlSlf+g9A7PSueerHOP1vELVPa90isqf0T7M7WNaUvpKe6J56Y+D1Sf
tlbqwb0q7adjq2k7n651KO9O+eeVDlF+WhVFGyodpHO/13ZjpYOVn67tJkqH
KP+A+nCc+nCkrnmm7n0v5UerfFuV91A6VPnz1V53tT+Dd6p6z2v7vMo3VP4F
5V9Q/madN18rig7QNzFF5x2j/SN0fHv19VJtK8a0yv7VdQvlN1fZR9q+r3N3
UZ0zw7i9Vtf6RekT5a/Wtqeu+7HyE5RfQfnZyg9V/e0St3Or2jxd15utdjZS
Gy+q7EXlT1L+JeVfUv5cnfud0svaH6/tj0rvK3+mtl8rPaf8vA23oUccnaZz
Z2n/PeVPVf4D5d9Rfh3lH1b+YeWP1zUH6V7O1v4xKn+E96bytVSeqnxh7d+l
bam0jPK3qXyA8sc3/O1MUv/vUf5+vjUmE+Wf0cUnJv6mVlT9EyvX2U75rZQ/
QflX9I62Vv5E7kX1v0l8zsN6No8oPZB43G6uc+bT9l3VP1Fpmdzf5hSVPdnw
OZPCtR7X8aOU3s/8fW2hcxdI/H11VvmO2u7GOKk8F52jfEv5zsrvr2O3qO6V
3Lvav0v5f5XfSW3dp/QU81jqOYI87+rD0s/6QeYTpRdVr1L5LWrzc7W5fuz6
zCf3Je4z88mhqe+P72iQzrlT6X7mPZ17VOV5jbm5nfLdlF9H+XmU76L8WOXn
Vb4r8w7zntJMnT9E5f1VfpzK/1D7k5Se0zXmUR830fGr1f6aqhOrzoKMA513
vNLCueeQS3TsFNXfVNsVVWeE6rys7eZKRzJXqPxz1Z+qd/OathcobaxzL1X7
T+jY45HnlseYW5R/Xce31bln6dz5VWe7zOPtYuWn1p4/GdePJx7ba6n+rvru
jlRf3lL+S9X7VuUjVXdXtXM1z1D5Ucpf1fD7ua/hd7SLyndX+bXav55t6W95
ssq/V/6PyN/31MTlV6lsuo49q/wM1i+l/7FOqGyYzr+g4bliGnOF6sxiXte5
7ZT/W/npyn8Uyp9UfnHV76o+X8X8zhjSdkulBamnOk9pO1/kteBRxrby/XS8
m9IcHd9R26G67vkNzx9PJ55DJvC9KC2i/WeVnlFaWufOr7IDdA9jVGduw8co
H6Dy5ZS+Vht7Jn7/yzNmdM0f9FyXVZ3bUtfvofJu6vPVqn+29r9Xuldpsuqs
rX6+oHQ0Y0/bF5WOUX7XxHPAAqpzb+l5gf3hav9HtduB+Vn7yyp1VP7f2GN2
UeVH0MeG+/AAz7/peotre2hpOWK22nhP42RB3pHa/ED5hZRvqV7dsKxyi+o+
oHMOzPxs+c6aSvup/iyVLaw63+ieeit1VPl3tb8f+vGr2j9Cdbqpzlzl/6d8
V9Z9tbklYy/zM/s49nN7UtvxIZ/p+Lz0WedtzthXOk35F1Pf1xy185nSUoz3
yO+wb3iP+6tvn6vtJVX+qeq/pLweaXQ775D5TXUGq/xGXWtr1niVn6vy7sr/
UHsuYB5AJuqp7TKMZ7X9vNIKrC9q/3elvbXfR/16ofb75V3fmnrcfKvtp7ru
EjqXB0l7iyv7k+r2Ydxo/zPVmaE6BeugrrWXyn5S/ivWVdX5UfkXVX62Un8d
O1rtHJW4z1vp3OtU3kf5Gao7UOdU2v+i9PfMt/ys9q9R6t3wXEPZQKXLWFtZ
O1V+Fe8ltfxwicouVjqdd682hqndc5TfUH28QelynXuXOru5HuaxyneMvY6d
ybqTee45RvmD1caBift2lbbnqd5lyCSl5ynq3a5rDlH5V6p/lq7zReV3+rbq
76R68+vY90p7K/2q8le1PTd2335U3etqH9td6Wcd30dpM5Uvr/LDmUtVfnvs
/Doqj2s/357KX6z8DshXus7mGmcXqu8f6rqbKf2idhbT/tlKO0V+5+srfaH8
X+rz0SpfWfkrwjj9UvlnlD8rPOcjVfeIxO/rebW/uNofp3NOVNk5sa+7vtoZ
lli2WYN7V/pHx9ppv33DY/UT1XlB52XM80FmGEd/Kq/pJym/LGtT7fn0p8py
wokq76wG5tF72kNtdVL+KaXRyj9Xec06QXXm03ntlW7TuQto+436eqfyHZnP
lJ+k/IjK8znvvVb5x6W/T9bcUuky5Qttc6VLlB+k6yyi616ka62s93x6afn9
GB1fVPv9dc8b6PhnKr9W5WvpHvupbBOl3srv3fCY30n501W2p/afUt290R1U
vrPOfVltzdSx7rrWvNrfV3VWUL6d8vuzjvD8G36Pj6v/6yntp/zROm+LyuOT
ez6s4XHzh8p2U7pG+XYqH8W8q/y8yu+i/CjlO6j9ltrfnfej8t203T2yfL+r
8rspv6jq1IXX8cWVf1xpJLKgrnu8+r+G6i6o/HfK3638Ujr+hNLOqvNuFdZT
tfNOFdZf5X+vwvqrfC89v7t0/o2MU+VXUNoz9VrHvLyE2vmetVwDZl7WFN6j
UkPHd1ZaL8yN82g83qtzl1c/vlP9N1R/HtW/Q/uPqPwQ7T+v85Zoeh7bMbH8
om60rTmHZV53nmHuziz3skb8W3qdQj6bp+Fy8sjHjOFNVLBx6rV7ouo+rPYP
1oHltS2VltKxddW3j3TtH5AhE8vCTdYX9DLVbaE7oOsoncTYZq2uLQtvorJX
lU5pWE5aUO/iZOV30PEVlM7XuT9XloFPVn4b1XlT6ULVObAMckiQw7+qPWez
7vM98C28WllmOC/IdV/WXm+vZU3X+c+pfK/EcgDzwj0q20wdPlz93kLXeT33
XLpNkPGYM3/Vdjulc5HNqiC/KX+R+r5W5jqs21XltXsblbVXu/foGqPV9l3I
AOiZSleoPyMjj71bdf7Oyo9T2eVKYxKvL2ckngP35ftT+Z7hW+P4jg2P5XMS
j+dlda0XC+/zHSCz8C101nZCYvlwZ/VtcfXtDbXxA3OG2vwzct+vCv3fTXVG
KH2oOg9pe7jSy5nLd1X6QOV3xV57mNvb1Z7HmbdH6dhFKj888jHWpjHMgawh
Siujg+m6vfQsLlOb3VV2vc4/mrVefZ+odIHOmaryI5XeVp2Z2l7Y9Dt5TNsj
lN5U+TRtj1Gao/zLuu5Oyp/DeE3cBnL+vurnhYl125d1/NymZTf6Rf9/Y71W
2dimdesXaKNp3Xqd1PWo86bKLmp6DG6gNKlwu6+q7Pymx/gT2h6t9Fnoz6G6
rw1Up6PStci86s8/On6/0up6BstSlng8r6pzZit/ReI5lzWY9Zd5lOfGXLq8
rrEbOIbymdq+vXbfDozdzqnK99Z7uLT22opuh47H3DdA/TmIdZE5Svm/mHuZ
h5AtlZ5i7Gj/AL4F1cm1f0Lm+k1dc+XMaxB4DG0OZR4uLC8iK16UGYMAf1gP
HEvHjo+8Pl0W5BbwjJuUblT58MrzI3PjPmrjeuQYZAmVHau0QO616V7WJpV3
j133MuXvVtk9hZ/p3shUPENkmNjjnHkD3A387Sbl70GmCs9zsvLjlP898rrW
FT0E2SxxOf3cXW1ezviJfM7VyF7Ie6HNcQ1/O4s1fewmtXFzbZnnG2SexDLh
YB0/oTJ2hw6O/o6Ov21i7A/cby7PUGkDrqntL4Vl+AFqp6/KmNZ2SHx8/obx
Qs69WeU76hv6Wf14Us9+XXAIXW9fle+isoX4hpUfxHfBJKyyfVRvldRYx+lq
f9XUuMw6ifMfqHyMyldLjcn8rrSSUufI1/hZfesDDqf2GujAhdvmGv8qPz6z
TIM8s5rKn0LnLfwN8S1tqe145kHlz2XMq87qTeu+jP09Uut3PZteL1kr5yTe
XhJ5u1fIMyZbpdu6W9fZtzLGunzhewQnPST2+GBs8N7AZMeFcQi+xrw3jT7r
nLVT6xfcy/eR9YzBIT8oHEOGvy6MOfToQ2OPXcbt9WEcX6fydRM/w1mRsavV
le8TZMw1ld9I27vV9yWb1knJs3az1u6nY1tou6raGab2t1R+OdXZWs9qUtPY
D+sxdRdDPlf9gTxb1fkl83fNOeenLt8cPULPJ6ssbwxUm5um1h+fRt5rGl/c
VudeETCmbVRns9R6Ivos9dFhd0tcjs64k/IbKb9ow/PAn4X7fTa6WmWdi7Xo
mtrrEX3ZJvTzUPQh5Tfgu9O1NkwtJyC3MOaRXZAb+wXd/xBtPyqtO24cnuF3
zDM6qYuOjSgskyKb/sD4V/lk3Vehc1ZQX7bRdqvI8gnXQkb5XGVLq843fF+x
+7MqMpjOTdXmaqznyt/CnK/8msrfDB6n/CGJdTl0pa1jPwfkN+ZX5tl1G55L
+yu/ZsN4+4Pg7arzodo4Q6lXbn0LveurIP+/VHh9X0Jl7yXGKKaojc+ZG9XO
a+rX67WPTUcP5Z7RSVXvFeVX0rkrqp1FdW/vsr41fO7pQRfYqLRuvImuvx5r
p9pYEf0z8TfFdk7ID1Y7rxUe251U9qnSD//JbCo/TeWvsf7xLSEXqb3vmaxC
fz8L110bDF7111H+74b7vILyPWvrfcyXk1PrkOg+6JHkd+B7V/7V2nL7rmqj
Y+Z1jeNvhTpb6brLIecxj4Fpqd72Kn+ltv44FtkfWU7l17Mepe4338UWDefp
P/16OfTtC13nadXvGVmXBEdAfq4Sv1fWx2tT53m/jHXqoW8erPNeUn62rntg
yFN/B+R39XOY6n7NO1e6QeUPpn7u16v8GdUZ07RudGBq/A7Mc5va2P4B6KHK
L1x5fkDHfT707Umdt5jK11D5jjr/Pl37CmTUpnWoo1i7dO5Tyi8W2+aDTIrd
57mm8X/G26Da9oKDdHy08qdXttE8pPwq+gYeKKyHos+jy2+Anqj86qqzB9he
Zdx8hto8r2ls7GPkDOY/XesplZ3atC64CFh0bR1+P727N9D3I++j27OW3cO6
lNjewThknUCPvil1nvWin9rZQOk45j316UtkDJUvE8Yt9S8FA8ksDyylun+i
A6fWO7kWuufWtXXPfVR2GWOzMlZxRG08Ajn81Ibvh3u5L3Ue/eV3tXmH0nuF
25sV+g8e8onyRyl/ROF5jTmtxHbDnKnyBXVeXhkXK1T3MOZW3peO31h4fzi4
CN+76v+p6x6V+Xv/Tufe1jS+tbnK9wnzwAvgFSp/nPlI2+d0D08kxpCfqY3z
JurDTYXbHaZ6J3AdnfsjchkyKpiothOV7lS+jl2HNbG3yp6tjU1vp/J9te0S
GS8BN2F+PkjHb6ps05mi7ezS3wh4BHoXOtcZqnOm0ucqn602L0bfUL+ujj03
Msd+orJLlY7HlsN7Vloo9/w9p/QcPkH9uy7Mzd/q2VyPHBB5Xme9YW5/Xdvj
WcMi20ywnYwKfeBZoQd+qe04pVPU/rmpsU7KB6k/o5P/xwbJgw8OVvkeyi+l
4jjxc1hZ5d+qjeuUrsytz1MH/LBfw33YNKxlPCvwpYtqY1wnab89tpnMa9YS
4EzYLJDL1N6j2n+Q+SI2tohMspHKlmadaxhrpJxnsrvKT6lsE11U+b+ZB3Re
Q326Rc9nI9X5im+htC1zmursp7Sqzn8zsWzBev0pz7+yXfkz5a9QOht7JHKo
6oxXnTVU9pjOfUj798ZBzlf9OYzNynaMvcGfKtup/2l4vVyxYbnoyDBmboid
B4ubpzb2x/NB1p5YW97mGZ2ceK0HHwUn3Tqy/ZZ3OkT5lp7fdurfcUEuOCnU
x45DfTDVnbBpKN8buV3tT+DedF8bN3zeJqybietsqrK9dP2Va9uOkUGOCH3e
U2XnVbZ59w/30x/5SuUHKK2u/Se13R+5QvmG+lmrfxtHthud0bD+OylgpWOC
3oQuckZkrPu+yusIeOYQdIaGx9/PDWPU2AseqDzm5w969D7Y1iqv9dhAmBs4
j/kBPP/eyrJlH+yl4MM6tmRsO8aBKl8mtu0R3fNB1X+w8nd0n/KTK+sF6MIL
FLZXYj/4qWFbBjYm5hnkcGyHPyotwniObTM5QPm99Qwey8xnWF/tzMhtM+0U
G28Grx6Zedw9o/zluo+BWoNOVb2fuZfY/IMz9Uzmav9x5VdWfu3ENt+eqZ83
PIHllF8p8dr0PN+10o+J8Yr9YmNT6H2QPsB8Lqk87rn24rHXz/0j21WxqT6J
vK3zf4/Nh3iIdbG0DfPN2PgWPIfxamMj9fl09XkP3csjmTkDF6v9Dyvb+8+s
vHbSt/WV/lXqqzqb6pwtCo+PrUrbwjaPbOf5rGE98SWVdWh6bkOHQ5dDp9tX
15ma2eZ+g9o/sLad+8bK8zZ1sKffWlkXuEv5OyrbX5CPv24Yx3tcbdyWW/YG
A5xY+f0io3/VMMYIDjmp8jjEBojN79uG9bDeiccA+vxjSts1jLPdWdn+db0u
sqmez1VgMmE9ZY29Ablb5dfkli3+VOqu+v20vxnyZ8My0B8N26cerSwD/B3m
FeYXsIuHwEh1bG3l10Smzf3N/YENR2kDlfdtMHl7PrwGvVz7PSLPs3BSHozM
Sbgut04H/+HmyjYsbJ2fNsxVQOdD90N3/kzPeKj685v2l42Na/4vMiaI/a9T
ZJ3qu4YxWGy/k4P9d4C2R+tatyvfHRk9sQx2pK55dGnM+X/M5aUx8LdK46Fg
oV1j22ZPiayjrhC7/Ea10yW2bg5WBGYE7gQHaPXYNs09gkyFnHWI2j+iNI79
gbbvYb9R/pIg36NbwGFaWefepvJ9KtsosTt0i21PQEforPzYhrGgrXVPbyid
p/33K9sH0T+2U1nfzLYScHawHnAe5ljWSPRlZGE4B8jD8BuezI19XqF2LizN
xxgCTgUmq/zg0jb6bZQ/uTJv5xbuXfmLSvORWIf6xsaBN1E+Zl6PjG/tGmwG
76OPVOY8vIMtrLJONF39Pb+w3Piuyt+svA6uDkZX2FbxHna9ynL4GbqXMalt
Cs0iyB6xMdmesTHqITq3v45d2rD811D56iq/Ss/pC+RpHR+l6z6Q2Ua/mfaH
5rbnvRebe/Rmw3PL+NIcjAvR4ZQG6HqXI9vW5vT8Af5cmie2mMqu1bHpkeej
txvmIK2Qeu2CM3Nu5XWONe5s5c+pzIMZpr7ck/l5jkX2r833Wgw7Gt+J2lg+
tUwBNwzuwxm5+Q8LF8ZwDsDGlrntqSq/TWW3VbZrX6373kTzwCW5cft+yl+u
/FWVZQvkiivBTlQ+VuVHpLaNvorcqL5s1/TaQBnfIjbTHrreeG3PUfsroqMn
5gshH8N7ekXly8XmRJwdBf6Fyl9WfnmVX6H8WOYKtf210mW67kpqZ63EXC9k
qXcbnuffic3xep1nru2jsflhu+p+H8zMX2JM7lubz7QW+ivYcuxrbhz7un/p
Grur/W3RJ3TepNzr6kc6N0Gnizw3x2F+Zj5Ow5w8S9tG5fUXPP333NjRwbrm
Ak3bmcDTb82N58CV+Q39TPnrtR1feL3BBnBjblv8Q5X1UMbnV7SN7qn8r7kx
HPDLV1X/ZuQD1Z+bG+fsH5t79If2O6j87sr8IubwzyrzdpjnsVU9n3mtY60o
w3oBlnVqba7ESDA6HR+k8kL5IcoPVv7LhvuIjX5VjaV1wUjVp10K62DoX/Pp
+o+AMateGRs/2C4yF5A1Chly/sp2HGzHyNvgxMjVAxuWO5E55zRsM8Ne9nBl
XZg55OvK+jj62q86eG9urOCLhm3G2Iu30na9huX8eVTwcG4Zvp22hfq5rfIT
dN0BrMeRcSbwJt4Rslu7IL+BaYGjsW5vhl2h8lpWqo249HPqV5ovhFwRq/0H
gpybBh1zR8al+nmLyhcK62Mzd/9u1xjp37J+VeXGzXkW+wbdD33nR9W/W8dW
aRh7BFcBX0nBEhvGf5CjkbmRpXkAU5Q2bFgPzQrPwUlsHYn1GjyzUXj9Z01e
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
wUvDuXwX/wcEOqqA
              "]], Polygon3DBox[CompressedData["
1:eJw1nHngFeMbxWfm3pk7c+cbEVnTopWiRJGiKFREC6K0l1DKLpEtCdm3bCkV
ZSdbslTIvq+R7GlRKWTJ8juf77m/P+b7nWfeZebO8r7Pc8553vpDxvQ6NQqC
4M84CIr6/3tZ+3kQLCvJ1oHuWRDsVBUE7yRBcEEYBE1Ufoi2LQpB0JV2Kj9O
5atV/zR1dJH6+Uf7R6jtgSrvngZBPfV3jOxDZB+msve1faf2k9TfwSovq787
1HYPlU9W+29VPlB2b9m7aX+jtlZq/6XqX6Xygtr0ld1f5ZvVto76P1x2pj6v
0/WM1LEW2n9M5f1U/xS136T+FsteIPs42UtlfyS7nfaP17ZcdqL+T9D+Em1v
qX0L2TNVv6/sj1U+VfWv0bne1vaejp0je5DOV0+//3PdnztV/0zV/0Nlh+h6
6qn8PpWfputpq/7ek32c7F1U/zPVv1n1u+v/tqrPQ5ig8i1Ut562d2SPk/2T
fmsD2R/J3iR7oNrXVfulaneH2v8uu6/sVepjjOocqvp/6/pKsgfIPk/X86f2
u+p6Wqr93eqricoHyh6j9tvJ3lXbJ6r7hOy56i+TPVX2d6rfTHZ91T9W9Y9V
+TSVNZY9QPZo2Ytlv6SttX7fItUfTH1dzxe6vrtU/rLKXtG2t8pfV/kUXc+/
up5ean+C7INVbxvZo3W+s2Wv1/Vvo/q3qu2fsssqn6Py89R+rexbde7vtNVU
vdPUx1r9r1X2u/S7ys+SvafKR6vsDtm91HaUtr/U/4eqU9T17av6gfrbUf/W
qN6HuqZtVcbhx/RnD7UfpeOzdewc3k/9njrq42z18ZDqruHZa/9h1X9K9laq
c4bqL5F9qa53gcqfUv+h2v+k49+rTmPt76Dy63X+vdT/6Tq+UMfuUtmxfBPq
7wqVhzp//yq/Q1dyPtk7qH571T9SfSZq/6vsL9Sujtqfr3M/ozoPqOyewNfb
UuWnqv5dsh+Q/SzvrOpvqfo11H5/1S+ofhOVbym7veyi7GayX+BZqf5Zav+a
6if6PYmu5QRdS7vK/U11fTvr2Fk61lR2M21nav9mlddWfweqj5L620f2+err
JW1jVX932an2d9d2ovrfVXVW6v8HurZaOpe6CbZX+45qn6qsLfdTZV+pbT/1
30X2OlXaXu33V7s/ZJ+nutvJbid7o+w+ar9nlb+pa9TnVNknq86e6m+Bymdo
/x7ayB4p+3L11yr3u/So7ANU/0iVb6/y0ZSr7FVt5/F9yf6a9032Pqr/A89f
9iLZX+o66+t8F2h/qbYasg9V+dHqr46u52Pdx2tDP79tVN5G7eurvJXOdRLv
nM43T/YqHf9ObRvybTK+qN2OOvcZ+v038j2q7hHaaqv+CO4Pz1f247IflL2L
9vfR+fqozWK12Ubt99L+1dpfr/IhOv9TqnO/6k+THcluK/s/lW8v+0z1t6Ou
r4Ou43bZB6m8p8p3VP3TZD/Ke6Q6Y1X+tOw7VXaXtm1UPlD2MJXtrnNuqXOe
yDutvr7SVlfthgV+X3NdX12Vn6vyx2S/oPKPVb6dfvME2fPV34Pqb5bq76nz
Hyp7S9k9Zc9U3XXahqn+O7JvpK22C9TfFH6Pji/Xfqzr21f2D8xHup7eOtdO
shuo7CdtzVT+HM9Lff+i9jcyZ+kcrXO//89q/1n6U/n72j6XfZLqV+l6rpY9
WnZjle+k691ZWx/1XyfwdW1QX3sUfX21c7+fh6n+KN4flW/W9fRU/dqyR1fG
z+dV/q76r6n9rbSdzNit8sbqa722FurvDZVvofNfo/JTVb+pyjeov//U3zGq
30j2fnwL2hbRn+wfVXeltj9kf8D51f5oxmf1ebjavKr2e2j/Cu1/q/LvVfcH
bZtU/yW+B5W9xvgku73OP059L9T2Ssm/F79hhvbHqnyN7GWy/9L1HMW7J/tb
XfciHVuh/a21naZ7db76P1z1b5W9MfPvfUD1f+X9LXl8baR2D+l843Wuxdqm
69huKp8X+/mdr/rPyz5C7R9Q+zvV38Wyf5F9B+dTnVNU55nY9+9i7b+p8t4q
v1D1e6r+bbITxio27r3si3R9l8o+WuVzZQ/gXdO2nHlC288qf1zlcwr+PvaV
fWXqb7et/r+i7SDd3x90ztqqv3XJ17K99ieEnp+vV/vz1f4gtXlR1/eL7tdh
ur4vZH+l8stVPlTltWT/i/8l+zmVR2r/r8ovkz1Q5Tn+hq7tG223lXzNC9Xf
r+qvq+p/qfb7q/25+Gwq2yD7KLV/T/ansrvLXsJ4r+tdrPYv6tgY2a+WvY+/
dZaOv4H/I/sw/Bf1v45nod/zouynGatkX8i7xPNQ/+/gr1Tqz9W17av++6ve
K7L30fVsL/tlXeNg9X+2yhdom6Y+tlV5TXxD9iv+SWvV3071X1L9QbJPrfgT
L6j/z/EHtb9e7e9Wm5N17Cbtf6rtwpLHy+103sHaX6nr6yv7D9ktZV8le7Xs
9tp/GZ9PbXdSf2t1vqnq83LZ/WT3kH2M7LqyL1H9EbJbVnlMvgf/AN9V2xUq
P1nlY/T7t5b9sPqfLPtwvjfZu6j8ItnFkuezVL/vYLVvlNufukrlg/GXK+Pp
lbJPUfnjKhus8+2i6x6q8i7qr7fKd1b5GbIb6b60Zq6L/HzvU9kGtXlUx25V
nR6V+e4a6qu/y9TPMfi3qn+E6h+i/Xe1fa3yc1XeX9c/Querr//DVKeN+n9A
5dcV/H32kr0d37vKLpP9Ce+Sti8ZH2VP1PUNl72b7Ptlz9G1tFV/vWPPF7eW
fX+Hq/0psq9S+ZvaHsGfwD8o2f+v0v3pHXp+25Lr0bHxapPp/K0Y67X/E/6U
2n6g7Xwdmxh43v1G+1nR8+/VKntL2/iS/cvDmZeIKSL7mP8QTxADyG6t8mtV
911tj+nYBbI3JR4rN+v3bK36H+Hf61gP1ddlBRfLjlR+nOyOfG/4aoxZqv++
7KG6HwPxuWXfLXt37TfXtg5/V/0dq/J+shsSuzDfqq8h2lap/DiVN1ZZR+Ih
bT9Gjr0GVb5JYrDP8O91PUeqbAu+L+0PV9la2b/wvWv/M22/qe7L6m+Jzjdb
fVwv+zeVX6L6bVV+A0GgyoerfLDKm6p8hg71lf2I7Jmyb+D69DxOl32A7Lqy
Y+1vxB/iHeEeqP4OujGvq99T1d+Fqr9MdX5S/dk8b9nfMufKfkL2SLX7VNuv
shdzfrVrI/t69bWZcvXXSv3tpGOzVH6i7Aayl6veTJ4f44n6mx/Z334hdrx4
mezP8Q9Ub1/Ggsr4eYXO/7Xq/6zzPY4/q/KnVf6o7H8Zj1XWRr/n7Mp8u0vm
8ZpYqmclXmupc1wY2L/cW/sj1H5D5DHiVtX/Qe2P1vH5qrNc9vf0p3bPqP5z
ZccvF8p+QfZ+Kl+We5xifBql8h9lX63yt1V+p/ZXaOur8hdUfrfqr5R9vOyF
vH/EAtpq810zPpTtf9bCJ1D7ffW/UWzfdbzsPbTfVsfGEY8Qw+jaO8q+KPSY
spfKj5R9Xegxa6HO96X62zbxeHih9j/XthX1AscHRe3vr/3DVL5a9/czlac6
1onvrWz/bw/VG6vye9TfT7IHqfwNlW9W/TXEo7Jfk/0CfqHqzg/tg30i+0zZ
82Rv5J2JfS+Y+5/XsUnM7YljKWLQycRNiZ/dPrInEjvKfjZ0DHApvrTsx0P7
3JfLnpQ41iFGvUfXslbbEJ3jLd4HxgFiOpUvUPl9sguyu4SOUabr96zKjTOA
L3wle7XsiaqzhPFW9rfgEyp/gOdV9ny9BL9N9vGqt7/2rwmMHzyr/k/Tsce0
/2TB420blU9S+U28L9o/TMemaL8Bz0/2UbFj0Yd17BCd72v1X1/HTtSxA2Uv
l72T7EH4s8TyuoZLVHdHveO/qfyD1PvE4L/Kfk/2DrJHMSbknr/wXfBhirI3
4QPj+8r+Ff9SdnP6ll1W+R+yb8KXk92XWDN33fr6Pf1lZ7nLGhUce27QFhYd
gxKbricQLzpG7c3cofrzZDfQdY3U9qHKlzFf46MQ25WNXawt+P7+qTrruHfa
vin7m+db3yB7I99XZl+Scy7n/eScBbchFmtZdl3ejxvwD2KPlfjwjNUlXU+d
osds4tnjGU8DH1uvvheDYRQd//yjsqPKxko49nfZ8SVzey3ZB2n/L20J945r
UPuFqctGqP2/Zcdf+EL4RK/revZT+SfEzar/luz9+eZkfyb7ONWNdU07c78K
xsc6lR27c44OjL1lP6tY5f9pv0/ZvsF2OrZB538t9f5JOn+vsn1afFnu9wGy
f+OZyk4KjvXBDMEKifn/ZKzPHHsRgx0DllH2PnHZJu2vVvnegfvopGt9Xf2f
K/ubyvuB/9ZT7/iNuqb5sb9FfPc3ZW+lPnZN/T6cKftG9XW46t9FnCF7isq6
y75T9lNq83rZ8dB5sr9R+Wuy95U9TvZX4CEl+zqP8bxkH6CyLtqmyN4k+42y
5/PxxOWyO2u/q7ZbZe+p+7NA11lX7R+R3ZXxUddTQ795dx1boGP/Jo4P79f+
bqHjmNqypxf9Dm4i7pU9Q3ZblfcjrpL9kOz9Qs974Cvzi57/PmA8l/2k7Imy
f5bdQvbzst8PjSs2kf100fhiL13rcPxVHZurYy2IRbXdov1bVN5R+4dou072
P7ILuv7nc+NW4FWh7Ody4xLgEW+WHf8t1XXvoPrn5cY/fgXPCfx+gfesVHkz
/OPc8f26ouPvs/V7aiSeS4npry07vluh+k117CKdr5vsqUWP+fsRi+DTq3x7
4pHceNb3RceXu4MPyL6BsYY5TfYrsgux38Ezdb6/td9RZbnO9ya+d+Jn9Qnj
f+y5rAexro5lav+y2v+j/loFjn9i1T80tL81V3Yo+yCwA2IC4g58ZNm7Fzx+
76B7Pado/LmFrv8T9Xdg7DHiG77h2LHbj8Qvqn9H4lhrv4LjwZNj+y7LdexK
/PjEsc6+lfhulLZlxPKh423uBbFT/Yp/ulZ2jcB4yhS1n5H43W2v9u+o/Ae+
VZVvpWN/4xvq2D6hMYWjwUdk7yn7d/wl2dcmxibAsF/CN5P9Xmgf93N8x8Tv
HhjDdeBOar+Kuadg/IVnv3Pg5/sHc4aO7R16fF8b+91pqPKW3BO+Ux3blVhX
39d03b+3iZ91T2erbKbOdY+271X+g7axZeNBdyW+H/fm9kePTuzfP5A7Plwd
G89/Ez+jwnXUkP2W9r+TUTM0Pvoz45nq/632vcBfc8dTh8q+IjTuyvMDywB/
fSQ3X8INPVb136j0X1ZZVejv+0m1/Tv0N/+j6tUqeW5ljiUe21Lb4aFjmkna
r4lvFRrzHqy+/8W/1u9fUjS/kmjrEBpzuVD7sbZ2oWPalqq3l7aXVPdTbcN0
rqElx1pnqc7XvM/a+keOkc7R/laJY62a6q+ZzvURGITqr5D9nb6Hx2X/W3CM
8Yns/truBX+S/aju1+epsd9ZBccKS1PH3sQMG7X/sI5Nx3eLjJ18kRqbB0MB
bz89NbdCn08QS6bGrufKnsdcmRlrof7TzFWZsUswTPiLi4lRKIvsX1+DrfIn
dOyoKmPa+HeXESfJfp45TfYJseeDWZl9vYVgZmVjGGAXYB474XvI3kX2awXj
8RPKxq7ult2zynME39f0xPPNvZmxPzA4+JMe6mNm0ZjIqsyYBVjF0breK/FP
tI3E99D2Udn+zfDAGO9k7T+YGiscVrA/fXBmLGBb5uMqz+9wX6fz7Zb9vMDm
woL9DfyJUwNj2p1l76r2nWVXyV4j+9HUYzOcyLepr4lrgZNj/MK/Aasnxhmi
/XGZY0NixI5VxhjwH/bS79+tbJ8BX+En1f+gbJ8N+wttnars0+DL3BzbP8Jf
Gqv+dlD5INlnZY6ViZnxV/FPwRrqVfwV/BO4tzoFxztNMnOLNQp+1zakfja8
czfKbpSZO5hQMHdxVuX9O1HX2xwsmvFC1xPqeAvel9RY7a66vr1kL1Af89T2
GXBdnrfKxzO2qzyTfbbsO2WfxFwP1i/7qsC++o6y3wTzDBx7MRdPzT0/7FjB
wsHE4W7GwrWAzVbu7xzmJtlzUo83zB34FvgYzI31wElkX6DymSo/Xe0Lsj/I
jCXMAJuQPaDy/cyOzWWdU/m+TlH9hiqrzW/Wfh/1WYTLrNz/+5gXq4yvXkgs
Skyhtkfq+mfpWmrr+R6V2wbbv5r3U/VXwodpf2bJ8/szqbmfMTrWvcr4NXzY
OPV3nfafTY29nKnym2U31/kvZW4tmO95UMemFYwZn639m8ou66LtFu3vkTkW
nSh7gOrfpmOTtT9S57i97BiW2JVjc8rGyMDGphbMh3ZS+RC1nyL7iCpznPjr
zRLjNYep/NqCMZWZZWPWYGFgYnOZn1Jzt7cXjAWCt8IVgAneq/1XU2NPNxXM
V3INnPvRyN8rPg6+DWPsgVXmOwbgjyfGAzvofAMCcyz4bs1z+3b4cPiiB+f2
DfFJGWuaqv49RY85RxB7psbCOIavDP5yQGSfGd8JPDiL7EN9UXZ/k7S/pmBf
DPymTWSfDH/9s7J974lF+8Nf6nyXF90GX/JAbfuG9il3royfnbXfpejxFB8S
35Fj/arMN7VU/18l5vbgB7oXzPHBffI9gwXBgeKbd8jtS+Ojw9UyH90WmrPF
vz1e9knaH6nteLhAHdtP+7/ofTyoEm9w7Zdpq8P7pPpnav8FXUMf1T9WdV6k
b9VbXTY/tg2+EuNj5vHyn4IxQMZP+OTaoY+10/5abf8xdhXMtYzIjR+CI65T
2Q+ZuRrq4G+syMzl4JTADYNP7VUwR7yKe1829ri5Mj/A/zG2EgMPUf9nqv0Y
1d0itT//AhyH7AlFxzNPy75A++dre7vs5zPh//Fj2feTsneJl1X34dS/9Qid
4wSV5yqvq/LGBWOZNWTXK3p87sbvz4w91ZJdk9+aeTyrrzpb40tl5vIa8L5W
mbOFq71R3/847a9JrQU4tGD8667MWFcr2afIvp0YBP+Qb77KHAD+8C2JuZCJ
ZWP3cCKdq8yp4a9eo/KDq8z/vi77ctmHVJnjwN++PTHXcn/qWALOpZvKL9Gx
PsxtOt6V+6/z98FfLhjbvjQzNwTGfaLsK2U/JLt5wdqTazNzyWhQ4JvgGOEW
wWzgjyfJHlwwhnqR9n9JzUXBSXVT/fE61lX754XGYrfMfS+Zb+EbBqYe++B0
8H9nq83bat9G9izZTVV/cNEY724Vf24ovmDRY/MuOtaj6DF6C+3/pfbTAz9T
tAdxZv0KGgT8waVlx5r0MVT7W+V+ls0K5sLBgzsUzIkfpvZnlM33nU0cU/Z4
xbe4smAuA/0JYy2cxqFV1sd8q/6n4XNXmW+Fz7g+trYHfITYGI3PQJU34BsH
v0itTYFv2rpgjQraAvCZ60NrDAapfkPZI8DL1P8Jsnum1p8gONiC550amxuH
j69zbhNbe8R8yPN4R+33jD2HH5uav9ol8TuxWP/rJOZuauiaF8HXJ8baquAo
mTO1LQ2NB3K/Y7XfQff2dJUfk5rf2jnxOe9X3W7a5oQe085QeUnlxyR+R54D
b9b2KfFTaD3NDszr6utnlc9XvSixdiLSseGp8fjmiee4Jfq/a2JscCv40QRg
yFqNkOtNHA/04jD+dOJ4/SjwHNndUvsLWyf2qZ5NHB/jLxcqeAjxdTeGMzQ3
ifFm7l192ccmxi/xj24n3tJ9aKLtksic+dfa9pd9W2ROtu7/8dDAeoEnY3OJ
EyJzFpel9tHwzcBA6/8frw3MF8HvfR5bq0GfjWRPTqxFuiiyngFu6rzIHAB6
r47apobmM+C/4bjXqP40OAkwtJL38d/R/xBHEE+g+Xkyt4+GbzZO5WvBq7im
yJzp+xU9SI/EmO8nifH2i7XfSHVWpOZ74Lngt3qD92m7WWULI+vV4Ozh6jl2
A74TzyP1GPluZh8U3xN8+F310yGxdqMOHK32X4o9H9aS/bH6O0nbnMAYKBw2
mDtY+xtgVLI/KtkXAM9ibmSOJO4n3mduZY7dMbaPgj5ve22rI2tOGsSOP9dE
1lBMA5fRdmVoH+xX5uTY/imakxB8uspxMvHxs7SPHZu9FZqnRhPI+A1H3VjX
90HJsSqYF3qkD0sea8DM5qptV66nYE4JXwOf45XY50ty6+emx8ZMq3LrGe+N
Pee9p/t1YGKudRe1n5tYL0bI/5Ou4aHEeAXY2MbQ+jl8dnx18J07dC23l6pD
q2BFaL6wpO3f0BjL04nxpIOZ/yNzf51K5mbhAB9Uf1szJsaOAV/PrMc8IDEH
BZ9HjEFsUc3nJNYPoeX5hXcyMf7VCX9D9rOqv63q/xzb535cdi3ZX8XGYB5I
rNdAe7A+NL/4s37LutA+2yOJ9Wxo536V/URiPAf/ZbPsOYn1XOo2WCN7vna2
Uf/riKV0bJ7KN8bWzvwVmnvne98qMAff9P/4kuxL9Xuay75b9nLZl8v+Oqng
bfgHsr9PKnyO7H1kP6a++/COReZXxut9aMScnzimOlf2rrJHJcYQllX4xKGJ
Y6jfwahL1qKhjzlPOw3xORLPkQ+p7EHG7sD6ki91fGBibrSF7M8y60H7JY4J
NybG95bi34DvqL8mKp+QGKP4ManwU9pvF1lnODqxlgu94YqkwocRT8r+NLP+
87jEMezSzHrLExLHdMv0f0Di+K85moDE+OGnsg+pxC/EsMSuaIyqiEFTaxPQ
j8KF/xtbmwInXgU+nlhrNlR219QxM7EyGEIZbC6x9mtwZN3plom1WnCmYP27
q/4vsTF/tISlxNphNIX3yp6trU1gjR/cEvq9wxNzTPjKzWR/G9tnRs/KGMzY
C4byd4UfHpbYx0SXODKx9gB94uaKXmNwYp/0CZXPIy4NrFdG70HMT6yPJmGz
yv4qWRsJnge3tRv62tgcF3xBw8TaQfQRLUrGI7+WPVn2b4nx1q9kd5O9Pqng
p7I7R9YaM55DraE5Bu9Hk7Ja9reRef4DtR0QmO8Hj4LvP7dkHwd9MljmSpV/
F1nLDL+NthVNM7o/9FxomdH/bcSnK7nuLqG1ROhxepYqmqIK3rsksoYBbQj6
iu6hNSLNmIt1/Z/pfBPBY1PrhRaVzMmAPXK9MyJjkOgX0ByiNZwdGdtkPGMf
jBN8+e8Kts45j9L93U/97V2yhrdzyZqWai1LZH6jGl+W3SWynhdOHy6f60dP
fkhibfRDsj/KrK/ukxiTnKjrbQzGkthHv1F2U9lXJeaQf0oqfLH2OxHPJRU+
WHbHyPN4Nf8ceD5fnVT4ZuaryPqnAdyDyPw+71EXtbk/8vvUVnZ32Y9p//LQ
eGibKusciGnR36CxAU+gTbeSsWa0zI8w/uEjl/zb0Izw3XYtuYzvF+0D+poj
S9ZAoG8B+0YbyznRf6BJRhtBOb7NESVjsfg44BfoXfZLrA8AywTTBOcH339e
/29K7GvOZxKL/b2eVTDfB76M5gStCXN8p8RaHrAOOGa+t+1L1oLPKBhLAlNq
HVuzt1n/Z5WM/cDRdE2svQFLuVr2EYztsu8oWD/bPvb3S1/wm/gSN8nuUbBP
wVx/a8nxG3M+sSYxZ8PY/O3VsX0VYs3+ofmKX/Q+NtD1HwQeGpu/YH+P0Pwv
bdECd+P6eZ6xueW/8cFK1o6iVecasLmeKwPHfNeXzB/TlphuiH7PkyVj5ehX
wOLRE5xdMCZfZD4rmQuGcwLbBeMdUDKHe0HsZ8C9h3NFv3RayVxsp9B66Tw2
tovGjFiMmIzfCB8DtgTGBA8H/0a+Ra3Y2D+aK/Qgu8k+k29Fxzbo2DX4JNp/
lWcQO24jfkO/B5eBfoS6cBoTOXdsrLWzyi8hNonNlcGZoZ9Aows3x28GawNz
u79kDdx1KqsXG0scqvpNY8+3NxSsQWb+RVOJHoFj61U+pmSspVXo+QSNHdo6
3tHfKv5XX7A1/ZbX9K7fpDZN8EG0JanjSOLJftqujK2lOTqwfobrIp4bGPr6
Jufug7Zg1p013rwuu1lsnwCuH734bokxxMu0vyS3BgcM/p3K/AHXjGYOvPwN
le9euedoM9CzHZT4+wFrI99k78SYG1w9erbWiTF38EX0c61kn877DJ6XW6ME
Jnmkru99+CPZl8q+Qfsf5taUXBZYn4F+ulvi762X6n8ku13sGA1dKe87eAf6
0nElx4/E02jo/4Gbzq3zBaPG352VOHeEe748trYT7qKB2nwie73qnlAw5vme
7BXgdAVjXOATYMjkfZDvwXjIeAfeDv8GdgyG/GfRfCVc2D0lYxlwYvAl6Enf
jc1vkl/BGMzYe63ez6G5MR6wHTS9zN97psb74BS/A4sCUyh6jt0kux/PnG8N
n7PCry0u2h94usLPtdaxV8D0df8G5ebewEA5H/rhr2T35vthflfdZbI7Fhz7
ovV6ruAY+Efek5K5G/hztIrMH1cE1izCDf4nu3fRHGFb9T20yjESGNAe+v3D
qqyp+yXy+a7Wtqjob7h9ar3IcYGvF0eXfBywA/pEi4A+AaweTcIB2u+QWtv0
etE87J7Ek6H52MZg0zpfxrwTGlsBY+Ea4dTJ1SL/AC0jOVthyXxzd+331fX9
XrS/1a1oTT3+F1xq69DHwKLApPYsGeNjLMH3hK9hTCHXDP052nRyzuCzeTea
BT4H2A8YEN95vwrnAj+Ptgo9xN6pNQFoAeBXyf3CX6ofOAcMfT9ad7g/NBzV
8UHid7Vj0flejJGMjeTrPC77mNhaMTRjaJfQMPHd873DPcJBPlfyfAo3Wc1R
lqx3u7Pk+KNj5ZuAP4P/ZkwcHjh3Dn+A3ABy6HZJrQkCy0WDglYffIJcLzT7
vK+vloztwgnXS60ZQiuE5gWsDcyNOJ34HC0w/gv8F5rghqlz3dDmoDnJKs8f
Lm9Q0fpNNKRoR3nfyA1BT/lU6ByRWqlzGNDjoakkf+rI2FgpGv/LSs7PWxQY
8wa7BcNF14eeD6wXzBedHvo8sEIwQ3QJ6BHAdsF40fmh70PvPzi29o+cCfSg
J8XWVpBDCPYLBoxOkDrkExwbG1smJwQuE06TcY7x7Q++lyrrRNGHgs2Bl/wW
GaNDX9a+yr+D6ye/Y3TJ2gU0DPAHHVS+uugcm3aJc4ngOs8P7dejTz82sH9P
fuJwYpzImlXy3HrGxpPJUSJfDi0z3Oelav9o7nwD5mz0m9+X/Ix4Nmi2wFrB
XEupc/7S1Bp79GTYrWLHfyOK9rHgEuAUyMMg/6KcWv+NNhxMmVw38tvQEpPz
1kXta6TmH+DjAUbIv0BHin6U+LJ2yb4b5+DZg9XBp/IOHJVYuw23i94LbhiO
mHmf+b5v4twetIPkO5IPhbYf7SD6e3CazrG5CfCaR2LfL7j/R1TeX/UnlOwr
4oOC8+BDYoP3oC1HY068PT4xNgu/cXdojHYk2GLu8R5tBbEmMSf5bmiziKWJ
qeECp8bmWuFcwTnBN8k3G5VaS4cGn9iZGJr81ih1bEqMSn4XOQXEomsrfOUN
6q9D7Hh+WuiYlfwtcm6JXTlGrEzMTP4oOW/oTKvj39AYCfM/mk58s4tD58uQ
IwN2AafbO7FeEz0/uv5hmfkAsOnpKj8mc44p2ACaYPydn7WNjKznBa8eoT7u
C40hbhE7vkcLDAaMviqXfVRojhZ9C/mcPULPDw3U1w1lj+WM6eitDy5bq0WO
TBgbz8aXBCMAz0MfTm7mfbKz2HgFvi8YWle175nZV0DjTH4FOWloMclZJV9t
SGptJTkW6LLAb/it6LN4dqfl5mp4hu+pr0/g84ntIutnyC9Aa4AGGL0Zekfm
sjb4RNpfkxk7QOME9gEGQn4WeVr75MZrGRcZD9HbwbnBtZGDWiw7HiYnFH/l
UJW1q7KmH/3OO6n9u/2TyviRWx+Hz4DGCqwCzIJ8NLSH5B/PTo1FwLGg5yMH
DGyLnEvORQxO/innBH+uC18WOaYnF3nLsnMVyEluDTdZtrYSzBz99l2psaVi
6Hyz+2R3l/1nwflq8JtoqeD8P0ztf3ZOPH6B7YDxkA9HXhy5NuC/K0vW0+NX
g7/yruJfk895fepYHU4PvfXNmXNvicHR31+bOnZ/NXSsT8x/EFhP4vzwyalj
9xdDY3Fgcu1lr+L56Px7l52rAoaIXv3u1NjdstB676mpsQg0cH/p+l7MjOeC
66LPvyU11vNOaP03/BLYHpp28mMuTo3lPR0amwCj2B+sKXGuN/lDk0PnfJMP
/XFmrdW8yLmxaGrR0qaV+Rk9aL3Imhj8VzRG4GNX49PKfiazlu+UgmMHYgjm
D+YRYgdiCOJ14nZ8Z3xo/HX8dmIbvnm+9Vtia0F5h3h3To/t+xMDoHcbG9u3
JV6sF9jHxX9so+0L7X+ubWnJ/iT7myr+KL7z0qI1zH+nzse7Rdf/UmQ84KPE
3x75OPjtxPd8+/jv4A3va6sbOX8IrQbv69zImg38I/S5cFHkKDC/oSFjrmLO
OkRlm3PzXPBb52XWOMG1klMNXo4+BW3in6HjczgvuK79AsdmxGj4R/hJ+P9w
7PhjaLQPU9t/cvNq8GkvZY4/yY/ZNjL2AgYD3gHuQexIDIl/gJ9APPqi6qaR
OXb4SbQ6pcj84++xNeTgBeAGaHcZUxhLzoitxUWTi9abHGy0tmhy8O/RIpMr
goaK8YzcKXIFyBkYxbeROJeAnAJiy5aJcznQoKE9I6d3Uer4tmniNuQdgBcP
D80xflx2fthy1X+iaC0smjK0ZPfE1nqj+WY+Z17vkphvhs+B1yEWJibGP8BP
IFYlZsUfwC9A/0g+H1ppMNOtY+PPvUJzmMxvaBTBW8Bd2mbOl6mbGF8YK/vJ
srWG5MyTJwGejf5mkNp/kxpDATshZ5v8y1JmLHVAwVpo9CzEB8QJjMXoeYjf
GJOZj+Dk4OLAhMj1IeeH+1MvcW4N+iT4W3hctE81ysY+0UC9ITusMo8Hf9ci
c/5N7cT4Ffk9b2nbMTK+QDyG5g38hTU3RmXWUKKdZE0E9AHkf8EVEVO3T7y2
x86R8Qz807e17RQ5ZyhFy5CZC6obej2K+rzfkXMc07JzzsGaWTMCfd3ozP4H
WPy41Ho+clNYMwE+5ZzMvlnryHwMek58zb0i6+nGZNZTw/WQj47+c25ojRD6
tdNkPxiaK4EbhyPH/8APgc9Znto33CNy/iX3kHsHZsT6Dw9n5u7Q7JD//lBm
rgqND/n/izJzo+RooF9B7wBWh8+HvgU9xozQPhtcHJwc94/7iH7vjNz+BNwQ
3B0c3mr8lcT80LLUvuxuatMv83oXjO2sMQJfhb7yUZXvHVkfOD5zPhBceLXe
L3P+EtwX+cjV+j7mosD6vdNz+4ZwQeDh6HPJHWoSOZ9vbFrBgkLzR+htyT3a
XeUfZtbvUtY4sp5wTG7fD64a/vrT1LlvDSPnA5HfA3aED0r+D/k9+PL4lOTP
vpmZOyXHjO/77czzFbkMfAv9UmsR+CbgIuEkN2j/wcRcF5xXs8hrnpB/Py8z
18oaCWD9/EZ+G7kPrG/xRGbus1Fo7o97yr38LnG+JfpIuHY0Imgj0EgwFleP
yVUe8xnrHweLZnxIndvwc+j1KZ7LzHWimWf8fT6zvhudN+tfLMjMbYJhwH3C
gf6h/ccSj61D1d82kcdLuELeCd4F1pCBy+OZ8CxYQ4X8UfSYcHnEJIzFp6j9
dpHHZPKBX86sxQSTgQuGEyZf6bbY+XjMccxt6wJrN9BwMH8wj+C77JR5rR58
GPJ5R6t8+8hjNnjgO5m1G/jArAfBHMb9IoY8NbP+FS6Wbx5ulW+ab/mbxPqA
wam/JzQH5Jeib4Ur5RtCC8E7xbvEGhloFxgv8d3vjs3N8k3zLZPz+V9mHwHf
gDUL0OKgydkyck75zdqfltn3Ak9j/ZlpqbkrcsbhruCwyA9FS3AS9wo8SPa9
anMcvoDs7yPHfE3LHo+PD61pAG+7R+WTIucQsR5Sj9S5m+SYk/97b2oukJwh
1se5NTWXzRoP6FHRp7J2EWP+jozF2l4OrGlBy4KmhfUN5pccK6DxYP0CYoaF
Zf9GfhuYIes9zErNjZPjxPoV16XWtrCGC7HD6NzaVWII1hc6VeXrI/tIMzKf
fwH3P/T1sOYA/BrH4JbgmPD10ck01H7tsrX2n2q7XX3tXLZ2kjV24BbhGPkt
6HRYv6NPai0Uc2q9zD4RvhBz9K6V/p4MvAYR8QU5vfBVv0fO5yLeYJ8cYfBN
cv7I9SPHC2wGjAY85mTGx7JzpuFOZ2rbVvuXqL97Az9j1kYZnvvdgSuFi4OT
gw/rUbI2j4WAwPLQ6BE73JlZe0IMwbNAj0guGs+kptrflhnfgktETzYpc74p
3D74wuTMWCDaJHzlOZm1IPjM1etNZI4F2nLNqfMHyFVjDYdW+PKptWVwEDel
1keSG3xw5Hd5ZuZcId7pGanzGchtY00J3lX0geTG8M6iNUNztkXkNRXQqqBZ
Aa8fE/vdm5I5t5Z3kNgEfSNrpRCjECuRX0HuMjET2mxywNFKodHOtb+zyjuo
v+mRtYY/pn4WaA4PLvmb4ltCJ4QvUSg71sWnIPb8IXVbYlDWX2ENC/hgNIFg
62AyYDFg7Odn1r9Xaz90Tddo/5bMsR9rUqDv5f18JbBGi/VNblOdD3i/wJTS
SvzI2Bd6PSD0m8SGaLbQfuCz4Kt8m3i9jyG54xnimgm5fTh8NzSszAULUmMB
zAl/qOwUbXuF1r7Axbyfeq0COBliYWLiSYE5Gfzjz1LrScAmmMs25db1MKfB
zYBHTAnM0TAX/pZbh8ScCJe0JHUsBKeEdvGt1LETGkb4GOZV5ldyxuAbHpX9
W2j8oG/ufJQfA3MGxHsPpdYTkQNIfPFIav0POYLk9rGGD23J8wKbAKNAmwQH
hV5shfpbWDTHQjz5cmo9FbE9+V/Mi8yPzLHwecy7zL/okUbH1v+AXaCpAOu9
I7deBswXbvfF1PxsNccr+4nUfC6cJ3P1X7l1SszZ5CqyZhN9k3dGriDPi1iO
nEH4SjSRaCHRt5ALOD+1domcQGI3+L8Widc3YK7nGfNsmfPhs9FcobWiDbER
MRK+NBzgf7E1XwhA0MPw7ZJvfmfib/h4uMPMXMSr2naVfWRqrgaOkvWiWG8G
LoY17Qaq/PfU2PRHOnZyZpu1asCnyY/tT4xS9JoLfDt8Q8Sm7VRvZGx9B9gG
GiX0pfD9fAsfB87lX5V6bQty+smNIz8b34ocOd493sHGKj8n9rvKO9tE9rmx
c+PID8YXgtfhWfBM0KdOiH3vuIfVa4XF1oOyfhJaZsa4wZX7QW4nGAF4w9zU
+jQ4R3JBWeOMd5k8SPShrGfBWhJ88z1z4z3oR8m5Ib+0D9dQ9JoUJ+p+HJ07
f5Y82mO0/x3zWdHHWK+NHFq4ItaMgM8hpiWWJQf54dx8DhpQMCj6Jj8HrSTn
YKy4IXNuMmNG/4qNtpJnApcxK7c+CE4DvfDNxAmMR4HXSajWq4bWqJDvyjvC
u8EaPuhLWY8HrTxjMvd3VG7skXcermNG7rZwHnCfcJJwkVPhBjNjYGBfjPlw
VU/k1jfBWYE1gTnh634p+4rMmBVYFXMaWknwaLR0YPFoQ5/KrddBI4o29LHc
egt0FxMyr++FloYYBu6Q9SEHReYQf02tzyQXBH3FCZljPGI79NA8L/C3xSpr
rv/nZvbx8e2JKcFvWA8PrTAxFPkX4J3oM0+LHQ+zPiDaMGLKyzOvn4ZWmDkb
4SIx230Vjm/bzBgu2C1jOHjalLJzSVepes3MmCtYKzkp5M+xnmXz0GMo/gF4
JXrkK1SnVuaYgDEPTAntKfg62D7cxDaZYxDGQPQM5cwxEWM2/DnYKBgpsRQa
WXxPNPFxxQdtVLZehFxAfFiwA+Lfi1R2e2w8g/XnyF1dAV2TGYMFe4WvYu0f
1gCCH4YrJF+N95/1NS5KzC2TX48vBscMf8+9Ir6FuoW7uyu3PgoOb2v1/3Nu
XQ16Gvwv8AL0nqfq2B2ZMVqwWXwq8pPv1f6qsFqWXs1tsf4A2gg4LvJ1Z6tg
ZVgtg6nWjkzKjdWg1UAb8HRq/hceGC3Bg7n5BjQFaI/eTb2WExok8A1iPGI7
5gzwDNa/RLvLNaJXuF/t1obOqcafBpOHf701tv94X24+Ak0XeBLrL6LdBMM4
O7MPge8ABgJXz/oD6Jnh7OHa5uXGRuDc4Kovzf0sk8qz5Rl3JbZPzdU+nzqf
F84Wrdbs3HpZNFtwybfn1ovCKcM9ks9DLj8c5OmZYzRiMzAU/Of7c/O1cJxw
rXfn1r/BucJtsh4Gcw0cJ9zcS6mxeDg6tEQX5c4PQFMEdzolN/YHh0ouNv4h
ejR0afjSrGczJbFPzdp75MeQ2zArtm+6d2ZtET4q/iI5feTyoQ1k/ah2mW3W
6Doudf7RMNk1I8eC5OsMCR0T/qf+W2b2ncnN6JsaAwT7GxJZu8Ecw9wCDk3+
IfmF/QLHfMSu5N9Vr9cReT2/9rJPDr3mJHoo4k7ONTSw/gGMDmyOHJNeqfMT
T5Cdqw6LRu2VeS0zckceyew/kavPO0asxDVzrcRMrAVEThTj+8KSx89hZefe
sEYia8vAMcAtnJN4PBtR9loErAl5TWw/n3s5JHCuNOulwNWTM42+hRiY2LdP
he/Gh8B3IKZirRrWVEHvhhYILIt8ZLQ1fPPEJvwmfgsxCmvhwJHAjVyXePw5
NffawWCYrI0DZwNXg26SuZb1BvHFmXNZK4k1k+Be0HGTm4dmAq0EOXpXZc65
gjuGQwZ7w9+ECwODg8tiPVhyK+G0tso8XsN9sAYu+Xfk5zGWwjmBNeEPsnYC
PjFYDf5evdA+6feZ8R+wT9Y0RI9CvhnYLzlS6AkXJn625D+wfgRjHmMdfcAP
dUnNf8KDdk6Nt7DWBGMSa/XWzRwLo52GK6ifOR8fzgBuok7m9TLgKNBDgpOA
l+Bjs54K67EwV8Ax4o+NzD2WExPgj52UGysjhmC9HtZ/QVsER7g4s38KFgUm
9WrmeIHcMzDl1zLnt6INBRMGuyNegbsDw0Ov90ribw99Clga+bTV69Xo2IjU
+erwR3DGr2TOhwW7AsNivUvGU7hN1oBkfR7WA2oSes3OpzLnD7N2BDHKW5nj
J7hsOB+4dPLZydWCU2e9afLB0e7hU5D/Sj4saxfDoYB9kQ+OVgkMDL1idc5U
5Bxy1uZiDQH0A2gvwA/Ah9B+PRn6e7slt74crp31m8DtwO/Qq8OXXJlbLw8X
gv4AHA88j3wfsDwwWrBZMD34lom59fNwD+gdwDnBO4nxwPoZT+DKWacE7oLx
C30iOkV8C3wMsAc4UdbLYS4Fq3gr8FjLmIvWmXWzyKdZlxg7QC8GH3FJbv0J
a5CRP/FDYizimcD53azBgdaLnG/eV9awPEhlWyT+9hkD4Fp2qryv4I2dKEq8
dgb51uiZ0TWjn8W3A8ufG3gtY9bEra/9s2JjiXAAYP9ginwP4EVw+zWZs2LP
XeCL6LlZ/4q5lficfAqwADBysPF9KuM/Yyr5CDsk1pt8mhjbJgbHl8SnxPeH
0yWfiPVzwJOJydHrgjuCP7KmFfoSfE3wZDQ5YJlg/mD9YJqsbQZnTDw1NbHv
w3iA3n187FiPmO/NwOsasZ4ZvjdYCjmvrEfaSedPQ3Og3J8Tc68Xw9ojg1Ln
y5I/yxxEbM36rnDtxNj3Z85n/T6wj8TaKOSIEk8Nq4xFxHNgwYxJD2SOn1j7
BJ8LbBzMH6wfjBxuhfxUfHE4FrB41u+Aa+AdZb3S/1KvpcI5mc/H5tZDo4tm
fS3W4yIXBx/jTtqm1goQ47C+KjEssSsaSdZqYX2MlYHzHPIKHvQTvl5oLh2M
DWwNTp218MB7WYuUNfHQ3xGbgFWRD3db7jmHuebVwPPporKxU3SXPK/pufMB
ibXAD8Gr0J6SA8HadFwvbVmjjvltWm69Gmu+3Zx7zmKu4nvheZ+cOzbA52Ut
QPAoylgTEH0B8xu5An9GXn/7ycy5VIx5V6fWH1DGmo3/A96MGhU=
              "]], 
             Polygon3DBox[CompressedData["
1:eJwt1nucV3Mex/EzaS6/maQU7U1UdFGLbvahsKhNWUpFa7ZHtiGT0sxUUtpM
d3LpTjfTTTczU6q1Cg/saOnyUMQjCcvax9Iq2drSRB672ufncfzxfpzzfp33
53s553u+5zS7q6xfaZ0kSSoom6YUJElhXpI0ALfnJMmFNAnrhxVgr/PnUzl2
M5aH1fCNaAb210ySNMZ28ZfSUP7u/CRpc5a2c51jL2HDZSfo8L91k+TbrCQp
xv6uvdXG0BMvktuCvYiN5zfxJ+U2Ypuw+7Eq7GusOXah9urEePTRHzvjvIpG
yu2ms7ExMtOM5VfGd1DtDnwgNhVbrG4h7TKeP2jvE7VLjaWbTGHcA5lRsmv5
G6iv+QzBymVH56RzizneGTnsPmwy1hJ7jn9Oe6PVVeJHjKWb3AV4PX6MXIFc
T6wD9nNsHNYAK8YewcZjU7G2WKFxvERdtHkVdTXO22QOOJ/tvKt+bpa/m39E
rk1O+jziuaznG8r2Ms/T2ltBE/SxW3aJunl8L31kYQkddPgYvxyvVFcpV8av
0d6/zGMz9gI2FluPHcMW6aM9leuvhbpJeGe5TtRfe41lm2Kz+Jm0EbsVm4g9
yI+jldiNWBm2ja/Rx5P8zlhr2r2Ln66PVnx9fRRjA7FpWPN4ttQQe1Ptm/hC
tW/F2sV+z0+Vu4ivF2sS649Nxppg+VgRVtf8z6JTxtID74Rfrb2/yM7XXkts
uPk+pG4rXhv3Azvk2lZ1o/Fnnf+Gqt3TS7BXf3xedbE7tVdPpoCWqf0J/xXl
8Nk0BzufP0y7tb831qS6d/XR1Pg2y/SP9Sb3hcxB+o/cG3IL5D7n75Xrgr2G
zcM6BpOfEvdE/bh4jnSV3ArsGexp/gTdiC3HVmKL+TZqp2MLsWXY7Hje1B1b
hC3H5vKt5aZhm/gj+r7SfMv1/Qm+TG4FvlDuOPWQ+8wcqrHhru+nY+7VGrk1
2HKZdtgMubXYWmwlVks3YVvUluljGL9VrkrtFpmJUa/fSx3b0otYH8ebsE6O
nalG7RK1j6mtUftKvKtyfbHH5ZYb82Z8h9xO6ux6EbYNe0dmf8yF36e+mbHc
x89U34HfTU1iv1S3jV5XUyhbo90n1L6CvYw1p1c9j9bq3lK/WCbfscj7mYW9
G2s6xowfkl3Hb8Uvc7ycHtXHYW0VY6NkvlT3AzbCtRfiXXBsQcOwarnSeL5y
7anCfEa69iGt4otz077myzUzxgbmUIWVy83Chql9UO5bfZRgVdGW2u+jP7m+
1Bm7siC9lwNkz3X9jLbuwUr5f6jNNd8J/JexH6j9X6xB18Zjn2N9sNPYR9g4
7J9Yb+w7bD+2CntGuz2xb7CltBpbjfXCTvLL6I/YF2pvxb7nP1U7my6gX8QR
G2wsS+WeUttN7ig2k+ZjtWpLsMbm1R0bwt+PV2ane1PsUQ/zRzPp/hP7UGu5
ddjAWB/YHXFP6HmsOC99H/Mcc2Ovxo5n0mfTUKaT2vH4n/H6jmfH+tLHo/wx
uaFy58j9Uq6IH5Sffl/iOzMo3hO+RHaRsbWjo/IL4j3VziTnF8uNlXsMG5qX
7oWxJ14WezG2PZOu2Vi7HekpbB/WEjvA9437z4/E12j/emrt2pOxTvEWzt+P
95LmYDuxn2F7Yn+hudiu+L5hb/NdaR62J77f2Hv8DfENwDZh//ZsqvkD8b2N
PYgm81/RNfJj+fVyh+XWYXvlhpvXDvra9TaxZp0/IFctd0hurdzbckuwpbH2
sQXYdBrNP4v3dp9uocXu/Ua+Av9A7rV4V2kAdju1wz/iT3kGg+M7mJ/uP7EP
DdReEntffvo+lmDv6XcD9aZbqERmg3Ybyc2VGxP7ntxR1854T5K4H/Evw//A
N5a7Vi5HblTs9fhvM+l7He/y89i1ak7JnnCtg9rjjrV8E7kRsS/yWdnpntwA
26N2r9qd8Z3Bx2KDsVZYD7409nfz3BDvl8wq+rXaSn4WXiv3IdaHKuK/R+0V
2O/UPqH2NP8dfep6Ft3hXjwkNyHWUU76rxf/fK0cr4n/SmO+2rElnxtrXj8P
OD9hDk1dm8gPzku/u/H9PS/WGv80/nD8W9F1+piLVWAz+Ev0OxnrmEn/seK/
qlHsAa4NwMpiP4n+aY6x3I4VyjWXm6i2t1wh9jF2CNuH3YZdFOuW6jvPqO2m
9l7+b3JH5N6XGxL/E1gXrA5Whn0mex3WNufHfSjeV+cXY93l6skVxN4ZazKT
/lPGe94dG4G1x66gnzo/F+un30H8B5n0fYz3ckDsJer+ZG7f6PONuIdypbGn
xX3NSf9t4x/3ZPz75Kf/tCdlt+Mt4ttBdV2rn51+N/8PORiNlw==
              "]], 
             Polygon3DBox[{{2955, 2154, 2153, 2954, 1584, 1585}, {2325, 2923, 
              1404, 1279, 1278, 1523}, {2441, 2440, 1659, 1357, 1358, 1660}, {
              2315, 2920, 1399, 1270, 1269, 1506}}]},
            Annotation[#, "Charting`Private`Tag$9180#1"]& ],
           Annotation[#, "Charting`Private`Tag$9198#1"]& ]],
         Lighting->{{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
       {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwl0s1LVGEYhvHH0tRSE1cSUQStIm0XlZpouGmKzHZjEkRfY6m4KG1RkiFa
tjaCWkSU/0DSToSxTcvMJj8mizCCKFtYRCX4OwQz3Nd1n+d9z7xnzq6zPW3d
BREx5ZvfEJHwtCwBTSURlbxhY0Qz3on36o/gWvzKXB1flg18e2nEcX4MX91s
zrp2fA234DPWdfI+MyvWdPPrfAaP6Hr4CE+Z7cX38U1rT/BneND+E+ZWzU/w
3a7lcFb3W07rHpuZ5f/4DJ+Xb/hfeb4I6xZxTneBz/I5fBG/xQs4J+8WRxxw
33f4kmtzclR3UJfh87xTLshDust4EV+ReVmney+7+JK8Z2297gN+sskzc58/
/GPyvGXKbxp35te8v1C6/oBnk/vyw66P8uf8Dt/PB/hTPszzzr1PN8YzPM3H
7DHM92yJOKcb4v28mQ/xavNd9sjobvMq3sHT/BYv5a08xU/yo9bX4wE8af81
XsNv8Bf8F9+RvAf2b9Ft4y+dbasuK7/zH/oK3sFXcDn+JsvkaZ2l8ZX7a+OR
Z9aus3V80fkp8VCX1n3mMJalxxmV9v6EPe6owIXJ+0nKsPH4abgxORNfci6f
OKWbAkUF/9/9df31ZAw=
         "]]}, {}, {}, 
       {GrayLevel[0.2], 
        Line3DBox[{270, 228, 2695, 867, 287, 2481, 496, 288, 3012, 1277, 319, 
         1288, 3032, 238, 900, 2710, 349, 788, 2635, 363, 2639, 792, 378, 
         3022, 1327, 395, 3028, 1338, 250, 2738, 936, 2739, 425, 810, 2661, 
         439, 1365, 3045, 455, 1375, 3051, 260, 475}], 
        Line3DBox[{1251, 1484, 1701, 1485, 3002, 1252, 1500, 1786, 1501, 3009,
          1268, 1517, 1713, 3092, 1518, 1956, 1531, 1718, 1532, 1908, 1548, 
         3067, 1724, 1549, 1910, 3135, 1559, 1802, 1560, 1307, 3038, 1575, 
         1806, 1576, 3014, 1317, 1592, 1740, 1593, 3023, 1969, 1609, 1748, 
         1610, 3029, 1917, 1624, 1753, 3103, 1625, 1347, 1639, 3080, 1820, 
         1640, 1356, 3042, 1655, 1766, 1656, 1982, 3152, 1669, 1771, 1670, 
         1927, 3141, 1686, 1777, 1687, 1930}], 
        Line3DBox[{1253, 1486, 1702, 1487, 3003, 1950, 1502, 1708, 3091, 1503,
          1903, 1519, 1714, 3093, 1520, 1905, 1533, 1795, 1534, 1289, 1550, 
         3068, 1799, 1551, 1298, 1561, 3071, 1729, 1562, 1962, 3149, 1577, 
         1736, 1578, 3015, 1914, 1594, 1741, 1595, 3024, 1328, 1611, 1813, 
         3119, 1612, 1339, 1626, 1754, 3104, 1627, 1974, 1641, 3081, 1760, 
         1642, 1922, 1657, 3086, 1767, 1658, 1924, 3139, 1671, 1829, 1672, 
         1376, 3052, 1688, 1833, 1689, 1384}], 
        Line3DBox[{1254, 1488, 1703, 3090, 1489, 1901, 1504, 1787, 3113, 1506,
          1269, 1521, 1791, 3115, 1523, 1278, 1535, 1719, 1537, 1961, 1552, 
         3069, 1725, 1553, 1911, 1563, 3072, 1730, 1565, 1308, 1579, 1807, 
         1581, 3016, 1318, 1596, 1742, 3099, 1598, 1970, 1613, 1749, 3101, 
         1614, 1918, 1628, 1755, 3105, 1629, 1920, 1643, 3082, 1821, 1645, 
         1357, 1659, 3087, 1825, 1661, 1983, 1673, 3088, 1772, 1674, 1928, 
         3142, 1690, 1778, 1691, 1931}], Line3DBox[CompressedData["
1:eJwVz61LQ3EUBuBXvLrBVGSImAaaltcNBrOwYhNcNCiYLCaTGEwmLQY/glos
DkSLf4HBNDAMRNElQVGLzw0P57zv3e/AZjsb7fWhJG1ei+RxJDkfTTbN21ry
puvbr3Rf8pb9W/dbSf4IP/qeue1bOLGfUvDMjq5G3Y3pseTO3JWnaNhndA/m
fplZlSvVpMqk930O9Av6pnkhX1LnhUNdiyU3nhj2u2N5nhW5R6E7kxcZd3eC
jq7h/Xt5r3zPjb2l75pzfHCtX2bPnaZvA7Mrdxj470fyJ/fyGv+bmi0e
         "]], 
        Line3DBox[CompressedData["
1:eJwVzTFLwmEUxeFrqRUmBEK0VUgILS3uRUtDkw5FUxDRFDk0NbUHQl+gpaVa
8hNILo1NghDxj0IjoZKCGoKGHocf5z3n3Pfe+Z1a9SAVEVW8pSPamYirbMQh
beYi3mU974bsiK5PRvzK/sYifvgUTbAhf6Qjsgs6aj5Dn/CMvPzevoL8Bif8
NB5ks/wtTvk53JmfGY9Ykk3QHv+CVTcW9dfeK7oCfcWmvE/Luj16Tjv2LtNt
cwmyZi75NdT4Bb5LG3wFU+50/TmWFe34wABbutbwjq6uK3l/4gu7uoH8TP6N
Fr+PfwfVMM4=
         "]], 
        Line3DBox[{860, 278, 2616, 768, 295, 2620, 772, 310, 3013, 1283, 326, 
         895, 1187, 2894, 343, 787, 2634, 356, 790, 2637, 748, 3018, 1323, 
         385, 3025, 1333, 402, 2735, 931, 417, 2657, 808, 2658, 432, 813, 
         2664, 447, 1370, 3048, 462, 961, 2761, 481, 827}], 
        Line3DBox[{1261, 1492, 1784, 1493, 3006, 1262, 1509, 1789, 1510, 3010,
          1952, 2070, 2071, 1526, 1717, 1527, 1907, 1540, 1722, 1541, 1909, 
         1994, 1888, 1912, 1889, 1303, 3036, 1568, 1804, 1569, 1313, 3040, 
         1584, 1585, 3019, 1967, 1601, 1745, 1602, 3026, 1916, 1616, 1751, 
         1617, 3031, 1919, 1632, 1818, 3120, 1633, 1352, 1648, 3083, 1823, 
         1649, 1978, 2073, 2074, 3173, 1664, 1770, 1665, 1926, 3140, 1678, 
         1775, 1679, 1929, 3143, 1694, 1836, 1695, 1389}], 
        Line3DBox[{1263, 1494, 1706, 1495, 3007, 1902, 1511, 1712, 1512, 3011,
          1904, 974, 1906, 3134, 1886, 1284, 1542, 1798, 1543, 1294, 2052, 
         3167, 2053, 2054, 3168, 1570, 1734, 1571, 1913, 3136, 1586, 1739, 
         1587, 3020, 1915, 1603, 1812, 1604, 3027, 1334, 1618, 1815, 1619, 
         1973, 1634, 1758, 3106, 1635, 1921, 1650, 3084, 1764, 1651, 1923, 
         1009, 3132, 1925, 1899, 1371, 3049, 1680, 1832, 1681, 1987, 3153, 
         1696, 1781, 1697, 1932}], Line3DBox[CompressedData["
1:eJwVzksug2EUh/EjcWmCgXGlenMrpYqWusxsgNqACEZMrMQSWIaJiYigkRJp
7cCsUxPxewdP/t95zuX9CidXh5dDEXGMwXBEbyTidzSiLx/GIx7HIrKZiGn8
8ZWJiB+9J36Nq6OGC74lt/Gsl5MzuLeTwQu3od5Md9xdl7vYwateXp65UZCT
6rKdjjziilwJU+kG/2b/Pc1ws+hyB+hyc+p59NQ5u235wS9wi8im/+ZP+U/f
FW4pvcnl1df8l2xyW2hgH3vo88vy3GxVDsze4JtvcyvcKqrqW/4O/1MSJ0E=

         "]], Line3DBox[CompressedData["
1:eJwV0LsrxXEYx/Gv3KMslMVA2eR+znErxyV3ynG/lDqcGMTArpRJnKQchclk
sZmsymJhUSb/AtPJ5PUb3r2f5/k832/f368+vZ/aKwghHCBTHMIzVkpD6MJl
SQgp3sVsNKsMYV3+hIT+WL7Dn9iS3RbZl91wTVkIH3wlu8aEPGmWU4/beUBc
nXFHXDajnkbS/B7L6hh+K0JYsDOl3sYkEvI7LKm7ne3kETtj/I5RNMlz6JFn
orvkW7yJBvOU+QV36BtlwzyEWrNTFHpru75aNshpDKBKdoJFdRvK5UneQD+K
ZUdoVed5jevc9ehf/CGLav0bn8my0Tn9Of+YHTqTV697Xwt/6fv4Bb34trNn
FpPP65vxGn0nr0b/A3P4B4OaMlU=
         "]], Line3DBox[CompressedData["
1:eJwV0D8oxHEcxvGP4k5HcYPBKGU7I0qUAbkUUSa3UFcMbrrFpJTJxClR5M8g
FhMDVjGZlJLBapF/wyV/Xr/h3ef5Ps/z/X7q2zZTmlioiYhZFOsiLlFJRVyl
aYw1RhR4Z8jWR1zwluXj5kOSo1tnUn6KJp1zXlmnlz9P32MOefkxirK0bMoc
cD7ER0PEus4GKujh7SRv0m+yYd08PYIcv9P9TTNj3wmvSz5k3mEQ7bKczprZ
IWvBk3danVfxqxPuFnT+6GbeCo7ojO4o/4DeR4q/hB96D1W637xBH75rIxZ5
VXoXr/a8OBfoa0zjXafM+5Q9mrd45mXtKSV/YOe23ha+8A8E1zcL
         "]], 
        Line3DBox[CompressedData["
1:eJwVzy1MgmEUhuGjQwhYLAZGcSNbndUE0+R0bLoZLDYlUUxubiQ30RlIJpPJ
xAhugIJOo43CdFDE4IaJEbwI957z3O97vp+Vw5Pt47mI2MLRQsQjbpIR5/hO
RxzodeRSEWVuwO3oDxjqXfnJ1Zxvmu/R5/cXIzrmP35D3mGeKzrLY13P6rfy
Q1/DqjnD1WTV3rO8kjlZ4K/li3tPcszvcRnzBZr8Mnq+ZUmvIK1PZApns/fb
+ZG7cpqIODX/uj+SbVzyYz7vueXZv9hvyS+u4V7J/I5XvOEfGi8tyA==
         "]], 
        Line3DBox[CompressedData["
1:eJwVzyFLQ3EUhvFzRedwSw6cggYRFGRlbHG2ZcPAoVGbIIrJYjItLS2JYcmk
xS2YBDUt+QFMszgtg8GmTX8LD+95n3M5/O/60VntNImIGo7nIp4wmo/YxgvK
2Yhnecg/YmjeRC4dUbJblHX+AYOUHXcpd/U79M0b3Ims6rc40L/dWEYXHVT4
NvbtvvQlZN3OoMhfI7F7c2cHW3oLPfMKX5BrehOv5jy3KnN6Ax/upTHjXsEu
kQv81fS/fBf4m/V2/TfjTfrIPOEu5Ji75/rmT+5c7rnz7uaE/5kmbvAPDQwr
9g==
         "]], 
        Line3DBox[{1387, 1074, 1835, 1145, 3171, 1379, 1466, 1774, 1676, 3046,
          1368, 1460, 1769, 3111, 1662, 1360, 1454, 1762, 3108, 1646, 1350, 
         1056, 3077, 1817, 930, 1342, 1053, 2859, 1127, 996, 1331, 3150, 1436,
          1744, 1599, 1321, 3017, 1430, 1738, 1582, 3039, 1311, 1040, 1803, 
         901, 1301, 1037, 1801, 3166, 1110, 1292, 1412, 1721, 1538, 1281, 
         1406, 3066, 1716, 1524, 1272, 1024, 3063, 1788, 869, 1258, 3133, 
         1020, 1783, 1089, 1949}]}, 
       {GrayLevel[0.2], 
        Line3DBox[{2113, 2566, 2567, 2300, 2559, 2917, 3125, 2590, 2568, 2569,
          2473, 3089, 2216, 2472, 2301, 3001, 2217, 2303, 2271, 2695, 2218, 
         2474, 2933, 3002, 2219, 2475, 2934, 3003, 2696, 2220, 2476, 3090, 
         2304, 2614, 2793, 2918, 3157, 2528, 2305, 3004, 2221, 2477, 2306, 
         2615, 2794, 3133, 2222, 2529, 2307, 3005, 2223, 2478, 2308, 2616, 
         2795, 2224, 2530, 2935, 3006, 2225, 2479, 2936, 3007, 2617, 2796, 
         2226, 2531, 2937, 3008, 2763, 2843, 2227, 2844}], 
        Line3DBox[CompressedData["
1:eJwNzTtOQmEUhdFDoSLgI8EJWMoQFChMTExojLWVjdJoIp1SIh0wFVAetmLr
IDQBtVFEUDvjKr7sx9n/vZvH54dniYg4wG4y4iIVkU1HPPF1PpDAUSZiYTmi
xl/jz31JPrGdY5HfoM/6ivu+fZdv65PooCeP6KXdPfryjZy1TdFt797xgbG8
pU/TU9tv3PIZNNzL8g+68gp2dBP86j7pi24VTb7kOwP/6slryOum+MKrfOXN
EC35zq6vq8oPKOhmmONNn/OtdfooF9z3UMRA9w8HCC6U
         "]], 
        Line3DBox[CompressedData["
1:eJwVzb0ug3EYhvFbQqJlQesrMRhMzqEtEjuDMEjEJAiLk/AxOA+Dta0ysRHn
gMVHwkKrFr8OV+77uZ7n/76z24erB31JVrA0mBSLyZM8kcdYH0ru+5Mj/VFu
mp/tXwvJKfdpvsCI+cz8YlfXd7kvjOoF3OoNu4ZeGk7G5Ln7JtfUy1xJVrhv
/ODNPM+X5Z73HVzp46jat/HLXeKdm8C+3kVLn0TNzZpvdHq3+OCmcNf7ln9f
6+2BZNGuixn+Ty6g4t2cbLnb4OvY4bbktHcPdlV9GTXccP/qwTCg
         "]], 
        Line3DBox[{330, 1169, 329, 1723, 516, 328, 1798, 605, 327, 1722, 515, 
         326, 604, 1797, 325, 514, 1721, 324, 603, 1796, 323, 513, 1720, 322, 
         1719, 512, 321, 1795, 602, 320, 1718, 511, 319, 601, 1794, 303, 316, 
         1529, 235, 313, 1528, 234, 715, 315}], Line3DBox[CompressedData["
1:eJwVzzlSglEQhdEmsEQhJlH5RRQcWARVTE6gRWjgtABdgYtQt2FO6A6UEBfg
xBIQLc8Lbn19b3e/oXJ9O7zJRcRpUj5ivBzRK0TsLUWc4S5e4R+N6MRMFTfo
ohgx4Ot2unS5GPGKfdkLVszs2B/gNvbxWO8O36hjpi4/kq3z586r8Y/yLTyU
l2Sb6rasigeyhixLb+Af0j34y++nc9QZzfkef69f5lu4hj/yrnxKE/U3dmi2
EPGsv5Lu4p/SW93zpS6rP7HojBo1/fODz9TvWMBVe/8KUyPA
         "]], 
        Line3DBox[{2141, 985, 1202, 1201, 3174, 2140, 1116, 2852, 3168, 2947, 
         2139, 2361, 3036, 2946, 2138, 902, 2634, 2360, 2137, 2945, 3035, 
         2359, 2136, 901, 2633, 2358, 2135, 3096, 2357, 2356, 2134, 3095, 
         2355, 2632, 2354, 3072, 2133, 2353, 2352, 3071, 2132, 2351, 2631, 
         3135, 2944, 2131, 1113, 2710, 2350, 2130, 2943, 3034, 2349, 2129, 
         3165, 1107, 1108, 678, 745, 1890, 677, 889, 888, 2677}], 
        Line3DBox[CompressedData["
1:eJwVzT1LgmEUxvFjENjLXLNr0BcwCXqooaX0sV1obMixaI+CqCkoaG/uC5T5
qKm9DG59Cc32rH4Of865/vd1cwr79fQwFxE7qOUjjuYj7nCMtbmIGXOAdDHi
0XuRu5FvMbSv8k98yb60ELGME2/bfINv8uvY5X7wzI3kU70XNOVMPrN3UdaZ
IOO/+HOuh+vZiJacoOL9FxtutPTG3Cb6em25bd9CVeeBS/Q6fCqv4HV6Wz7A
hf0N93xX7vh3Kb9jj/tDj//mr7gPfE5vm30+Mf8BmIoyLQ==
         "]], 
        Line3DBox[CompressedData["
1:eJwVzr8ug2EYhvGnC1U1GowdFKlTEJUmFlXCZhCt/0G7SSwmkWg61lBByxkQ
B+AELEVNqruT8DNcuZ/nut/3/b5MpbZWTURECSfJiF4q4gufWB9FOuJFHuse
uEeUkOcb/BG/OBIxMNdxaJ/RL+MD7zjguvJtOKIjV51bwT5/JX9Q5Ave2eOe
7WXvT8k2v8Dv8hNc3pwbitixT+qzuP//nu7SvM3PO9M3X6Biv9XfYQlzujI3
rttw50me8b/cFs7t33h17oZvYZMv+Pdp8xhmddeyiVP8AcnKKTk=
         "]], 
        Line3DBox[CompressedData["
1:eJwVzbsuRHEUhfF1JMQthpaGzi0eYHohmJFImF7veAAP4dIqUeA93OaOxmu4
9H6nWNnr+/57n7N0fHpQFkkaUo4nM5PJotRkeyJZM9flZCqpTydb3Cyek2/9
xtzg39wu27nFd/LkbZ5v82d4B/e8d/Czfq735d5bl3vhLvBAevgVL7jfNR/s
lHxR/QfvySEX7no0+cENeeSadvru27gpR1yLK6pv87/cvgzxEHf0S/1dWnZH
qs7/8Vf6RxXcxZtjyZedFe6TWzX/ARSKLEs=
         "]], Line3DBox[CompressedData["
1:eJwVzTtSQlEQhOGxQN6RpGAVpkoRuwMNrBIEvaiRC/C6F9kDJpauBEF5yRo0
MFFCvxv81T09Pee07tLe/U5EnCEtRexVIg7wxbdoDnkc1yLOyxF1/tvuiY7x
U414RtfuFG9o6C50JnwPc/uleco/8gsk2ds0j195x02frvRmtGke0KHerk4h
u5H9yS6RmnPmd/4KN3pF2SFKuDa3seTX3nxAovci++Q/+JHdCreyMq1gK78o
RLzKNnpz875/hnQjO9I5QTv7Q/YPQOQn1A==
         "]], Line3DBox[CompressedData["
1:eJwVzTtOQmEUReGjAaO8fMSCTnAEMgZpLGy0IgaQh2iloi3G2VhZGeJMiMoF
h6AGK9GCz2Jl773uyX/L7aujy6WIOER/NWKQiShmIz70Rz2Nmf2Ak7WIbfvT
t5F+zX3jjju272XfXs5FNOwvd09cIl/sHb4pJ/arLNmncuhmyr3pZa4l61zW
WznUuB+ujWf+hktxY7uDJpfn0lxBzrkubvUVLtHP0HK3zm3g197zrSff/Xsi
d+3z/zfdbbrZwp9d4S9kwu9zB6hiyi0AbMQpBQ==
         "]], 
        Line3DBox[CompressedData["
1:eJwV0DtOAmEYheHPiqsLwM4grVq5CDuMnUrIxE4FnQG5yG03VpAQQsSNWLkJ
xQX4THFyznnPl3+SOU66V52DiGjSvBjxXY64rEQsShHXfM4PqxFbeWb/tM+w
ez7lVdsUn8hvVNEn+s4+1hM+yjesYRvKAxrrJ/qr3HbT5yNs4zsJ3tM/8IwP
8TqWyi3shZf1AX7u/lnf4l1eyt/EO/ITFfW+fubuUd+4e+A97Ai7sf/JC3zP
Mypgd26+6JZO3a3tqe1dvrD/yivsh9ewZf5f6B8anSkr
         "]], 
        Line3DBox[CompressedData["
1:eJwVzT0yQ3EUhvGTjsRQWUAaaUllhhUYTVJoGGZCEAWNBZCb7yA+ZsgaLCGs
hSTW4KvL7xbvPOc877n/m69clM8zEbEj/bmIaTZiOxfxNB+xh49YwXVdT9b0
NVmVzYWICXb5MRbdPbgvY1U3xJJ09Pf8qZsBttN3+Bf5knf+jm/xBd/dmm+k
aS/a3/R9+wn2sMGv8F1zR5bMCTfSt+3H2MJFvs43zVP/eZZre8NedZPglT0x
X+omaW/+5z7wU165De/8cWfuf/GA25cjOZSt9D9ud80/+pq7b1zm6uYZopYw
+w==
         "]], Line3DBox[CompressedData["
1:eJwVzjlOQmEUhuFDp2BhpbYGCytNZHAB0tkQEl2AITFRkDXYC+KADIJaugon
1qEN4LAIE55bvDnne8/339z1o0blLBURFfQXIqbpiBkmOMxEHOB4KaLn9rQY
8Sc/oCt/6IxRR0lnxN/xj3q/Sc/syG/u7/jhauaIv+WH8jeG8o286Rv39lOd
gXnN5biCThGvfJ9f5q7cevYTbi95595O+mYeL3yZH9gv+a7uLPk/syV37FN8
yQXdPJr8M7fr3Zr875Yzd3Dhtu9WdduSP7GNc51VM4sVbGAOHmIvaw==
         "]], 
        Line3DBox[CompressedData["
1:eJwVyztOQgEQheGxw8cGRC3cg4kotmpJJCb22PPYixY+4XLvhdBQ0tmpoJuw
UyPIAjQxfhR/Zs5/ZrZrjWp9KSIq6BciPlYiPvGOs9WI07WIkdnTlc0DvOpO
+Nye8/3liBZ3zGVcxu2Z+3jhe/qUS+U5mlzOdbld+dxfyZzwGZ/wXfkbqdyR
d9w868do4EhO9O3FrZuZvYN7+VH/hDoO3bX5O/4XU/uPeYsr+xfe/F/ihhvK
FT8Pfi+4LXMT17qBrqTbkP90RXMdif0fUagycg==
         "]]}}},
     VertexNormals->CompressedData["
1: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
5qKfbm/SsYMgZcau0j95uBItNGTRQOr/XUU5968m4H22ziXOKg5XNRf+zJH9
q1yfqx/zcrH8/Olev1xHlPXJlbRtIfMuePFggFERpoo9vf4kxwIs6fQ5f+cR
sGY1eW1rZxlOK1yMvXjFFsx8XflUPxPAHRz26HVHP0a7SauW5HYDlcjkh2Th
KRDXsLtwvTMaHhbF7KFaz8XNk0vHn5B87rmsfbJjtxckXVXt42nOwESRPFNT
Mo8K8wosxvXmsMFjy5Y9DP44uHurwCky71eVRqR9NXuxpP8vW950DxxRyjsz
7TsFOiXDIa4HGpHxaVXJhx0DcC5LlPX40DR0uG7t1J9tx2uDsfnCvH3wrWB0
k9SnaaA/+Nw8b3MPMtjv3KXt2QMyiv06m7dNw82H1lyKsd9Qh8l7bNaoGapo
Jhls06aBq/ntJL3sEAo1LKzfZK0HwmeUo2d2Cj7deyQf7DmINxRXaAq7O4Cf
wusy9G0SNMc9lOMa2/D20EzVg94+OMT16+l7v2m4/nnbjpLLPXiXU1F296su
EAjMNvpiOQ1n+aQfXFL/hrYB0xV+dztAtsrMQKp3Ci5dvz1kLuYDAp4anMIb
YrBb3aV+iMyXcO7Pp5N23iDZTi2SoZCO/pylv06RffAUm2R7PnsZ2phdC0s/
HYvJe+em2EjOYTrQaHKQUoIFLo3aaguf0VRKuP1tBAF4vVWgS9AV5JvUNp+n
9kYLV9XtwmSclVW2f9m2yReI2Kc7ivfFI7X9xkuXyT5icNrL6+i1RuRO28lY
ZfcN+Gb8d1hSz0BzJ/NHgVetyP1sg8z03m/wuOXG3UfvpqF6jPu68dYO3EMX
Lj1yvh/GdnX80YBpaKBXj9471oUDpq9SWx/3Qo6qv+SdA9Ow0U99PvtrASTc
NWA/XFOFPxQ2r3nzkn3hnWat20ANfHxmsonpIOn7F3m20UjNAcNp+rVLo0VQ
LEbnev5qLbD5TTiq/KJAiWuOxcut9Wh8+WRORUEIFgS1eFNI3/GDt7Wy+0oZ
vla/pPySqwr3RU4afNlEwP7ol7/cx2twwEq3LNctCKvbb/UpXCbAMM1WKisp
FgZ57sQqzRqCGv3k2RCSVzn+zd98/z/zN//+5pPyEs2EurDC8IJMG/AUPcNd
Su5nN5ueM9bGUTi18n7HHsUofJN9LfPmPAFR/gMpF3xLsBE6CcmxEjTZbWj/
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
CMJmd7Mn74sTQdGN/9XqTLKOEtKWcj5QgCm7R7NA3haveOq9/kGu22vJCY/m
uSrEt4vupplOqGy0c7veUwIYPneqZ3uXwspEppofHSUYlGF+ZLcaASX8JZfY
tVKxTGtL4zGHHng6/vsm+81J2O673rpYqAIeF7xP+ObXBKg8o7nDgAr5K9iS
EymVKNRz6D53Ty2auC+1rS6nQoWX9tH8U2V46dSZYmO5Jnz5Sr6yyI0KAYtj
M8iRg7fuSuW7nE1EUa47T6gfCXj1snX6OMM9eHH6jd3+SR88+pHzF5XUZZvG
b3ur3iwGk1p27SKS99FLO17458OVTtN3i8v0nWo0fcjVulz40lTMXYWkHj33
rvYYA4kbM0ocrkluqJywUZR3QhtLA05H9JLr2WJz8FaHfzKWQ13maok0fJ39
3jiV5F0u7GHN9R6FsOVeCOeKLfmgyf93fiScgIJyOj8m5mwQLXg5/VAE4aJw
X9XmKAIy1DOrH9+6Q+LeX7qKT14YpXmT/Tr5+UceXHmtyBaL+HKgbx9PGl67
cjfjCqkXjs59GpR1z8DA+rpPQevL8Vlja4CnDQFTZy3Vt/hloeBDoftVTl0Q
Gsiqz1A6CeFOyrOvzlHww7DUlifHu8B/MeuVbcwksEQ8NdrJZomVl6s23HpT
ix581B+LN8j1HA/vFCiJhqdrznUob6lGFzOT4p3/eLgVx+05U2es9CvbplWS
Dms7zZrMSb0wKN47wPw4DOWk+jobhCvgrsBnCQ5HMt/UviW3bU+CuEPNMYJ9
9SDnV8MsQOKJ/P9Fz9bM/t5O8c7A62oR7ruz6+FrfmNB8JZ/57P1pu9/E4j+
K4+1jT+vwl97guePGvw7p2I/H2+lBegdDOi0qkkFk6XnO+ZJntPjflNVS8sN
nEXO9uz5lgTr7rdLdJL1W5Mh+6jZ2hJf+4vMKbwOh6273PJ/kDzcK/aM6KfD
b7Du0DOeJ+uK8NDpGscYkm+8uSXlfPOXP0QV6G+W2VCBWxulPue7/PMXWG82
tDYMFM2ksqlcBZh77jhLDdlPmwOcKvbyD6LKSceNOx42QuklZd5tKqOQueo2
Q+5MIypfDAjlVEI4+mnE7wfJt1npJXq+OrRDeZ37sxE6H8yUOvC0Aqcg/sfe
SzrrbEFG20Eh6nIEGj7J2aNBXud7Za6UJFMNNL5pkmjs4Q5Lya7R5WSe7FLU
XiBvC+qdED34sbwcFgIfqh66TcCnCxCdOVGH+dy5L17MlcFeztzva1qpUJ2t
fB9vZqFuvCnH3NMq0BjXPOGrQIA/TdcfX/Y8yOiWpda0bD4O85edsbyTCCcF
Lk61V5P19XLOUjAkGho3v2Q8fDgJefXW3ZGcJPuX3PFMg+B83PHn06Ud7qXA
aXz01Stzgsw3/ip+mzh4oX/hd+SGWOS1teuTpBLgOFUe3bI7HaLTp9I9Vd/j
tbWaPuafCcgcu8Fj65YJ1X+7rAIjKPggXPjzAV8C7u0Z89bRpMAf1rAbJ1gL
cdfLhOxDZP5f99CcW1NkiPZbJSI1Zq1hS9nSel+yjzjp8weVmPfj2dTHjsUf
mjFq1co5RvExiKOXkLlM6hE/fzFdSdswHJeJ3GVAXs+73mcrdUKbgVk8mi7r
8QfQCSgSZuybgiHTu5qSrOVYrGQqsv+mKeRcX8fuFUD2zahn2ydX1uEdraa0
Kyk3YMnVNdNdnABj86aPC5YfcMSM1e/khzQ4vIrJSnYjuZ4/K549TmlA/dHL
IT9dQ3C/0LMInfVkvvkfrnfLTkVTnS3GAezRcMwo+7X0GAF/As4sdWukw+GI
9bZ52s/g9RUuryVynafHu2L+fK+AB8pVEUZ703Einy+CwYjEf2BJeqFZBick
BNHZJwgPpa3gPkb2taYrOwYfslbBEP9zznPCjlib8ZDjvCkB2iyMfLMcxeDY
MUq3qJqAbduf3ecvJPXXF6+Zc/x5cF32SnxRiyVcNbcunmknYItVkHGhB+Kb
TT+fL561wyv3uN1+lhCQfTbqYmGUE+6oWfRz8v2EddoPmMd3U8GQ6Wr5n/lM
GJU+/17tbzdsEuzv+ftwEhTETANwXyOwJDaVJCs1QH/cB8XGbVTwXenVbMFU
j9mLW8vGTpZhGatq9L5OKnQFXxjiOliPiiPBtVE/azBwZvf5VHsqzDmw50lo
leHOiu4LRysS0dfz1ppj3gQ8KrH1nV+fgirBP8ZsNmfiqVLuPC8yryzmo9ba
N2fBqPCRLwkt0eDCsv5rTicBwzFdmfPpFEhRZ9/2a6ocGhKFxFeKEhBGp1Ff
8DIWup87c/h6+oBXAmvSA5JHdb2Wfx6xqRi9qG5SCsLpqLnue5QT2U/DP5ze
xcddBi5a8vcYhzNAVkBM3oDEw2Gup+7UGgrc2woWzwoL4CljmkyDJYm3X6xs
Gc9FQoWo7DnKjBZmOLN5nSTr3SVeJPX9Gn/se+90pdPYGfkfv2QoI3l+Qd/4
eo+0YrwQOc3DElaCj9SGmujJz1mScf3CHF0IntFXVRgzm6BmZ/ipqhQq8Ejy
xBnw70c1sQNPZ2R6oPlmdQq9wSQE1O+7+6LiPV5yntiV69KAS8d/m5r/oULz
jNbeZ/u8sT6+xvzQ50YUi9PgjyDj8fptm5m8fdB3lcXVdG0reMSe6FNM9lkn
PQXmLabvIP5ArhyzTR6o747lu0nyyb+8n7vpVPKhxnHrz+q+KtC8uO3+KMlz
RmnP7ziX7Ud186Aak5YNhr5p1o6SaILTRx7Es3ynQoTVxgvthdm46Nojzs9c
jUY/9giJkn3qHEYVLha/gHiqTXDGY358eehLbDdZ70dtYr5rcsbCkYauHEbd
HHgcd/7nuU8EHGw9d0Z9qxOMH4zjjx3JAsOAFgkg+zWx+nkqLvjgMaH2I26Q
gXPahWuKR8j838jDGRzqhRuVLozSR1MwbYN/5q40ArQ+Mh+00lRC+a+bJoZd
S/FTRlylRjwBzN0Rz8veNeFgPP/23sImoFYWZjpTpoBvfoVjz4sW0D0a2zFg
XITn6dg2RYpSQSy51WLieTgUTc6anThZgBKJZ2f76sk+W6G8K70nAfaEqRu7
uyahxy77mW9k379+au1pHo00dFU3HZxILAVRprWrHpB4mHH+2DHHoVLc5z5p
S2RWw56KBxtfMhNAUVzjcW0xAkV1RL+nhtVDtxhlOOMoAT9pzxNvL3ueGLe5
KX8hCJFpMJO7ir4Enlk40WtaEVAb8yxPOSwS7lw5wVpyqBhnJhZdv5L1fjvU
oNfXOhaPfPjpBkwU+GghyfEw5d9znOTDDq1WYGnthoPsdpjIu0ccyPti6hH5
6NZzT1A5xOsw5xiDghysezx/kLqg/xe3f8YQchfFWEbvz0Lmx5/ntouOgmL7
7rYY5lzM6rO2TpAMRI3+t6Z9ZP3eYpldWxfYBmPuirGKLaVwPutRlZ3bFKgn
Xe8f7MzClW0HmP+e9YLw71pbXn0hIJVnuLTkBAUvUhbpVRZjIECUucA5mYA1
N7mziu7UYsmqTPVsOYSYJRuvChKf5xhWavh0N6HrGU9t2aRYoCo/3/fqExVM
GMYbZZ1ykWH9dCTU5cAEy+OqiGySH5pfuv1+oyVGv6uRZ5J8haulLFnfkb/3
73r5Rw2vKuD5hOqNk2Ml2ED/5HuH6D+fmsvRMy9cMbHz7McN3F5gVT6+/RlZ
R7LfSiYCuarw4fFoO+e9+bAiQ8PTgcxzzeQ3Yb6iRXD1znPWQd5E9Op2LUos
JsD1cK7PQlUplJj+7hFLTcJo3Rtqt8l+dOGA6tuVd4pBzeGXu4FJDn58ocfu
HEmAoZ+xYt9RClgNvJtrYQrDSJXC8Kl/fkwHrpq7FmRi2dSUc4auB2zbCPql
gwTsv3FYI3ldIx4Pbb3DYdiJOjahs/u2TMInuY+jYXwf4EtPWdUD/wI4s1vo
6cQPKsTufn/5z95PYOPITnehqQJaKtiPhmdNwfA75akZk3qc3cE2Sz+Zgbpe
dgZi2wmQ5J5X9DvYhFd0Vf++5yVlhrq5TnEOFRyD1yu/YanF1VkMjnef+KDe
wIo3j24SIJfMLLSpjIKFz8YOVoXloPja4xx6JB8b/zqRN5wUBE6D55zyz7gB
C7+/bulvko/tl36VP0mBz2G1cxLj2VCjYuPG+o4AngTtRjOrQigpDo6cPmQL
GyjG7/7NKciYfXU5FF+BdPpK04UBkRh8W1iL8poAlST7IeeYCujICUrybo0A
ee6ELjlbAvTCK1zp3CvBvrbqQ6x1OjhxCj7m0yH15qehmC+fMkC/WFh4Y4AF
tgTYpO0n69frZNaJqWNewDy+Jz/wjxsEZx14JkHe94H66ZqWs6X4oja3ttw+
CzMMT3455Ured+yVe0rydjfDY7t46fNwayK97iD5e304NPfKtDRCqh/T6gSb
SqDktNH1mFFB63KCtvKRRhQsrpSMvknBiNU32z8UUKFQhDH1FWsZrtm+8Dhu
KBPP375/d9Ge1Ncpl0seUYvhqd4xX1HzFJg73ewqn0WAX42RbMpDT2D4+VuY
edgWLqzgEOYgeeb1azf4tdRL8MqejZuyJVIwZ6/v110p/+Z3NPOCrgaD+tfs
osV3jnDsjpv2HLn+n3Wa5i7XRQCHZKqGya4aEOeMPMl5l8S3ttnMi6MmEHDw
uZFMkQWYctcfDSHrxZ/mw2i7zIcxpaPUfdv2RBxd/6u9xboYHcROq7Pkk7qV
7vldsT962BiUcaUhzxZnRleH2pKfEyBzse4BRxSadB1Zw8qYhQGD30/+7CH7
clHEW6+SRNAqcP/ublGC0mfDJ11InSseG0lpb0hBOzXD7/UnKyFkqPFbP8mj
VtJ8FR3a/uOr+JHmq6icmVR+QDocNF8eoTszVYCiPvbyWqReSFTdyanFeQFC
q7et3uP/GEVVR1zmyOtxFGBXamJLxUVD67af3yLgWsLq32KkbuKh57ao9stF
tvn2g61ZiVDb3mPD1EDqJppPog7NJ9GM5pMYxJ7epPLVDydUvS7ZZrjBwju7
ZHMStwes804fSM+H7h9JK1r80nEWHw/3ILme/kkpfpttkGHkl6Wmtyko/56+
9Ya8nvN3H9pWnW3AUmnlkaa8BDS+fXD9p3UERGyuL4uTToexuhABgZ12kFnv
yV1B8kyLA7plNruzoC7i1bZrWi4gSV2bcI7Eh+nwiI56oUoMOZOme0U2ADM+
mKUmk/1ChDF0dYwgBRp0rdayZDSCrdh6k7EMKhyO5KjDrkjkYzjmxXc/CRmG
je8ITRGg3393cN9ACVwOFZwSWl8BtRvubf5C8mdHmu9hzzLfw41PzqZ/KopD
va8rj5W3JOGegAadJyRPjpsRZpvUisGV6c9fpRsnYMthXX9e8vMHj8KeDaEh
OD2JOgnTYfj4gMjI53mSh9wVUI/l98GELDYHPp8IaLt3gD+J1DsVKw4c2Jli
iK9E3z5t3oRwfcVb8TtlBDyg+Rv+WeZveGxEQuzlDTW4xqV4L+RyOVocF/AO
9yPAfft8LX3SfezaNHlUIK4Uv6QdfG0RR4AuB6PF7XvO8GVq/FR9zCs8ASLt
f8n6cio59yjybwU+VCnLWRNZCRY964NXrCIgsPcV+xHWYizv/eI7JoKwYNdV
GuhAxml+hXw0v8JVNL/CzW/eDbxQ8gaF0lPlmh0++OV8e84JMk+G9p9Z21ST
AMZLmqYeuanIptwhsXqYgCwn047XFH+w1eBl+3UhBNt7LY0+/TuPrufrw5yQ
dhgw3ae9V/MtCJwVDN1RNAWfBoIWPiZUIZNeZaa7lTOca2cN+PaMgF6X5xu6
5vTx/t42y/Pcipjk9szp37ySSOeqfdQQCvT+/r5/63s3DF1BUL+SPOr2SA/F
2bcC2K7EnLG7F4AiwzyaHW8JYL/Ves5oJBNTrSqqpC45QXbVifJJMt849Xvi
ORU+oH+5j5mHYyX6ru+aOx9BBYcdzte/7CnE+Vclyg8MSfwcnvfRJfvavd3F
vZfEKGDA6gf88zmQH7NvuNiN1K0xcjLM3raoq13U0ajxHKXNmPE5eZ2/9xl9
C3ySh0nbOY99CEvD/ti46L2VBAi9Psixu8YAri558mqwP4GOeGnzf+etNdl1
1xxvvQsTsHWW50AZGLjIhnwi++ywTkWIUacT0MVTOmYnY4FB/s+nq2SeiNN8
BoWW+QwG81/Ly+ZKwPU+ObNLylVYeM7hje0TAvhsji9IbjGBXXV7ml+ZecDH
tr9gR+bJ7BuJWDZqGFrqKNddflyA5bEFo5pk/7o3krvvjUoadHw2K8+wKcKG
fQur3+QScOBUE+dx+kS4wNq0wyU+C408zO8cJXWcnHbTws6+XIw9utZnuLgK
jH893aJ8ldSP8//xDSyg+QYK0XwDS4119S8bR8L3kr39ZwUzsVnnT7wJya+6
q+S/P0u0hww69YqV74JQaDj8oiCZbxk3/twwbc1Hvcstw67i0fD3zJB9eR0B
nsedozlPvkcl36jAnBuB8PacNHF/lOSHRn4VLvcrwP3zbIParfd4tzSJN/wF
AQ0Za3vdHBLxcXCwLlXSH5x+ajFEkdcjxSOpwRdZAgGSbU8+biLxle/hj3/n
iuS/UzpNFxGGmm/1PpftcIOrMrIv4kk91beFKyLMuBH36rl7nNuRi4VBPzuP
9FGh48rBQ79580A7bP3azcph8P7WCdFVrST/OS+o9MAsHnh+3lBd5HWH0NHV
CemzBLTse1N1+V0ZKv96bC/vG4vKswY31/j+O1/xbY0CJAJLlXPfZitXeKa2
s/zJzP/f7+8zze9vtEPuYt1MBWqZMxdqq2diS/fTQQGSP1CZJ34JPq8Ae9HV
u+M5MsDub+GKLrIfBX5izOj8REGuMJFsuR8p6P26G6fDyH49UpTyTC0H6Y0/
XrQIakLdwLHmujIqiEbFOPJK54D3wmX18mf1cPug1b1LrATc6WeabKzNRO2x
G4Pcd6vwgkCM5Tcl8nuNE27dWZUAOuHfv7HMFUCYyoH5u+UEeHiM6m4veY9j
P8tDGkPK8NSx0b4Jkj+8O2Giepw7AwPiefewj9ZBh887VXkuApKkSx9Fa6cB
lX38EK9qLdaPvgxYBQSkSd922j8djjLUmuFdjcXQw3V2Tp3EqwxRkTc/O5qh
Md5fRr0C8ZOI8IavJlQweHdgrbblBzwrbuFp7FkCf7L2Tvl1k/o040HRlYAK
6NqYuum+Wz6+3MTiH6JC9jv2WKub8hVo+HaG6qxQADZFEh/qyPiPx65iodoU
kFxQGZCgy0EL6drDCh4EqH8fdB10q0O38ZS+v4GxqHSmJqXjNEHq2P/4+hnT
fP2maL5+B+sfXt02W4Z7mj96/Prqiy1jfxx9/Qk4dbPLdufqSpRn49BOUGvA
kHh/yi4/Ui+XOt4cPk3B7HAf94SL5SjQpLxVneTzvaFtjp+E8wF3xjr87CoC
DVCRCg0i+9dGm6x6xyI826yz3fNlCbJuN8sLIHnm8Zpfa020veF0603ORoNa
dKwKMlIjP+dO7x/l8/Z26B7w6nh4QyNoxtj22C9R4af+cFvK2CNwffY5cSqn
Gqu3XXlYqknA8xHXfQlX1NCM3mzk3iwFDePpby+S/C3oUIQLc2ophDI8L1qf
X465bW/z586ROlrm9oI1dzFK341jNFOmgKOXd14YyUPebmqamftdCMEH7mbu
5aKgpB315FZrAhYu3XBO2NuEqu86tXet8gK16m3B9KQuGKH59I0v8+mr8nU8
ucO0GFY+qAj2K/LA0BE6G1Uy3/hoPn2yy3z6hLiVxpPJ+/s8pjYlflUhcgsY
Nj0h+eTLuHi3Gd4y8BS7tvWuTC7Q8bVy974ideVJhsqz8RRsnMhSvDqahTzr
PNikPAkw4vc/fmU2Dr+JJAuN8DThLMMVT+8JKjDmlPQQz1OgSs5S6kZjA9T6
3Eo7tYLkG0efGssKR2PU87Bq/z1l2HRORmqSvF+ufEoGHBVB8HaNU1MOdy64
jP8p2U3qUzbbYaOBtDj8JDA88fZ7Gfp+NKi5ROZbYsxuwxKBPNyxTmATylfD
nEG4KvUiAc57Z5S2vsqFpw6trkdf1WBS1vSEnwDJ00YkbvoopSLKeispclDg
95f0xwwkH24I6OB9GNIKer3iTSW62XiOiSnu2xEqhAQRl4cojZjBX2vlfyUX
qieCLpR1UMGY5rt3kea795Hmu5d7sqD4lmUVblcy/FwhkAV2on2FnAoEKGw6
8CTUmwIjAhej35ikIV/cDelT4QRQzj6xX3CpQnvd3b25SelY+lHmxun7ZF3T
fPc+0Hz3OGi+e9845dPYLSrw6kxKlePuBOxWOnu+j+SHbJMfOQc7KuFR/fa0
JMEEKLM4dd6U5A+q549p1HBSkO/exV67nxHo+sw8IZjkCScrImV1RtPQdDa3
7uF8G/LzCFXy102BpNpQ8WxgNjxa4zqw5NUE83c7pndWUUGAp7cvjmEY40LZ
dYMux+DlO3ncl9hHwYX+LdsZ+hZcLWshy3StE9cV3Ouc95qAdUKcJu8dSsFS
rldYUdgN2WHbL5+4f8+/3k30XK7D4KfzlEGfHhgaXxu9x2kCxpX5J54yfkF6
MRWbui+tuJgjJxYVMwYqHgNcm0MjoMvzr0egcTOysFhYRpE4rNgQxszO+wyO
edo3FSm2w2HP4xUC5PXvULjfxrNnCIVG1ydqKJehkEjyCo5Ho/CeZTGZq6IS
baOrLwp97MDxpDcro3MnYb/ZodtnU9owl15L0DOyA+9vmJovYZoAt4s9TjPW
9dj7pnE44+NnHDzNKfsrZBKeTS3tziV59ULR5jee2dlokbBfsInsU8e29hdz
lCG03e9tG76WBj+sf9ybI3UQB83nbmyZzx0bLf5lWVzpQGy4kGI/8lWdsHmi
9xHXqe9+ai86Bi8TmqwkKF04tr7T4ZV6G0bM/k338hgHYeva2/uG7fHHrLZ1
15tWnPqy0I1SVIjucnlsN5AGRwMnxI8pV5PXuTNhB5mHFfvY20/bxcPPJZ3r
HBdaoXMnx44+GSpwSFmEfz2VinJygfobic9w4P4hAf5HU7BnmQ9dJc2Hbhct
rkiLV9HiLYsBVuIpQ5hhoj4icTAPCxX9beTOjIIKd8Qq+uoB1Lhw39LKsBZ/
8jKxz60bAy6a39zqZX5zIwr/if/1+0+8ihavcugwfGfYgM8vvGwdUOlEFfnM
Eu8Dk+CSOqlRqFGIIV30hCy2oWTfKPff91NgeUy88GJhKcz3eveebk2G514d
1plkfxE6cmuQWSgXIj33atNtqgGvLYFHms4T4EvzgzOl+cE10fzgXGlxDVq8
mRaPThJvtdrRg+5uJryK022Ysz79oe+WcVhQ+71NavcnDPn72vF75Gd8yTkf
SiHrwmT6e0P3ti4c5Xru2pvbjp0HlSgThuMgVbL3B8dqa0x81RevPNaCIiwp
sfsfU4HrN1+uclkV5KzbsWHfljL8THe4QoWd7COsVlzpah8w75DoONvfDqx7
8tol+8YkaApXZOe860bN+K0CtT/aULuBc4FHaBxCM6s4HLdnwszar/d8bGvx
nktU8BN+As7lXTb1iSvEKdeNIte3fcbe+q5dMbpToJtNV//e8CPWR86He67u
RK6vt526isi6GNy57kvIEBoWmYdHKeUDO5XrvgKMwvllvlqnab5a//XbyqHF
z9Dihy+71Q3+yYB7B1mGeRrL0blYfm2SKcmfb2274ezch3oGrV8vL7ai89j7
UUrNGHylMvHlq1ZB2rGXulMKNhB8Z+W+SWMC+pOd2abyq4Dvy0Y++5vRIF5b
F0rRJsBA5tELxqpIWOsmQpfX0YSCzF/7Qz9TYd36L0FP3vRiiI/iut3Tn4H3
bk78ksAYhNsuyd7s6cdPKVkcXr8/wpOU/axP6kaB7/YFqcsqQ3hM2WT9QYZK
ECGMHzawjJJ/Re/rmtVgK13PTq7WGFBmLxouvUX28c05G3TrK3AHwaShr9yB
Ca/FbT73TsJNJybY2DyEe3gHA8SHXuDdgCwbpxujkETzt3pJ87cCmr9VMi3+
Ylmcz+D9lvLz+ZBEB2YsomUYn1B+ay/J5/n8K35vv9qBEXI3dc0tP2NVpr18
b+44pGUm6vG8pICK8POGjupSSF//bOq9IgGnJ/aye+b64oJ46TdRJx9s8OFt
bPpNwGR58ZpTTPrgzlEd+9o2H1rEuBx7WwiIIEzbLF3tcSArgul+KAXXyHod
1iT1oPGp6qacyDKsubrDY0mvCvyH7S83biL1lGpdgMGKWBgxbjAcSC7Hv/P0
m1Y6k3krve/bpogoyFpf40h5loSnk2OnUybJuqYY3RKXrEBZha9r/Ib9YWfp
SM0VJwIk15ziqfAqh9zu73ptNRHo8L6d8aMr2fc3PtYW1G/AbW+znRuXyhDz
RI/oJlMhRaWbqmNfAs3Ha/QEzDLggTJd1FNSP/r5T3/Zr1YFgXQmTmsO+sNp
HkPbZEMCrnvHacX+jkA5fvbGLRK5aCzEkfHoE9k3i6SO/1qTibGWmS+y91dB
65+10kaqpL5oyRnY4Z4MofcF5SvCyvFuazBlI6mvu0KLTfRZimGh7mVHQUMa
vtccMH+bReruV7pWmUyN2PXgJD9H9HtMfrj2xJY5Kvy5scibYZwFnMfsVv0t
9gKRX6oZZv1kX1g0bu8RqoKdLaYJR00jgS/Rqrmd7OPt/g6rLCYRwnrngov4
q6CdZ3P16TME4Lcml2/D4XgQGf0618ViIfuoX8p3Ui/sE5v1f+CGRemdIaEh
FJCWd2ecI/v+wmZqD/sjG1ihueZuvUUZ7oxIk9xK6p1D8/Qu2wSr0Tw9/IGM
dQXIzXXtekhe5601rvxh9O/h3Itt3Q/ky9GLcVZF9jUBr1zjwyYS08Dz3YDz
B4Z0jH4k7qHTTcCZ/Tfu1tXX4FPpkYPtTYvFuVuoWj0kLzrYbWL+dPc74Oh1
PqBEr44ntxc5byX1frzBatu1GpWwUuJ85J8zziiaS70wQvKZ4IBva3+P1GEo
OOz4OVqNmcnBt/QCqLA6/C//gWQKXOLtm+UPKoRtUkcX00heuoqxN37FNlP8
ddaNU8lWHxP3JPv+Oz9nb2z+O6OhNvzOc+ZkybtuqF2S6eMWGYelKd9Fi9oy
rN7CeWTLWDfU5LAFzuyahMqnyQ4Nfc2otf+w1d2Ibgg3+F09zTMBz6oc8y1r
bdD9bvdTdY5A2BGu+6ea1ONLhT3M2YsVMHC4ap7VpgxdONXaGQ6Q/NlKTWTK
KBPq0k65H2crxh2JeU+HkggYPvVU80FFI0h4jyfKfW6EfVX79xrPTcFpmh+N
7jI/mv/GjZbFKz7q1k7p9iBPa1iU37sOcDj9YcJCbQzYKL2aIXebUbS5Sm57
Yg8kZ4u4nF4aB/WR8QSdts8Ye+Gt/a9dXZBr2zpacnIcBlKzZE2lX8LXl94r
vsqEYvQ1Mf0/JA781y9miOYXo0zzi/lOi8/R4iq0uLrzHal7rI0gcpwNdcz9
4PT2luIURgKm7gz2rmsqxZGWFx5yxXZoXM3yxS6GAHrpmJmr0kl40/KFezdj
Om7rD4qSIPPfizZ3k0Wbu3lCm7tpCj636RS/IXxhP2cgtD4NEofsbtcSJJ+k
zcWML5uLCaP5jEyc+F+fkRhaPO/k/8Y3c+7i3xoWBLuKU6OPKvhj5IugIskF
so9cDc9Up5TBq8ds1nrbK5BdcdUfreME2B92UWs/VgFStRyTW7lKsIpn1mXg
OgFinzU2+qUj7ticSrgKU6Basykzi+xT47R5mdu0eZlftHkZ21X2NY/4fXFc
m+2PyJ77MC9Y86h/kYANd0/dGt/8Fv4eOpYuYhkIxjbS5nZkvr2gzXF0L/Oh
+HM8+ESqSj7cFr3h3321Fq06syfr9hNwP8mbk2CgwLGbRUIZrZXoH9340J+X
AEdbwaISo3T0Ngxi2SVOgf7P3S+qST1C7M/N3zhsDHGMAwNxMm4ovG5lW/sS
iT+0eY3+Zb4Sr6L72iQPZWHzheG/r6ejYONjoTmOHgKOHB+a2BKXhb/eZyuN
C0bBrbzKrYIkPvTS5jjoi/53jkOQpk+vLdOn/CjLWjuWBktpTbGmJs7AIvDi
l9QUuT5PBPiLgvww77jpSneLaPRWOVb26Aep72hzCuK0OYV42pwC9/M1bxZM
IuH6rpPOfBfqcOOM9K5rwgRo33a540fNgCpp5ZoVt2qxtGu/mimJq6y/Lf9u
SdBC/y5prcjYCFDlcLd4S+bDDM13gG6Z70AQzUcgb5mPQBgt/mlZfGdnt5ZU
vCYeuh619qKZFaRoHavN/Pdcg4cb10YXYaez3L09HvkgoiBWLk/q4kBVlbPf
uctQ5qrJUq4Ggr710/uEBgHWtLkGmWXzj//1bcdl+rH866MIN9FCoMv1rhFf
ZYOOeWKHgz/8O0fi9hVv7lL4cX6j4ILqG5QWVtF5SeLV94dCbj/8ET1SDcRO
mRXj7yYTz3A7AoRpvC5vGd9TWJt6pdvMEWV6728xrSrFL0I/BuLJet9K0zuD
y/TOSbOeoO9dIcCxe5N12p5ojAiuYL0xR8Dh4P3GiRGVEJUZH5nP5I/XZuDG
Q3MCZDXYb7dS0lH4czpvzQp36OLtZ+Qi6z0x6X6xfg8Fj66wpKdmvkc3nYuX
M0ier3L4K+Xu0H2QnzJR1N7oD9ru55jfkvWlXZcgK70/FQ8Wz3nCSBl2NS/s
XetCwG6arlFZpneMjA/oxr4Jg71X/9T5bM/B70kV+693knXtk/2uc34QD3bt
3yi+rRz5bOzl+ixGYW6+pjvwgxdaxnHaO1yxB8HE+t4C8nuDU3b0euqXoG6u
ecvUlQBMfeA2/jSP5Dm3VlXXHSjA3QJXqZvcKSgma+DZQfbZ//JA02U8cOi1
XK+JpiUUeR9zXyBKcCnZMT03h+QP+uovr7IPo29wz/Mt8Umw6xCn/VO6UfCk
6ZfHy3QNu8SaIoNZDwg97rB29VZPXCcdc+T4v/c8769h/NCfg1NS5xRip63A
YbFafqmL7O+0fdeuZfuuZ2UNHegvZoOOpei+kF+1uJuHXezaYQKuPj/xuHsx
Ect/L/CuJeta0efM4MEUsi+8WbKVTM/GFxu3vBT2KQWJeelMT3uSh8grvGh8
VwmyWheGfnJlo2/fj1G/+wS4faAK8M1WYpB9cP/r5hxw0g6MYSfrqDstKH3J
muQbFhyuJm6pYBnGP1RD4mEibb/Rl7bfOEnbb/zNxFT0hssH/C2HJaPya7Fl
OrJMX5KAgT3CZh5eDjguptmyvj8H6COUlKPI39vwvcNSsj0MN/Bp5cvNIxQc
Ko7TLiCg2S8q6s1QOYjObDWeu1iGcl2ePEF8BMi7tReye1BQ+n1iprZvCeje
/hqYpEPADX8le5vuCnx62GjCfWcRfDzimPZeluyztH283GX7eDw0PFRYhofX
wvxeugWGoUTUDsvudZXYoHQt85A1AWkW+5gShYthdenFQv1bNWik/SDIhosA
z416msdZs5D58v5zfnEU4BLd1R3qTeLYyQIxiVfFuH9oqoz/UikMf93YJEby
zFe0fS0h2r5WM21fa1XhEXo+y2qcXhnvJ7cnHQbZFRsG7hDgMZL9qrG5Bm1f
PdmY0RcKBca5NS63/r/9q14a/myn4c+L8yWKq/qsgVFf4WFVAQV0zq6VSv3H
S38Y5UafyoJ1Lx/zUI7Wg8YOtzJlDgISaOchr112HvIjGt+wXsY3LtDys2hZ
fr72PrikbRELPMGe38YEWyFvxYODp29R/1++kbFszre/7dcjNi0TeHo6fHzf
ZA32Z8QGbJcjQEIvPnIhLBYsPMxXLZnW4ha7dL6xKySPvR+/TqrnOUo7rb+X
458JDqJ1nFLDBJjR+MnUMn7iKDNeObC2Guw/bcbqqXZ4tY6RXpV1CgaXnQ/8
iXY+cC8tvrQszk2b85Vcdk5OHC3/lZbttzNPjKq9v14Kwa2K963aU8HLZb1v
SyABQmYfDq65lwusd72lZpM9MPlqTqBeBwECnLs5LzDEwYnkS20n+r3hXFXk
0nYSn598KrNjinSD3eEZD/SMbaD+kt8KH5InhCytfT8QEo0xubHKjyXKca0g
f+U2dwL0ehTphylv0N4gZeGTZRXukz4VeNWIxAHHI4LBwgLwjP9d55RyJmiN
XqUyjxBgROM5LcvmVf/S5lIVl82lDtDqaKP1f+rIjFZHZukLwj+2pKBJau3F
ucu5WBOr7tlfT0DHx0RXfcNYPPb3YMahDRRUoXYpipO4dI7GHy4tm3M0/0Z9
25zijSzZ+hXmXfnAzPTyyPcmEm9pc4hLy+YQjWnzj/7L5h91afUlumzfOI86
rTpT2YsP+8YEv4V9hmud0T3VAmMw5UZn93i2H3ljrreIp7TA7CZvofe+o7A5
ZEK+d+wBxuuumO64Hw/e16a8/s2hsIkIhXmP6uDT3fz3qnXCIPusqFMByecZ
PI/YnqiwgkpP4fgj49HQKyuaf+YnAVGPi6rZFI1Rt148SsPCG1x1Isw2k/ex
6E5Nq6OsHDL6jw0JFOlBZ4qazL/zdg6fGvSQ5y/CR17GDYtfSpDQW3fEhuwj
AXslV7Jdz0Hb/deilDP/7VOt4P3+koz3cZ46pzmE0spZSRb7KoCnxm3sy+ZR
kLjT/GWrghfUMYqsrEsLxoMjajzfyHXTuuR60l5dD7IHfbmJ8utIL8hcT5Df
W510+9SrGAoK1MneH9yVg5pNpUYzrgSpa89tU40vQU55S/5gRsQW5do5ZVIP
yuy5kFW0Kw4/i6/mip0rwyNhnTPe/55Pzcl9ybzjiho/BZ9dDy5DtQqGZrEQ
Eh9aj6ptiw2F5OmNCfeNM1Bu9tPa+0Mkj3VLPXonMwz2zT4uPGceg8Wd8QcK
ZgjI2SV2+nZWJI6dT5x+u+AIXucYY878IqAtlWm+YDEd7eSLfn9s8QQWtb3O
/OMEfHnI6OuhSkFLR7GU3xXR+NzUbUU2ya+k9G4K6SeVojXf2I6EkPfYGfHk
kg55nZLHTkzc3ZSL7RPRCr8KStFcQL9yC8kH2l+zUl40pOGDz8kb7IPKsWvT
i5UnyXjCEvsKNkMDsDdvLbOfsMHWyV3n3cl1e2EWKZal64kqP05Gxow6wuOO
bL1msr83K1XDhYQC1H6c+3z+qQ62p0a9/9VIQMtAu1k3EwVlg9UkHH77YtEW
pojWTPJ6ZLqAEhUMkY3fdzmW5SMvdWYklvz/JqFuvUvT6lg4e4bNp5KCC3dn
K/1IPO9kfeCSZeYLYhu9xir9ijH9hdWJnWUE1EydvEF3qATTWbd0Kxx2Q6OE
IWHzIvL+bvXpEzqSjc4cdF92nbIBP5FOpckvBHTZeAY+aSjCqvzMtX6Fj7Cx
z+0U/POVrpLYIksNBwXXlEUF8Uzct2Bkc4bUj9zcgseHNN5B/FGluAAyH66F
L04llRKgeNRsxelT4bDI9lnj26NcXM2tk8r4733ay/vMfK9EQE3itgKO/clI
ZQ56ZEHqi8+FHjxCq0Og5fVKe5uQbJT6qvDj3/5Gz7mhNa4BpSgapSjFa5mC
W4rr26QDCGg8fm7AvqQEHUXyt/kPhqIDS/jcv/2fU8e3f09XDgJxk88s87vC
8OxmpeI6su5yR34ExeuEQk+pgLrI5TQM5hlS+NcX+ozfU40+1WH507CKRv0e
2BDSNiPhPAF/g2aZtkh8wkZGmY6Jn92QLnZmytd0HDR8B47xu7eCDp9O5Lgw
FYPGjWW5UpKhVaa725x5ClzL/ni/D+5EXopE38yqFNhw5dLeha2TEKQ3RnnI
1gtld5VCw01yYCJW6A/372Z4JdVjMT+TAaPe+2tYgqjQrCUZxsXcCmJxufRb
V6bDqU7ByytlqdDjHTlK5S1AprXMMR78Xii7N1uEgcRDy2vE780JzRipkPE3
5nA4Rly5CiuKqEDcTdK4/OkZPBt36DVkNIaajcqm/87RFdgulWWv2ACr08f7
19zwBtGOChV3dpLnD1hWVM+mwe5h9QH1y+fg1eUWTzoqAakHfvk0RFbj3NdF
iy+DzjigK5I8q0niqm7rB0OzIhRiEP/55vZDrBOofGVaQ4AOF3sbB5RCQkDB
4xwtW8jju5M8lUj+/3ulLGlRCjRKhfyxM32Nly5XTDSReV4hL2H4cCwbBzJl
D57Y+QpPJTypHO8lgLPlarGMczlePzK4teeoAV6OYVRIInnUm45uBtN7TUCf
VC8eYvAJ/M/OhL6gnwL96ydePLIrBF0701B+3mJ41OuyR9+T5LcdDYxcMlXo
eGYsO8S8Cl96qja8HKPC64ir2if3leFXq7S1HSSu+rlrRQfeJYDvmLqmLUcR
HD0SwyNuVQBfBT4PHyP7tc3pS383fikHuhWGkgaKFCge/FSRSvKQRXdRl1OH
ErFG6UfqrcoENPSq5YcxAvwfMFR1pZXjL035b/fIPH1W1yjffZ2sO42lsX5/
XsjbX5NmkW0FO//4bs4n70um/7Zz/SvK4JELj0ysYTHIlivPaWiTOq7ZXGDV
lRiI7Hmivac1EKaOr6P/N1d++t6sdyhHCX65uS8eWvOQpXRRtdyLAIvGgVDh
igz87idSujE1EW8l/ox7TfLqCCuBoklhA+TLzksLrGqHxZV17c+ySD4j275a
t3YS/D+c7Hum2wXffD6uGeHPglQBO6GUGWOI3WRRYuneCcmpepWRO6fgmqia
aLSnFaomvHtL5iey9jPnRJL1m8JnostxLRGdzhctvaxqQbNzodE5D6jAf3qr
dfCAIzKbhuZxUKJRqfPb5eF5AnhZsg5FRCVCvsPFW1e6G+DI3u/cjHQEKFyc
DeHaFAr3wkbLnrAUgIz8yknpBgL0y9JvnrCLQfe85l2iDFXYpLr7yhUDAsR9
v7xldIzGvUp3NtrplKJ3sNgPlUgCuBy5Bc1fhMC3sRjK+5JiuG+ybu8aCgGX
TfA0658ECCpX6T90rxy0GWe5tzoTcF2WoyVmMAR/BsvYsX4keVHwqdX//LxW
/tpzS/2dM0oy9GjTt6eiWVBRigJBwM2nP7uN0+Lx4id9vodGFRguWioRSeqC
E98eaqz4ooRLFy89PnPAGqbjUlMz/r2v2JSXGRo3gFo2mRv4xMag9gUxpU32
hKj6uCJjh0G8xcUmdPjwGILm9VkJr1zIb994x1WnANfsDh/VfWsFk4Yj0r5k
vVeb3Umvx2bYd5TVkCONiqOfw1vPjSaDqGLumwcpztB8xu9K/InP4Ls5+cba
sCmwzn5odCDPGjYOt3s/F+mCs0JWQoMzk7C+w5pvkdMDBfQFJ/fFpGK01snN
68jfJa68c+WOfSno/xBMB460YvwJO+92aSqc5K4vlr5ihduKLm0LXBWPl7ft
05kj8zCt3WI/a10KCJxr0zkr1gjxW/SkdH5SIYz2nhjfsvfE1m8V/pUdFY/b
iUAi60gV6kms9L3+lABRdbWSaKdonL/evU6Puwzjji2cOBxE5q2JL9HCFgG3
SiMaD7gUA3/J5yvSJaQuUHOI0MmKhxzDxVk7jwp4G3h4m5wVAXIfhUzfrPHE
tuhKm5HEFByLjlzZR/6umJpenT+HyXrIO6t5eqYCU1vmeKbNCOiflhXZ4aAC
p9L2MRx/ZQQJ8u1KA+T9qvG7p7BiRQnktW3O7M39gIXD9ez0vSQv9Wev8mEr
BI+5mZiZVQ1YW1f4pmiUxGcBVYqzQhKu0u6XNttRDMK3VstZ5pN8g9M+pjc9
B3WOx91QU/oAodov296tJGD0+pmCX+IewFGkcOFuTRi2Bm/mukryMdfeqigZ
xUxYzZEyMLxQiyZSX1qeniBAo4GxxeGGBVyzWSdpty4ctUQ2+p4neWaT8BR9
9Fwa7r7E05EgWAUvphxelJH4nE3XHyrV4I8HipaYhhSzYDS6ffYz2d97r/Cz
iPkmQGrba/H5u6U4GNO1a28YASfXbm9qXRcJA7MxjD7SxejRyP8+nlzn+e9s
27ZWR2DcvI6DrVkevDNYyVHTTMAIzT/O/tH/+setFFnD8c8/7v6G//WPY25R
7ym51QpbPZly5yvL8EZpa+7Kb1PgFuImYeeSDYFp495qp5PwLy+jbmwLyUt5
xJL7Aupw6NJxru3rS2BV12mvP3+oIPDuEnsEyT9vKM+fazDPhi28eveVSD4Q
yJSkZqFTCqLuPFYNr7OxhuMlS4gjASqmqyIVJMugtGD9hYuf8vF0s/+eFlIH
TWctBDKdz8LXvEI6oo/jYUfasEQMqb/KVjxcKbKyHFtP77I5KlQItwkB83xS
7xw54TIo8CkYdOcb0jh2OuFd94jFD+T6S4cKF/fwlAE9a86Fg4IFyH+c092E
/HxNZnmnaR932Ha99jS4eGLQOU3B6+Q6nF60ImuAgiyN2W013LlgeMjTJo3U
a/o2arxz2Z/xjRsd/86wZsx+/oRh5NgkrKEIOt+41wx6bY1vKrelwTYrXZH8
AipIhCiLe7u0wmtH8/ffziaBYuKM2j9frZ3U9zbeV3ORfp51S1KHM4pepbcW
7CSv5/zK4vHWZuyPHzkvEeqL5XMhj+XyqKAw/S2mTdUEd6jdnL0X/QzCiNmH
/57jXG21sFa/2ADNseOKJVNvSVwQT5bcSsD7pUmGw1wZIFV2uPlwzj3MeEFc
YyX7ndNPvZIrQtVolth+W/LiSzxYNt4c8YS872VZb+c4EaPNO+c9dylAiPHT
TSdJXprMzZLIFUoBzynlKqujBhA0YZg+nk5Arc5W2czzZbDC5/hRVg4lnGFU
M/0dQeLwwQW6jZpZeDFq+G3Nd12sT9WVlhwk+0VyR+vR9nLkPbffMyHzLmzf
tqCaTPL5a9lBRnS/6uCthVCUyYpWsNjgazDuNQUP7hhrtglSIGZi5fWOE6Ww
93GmRYYaqX9Zj0X/yKXgL8WWGqaJchSUiL3Wf5GA1W/Hj8x2leGAQrGC2oZS
PP/SWbxPkuSxInpHxxgyYEAulNi3Mwd8njJibRWpK2nnsBUuO4ctsuiuRHhI
OfLP92leNaSg94O0G1biBNxSTK3rqfLDsuB9D2wTdXE0ftNGZzJPpn7b+l1g
KQX/xAvbskg8eWBgshBC5lVIge2IvEEK+Ll/uEUYR4C230Ti0UkCznwd/P52
phBX+AiqR7Hl4p3a7dtGYghgP4wZ+51y8C3x+97RkXRMZ6GePEjiMJ3K6UbP
2iC42KUx/EArFR7sFKm9Q/ZxrXYttd91Yfg0viO1nrMZS25a8z9vokK+2u1K
w8ZofCI//zxqoQiv/z4edIDEBzatPTVH3Z9iMvMRvVtTSdCzLz2g6zsBRz3E
Irt63WD37yaf+2ZG6B/DfKiG1LmbOjmoUhcpkPaH56OoTDOyOext/WxFBX0H
5ljFLCPccpvdIGkqAN1iH0yykOtwa6VYT+PPGHzJ6PQ4w6wUcjtswv4fut47
HOv3Dx8uLRokSihCGUkiUZRXKSQhEYmEkpmsUEayMxrKiMzsvTeXvffI3nvd
b0JFyvP+PN7P8Xu+juP37/nH7Xbd1/U6z/Ma56szDAPRiuGAOaVYsJZ33Xn/
fhnK/bw2XeSHAev+U0PWij1Iy8KVQuRSL2iV03gH103D8Uczd+rsKpC75d9P
f6pqQXqVtiOhjQSmOurXPB4Uw4Owi/6v1xoR1+kQ36tVJCi/riemJFkE23Y0
zan/bUAHzwXtbx0iwaILE5tjWjxaC+I+snK4GAr3uX36mYbBD9e9bPGauchl
jj+6NLwBLgVaN0/9IsGBPj7H8Y+ZIOtLyXrXrA7td5Fv9WbDAMg/LnnquEHz
93mopQpGqdgI6yheT5S5Dh+rzUtFBhyqFC0NVaBZoO5B8xCf54Q+2RX8v/qE
7u/Xa3Ni8cBYI7VrYb0UhRs5uH/9goG4IY1x9PtIuBA4NUR7vgj5fk8WsUYY
tA6OXxWICkfcn9ze783Ig9P+Q1ZdDRgokh2Lo+VLRwkqRo92utlAu805ZzSF
/47Tl8euTLcCddA7x8tCxeiBQbHVERkSsGjx/FASKYTn9j1zb2rTUITDNo8z
uJ6XcI92WdetRoal23bkzWWDG9NXexZcJ9upiZ1fuFiKmLpM+rvYc2Co0vdU
pCuGr/+shb8SuP6oD7o1IugHQy2OEn6472BNKSoOPViBmqtbOH9LF8AX+cJK
XXwcQmS9Td/pu8Alr8B0aw97+O4Vil3B69XT7a/X1fnLwFR9u4gUTR4KuEEt
fdUKA6PQdzQv50JAOPhctM2zMOR2tbLmBq4/m/U8P2YKFqMJXeM79ymzYOXI
QqNMCAbriYWtQ/3twMxuq5d7IAXEKdgbbvGSYHu0SHTOtc8g9lY3ksPXF2X1
RMnprGOwM5nHtK8rE31aPJVhQ+MFgYuRXFL476L/S43Bm6IMSbhx3lfbbg6l
x7A/NRE4L9/0737hkwYNe5wP/fHxhlNxiT7keP20G2t0nDzni4r30SXUX/qI
KJUDk2bwz7ceoi5LnkpDu1HAFfObWSh13+Uxk1oMYgp5BK8l1yCnqyKaT2or
ENkx8mzJQRIs7JmlvO0rBg3ae6dveH+G2b9KxvfxdefGupzdgvOZyw4FNrJd
aeBa0mHyMRcD3SL+d2ROcbDtTSjW4pMJL8YOx9V14r6yuu/C27dTcEPqkovu
oR60ly/xtzsahG26m30A3bf0ASSLGm1rhFJ0Jo1yvbdiGJgot0WbCs1A+cWn
vG85OpFfZUC/WkcXnLfwpmA5MYvz+0wF7YEQtDP9igrXcUd4T60jPITP/+2D
Eldyy0ZQpDj/357pMVQ6o5GFQgcgbJ/Jv84Dw8j8+omJbVlDKLGuq4JGdhzq
dF4ljXPlIJRPfmUWspBPebmFVAGuw/fp1H13yIGgf3tbdEwdUYLbBO8/nN9F
wzTt7xfhuj/pUktQ8ifw17x/mgfnCyWeFO7B6RSQoLI+VpUTAAp/xDhlZ3Ef
V8Td3ZvqB3VIS/B81HfI/hnn5Dg7Dw56r1/Jc48iz39CownjEyj2osUT0W2d
QPVvR9zbYzVIKMs5jrG4DNGm6BzNx3WL1aGFy+GOaVD21c3m15VZpEv2eWMp
dAjezyo3nRGrBDVRrYNXLKpg7WL5V8H/3iG+oje/NReIMgT/5TgvGiPeowcF
R/D5oDLSkigy0AWx5Ss7spyK0apq3vNRvnlYHd7EE8o2cTq1Tbzl4NFrx1Lt
wTl5QGo/zofdw+7XMi9h8IFqExcn8D4CfzYrfnvMMRyu8N6epeAbAnEyeaW8
T7NwWofCgEywEylRpOTwPO+D1wYFVzsFZ+CEuDH3v7cdyIpdIvyGbTd8+PH+
iKDsLOzO0muYftGKCnuFPupZf8f9f/iJXvs5iFlK3FUvGYg01xbeCceFwCmy
vZpnVjE4vtigMnenBUZ7m1YQfQiYamopudaSwHXefXAxJxJRqMv7zu58A1ns
8oLKOJ/et1xpYE2MAhN99fpl2km0uhiXe5NpAvwPST3CzRZ8dFK++qGvA+BI
B1/4yhz422lp9PYFoSfdC3FsxwaAzStCo/niHGTS69zc4ZgH8geaM+9LFEHT
cCCJHdeThkTOGOWWnLEqkZ7XapEloFBJ07xiUAz3LpxdNXyG8/6L8UWXqiz0
vqe/kPMf7otvmjOcrsOA74DsrbsnylDSKQOP3LBixHYp2KQGr2O1PX7XRSfD
oYI5tux1gz8kTXHakuH/1wmiz2PElj6PRmSeOQFDaqiEW6LE5mIPNOwahMlz
89C+foSBKyoYIfTrOpY1AK68WUpVlHOwk1m44fWHcOQlNCj6SaIKvdaNjl40
wWBUwDv5vlg5WGzrXrPNbUUiJ1xKXvOQQIPIAVvYkgM2VMxJ3cYUBztprrX7
v26CBMVnnIdXScAeIhnxoscI6e+vs1B56g8O0j3JQThfhzGTU7DIxyH2GSo6
Hr9aRBaWdktIDK/bPArl9D/dEU3j2GLVeAZSzdgZ/gPXb/GDn4M2FKPBJX7i
YO2vcuh8fF8iyw0DdoGv231fhKOFuDEn7uelyL9BLEIoEgNeflGNmY1yJOYR
f/N7UQ34b2/nuDxJgmv7REgncV2X0zRzN2FPI1r/uuBQ0EiCKiJ3a5bI3XpB
5G6ZaRWo6rLlINU6DuFb7nUQ0c5cVcqAQb+CoeAOpTQk7bdN5fSxMlh4Gv9q
6h1eT+ot6h7qJYD8naEnMoGlaNBG5I4w7k/3C4kLKo+kQfZOPXHRk5VIOVHA
vgufD/WvBXwfFQagJ27h6L5LBiSmkuu3jWBwoUW4hOZkGnIJNnRjmquEo3k3
r357itfnL+76+xY9wYwxRUnvTyh6fmrUNwH3g+MBshyhDzrA+a7ZZZ7lbDgr
2W5rsJME5v3KGJPPCNI0z9z3fngaPREkC1ppygY2IpeplshlSiJymeS7b0nz
lrWgX0rOUoxTYWhyvwLjSg4JPjSYXiUJVCOKk94MQmpeaHg+44w8rturdBJd
90MJ0nSny1XZ74dmby91CKTjvnW1xOqqGAIDPh7XxbeBQLORJ5qN64rBL4Gi
F2RrIH6KWUMy6T1IlYmsyOHzXHfHoG8ISw0EPlh5/+22B+z6k6zU9AgDn3my
wjsLFVAnlGmk9NAbcl9xKxg7435fpa/0gXQc8qsQ/Z2V442mrm98bVnCYI17
h5T7Bj7NQcTgeZgVEjjVyhKI/90cyuynEmerUd8tCQ5ffg8Ufm3yTin+/cnf
UCvW3fREXEmf3asvG0G9amo6F64ThrBBx1dOidCfPnuo/IAMVFDWnHyE69X6
460NRqJlqD3t59LjMFs0GCtxPAH3HRGeEfwBipWoc8n+h9U2KzR7kkxYxAGf
t52RukL9nXCzyEPwtW0e0vcWbq5+Mw99q0FfJrgbwfXVw6zzYq0gVCQ5qp03
Dypu245P3oyCJSmutGYHZxi80NxSjeuQSY7WP03DVUgtMwqZWlWhJ3+VX+WN
kMCMyIk6TuREXSdyomiwZaphxhSoeBTy0rY7Enzqy6OkcJ2W4LWUMEMqhjOa
YZEtEcXwe91hZzu+3mOncwf1+apAmnGh/4l0Ocyd+aJBRoX7hagfi17ThZC7
lipZypYBDw++P3o3CYPfSqxlsuPS6EYD5ZW8h85gTY4xeuHjdsRtR1OJbyaS
Z7kp/fl7FhIy0HxMUYr7rFntUA6vYlwZrMoPl2Sj/WxvFLxxHU4bmnHNiiMC
2Pp3XHThjIeGPrFFRlzXBd05+EPudSacvzfQNJqSBpUGL8uYcf15itDtmoRu
1yR0e9ZY8nrhtnbER+W1J12gH+7MuxQ3x8wAHaHnbQk9f5vQ88K9PwZI8wao
79j5gRjzPKTHJn6Rrh0DS0Ln2xM6n4PQ+XeL7ocXSzmgGqYn3udEcpByg6Lp
GO6XNyLZWPiCg0B6+dj7hyalUOf5V4EyGterPPIl98+FQgj90e3t6imQ35Ow
mwXXCQ1E7pD2ltyhifb06wcDolBH/+y4WG0lKuQzH/6L+zgqwhfIb/EFlwlf
wLDFFyTEy/rODnog7gSru/nvgpFb7FySH44/TGXV8hYdRS0MUTIKGwngK8x8
2c9+GkKotkVajU2hyX+jZm7Hb4Gn24pmL+MYtKhY2OQLfYdjwQ/FlLrTQfRm
fZXw1DzEOHFf/+TUDkN7W0t/0JYh4cFpNEGaBwUiN6mdyE3iI3KTnm9/Hnzg
XAVcf8qfJPsiH6nGtF6mxte1bktbibZACchx6/8kC8pAFjUPn7XgfMrLftqD
xTAfxb1WjNgnmA7HtE6UheH6s8+wrWXpUBmqom1WKrLPgbnt+yRf22HwSyew
9i5zF6r1PkFZLdiKkoKEPtQKzEGzqVPCL6sWSFxPzIh0SwORvIBPZmkkKNY5
2DDxswH06UTMdnAnQrL6ol4yJQZSkP3RhdQErs6vL2GubbCj23awWnceDIn8
ounJzfyiU0R+Ud4PzsaRgiy4p97+L+WfJjrwZeZJwCAGtnurfhtqN8CI/wmO
Q4c+wjbm6PwB/PeSOGwVZTzqiBj0VS/HXnkNY6kajBr4eml7+32iLy8OHWv5
rsrd/gYxsrE7OS1jEOBpYcVIXoL4uuMNDWzvwBjLiX0c2RjMEH1pTY5u9qVl
IfrSSpHYxIvPxQFz267y9qwCFP5okcuxBNf/Bd8yEh44oCjd80pcyoMgp/te
mWdiFt4SeCqByxC48fVf8UU7i4DFMPjR2wAEbcNWq5o4zy4SeUTiW/KIchpW
A67MxKC3+84YXFiKRzfE/MMPzuD81RVfP9VVCVRsgU9si0qhpbG8JYEVA4aG
3ok/YTkQcWKUqW1HFj5PzBpe52NQIWO8+oSsBBlLObsOd+cia+fh4aNeuP+1
0zKz2lGMHnadzq64nofue1g1H/yMrxeH69JnmzNhLFoy53JpEjz890hHtQ0f
HyJ3SHJL7pCa7FsfzPIbalSbYqA190P5pLm2ObyuGurznxKbKUFkQU/NvBby
0PDn2RXDNzjvdC+dYXZsRaUKV7LCNXqBLo//xjWdWVixdzmlsdiGZkXS1E9w
d8G6XQXf9slZcJY1V+85FINuVbpZBpY3I6RL5WnaRYK9cpu4LoHnE/hT5THa
cwLRaMG9/y9PagOiPuteO0aHwVkC7yJwGgKXslFcNp4PA8XTDfmJnKUQGLYy
Qh2Dzx8C9yTwLwR++uL3t8MvE8FSxsOmW68BsvNDbrYcwYCZwM224DP1WiwG
X9+jB9waNOqO8ehBalcuL86no42bOMOZ/8UjuzT6+tKTkGyMgLS1Ux162OHm
o8aHQRmB3ydwNQIfWtbvtWI3Rhrb9m0LPfkBLfJV0v6X02i6uImLbOz9f/Ef
BL7+VFb7cFoCLND6NP/Xp8NFsZuZDq8bl3U28d2HN3FnAhe9bGv97qwPdLpN
9gq3p8IXbc1dD/B5+EVkEw8j8AACny15cFlMNgYxKHfKJWeWobcU1t+W8Hl1
pXQTFyJwNwL3ilS7zSAahvtGhWP7mvPRwIb0eAfur5UIXIPABwmc2UyXtnR6
Cs2cDGOnavOGktQ3bgw0Y9Ce5CwSiM3B8bcmKnvLe/D6tn94N3UWdJt9F1HX
KAWD9e7tPBQtqCqhtv6RPQkyp+522i2WgmXZip0BakVG6+8uiQqTYI/iWSfb
+E/Q3jTLksf9ER23nTulhOtqh2uOHJnd2ejQAZYATYlqOMRo+nmvJAbUSQfs
XhXnIiM76qQ715rglbKqLHc/CY7ZxP9KXYtBN1ke7v/9vhSKLk40uIfg+qH6
ueOQfSSa1SgIG+bOAl8hwdifuC/uzM4v1CdPAZ49vYwpfQgddnNQPJqCgbjj
RoEqRRp4bNc0sLlZjQ62aO55rYSBDtVdw93jCXDj0vNfUhPliGZZPKndCYO0
DVOvu1rxMJZXebW8sBjlrNH4NCRiYJ54cFYv7BtSKml5sBGWAgvPT0RH47pl
t98h3nvnklBcjXJHJFTAuQPfm4fxdT0U5kxirkpE7yWdbVMWy6DZhztiCq8b
JpJr64Iz/tAbfaTbwTQdOfNaPh8fx/WDx30GzVoH6I15M8n7MAL9mXIS/s9X
Bk8IMQmQXqDzIzwSk/k+0GPt60iBz0PHtWqJdksPxB+z/Y+gYgza82L+ItlP
vF5xpab7TrdAAH+xyd3SFJB5nP1VOooEjU/FPzQeboFpJ656K/5SVHoufVIB
/x3pLek7Pj2qhlqWojGha1noXtssu/MtDH7YydBvRFSjsOvRtj3fCgDI2R7d
4cegFUiXZRaiEC9r7zM/x3igFFAcmcP1gw7T3zbnl+WgYpnzjPV+Dmo4cZVp
yhiD7zO/4k6FVYGj+KKjuV0Rov++9qRbCAPjr4tTNpcyQczY/vfkvXTEzcWZ
c6ce500jIx3ejULksDYdwZGYAsF1cb/3ZWHQbji1sV85H1HxeQbm2WfB1dlh
/WupGCxfsj2iviMcVSUXt4vlfQDB5j9p/+VmWFFWv4wqTQNFrrWTzQrR6Gaa
oKvJMF5X+6M/CTKOIa2RbUXFmVOIKni8TU4gB4KuUZTKq+O+b981rW5wQ9M+
98q9cL5TP7DnyNm5OqD57bAo3mIBO2Op3n0SxuDAI9b+m63fQOhSJjMrtQf6
rMb67iT+d/feebpOYVaF1Fn5xY7eMEOiTIjvxgtcJ3tGhZTKZaGlmECqZ9Ru
cIhsv6fY0H9+YdTumFEFqKtpBHjpGUA85y4eBU+8frIEXyznaoZTLCL0aX86
IE2p2Zj3xxzUS0+TB/ysgorOhVI00QzI9VD2lAQJWHm3bwhaVCG2EFefSulq
VKb5ZTQOX0c2XtXuFualiMFgbshLoATZ2Eu4iuN1KXVfo6DrQCHQdGR2JsYU
gPHf6Xv8eD3ZXqabIsuciA6bmZcqXk5Apcai/FcnMHgZZ5c6OGIC/yLF22/p
OcJD3WcN/+nqnj8Ut/bcjADm6zz2V3sD4fxxdPMtPg/lJ8/MHb1pgtrrZu37
2tOQ/vbzvvnTGJyhLLWwZQxFrUrJhuONzeiZ8mGhy30kvK4K87Y3eKCTlgPr
NAHhiFu4atd3fDy9dLKEZUOCgOJR1FPfxlx419MQ0or7iKHTluvUDyLQ+vjw
+naJKiRRdU+wH59vQ4aHP3rdCQTSgYNNXdYIXBkX1weLMGg6sMf6H3JDwj61
1zhrU1CuMtmjsnkMbhD91se29FuvvfrSS6bfD9jJq/Y+b4pCNNbJ3t9WMLC3
HcmJoC+EMzPfTw9TNqArVlSnfZZIUJBed0pGJxlJLpy8qHcPAY343Pv+NNyP
sFqcpC3zgTfUNyguR35D9LSc8cdxXZ16US8vjOIlcNQWWI0qf0XLvAGymes4
Px6OVHKSDkDPJnptPfZkwFSSYgDPGAZ39m8XZZKOQOHdAu3elXmgq+z5zB9f
L0/90ocurnfCn/Q1h5rZbEi5RHlE0mkexHoMSOGJn5D3537ttZYBiDbbndhK
MQcWhI8wJ3wEJ+EjfhHnAvuD//dcoOb/kkd6hdD5Tlt0/hFiP5+d2M8PI/bz
1f69HZM+3gzd1u4X7uTno3/6mneuVpKgbo+ssOefTCDPPn0qAtdrcTnfxjc6
MUgs4bqhr1CPZCQfNVO2IGDfWJQqxseZpWD/nqnUYjQVx0O1nTET/KpZtMaC
MHDmvjjYv78Mnm5kvVUszEJJ2+y378Tr+cllv0E24SzUry/+6KhnHJT4v83Y
9h33U8EhUjvvhIJk7kGjqfgP6BiNhEjJGgYe2ejOz70foEtG1Ulw3wckNHON
6y/OX3ZriRajnO1AR/1nhF4iCWrpGZgH5EjA9z5iBjo6ITf2bbLIz0yIFci1
BO95sDU89NTUKBdxNGtTbs/6hOrcn+UtdWCgukKrsK9EDjnkiL+Sp7SB03QB
LQ34fNNfow0rmE0Fpcq/gw9fP0HoTcSXIbyurvLnXk7DdeO5pzHuU632EJEy
mSCC89odLWaurF+ZqAz78yuGxhqxxXk6BeD17UYdxYVl2Wo48IVKqf1gEyxJ
CPjLmOD+gtDVSVt0dcDdQLnpyiqk0fjGVAH3d8+3bbhxz5GgJe2gj2pnGRro
pG58c6IEnb69EPJf/lvqpR1WNx4XwlSTVKrfqTz4GEP1IDsY552CswnuDXHo
20/12uWHMSi37Ei7Ff79xQWsmffqq6Llzn8Dgg0m4HyeWmwa/3/ptC64pqRE
Q+1CZ6LZt2CYn5b66YXrt/PTI2ZkzzPQ7I3YnKDpRHTUtO98Gz4fHF/J8Rmw
N8HjY+7lAd/yEfXnPlslXK+K92vf5SPvgvmjNKyUuzOA/Im9hokXPv6DP6vJ
n5XD+6xZdoH6EhizO62hI4Hrxh59+6PPy1Hp2r3P2VCCvK6eGbksjeu0+yt7
/syUwnlb97UDZghsnxbWSeng3wfVLr7nLkYZJCHqjuI85GpQ03fqI673jNLW
n9HHoLAzli9Zk9uQfc1BTXU9Eqj59SYJkWLgnn1zxd/5RlhrZnsgvAP/fx8c
pf56OQLZKL+RifxZgvbYdly3wPXwp+nLcsIXo+HfvGClXHg5KI++NZPH63/Z
BdOkG7PR6IhM+6FHshXo1Th3fwQ+n0UXp+QfO7YjtvPs4nHanVCl+XPhy89Z
iNx1xpXsQC5i8ewdp6qox9dnodje3Rh8k7pKvVybCWly2RMcKbVo8dWfTk8e
DBQ0kzwq76ehLpkzTx6fqYKqCaqOC48xYDzsmzdT3o68389/zuTogszU7Gyq
klkoIs4Tf5NtnidSE+eJ/9+5odOWc8P/2/4AEOd6XFvO9XS9uW5Y7elAnNlV
nxlYkuG2lCEdPRdeVwcFY+PelMHys+NXYnJzkahyHbOqBc6zaor/cpTLkZre
419LuvkwwlFz4awuBu+talSb/cpgW7vr0MHkPJSaRXtExhQDv71/eiOCW1Bt
vXwszbOvaPjXXoFTxSQ4KWaZl3OoEfgyL48k1n+Azt+nBt7RYyCoJJx4uqkU
6oTbyhwM+OH21QMYdTTOL1/V3ry1r4BDjy1o15RKIE2rRm1VFAPf26ISakIV
yFXfS9HkYzG6o7yfpu4mBrtmkJuUXhnk2d/45t9ViPuikpr/7mPsjM0yrNQs
RuMdwzRsh3KR5Rvd93M4/1bsEGEdYelAhza0H1i9TIO14xLkU8fx7/lq2jvz
+wiyMy+5at0+jCq7OGqsC0egKs369i7haDhwjsouznMENZK/Pj5JPgM9I19s
Ur1yYDb62Yu7sw3g02i1++JPvA4Q+I6YTfwTgVcQ+1RCxD6VDLFPZSX2UeC1
9BAq3yuTMPS4F12sU1nqHpsEbQIPJvA7BM613HfyqYgjWqURbPtqM4Lr5e3C
Akwz8CCrsoVJvgkaHpz+ekeGhLZpyhlIJNVCxz1fm1r7bEh/n5L4IWwGLQQc
DpR6PQy0Wj0H19sLoJy6xSWR/SscELx9t6wag6+7OabmT5fDh0nhgqyBanjB
aPjL4w8JOpd8JgIZRsBrdN/yzPgoaI51GKsqDkNhsOIZt4MjyGH4A1+/5jTq
bX4iGS/SAEyKsXtyP7QgO0rz6AfMDSg6TJIfjc/D3xKbQ7W/GwCVSL2xOR0K
Cp8Pc1IexeBhxUGj0AezyLcouUtu6jvcQ7P32fd3wewdXYUs0jRiHqfotYqM
gcesO4eeJI9Ari2P5EbVMEql+Xvl7I9E6MQWH+xwn4G2UJ92tqM96M94/o/p
tFR47D3OnsI6D++I8zhf4jxOiTiP8yXO454T53H7iPM4Fqc41lCZDGi8FGl5
fEIfOaRezGHHddq330G7BXwnwIwu4cOA6TDo9x0wjl3oA90Hbr43786i3b+/
VpN/T4MDr/jJye2GwJjARZc28cMELuC2+f7r6frm+68a4v3XWdsDu37ajyGB
f0xsWqaTiFnuxdC4SgOwxT1++fzKKPKScOQUjR5D0dplxl7sA9D3sYzx1eIw
Cjq+y1xtZgANamA79jmPww2LISFOnjZUvNCoyk9Wi9T2ZfrItuPj0ENlFPUo
Hzl01H25pJeP/FNOU8WFYeDNpOSTUJICFgVDAYdvZCFOmRiGu00YIKlTgRkc
I8gpq+Scdf4IumGV8fuz2wg8djH8YYr/XjdXW8jNW2JhwssjSsZ1CJIsuOJG
AkbQ2gWF2utGI+i4tUFH6OMRcCbG/xMx/k7E+JsT40O/vDk+e4nxmbj94Nf1
gCE0nC/mYJI7AxpYiuk/jSogo3j8g0U1BZrS+Y5q9lWg1j+hntF4vZqjLN/7
Q7IT3ej9e0uFpRWx5h97oqA9B6N+F8Rv9lXB7X3sZV8sHCHIal8LOa5juXsn
9umfyAU63hSKiYt1YO0smMh4DPdT/5zIP/fEAGtsuwlnfSU8D8xdEzDDdQVx
78KcuHehQdy7SBF8LIkGJhGvejYXp8xL+Gh3orlAbhxkzf68vPR8AjH8Lm6X
0A4Cl2latr76CXB2fxYi5ViLQqV5mGrE3yDtYI5d+2QxMBCLXFq3nUB7qzO/
f12MBM6jD7rMcybAnsAnqjZxGgJPjXdo+RCYCIF1Q5FiaRWIJEsV52mNwd9R
qcHCj4lQImTL63G4Ap3QHuq4jM8rSkerbU0xg0ixTTR/biwdLGh0q5bSZqHU
YRNnJnAvAo8+rloo5VcKuUoFrVmL6Ui9+kTgr/f4ODBt4h+UN/F7BG6dvUMv
/lgVcLPKpe3eVgFB9+a6LMkx+LDB+M7XrBTpsc7ayV4oRtUN+eZ1OO9vb1+6
sVMnDzrSBW8X7sqGrCZB+UVcD7fF8v+RyE9CI0f+npK2i0eV/ndTHuP+vfpw
d5AfvT+0aD9f3d5eCu+n1pL9/+srIeXf6fo6Dq2X716TaKlFWcpVJSs4XyxL
8UqK3oiBM8cOs7qNVMFbH1u5oqcY5AprXS4jj0B/D9S8Dc0rQ41/s0tK/DCI
Urzs3LszH31e67t3/nYDlG6b3OWE8+z3h357JF3SwOZuQ6zcwwrUQaksLGOJ
6y5B2Qpt9WhkytF/W5U9H3bxpo8L1mBgRMWrOLUvEVhPqB/0cixFUo27cpy/
4vzbJhJKv+IL5qM3yB0NYtD51jC/INz/Ri8z0UY9akZVqfc75ci/Ic1Hl5DD
NAm2XXtm9ZezBvbyCrB/73EHhyOt2y1xX0nHkpJhF1yDqmOfNlaxuSBycakh
pILBnsCyI/Nc1XCTt1bwuKUDLKwOqD00xIC62t3hnGgdikg5V+xYX4OoBTXY
Of1JMHvOs/osfxVIMIpaaqiWg5cd9aA8JT5/Asn277lXiuI9eFiXpRHyXbbX
NX+GgYo3vCrvywVOwad6tCeywM3zNr1kNgZkChJifqbf0If5I7Y7I5uRd5Y+
3fogCazDGe9K5iSgvfDvQuRyLeJJVSA/KoL7DpX0n5XKcTCncPZidE8VcOhN
lpto4/PK1r+Opj0SYePJH+69L0P/3M04rvpjwGGYsNfscDnoWbor6j9sQxxf
OT+/PEyCttnOLz4seSjjBWfI4+ON8OTNv587SCTYsNIOPXEvFdbJzLxW5irQ
o5YUm87/3/o12bJ+A2Y06PTTItARD+vniZX5oOnRujCB8+AS49WLff3JsIPp
nW7A9Uqk3eAiv4HrnK+uVfvzjtWAsQjZy4uBCO0R524fOIHrugexDZG15Yip
W/YF3Wge8M+cLb+J/1+FophMfxWCYAZnl/XkDPRqcG94aCQGJ6TX/gzSNyMN
SqqXne2h6ABT2ctF3H8thvabl6NyGLmvJux5/SOc+MJIsvLGwCyjQxeJViNr
ivTfWJALumXmJstngPOmxeOdWYOZSCi+xaf2mxNioRULCcF9ip/gYd9nv6rg
9+C9x23qFpD6kuzPPyMMhFU7OvXTqyD6eauC80IZJH7WrfXaj4EIsT9st2V/
uIz/B5NgRClqPqYuMy5fhGTuasY8wj+nhtjvVd2y3+u7KtlGx5QHt5Yzhkdx
/3iLTF9SMBeDM8T+7bYt+7c3Pc/R/mJMRJZ/k4/03IpBa6/kLzlMY8BC7Mee
2bIfe6tJq03rdBn0XtRKUaNsQ8MKc/6R3CQIjUn//YsjF12t9VaGew0QsWJj
du0vCVLunNiVQZYKQaFaRwqYKlAQfdOiqi0+b88q/F15koR2xz2UVjtSCb9p
X3wzxXmEJ7Bmd1B1IsgUn3t6eroCMcSzx29/iUFC5bPhOqN6dLDefHB/aAns
3qnXdHOUBPsU5w9p+lYDxSVP423HipFKLekr1Smcx+cztleLlaPD85Xb2Rjz
4cLe9BFafQzuLmYLltYWwXm22NwjHzOQ981tdd2xGPzwOmwtf7QZde0+f7VS
NRDtOpm6lLZCApu3D6Q53pTDRvWyYmmsGxiKiF0J9MGg9mTnksdYDWpREDZS
VdJHY1Xv5vyV8Doc7v/1GVs1XD4ir0PT9hA+KTa6bsPXryNxX+sWcV/r97nN
+1rLXFf4h6ddwJJC/tFFyxqQrxwby1LFQIDajf5XVw8yC+NJ8g7qAdulHzpH
Wqch0f3qn9vH2yCM9WSjsDUJXf+iGF1/IglUap4WeGXPAR/ZNsNX/3rRjln6
h5c/JQI78X4kkXg/0um3+X7EkdDDooQeVib0MGXB7bBXDu7Qm9VX7OxdC5+Z
7v1uv42Bc6Wsp3C8K2hWLfSYDEej8uR9uv/tg207Es63L7Mdpm3UdqFLZYjP
45o8La4zX1NyWUzS10Be9/GAE2EkJCXov7v8eh1Y1nzTnB5qhnFTjaKT7B1w
neYMc8vGHCj2ybfo43rhrMGDPUm3+lGFduS+T88SYH0gRuluRCPcfxQoqhPa
AlQ7DDWP1s2DMXFvyoi4H9VD3I9i6bL59KP/A6Su55SFnwlHg7k0sbmr+HgS
eS95RN4LIvJeShcvr+Yu5cIzQU2P5zer0UsXh1XRqzhvEveRNIj7SCeJ+0hf
CPzxFrxAKI2PTrwLvrz+cSLmXzpqKi/Oo34zD+W0tuPpMilovXIqfVEgDUVa
zj736cG/j15Rshy9O0od42qnfGmJ9uqw3zi/gX9/6+uXSfXf0TbRe9uY7vfC
WL67jqHfDJA/jqJU5e1An9MiJy7a9oF3+b7cbaEzcNHI4YMGRytKpLn0LlKr
A8SCw+J5yuYgnmbqKBNvATKZr5Xw5yyF7fvnnL6/wvk9+4mescVr1HIwxdfB
KhldMhMOv7GAQfbV7LGWPnuk0q2518/YBrU+KlV1wb9PClk6eYC2L4Tl9fkN
nEwGXbJz//pJGMgJBJ2nYQwAuw9UhzXvJCNlsXKujXkMlLn3qxwaakGLT8MS
NELCkNQX6lBSBgliAn7tnFGtAJK7Kud5lU+gesipIcYDg4XCLk87ymw0vMDI
9ErAGbXLaB++MYCB3QF6DjuuWdB48YtyoKYXyc9SkNPItgFrvG21fd0oDA3f
mtzR1IKoXPZd0XachOg7feO8AYloRCqZrZYsFR3R37ufa+j/3Ft4vOXeAhOx
D/CZ2AdIJ/YB7m3fdk2W2hmR8UkffKPRAx/NzO8YcszDqlSmZparD2LcgfHy
DAzA5T3LTid2z8FH/tgrQgl1UOt/40Q5xyjInN/eEZk0BcGKLUmmvXHIsEUr
o5+9HfUE7hA1VCBBNGvxPpefkSiJ2aqZYVcrusN4ZmdOAgmve0IqF0W+4v4j
90qxfCnoFJCzOsdgUMpQI/F01REt++VcjzubiBpMqCZu/cCAa16gfeiHCVqw
+e7dzeOGVlvd01Xw38vl1/WLyUux6BT1O6M9KpXIKb+mwBrXS3fvuKu0P4pG
TzomPwbkliM/vyeTgI//0hnF5dwHzWibWnyIjUkYPHfUe00/S4II6Uu0psyZ
ICC3GD9xMBEpllapN33HwP24/sqJkBoImz/Dohebha4Gmfdp4Osuf7+B4sTn
j7Ag0GT8vSAGRYVL3Li0gvMmkZMzp7KZk8NA5ORsp1LNM7+sjiIuSX5TYI1F
RQx5ZMfwejJ/illuXjgfWd6S/rn7Rzy0XN3wEK3AoDiRj8ZCxQew8W222UG2
iL8pSn77Pwwa715p+XY4ArSWQpjTDELQ8RRr7w787zYNX6NT6HIGt5aVF8ZG
k0jqW0WmS+04yBF1RoSoM6M6m3XmOHFv8yJxb3MfcT9THC10ma96Q4sr48aU
lDX0DgU91sP/7oX2XWsjpt/Albt74+R5M5T+uVJjA68zL4h3XrPEOy9v4p1X
uPKJlLf476fqYuBceT0JRZcLzdwbw6CHOL9+SJxTFxDn1EPZwlUe5T4oS7t5
/Y3BW1TboeXi9BcDf+Lc2ZQ4dw4gzp1p9T28v/xOg8vfXv76PR0PJUaSP671
/9dfcvMcOW3L+bIc8T6rYMv7rAjiHdbdLe+w3nYYm6765KC2IZbd/rKNkKe7
Jk+7QAJpIi+ockte0B/3Lhu3o5HoJHo3pCKdBwID73cl/XeP/dPUyOEPKVAA
StUt3XbopmOJRwBeT45yi5JEGnKRrZrGS2apOGDZ/+75szp8nsS/O35v+iMY
39Woovuhi8rXBYwy8fF3mnout4u6Eq3Jka6EGRSB+hHPXv1bGFgS+BCBPyJw
ip4ap8jBUkjcxl7HmJuHeJQ4LAVwXTHTvYk/I3BeAs/35+FuNWtFnzgrg62X
AtC/pGJtzjASiHrvf8d0sAW59GrWrsQEovNUUSKP20nQoT5b/iWsARx3tHsK
3HKB8GPW46u4LpUScHHT6sZ9czBXuYKoO4i9r2Xpf47jvDfOJxzNRH7x1GKn
OK1RFWLPWB7F/cKi3/FM13fwbn8Q/+EqU/ia0TK3DV/X7UhWfa96JGj3p1LV
khkjTSv6mfrfGEjb/ZduVows/jJK70nNQ1DlxOOCr69MsY7Y1/ahqLz5308o
z0WzDye5mVsxWPcwtTC5r4VSrpCWBXstkOj8Mboe/PN9PjQ31TsXwtR4iS4T
pQN8+GE3vAv3Uy8YBoKHaCvAs/Tc0vnz1hBu1ji/iPtNn69OKuqPKpDe1AUZ
bNQMKesf2TmB/93s/g8McsI9yDWYq8NEpRdi4rCL5TXT0MoPpmxFgcAq8qLx
mls23Ai36JXGebCB4iWPk3c4zL8ukyIJlQJVp7sdezSuA9+xGYssxEJ3RILr
Gboq+Nfm1DWF615didq7nDqh6GHyQBfF4XwULSAu1YDPK3qXMYMd0eZIsDb7
2w89P5SRTU5Zgq8X3t/zSQGzAcggOXGvdlw6alCnplvG151oRLTdziPaoJFe
fNJo8BXaQbVrtg4fhw/Rkrt2n8tEf7ONYppPxUNIxIU6xS6cp+7SnHnRVo4G
aX9S/Vk1Q7q/428X4b7g7eRL9f3PS5DwEe4HMom5qC2WyWjlLQYl85vvFsMS
//fdogWxn9BA7CccI/YTjPkO0BtxFiMdBbEj4t/KQDLmL0eqGq4nOV58CV8p
Ryu8e9zvlNaBb/fF2vw6EuhJc8kX90dBGK99ft4phOjoGrQn83BderlCnrU6
HqIt00xOfytHt3q8xPzdMDjGzG30q+krKn9vmk/Wlgb8tMr03hMY8A92pWy/
mYE2fnBFfBdPhPP2kixN+P8rdsgDm/UtRGk1tzpt72dCQI7D0KMEDOaoN3Fl
Av9K4H0HJTZS+CvQ02+VEUfsb6L58RdpQ+9wPjpuOXXhbCWivMnww49TBLm4
+RpRO2Hg9vpyq7hLBXLdk1qjUCeLLt1fXVLC+YgxiTnt8GAVdBmqZoyoVMAU
g4PCsz8keKLaOPT4STmKsRCvERArQfyHFqJ9pf/brwvi3fiBYE09bx8/eR48
PvQDY8f1udoV7s8XhjPR2TB+lYvXUtG6bWqdQhMG9ieeTtb9ioLvIQVZOXp1
wJHiuWaN85cbgfduwUN4NPkzGWPQl0P++sxR1eicf1qmHu5bAwncbwt+9VIC
NbyPhVu+egynzKrBrSl+ukT9/47vLXsRkPw+Btks0DiUOFaiiUB7tjTcB+0n
cLstuCDGE81hlI96lITWfSgaoaJqx8GcGRJ8UlZN5gjPR49y7YVS3jVCYK6w
3/dh3M/+O3yQ5kQGMP9+xetlXYUUfktJc+P+wpjIoWrekkN1hHHXuZvXU9Hq
L76DjpcrgZmKtGpvjEHHn50kyo5QUD+8uINSJx35/tKj38DrVcRFe7O1zzGQ
sk55YcfXYpTkuL5PMBXXXcS+gf6WfYN2Yt8gf8u+wfaXm/sGu3b8777BIrEP
QLZlH2C4QOAQK3cN2I28eGqLIcTg4v6hngkDSSJXymVLrtRL6i9KKWklIP1a
VmPPoxyUHMPigPD5VnDFVHy3RSsSq5dJqqYPRSd3LU+9CyFBFYELEzgbgS+0
5tmaU9ZD5weLo6Z1XnAphKp3HOc72rZN3IfALxJ48T2WH6HvylBwkP5Z5c5X
aH972t5vIf/lQG7ifV838X0EvhCv7axiWQXXHnWcUT9kDlZqlojyBQbTBP5w
C85RpOR4qqkKylToj6HJMpjes6r3eR8GngNU9Ulnq8DV8N09Dt0yOFo6/urC
UZyXr92Sp5ksQ5HOlXSeNMWoU3vXZMoDDB7135bNbKlANIVKN9/IlqCQLLbd
xSIYrDr/uXNCqwiUTfnPfpXIAXORgEezoRhknHoiRktTBr3MRWEWfIXwST8t
1Bqvz1ri/hvSa+nodsvbQ0e5UpBl2+hkKK4bm+mmyYwdilDLqbsu1zOzUMLJ
xUN0kfh6JHyxFOGLNwhfvF1t8x3Tuy3vmG7VKbgzvvJEA0kO0q49Ev/dUygS
wOsqFXHfWJe4byxL3DcOr9j0rf8qN31rBeFb9Sn7n+w9UAg1U3t8BOPnkWUE
t1xAz3eYk+3P0V2ehEmm4i9UlP1oWOJnt+b8ABR3bb7HN3u++R4/iniPz+jD
lLKujhBPQLOHnnEu0vaoHXz6BQPs3281p5U0xPlEuFk3JRGtqRjaJvVisMGd
eVpFKBJGQ6L0h/jykaZz1uLHWrw+Hz9uwEL1CrjGsmnimiPQaLR3PhWuJ+0T
uvT0VupBN8aExy7uM1SIWP0d5sLg8sO0luC1CvTmFe1zsXR3pEovMR3sjOsW
6ofWe49nQ9qrxCHeMxaQ+odjxQD3U9ulQhKoZRNhD9vLWbW01+i3ZC2XAu4j
eK/HNxYm6oPx7vHPWm5mwHDPgrwfH88oxnMXfa4mol8ND5wbL8Uh/2t8pK5J
3O/3oheVwvHQ8LSxfcOuAVTGfDiC6DD4qRlzo486HK6cv7N/p04laJPHJz+y
wT9H5W/Y+7BPyCokjkmnPhudbB7W2oGPw+L06SAqZUeISbaRM+T4gh6p0EVw
4Xy9cDOhOKksF1lg29XDrqSBrJC21asSDKqdvY6ZppagqgWJcSOPHCi5W7h0
FV+/PcQ6Ohf0v+torkywyTurEk37OZ1HQXrocel8xLIt7ncIPGwLzjdvLD7B
4IJSFZ0MDrr3g0j9SEKq1hyIEnkLvkTeQhyRtxBA5CqwE7kKcUSuwvuTv3qp
VZIRq+YZfRPFCggvENwziH9+6Oq38fV34eCfb8V/UioP3b0cInIL56M8/YMt
lOcqEW/B7qsmRXmQ1ZolaqWEgQaB++Rv4gUELqcd30IhmQWeaYwP3pgnovv8
MjUybRgEP9nEIXUTVyVwjSVramORSnQadop7fX2G/q30fTJyxKC7mez7E6VC
FJ/CNq2WZIvKf5hSNeN67/iumS+aNwtBNnzDV0r8EBSeOMQlgs/PVfsPSvc4
Y4Em4MUHupvmkM5YxrQdX0fst/n5Sj0SkMrPD2+6opWA46LKKuD+wpSNe5Sc
xwF2KegV5CUYI7HwB3u+4vNqp9vTnS2jHqice7v+xZBYJDJvnL66jMGA6yae
sQXvbBl/dtXbHSXu4+V4e9Yf5DIk/Xfj86Th/JUJLosgFDPfSG09kwFHdVM/
XRjGgJzQdTvT/lfX9RDvaq9ueVebeuWVBuf+YuT8wppfxz4bnQ3uSrf7ikGa
2xEvU6ZcFDHFXNrBnY7CA57nPSj57x3x5vcs3PI9R5ccv6AeH2RGI0dn1RQP
fL7r0RT4+kqduZA26VKJftk/P9EWbIV6Tp9VXH/9f+bhly3zcA+too1hcCGa
MkVHzq9kotsmtpJ+cbh/N5FsJNf4iChVc54psCegHoFDAc/wz/9F5DxYEjkP
0UTOg+sfc+eNc96IozbNyv9ZLMyu5iX7499zOPJeiXtBJpKI0zykrvYKdcol
scIIBjn5SpEa+/0gJI962WlECxp3jbNM4uNcL15lrGQQhkrvPeJhHChAr26f
PLBWia/3uGRzZSsXVGda9KNBJRbRUKVrvcB9N3fLg29KUZ8Rg1t6eVhNHDB2
yiYfw+fDsNc20am9H4HxW4Li86kopMdBRxeLzx+6WMFU3cJw1Js0ZNfwphgp
XPv3kzIL93HE/V77Lfd72W/5HWI5H4pCgpKSPnr4gdfKGal8vE6ySW/icSGb
uCeBiwapUp92KkPjXLOzhqMiMJ9yuUsI5y/juieWE8s96K6MxxXZjB6w+2vJ
QSqfBtaN63PuOyMg5QMrdShfIZqYZhi7Wo5ByvSZbFaTCsSTHcpBkfUSqVOf
uU2L+51I7X6bRLFu5H8QzozL9ELEi4kDd/bOwFxkieuStwacGDmz1svphGbM
bjP44vPQXM3Nt/99F8o2nHml1d8N969xnS/5OANhlJrRh8e70IK5VVqbVi8U
Pwy4rsg4A+ZiL6zKP3WiD/ApZjW9B6QLHH9U+szAiNbHL7+GfSF9+JqLOWcK
ilJvqQ2ax3lkVl7aPLkEGZmd1uh0sUTkWPA5aVyP/UpGSec9fYFHZ/D+QFIq
2gclkiYzGHwX6RKAz91IZWiadUmtF77L7crU+zENScT3WSa+Tz7xfZ4GmeW2
HQyG0uFvK9HCTaijk8e3YScGt4eYX97sq4CSqX796RNlYKTyl/XGaXycbf1z
DgjaIvlWCcrw4/j/9Syx8/T6HFBEfLUnK46BwqstxwX+4L5vQ1+kKBCDKqMW
B/1ZZ1R5KGmO36cQPfCxyYusxsCdtKf92Id4mGlj5SFNpCGb4DzuvH5cl9Yu
eb67/RkxXVa/9OdHJlwvYJwXGsJ1jk2MyTXacDgQX52p7IEQ9f3bbw0L8PEv
k3qwq20MraUypy0uxEBT8zPHKzAF8lG12qpxRQC6tKGnJRMRr3EHt2M2Bpwy
bLwyjMVAoah8aczLAdXeL+nxKMLg+c9Ul4DVaqCROM/49m8TuIcsJ8upkMDh
5tenNbZ1MDd26+wjpXpwPaC846Mxjne8IO2nioPam0+O6Fr6AmUFt7suvi4c
bk8ESylloUv8e0yWeePQ2t07Qv86MAg3NctUjo6AO21LRxPI81CTX1J2WyMG
16y7Nr5316DGKTfKZb8aVM1n0nMhiQQv6RT52KfykcEtfu4110K05tFtxOWP
1421tZM9o6WQ0N0K1LoIgmvpn+fpYKD4T2KXSroj8LndfbGR4AkeZhuPWv5h
8LhG1zNIpASleDK0hsflo4qjdRr/cL82fPCTi8TKNyQaZrOja7kF+eW/qbZK
IUHWBMeXDzcCYf8eVanqpSKIlZHNXP0v/2e/M4OoXDjKeD8cI/ChEDVMBjTP
lGHwWmrWu2WlCj1x/fvxZYYHUjM/Rv8c143WGuS+5r2O6MLk2qm00D4Q0Xtp
ohg8B6/K6vZfi6iA0XWzs9eu1UPJWHbCcgEJrDSZmYoNqpCH+EBgqkYV6g6s
d7WfJsHGMquKpWMMCjLf+HzMIAY1uE+0i+Pr4pTp4Zcvw4thXs1hzWp3LrCn
2j9Zxv37Vf2Maj2Fe6DrsEFW0fEZRWjfpb2NjwNrB4o8IJKIxLyFF92/taDF
Q7QxbRkkyCPuic0R98QOEffEapqsI/ae+YCeZ2a8FVC/BGP7Um+t4Z+zStw7
ZSDunRYQ904XiXtldlvulenVhdvNPohEo7a5P5KKKpCU4N3+lDcYKJzT6PCr
iQGBuoDgv0vFsGyo/I4t6f/kToxtycUykr/+eYDBC6lWudy8rZ+B/p76qU07
jsFh4v7qmS33V/+/e2tHt9xbM9BmXKGSjYYTMfGRZw2c0VHRAz5UvzAYzNKk
rfVrQKbDR9X3i5UA/X1LI44OEv69dvO9lIyHGzpWQZy8kUhLMrxXCR9/34LB
QQ+hMpg83bSa1pyLTpukK01b4XXj0JXnNxyr0dul5HtOAV7o9m1T5zf4/KwF
F4pLtyoBxTB9paHSgR6hoYV6BwwSbLLkYldb4as75UsbVIpGd3erM+C+QIXo
c00/v9nnWpLoc81J9I++SvSPbiH6R8/e3ewffdL2f/tH0zp5uRy69B0aimu5
NFdTwd6WOjtnbh5ECtYqi2K9kIVpp2L63c9Il1p10gXnR0x+s7/zPNHfOZro
73yHYrP/snDv//ZfDp2z3q0tnw7lWXwf7zeFoebMvSXxuI9WIfopFxD9lFuI
fspt4lfuPmBDKPX0X/WsSX+ULRM4no+vryXVG/fnbJtQTBu1/csfzuhZEkVx
5g4MHoxv9imuHdnsU3yQ6FM8G7vZj3igYLMf8UGiHzHb+q1fuWRlyMnyjZoh
gzXSTQtJ/hmBARl1drceZynMS+s5WHRbQInH9Ve7EzFQFYpeMssqgn1GThLO
v50QtSmL8FOcHw8RfanyiL5Uh4m+VBmqm/vhscR+eAixH65E5G+rEvnbbcT9
qzCif5AE0T+ohugflEJO7XRBvwYdLeegK6VtgXJbyzMveUjQH/X7PG9iHfIz
5p+8zdAMNpp0T6jPkeDSiFRPjXI9qPg5HQi+nQDO67mZDRy47ybOI2K25PZ3
D3UbKpfVg05xkVw20zfwpVYdD+XE4AyR4/18S453EHFvgWfLvYVZIs/5LJHn
bEDkOTcTOcAJW3KASUc289Z2EXlrxkTe2jcir3VyS15rGLE/f2fL/vxflc38
Um2tzfzSHiK/tJbIC/1U8L95oTsKN/M86Zz+N8+T/Dv7gLlhJczO8AVljNbC
DxD2+lRFgoGJbaLOA1Wo/fs0kwF9FZI42HPy4SQJ7pwSv7SWl444yuqs8i9m
oI3+uKgVXFc/JXKWPhA5SxREzlJqgSTPT1IK2i514wC7czTKS9e49QSvS6E9
QR7dckXwyJCOef1gDrzrZDfqCMPgbMefO++HPVBcmtOuvE9vUPTjcp0FvK5q
ETyVvIWnFvq/DAWoR6Bn3WuxrysaUQr74YM0FBg8+8Jtx/rdH6LO5mroiWfD
i+8j1bG4D71F8FTRFp6id7Drf11WCj/SebmadrYi2qeTfir3SfBa1saiITIR
eR2Naz6bXg5WNKnCV1wwcM2v5W/7Gw8R/hhF5XQuuh05XRuI+ylZom9OxJa+
OYfYbrZFdmciFReWkCijGmjwr/p9WhQDv7Ynq67fg6Gz8eoznefpqL9lLi3s
v3OifJ1RertYlKLKPqvHWgKfWum/7UzAoJDoT2G1pT9FK9GXJ3RLXx4zIref
e0tufyulxXmbPfXwIVn9rlpgAXonKNjjg+u6R1ptTtLRCUji2Fcr88lQkDzy
XjiFhEG2733uezl1qLCUd+CdTjFc4g501cT9L5Mcq9Cz8lRETh7x3DM2Dp5Y
7EcMOB/x33/QfaokF8YuyqWH30tFJb+yDN3xcS5civAzzSgGUvfnWY5/WWhC
yirRHdct9bGrTbX3iqGRQe2C+itvoG9ePJKQj89zJ0825kf1qNrifOV9MX/E
2Hz44CAfXj8j2h3dp8vR3DDlnMoVFSj4s/x6Fl9fO2mF2+ZPVMFDfp3Qx4vG
oCOtNH34JQbiUk9/VN0oBMWd3mee0fuB7Sp2jRdfF06EPlHcok+6V5bedtZX
gX6g+q4wpUaYYSLLNXHEdVeqikmOdSrqN1GUPieQhL6wXmz0HsCA19Nw+36l
ImigkzTlNcXnW8BiTABez40epj7pMnJHpq9ffJtU6wdfffmu00Zz4Mot5+zI
EomSLpVYLsbVoaA3nz/yCuF8beHKX9AcjXT9+NScbarQiW/0ZuMGGFB3Xp/Y
sP8KBoN5h5KYM+DzMT01S5xHHhK6caF1Uzc2E7rxBsGPPXOb/HiT4McDBD8e
JvixjeDHcr5mqwNSLcB5cuXIlHQxem9aqXvbHddXCWknTW83gHj8L4E5zUKU
EneJYpREghN7NvnudM//8p3Xq3orodMV6J5bhc10WQHUHXEIDH3wX1+bIZbv
59IQuyFj9+X8OOCWEVWlw3U7F8GDHgQPthE8uJOV/YWKUSeQi9pYVaqkw50z
N6gOJM2D4Vrlq3znQhh1C1mUXfsElhJUKpVV+O8V7+mrbFCHxL+UGxgouKC7
3u/3KF/DQChukwfLCR6kJHiw4NyzJNHAKpS3JOwo2WyCbj00f/7UDINPsKdH
aWczEvWHy7lVrUB1ZPEduMzDJ8KPLG/xI6kEv1wj+IWO4Jemj5v8uETw4wGC
Hx2nj/MKLdZBwvsXbqkFLZAm/HeP+OI8aBC+6c4W3xRHvBdj2PJe7K/wMeHB
vi+IO+UGrfz+MvR0Eu6cDMd56v9yftFKvNsS3/Jui5PgO/0tfJd7cUz5m1AA
nKzeL/dHLxsVm2ZU/8LrBh2RZ4K25JkszQfSv1ioQxJvd0t+u+aD3ETbw2Mu
YjAku1Psn0wU5MW7TP3VfAu5HGc6/HA9OU3w1MHC/+Wpt0TOhtKWnI0O0xO/
OmwQGKf4zP59UgSNpwZ36OL1zZp4JyW/5Z2UJuHL6ghf5kH4sgAuet5m6lzw
+/Sx9368JWr6M9Vl04X7O2+l3HArb3SO6xj3C4Yv6HUpuZ7AOgYuBT2SEX3l
yIlz4iVnajFiNi194CWN6y7Cx+0kfNwfwsdtaz8bYypwEmlInDJautMPLXer
k3aazkEe0R92dkt/WEair3ddzGZfb3Kir/d5om9sPtE3to7oG7tI9Id13NIf
doLo361H9O+uIPp3ixN9Y7u39I19IG18z+pbBtpdPrvzplAFbBuI+hCJz39j
yqsK9n/S0fU9143Xq2vAQ+xcsjvOU90K0RdOGWch7fdxHDOn0mCli/dGdR2O
O/g82xNVC4yurE/O4zrd8eCQ2Ke2edAi8pootuQ1nSFyjRK35BoNErlAFNs3
c4HMiVyggZOzBs73M5HEnysPNwKrYM9tmTB9JZz3bcJVolZygdsX1MijXkI0
a7XBV3z8XYhc6P+nq3OPhjoN4/jpmLZ72QhtlC1TOhTTrmpRjxWKPScka5Uu
UkhqT4VERpKdJHKb5FJWUXaVVu7M9DIzwrQKU+SSIaHONjOrqVNb0b7OPP/4
/f875/398V6e7/c8z+f7FYMLHV/Nu7QlN5vonc07HhrOJ2PmJrfW0TrZA/nG
EQy+cUvqxaGls9tAX+bT/m6rkKQEz88x+V0JkcjfWG6l4W9YIn9jO7vPNHJn
B7zNina4olUKv4lf9gsGFfBFrheWEX0DUh+Yzzgyww8U9jPztem5W5Q/tr1z
qoAIZvHf6Cn8idPHxENCuu4Q8h9skf+Qg/yHA7Zbxx355eSEcvrw+vtlpL0o
WKeK3ns5PVPyrgfXQ42Pof/uN0KoTFbz39P68NLDsDZTz7OkrMkjLaEklDi1
cq0n5kCrkAPswuAAyzAvfh4jL56DefFl0sl58cXIy+0TTOblKufwLCUJ10Eq
91Kv5VSTTWBTYUvPr8eG8iT3sAZwXqtO+rpIQEor/20kXiowMT/m3hv3B5w/
VbNItfYRSNyNHFZN5E3vnPqrzLKABHkOhBrLxeT74paYVD6tY9dY+72WVRB5
pE97SUozfGvaa8H/gf4nctSnMTjq0zJObswRPyLbnjseSfynHZakPo3ixCnA
LcxtYTg0kKyt/EB5XzrEx7vOvErv7XDkkAwih8QEOSQK5F38xOBd2CawGopf
1BGO6HD0q5JqckJrSXdWEq0DsU9GyuiTSUYurhWDi7sF+a7bGHzX4+i/CdB/
60D/bdjtYv/MAgFEFbjsml7WCi2GeZzGYiVIUGcNfdTorIeosx6gzgpFnVWK
OisC81J3YF5qIOalBqNvpnNX45t1oG82lm30JvfHR2RXoMPixW0y2GsYEbci
UAFddsF+70tuQfPf9v+J6ftvMC9Ix5Suy77fui82RkKunR1NrttRT6ITrysu
OFO9+fMUa2vuHXh+0FDLkUhISNDFQXUs3f/lh8KeeTaTrpMrVmVmNJGQWcpT
ZiIljLFuOv7ldJnonlgesLKohgxetnlh2Eb1afHCxpbYMpjV+43YWEdKhH4G
QW50P0RuiPN3DSgk5h+50RV762A0e+rczaUq+IT6XYul0e83UL9zzUZYNvOr
4bywJP0G9zYJGGGtV09wHet40e3lUuK8p8VMnZlFdsW2sR9voft5RKO7BQzd
XZ/fOTd2+X3Y9M5r+JbFQXhtm7l6N32POsVrnhxkp0Pei55Xqlp6H8r1vfWr
VHAm7UOO+1A+bPQb9GWnVJHVDxIqPGV0X2H/qhD7VwXYv+o60OT8gRdOntqb
BGd7Z8K6uqybXrTuEjm83B/kLYEaZf/zLl4G8FtHeBM5R90dwd09KZ7E1zLl
6LJrhVC/6FlyDH1f0r+EyD955pAIcxePKFYIDFer+sT0vXNZQM5VZohAJ/fe
uQM+SSBdc4ZjVUjP6Y6xFKcrt4ljrUzhuDEZVpjdq7QbpfWP6WwX7TlV8Plm
e6qw8DS5W2WQzKU6K017cMB/czcZ51wY8HLugabRw+K70leQgDq3k6FzozCP
Y4qvRs92oZ49g3OvqYy5133Yz9DI6Gewx36ASOwHkGE/wFKci1zNmIscwvlH
A8b8YxHqej1GTtPRxN5m88c7QctO/60FWwzHEt2vPqH1ahrmK63CfKUazFfq
x9yiz4zcIuOHBS4XxkXEukbqbsyLJaxtZd2v81VgPXYk6ZBzOeir96tGF8SQ
SoeV7F9onT/9gMa3TGf4lnfQZ+CjzzAbfQYjzJe/zMiXP22V8yEgVETmsb/Y
6H0XRnRzvTl2f6pAG3PTjHMn56YVeWh8M4vTk32zZbpLSqJM60lxbe+Tpbq1
ZPH8oPE7tB4LPGkQ3n8tikhEvorz7/ZA5EuuUQP9vhPzRJSYJ+KK/sP/mrtO
VA==
      "]], {}}, {}},
  Axes->True,
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->NCache[{2, 2, GoldenRatio^(-1)}, {2, 2, 0.6180339887498948}],
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-19.94717866662527, 
   19.999998578566327`}, {-19.951671363874908`, 
   19.999898671146745`}, {-0.8454979732564548, 0.8459603700230575}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.8523121766521673`*^9, 3.852312196978731*^9}, 
   3.852312233887335*^9},
 CellLabel->"Out[102]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJysvQd4VNXWPj7fJAGSkJBGem+Q0K8dVJp0BOm9Q+hFejfSOyogBFSkqyAl
WFBQQBQEoiK2iwrYRm/BW77r9ZZPXf/1rrVPCwPe+39+eZ49M5k5c86Zvde7
+lr7/iFTR40YP2Tq6GFDsttMHjJp1OhhU7JbT5zMb4X8j8/3P6N4xGb7Qvk1
+XzXPYz2+f7/vP6DPIZE8sP/+MzfHH36Sj/aa77xd/znl8cqNfEBj3U8PuPx
JY97r/tmHX74mkdbnznc5wvrzQ+v4gWP5jw+dl3wa/1aET98zmOKXFDeq7KG
Hyb7nL+/8gjnMVv//UaPSuKHczxKzVFP8BhlnyTkO37IsM4wy3Wr/rp4jMBD
No9/8ajKYz6PeeZw3P4/zPuz3b8yshM/vI6r82jC45L5RjMeF3jE8Cjh8abr
l+pXw3DSJ3l8waOCx/3OLw5dwQ+/MzNxK4/qehvZI0eOLB0xYsTg4cOH+8a5
f32I3zU/Zrq974U7p8DXt5aUlPhCSB6bDRs2zD7OkMYPepPWFa+acZyHLxSv
xupxf5XHKtZpj5vjcHqcVu8kFB9ZX8fpEvRmPITXTZ/+7L0w7vC49ZOrOJ/h
bPiHzIV8kXrK/4ZgzRWvBf8JuDre04kLlaniP1wMh5jr/cdkbi5mIIezYI7k
Z/h1MY6bn+RarjDrqvizJs8XqucAcb9rhs8vj2FtzLH/DYy66r/feSf+qmsa
LILCHdjEondYBXeI71hnJc/KhwAA2Wb4/PIYHum6iRuhNihsu+iTAfyNaC7M
mWJ7+szNXjVrap3QWkz5+L9kBGbavvJOG5lFFXoNd+7E/sHV5LGq+06sH4Lv
ynTrMf8dczH0dTX43FinTtR7sBBlkaD1v7V4VfVH/Tcsylz/sl4A17dOjmeZ
DjPhV+37CK2MNbPo1p27JuzXGZy5gU+dCSg1v8x9hVDnCvY3DTdy36eFMRtz
+DOL+Il3it0/Ez8v88Znw1dshmXOVq4feVhhtk6/G4o2beTIGuBllSCTNVRP
8LzO3G388LZryiozQAVWtWCcz0IGXjuXrBpkVoZ4Lnm765LB+GDa9T/NZu/B
1ibLeW+rBeYq3tkUGHnuIsx9FzbbM8RlsT35Uzq8IbXUDnJ1ZS+h1qRZv+DG
N3BTlhbv3IAlE/CbLGKqc6Mb8MuS24svczZYT7lPHiNw2V6u27gRH4uTd6oG
4/s2v6+r37KIQv6rFmQVBrnvIHwaP/zbdQfNfEH4VowzAcGYud+5iiXyfXWC
3E24M1H2ewPdS1KtJz+c8Tl/lRlYtE5uUEZ+S5C7iND37NnH3wA99X49VRWf
909+S1Tw32tR3O16Vrfcd6tu9kybK73unM3Nh6yFuzPI2SKCzFR//eioHhCM
FNyyypJddwQ5e6QzK7bY66cfHfH+8sp88179pkdEh1+/JvYMmLO+5D3EumdZ
kuY3OqVftRo37K3zHXYm254ivyx6yFb3D20e5IdGBXmvjx5+yLnNykLX4gue
r93k9B46MKff78ztTaSeR/6YK3jklGIgxJ4T/PXWK+y9+eoZboCX9lQ3C3KF
GkF+Vy+9wrPOTVorqTPfyTmPLXVqONez6c+cZ7eu8404Cj4sNf8bjQb/xjhX
P279fHPCnc7aXccZwpyv+ay/Dvqeh2kb7mJJDDdIfT31a8qcvZpAjnfWK69r
jxtdyS83JGqSPUXmMmqFhgXTB4y0DXNbJ9bdGjrwXktlh5deunsuE9QWSndW
6DpTw6c8xibTXs5C25dQoeklom7uy97Q1kkOPp8WbbhwYn+1541vwEN93huw
hb75s4S+KhzBaWmwc3VbyiQ4M2zPelfPlW4k112aRWVLAPc91LmY/RNqBpnX
Lu6LhTXzBRHhSgU31Pmte9fzecWFfjXUrfrg6+YXztVPK0vqGs4vuwmz81hd
Q2507UqSQOY4mHeisT4ZjHoMj+reia7MGdVR4hVCiUEmWrn7r+rs5kZW6HpU
NhGEbibc+IqW/eW+4q+p7OaKS+XxpmzVtgvGO3dg/74kfc9DyTf2ZFSzPBn4
C6bOB9PmVd3xLfbOjceFFIxfjw2yGslBfsGNXRrV3C6NYLp/MNXf3O0Cebwh
i5+m3/QIUXNznsVUte4/1vrv0rdKdaoqM3xhdDODXFkX0WP84HO9+H+m8HuQ
FNzd5FKIbIE/PcjdKL+qWpkcrTuThdNb+1Xt39zV7OCLUcm15KEUWSC/41wJ
sT208sENlyq4eXC3vp7pnR2PmBBVSwT8dOeCNqTEwBaPoqohen/X/yTrWcnP
K9ZVPnuJv52ebYpzY9fx+mB6bOmNT++ZE3P6Sc7NBmPtS51v2rI4w7mqTSxt
9Wwd9SMPI8/0Tkdlbr0iyBX0fm2itySouUhreQx38205hS+IfpXu/Xlu/QrP
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
+rr8hTxr+GGbhyI+FCKhIhOyVrsd/32aG62JLqx7++XNSCWxy4bMvvCSGXgV
SAyKVeBsvk9lHL6To4lxMJbX8/I8HEOfTY+m+Z2zZArbNUq7OqBhiPCr0CCU
EsxYq+8hNk/qmusUttakFUrxttbU4Z76VLGc0bzDcKynjCASQkuwCe1vy+Pp
L0xJ3y+Jpw9mJ9LgNnVodb9c+m5hHE/rdwvi/PIylv6wKF5IDwcq2cXbLO0H
F0sTCelmZyA5sC425kKEzAptUxAkJuQ1gMlrdh5VrMhS54Jl5cPbc9Dl33WT
2VEjAJldIUw5bsCtQlcQeKImsbp06WCj/5RVWeaa2EhWwsPNkh48oUc/OFIY
6MXKkpL3LgvNfW75iYQlfS6Eyv+Dn1UcKjSa+6dCR5/lOvR31UV/7yj9WSyO
6c/QHp/wQzi4U8VH8O8VcfTF7Bp0bFQc9WgqcpK6N4o5PqBhaLAmPMHEpIfs
PM3G8NpV3WCnpLd19HV1D8C2h9oFNvd0oqpaZcrifjFU9wMTz5+Z6v6wKI5+
tzCO3puRSCv75FI7ZnUvj0+lr0uZ7r4qjfM1xkv65uE4+naBHvp7Nx3yKf5i
WOD/WizQ0OG/oZ2x6Pxlc6JjSvJzYG0qlU/LYdqrbdNexbIsdSPsSXHo73n1
SNv05xafrxraM2o6ROPpHY1pyrhetop+qbyRl58FT5awiMwRhkJkNh8DsXwu
4Y/LeU4ilh3mhmZi0ibC4IEMkYybUI1gfmkHw4U+/SaL7zIo9bKQIdNa4Izq
ZZrv9ZneAxiqBL8+zdGbsRlirp72qzwq31ZEpdPquRliFTc/PM1zdDBZst/+
UBpDH0+Npqf7Jdr8cGDDkGb9mB8ayempJsk2WpirxAUU6GWJVkjC1c7OS5it
HfkrVy0dUFt9VtsNUW5U7vQTC8ofVzIVLYNgVUr76qE4+nJ+LJ2bVpPa3t2A
lvVmheTKvFhmhFfnxdIX8/UQEGaAD/+uEmFasvkvTJg/MEH+m2n/J5a3PzMH
/mWT5ZwooMCKVPGDATMgxrIxBeoH2R2MGI3MtQJdsApeMXrbaQ2WX3uttrgX
QIDiXuDnfevu0aC7k+WlhOg2CINyOsOMrud0IYbTfZkfaifs+BHDrIa4Z4hJ
9fpaCPErQ4hfOoQYaiWLXVHKsrW7y3J1Q4i+GBM8yVGf6G9zLN+oSw00JPlV
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
\
\>", "ImageResolution" -> \
72.],ExpressionUUID->"12f86ca8-6210-4497-b5c0-00a313628fd2"],

Cell[BoxData[
 RowBox[{"Plot3D", "[", " ", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"\[Psi]", "[", 
      RowBox[{"t", ",", "\[Rho]"}], "]"}], " ", "/.", " ", "psiSolution1"}], 
    " ", "]"}], "  ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Rho]", ",", "0.1", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.852312208593135*^9, 3.8523122338875313`*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"d65d4f7e-6f44-4996-9aca-eca28cb80a89"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJyUvXlYzd33/1+KQpJKokzJEJExZDgHGTJGSURISCozFdJkqlRCVIikmULz
4DTPwzmneZ7nOYQ0/O7v/d5r7c+dqz9+/eO6Hta1X/v1XHuvvfbw2me2zoUD
p0fx8PAojePh4fvn32LduOvvXSIY6Uuc6/1+em+MWt7zLVP+G2vst/X3Z+Q1
I3eQM/BxvRjMii5jK1gr/UKuZWZqeq24iNHnzmt/K4mXCTxEYZmpgG8Vw5kz
jT/MUAD5+T0Cz/3sixnL+Vaadk+egDxBTIp7iTeOcdZ13q/Jxych1/zEnqNv
Es9ateL//Ykj/+E88LZzaR6LL5NhpCowBfmv/LMK8u/zWBzd3b6GpVORV19m
yMXrp7DcBzTrbAKlkfevUpqnLuTKMHQ+PdPHaiby0teTjXrb0xivpqz9ULNo
NvKAFSp9R49zGPy6rJ3dz2SQbzsR/TC/OJ2hH7S1aWhoDvJXqhvPdZgHMEDn
UZGPhoxKGxhhS7rvr1OoQp2BV9dIBG+yrGSAzsDNnuZuFP5WizoDd357val3
TznqDNx19X5rr7Z41Bm4zha3LxFbElmgM5ajZBo1JyMfdQZ+e6Fzz8FRBagz
cF7FectHvUtFnYH/su2Z3zfjFQN0Bv592THlKwcyUGfgomO14qPmcFFn4Anb
E5PFsjNQZ+B1i7fdEY0LQJ2Bvzh0QTXA5CsLdC7QYTOMSnsZbsvV/SzeNTFA
Z+AnY5hhb462oM7ADZdGfPQJr0adgZeUPfbxbUtCnYFHKv58YGydzAKdgX9/
YCeizS5EnYH7z3nIFv5ciDoDXzK4+paJTDrqDFxrT0F9+MY3DNAZuG9FvnVH
SybqDDz5e8yhn3y5qDNwlQvCp2zqMlFn4BK5T2SYEh9QZ+B14vqT23+zWKAz
8Ki1W5hV87JR54Pf2+44yfIyVc7tD5bf8w11Bl5Xo+lQJd6EOgO3nr/0ndP+
DNQZeKzwLmcL0zQW6Ay8RfyLb7RJCeoMvLN79b47JcWoM3DW8kGzgjGZqDPw
Nxse+i+a5sEAnYGrKzT1TknORp2Bu3459stIIA91Bj72Zs32mLnZqDNw3W2r
lly79wF1Bh5R3yIgwIllgc7Aeeq3tq4/nIM6A99tk7fjoBrVmRHWXWlYOuYv
nYGPcgy6by2chzoDz6/m+3XLNYsFOgO/NX7KpluKFagz8Jq1T7/FscpQZ+DG
l2+eHrDIRp2Bt3AuxK5e4MkAnYEfvPjouPMtNuoM/FPxVjHbNfmoM/BxV7Xt
jF7loM7Ai8obNolP+4g6Az/j51Y5NSaOBToDb3Pyu2J2iI06A9+sIcZcoEN1
Bn5Eu8+nR5OFOsuZ/tNXnISYOmcmP69V60SdgfcVSYpVlHBwHATO6F125Axf
DeoM/Fhgoh3zWhXqDLwy/0l8/E826gw8/eBkUUcDLxwHgVs0qZ+U4XJQZ+A7
jG72P/IqQJ2Bv3jYfXvZRzbqDNxrKaN+VflH1Bl4lMZEgQfJ8SzQGXit2a79
tVM4qDPwhVGChptVqM7Ac5q1lY+KxaLOwA1MHv756eCH46DN64F9TrKTmBpP
VEeL3OTgOAh8mqDAjTzrRtQZeMP8qv5ETi3qDNws+Jzu0L1c1Bn4jt1Hn5yr
8MFxEPjFXVXf1G/nos7AXQS8RrfqFaHOwJdKjPWLieGgzsDPHJfW6akORJ2B
f53ESLb4noD5BvBqxo2w2h4O6gycue+0zPcfbNQZuKPexYKHD2ncAO7s4aut
fYyOg8DTZd2/a4ekoc5D//6JMYfndcBt4q97pLxsQZ2Bd20Qzz5RWYg6Axce
qpffsMUfx0Hg73dvtFf1y0edgfsOCGxpe1+COgNP23DxBUskF3UGPuSudnmX
RxDqDPzR592tP1STMN8APq97vtylTi7qDNyrcy5zcTTVGfi5sqfBAaI0bgDX
GyhTv63+EcdB4G2mNjGO6TSvA55d83mzxzQ26nz15Kggw1KJv3QGnuJjPTj9
cxXqDFxE9umXn1YBOA4CH5x9t3/vhyLUGfhxPZerR9+Wo87AW2TVbhql5KHO
wH+k7pH+5fIJdQZ+5nn0dPGWZMw3gAsJXe7YN4Xmz8Dbb8gE5HpQnYG3Kq2d
HvslDnUGrief3uqwMQjHQeAKa2pE2YM0rwPe9L7w8unPbNQZ+FHLMQkbepNR
5+Z4/hOloVP/0hm4oHju0dGzvXAcBD5nnvf9rZvLUWcsZ3uwRXMXnacA14/a
wj9VuhB1Bu7XHvTLkfcL6gx87cCVsh95qZhvAF8v/+NlnHE+6gzcuIOj9PlL
LuoMvD/+Pn/klXjUGXiiWlmx58VPOA4Cv5G1ZkeEZhbqDFzTsrzz7FE6T0F+
+GNOiH8K6gx89wWWL7v1CeqsLSsgouIkzZQ0/9UidikHdQYe5GoSMC+tBnUG
7lqeECmtVoc6A7esfBHfeLcEdQbu7Bu6W2thCOoM/GPC49Fvl2dgvgH8cq/9
T0c5mj8DFxWvEFk/QOeDwFsqi6X8jiagzsAdus1sx6d8xnEQy99TJydSTfM6
4FIL/EcFStN5CvDjvuKzt5mkos7AxR8pCujyPkGdgW98rHStc3kC5hu5d8fG
hhrOZGYvMmxzG9uF+QbwjXZnr8/nbUWdgX/VE2k4O7kKdQYeYbuJRyk9HHUG
7n79lNoupWzMN4BPvrimdPIemj8DF5HTeMN9VoA6A69sm90VfjsRdQZuNFGp
597OYBwHgS+QX6hSuZ+NOgPfb3ThrssvLuoMvEGZX9ZEl867gWusbv2wU8IJ
dQaupRqoGiieiPkG8CAzx6125jmos+e30WucZGf/lT8DX1JyVsNkdAPqDPzq
LCeXwwUs1Bm48qIxJw0WcDDfAH7vmskdzdk0fwbeodKkp+VRhDoDl3iqnfy9
Iwl1Bn5+xmMvMYFQHAeBc2d/vBihyUGdgXtKGey2/pmLOgPf/F59afLVdNQZ
eNOJsScWLX6MOgO/cfyNiI9wEuYbwMfLszyXHmWjzsD1NLm7nM9mos7H/23n
Mn/pDHzvpVnR46ekoc7AxQOm7Uick4f5BnAn67czx4jQ/Bm4oz/L8pduKeoM
vMkhxHJpcQrqDLySMeOd1YRwHAeBt2o4iS1/zEWdgYd/75IpnkPnKcCNtjMK
rIIzUGfgG+y2BRzZ6Yg6A98pVtxaOzcZ8w3gN3KHLI+N46DOwN861NZMOJaF
OgMfjJ6+2rAwFHWedlDw3/8/yau56nBeI+oMPF1UaWP35GLMN4BXZg2l7VxO
82fg5svULGaeqkSdgU/a8/SV0oN01Bn4eVPLmPHXI3EcBG7J7zTef0Ie6gz8
2bUInzo7Ok8BLsa77fSt5VmoM3B2wc3Z41vsUWfgi6aV5wmeTMF8A/mJD0NJ
2XSeArzIe6fXzUvZqDPwiHclZe57wlBn4Da6kx8N7gxleM6crKgmUM7Q0hO8
c7G0gJFXN19tsnYCa5Z/WISKUw/y14HvyuLflDI0hVvef60ZQC64Z7lfjUQN
I3WNcJqLCz8TuN3qvfIb1pcyshsCnsmmiSI/ZXJ64ZRveayXdyLYm15NRj7x
y+q5MrvyWfrd17RLr89CbvRCwOniVw7Ws809o9JJtpvxTmThxqsJNQyoJ/AJ
C9ZHvbFswHoC/545+uT5rkoGz0tmiHDLRCbwtHkils9jClhQT+C+m+eq/cgq
YI3ZWWnhMnUG8iq+m6d7HbhYn9i5+e4qTv2Ml/uOvRVx6cL6AI85GGXgs6KO
oas/n5G3aRwTuOB8mezz44tZUB/g0Q+3dTV+KWKt+cTddmurFPL2xYJWUea5
+Nz0g50KPDz8zNq9qi+2nOnE9wU+S2vTkOuRDBb4BfhOwVL/gYVlLKgPcMeV
JRGHFEpZ+pLJ449fkkQuJxpXYOySh+8VLPndoTR0LNOoLFXASp7NgucCd7+q
zT18ogqfC3w1d628sHsF6gx8X2CfzaMZHAa0B+DeG+aHhzXk4/u+Lv3VGWo4
kdl5zfe2RkQutk/gn5rqZmSsr8P6ALcduHjDoqkadQbevKtRpsyVi+0T+HeD
0RWbbxYywO9Yfo7J2Y8WHBbURzlncL6KkygzK+aaVvz8dqwP8NIpfAoOZg2o
M3DLl7tuB97Jw3YIXDQz8XjO1WIG+B34KqetBy4ZcPG5kUt5i0INJzPNGk9e
H5TsRp2BP1rHlyUythDbG/BpPi87Q0eXMcC/wOevkeddeTsX2xvwY4MDd1sX
clHPJU58D2RVJJlaH3Wjkj6VYH8HLt+isLDcthKfC/zZ11TfD0X56F/gOT8P
Jn5h5WF7Az4u52Xz6rm5+L7/G3//6QeX33e/v30N2yHwSnl3/ucaVdj+gTcZ
nKk8okfjEvAVjFAre48i9DvwzB2D0Ve2FmBcAt7x46P0WtU8jEvAH4htcL8e
QeOS5L9xdTpT0S2l2CapAesJ/IBiwBmfPhqXgJfde7V6ZlcZtgfgCgUBdb/k
irC/AL+U+vJlRkw+xiXg+aO23kq9R+PSdq3RmaGGs5gPhfjnSMzsxvoA93ha
PyNPh+oDfIlpVPTKCWxst8CvsIt/2rmVYD8Cbul91lPfphDbD3DzFKHUGVdo
vBplN8bTsHQ204hp9HXN7zbUAbjEPlX/N7e52J6B7xXIH+XRWY71Ae5n6X+v
pqEY/QV8weHWPxntHGznwFX/GJgtu5+H9YmOFrglqzKH6XH8SPt+8VzUB/jL
fhfmTWYBtn/gxcx11jcNq7GewN/Vd467pVCO/gIuNmYVj9HWXGz/wE/vCy21
z8lnQLsCrjo5ccydczTOwP6aTJvxjRfmdB8NxsfgKVpzlRdnUp3JPpGBSYJS
R1gWznPBfsKmhqN7zndjvILyt6w5cUB5iOarYL8lY9+i/m3VqA+Ub9j+8IiX
Ti0dd0g53McFW7UvVuI8AsqJX/1+bU8I7adQzvKNv6QWLqbtEMo5IrVry8Kp
lchh/JV52ZYgtCER+wuUv1hpyo8bBxIwHwZusNBl3AUHNrZbeK5Gst+Mrzs5
OB8B+wCNRrGLd2k+APZvFK8Hhx8uxHgF9pPNp9zRHErBdgj17C9Vf6CqmYb9
FOy3ybXtueRK5ynA+1xZqeYubBx34LmbZ5XuVeHlMNgb+v80V81G+6OvpQOn
q2Zg+4HnGs8yMnRQz2SstrF0+bVzDtqv3Op99MNruo4K/MuR2lPtqm+xXUE5
8mkOzt9NGrBdwb7Yl56TzyMi6Twd7C9quuu+nFaH7QTs347qUdXKoHEP8hmV
pCXKbotScbyAckpdJqmsPJCEeThw7ZOv7OKnczEOQPl3ttz+NUk4F/0O9mca
xvrHbitCv4P9af2UWbH7i9HvYD9uVDJbPpyLfod63nF+u8BxdAbGN7BP3TnR
Q3cK3ZcE/tAl1njXRQ6O4/DchuI/ukaNHPQ72As5r3ZsPcVBv8NztZYmJ8+/
k4XzHeArVvxqetXagn6BfbQf6YfGPFjfjf0ddSbzU+zvJK+bl76BmyDIxv4F
9gp/NlzZVpuC8yPg04832Kn8M28Fe3jursQVvtJ6+egvsF82dNrKzaIE/QX2
fp6bBz0rS9FfYD/fxWIGd2Ye+gvqaTfmSZTi4izsd2Av8eyq+7gcOp8C7n0g
ySvhLBfjPzx3Iu+ogsc9XPQX2LclJXjvWsZFf8FzjbZGfqsozsZ+BPbj2uMk
x0Zns4CDfbdAQ2N3QTbGbchjdS/kbz1sUYZ+AXvwC54zIbxq4Y/xppZWOG8F
nrZ+9dj5bXQ8gn297mPBbVtSitBfYH9kreyZPONy9BfYB24X7Ms/Xon+AvvV
sou0ZnXlo7+g/j9Ei2bwjGVjfAP7o9sjHvRyc3CeC3zyDxFrnYd0vIPnWp7c
8k18SR76C+zHbFXg5Z+Vi/6C51Zte1V2aC0b4xvY5/jueJewJY4F8RB4/YHg
F5uHcjBPg3JS9JUrw4Lp/h3Ys06GjGXGsLEcsBdXtBof+YOuAwO3NDAur890
Qj8CH+5H4L8WXD2yclYpjrOwPxhuyNumt64C/Qv2jttjhrSKqtC/YH/VVe3+
wK4a9C/qsyrwXtXpIvQvzFOurNMuTZ3GxfgG9reW9bv9rMnDvBf3bfVuurf6
5aMfwX6aH1NQWikP/YjzpuxRs34sofEK7CPnOkWxNtB9VeAhV9YKiodm4DgI
z321qnm+9/lMXMcAe4eXD5b7/JP/gB/huZbey4ITXrLRL8BL9rpFFqlWY7+D
/UHltw+vPOHW4boQ2Afn7/4dtbQO/QL2CqcMnCZmN6BfwN71FutoaX8p+gXm
ZaNmSvNkadP+AvbSDY67r7/1xnV+4JpzfR5tyUjBdSTgsc07RJ4/LMB8Bupj
frp88INVIa4vgX1izKIKLft89CPUp+a90a0Vx2gcA/uQMUL39TTp/ixwxYUz
P9/8J66CPTz3umRcs+hAFvoRdV7GV2Imz0U/wnOf7mCK3TlI97WBn1lXYN8X
24J+gf3EGr4Nsy0au3B9D+yd4q8FPDNqQ38Br1LKuX67pwr9BfPT2SLzfJZZ
lmL7B/uWqZz0l9P8cF8A+DnTAPPNl9JxvIP6vHz+U447KRP9BfZGskvtj7sX
YX4C9uXJZrMG64rRj2DfffCZ7psVhehHqGeDa4x8YRmNb2DPn/ZyjtzLRNyv
Ad64RCRyRVk2jnfw3GWjehP/ZOagH8Fe7BL7woLxdP4O9gI7mT9n3c/FcQrs
hb71b72wPh3HNainhK9t4yVdNuYVMB9/o/DR+rl1A/oL7GFfEvoFcOtID/EP
CnSfF3jCgfM63b+zMA+Efc8ZKi7LtWex0V9gLzyZ/4XQiVL0F9j3z43Q4Z1N
94XBfs17D2GbfcXoL7A/Z+J3SOpVCcYxsPebbu3OFaf7wsCZKYEtfXp0vMPn
2g62Sv1ko7/A/ouX9R+BCXQdA+wL0l+EbH2dh34BPZ05cboaE+Nx3IFyjF9X
uF84QfeLgccof5q6ZSIb838oxzdYTbqen4N+BH6mLiGcuTcF8z3gVxvmCA1o
+eP4BRz8CP0OeJmg3KLD1hwsB/ZP78eZMO9uyUX/gr3RmeRFp5mV6F+wP9Pq
kXC8h+47gz1TUsVPd24Z+hf3o120ztj8Kcf4BvZVaxxmuOSm4LgG/OcuuYQk
Jw7m7VDOxIMCu9Q2ctG/YD/vSZPPo/X56F+w77i8Xex7cz76EdZ5dh7yfLW9
Jh7HIyjHPi/A1smLnjMEfsuR7+bGaJq3QPmlmblp/tPoPjXYb3wZ27Hsajb6
F5475N8YtWhi6rD9OylmS5i29Y97dF0U9lvTBK5pjLtVxPjvPqAUcwLfvk1s
r1bWf/f7pJg3oy0XXfOm6+dQjs+EFjenP3XD9gGlmP1OXhV7ZtD5O9jnheRz
39pWY9wD+/bvPjmfetKG7QNKMT3Uu39G93Mxz4dyFsVNHuBwcoftD0oxN2w4
tGe8L52Pg/2tjwFcoduFrP/uG0oxG0+/DH53NAf9C+tjaTdyb/XUJeD4BfZd
JX9kLkhkD9s3lGJqJr3oXHCH5jn43PuSD8+2cIbtJ0oxT7dv/Kn1PAf9Ds/d
aNzqG9dC/QjcO1l9eeOFJvQj7Ocqr2hv0DbswHwS7Pd12vDPNqpFf4F99YG6
h5piDRj3wH75pLZyvZeZmOcD/1P9o9cuPg/zFiinM5u7/Vl+PvoL7FMu3ueI
6dN5NNhP51ued/kanUeDffa9Cxr7/dnoL1gPdOyr7ty1MAnjIdi/vTb/4cpI
eh4SuJh5aKvi/8ln4LlVKaOKbYrofjrY69ZxAiZcousn8Nz5vS6d5xvTME6C
PfPcewOhtwk4PoJ9gUyl5QIhmmcCHyg/qP1Djs67YV9YMnL/bY2KLux3YD98
3g3rkCUeLgWxqxMwHoK91/6gsULihaz/rlfPZt5tmzu30qYI/Qj2Y+7P9lnp
RefXuN/97XRR3egy9CPYR2nHm9c3cug6GKnPDx2LxmOcZIx7YN8lN+F2bw49
Vwm8mD1xjvUxms/Ac4+tDP1+s53uy4P92gWSaWIKdD0Envt5ro1G64QMjHtg
byZ1tFvLPhHna8Dzfh9IDF+cieMmrg+ffRWZFMRGPwL3DPrkxq7IpN8dEN56
lTd/0ooK9CPsO7MesfhCHtXR7xeI/fD5HXDhjWqiJ3kicb4A/FvbjUbJPSWY
F0H52qpZcgrGZTiPA/t+E+Py3Ld0ng72Vo5aN9Y/ovN0sC/gCFS8s8xFv8O6
sanm99SJk9LouiWx119VMT5+KBTnEcBnKwlVjPuchvM+4F3WsSxRGzrvw335
SvNdyqvoOQGw17m88exFIbreAvU595a5wUE/E+Mh2AvmK3tvdE7CeR/wE2O7
hQQNs3Cched29YzrbZ9G97XBPrP32uKfjnT+Ds8d6v+yYlRtFvodeEdke86O
pEicj8A+eMCFSxrhBiGY34L9cL8DX7eqyiN5fSXOR6AchlqxgI5JNbYHsPfj
Tsiy76HzerCv6qw7lHeezuvBfuDqnL5JX/KxnwK/F1TZ/npFBM47gLe4epqb
cjPQv8Cl3IqnWXXTeT3wbVYp9zxFczFO4r7DdHk106/JOO/DdvXt0LSg3Gz0
F/DmyEXTP67mYL8D3iZs+W6tSBhyeF8eJYZIT9Zqur9D1rd/SkkU6XXmYj1h
XVrjbOdsq+ccur9D7Hf7nG67NouL9QH76wYXDnOCaN4F9p0eJ09cEqB5Muwv
7Dty57NZSxzmM/g9S9qLPe/MCjH/BN63sUL/4slczB+A59R5hXQm0zwZ1hs7
yhu6ns6owLwIeP/PP7f7ftJ5AX4n8ixzac87LtYTuFXKAHe+ERvbLaynqfuu
OyJwrAnHfeBGPDblCSJ0nwL4DbN4g1KvXPqdF1kHexKneTpGPx37HX5H4KXw
3GR8BvYv4AL6K1+3i3DQj7CeU6S22qKPpwT9Bfy1sFNcSmke+gW4SCL/tN8p
HOwXsP5wr9T2WqM1PScA3Edi+cvf6gXYboG/MZr3qPs5F/sjzH/tRh27fECz
FvsRcC3mos1WCkWoM/A3HkXuxndycFyAeZysEst5pXIH+gt48oPsa3cFslAf
4MWX/cq3n2Jj+cDdy67Pm9FJ1/Mh/5cOTP41SZON/oL5wtmY+/eYVtlYPnDb
uQJ66rw5GJ8hLzXwTFi9Zh4b/Qj8zFRDF3cpNrZnyKNcfY4lzGZysD0Df7Lm
1ZrXmbT+wOMU4w2cXTNY/91/n82cfm3Z4pexRcPy/3/ixOs3B4q8uKgb8IoM
uwnqLpxh853ZzMmx5pc6UzMxbmA5/DHBj5XpfjSMC361CxgTrOi8G3h/p8T8
Tw+5WD7wpSlftIur6bk+iFdVojvMzKIPYP+C9ikUtcUm7+tnbA94rvhH1Nne
kkKWUdycSXWL6hiSPx+4P5GtZvgzBl115bMYHVsSv5858wO59u+1d7U21jDA
/iRvtgMPz3dG4E+dl++CmtAe+IrNlf1MtXq0X3W/cF+Y4RCjVKuyXY6/A7mR
yo+zTrLjmbHGMT/zr77DcoBbv1L5oOFQxnqidrPLUIuHCTz4SUBo471qrL/8
mIHaUEMR5lql+YK+eTUsKAe45KVFR56frEd7j7NDT2RVxJhx6Rmmzf7tyO0W
8n8fGvpnPttzUUl7Uy4+F/i7HXm+xxhVWH/ef8dxKWb4JatMy5YCrD/wNTcS
5guE16L99XZB9dLQGUzj8M1my7pb0B54enptLe/bOmrvPdpSNm0WU3lB4Srm
pna0bxUUXO7k+Y/fC3V4E42rsJ7A7ZfwGj59V82yuVau/1b4D0M4aeD2ldJk
RtOdc3/GXq5igD3wCxlMkW/q1QywB79/VV5m1v2N+r39ltPxnU5tjPMvvjk8
n1TN8JTVGNC81Yk89FH5ZPuEOqwn8GKJj6PbptejPbQTlw08Va8Um/C5YN+b
v3va/Um1DMPoGpWKUA5jVyK3szT0N+PbzsRbngpdWB/g18+/7+Fb3o720N4g
/4Hngr2V6RUFPbcmtBeZ23FIxWkU5ktQH2hvq1ZEfLs+h7a3Or+fU3h4hJkJ
nupPRLK4LCgfeFNt29EyqSpsh8DtMq4xJgrWoj20z3vc5i3en+vRX2BvKbRq
e7V8LQvq2ag4GGVYOol55ZxpSq5XI9YH+Bn5Bjv9mma0h3Y+P9t9ptm0bnwu
2DMTWXcu2TVhPYEHl0/4cliwHu2hHMv9uedm72nC8o++4DEoDRXH9TfgU9J4
lZ1k6fc1UM9t/86DpjHfxN5rEdvsjn6B/jJPoGLvtou0HYK9Ro/xkbCYamy3
wBcF5B+Ue0vtoRybW/FXa3fRfhf1b5yczixbenOJslkdPhf4SzXn9+esG7Dd
Ak9z3mx2+AFtt9BPbTh298XiaPuRnDhaQkV0FrNnu9uB1R3d+FzgmZtkpgYN
0PYJ/Xp4+wR71+nrfAbLG9H+n0y3Y+jO7L/ap/1FgeTQdhnmlVU/8yQSyjEO
AD88R3+xXnAVtiuID6sc6l72MWpwfgH9UWXmIec9bLqeA/1lv9GBlRe/dyCH
/qXrbzaUvLQb6wn9ZY+hjcOJ9hqchw7vX/BcaP9zm1uydrHqcPyCdthkulb5
oW4zth9Y/39S+bRqklIbtk/gm3vDnnA5tH1CXrT+skx6T28PcojnSz1mjWtx
b8N500jtefh+AdQf2ttJsw9TysdU4HtBO7nldy+iTYaut4Df+6t4j/Jtpecc
hvsXngvx+bihkemNZ/Us1el1zFvv52DcDpF5+XaTQwA+F+JnmVj2mlcGtVj+
8HgI5Vvf6xIIMxz9l18g/ozLuHihwK8E9Rner4GDnsDBL9BPK96k7L25Pw/r
M7z9Q32WFo05Uqoow8wS6WuMH9WD/QjabZt+RHOtagT6BfjSgSNndvmUMEAf
4OZvRI8+TdyB9YTzKoJpfaFiQvH4XGj/ztaGWyQl6lEH8Luqrc3SLGkab6Gd
WHu41GSEtmP5sC7nJ7x20ZWiYtrfSXt4aS6y5OmUFpxn4XcHW34FLhmIxPLB
v/NkY81WrInCfgG8rmT+Pb2gfNQBxmvxiSGDIfnZyKE9hIc6Pn5nT8/XAV+y
YO2htFcl6BcoH/1I7EGfrpJN45nuNC71NfaEyaoIMv08jNqL4juQc36PklZx
msLclq404B9F+x30F/PSVd4BbD/kEG+7t2vPt5pYgvUE/lAxfN2K9GoaD0k+
/0Z+vYmsaSe2E+hHUakDLN/cJuTQrnxSG8f1b6nG8oEvfqZk1yDXjOVD/NzD
Nn61TaMFywHu21P9YWhqNtrD+sCvmLWe0w6kYvnQDr8nTj7Pro1CnaGc4fEf
7IU7nimvtS/E/g7z/U+T4136NCKwPqD/7gVX9n7RKkQO/TRU3G/GZ166fw18
ymJbfsUTXdjewF9iTXErTvHX4vwC6jP26uOfE7S88H2hPguePzSTd2lFe2g/
a2wmnnCMvof9CObpasUeiTNX0nwSxoX1c98vdxRqRQ7rBsdjx0vrDrahbsPj
Fdjjd9Afg5hL5DswPkP8mZfl0PgkMBXLAb8PLwf8uNzfb7VmLRv7NeigZOHx
ocykC+MM2Mt8mrnDIY7qQ8/X2QtYfSyjeQKJDwVnVhg/q6rFfAPaw/wJV+3E
ZuWjX0DnhU+WRpZr0vO00N8dna7oqo99j+0N9LRiefB9j6Lr+dBO4H2Bw7mI
jXyd87KkirCeMC4rZN9wlVibh88F/nvpegv5JZWoD7Sf4XED+vsvs5aYgDVp
dJ+I9NP+xcc6vco6kYMOjewkl8NPK7BfoM6PQqSW91SgPtAedm5LthDzr8Ny
gF9P+1rdp96GHHQYN2e5cfjrWuRQ/0yjmjNOnBZWq53ls0vSqX/dswTvu6xF
e6hTcfxfejY8X9187wr9ft9nhf6yIxdyGeJD4k9vDg7i+Ou07EbhksX5jCKz
9vplo/iwnAfvwnsMajiMwYqnM1br0Xb+Yu5swwaLfEb4gfPlC77T/MR59aKM
174FjHy2r4VLHs1PJojon5Kzi2cc+Ondt7uefn997n1Jc3pBPkNbZ1Najjcd
f+U+nVnkK5HHWLzxtI7Ck9l/vVfPkMHUo2EcHBduHDevOCFZ9Nd9MthPGdqj
c23/4Pta3Vn0il8m66/znAHHakVrhgr+Ok9YFFtyvGVs6l/n00ySRUUXNXD+
2veH577cNl/FYeU05OqCu0I+zC/663tSsFdV0jWqGU11uOv95l7bmfy/9r/6
lK4LnbvG/ut7ycE5o/i5r/L/2mdRbrkyyXNH7F/r8KZbI0c7VHD/uh9G4/zb
fXKOBX/dSzB9DVO3PCzxr+/oM3WTSr5vSGS8sOqyj3lLdd68sne7T3kuY+7o
hVVZv2i+t0Nax2a0RwHDYKb0xT3fqL/0dkTYjTuSzvizZEXLbSfabkW3cR+q
q+Qz8t13b5h1m7a3s+2BKp+78xg83F7ZJM3/c3/Cn63H9XuyGIk/hiZdWEB1
c8/wfLvTPp/xcGboUYUmyiNLB40DX+YzAucUxpufoLp17Fq/rSU39698dcsA
1/3HsQSGk9XMSwOzxqH9ZOEjd88Osv+6NwPimDjzxtMnM2j9p27XlzwimsTw
0BIV5L9K9bTavndD+kA6Q1UutYATRdvVzR+1V659Lfgr/3e/KvHn8piCv/LY
jeP2T9d/l8Q4/3ntuq6ST9hfipNP6kzK4jB61/Q+t75I+/XCTcvehC5L+yt/
ttDc+UdnKIfhZuu4IVyZtrdLbwx61PXYjD+9KWN2y1Ourtp28bpDDGNSy3wX
2f20vTnHuPHL68f9ldcN6qVPcDqfyWB8XS1ZVSiA9lf5S1IZm1MZQe9UffwG
6HixxzTJ+M4GDiNA/fRjdxsa52O/jPPRleEwQvinhvi4UX7d1nvfmbFpjD0e
3Z0RCbSepX9OCrk/iGXI2d8PEFai9bx3dskeZ7Pkv/KiNQ9uPL1Rkv/XvGND
11v/T7vYf43j0K9Vdn0Wctal5e9V+sXOHVvw1zxUL6s2WWlexl/jo9+rtte6
qzl/jWuTlu/kv5Gb99d8bdr4SQOP8v+eT400jozYTkaItyP5caTxaKT+MlJc
HcnvI+kzUvsZKb6N1P5H0m2kcXCk8WKk8XQkv48UD0ca10aKqyPFq5HG/ZHG
wZHGzZHi/Ej5xkjx/P9vnBwp/o+Uh4wUJ0fKT0bq1yONLyONjyPFpZH670jx
aqS8YqRxYaS4PdL4MtI4PlKeNlI+M1LeMtL4O1I+M1IeONK4NtI4PlJ+NdL4
PlL8HCn/HCm/GmkcHGlcGGk8HSmvG2n8GmmcGmlcGykPHGm8Hmn8Wndk6W5e
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
6HC318KP9DZ4xvhO49zLMnk+gq+Iehg0KzyX5QN+dFVAO0tFroT9IfgNeh8N
OwB4w3/8d/8IUEi+Wx8oh5+S91enrcvqHHBOFZAP+JHlo692cvl3/b1mfCc/
TuZXIjTv3zRUiue0XoNH0Tvlatr/gys/zN/pcEopjVg3vuvlO/L9rFbmkN+1
myol2A3AjYZd8k5VKvjeEBz5jDDv+N5TsSZWBORJkBv4j/GLtorW+RLsP3xv
q/tP4igPFesl5o6hw/QPpwnoH3BvQ+EZVpIsFLSOgA83+zLpcJmS7SRoZ6H7
kZHHDMLZvoHybo5/1rjdV0g4x4HP7HWqca21Ss57i/1hM8+8uZ5t3kj4X3Db
xodczB++ltqbzEo4dP4f5sqz1+Z398iTQtXsGGVkx4C9C999bzDNvJbOJQF9
gno6Cf1Zn36ki7a0roG33eRveLJQJaA3UE+39c5t+ltdkqAfUH71ybUZde4q
pOl0Hgc/2sA3N62BvN6hnXvJDgM5gL+sZdHe7U0FjwfU89hmQNaxadl8n4jy
1fS/r2gdxz7ZzE35x4O3LyR7WsdRT+DWQb9v6H6F9RLqOUP2HMw7thfRu9fe
anaey2TngV4Cz4z6y+h7QSavp2xXIftPW1oH0Z5tHyPMlzhuErXV7EL71O6R
wTvReQH6Cryb1qfImngF3+uBXyJ7EfoLvM44y2qj3cns18r9SO9ec8kewuPQ
+5Nux/QYcYjKQ8536H3rfjqv4XzRzt+oXsmZUsmExi3KB8Sk1y/88zrvT8Dj
R9xyGDQ8jfUh+OBWPQ32vI/h/uJzULN1rrpNnnN/sd3m2ngL7ZPZ3F/gWtrG
C9cXp3J/getrX7Kwqs4Sk2n/Bv7JuUdIxN0ovucCT93kFvDQNJn1KvjszFyP
3OpE7i9wv1o10sJvcn+Bm1x0HaM5M0WqQ/MLchsbe77vnuHhfI+A8qcaeOb4
eigF7J971d63wv4J/sJw0MiaLc9EINk3wEe6bu7rFnKZ9znga/WXzbFZnM76
FrzvsO95tW9GcX+BOz+Jq+855iX3F/g+qxlnrcbncn+xvcvBOj3EL5P7Czwh
bFT0nYhc4UvndPD6J91cR0+P5n0OePOhjQIjdiWzPgdfUzkpq13XRO4vcJXl
88p2zincX+Dz7yW+TZ6eKk2jdRDn0NUPelm81Ijg+x2Ud/Bw6jftN5VwrFxv
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
SM47j/VlzeB0t/IMOX8Kys8M3GaXaxvH+lD9fYG52vuCu/S+AN8Fr77mqDG+
fgLrE87jdqTCZ+eWx6y32V+C3gtAb4Mv8VlpFrxSyeMHPPCD26DTB+X8X+A9
Kb4c+pf98E/UBOUWyPML886l/zaNMU5y3gq2a5F/PuSPdaTVbW9VzFc5/xTK
61B8NnCUX0NxwyAf7Otauqh2VTuqeDyAO91xqWuv91+/a3vyu8Y4x/p1RbvL
do3BiVw/+P0t4SPGzJbrUffHLlOzry4j+yraD96E/Gk5XjRx5apLqxYulPMr
QW8EB2yIPbgukPsR5bep5dkBL5wQfHCjdQzPL9Sj0ls4eOjXp/xd8JZf2lxp
l5XC8xd6Zo7dxoF1cgJ5XKH8NXo3yvmAiIc/0rUPqS+fg1DPGspbgXEOXtW4
6byqYjkfJfSVAdnxIDeUz6C4UpxPh8o3/PYzPhL+C1zrnzWvA4fJ44Hft1Le
DcgNfEUzk6lF+nK8dNQzMz9yY9sOcXK8WeKv6V74mZqfYTr5GeK/wINOTvSx
/JbF/Yt6zPWOtkqZJssTvKBz/49l7YK5Pajn9OGlixbmyOsp+Im6g5yO3iqU
81LROp5Mfnqclw3+eAUnNJpcuc3yBP+L4iNhPIDb61r9MX2cfL5mP73o+S43
x8t5xsGLKS5QkVp8m6YU3wbzDnr72PSa4LVHM1iv8vs+ipfyTM2/6yL5d6E9
4FsKSj/MriPnfeP3NeSXhXkK/bCn/R+ZWmNeyPnLaF4vOtR3V9c68nmf43qR
f9FxNTtYNNnBgtTsXV/I3sX5v0g+BW8WPXg9NIXLg/eYe26B9iY5bjnmdVBL
nbyZ9WNZbuD5xX99+W7/guPr4n+HkN0J/8v7/Ca239qbFXL9GP/hanl8OE86
5fEJUbNTrVeLI41+3KwWR5rtab3/N+4x5BxJ91YcF5365XHw4cpN9qXcfr6P
7mcZkTBGJf0fa6Yu5Q==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxFnAnYVtPXxp9znjO+5qhEUkhChRSZI4SEyJQxQ1LKlDmEBpkyhihRChUh
maVkrCgiGVMqQySlZPruX/f+X991vedd6+yzzz7T3mu411pPo669O/WKK5XK
jVmlUhW9VnT3qFKpm1Yq34u/U239k0rlLe1vovafxA9S+yk66VDR77QNVJ+z
8krlXR1/R9vl2l+s9rtEu6n9DbWtp6239qdqnI/FTxFdqD63qe0c9Tm1qFR+
VlutmkpljPb/0nU2Ej9bfTfS1lf9XtHxDcUv1rGXxX8g/iXRG7R/rY6v0AO8
prYabb20f6XaLxRdovavdK3rxJ+qsZfp+M/a7tb+aO0/LLpKx0/QPTwkfqX4
X3W8nrZ7tH974vcQi/6iY6PEX6Tz7tD+veIT0S/V9z1tA7Q/X/Rzbf3FP637
e1P8BNHr1K+P2pbpfi7UtaaK31zjXKv2S8X/rPZn1G999V+ktoHablT7GrV/
k5k/Xf0v1rnTxNfL/d120rfYRvQ/0ebathV/pvqMVp9/xA/VOI+J31D0Ir6z
+vyh60zQ+U/xXKLjtT0pPhIdq+1R8WvV99jC5/4l/hm1jxNfFb1e+3U0znqi
PdTnP423ub7XCF1jIs8l+pz6vSR+I9He6vOc+BrxG+icJnrGnGcVn2mc1eLP
Up/n1Wc99Vmq9vvE9xDfXe2viN9E/BXia+tYA11rO9HmGmdDnVuP9yB+A/Ev
qN/6olurz5ml5p/Ora22q3Xum+Lrcl/MV/FbiV6m9vfENxD/qraPxDcW7av2
2eK3F7+Txt9V42+mcV/Wfi3RRhp/LPtqHyN6rfq/r/5b6/h14j8Uvx3vSvwc
8U3En637mSl+G/GRxmysczOdO0vbZuKX6b39qPZh6tNTfQ5X/1Y6dqXozXpP
R6tPQx0bLP4o8bXEHyj+GPGNxI+vmr6hcX4TPU7t24l21P6uoi/p+Mcat7H4
PUX3Ts3voWuerD4Hi39XfY5Ue0vxbdS+QvT4yP3apB7vJfqq7QRkhfaP0n4r
1qjOnZ27zx6ic7R1iszvzjOqfZj6HCJ+G9aH+ON17v7ip4mfr347it9b9ED1
acp96h7O1/OfpnG+UPtX2rqK31/0CPXZTX3e1BirRc+NfN/fcj3RtqLzco+z
l+hzVfNvqf8a0avUv7VoB41/KGtU9A/tnx153K9zj3eA6Je527julTp+tbZ2
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
/yG3nXYFsqjwer8bmVBYro5CDhW22W4QPwT9r3GvQk+UtrsGs3bVvlL8gMi2
Hr55LDqmsF/PGulW2DdfX+1PFLafWS/nFZZLVfF/iT5T2Ge5U9u/yD61zygs
z3PmofgfS/sqm4nO0HYI+I/oD4Xf4e+in5det6N03vzSsuNxbPXS6/9p8e+X
9os2LO3LY+9dU9iXxw58WnSWjh2pPpuILig9DzYubUMcFGwKMAFstvHYfaX9
21qis7V9in+FjSz+E/wt8R+K/1B8/9zYAnZan7D2P9E4qwpjPsjVpwrbNEcE
G+eX0j7kjzrvk8wYUWfxL2a2sXn/sebEjRq/gfr+VNoHwxd6PLPfjc5bofYe
Guc3nbu8tP+DLTVffa5Ab6g90jj9sAN0vJ74RMd6MdG1fzU4mfiXtF2JnyP6
W2lf7tfcWAaYRju1/aPtMfxJ9dlC45ToY55P/Eq1dy2MFyGfTyqMI+GbjCqM
LyGTjy6MvyGTDy2Ma2EzjyuMTSHDTyzsoyGsHmeuafyvNX4n7i2z7/Sx+K3U
vpn2Lxe/n7YFap8tuqnaV6j/GeJ/YE3iF4jfRO0/qP1k8RuI/0788eIT8bfp
/WzL8xXGAC/Uvdya2HdbDz8ptr2ELzRE/CD16Sh+XGa/spnOvYz1i41U8fdj
Hc3S+z1P55+ltq/F/1lx+5Gid7KOI+vyPurfP4z5pMbcT7QffijrSu1rxE/M
7EcvC+v+5sj+UvPS9suTzNmAGxws+lRm7OFG9b8n9ho8Rfv3Bj+OufZS5vs9
UueOq1rPn6O2D9Wno/psjRyMjE8ig9LCNtudGvP+wmv5GPGTC9sws8RfyjfR
+SeKThe9K7bPidy6K7LN0VPX6479qnd/j859QO3/4fPpHo6t2I65ItznqRW/
pyHhXV3Nd2P+48Oo/71q78I7TG0Tzta5z2TGaQZqzAd1fFhkG3RK5nNb6PqD
UrfNVf/XMl+X93y+9s8R/23VtiY259Kqbb1HtZ2t/emZ3+V7uvcvtd2ve31X
dLXobOZt5HWJX7yf+tboWE/eM7I2tU3bNrMNxzMdpfvZvbQt/Jxorv491N4h
yNTHItvHy9V+osZ/ULQs/NzTRTsjjyOfg53Nc+2mcTYqjMEfnRsjHxcZJz9B
x4bqPgaLRmp7KPI9YXNje++i9g117pPMZ527QeHz4MH1J0Qe9+HU9KDMNjpj
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
fv2o2LHpkbnj1MSrX4vtX3FddOmEoE/3LSwvPyosdzkXecp90p/ze2f2T5Cx
I3K/M3wXYrvjYuvEXcOY5CANrtr/uEX0Yp0zPnaOK9cdF/rg04wJ32J+YV2M
Tu6eGFP9Rue+kTnnLcFOTx37u4v5mztf7jvRBbkxwkeYC4n5V/GR1b6v+v6g
ufFkamwNP/y63DJvaemcSTBJck+uzZ2DuURtfXPngJCreXJq7JFcuy6p4ybI
unGp7ULimsSu2lUcy+qUWn8fJPpRbtn7MPhxkKcdU+dFknNCPKOO+kxBHhLP
io0rYWesTe3PY2euSY37gHv8zXpE3jAXkHE65zfxG8a2a7GrHkyML9XH6M+d
w7BX6dxm7JxtRbPMuA12L3nQWZj/G2XWW9iuG2bGlcC1NskcJ/1X/DaxbVls
o0ax7UVsrO1i42bkGYDfk9sDhr918Llrg3NgR4rmxNNTY5jISnJZwBWPR8mF
+AJxBtbusLCuycEkZoheIUYxJrLcuyM1Xoo8H5I6Xnwt/kbqmA6+wV25cQjw
+w8zx7Bqie8fO09gEfecGp/HF1qvsH39nehDah+BDSZavzAWQn4leU/kC6Fv
yHMGDycv5srcOczEj1qh+9RnZ53bNDUmj+4n/g7Wejf6M7W+b546nxddiB58
J7eux07skzuG/y2xudxx/um58xOIEdypca7Knde8kFhobltykfiDS9sJ5O+8
m9tOmCv6WW6c/gG1rygssxaIHpAa08aG+Kx07HCb0lgK8gpZBqYyL/AjMo+5
ael1d2LkWPNhpZ/pmnAPDdAZpfO3yK3aRftHlF4r15e+f+IUxCval35nl5de
m8QjiEtcHnAw8LDjqpabx4u2C7FCYoasO/LJO4b1TlyD+Ab5RtgyyAXeDzld
Awu/E3IniKHfn9s3x0cnpkFso2HFuvTWoKOfjp3LTjuxGnJKiMeQt0YfYo6n
hXOJiYCFg4mjT+8JPLqPuCoxUmKX6N4hYX+zsF5YN0OCD4UvdUXmHIRugaK3
iV2ssylix/AGhXHQ48yZxaJv57YZ0K3ExxdUHVtgjfD+fgv6ZZnoL0F/EZMD
V1tbuF4GrA3fH7wNHvvjssRrBGwAu3VF7Fwx1gRrAxm6qGoZgH4EVwNf49lu
CVjb4My+Lz7wArVPrvo82pfktq3WhFgJ9j2+MbEX8rrA6K7I/e6JiSFb+D7Y
aB9VbRtgn3QurTfuEJ2Z2ebavHR+Hu+hnvi54ruJ3wLbObPNUld8p9Lr/jbR
73PnupPz/mXVscX+OnZj6Zy22qLPZpZPdcR/UbVMw27pBWape+5ddY7aurhx
6rzkAyvWCycl1iPvVJ3HTE4ydhRxP+J/5DAdFXjigNgW2I7Ete8PuDr4+pCA
4YPlXxd0+ILUPLgW+NZCtY2MHePpG9u/wf/C18b+pQanX7ARdlH7GZn1NjUr
5EyRX6VbXCc74ZGf4I7gnuh+cqvAncg7vTyzrUNe1puFn4OcrEHBd8OHQ64M
CPLkr9g+NVjl0sCDp+EXMc/INyJOSo4R+V7YKdg3xDPAaD8LttP3xMlE78g8
NzkXnJP1Nz2sx9bB9qI/sbh3wxy7PPe9YLsh58CPGWtsYhy0RWKsd2aYt7cF
HPj2qu0pxiGu1zP02Su2nTcvjNMlM7ZOTViHxHOeuf9A7vOIE84svHaIn39Q
2EYmFk1MED+BWDn2M3E4bGj8e3xm/OUFgcd+HRT6IFteje1j3x/kD3KIOB2x
u3vCPjoXexqb+cjwrlljFNoNjy0fb83Mg1NdFHwTfJTTEr9XsCv0M/eJjsan
GRr44zPLJ3Ja+4T7IrekXWKZSu4G7fggvbCX4v+vDXoFvRw7vnN94m8FZoYP
dGUY/4rwHOT2E+vkWchtOCrIauYfuabcD3kbbcIzMpfOSSxH51U9Du/886rx
E9YL9Smflo6JNir9bfcO3xf5gA/9c2mMHSwOTK5f6dzrdrltS3TCzdi8pfPg
m6LjSuc37xf0Mnmzn+euLwBLJe70nvrskjnf/obSOeIHq8+epfPlHxJtWbg+
sRU+Yun6isaibXQfFyTOwehfui6ifW5bGZuZfOOhpWsOyaM7qXRe87Po5dL5
621yx3orYT5hC1E71kD0EvU5MHEuOrYWeTV1wZhL53Dvq7abStcDHJpbviBn
eEeXls5f3yX3nMfemyU6Ve1bZraNB5Su8TgMO710HHeH0rnT+InksL1U2vbd
vnQ9DPEEbF7qXMBrRvJNMstA+kwWf3LFYzKvTtZ+ixrX/nEudSjbJM5xxcZm
boDRkxO0IjOOtF3p98rcw998F7slc11GkhujblJapiPbqUsptd+nat1KXQmY
HblaF5XOud+Zb1pj/bql2qbm1gFTC9eYEA+dEnwf8tgX5sZhwWPxC4htEeu6
XffxdOa4P98av4ncjFsK55GzBsmDoF7m74pz/5AF/4vho1uxc8AfiLOD9xET
pPaSOO/p+B+p49PEsnuUxsY+Lo3XoVc+KS3zsbO5f+o1iBMQ2wQPBJf7KnWe
DD4avhqxe2KE1MG0CvOZvEHq6/CZyHfvGeQPcmiPwnjo1qVzhskrpt7xyMJx
g1LvskvhWMHGNcaBycUl55eaUmJJ1BTVTo2bU2dDnjM1IDtmjoMQ/52XGSMF
FwUDjYNfhn9GDS0YKXUshxWuQUM+tCldCzWydO4r9QK1C+dCEDOm3gU882o9
y6uFa6zA2cjfe0vbJqnx7Z8zx0SozSLPZB3Oq2PTdKxJ5rqVb1PrQOL443LH
r74obV8iY1mz2AHE9LEFxpS2ObBbyCkBvyDva2jhHCzWYN/EcVxwrcdy46bz
SteL8Yw8a7vCWGle47wRMGvqwMiJJHZFvisYCrqoYXgnrJ22hXM8GOfj1OOA
wYLFHl64Roz82P/FCKk5w0YBp2BurdY4nyfOfyM/n/5LU9dbgVOR+/NLbgyK
OrzVmWNJyEPiZMQ1qMWlJrdh7NzLfRPHejupfVs9z8GJ6x3+1TlXJM4NQE8R
97wEzF59Lk6dc/hw6Vruc9Wnvto3Sh1f2K3GtRbkDNcRX6TOIdlefN/U+XL/
absmcXycfBTiLNQA/505hnVJ7poK9DA6bETp+urz1L6NxmmbOI7APAcfGC06
RH0uBXdT+53IHPEniL9d/EXiO+W2G68Pa/lu5nnimkFq/0ZWXNNOPRV5TVyL
NUUslZhqmRtPQMYOR0Ynrpcn/5U8WPJp/1L7xYnz5XbSff6TGutuWuO5RT14
c/ENM8ekmomvlTm2srP4PHNcpq74mtS5NNRigxuT97uj2penzrfB9qC+tLPO
qV3jWvFPkDeZc+065q4rJy5MPm0T9bkzNTa7b+l67tdFW9UYt+olfvcaxyfI
0W1ZYyzsgtK2JXYmuQGsNWKB1D08ULpO/szcdh2+ynHgKDq3V+KcyUnhW+Br
3F+6fv6M3DUS5BRxXWwkcnBPyJzfyP3zHINK18Mckbtmklg6tevUx5Hj0qRw
HR81+40L+wLk9pDjQ40hNucuYISl6/8vVtujpWtuLwArYp6nxlepm0Pmj1D/
0aXr8JmHv2auzefcD0rbZ+QiPiX+ptR4LLKCmhpqa6jjQ4YMK2zzE0MhljKw
dN3O4bn9bmI25DY/ljkegW1zM9878bd7vDTGB87wSun8LXQrscN1scrUNZXE
R5uLji2NO+OLvVxaV4GDbVhj2U3eFPWlI4NcpWYQPYI+4TcckCfIoWNLY9fk
24K7jo09r37KHCfiveEfEf87U3SN+n+VOGd1ZdUxOn4vYnLpWlxshu10D50S
1/9iNxHjaaw+izLH45Ah4LfMPeYgcg8fjf2GNdZV5LGPK42Z4qviIyBnkDfL
q8ap+H2J54McwM+l1gu7nn7Y3B2DH/Bn7ngEOdrYzf/DJ6gPJQfr69K6HLlL
7uLEIEPwo5/Wdl9q7I7foCBng1x0amxqBXlF3T5YK3V2z6jfF4nzcsmtB+ek
9gFdh86l/pJYEjEi6gCoGSRvilx98sOJDZHrjV0+NNj7F4cYAbEC6tyIYSAH
yDEG18CO4jcUsOWwG/mtAHBb6u2YX+RsEwfaHf1GH537VWl9QG0Rtg1+HXj5
6CBjyb2/tzA2SJ5wq8QxXupG+wYcEjxyn8RxeGp438pc/8j6PS/gOOA66HDi
xFwX3xMsDkwOXA98D5vw3sx+KBgd64xccPAH7BLsE2T7p5lzupD5xP3XYbS5
c/DAZslpaJk4/kw9L/UM1DVQj/AQNnnFPgh+Bj4NsXjiIMRBqUfAtiWW3yxz
/gn5MMtS178TAyIWhA+Lj0lM4dHMtbD4PnNK53pip/1QdS4evyvyYdU+KrIO
PA5cjtqZ3RLH0qkXpo6Ab0pcDtv1gIrrFb7NHLNGfmLfY+eDVTZPHP+nfrlJ
4hgs2PUjVcdRqZ9FriHfsG2pJe5fsdxmXYDZ4YOCQxKDJX6L708s8MrMdgWx
zV9L1yARX6NuhZol4mLUwuydON+Beu3VuWM31N2Qk0/+PTWX5EuQO0GOCFgo
sVd+G4BaMHBj8GNqm5AhyJJdE8dakDPNAm4Mfoz+pD6IevHBAa8Gt/5GY+6X
uK4NX4r8BnIkwHSId/YLa5s1Tn0c+DqxX2p03g74IbVI/J4G8QviGNSgUY9G
/Ri/vwHe2yF1TRffFLtibulcZOw94t3UlFF/Rh4sMQpyQMj9wO6qm9mHwZeh
fgr9T+0SdefVsL5YZ/DEfteWtgvI86DWk3zX6RXnhhyW2Hem9pR8WuIa6wcs
kXgu84ffryBGSawSXUc9BvUX0zLnZKKPhlddP0fNNTls5BSR24ucJM78R+k6
Qer7qA8k/4c8YfKF90pc284a4XdSiIfg45OnR35ev8y/DUKciHgRvx8CZkpN
M78xQi0tv5lCHL9pxb//QY4BeYPkkoFrg28T98duIdZDbjJ4Ozkj/AYJWAn4
NbqZGj2w9u9K1/aCs4HJkRdKjijFjvyeCTXa/IYINhqxHmI+1C2SYwR2/7fO
vyTxbxc8WnW9OTqL3FxwQOYQNix2CL8DtEz9ZyauJyImTh0EtRfUPhBnId5C
7Qx4CzUo2GLE+Ij1oRvxVanb5recqPfEJkfPUMdBvQc45srgy2C3EnMiX4jf
A2HeNkqds4q/+W7qdbCo4pp4ah+ICxye+ncSvq/4dx3I3SVH7f3U9V34Hfgf
YCzkzJA7Q74c+brkCxO/IY4DdsHvSZGXBY5ADdG6d1+6lpm1jwzATl9ScR0/
cRz4GwvXy5xTcb4AeDW5BPxWBP4HWC81p4tLz29+B4ZaFeKPxCHxS8Bh+C0f
cJuzK65Nwe7G36ROnRxmcKTn0bE1xh/xN6npQN7umRo7Ig+oWuPab7A/6jmp
K1lacfyKXDtqZKjFIXccfxN7GJyc/DjqYPitG2zemaXrRIjdtE9tR1FfPr50
bQuxntap6w6INxF34rcAiBsOyPybAsQRwDHIWwLfPCVzbiL2Lb9NRV0J8Vni
tPgBxEOJi1KbTDyU3ygiHsc7HFC4xpkYK7/hxO+GEI+htqtxsJkZm/oU4rzE
e8Ef+wdd0DzYltQeUqtCnI4adLCs5kGWUvMClnJp6rlP7gQ5FDskzlWro77P
Vh134/cHqDfBV71M/LDMv58DVgY+CE5IjefYzDkz4Gb4lOSQ8Vsa1M2Sy0Ft
I3UZ4HL8BgD2233BLuJ3tXYKOotaD+bhzanrwYnh8rtT+G3khJPPSU44eeDk
axIX5D7B/ai7IWbN7yXghxEjJlZMjhkxBHKxqCUnFrx55jxb8mnJ2cXWI85L
vJf6W+LO1FfiBxNfJs6MXAEz5HcUsJ2J2xK/xb8ntkuMlzpi8uvJu+d3u+oE
WYpfhU2Lbbu4al+J37Mi954cV3JdR1e9Tvktgv8DPuvX3g==
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtnAf8VuMbxs/7vuec55yIFrJSGRWRmQZayo6GiCIqqZBZSvhLZvYsUWSU
iAqhIUkiQtmjIkpSkazM//XtOp/P73ze537Wmc89rvt6fvXOHtT5gnIURd/E
UaS/6PgQRQP1+20lippXiaLbJaelKPpCjVPzKLoni6LOGvC52p+RfEYaRVdJ
3kl9vkqi6BTJgyWfqDneU595OlqqfLXaz1H7XI2vpfK7Kn+o8SXJD0geKfkp
yVN0vvqSI8kzJX+r824t+TkdazXX5Zp/gea/R/K5Kr+i8TVVXqz+H6j/15Lf
U/tumuJetS/S+D9UHqg+czT+CdUdKbm76ieq/xDJr6n/CWrvo/JZOkZI/lh9
DlCfX3U9N5Z8L5PVfwfN/4LkS9R+l9r+1HG75Mt1/ifVfp36vaLxsY7rVX5O
83VT396aa5LaX9P469T2repe09iVkoepPFjtzfS8V+m3asnn+EHjT9b4S9X/
Qsnn6xxddJyv8lGqe0XtkeZ4ST8PaNzLmn9rzTdZ7fep37OSN6jPELUvVN10
1Z2p+f6nsXUl/yb5DPX/V+UdNH62+s9Vex/17y/5aclL1D5B/ceo7giVlzNe
5WFqn6H2l1T3o+QjNddiyUPV/rb6N9ac9VW+l+ei8smqW6VrWR18L3VVTtV/
hsav1fgD1e9tyYna50h+UPPPkvyq+rWQfBXvR306q/1iyd+r/ja1X6Hxe2nu
nXmPkieqvqra1+h4QXM8IXlrlTtofAONnyR5G8nHSN5H8v6abyfJj6v+Uo0/
QvK+kmdIvkry65pjk+TT+QZV96jO01hyV41dp/bHJR8s+VT1u1ZyY43fTvJY
9b1I8rP63V3y2RrfQWMeVv+mkk/i2tR+mOpOVVs73cNU9Z2r+p9oV90UyXup
vb3KR6j9Ecmz1L5e7e1UN17yJM3XPPKz+UnznajnsUFtX0p+VPKxup5z1b5S
fW+QvFb9b5F8s+aZIPnw4Pt5Qe1X5r5v7v+Cku9xKx2NVO6v85+ksfMzrxXe
2eUae0/q59lE/VZqfHPVNZQ8XfMMk/yizvOD5MM0ZnTFz4Xn01nywRpznPr3
R/+o/kb1bx+sL9AbIyQfpD6d1Letzv+M6r5Ue2/JR6v+O95X4vd3mupaqfyZ
2rurfIzOu1rtx6iuD9+6+ryhuuVq7yv5WNWvKd5vI7Wdp7pOqttb7TUjX+sK
tX8luZ/ajlfb95L76n7rqv0M9JnKx6n+HJV/V92bmuvExPc/QHUnqVxLY/oX
5bUqHxn8PfNdXyP5GT3PAbq3fTT2DcnN9PuF2vdU3VMq75L6+26oo47KmY5a
Kg/U0UnlBytbVEDUSufYTedYproLJQ/V2Pv5HvW7WHJ19X9C5UN1fI5uU//J
Kk/R8Y3kQyXX1vhck02XHGueHaWPZkreX23V1fa65jtA9S00V0sdB6pcXe2z
1L+Wyruq/zOxdVsLjTlbdZN0f31Yn6qfo/EtJH+htrdYC5IbSn5D8vVqHyf5
Eo15tuxnfKTq/mWdq7xKfZag49X/8UIfbVTfn9VnB7V9pOM/9d2kusnoZtW/
qPkGqe4l7l3tF6p8mdpnSx6tPjdiGzgftkLll9R/nX5rqO8Cvhn1X6Bzfqpy
T40pqa2i4271X6e6z9T2i+TaKn+CzVK5verOUrm9+r+k8T+orrrk+Tp+lbxB
8nYqv48+17l/1f18qL57qr6Fnt/2ep7vaaqJkufpeq5S+0Fqb8DakzxZ8jmS
66n9VcmDVT9H8kSNuUN156l9W56fynPVvlq/2+hcs3Vs1PnXx4X91fGX5GmJ
n393jfld8pPBtuFalbfS+M36vU5zf6a6N7DZmn8S9kjn3U7Xu1q/16r9Bs07
Xv0PYU61n6n++6r8r+p341tQ3XHquwGboP63q/4x9T9a5+sseQnnQV+qvR2+
g9rfk3yU2o+W/LbaR0r+Bn9D8gi1PyS5m9oHS16v9jsknxJs77B7d0pegf3E
fqj/aMk561PXs6uupxrrR/dzmsrtVX5A7Z+k1pePqt8/rH/Jl+G/aPwYyU01
73T1P541pXIN7LrKu2jOO/k+NG53lauoz18qb8caU/sPqrtH5b8036OS71f5
cc13qeTn1beH6vqqbrOOXdV3s47vNP4Y3c9pavtE57pe/f9Wex21naUxx2rs
N+rzK/pHxyrKOspqOxcfTO2J5D3U1hcfB1lHDZX76eio8ia1l1TuzT1JLiX2
vzLJm1XuoborVB6la/hb17BQ13Mk+ljXcYmu51S1D1H7vzwj9X9fxzcl9/9R
fdrg36l8k8ofqX9tyTPU/ljxfPGnMvwptf/N+5b8neSHsMm8e8njVB6l9o95
H7qGCWp/WMcA1X2geVaXrCM2Sh4r+RnJW+lYyVrT+GkqX8yz1/jP9dtXfR9R
3e3Y/8xr8WZ0gM73iuqWSt6+5Ouvk3ntXME7VvlJtc9i7Ur+Su2d8H8kL8NW
aj10lvwTYyVvLblb5vfDe6qKftTvPMkXFT7MZMlzJF8Q+Xqr6fi5ZJ+a9fw0
PrPkQWp/SOXZOt6TPFzyd2rvqPnX45+rvormvwp7xPerujtUHqPjab7Hkq/3
DvXvyLejPj8H399M/Fd0rZ7P7dh3tR+j9p/Ufpje7/Fl2yz896d0vKL+25Z8
/lvV/1i1t+UbV/87JZ+IryD5t2D/HV/5dfWfqrFTdLyqcjUd36utt875ZmTf
Yl9d/yK1f4k9UN2LKjfI7P8PV9//Cn3GvfMMZvHsdCxR+crI801M/G54R5NU
Pljjb5d8rdrKmv+yzGufc76s62sk+U31fV59I7XvqnO8LXkm60LyoZl1O3Pc
p/4vJ/4WFhd93tTxeck68gWVm6r/HSqP1PmW5n7f+Kuvqc+zidf3Uzwbyd8m
Xs9PS/5D8mrWbnB7zHPIbd849xpsnOoSySt4HmXbr3Mz65qZ6vM8jgD+GLEB
3wv2KPP6YJ1kup9K8Pm+l1xd8r98p+q/SHUN1L9l5ufPe0ir2F6wNr4uOWbr
lftc6JJ91N4vs654WXXPae4nM8/3T+L2W9R/ueYI+H9qu0DyzmrfS3WHqP1W
yd9V7LN0VnmUji9jx5zVmAs/RP3fYM1yLWq/P3GMs03meKai9hn4bLHtIvZx
T7WPI5ZS+06SF6p9Qmw/BH+kntrHqHxqZn1d1pzb6HpK6l9N7XMjj381cbzz
ofq8pvKemW05dbtjO3T8Jfnv4nnyffD9ENP9pPvarPn+kbxe9TXUvkK/09T2
X6EjiLuIv/7WcZ/KpwV/39hq1iPfM+vzPNWtLuzp1MhzblDbb5r/T5XXqLyt
5j9O1zNe7beo3ycav19mW3+T6hqrXEd1HxT3wnrop/PdpbZy4X/NT+xL4VOh
T/FfrlH7x5JfT+y34b/tiD+jtuaZv3/WQVLF6xXfiTF3B68r1hc2+fHCX2J9
rMVnwlbm9q/ws2KN3zfz93ZN7PV3n+SuZeu0VOVeme0Vdqum2s/ObO9S/GLJ
wzP7yu+r/2xiu9ixODEv30dt1b2mtpzvovh+8Qcyzbe95H2Iz8r2wScX9pxv
O6juD5XrqX1vlb8ipuH5JPZ/tyr7G8Desj5yyX8ST6j/IWX73E8W65V4qgrv
Xuc7J/e14svvV8V+G/5b1bLX72Pcc9k+QxfebWZflGd4v+5lXOZ3+z/1baLx
GxN/u3zD5dT+APdbs3hGj7BmyrapD2r81jq25/mobWeN3wN/WvI3Oh5W+SL1
3w48pXheabB+Qc/UlnxBZn8iKeIF/CvWGmtuG9VV0bFEcqNijiHqX1fl7Yt4
YUf97lF2jPJ4bP3cBPuieXZRe18wANZa7Ph+b/3urv5740OoXBO8SHJtzbOb
+teQXE/yDpLrSK5JveRPNcdBsetpfxsbGXsc49+JPB96Cf3UoGR9gX58S211
VFcd31DX8K7kfdX2Zu7v7UD13U796up8DVP765+pz8Hq0y/3eHTr/AIf2Uft
H6puUuzr+0TlA9GJ2EAdh6q8XHUt1N4/9/PbT+W3csd/fC8N1GdXdFVirGp/
dF7qeB3btovkbdENur5TVR4s3ZFrfM2kuDbVNSKWDf4++U7r6fpHZcaWDuWb
4ttIfC3NVLef+rybGcsBI1yceT2sULm56ppw7zoOU/kIfGzsoeTW+BvEA5Jv
yhwbNdGYK9EPui9dVnS46g4mlsD/k9xG9fV1Pddnjv3rqW4osXhi3wSfBN9k
su6rDbFFyRgE/cEb2vOdYL9TYytgLC3V3gz8T3JPfFjJd6t/J9rxbzV/c7V3
wH9W+wmJnwf4T2fNt4fma6H2o9U+SO3d1H6I5FZlY07gSa/peo6RvDXYHe9M
v8eVjUGeHvv+wHJ2kDxY5/u3sF8XFfEU/tPN+KvYGsk3pLYlPbD3qXFX8NdI
fc7B38nsuz+vqt4qL1N7F9a+2vup/YnMsRc250yVj9Qcp0h+sWR93A58UvLU
kv3LsZljwRHqf0+w/n2M2AZfTNdzv+QEf1VzN5T8gc53EvZe/c+K/Tzvxh9T
/73U/mxmrIJv+MrM84NvXqm+jdR+tM5/htqXqe5tjekg+XT8kZL9v6cyxyro
sAsz+xfEMujc/ui+3HYR+xhlvt9I7T+hezX/lMzYFWtwMNi15h8keaXkHRLH
fcR/b5Xsv9WKHVsRY92Nb5Y5lpqv/hdz75njD+KQ53JjamBr/fDxUmNYYFnE
kPPR6RXHwmX9dgTzybw+WCcXqu92qvtFfavyXnX0UXuu35t0JGqfgL5Qe9fY
eNh81R8RGWPoFjueqZRsI9umvga+5YGxr41r6C75vNjXdke6BVqPWsXGJ3lm
Y4gvYj/LRcRckvdWp8skd9H5NmruV3V0VfnuirHddyTfo/LszPEhceL+et53
pVvc6KhdbDz1NvVZVLZNuV3lUWCaJdfdAuao42WVSUJcpfIl6Cl8G8mXVown
jVS5pep21jWNrBifAGMHa39d19tGcn38bPD3zPoGvTMY3yL2WmBNtEntMxIP
ERfhS/ZNjC0T8xyu9sWa8/yyMfczNPbPiq9tWNk2dmFsLHGwxvTANsTG/oiB
WqbWT+Q6iLGOkDw0cX7gTmJIld8lDo0cI7XCpibOu3CP4GWLdL4OkTH+HmpY
LvlsybdJPpf1rj7NJPeMjYewvvBH6hb+w5jM65t1fldun5v1zTrHF8enJj4m
TsbX3iozPj+EtSv5I/wudIGOG4v1B94YNL5x4a/fovrxar8w9vrCvtYo4jdw
zC14Zsn2fEbqWLNPbPyiP/50yTq3Nf4I/hS+TWw89AC1fy/5+rLzMb11VI+c
oxlS2J+xZesgdFE/1Z0QOSdEbggcDTwtLTteuAL/Q+Xfy85pNeYbLDtnUUfl
m1Pbok2qG5W6P7btfcnD0b2pv8clhUy+a2PJmBvYG+N/UflXdGrFOgXd8hHf
M/Y49fe+svCxyImwflZLvlblN3UPo1WO8UHRZ6n1wS/F9WzIvHbwyw7V8x2p
unVl2xhsDfbhx7Jt/I+Sd9YzXK/y9anzSUfp96WS+2A/3gGPKZ7fv1o7V6a+
1khjb1V5WTBeDm5+dYHvkGsDowKrAvN5VH1rR8aCbsxsT7GrV6htqeq6qv+h
Gj9UchPWUNk5Ifyd1cTTKpfIk6nvAxq3C+sndv5hLH6h5ONi51+Y45DE+QLm
XhyMD4MTN9X93a22GZLv1zFAdaNTX9vRcZF/qPjdXKLjeNVt1PmHqnx+7Pzm
ULUvK/sZDatYZ8yInT9Cl6ADGybOH6Eb0WnkinaMrOveC87V3FR2PmSI2p+s
+J6Ozq2T6ibG59FVA1P763+g/wobMFXnWxXZNqCTyZHUiqyr16huOfcn+fti
PbA2DiFeVL/P1T5F8sWp4+klmutv4j+1X5Y4vgUbBFN4Ruf/NTW29ie2Q+fq
nhlrBBOYGhynElsSYxKPEk9gT/HB60v+n8bMrVgHHZd7zZLLIAfFWv5TxwSV
lxf41xm55wL7xR7fmzvXDD5XP7NNm1fk+LB1xLHEs2Cm2F8w4m35jYwdg5f/
p+vZF/wkcw5tmsY3iJxbw8aWC5tai3yA+vyr/kt1fJ8Zc90xdo4DLPY2MAId
D0teJ7mRnkENYiuNXZ47h/Z5Yryf3Bp2OS9s2M36bRisn3gXy9R3fOxYheeV
BetosOujIutucDrwOnIIxM9g1GDVYNgfq/12chAVY9Yn58a0wbbBoD9U+9k8
r8jYLfoYnQ3OgI+ILkfng62CsWILyJGCM4I3vott1jU9h35JHC8TnxHfLS1i
jHvU/+vYeGFdjf9F7Q/yvarus9w6HCwanwLdzpold4iPwlpmzU0v3gdr8aTM
+Ui+iUnBOuWoxPlQdA064xXNvSGyLhku+fmKbcIxKndU28uS90cnB+sEcpTk
LNEV4CngrbzP2rFxWPDYeyL7k+QUyC104vvnfaf2zfk+0LX4MPgyf+k4oeI4
CV2KThhSMaYNtn1n2XwD1ixrdzmYTOq8N7bklrLzgegXbA35ppcz5wtp68ga
q9heMRc+Br7GI8R0sTHy5ipfnjtnXJ8YRuWFmuNejf1UdQdU8fVjq/ABiS/I
gZAjuzVybgQeBHyIcWVfH3YAe4ANw5bxDNoSC8R+NuP1TB9V+yBiN83/oebq
iq+u/mfHxvzB8h8pO19F3p78PTmQpkU+izYw//cS54XID4Fhg2Vvk1g/EZ/u
obYLUp8PDBMsE304rvD/8LXAoMCi7oycG7wmNRbBesOWkmMiBwdmRe5pvfqs
UvsdGlvKndPO1T42cq57WWb/crjaCTQHVMwNwQfAF/gyc37wApUr6DP9PsFa
Vd0IlRsV8dyX+FQV+6hcK8/4apXvA6OtOCd1qsptNd+3JXMmHgj26asWcxxB
nKJjYsk2//yKc07PJeZnkIt6UPI/Fefom+XOkS5MnH8jd9pKx0qVx2v8GM0/
Vu1rYuPxBxbPCzxnQWT8hpzXHxXn6MiF/aw+/5TtYw3R+GmZ74dntHPme+Le
vkI/V5zzIgc4MnIu7K6Knzc+DLFAn+Bzg8EfoPEbJY9Qebiu+WeNba7fbpJ/
xocj/lV7K5UvVd0a7E1uPxp/+vvg75O1ennJ+YQFBeYDPtMud44cHxO8qI/K
M9X/zMgxM/kGOBnwFuAvrJLcIbgMp+Ex9b0hmP9zherWYQ/xWTRfe9VNY23n
9nvxf8vYmuD4aJKOhWqfpWNsyZwluEt3BvNliAmJDeelzr0Qk92mtjhzroo+
cGs2oz91vi6S50iejX4t2eceBZ8ot1+Nf13R2D+Cff9xJff/Mfe6ZH1uAMvn
nojfdM3vqP704FzIK4X+BkMGSyaHRa6HnDAYI/mB1rlzKlvy3CVjt6tSx/7k
hFl/V8TOW4N5g30PDI7Nb1CfNanxWnIh5JjJn23C3sV+x0+pfY/MuQ9yOODB
PYLXyquF/Z+CP1RyTDRSbdel9nHRb5NT2xhsDd8U+ar1wfd+a8nv6xed7/3Y
73Rqan4Sto4cG/g8OXJyAmCiZ+X+XllbS4v1cnbw2gOjJhf0W+44i2e+GXxK
891RcgwH12tnHfuV7YP8khlPBtskRgKf2CsYGyYmA+/4NHPuAkzxs8w+Ab4B
PhV4zC7BuhEdiS9XCsaaycHChUOnETcTA6DrwKjJy5JzAbveNRg7BDMln7Vb
MLYHBgl3oFowdgnmTH6oTjAWSswGHrJtMFYIBk7+BsyVvDg5MrDYYZm5KGDi
9YIxwhqJ8VOwQzBPeClg7mChOwRjk3BW4Gb9njvuJf79Kzi/BTZOzgV/9JzM
sRo6CywaTPm/xJwMsOYXg/lgYOJwG1YGc2vA5MAnwTvAXsCcwO8WqM/pkW3m
Gyqfn5n7AsZcS+0voMNKjkHJb76VOfd+P/59ZkyevD05tS25tWDsHIx7kOQd
g30lfCbwIHwi8njk8/CVwPCwgRMjY3vkYMhzkO8gN7NVMJZEzgK8jnwcuQNy
9PjfYPBXp85n8TwGZM4F8AzgxsG3IVdHjg38C7DlicT5Ur7fAcFYFjm8Lbm8
1NgYOSTy1wuCscfW+sYXsTY0tnXJHKJpsX0MfA2eyXn49mCiJfu4l6rcrWIs
qKnqdlb5oOB4jZiH2AcMCCyInDq5deI9YpVq6rMqc0yKT0J8DfeRnAJ5AdYQ
a+mwYF8SHxBfsElwrEXMSewJpg+GTw7hcr7NxHwEoKwJFecUyC3wjKoX3xO5
Cp7hwMzPlzicePyHzDkLchf41HCfGmm+o0rmDMIfJKdAjoB8w4zgGJxYHPs6
KHfO5bTU+Cy5mJs1/kG+X/V/J7UuR6cvTu1/877IiYG/7pTZBycvwzfGt0bO
i7wyOhXdythRiTEg5iCmIm9I/pBYC04B3AI4T5uKmJjY+CLN9wLPPtiXhDsH
Ht42OHaDOwqe3TSYn4jPie+5S2KsDUzq2dh8Vbh7xETz+H6wB5H9cfxy+L7w
Y/+U3K2wbzclxtxu1dz7Sm4d2cZj67En5MGxCdgG9Am5BzhmM4t8A/kUcgot
0eu5+VDoGHQNHBF4sfBj4Y7A6YAXDD8YrkctHdNL5pTAz0XHo+vhdeArYROx
jfAYiHV6BmPf5J/hzsFRI0f8Ij4ysYmOkDgfND2YI0vOlpj2sNzvmHdNfvuO
YB8BXwGM5W2dKxBzloxZkS/pHfzuL9f4lep7YjD3A0wSbPJt1U0pOf8N9/qk
YO4HmB3YXZXM8+OTgN0uUv+nSs6Hw/1lPsrUVc28xnfX9bctee3DoYFHAJ8A
bk2r3PnNv4p85Lu5Oaj1VPdQak5v19T4CVzfJZJvSOyz4Lu8T0yY2CfCN4Kz
BQYBpwsuV43cuRd4rqtUbgE+oraasfndLXN/u3CXyL+/Qx+VT9GYj4I53T1T
8x3gesMhIs4g3oBb1Db3Wm8Ym5/IO+Ld7RL73R2Rmx+9ucjvwvmE+4k/enUw
R4O8NvltuBvwvw/QufaT3Ct1fg3buiVHR8wUmyOIj4Sv1CZ3vhObie0kBw+G
Qf5gouafFWwryVkOzay/tsPvi5yrhE8LdgSmBbZ1cHAu63j0h8pzWa8lc8ZZ
f2ASYBPo5Ocyc1ThqrJG4ZO/EKyryHEy/xzmLJnjif6+PbXuBoNDH4NZgF2g
o6dLfld9Tiw5h0a+7YtgriucZPJ1cGrhQcOHhmvbWsdBkTmwK4I5socn5kTD
neV5z4/dB+5tK9ZkZIxxWSGDBcDphdvbLjg3R/wPngTHd17sMbQfGowFdtGx
ROWXgrEgcqo7Beszco/gZ/enjh9qJea78vzZw/Clrr9X5PU1LTfG3lvye6k5
819UHFOwntjjcG3i9cbeh4W5ObXkgHfX+OmSV1Ts33cv4nWwyBd0/FO8f85N
jhV/CY40eUre8dtcOzovcg7j9UIGK8Qmz8eX5HnH7oN8AD5C5BwNeCT2Fy47
HGy42NhPcq3gj+AxrHnW/neR841f5+aUg5GCzzAf2CY2763gnNaK2PqTeAYd
gC6Agw3+8g36glxo5Of/MNdTMia+FH83Nw8SPuSjwfEIWBIct93UPi2YmwOH
AP+O+IlzobOX6Fz7BL87cmTgoQcGY7HkWEdm1ofoRnTktpn3DLB3gG/2RckT
gs+9qWR+MPoDTAS8ZqDKfYO5Z8Qg4CXEI2CRcOzqafx5wdw/YgTwgwuDuS5g
SnD9vsjNG4I/9LTa9gjOjZOzvzrznhZ4UvClXpX8VHBfcrwfZf5+eXZg5ODZ
zXSsk3yy5A+C7x8sGNgV/Bd9hu2BA1W18IfJrcBZqFmM3zNyjP1hsM5Ed7Jn
4M3ie9s/sY/G9wFnAe4CNpXr/Vby7NhzcP4xqf0tOPSfBHMOwAXxef+n/p2C
bR02r7rkNsG6FI48671lMJbXQ/LnwfYDjAwdMgDfIBhPi7Vmfsv8feODrlbd
ZcHxObnkUSXHc9dI3iz52pLjQfTNxsgcfvQJeAK+x3Ulx5v/xOZFgWHDvXoh
d3723MjcXjBveHbw7cDCe2TmXhFvwAWHo7VO7Y9EHl9N8tjYHK/TM+v3v2Lz
Z+Be4fPj+8PxPCWzvmJvAtd4VfA5OBecXvis2DhsHZg82DwxAbEBHKhmKh+f
mSsMBs78cDp/i42fwvUE424QeU/B18H3y14PMFawVjio7yTmC/G9gnGDjYKR
wh/CBmOL91LdeLXlVcxL5pwnqH1QMNYNRt2xkDk384N/7xnM9cBHg1/FeubZ
wWFjL1H/YKwKThjcsFDFvH34+0eCNQWX4SS2L9YrXH4ws3aZ7Qd7LfAZPlZb
RePnJuasHVSMJ38BR7iD5H9Scx/ghJ2V2SfGN4ZzDt6Mj4OvA0cfvhMcyE2x
5+D872fG0tgTcHhmDtuMxPhx8+J+KMN5A3+DE/lSYg478dUPufdk4VOD7+ND
4EuwhwB+Fns+2PtBzErselEw14Hx5DPgp8ItZI8A/NKumbFTMNTJwXu64Jjj
MxGk4TPhO+EzTSn0cdPEOmRYMD62U+qYnb0l5DfKBV66PrV+/r3Am39Ovf6b
Jd5TdEXwHrcPcP5L3vu2UfKwxBgIWAj4UdXEOoh4HH/598QxPHs9wOvZs0PM
MS71nr73C/wdvOx5yV9XHLN/hK+LP1rxHrkuuffILSryJeydY08d+ZOjI+Mv
6N//YnPu/0vNkYVnB6YAtsCeNTDskyPjbWCMYI2vV4yP4RPiG+ITHp57zxQc
AOZnL9W6zLEhOR64GOwJ2brID6Ef2FOSFfgy8VbrzHgse1IeCcajLk2cg7se
XSj5osQYF1gXeOPgxDruxmC88uTEe57YW8aeN/YMPBM53ifeSBPbTNYX+aXa
Rf6KeJX8MLnkKsTHmTly5J/mRcZf2ENSv8hHsbcEPKySGhNhLwnx7daJ8QXs
Cfhi78QchOmpMVywXDATsBM4bHDZ8LnBl8DLhiTOGbySGv+7ILHOHhGsP9cm
zufFkvfKzAWHAwS/CA4nXE5yUn+n5rzcWDFnk+f/TfDeTfbMoe/Il8KdYY/W
3rnXFFy1TrHX2u8ak1WcMx0dnGMm1wznB//2Dx3bVJxD/05tp+ncl2j+AyLv
D+MZVikwbvC2zon3hjWKzBfrXvRvLfmU2HtIZ+E/R95bCoYNlt0mMp55ZmIs
m++fddBL8tCS+8+WfJbkYSXjz6dpvp6Sh5TsL8M/wx+Da9RX8sEqn6264SW/
H/hk5Ce/LOxVz9zrl72q7L/dL7d/Oj7xHogarM/E3LZ2al9Q8X41bAk2hbxd
yM2LIKc1HF8iMdftOMnvgBnk1h2sAdYCeC37UskJ8TwfyMzdIef0U+b8N9wc
9vx1yK1z0GX4iOii83P7juwdJv9Efrld4hiAWIB8IVwE3s/xufd/4dt9TYxR
xTl8eB3k3Mi9nar6i0vGn7sVnIkRqdcIa4UcL2v51th849PV/7KS4wv277Hn
ibwP+R/2QrFHtX3F+R/2rsJXxJcGenu44j1bcE7AeMGDxwXvhSbnvKmQV6j8
lY61fM+Zc/nUkY9mv/K7ZedkyM3Qh77kyMjNoR9vTZxDIJewX7Dvzl5Q+JGt
E+99ZA/kHF3HeYmxcjDzjyuOV9m3BmcY7jB4N1ghnDfyTWBWYFdw1uGHD9D4
a0rWR/AbwROxVXD0Hs78Tsj1wwHgXeGv4AvBKZ6Q2V/G99jCWS7wjhsic/oe
yvwMeZasQdZi19zfNtw1+IVwBOAKwFmEyweWRO4D/As+IzkZcjNnRcZbyIGT
C4cjCFcJTALs4ePYWMVtiff6cA72C8FRYq8JnEC4S+Db5JYGFPYSDhVcbDiL
cKsa6Bznlb3nEf/35OBcPDl6cvVtEvu6xGTwW8nXwZEnv98j9x7MTeSRI+NL
jLkrMaeSucjXw9WCH39abo4WXC0wn4Ny72/FF8cnh3fSIlgXEYMTi+Pv48t1
iI2dEK/CET1DdSflzi//FDumIbbB1hNrEE/OjI1Prql4DwbcLjhxcOPYQ3NK
4VsQa7N+X4rNGYM7BmZ1QO78JRzK63jHubEVfHNiHPJ95EfHJcbYwNrA4MDi
yCkfmnvP9BsV6yP2UuM7gwWASb4a2xcktiA+aVlgdmB37JE4JDefhD1F5Lya
5sYkwCYaRo5f2JMBLx+MHawdTHm/xDEysTL8A7hLPNPGufk/cAd5n/vk5g/y
rYF3gXvx/RH/LIudKyQnx/fJdwr2CXZO7oE9ceznu1jneDwqOCxqX1oxNwf/
oFexXuFrYl+xs+S0yG3hI+ArEAMRC+FT4Ftsn1v34yPhK/2QOvePj42vjc3G
9yFHiC2/JPG3MFpzjEhsn8i1LY6Nx+IX4R/9Wtgz+IzYLnQiuhF7he3FRmGr
1gbbM3wafBt8Xnw1uIr4wtg79n7dVPSB74gtIkd5YWL70zayjcPWwTfsFRk/
BEckR0Tu9LPYuSP4gqdE9j/xQ9lfC/aMjkfXg4mAlRBDEkvizxPrs8eV/Dj8
KXLZ5LTxB84NXptwCOASTI+ty8FIwEn3SLy3fn2xPqrljqXBTMBO8FEew3dO
7LtcEuy7wCl6vLB1YDnrivXybeq1TwxDLHNO8F5FOBtwN+DZguVsKPQ3PiW+
5crE2D6cEbgj4Pnsh2b/P/kbYnxw0vOD+TlwHuA+gM9jK/FR8FX4/w1gEew5
ho8ALw/sYWOxvs4KXrubi1x/r+BcP5wBuANgPKx/9ACxBhgB+gM9QuxA/o5c
VZ/C/4cf27o4P74V/38D/wyfBd9lr9y+OzENsQ0+PHgtmAq+faPcuX0wNrA2
+InlyBgmfEp8OHy5w2Njl+xfh9oBRrpjYo4J+VT+hwf4bYPcvic+Nb41PijY
KzE9vmnd3M8GTBls+dngXBwxBbHFbrljMzBisOKGuXPJ+NT41vATeaboq2Nz
58AaJ8bkwOYuK94x9vmo3DmWOokxSrDK31P7+sTgxOJ75t6/RcxB7PFEMJYM
ZgF28VgwlkDOkdxj/bzYf54411gvL/bDJ8b6x+jhHF4ypkQ+h5gf3/PE2FgA
+B7r6YTY2D8+PFgoOXB8ezDTLfttYmOpO+T29YmxiLV+DM6lsjaJFfEX4fvi
Q+BL7Jh77xYxH7EfGA1YDTECsULt3LYdDBYsdqfcsSGYDdgNmPa3ko+IjXVf
F6w7yTGQa4D3gG7hf86Qfxpd4CNHxV6v1XNj13OL+6uZ217CGYQ7uG3utc5a
wn6CiYHlNS6wsjcr5orgs+Ofg/kuU/+ni+9zm9zYFbqDXEv31PxSOKlwU28O
5nag28iV3BKcG8OW4J/gU+Bb7J8aa8PHQ38TE+P7wQdaGxuzBLtkTyV7L9kD
wV6ITrn1LbEFsTb5vy6p/0cH+YSOwbacPRLw++GIssdpYWS+wTWJbQM2gv0k
8BWeLpvjANcBvjC58c80/sAqxnsfKzvm3RL7Zs7lwiGHfwhGQCx9bvE9wG+G
CwfHCq7Vibn1Odxv9oeA3y+IzNmGz8n+ZXL5/YpvhpjzGJUHJo5FsQ9wCZgD
fg0YO1j7fWXn+8lXk+u4sOz8CDEFsQU+Of70T6n/9wP3AF6NncXe8k2zfwW+
Ddwc9rTclTlmxx6eUdg7rplrh7/OXpcTcts3uPzs18HewkUif0AeAf5Qz8h7
dsgfdMxtL8E0wDYYw1j2A7D35zsdX5T9P4zgZxGDEIuACYENXZo5N8U7gk9y
anAuEc4/fE84BxMlTy7w5ucz2w7mZG74rTwb9CW5JfBp+v6CP5r5HfOuuWby
lzMz732AIwZX7MDc9hqOFP4POuvTxDoLXQa+xl5jdNBY4t9g7hn/W4L9Pvgo
SxPbLHwX/ocQ/iecHbg7IzLvBSOnD78cvI29yHCO9snsw2IfiT/xbcHr2HsK
52HvzDEde0nhD64r8Fw4zWC8PQt8FI4oGNxhmTkKcJdOT81dAG+Fowvm/1Dw
msO/gpPHWmTPLHtnwezA7rDp8xLbdGw9/BO+RTh+eWY+Rf/UOSFyQ2cE5w7h
XMG9IqdKbpX/mfFFZj4B+0x45rO4vtzfEjkrclfkQMmFgnGAdfA/TVhf8Dsv
UrlrMHeYHDm58iaZfW326Mzhew3mg/C/mNi/xZ4D9h6gs+Crkv+rh39Vdj4F
fsyYsnPYC1LvGWDvAHXwZeBMwmMcXaxv/r/XlYV+gKvYJDe2BwcIfw4/Fn+2
S+H/8v+fOBccerj0/I8p8GDmIH9yXWKuXa/iGRDzE/uTcwJvgw/WPvIeu9sy
8/0Oi7xH75bMMSWxJfuj2MvGN8i3yB439qKRj+B/ecDHnZo5RsFfg9NJ7NIt
t25kLZMbJMcNlvNhbH1OfopcG3uO2C9AfgQuAXtu2HtDPoRcJnsk4Dfz/7zI
ZbBnhf1F3YP/nwAcbrjc8JXg5p1T4HNdgv9/AhwHuA68M94dezDZ/wKmg70m
BwnWAyYANsAeQ/Yakp8hF8uexpszcyTgSvA/CWpm5oTADWGPJXsn4eTBzSOm
IraCIwJXhD2h7IWE38I+KvZT3Sv5/y/hH4w=
            "]], 
           Polygon3DBox[CompressedData["
1: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
A5ln22k=
            "]], 
           Polygon3DBox[{{2167, 1556, 1053, 1054, 1557, 2168}, {2322, 1103, 
            955, 954, 1341, 2006}, {1737, 1736, 2390, 1430, 1431, 2391}, {
            1925, 1231, 966, 967, 1232, 1926}, {1870, 1135, 1411, 2384, 1736, 
            1737}}]},
          Annotation[#, "Charting`Private`Tag$9266#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, 
      {GrayLevel[1], EdgeForm[None], 
       StyleBox[
        GraphicsGroup3DBox[{
          Polygon3DBox[{{811, 136, 825}, {826, 460, 801}, {2297, 106, 1734}, {
           853, 730, 835}, {817, 669, 843}, {790, 668, 816}, {896, 136, 
           792}, {801, 460, 839}, {843, 669, 791}, {2255, 121, 1755}, {698, 
           668, 441}, {792, 136, 811}, {816, 668, 824}, {668, 698, 106}, {669,
            710, 441}, {838, 121, 810}, {2297, 815, 2312}, {699, 669, 441}, {
           668, 699, 441}, {829, 1, 784}}], 
          Polygon3DBox[{{2255, 669, 817, 2308}, {2272, 460, 826, 2314}, {2308,
            810, 121, 2255}, {791, 669, 699, 827}, {1734, 786, 815, 2297}, {
           825, 136, 711, 831}, {827, 699, 668, 790}, {2312, 823, 106, 
           2297}, {835, 730, 1, 829}, {824, 668, 106, 823}, {1755, 710, 669, 
           2255}, {2314, 831, 711, 2272}, {839, 460, 775, 848}, {848, 775, 
           121, 838}}]}],
        Lighting->{{"Ambient", 
           GrayLevel[0.8]}}]}, 
      {GrayLevel[1], EdgeForm[None], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtkbtOAmEQhUcmhjXRXkwsKFQaLdRSE7SCEhsu8ULwHhOM70BrrHgIQkmo
KdzGF9AOHoHChAZRv8lMcfL9/+zM2bOz+dbzWTsjIltI0U8i0lkS+c6KdCns
8vAUflE/hKsrIu/UXtEe/QP4hl6YuVY/38Ae/EDLaMzskN5PeK8++6Dua/6F
mBuE5xP3Jn6bcMpMSm0BW9Fn71kjR0m9vgH71CtwlPHzOkrRLLLNE89yC7fV
PYvwRL13R71nH/7CqvoeavHt5mn5z7kfM3sBHyOn5S3Et5Thlfq7m/AgdnGk
Ljvn1HNZj3ldRr/NTRL3TBP/Fw1qf/Au9mb7q0W2uvqOzdP2+w95MDpL
           "]], 
          Polygon3DBox[CompressedData["
1:eJwtkLuuQUEUhpc9JFtCKUEnbhUFtYTyiIZOXMIOQkO8g1Y8h6jVirOfgY7a
Iwjn8C2ziy/zzZrL+mcy3qqzdEQkAWGYuiI5I1KBJz5mXIdEdmzy8CmU2bdl
PsP/2OMzL+DxqEgM2viB9QtrKXyPRyCP98BAjTN9xiwcxe6p4j5nRvRb4A53
1Y29/8F6C/+BEn6HJn52ba8TXPEitaRja+ngPs36Czf8DV3qG3q88Imxb9M3
6dsGQTaf2hD/d21uza//oRk0i/ZoBBnnxvb4Zjf2rP6Z/t0HuR8pgA==
           "]], 
          Polygon3DBox[{{2262, 181, 803, 820, 2263}, {2301, 840, 842, 745, 
           2287}, {2035, 771, 859, 858, 2300}}]}],
        Lighting->{{"Ambient", 
           GrayLevel[0.8]}}]}, {}, {}}, {
      {GrayLevel[0], Line3DBox[{784, 1, 730, 853, 835, 829, 784}], 
       Line3DBox[CompressedData["
1:eJwl08lvjVEYx/HnutW6agwSU1psRNKqqra0JZHUSpGUWLCzI9Wa1RxjTVWz
EESEFmuJP4CViIW5RRULxMKwsDAkPofFN9/fc877nuc995w7cUVLY3MmIu6j
Iz9iGD/sF3FGLpZXZSNKUISCXMQIrkQpxmMqFmIkijEKjZiDKajHIsxDvvcn
cBWGo8H6PwZE5MnL5Zzc5WOa1KuR9Xwzt2AN1mId1mMDNiLnmU28Ga3Ygq3Y
lk0LRmznHdiJXZiEPj0+2d85j7zX85H9dsq7ze1Boff28j7sxwG04SD6mzvE
h3EER9GOY+hAxvxxPoGTOIXTWIBf+jzW5wOX4CfK8iKeGCs0X6aepn6qLpfL
5WfydH7OFfyCZ3A3V3IVeuRqfskz+RXP4tdcw71cy2+4jvvSmvZfq8dvvFV/
5SZMLvB7qMfw3fRdfJv/eP46f+Gz/JHb+B23cg93Y6V8j5fxHZ7PN7mOr3Ep
X+QifmDtBmfxXd+h6s88F7f8FkPUN3gwd/Eg7kxnk9bhgXw1+++I4wo7xrjM
l9I9TT3SfeML6cx4tj7nZduPsQZq1OmKjJarZW2jPb1gsEL9zcBieQmWYly6
t5n//5G/2kNbTA==
        "]], 
       Line3DBox[{707, 46, 691, 369, 758, 61, 771, 2035, 388, 855, 856, 857, 
        2303, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870,
         871, 872, 2306, 873, 875, 797, 352, 2271, 707}], 
       Line3DBox[{1734, 106, 698, 441, 710, 1755, 121, 775, 460, 2272, 711, 
        136, 896, 792, 811, 825, 831, 2314, 826, 801, 839, 848, 838, 810, 
        2308, 817, 843, 791, 827, 790, 816, 824, 823, 2312, 815, 786, 1734}], 
       Line3DBox[{713, 181, 2270, 703, 536, 761, 196, 2287, 745, 557, 917, 
        834, 808, 841, 842, 840, 2317, 806, 832, 844, 833, 807, 794, 849, 
        2316, 820, 803, 819, 828, 793, 805, 2302, 818, 804, 2149, 517, 713}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1679, 2277, 2278, 1982, 2226, 2525, 1832, 1981, 1908, 1984, 
        2227, 2526, 1833, 1983, 2241, 2242, 1986, 2527, 1834, 1985, 2346, 
        2416, 2177, 1835, 1680, 2417, 1836, 1681, 2374, 2418, 1988, 1837, 
        1987, 2528, 1909, 1990, 2318, 2506, 1989, 1910, 2179, 2594, 1838, 
        2178, 1991, 2419, 1839, 1682, 2420, 1840, 1683, 2375, 2421, 1994, 
        1841, 1993, 2347, 2422, 2181, 1842, 2180, 2376, 2423, 1843, 1684, 
        2530, 1995, 1844, 1996}], 
       Line3DBox[{1685, 2273, 2290, 1911, 2279, 2228, 2229, 2614, 1997, 2243, 
        1912, 1999, 2230, 2507, 2231, 1998, 1913, 2182, 2595, 1845, 1686, 
        2373, 2424, 1846, 1687, 2378, 2425, 2002, 1847, 2001, 2531, 1914, 
        2004, 1848, 2003, 2532, 1915, 2183, 2319, 2508, 2005, 1992, 2320, 
        2529, 1688, 2426, 1849, 1689, 2007, 2009, 2534, 1850, 2008, 2348, 
        2427, 2184, 1851, 2010, 2377, 2428, 1852, 1690, 2429, 1853, 1691, 
        2430, 1854, 1692}], 
       Line3DBox[{1700, 1862, 2188, 2021, 2540, 1699, 1861, 2434, 1698, 1860, 
        2433, 1697, 1859, 2432, 2379, 2020, 1858, 2596, 2187, 1920, 2018, 
        2538, 2324, 2019, 2017, 1696, 2470, 2323, 1695, 2533, 2322, 2006, 
        2537, 2016, 1857, 2186, 1919, 2536, 2014, 1856, 2015, 1918, 2535, 
        2012, 1855, 2013, 2431, 2380, 1694, 1102, 2000, 1693, 2510, 2321, 
        2185, 1917, 2011, 2410, 2509, 2232, 2267, 1916, 2311}], 
       Line3DBox[{1705, 367, 1386, 385, 383, 1596, 588, 382, 2544, 1704, 1863,
         2436, 1703, 2539, 365, 380, 1378, 248, 378, 1377, 377, 1702, 2471, 
        2325, 2435, 1701, 360, 1373, 375, 247, 1371, 373, 246, 1370, 371, 
        1369, 245, 370, 1368, 353, 755, 1673, 244, 799}], 
       Line3DBox[{1719, 1865, 2438, 1718, 2034, 2192, 2033, 2546, 1717, 2032, 
        2191, 2031, 2545, 1716, 2042, 2473, 2382, 1715, 2472, 2326, 1714, 
        2543, 2030, 2190, 2029, 1713, 2549, 1928, 2028, 1927, 1712, 2548, 
        1926, 1925, 2511, 1711, 1864, 2437, 1710, 2027, 2189, 2026, 2542, 
        1709, 1924, 2025, 2541, 2349, 1708, 1228, 2024, 1923, 1707, 2547, 
        1922, 1921, 1706, 1669, 2023, 2296, 2022, 2310}], 
       Line3DBox[{1732, 1867, 2440, 1731, 1866, 2439, 1730, 2044, 2195, 2598, 
        2383, 1729, 1934, 2043, 2551, 2351, 1728, 2387, 2477, 2052, 1727, 
        2476, 2327, 1726, 2550, 2041, 2194, 2040, 1725, 2553, 1933, 2039, 
        1932, 2513, 1724, 1931, 1930, 2512, 1723, 2049, 2475, 2385, 1722, 
        2038, 2193, 2597, 2381, 1721, 2350, 2474, 2037, 661, 1720, 659, 2036, 
        658, 709, 1656, 657, 2224, 1929, 2294}], 
       Line3DBox[{1753, 2073, 2072, 2557, 1751, 2485, 2330, 1749, 2484, 2329, 
        1747, 2054, 2198, 2599, 2388, 1746, 2356, 2483, 2053, 1937, 1745, 
        2393, 2482, 2066, 1743, 2481, 2328, 1741, 2554, 2051, 2197, 1418, 
        1740, 1936, 2050, 2552, 2354, 1739, 1935, 2480, 2352, 1738, 2060, 
        2479, 2390, 1736, 2384, 2478, 2196, 2047, 1735, 2251, 2610, 2252, 
        2046, 2250, 2249, 1733, 2412, 2609, 2247, 2045, 2246, 2245, 2057}], 
       Line3DBox[{1762, 1891, 2205, 2074, 2560, 2089, 1890, 2204, 2458, 2395, 
        1761, 1889, 2457, 1760, 1888, 2456, 1759, 1887, 2601, 2203, 1940, 
        2086, 1886, 2559, 2087, 1939, 2084, 1147, 2085, 2083, 1758, 2486, 
        2332, 2455, 1757, 1885, 2454, 2392, 2081, 1884, 2082, 2453, 2358, 
        2079, 1883, 2080, 2452, 2357, 2077, 1882, 2558, 2078, 2076, 1756, 
        1881, 2451, 2059, 2274, 2616, 2331, 2288, 2202, 2298, 2313}], 
       Line3DBox[{1768, 1899, 2091, 2566, 2107, 1898, 2208, 2090, 2565, 2105, 
        1897, 2106, 2464, 2396, 1767, 1896, 2463, 1766, 1895, 2462, 2088, 
        1765, 1157, 2207, 1943, 2102, 2514, 2335, 2103, 1942, 2100, 2562, 
        2334, 2101, 2099, 2563, 1764, 1894, 2461, 1763, 1893, 2460, 2360, 
        2097, 1892, 2098, 2459, 2359, 2095, 2237, 2236, 2608, 2096, 1941, 
        2093, 2561, 2333, 2094, 2092, 2206, 2607, 2235, 2234, 2225, 2075, 
        2269, 2304}], 
       Line3DBox[{1769, 2280, 1944, 2295, 2238, 2515, 2411, 2109, 2256, 1945, 
        2111, 2239, 2516, 2240, 2110, 2257, 1946, 2114, 2336, 2517, 2113, 
        2361, 2465, 1900, 1770, 2466, 1901, 1771, 2567, 2116, 2118, 1902, 
        2117, 2568, 1947, 2121, 2337, 2518, 2120, 1948, 2209, 2338, 2519, 
        2123, 2104, 2339, 2564, 1772, 1166, 1773, 2397, 2467, 2127, 1903, 
        2126, 2570, 1949, 2211, 1904, 2129, 2571, 2108, 1905, 1774, 2468, 
        1906, 1775}], 
       Line3DBox[{1789, 2145, 2144, 2579, 1788, 1907, 2469, 1787, 2131, 2212, 
        2130, 2572, 1786, 1960, 2128, 1277, 1785, 2578, 2141, 2140, 1784, 
        2488, 2341, 1783, 2569, 2125, 2210, 2124, 1782, 2575, 1959, 2122, 
        1958, 2522, 1781, 1957, 2119, 1956, 2521, 1780, 2135, 2134, 2573, 
        1779, 2487, 2340, 1778, 2520, 1955, 2115, 1954, 1777, 2259, 2612, 
        1953, 2112, 1952, 2258, 1776, 2413, 2611, 1951, 2282, 1950, 2291, 
        2281, 2275}], 
       Line3DBox[{1803, 2147, 2215, 2146, 2580, 1802, 2159, 2158, 2585, 1801, 
        1183, 1800, 2143, 2214, 2602, 2398, 1799, 2364, 2492, 2142, 1969, 
        1798, 2584, 2155, 2154, 1797, 2491, 2343, 1796, 2576, 2139, 2213, 
        2138, 2577, 1795, 1968, 2137, 1967, 2524, 1794, 1966, 2136, 2574, 
        2363, 1793, 1965, 2490, 2362, 1792, 2489, 2342, 1791, 2523, 1964, 
        2133, 1963, 2261, 1790, 2581, 2260, 1962, 2132, 1961, 2315}], 
       Line3DBox[{1817, 2162, 2220, 2161, 2586, 1816, 2160, 2219, 2604, 2402, 
        1815, 2171, 2498, 2405, 1814, 2497, 2344, 1813, 2401, 2496, 2218, 
        2157, 1812, 2368, 2495, 2156, 1975, 1811, 2591, 1974, 1973, 1810, 
        2590, 2168, 2167, 2589, 1809, 2153, 2217, 2603, 2400, 1808, 1972, 
        2152, 2583, 2367, 1807, 1971, 2151, 2582, 2366, 1806, 2365, 2494, 
        1970, 1805, 2399, 2493, 2216, 2150, 1804, 2587, 2283, 2284, 2148, 
        2309}], Line3DBox[{1831, 2176, 2505, 2409, 1830, 2173, 2223, 2606, 
        2406, 1829, 1980, 2172, 2592, 2372, 1828, 2175, 2504, 2408, 1827, 
        2503, 2345, 1826, 2404, 2502, 2222, 2170, 1825, 2371, 2501, 2169, 
        1979, 1824, 2593, 1978, 2500, 2370, 1823, 2174, 2499, 2407, 1822, 
        2166, 2221, 2605, 2403, 1821, 1977, 2165, 2588, 2369, 1820, 2266, 
        2613, 2414, 2164, 2265, 2264, 1819, 2292, 2618, 2293, 2276, 1976, 
        1818, 2415, 2615, 2286, 2163, 2285, 2305}], 
       Line3DBox[{2307, 2268, 2248, 2056, 2233, 2289, 2617, 1868, 2055, 2253, 
        2254, 2199, 2600, 1869, 2058, 2048, 2441, 1870, 1737, 2391, 2442, 
        2062, 1871, 2061, 2353, 2443, 2064, 1872, 2063, 2355, 2444, 2200, 
        1873, 2065, 2386, 2445, 1136, 1742, 2446, 1874, 1744, 2067, 2069, 
        2555, 1875, 2068, 1938, 2071, 2556, 1876, 2070, 2389, 2447, 1877, 
        1748, 2448, 1878, 1750, 2449, 1879, 1752, 2394, 2450, 2201, 1880, 
        1754}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{921, 1199, 1308, 1200, 2416, 1587, 1309, 1310, 2424, 943, 
        1350, 1351, 2431, 1353, 1222, 1370, 1223, 1372, 2541, 1229, 1392, 
        1230, 1599, 2597, 1394, 1410, 1395, 987, 2479, 1430, 1431, 2442, 1433,
         1248, 1449, 1249, 2452, 1451, 1255, 1468, 1256, 2459, 1470, 1263, 
        1488, 1264, 2465, 1032, 2487, 1170, 1043, 2490, 1280, 1281, 1529, 
        2582, 1288, 1550, 1289, 1552, 2588, 1295, 1573, 1296, 1074}], 
       Line3DBox[{922, 1087, 2417, 923, 1332, 1333, 2425, 1335, 1216, 1352, 
        2535, 1217, 1355, 1224, 1371, 1225, 1595, 1374, 2542, 1393, 1375, 976,
         2475, 1412, 1413, 988, 2480, 1243, 1432, 1244, 2443, 1435, 1250, 
        1450, 1251, 2453, 1453, 1257, 1469, 1258, 2460, 1021, 1162, 2466, 
        1033, 1506, 2573, 1507, 1509, 2574, 1282, 1528, 1283, 1531, 2583, 
        1290, 1551, 1291, 1616, 2605, 1554, 1574, 1555, 1075}], 
       Line3DBox[{924, 1311, 1312, 2418, 1314, 1208, 1334, 2531, 1209, 1337, 
        1218, 1354, 2536, 1219, 1593, 1357, 1373, 1358, 965, 1119, 2437, 977, 
        1236, 2512, 1414, 1237, 1416, 2552, 1245, 1434, 1246, 2444, 1603, 
        1437, 1452, 1438, 2454, 1010, 1154, 2461, 1022, 1489, 2567, 1490, 
        1492, 1272, 2521, 1508, 1273, 1511, 1284, 2524, 1530, 1285, 1613, 
        2603, 1533, 1553, 1534, 1063, 2499, 1575, 1576, 1076}], 
       Line3DBox[{925, 1201, 1313, 2528, 1203, 1316, 1210, 1336, 2532, 1212, 
        1591, 1339, 1356, 2537, 1341, 954, 1112, 2435, 966, 1231, 2511, 1233, 
        1397, 1238, 2513, 1415, 1240, 1601, 1418, 1436, 1420, 2445, 999, 1145,
         2455, 1011, 1471, 2563, 1473, 1475, 1265, 1491, 2568, 1267, 1494, 
        1274, 2522, 1510, 1276, 1610, 1513, 2577, 1532, 1515, 1053, 1556, 
        2589, 1558, 1064, 2500, 1297, 1577, 1299, 1077}], 
       Line3DBox[{928, 1204, 1588, 1089, 2594, 929, 1318, 2529, 1095, 945, 
        2470, 1104, 956, 1376, 1377, 1114, 968, 1234, 2549, 1398, 1121, 979, 
        1399, 2550, 1128, 990, 2481, 1137, 2446, 1001, 1454, 1455, 1147, 1013,
         1259, 1476, 2514, 1156, 1024, 1268, 1495, 2519, 1164, 1035, 1496, 
        2569, 1172, 1045, 2491, 1180, 1055, 1292, 2591, 1560, 1188, 1066, 
        2501, 1300, 1579, 1194, 1079}], 
       Line3DBox[{930, 1317, 1090, 2419, 931, 1096, 2426, 946, 1359, 1360, 
        2538, 1105, 957, 1226, 1378, 1115, 969, 1379, 2543, 1122, 980, 2476, 
        1129, 991, 2482, 1439, 1440, 1138, 2555, 1002, 1252, 1456, 1148, 2559,
         1014, 1260, 1157, 1025, 1477, 2564, 1165, 1036, 2488, 1173, 1046, 
        1535, 2584, 1536, 1181, 1056, 2495, 1293, 1561, 1189, 1067, 2502, 
        1562, 1195, 1080}], 
       Line3DBox[{932, 1091, 2420, 933, 1342, 1343, 1097, 2534, 947, 1220, 
        1361, 1106, 2596, 958, 1363, 2539, 1116, 970, 2472, 1123, 981, 2477, 
        1421, 1422, 1130, 992, 2483, 1247, 1441, 1139, 2556, 1003, 1253, 1149,
         2601, 1015, 1457, 1158, 2462, 1026, 1166, 1037, 1516, 2578, 1517, 
        1174, 1047, 2492, 1286, 1537, 1182, 1057, 2496, 1539, 1190, 1068, 
        2503, 1196, 1081}], 
       Line3DBox[{934, 1319, 1320, 2421, 1322, 1213, 1344, 1214, 2427, 1592, 
        1346, 1362, 1347, 2432, 959, 1117, 2436, 971, 2473, 1400, 1401, 1403, 
        2551, 1241, 1423, 1242, 1602, 2599, 1425, 1442, 1426, 2447, 1004, 
        1150, 2456, 1016, 1159, 2463, 1027, 1497, 1498, 2467, 1500, 1277, 
        1518, 1278, 1611, 2602, 1520, 1538, 1521, 1058, 2497, 1191, 1069, 
        2504, 1580, 1581, 1082}], 
       Line3DBox[{935, 1205, 1321, 1206, 2422, 1590, 1325, 1345, 1326, 2428, 
        948, 1107, 2433, 960, 1380, 2544, 1381, 1597, 1384, 2545, 1402, 1385, 
        1600, 2598, 1405, 1424, 1406, 993, 2484, 1140, 2448, 1005, 1151, 2457,
         1017, 1478, 1479, 2464, 1481, 1269, 1499, 2570, 1270, 1609, 1502, 
        2572, 1519, 1503, 1048, 1183, 1059, 2498, 1563, 1564, 1566, 2592, 
        1301, 1582, 1302, 1083}], 
       Line3DBox[{936, 1323, 1589, 1324, 2423, 937, 1098, 2429, 949, 1108, 
        2434, 961, 1382, 1596, 1383, 1598, 1387, 2546, 1404, 1388, 982, 1131, 
        2439, 994, 2485, 1141, 2449, 1006, 1458, 1459, 2458, 1605, 1461, 1480,
         2565, 1462, 1608, 1483, 1501, 2571, 1484, 1038, 1175, 2469, 1049, 
        1540, 2585, 1541, 1614, 2604, 1543, 1565, 1544, 1617, 2606, 1568, 
        1583, 1569, 1084}], 
       Line3DBox[{938, 1327, 2530, 1328, 939, 1099, 2430, 950, 1364, 2540, 
        1365, 1594, 1366, 1386, 1367, 972, 1124, 2438, 983, 1132, 2440, 995, 
        1443, 2557, 1444, 2450, 1604, 1445, 1460, 2560, 1446, 1606, 1463, 
        1482, 2566, 1464, 1028, 1167, 2468, 1039, 1522, 2579, 1523, 1612, 
        1524, 2580, 1542, 1525, 1615, 1545, 2586, 1567, 1546, 1070, 2505, 
        1584, 1585, 1586}], Line3DBox[CompressedData["
1:eJwVzzssw1EYhvEjVILFIhIm0r0Rictga2IxlSZIVIJSl7YEdWvVXV0jkYjR
aLDb7Z0sFonBbjOY/Do8+d7vfc75X7pm8olcXQghg1hDCM/YaQyhG8c4Qn9z
CFH9Ew7tLThAp75sdugfMS3/RkJYM9u4VbNVf4eCnMIX38vl5RwiXAWb8hTe
m0KoOrMiX2MZf/Xe50zMvUn7MCo4xw9X4Aa4M/suitjDNzeoz/IT9nvPXTIX
0aP/4NPchn0cZT5jbmMBVT7FJ+Usd2qe4E2f1N/KF7jCJV71I/qx2l3/EXdn
Xk7jhYtz63Kfd4/WvoGfM7cwiwdnPt0bci5hb+f3zRJu8A/XJDLo
        "]], 
       Line3DBox[{1072, 641, 1571, 767, 2618, 1061, 1185, 1548, 1527, 2493, 
        1051, 1177, 2523, 1279, 1041, 639, 1505, 2612, 677, 1030, 637, 2516, 
        1486, 1261, 1019, 1153, 2561, 1466, 1465, 1008, 2451, 1143, 1429, 997,
         2600, 1134, 1428, 666, 2610, 985, 632, 1408, 659, 974, 629, 1390, 
        2547, 1227, 963, 1110, 1368, 1349, 952, 1101, 2510, 1215, 941, 626, 
        2507, 1330, 648, 919, 2526, 624, 1305, 1197, 1304}], 
       Line3DBox[{1073, 1633, 1632, 1572, 1294, 1650, 2613, 1062, 1186, 1549, 
        1287, 2494, 1052, 1178, 2489, 1042, 1169, 2520, 1271, 1031, 1161, 
        2517, 1487, 1262, 1645, 1020, 1628, 2608, 1627, 1467, 1254, 1009, 
        2558, 1144, 1448, 1447, 998, 2441, 1135, 1411, 2478, 986, 1126, 1409, 
        1235, 2474, 975, 1623, 1622, 1391, 1228, 964, 1111, 1369, 1221, 953, 
        1102, 1331, 942, 2595, 1093, 1207, 920, 2527, 1086, 1307, 1198, 1634, 
        1306}], Line3DBox[{1078, 1193, 1578, 2593, 1298, 1065, 1187, 1559, 
        2590, 1557, 1054, 1179, 2576, 1514, 1044, 1171, 1512, 2575, 1275, 
        1034, 1163, 2518, 1493, 1266, 1023, 1155, 2562, 1474, 1472, 1012, 
        1146, 2486, 1000, 1136, 2554, 1419, 989, 1127, 1417, 2553, 1239, 978, 
        1120, 1396, 2548, 1232, 967, 1113, 2471, 955, 1103, 2533, 1340, 944, 
        1094, 2508, 1338, 1211, 927, 1088, 2506, 1315, 1202, 926}]}, {}, {}}},
    
    VertexNormals->CompressedData["
1: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
HnQkMnrgv76w45k=
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{352.75718133053516`, 294.02423678571057`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{0.1, 10}, {0, 10}, {-1.1984376458305366`, 1.2063414615318655`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.2781117926803185`, -2.291370252789024, 2.1368323776199816`},
  ViewVertical->{-0.3076222772907014, 0.551498342567467, 
   0.7753825589087103}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.8523122143046618`*^9, 3.852312233887784*^9}},
 CellLabel->
  "Out[103]=",ExpressionUUID->"674be67b-8338-449c-885f-7d08b6df41c5"]
}, Closed]]
},
WindowSize->{1275, 675},
WindowMargins->{{Automatic, 2}, {Automatic, 0}},
FrontEndVersion->"13.0 for Mac OS X x86 (64-bit) (December 2, 2021)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"9ac08248-7530-4555-8cff-dcb15fb5b698"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1715, 26, 221, "Title",ExpressionUUID->"66f5ac91-0127-4d5a-9de5-4cc3f88b5891",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[2298, 50, 1223, 21, 94, "Author",ExpressionUUID->"981c3a7e-1325-45be-a5ac-c112e6a7a230",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[3558, 76, 228, 4, 69, "Section",ExpressionUUID->"f388601c-60de-4028-8a6f-b118c2c58002",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[3789, 82, 433, 9, 63, "Input",ExpressionUUID->"b2f09453-ed94-41b0-af1d-f162258c746d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4225, 93, 1485, 23, 43, "Output",ExpressionUUID->"5ec45d64-b09c-4e83-90a0-76f3440c8dfe",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Closed]],
Cell[CellGroupData[{
Cell[5747, 121, 612, 10, 55, "Section",ExpressionUUID->"ee959f79-c2a5-459d-ae69-3eb984e69072",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[6362, 133, 493, 9, 63, "Input",ExpressionUUID->"a0b07b1d-e954-4b93-bc56-2552cefff0c0",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[6858, 144, 467, 9, 43, "Output",ExpressionUUID->"51f430ed-b274-4a7b-be5a-37ac72c8d79a",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Closed]],
Cell[CellGroupData[{
Cell[7362, 158, 251, 4, 55, "Section",ExpressionUUID->"effeeb4d-bc8b-4d6e-bf79-700d520154b1",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[7616, 164, 1668, 45, 189, "Input",ExpressionUUID->"5f113ec2-df0f-4bb2-88eb-5e90a3be582b",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[9287, 211, 1823, 30, 24, "Print",ExpressionUUID->"1e894660-3890-45da-a92b-96bf48644698",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[11113, 243, 1835, 30, 24, "Print",ExpressionUUID->"f4c6de22-19ec-49d5-88d3-7bd99c2e64f9",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[12951, 275, 1828, 28, 41, "Output",ExpressionUUID->"0ae973d6-93be-4b36-91d9-47a20d0db996",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[14782, 305, 268, 4, 41, "Input",ExpressionUUID->"c6dfb6b8-c303-4e00-9682-f1cf8bf8783e",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[15053, 311, 308, 5, 41, "Input",ExpressionUUID->"a902b79b-66aa-4952-a8bf-ca5914b40f25",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Closed]],
Cell[CellGroupData[{
Cell[15398, 321, 266, 5, 55, "Section",ExpressionUUID->"3c488378-6de5-4fd7-b683-1e486614f022",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[15667, 328, 4038, 92, 651, "Input",ExpressionUUID->"a7dce08d-0bd0-4a2c-973e-431261a560f3",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[19708, 422, 3685, 108, 501, "Output",ExpressionUUID->"2b1860bf-739b-41a7-b45c-c7095f12085f",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[23396, 532, 900, 20, 84, "Input",ExpressionUUID->"d41f2868-563c-4b68-a761-dd6d80614b9c",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}]
}, Closed]],
Cell[CellGroupData[{
Cell[24333, 557, 362, 6, 55, "Section",ExpressionUUID->"345e9b99-bb4b-41c9-a98e-2ccc62e3954a",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[24698, 565, 1659, 41, 126, "Input",ExpressionUUID->"97b7e9c8-6d9c-42e6-bba0-d0940c96dd8c",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[26360, 608, 1056, 26, 84, "Input",ExpressionUUID->"da4f5750-3b14-4e36-85cc-98458a0609c8",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Closed]],
Cell[CellGroupData[{
Cell[27453, 639, 283, 6, 55, "Section",ExpressionUUID->"e335b8f1-ef8b-4d2d-9841-07eaa79fa21c",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[27739, 647, 1145, 31, 107, "Input",ExpressionUUID->"be0492bb-cd61-48b6-bef7-721f44301180",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[28887, 680, 876, 25, 44, "Output",ExpressionUUID->"ca390fc9-fe24-4865-a209-b0647dfab7c4",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[29766, 707, 463, 10, 41, "Input",ExpressionUUID->"b76f659f-cec8-4a82-b18c-87784855d17f",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[30232, 719, 1420, 42, 113, "Output",ExpressionUUID->"05abd8fe-cfb5-4277-8227-5c21249d2432",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[31655, 763, 994, 23, 168, "Input",ExpressionUUID->"dc4f4b21-5569-418a-ba99-3f207ba63393",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[32652, 788, 967, 28, 69, "Output",ExpressionUUID->"759e7f61-b4f4-4c73-99a4-fd8b1873f8d6",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[33622, 818, 855, 20, 105, "Input",ExpressionUUID->"a854b025-b137-40b3-bad1-08c6567bc112",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[34480, 840, 1990, 55, 114, "Output",ExpressionUUID->"a6da330f-be7c-4138-a1c0-c5df6936c58c",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}]
}, Closed]],
Cell[CellGroupData[{
Cell[36507, 900, 387, 8, 55, "Section",ExpressionUUID->"f30dc98b-9ab0-4658-9de8-9fba9ccda8a5",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[36897, 910, 5837, 134, 714, "Input",ExpressionUUID->"f488e52b-d48b-4ca3-b288-6c75a72478aa",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[42737, 1046, 1103, 23, 65, "Input",ExpressionUUID->"48101f44-742e-4a62-b306-52c71e49e1c8",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[43843, 1071, 406, 7, 41, "Output",ExpressionUUID->"402ae0ba-ac6c-4792-a435-784afdfa41f7",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[44252, 1080, 238, 3, 41, "Input",ExpressionUUID->"99be7691-3f79-4cb4-baf2-59f36149f505",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[44493, 1085, 1141, 32, 45, "Output",ExpressionUUID->"8aaf2ced-9b45-4708-8ae0-c029ae6e0f01",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[45637, 1119, 810, 18, 84, "Input",ExpressionUUID->"a0a8f15a-ade9-4a84-bb2a-7a0b92759a7e",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[46450, 1139, 683, 13, 45, "Output",ExpressionUUID->"a9f52743-66e4-47f8-9f0b-e141aaee3846",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[47136, 1154, 607, 9, 41, "Output",ExpressionUUID->"bfb93776-8d3d-4b6d-9619-cf920c595ac8",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[47746, 1165, 2273, 60, 114, "Output",ExpressionUUID->"5e8e0d66-f1d2-4fdf-958d-9302ddb9c999",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[50022, 1227, 813, 18, 84, "Input",ExpressionUUID->"8d4c368e-7b2e-44df-90ec-5dbc0b6120e6",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[50838, 1247, 798, 15, 45, "Output",ExpressionUUID->"1d9b2a0a-03b0-4f2a-8b67-c1176d95c36e",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[51639, 1264, 699, 10, 41, "Output",ExpressionUUID->"43efbd9c-9f02-48e2-a56c-57a0ce7df958",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[52341, 1276, 18777, 521, 390, "Output",ExpressionUUID->"8a01c27a-af35-4ccf-aafd-ed23a42a3f4c",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[71121, 1799, 809, 18, 84, "Input",ExpressionUUID->"a375654a-754e-4fad-8e0e-870af999ee68",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[71933, 1819, 675, 12, 45, "Output",ExpressionUUID->"04dcd0db-63e5-4f7a-95dc-fa3753beff25",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[72611, 1833, 624, 9, 41, "Output",ExpressionUUID->"a8acdbf4-7cb8-459b-b710-30dbfc2f8cac",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[73238, 1844, 103500, 2487, 494, "Output",ExpressionUUID->"2e2f6498-24b9-4ac7-8607-9693082d396e",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[176741, 4333, 808, 18, 84, "Input",ExpressionUUID->"4c31931b-144c-4240-aec5-f01ac6a8417b",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[177552, 4353, 664, 12, 45, "Output",ExpressionUUID->"97be175c-6728-403e-8582-e206efac28a1",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[178219, 4367, 623, 9, 41, "Output",ExpressionUUID->"16d60b78-cbda-46d9-a59c-60c0058cab99",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[178845, 4378, 9884, 259, 210, "Output",ExpressionUUID->"23086376-1156-486a-814b-46ca10de19d2",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[188732, 4639, 810, 18, 84, "Input",ExpressionUUID->"1019199f-afb9-40fd-a1f2-3ea7563b2d46",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[189545, 4659, 614, 10, 41, "Output",ExpressionUUID->"adb520f7-095f-4ddb-bfcc-b1283c7a0455",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[190162, 4671, 608, 8, 41, "Output",ExpressionUUID->"405ea250-763a-4862-ae49-7f3e9aaa5e65",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[190773, 4681, 3243, 85, 86, "Output",ExpressionUUID->"91ecb473-1b55-47a5-99f2-4f4032774075",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[194019, 4768, 882, 19, 126, "Input",ExpressionUUID->"a44fe4c8-86a0-48b7-9d78-aa1a3a53017e",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[194904, 4789, 792, 18, 84, "Input",ExpressionUUID->"8b57077c-8b64-4e6b-b803-43e83dc0cd25",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[195699, 4809, 584, 11, 45, "Output",ExpressionUUID->"e7d360f5-a5b0-4f24-98ac-d8913a3407a6",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[196286, 4822, 548, 8, 41, "Output",ExpressionUUID->"647e85dc-d3a1-4040-91d9-ec11493af391",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[196837, 4832, 9148, 242, 194, "Output",ExpressionUUID->"405569a1-82ae-45ef-9446-4970af3dbe15",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[205988, 5076, 857, 19, 84, "Input",ExpressionUUID->"8a5bdd22-087f-43a5-9895-75f2bde6882e",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[206848, 5097, 670, 12, 45, "Output",ExpressionUUID->"f5c22b96-c43e-475a-87b1-80dedfce427f",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[207521, 5111, 616, 9, 41, "Output",ExpressionUUID->"05f793cb-4b17-4e8a-b9f2-8a559d272589",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[208140, 5122, 151431, 3499, 632, "Output",ExpressionUUID->"f1a31b0d-4965-4b24-a1c9-663480910762",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[359574, 8623, 858, 19, 126, "Input",ExpressionUUID->"96108c62-a282-4da1-8136-a98fbd737b78",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}]
}, Closed]],
Cell[CellGroupData[{
Cell[360469, 8647, 357, 8, 55, "Section",ExpressionUUID->"ace29171-d086-450c-884f-709947e588db",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[360829, 8657, 1248, 32, 105, "Input",ExpressionUUID->"33b31ebe-272c-4716-8e8c-31e75920e152",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[362080, 8691, 8736, 235, 248, "Output",ExpressionUUID->"cf6d559a-a898-40f9-95d0-a25cae000785",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[370819, 8928, 1260, 33, 105, "Input",ExpressionUUID->"9d45c198-553c-4ba1-b97e-4ba471c601a0",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[372082, 8963, 8076, 219, 232, "Output",ExpressionUUID->"d2f0fb9b-efd2-4754-8413-6fbfc1d52656",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[380161, 9184, 1123, 27, 107, "Input",ExpressionUUID->"7b9c626e-1212-4f3b-9f3a-f75c0e52d9e4",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[381287, 9213, 987, 27, 71, "Output",ExpressionUUID->"77e38db9-8478-431c-9927-8109d49de185",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[382277, 9242, 1143, 27, 107, "Input",ExpressionUUID->"834d44de-4b52-4146-89cd-502a9a5cea37",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[383423, 9271, 1183, 34, 72, "Output",ExpressionUUID->"95eeff36-d848-4ba6-824b-50d0af82ee24",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[384609, 9307, 750, 18, 105, "Input",ExpressionUUID->"606353a2-1206-41dd-9cd9-b365fb1ba0c9",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[385362, 9327, 1136, 34, 83, "Output",ExpressionUUID->"1942d3dc-e667-4006-b5f7-b77dcef71630",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[386501, 9363, 656, 12, 126, "Input",ExpressionUUID->"ad92585f-9f49-4402-8bc2-9e0efcadbda4",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[387160, 9377, 3400, 96, 134, "Output",ExpressionUUID->"cc91a9a0-698e-42da-b409-4e580c482b8c",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}]
}, Closed]],
Cell[CellGroupData[{
Cell[390597, 9478, 354, 7, 93, "Section",ExpressionUUID->"88df3400-8ef9-492b-a553-444e2ffb2eaf",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[390954, 9487, 621, 12, 84, "Input",ExpressionUUID->"c98feee1-e02a-40a6-b5f5-e161f11cee50",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[391578, 9501, 427, 10, 41, "Output",ExpressionUUID->"5ad28897-ac7a-4a1b-a2df-2148b0123d25",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[392008, 9513, 1130, 25, 189, "Input",ExpressionUUID->"6199d9ab-08a7-4c02-a337-60d7c9e823d8",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[393141, 9540, 2715, 81, 142, "Output",ExpressionUUID->"b0e00080-f1df-48eb-bfe7-7e91d9f3b4ed",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[395859, 9623, 364, 8, 41, "Input",ExpressionUUID->"ca71e468-f2b0-4bd1-9158-558002ef4731",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[396226, 9633, 784, 21, 59, "Output",ExpressionUUID->"2a7609f6-eb2d-4de6-9df4-6bb700be2d51",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[397013, 9656, 869, 22, 105, "Input",ExpressionUUID->"8443c8b0-6c5d-4c6b-800c-766063a7e6d2",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[397885, 9680, 750, 20, 60, "Output",ExpressionUUID->"728273f6-c1c0-4d60-b169-cc3d0ac37ece",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[398638, 9702, 638, 15, 84, "Input",ExpressionUUID->"378e2c10-b33f-400b-9321-5a64d0d90079",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[399279, 9719, 486, 12, 60, "Output",ExpressionUUID->"0b88dad2-0588-488a-a27f-3567e2bad0a6",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[399768, 9733, 656, 14, 84, "Input",ExpressionUUID->"1f36bd68-3d3b-42a5-b7fa-933af7852c1c",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[400427, 9749, 543, 16, 41, "Output",ExpressionUUID->"eb976eda-6213-4de4-8d08-b298b75dfd39",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[400973, 9767, 693, 17, 84, "Input",ExpressionUUID->"e3a1863a-ecab-4470-a826-e64026ebf22c",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[401669, 9786, 681, 18, 60, "Output",ExpressionUUID->"035bf759-598a-40dd-8a82-62d8a37962fd",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[402353, 9806, 998, 23, 84, "Input",ExpressionUUID->"f81d920d-cc16-48c4-a2d3-d83b98bd59a3",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[403354, 9831, 620, 18, 41, "Output",ExpressionUUID->"1de14608-a1e7-4fbc-95d9-0eca09afd226",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[403977, 9851, 1412, 36, 189, "Input",ExpressionUUID->"67424cca-21f8-40d9-a6e8-d2773ac4bd88",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[405392, 9889, 288, 5, 41, "Output",ExpressionUUID->"cf58a090-c4d4-47ad-9ce1-680c1b2ebc82",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[405683, 9896, 310, 6, 41, "Output",ExpressionUUID->"47a41d0a-636b-4b0e-9b8e-df142f95a5a4",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[405996, 9904, 644, 19, 41, "Output",ExpressionUUID->"109aebb9-dff6-48cd-816e-e19b24001048",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[406643, 9925, 914, 30, 41, "Output",ExpressionUUID->"8ab07c33-57ba-404b-9f23-b811c9a5ce00",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[407560, 9957, 1029, 33, 41, "Output",ExpressionUUID->"19cf93fd-496e-4d33-bd1f-ae644602c89e",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[408592, 9992, 1623, 43, 84, "Input",ExpressionUUID->"42e569bc-77df-4deb-9cd9-a46bd09322ce",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[410218, 10037, 617, 17, 41, "Output",ExpressionUUID->"b4966ca6-a9c6-4dcc-a85b-acaf8b5e44eb",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[410838, 10056, 663, 16, 63, "Input",ExpressionUUID->"74f501a9-dd79-47ae-a6b2-4d52226b8078",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[411504, 10074, 323064, 5327, 297, 244914, 4044, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"12f86ca8-6210-4497-b5c0-00a313628fd2",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[734571, 15403, 602, 15, 41, "Input",ExpressionUUID->"d65d4f7e-6f44-4996-9aca-eca28cb80a89",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[735176, 15420, 162629, 2660, 318, "Output",ExpressionUUID->"674be67b-8338-449c-885f-7d08b6df41c5",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}]
}, Closed]]
}
]
*)

