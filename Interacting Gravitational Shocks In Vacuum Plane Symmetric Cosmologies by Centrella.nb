(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1227305,      26294]
NotebookOptionsPosition[   1197328,      25876]
NotebookOutlinePosition[   1197794,      25893]
CellTagsIndexPosition[   1197751,      25890]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Notebook for :  
Interacting Gravitational Shocks In Vacuum Plane Symmetric Cosmologies by \
Centrella\
\>", "Title",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8217294718661222`*^9, 3.821729502043838*^9}, 
   3.8217295683553457`*^9, 3.821732221863006*^9, {3.821811203295624*^9, 
   3.8218112036548367`*^9}, {3.822041768762134*^9, 3.822041781290854*^9}, {
   3.822048009752109*^9, 3.8220480569607773`*^9}, {3.822504877727007*^9, 
   3.8225048874039307`*^9}, {3.822565447028533*^9, 3.822565457908236*^9}, {
   3.822822107930128*^9, 3.822822113128089*^9}, {3.823176459993638*^9, 
   3.823176470345335*^9}, {3.823359338529508*^9, 3.823359361520629*^9}, {
   3.8235974638251762`*^9, 3.823597473367338*^9}, {3.823618458364909*^9, 
   3.8236184669077578`*^9}, {3.8236833044709806`*^9, 3.823683312509585*^9}, {
   3.8236885755476217`*^9, 3.823688587026948*^9}, {3.823689672516461*^9, 
   3.823689672910822*^9}, {3.8237044493810883`*^9, 3.8237044672759027`*^9}, {
   3.8239668765180197`*^9, 3.8239668768923607`*^9}, {3.823969962518847*^9, 
   3.823969963027501*^9}, {3.824031452536063*^9, 3.8240314588397417`*^9}, {
   3.824050286183601*^9, 3.8240502981028023`*^9}, {3.824054052123823*^9, 
   3.8240540590982018`*^9}, {3.8241112645699453`*^9, 3.824111275806172*^9}, {
   3.8241113419162703`*^9, 3.824111370584461*^9}, {3.824194466405624*^9, 
   3.824194480292894*^9}, {3.824209671317281*^9, 3.824209675596266*^9}, {
   3.824213191344763*^9, 3.824213198688175*^9}, {3.8242334229828463`*^9, 
   3.824233436813746*^9}, {3.8242915372921543`*^9, 3.824291544746887*^9}, {
   3.824316906337634*^9, 3.824316924591807*^9}, {3.8243187713441896`*^9, 
   3.8243187780885143`*^9}, {3.824321904053234*^9, 3.8243219044965897`*^9}, {
   3.824373107561822*^9, 3.824373119097262*^9}, {3.824375816375095*^9, 
   3.824375832366333*^9}, {3.824546354911455*^9, 3.824546360086112*^9}, {
   3.824733423228115*^9, 3.8247334495734262`*^9}, 3.8450285922544127`*^9, 
   3.856292717484727*^9},
 TextAlignment->Center,ExpressionUUID->"71b624b9-4476-4cca-9ec4-f4c0b971baa7"],

Cell["\<\
Geoff Cope
University of Utah
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\|01040f\|01042d\|01044c\|010432\|010442\|010432\
\|010449\|010445\|01042e\|01043b\|010428 \|010432\|010442 \|01040f\|01042d\
\|01043b\|01042b
March 14, 2021  PI Day!!!\
\>", "Author",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.821729507652328*^9, 3.821729529657844*^9}, 
   3.8220480097522783`*^9, {3.822048070235491*^9, 3.822048084689715*^9}, {
   3.8225654346519403`*^9, 3.8225654361641483`*^9}, {3.8231764728567343`*^9, 
   3.823176482313031*^9}, {3.8233640113399878`*^9, 3.823364023347041*^9}, {
   3.8234229506702557`*^9, 3.823422956381791*^9}, {3.827953252419902*^9, 
   3.827953254868108*^9}, {3.851065213363542*^9, 3.8510652255731983`*^9}, {
   3.8510652620952*^9, 3.851065307413348*^9}, {3.851099255534511*^9, 
   3.851099264486588*^9}, {3.851252093025189*^9, 3.851252093273655*^9}, 
   3.851252176997463*^9, 3.8512537234246607`*^9, 3.85125469290289*^9, 
   3.851256927304118*^9, {3.855405234504258*^9, 3.855405238736866*^9}, 
   3.855405272664227*^9, {3.855407872416093*^9, 3.855407879483934*^9}, 
   3.8554963948316936`*^9, {3.855504241007119*^9, 3.855504245254983*^9}, 
   3.8555049671827374`*^9, {3.855505955128133*^9, 3.855505961623564*^9}, {
   3.855532612945916*^9, 3.855532622453443*^9}, {3.8555766527923927`*^9, 
   3.855576656141964*^9}, {3.855841625871888*^9, 3.855841633587627*^9}, {
   3.855844157477105*^9, 3.855844162818038*^9}, {3.8561038198660593`*^9, 
   3.85610382495426*^9}, {3.856276457420203*^9, 3.8562764621080914`*^9}, {
   3.856292378139819*^9, 3.8562923834359503`*^9}, 3.856292717484859*^9},
 TextAlignment->Center,ExpressionUUID->"bcfac615-3a6e-42b9-92e5-fbe5df6a5967"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hyperlink To Documentation", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.820944675605734*^9, 
  3.8209446931410646`*^9}},ExpressionUUID->"9767b7cc-003e-42de-906b-\
e99ddbf024d8"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<GeneralRelativityTensors Documentation and Download\>\"", ",", 
   "\[IndentingNewLine]", 
   "\"\<https://github.com/BlackHolePerturbationToolkit\>\""}], 
  "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.820944619768764*^9, 3.820944681268063*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"f876c127-7e2e-49a1-8749-bd91c5fb5f74"],

Cell[BoxData[
 TemplateBox[{
  "\"GeneralRelativityTensors Documentation and Download\"", 
   "https://github.com/BlackHolePerturbationToolkit"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.820944653562152*^9, 3.820944681268403*^9}, 
   3.821729905862431*^9, 3.821732641380642*^9, 3.8218069931429567`*^9, 
   3.821811425912986*^9, 3.822042652654992*^9, {3.822048793766124*^9, 
   3.8220488009116488`*^9}, 3.82250502887521*^9, 3.822505578829629*^9, 
   3.822565490613895*^9, 3.8225662097813597`*^9, 3.822606717894772*^9, 
   3.822739433713368*^9, 3.822822210464344*^9, 3.8233594284652433`*^9, 
   3.8233607803938913`*^9, 3.823360880234103*^9, 3.823361224481102*^9, 
   3.82336209870968*^9, 3.823364030542309*^9, 3.823597528606563*^9, 
   3.823618495251218*^9, 3.82368341365138*^9, 3.82368384184562*^9, 
   3.823684775269041*^9, 3.823688794270237*^9, 3.82369077711421*^9, 
   3.823704572306265*^9, 3.8239670360944*^9, 3.8239675178827963`*^9, 
   3.823970038559888*^9, 3.824025681964837*^9, 3.824032150329472*^9, 
   3.824050435315671*^9, 3.824050999906499*^9, 3.824051492117627*^9, 
   3.824054172450189*^9, 3.824054375215625*^9, 3.824111434931583*^9, 
   3.824117930025662*^9, 3.8241945834794397`*^9, 3.8242097150616713`*^9, 
   3.82421332410147*^9, 3.824233539058529*^9, 3.824291604923744*^9, 
   3.8242917489137487`*^9, 3.824292244201261*^9, 3.8242940267035923`*^9, 
   3.824316850672309*^9, 3.824316937946146*^9, 3.824317254629013*^9, 
   3.8243188226186247`*^9, 3.8243190704041023`*^9, 3.824321984015122*^9, 
   3.824373228882228*^9, 3.8243759367886868`*^9, 3.824546451478854*^9, 
   3.824664120857552*^9, 3.824733569649575*^9, 3.8247337234075403`*^9, 
   3.845028837513953*^9, 3.856292471956702*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"0ba7ff5b-abd3-47ff-804b-0da417527213"]
}, Closed]],

Cell[CellGroupData[{

Cell["Hyperlink  To Article ", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.820937794883616*^9, {3.820938266275806*^9, 3.82093829464357*^9}, 
   3.820943883376583*^9, {3.8210324492405148`*^9, 3.821032453951701*^9}, {
   3.8217297279218817`*^9, 3.8217297313782063`*^9}, {3.822593613363134*^9, 
   3.822593616181035*^9}, {3.822736144359599*^9, 3.8227361450547543`*^9}, {
   3.823359417697976*^9, 3.823359420672374*^9}, 
   3.843145466352788*^9},ExpressionUUID->"d3628458-ed22-467e-a08b-\
9370de19b6ec"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Interacting Gravitational Shocks In Vacuum Plane Symmetric Cosmologies \
by Centrella\>\"", ",", "\[IndentingNewLine]", 
   "\"\<http://adsabs.harvard.edu/pdf/1980ApJ...241..875C\>\""}], 
  "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8218867746254797`*^9, 3.821886810805148*^9}, 
   3.823176507207197*^9, {3.823472730005904*^9, 3.823472744739744*^9}, {
   3.823597507106205*^9, 3.823597507709626*^9}, {3.824218491076791*^9, 
   3.824218504482604*^9}, {3.824747050565949*^9, 3.8247470630759907`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"9c482546-f8d7-47c1-bfc6-4e46839b59bd"],

Cell[BoxData[
 TemplateBox[{
  "\"Interacting Gravitational Shocks In Vacuum Plane Symmetric Cosmologies \
by Centrella\"", "http://adsabs.harvard.edu/pdf/1980ApJ...241..875C"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.821886813557355*^9, 3.8231765072073307`*^9, 3.823359428608782*^9, 
   3.8233607804338617`*^9, 3.823360880363216*^9, 3.823361224626254*^9, 
   3.823362098931829*^9, 3.823364030688095*^9, 3.823472745219315*^9, {
   3.8235975109202147`*^9, 3.823597528650549*^9}, 3.823618495400096*^9, 
   3.823683413880138*^9, 3.823683841884781*^9, 3.823684775280538*^9, 
   3.823688794413259*^9, 3.8236907771492443`*^9, 3.823704572455369*^9, 
   3.8239670361077127`*^9, 3.8239675178933*^9, 3.823970038708452*^9, 
   3.824025682120349*^9, 3.824032150367559*^9, 3.824050435367694*^9, 
   3.824050999946439*^9, 3.8240514922362757`*^9, 3.8240541725938663`*^9, 
   3.82405437525069*^9, 3.824111435079376*^9, 3.824117930144135*^9, 
   3.8241945835176497`*^9, 3.824209715204199*^9, 3.8242133242608747`*^9, 
   3.824218504809145*^9, 3.824233539210615*^9, 3.824291605078549*^9, 
   3.8242917489637117`*^9, 3.824292244338883*^9, 3.824294026714913*^9, 
   3.824316850683069*^9, 3.824316938028294*^9, 3.82431725467273*^9, 
   3.8243188227859573`*^9, 3.8243190704456787`*^9, 3.824321984291423*^9, 
   3.824373229037489*^9, 3.824375936837274*^9, 3.824546451646509*^9, 
   3.8246641210115232`*^9, 3.8247335697908154`*^9, 3.824733723453587*^9, 
   3.82474706468764*^9, 3.845028837567438*^9, 3.856292472292947*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"08695acf-28c7-4a01-8c5e-60161d5e00da"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"See", " ", "also"}], "..."}], "."}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Hyperlink", "[", 
   RowBox[{
   "\"\<Colliding gravitational waves in expanding cosmologies - Centrella & \
Matzner\>\"", ",", "\[IndentingNewLine]", 
    "\"\<https://journals.aps.org/prd/abstract/10.1103/PhysRevD.25.930\>\""}],
    "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.826211312751902*^9, 3.8262113309082737`*^9}, 
   3.8449782764250193`*^9, {3.845028866609725*^9, 3.845028871073298*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"6716df1d-4b22-4a86-9944-5c18d2edb217"],

Cell[BoxData[
 TemplateBox[{
  "\"Colliding gravitational waves in expanding cosmologies - Centrella & \
Matzner\"", "https://journals.aps.org/prd/abstract/10.1103/PhysRevD.25.930"},
  "HyperlinkURL"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.826211332134308*^9, 3.844978276425387*^9, 
  3.845022670171234*^9, 3.845023493481038*^9, 3.856292472324594*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"738d8b11-9f81-4f26-9860-47db60fcf9d8"]
}, Closed]],

Cell[CellGroupData[{

Cell["Utilities and Package Load", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.820937646765551*^9, 3.8209376725449123`*^9}, 
   3.825331716589467*^9},ExpressionUUID->"286d12ba-5f70-476e-8cc9-\
08936f67af81"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "Utilities`CleanSlate`"}], "\[IndentingNewLine]", 
 RowBox[{"CleanSlate", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearInOut", "[", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pdConv", "[", "f_", "]"}], ":=", 
  RowBox[{"TraditionalForm", "[", 
   RowBox[{"f", "/.", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Derivative", "[", "inds__", "]"}], "[", "g_", "]"}], "[", 
      "vars__", "]"}], "\[RuleDelayed]", 
     RowBox[{"Apply", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Defer", "[", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"g", "[", "vars", "]"}], ",", "##"}], "]"}], "]"}], "&"}], 
       ",", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "vars", "}"}], ",", 
           RowBox[{"{", "inds", "}"}]}], "}"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"var_", ",", "0"}], "}"}], "\[RuleDelayed]", 
           RowBox[{"Sequence", "[", "]"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"var_", ",", "1"}], "}"}], "\[RuleDelayed]", 
           RowBox[{"{", "var", "}"}]}]}], "}"}]}]}], "]"}]}]}], 
   "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.8209376549030037`*^9, {3.821032517164062*^9, 3.821032518258361*^9}, 
   3.825331716589657*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"df469690-fd43-4cf9-82f2-0eae3c8ab7bf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  (CleanSlate) Contexts purged: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"Global`\"\>", "}"}]}],
  SequenceForm["  (CleanSlate) Contexts purged: ", {"Global`"}],
  Editable->False]], "Print",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.820932754769992*^9, 3.820933427630714*^9, 3.820937654903143*^9, 
   3.821729906190301*^9, 3.821732641685704*^9, 3.8218069933778133`*^9, 
   3.82181142618342*^9, 3.8220426528487463`*^9, {3.822048793940605*^9, 
   3.822048801089246*^9}, 3.822505029191699*^9, 3.822505579049889*^9, 
   3.822565490838564*^9, 3.822566210008327*^9, 3.822606718180009*^9, 
   3.8226371008270607`*^9, 3.822739433887854*^9, 3.822761800089258*^9, 
   3.8228172997642097`*^9, 3.822822210725956*^9, 3.822988687208267*^9, 
   3.823359428732101*^9, 3.823360780582996*^9, 3.823360880477087*^9, 
   3.823361224742215*^9, 3.8233620990886593`*^9, 3.8233640308219624`*^9, 
   3.8235320061137466`*^9, 3.823597528753026*^9, 3.823618495521882*^9, 
   3.823683414021819*^9, 3.823683842015107*^9, 3.823684775412067*^9, 
   3.823688794547976*^9, 3.823690777270031*^9, 3.8237045725706463`*^9, 
   3.823967036254635*^9, 3.823967518049459*^9, 3.823970038788274*^9, 
   3.824025682258999*^9, 3.8240321504830923`*^9, 3.8240504354973917`*^9, 
   3.824051000133101*^9, 3.824051492357512*^9, 3.824054172748905*^9, 
   3.824054375453238*^9, 3.824111435226822*^9, 3.824117930311021*^9, 
   3.8241945836859083`*^9, 3.824209715330535*^9, 3.824213324408888*^9, 
   3.824233539359887*^9, 3.824291605233205*^9, 3.824291749189829*^9, 
   3.824292244505015*^9, 3.824294026870283*^9, 3.824316850851623*^9, 
   3.824316938230309*^9, 3.8243172548897743`*^9, 3.824318822930578*^9, 
   3.824319070624185*^9, 3.824321984530898*^9, 3.82437322918025*^9, 
   3.824375937032415*^9, 3.8245464518249493`*^9, 3.824664121185907*^9, 
   3.824733569935039*^9, 3.824733723654015*^9, 3.825331716589753*^9, 
   3.8450288378171167`*^9, 3.856292472482695*^9},
 CellLabel->
  "During evaluation of \
In[4]:=",ExpressionUUID->"d27bafaa-ecd4-4b67-a942-ff418236a7a9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  (CleanSlate) Approximate kernel memory recovered: \"\>", 
   "\[InvisibleSpace]", "\<\"8 Kb\"\>"}],
  SequenceForm["  (CleanSlate) Approximate kernel memory recovered: ", "8 Kb"],
  Editable->False]], "Print",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.820932754769992*^9, 3.820933427630714*^9, 3.820937654903143*^9, 
   3.821729906190301*^9, 3.821732641685704*^9, 3.8218069933778133`*^9, 
   3.82181142618342*^9, 3.8220426528487463`*^9, {3.822048793940605*^9, 
   3.822048801089246*^9}, 3.822505029191699*^9, 3.822505579049889*^9, 
   3.822565490838564*^9, 3.822566210008327*^9, 3.822606718180009*^9, 
   3.8226371008270607`*^9, 3.822739433887854*^9, 3.822761800089258*^9, 
   3.8228172997642097`*^9, 3.822822210725956*^9, 3.822988687208267*^9, 
   3.823359428732101*^9, 3.823360780582996*^9, 3.823360880477087*^9, 
   3.823361224742215*^9, 3.8233620990886593`*^9, 3.8233640308219624`*^9, 
   3.8235320061137466`*^9, 3.823597528753026*^9, 3.823618495521882*^9, 
   3.823683414021819*^9, 3.823683842015107*^9, 3.823684775412067*^9, 
   3.823688794547976*^9, 3.823690777270031*^9, 3.8237045725706463`*^9, 
   3.823967036254635*^9, 3.823967518049459*^9, 3.823970038788274*^9, 
   3.824025682258999*^9, 3.8240321504830923`*^9, 3.8240504354973917`*^9, 
   3.824051000133101*^9, 3.824051492357512*^9, 3.824054172748905*^9, 
   3.824054375453238*^9, 3.824111435226822*^9, 3.824117930311021*^9, 
   3.8241945836859083`*^9, 3.824209715330535*^9, 3.824213324408888*^9, 
   3.824233539359887*^9, 3.824291605233205*^9, 3.824291749189829*^9, 
   3.824292244505015*^9, 3.824294026870283*^9, 3.824316850851623*^9, 
   3.824316938230309*^9, 3.8243172548897743`*^9, 3.824318822930578*^9, 
   3.824319070624185*^9, 3.824321984530898*^9, 3.82437322918025*^9, 
   3.824375937032415*^9, 3.8245464518249493`*^9, 3.824664121185907*^9, 
   3.824733569935039*^9, 3.824733723654015*^9, 3.825331716589753*^9, 
   3.8450288378171167`*^9, 3.856292472487578*^9},
 CellLabel->
  "During evaluation of \
In[4]:=",ExpressionUUID->"ae6717e7-431c-4d08-a99b-1653750283f6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Utilities`CleanSlate`\"\>", 
   ",", "\<\"DocumentationSearch`\"\>", ",", "\<\"ResourceLocator`\"\>", 
   ",", "\<\"NaturalLanguageProcessingLoader`\"\>", ",", "\<\"System`\"\>", 
   ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.820932754773623*^9, 3.820933427635436*^9, 3.8209376549033947`*^9, 
   3.821729906193787*^9, 3.821732641691049*^9, 3.821806993386058*^9, 
   3.821811426187071*^9, 3.822042652852829*^9, {3.822048793944077*^9, 
   3.822048801092909*^9}, 3.822505029195156*^9, 3.8225055790570173`*^9, 
   3.8225654908422747`*^9, 3.8225662100125237`*^9, 3.8226067181902227`*^9, 
   3.822637100839163*^9, 3.8227394339100733`*^9, 3.822761800103311*^9, 
   3.822817299776285*^9, 3.822822210739685*^9, 3.822988687217742*^9, 
   3.823359428736412*^9, 3.823360780587545*^9, 3.8233608804810534`*^9, 
   3.823361224746982*^9, 3.823362099093968*^9, 3.823364030838743*^9, 
   3.8235320061191893`*^9, 3.823597528756508*^9, 3.8236184955254183`*^9, 
   3.823683414029439*^9, 3.823683842020509*^9, 3.823684775416593*^9, 
   3.823688794552709*^9, 3.823690777273932*^9, 3.8237045725743713`*^9, 
   3.823967036258197*^9, 3.823967518053287*^9, 3.8239700387921047`*^9, 
   3.824025682265245*^9, 3.824032150486408*^9, 3.8240504355005302`*^9, 
   3.824051000137991*^9, 3.824051492360982*^9, 3.82405417275224*^9, 
   3.82405437545785*^9, 3.8241114352302933`*^9, 3.824117930315586*^9, 
   3.8241945836899357`*^9, 3.8242097153340693`*^9, 3.8242133244138002`*^9, 
   3.824233539363517*^9, 3.824291605236739*^9, 3.824291749195037*^9, 
   3.82429224450939*^9, 3.824294026874441*^9, 3.824316850855619*^9, 
   3.8243169382344837`*^9, 3.824317254894225*^9, 3.82431882293402*^9, 
   3.824319070629488*^9, 3.824321984538563*^9, 3.824373229184*^9, 
   3.824375937036552*^9, 3.82454645182887*^9, 3.824664121191229*^9, 
   3.824733569938221*^9, 3.824733723658082*^9, 3.825331716589944*^9, 
   3.845028837828631*^9, 3.856292472489876*^9},
 CellLabel->"Out[0]=",ExpressionUUID->"ba23a0f9-3afc-4e9c-95bc-db3d85fef53a"],

Cell[BoxData[
 RowBox[{"<<", "GeneralRelativityTensors`"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8209376549035053`*^9, 3.825331716590019*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"7c95144a-d1c4-4cea-a7e9-4f23203c82b9"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<VariationalMethods`\>\"", "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.82282432548825*^9, 3.822824327819418*^9}, 
   3.8253317165900993`*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"b5f4f6f0-532c-4a3b-bc1a-2191344e109f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Custom Notation", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.8225114042235403`*^9, 3.822511435665856*^9}, 
   3.823176577809782*^9, 
   3.8253317274081173`*^9},ExpressionUUID->"eb7bef00-acf4-4309-a17d-\
80be6bc2d077"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "dtReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dtReplace", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Dt", "[", "r", "]"}], "\[Rule]", " ", "dr"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "t", "]"}], "\[Rule]", " ", "dt"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "u", "]"}], "\[Rule]", " ", "du"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "v", "]"}], "\[Rule]", " ", "dv"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "w", "]"}], "\[Rule]", " ", "dw"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "x", "]"}], "\[Rule]", " ", "dx"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "y", "]"}], " ", "\[Rule]", " ", "dy"}], " ", ",", 
     " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "z", "]"}], "\[Rule]", " ", "dz"}], " ", ",", " ", 
     "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Theta]", "]"}], " ", "\[Rule]", " ", 
      "d\[Theta]"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Phi]", "]"}], " ", "\[Rule]", " ", "d\[Phi]"}], 
     "  ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Eta]", "]"}], " ", "\[Rule]", " ", "d\[Eta]"}], 
     "  ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Chi]", "]"}], "\[Rule]", " ", "d\[Chi]"}], " ", 
     ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Rho]", "]"}], " ", "\[Rule]", " ", "d\[Rho]"}], 
     " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[CurlyRho]", "]"}], "\[Rule]", " ", 
      "d\[CurlyRho]"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[CurlyPhi]", "]"}], " ", "\[Rule]", " ", 
      "d\[CurlyPhi]"}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Xi]", "]"}], "\[Rule]", " ", "d\[Xi]"}], " ", ",",
      "  ", "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptT]", "]"}], " ", "\[Rule]", " ", 
      "d\[ScriptT]"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptV]", "]"}], "\[Rule]", " ", "d\[ScriptV]"}],
      " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptU]", "]"}], "\[Rule]", " ", "d\[ScriptU]"}],
      " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptX]", "]"}], "\[Rule]", " ", "d\[ScriptX]"}],
      " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptY]", "]"}], "\[Rule]", " ", "d\[ScriptY]"}],
      ",", "   ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptZ]", "]"}], " ", "\[Rule]", " ", 
      "d\[ScriptZ]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "T", "]"}], "\[Rule]", " ", "dT"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "X", "]"}], "\[Rule]", " ", "dX"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "Y", "]"}], "\[Rule]", " ", "dY"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "Z", "]"}], "\[Rule]", " ", "dZ"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "U", "]"}], "\[Rule]", " ", "dU"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "V", "]"}], "\[Rule]", " ", "dV"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[ScriptR]", "]"}], "\[Rule]", " ", "d\[ScriptR]"}],
      "  ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[CapitalPhi]", "]"}], "\[Rule]", " ", 
      "d\[CapitalPhi]"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Zeta]", "]"}], "\[Rule]", " ", "d\[Zeta]"}], " ", 
     ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dt", "[", "\[Zeta]bar", "]"}], "\[Rule]", " ", 
      "d\[Zeta]bar"}]}], " ", "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"dtReplace", " ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.82317656063256*^9, 3.823176577809904*^9}, {
   3.823598236175474*^9, 3.823598253654046*^9}, {3.823598849383689*^9, 
   3.82359891091936*^9}, {3.8236913141384983`*^9, 3.823691322585009*^9}, {
   3.8237047861092253`*^9, 3.823704790612156*^9}, {3.824032529537923*^9, 
   3.8240325755969877`*^9}, {3.824111980853726*^9, 3.82411200435644*^9}, {
   3.824664504543129*^9, 3.824664508261766*^9}, 3.8253317274082603`*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"1ce3a3c4-fc95-412c-b958-9e258b811288"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"Dt", "[", "r", "]"}], "\[Rule]", "dr"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "t", "]"}], "\[Rule]", "dt"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "u", "]"}], "\[Rule]", "du"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "v", "]"}], "\[Rule]", "dv"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "w", "]"}], "\[Rule]", "dw"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "x", "]"}], "\[Rule]", "dx"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "y", "]"}], "\[Rule]", "dy"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "z", "]"}], "\[Rule]", "dz"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Theta]", "]"}], "\[Rule]", "d\[Theta]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Phi]", "]"}], "\[Rule]", "d\[Phi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Eta]", "]"}], "\[Rule]", "d\[Eta]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Chi]", "]"}], "\[Rule]", "d\[Chi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Rho]", "]"}], "\[Rule]", "d\[Rho]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[CurlyRho]", "]"}], "\[Rule]", "d\[CurlyRho]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[CurlyPhi]", "]"}], "\[Rule]", "d\[CurlyPhi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Xi]", "]"}], "\[Rule]", "d\[Xi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptT]", "]"}], "\[Rule]", "d\[ScriptT]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptV]", "]"}], "\[Rule]", "d\[ScriptV]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptU]", "]"}], "\[Rule]", "d\[ScriptU]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptX]", "]"}], "\[Rule]", "d\[ScriptX]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptY]", "]"}], "\[Rule]", "d\[ScriptY]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptZ]", "]"}], "\[Rule]", "d\[ScriptZ]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "T", "]"}], "\[Rule]", "dT"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "X", "]"}], "\[Rule]", "dX"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "Y", "]"}], "\[Rule]", "dY"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "Z", "]"}], "\[Rule]", "dZ"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "U", "]"}], "\[Rule]", "dU"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "V", "]"}], "\[Rule]", "dV"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[ScriptR]", "]"}], "\[Rule]", "d\[ScriptR]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[CapitalPhi]", "]"}], "\[Rule]", 
       "d\[CapitalPhi]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Zeta]", "]"}], "\[Rule]", "d\[Zeta]"}]},
     {
      RowBox[{
       RowBox[{"Dt", "[", "\[Zeta]bar", "]"}], "\[Rule]", "d\[Zeta]bar"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{3.82403258232056*^9, 3.8240504355846977`*^9, 
  3.824051000170314*^9, 3.8240514924468307`*^9, 3.8240541728467197`*^9, 
  3.824054375493238*^9, 3.824111435338122*^9, 3.824112005137067*^9, 
  3.824117930406502*^9, 3.824194583721236*^9, 3.8242097154291267`*^9, 
  3.824213324509409*^9, 3.8242335394582376`*^9, 3.8242916053374853`*^9, 
  3.824291749235929*^9, 3.824292244592392*^9, 3.8242940269640083`*^9, 
  3.824316850962772*^9, 3.824316938267046*^9, 3.824317254932661*^9, 
  3.8243188230296164`*^9, 3.824319070663567*^9, 3.824321984713394*^9, 
  3.824373229314906*^9, 3.82437593707454*^9, 3.8245464519407873`*^9, 
  3.8246641213166523`*^9, 3.824664508795343*^9, 3.8247335700364656`*^9, 
  3.824733723691984*^9, 3.825331727408383*^9, 3.8450288379076967`*^9, 
  3.8562924725834513`*^9},
 CellLabel->
  "Out[6]//TableForm=",ExpressionUUID->"60a84eea-7a60-4ca7-a651-63c7eb028dd9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a", "/:", 
    RowBox[{"Dt", "[", "a", "]"}], "=", "0"}], "  ", ";"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"M", " ", "/:", " ", 
    RowBox[{"Dt", "[", "M", "]"}], " ", "=", " ", "0"}], " ", ";"}], 
  "  "}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.823598195430221*^9, 3.823598210501268*^9}, {
   3.823602495092556*^9, 3.823602530987715*^9}, {3.8236188964036007`*^9, 
   3.8236189207008657`*^9}, {3.8237047330364532`*^9, 3.823704739867001*^9}, {
   3.824112239153829*^9, 3.824112246801137*^9}, 3.825331727408485*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"fc4281b5-f345-48b9-be3f-2fcfc8c14491"]
}, Closed]],

Cell[CellGroupData[{

Cell["Line Element and Metric Functions", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.820937548919169*^9, 3.8209375728447866`*^9}, 
   3.8209383129401073`*^9, 3.8220481344968433`*^9, {3.8225115057038183`*^9, 
   3.822511507783984*^9}, 
   3.822763734568725*^9},ExpressionUUID->"0f34ba0b-2159-4ea1-83ed-\
4609b2510407"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "lineToMetric", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lineToMetric", "[", 
    RowBox[{"lineelement_", " ", ",", " ", "differentials_"}], "]"}], ":=", 
   " ", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"i", "\[Equal]", "j"}], " ", ",", 
       RowBox[{"Coefficient", "[", 
        RowBox[{"lineelement", ",", " ", 
         RowBox[{
          RowBox[{"differentials", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", 
          RowBox[{"differentials", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}], "*", 
        RowBox[{"Coefficient", "[", 
         RowBox[{"lineelement", ",", " ", 
          RowBox[{
           RowBox[{"differentials", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", 
           RowBox[{"differentials", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}]}], "]"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "differentials", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "differentials", "]"}]}], "}"}]}], "]"}]}], 
  "  ", ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{3.821567412203915*^9, 3.821641945174967*^9, 
  3.821641981470141*^9, 3.8220481344970007`*^9, 3.822763734569355*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"e92b2ab6-f2ae-4652-9203-e6652e2b68de"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "metricToLine", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metricToLine", "[", 
   RowBox[{"metric_", ",", " ", "differentials_"}], "]"}], ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"metric", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "j"}], "]"}], "]"}], " ", 
     RowBox[{"differentials", "[", 
      RowBox[{"[", "i", "]"}], "]"}], " ", 
     RowBox[{"differentials", "[", 
      RowBox[{"[", "j", "]"}], "]"}]}], " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "differentials", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", 
      RowBox[{"Length", "[", "differentials", "]"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.822762557092309*^9, 3.8227626322008677`*^9}, 
   3.8227637345698223`*^9, 3.822988709740047*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"ec70cdc0-b883-4cf0-aec0-b2ae2e9e9776"]
}, Closed]],

Cell[CellGroupData[{

Cell["Line Element and Metric 4.4", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.825331739940734*^9, 
  3.825331758523478*^9}},ExpressionUUID->"6535b2d1-596a-43d1-9574-\
62453d4995e2"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq4pt4", "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq4pt4", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"\[Gamma]", "-", "\[Psi]"}], "]"}], " ", 
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["dT", "2"]}], "+", " ", 
      SuperscriptBox["dz", "2"]}], ")"}]}], " ", "+", " ", 
   RowBox[{"(", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Exp", "[", "\[Psi]", "]"}], " ", 
      SuperscriptBox["dx", "2"]}], "+", " ", 
     RowBox[{
      SuperscriptBox["T", "2"], " ", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "\[Psi]"}], "]"}], " ", 
      SuperscriptBox["dy", "2"]}]}], ")"}], " "}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.824733518054882*^9, 3.8247335639400682`*^9}, 
   3.825331749034197*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"0044d1b1-48fc-4a71-ae52-461382873d2a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["dT", "2"]}], "+", 
     SuperscriptBox["dz", "2"]}], ")"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[Gamma]", "-", "\[Psi]"}]]}], "+", 
  RowBox[{
   SuperscriptBox["dx", "2"], " ", 
   SuperscriptBox["\[ExponentialE]", "\[Psi]"]}], "+", 
  RowBox[{
   SuperscriptBox["dy", "2"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "\[Psi]"}]], " ", 
   SuperscriptBox["T", "2"]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{3.8247335700751657`*^9, 3.824733723736267*^9, 
  3.8253317490343027`*^9, 3.845028837977346*^9, 3.85629247264322*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"0f674fd7-a83c-4385-b5e5-4897e367b4ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"lineToMetric", "[", " ", 
    RowBox[{"eq4pt4", " ", ",", " ", 
     RowBox[{"{", 
      RowBox[{"dT", ",", "dz", ",", "dx", ",", "dy"}], "}"}]}], "]"}], " ", "//",
    " ", "MatrixForm"}], " ", "//", " ", "pdConv"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.8247335718050222`*^9, 3.824733591060504*^9}, 
   3.82533174903438*^9, {3.877540659043995*^9, 
   3.877540660006288*^9}},ExpressionUUID->"ff9ea4f5-dace-42ec-8600-\
12584a08d604"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Gamma]", "-", "\[Psi]"}]]}], "0", "0", "0"},
     {"0", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[Gamma]", "-", "\[Psi]"}]], "0", "0"},
     {"0", "0", 
      SuperscriptBox["\[ExponentialE]", "\[Psi]"], "0"},
     {"0", "0", "0", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "\[Psi]"}]], " ", 
       SuperscriptBox["T", "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.8247335837188807`*^9, 3.824733591368835*^9}, 
   3.824733723758163*^9, 3.8253317490345087`*^9, 3.845028837992628*^9, 
   3.856292472657055*^9},
 CellLabel->
  "Out[15]//MatrixForm=",ExpressionUUID->"ec071082-6984-45f7-bd43-\
29a0c1d3f712"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq4pt4a", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq4pt4a", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Gamma]", "\[Rule]", " ", 
      RowBox[{"\[Gamma]", "[", 
       RowBox[{"T", ",", "z"}], "]"}]}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"\[Psi]", "\[Rule]", " ", 
      RowBox[{"\[Psi]", "[", 
       RowBox[{"T", ",", "z"}], "]"}]}]}], "\[IndentingNewLine]", "}"}]}], 
  " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq4pt4a", " ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.824733598093349*^9, 3.824733625013956*^9}, 
   3.825331749034584*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"7bbdfd4a-ed55-4b73-bef3-722b77a8de3b"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"\[Gamma]", "\[Rule]", 
       RowBox[{"\[Gamma]", "[", 
        RowBox[{"T", ",", "z"}], "]"}]}]},
     {
      RowBox[{"\[Psi]", "\[Rule]", 
       RowBox[{"\[Psi]", "[", 
        RowBox[{"T", ",", "z"}], "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{3.824733625282886*^9, 3.824733723768209*^9, 
  3.825331749034669*^9, 3.845028838027916*^9, 3.856292472686537*^9},
 CellLabel->
  "Out[18]//TableForm=",ExpressionUUID->"ad43b91b-3abc-439e-a33a-\
2c0e70f012a6"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "metric4pt4", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric4pt4", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lineToMetric", "[", " ", 
     RowBox[{"eq4pt4", " ", ",", " ", 
      RowBox[{"{", 
       RowBox[{"dT", ",", "dz", ",", "dx", ",", "dy"}], "}"}]}], "]"}], "  ", 
    "/.", " ", "eq4pt4a"}]}], "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric4pt4", " ", "//", " ", "MatrixForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.824733632244618*^9, 3.82473363493244*^9}, {
   3.824733732949353*^9, 3.824733746620727*^9}, 3.8253317490347557`*^9, {
   3.8450286685897093`*^9, 3.845028669957281*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"b84bead5-8248-4371-915d-3baa05be8d0c"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "z"}], ")"}], "-", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}]]}], "0", "0", "0"},
      {"0", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"\[Gamma]", "(", 
          RowBox[{"T", ",", "z"}], ")"}], "-", 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "z"}], ")"}]}]], "0", "0"},
      {"0", "0", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Psi]", "(", 
         RowBox[{"T", ",", "z"}], ")"}]], "0"},
      {"0", "0", "0", 
       RowBox[{
        SuperscriptBox["T", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}]]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{
  3.8247336353004627`*^9, {3.824733723789055*^9, 3.8247337469252443`*^9}, 
   3.825331749034842*^9, 3.845028838066741*^9, 3.85629247272148*^9},
 CellLabel->
  "Out[21]//TraditionalForm=",ExpressionUUID->"54d4e63d-fb38-4ad7-b088-\
cc6c22bdf94a"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "inverse4pt4", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inverse4pt4", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Inverse", "[", " ", "metric4pt4", " ", "]"}], " ", "//", " ", 
     "Expand"}], " ", "//", " ", "Simplify"}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inverse4pt4", " ", "//", " ", "MatrixForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.824734359538187*^9, 3.824734386648733*^9}, 
   3.8253317490349207`*^9, {3.845028673317618*^9, 3.8450286752371492`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"6b37282c-5fdb-4009-863a-1f9567081a52"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "z"}], ")"}], "-", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}]]}], "0", "0", "0"},
      {"0", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "z"}], ")"}], "-", 
         RowBox[{"\[Gamma]", "(", 
          RowBox[{"T", ",", "z"}], ")"}]}]], "0", "0"},
      {"0", "0", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "z"}], ")"}]}]], "0"},
      {"0", "0", "0", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "z"}], ")"}]], 
        SuperscriptBox["T", "2"]]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.824734378783401*^9, 3.8247343871547318`*^9}, 
   3.825331749035005*^9, 3.845028838102767*^9, 3.856292472761993*^9},
 CellLabel->
  "Out[24]//TraditionalForm=",ExpressionUUID->"d017b635-6a22-4a2a-9093-\
1560d0552a71"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"metric4pt4", " ", ".", " ", "inverse4pt4"}], " ", "//", " ", 
    "Expand"}], " ", "//", " ", "Simplify"}], " ", "//", " ", 
  "MatrixForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.824734389594763*^9, 3.824734399816216*^9}, 
   3.8253317490350857`*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"6b81472f-22ec-48b6-8ccb-2cfa7bdf7764"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0"},
     {"0", "1", "0", "0"},
     {"0", "0", "1", "0"},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{3.824734400306658*^9, 3.825331749035178*^9, 
  3.845028838120648*^9, 3.8562924727764463`*^9},
 CellLabel->
  "Out[25]//MatrixForm=",ExpressionUUID->"7308d347-37b0-485f-bee5-\
bc974ea26308"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"inverse4pt4", "  ", ".", " ", "metric4pt4"}], " ", "//", " ", 
    "Expand"}], " ", "//", " ", "Simplify"}], " ", "//", " ", 
  "MatrixForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.824734410910328*^9, 3.824734414841259*^9}, 
   3.825331749035254*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"5deff0af-3dec-43d4-b631-7f38a7bd8cf9"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0"},
     {"0", "1", "0", "0"},
     {"0", "0", "1", "0"},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{3.82473441515098*^9, 3.825331749035337*^9, 
  3.845028838149906*^9, 3.856292472808839*^9},
 CellLabel->
  "Out[26]//MatrixForm=",ExpressionUUID->"24c08029-ff84-4c3c-8dcc-\
99c1c9df60f0"]
}, Closed]],

Cell[CellGroupData[{

Cell["Tensors Calculated For Metric 4.4", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.8253319067815847`*^9, 
  3.8253319447263117`*^9}},ExpressionUUID->"85b05021-3453-48b8-9781-\
669b7f9aeb53"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "input", "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"input", "[", 
    RowBox[{
    "equationNumber_", ",", "equation_", ",", "metricName_", ",", 
     "displayName_", ",", "variables_", ",", "indices_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", "tensorList", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"tensorList", " ", "=", " ", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<g\>\"", "<>", "equationNumber"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<christoffel\>\"", "<>", "equationNumber"}], " ", ",", 
         " ", "\[IndentingNewLine]", 
         RowBox[{"\"\<riemann\>\"", "<>", "equationNumber"}], "  ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<ricci\>\"", "<>", "equationNumber"}], " ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<ricciscalar\>\"", "<>", "equationNumber"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<kretschmannscalar\>\"", "<>", "equationNumber"}], "  ", 
         ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<einstein\>\"", "<>", "equationNumber"}], "  ", ",", " ",
          "\[IndentingNewLine]", 
         RowBox[{"\"\<weyl\>\"", "<>", "equationNumber"}], "  ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<cotton\>\"", "<>", "equationNumber"}]}], "  ", 
        "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"ToMetric", "[", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{"metricName", ",", " ", "displayName"}], " ", "}"}], " ", 
         ",", " ", "variables", ",", " ", "equation", ",", " ", "indices"}], 
        " ", "]"}]}], " ", ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "  ", "=", " ", "\[IndentingNewLine]", 
       RowBox[{"ChristoffelSymbol", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], "]"}]}], " ", ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "3", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"RiemannTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWithNested", "\[Rule]", " ", "Simplify"}]}], " ", 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "4", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"RicciTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}]}], " ",
       ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "5", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"RicciScalar", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}]}], " ",
       ";", "\[IndentingNewLine]", " ", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "6", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"KretschmannScalar", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], "]"}]}], " ", ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "7", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"EinsteinTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], "]"}]}], " ", ";",
       "  ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "8", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"WeylTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}]}], " ",
       ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensorList", "[", 
        RowBox[{"[", "9", "]"}], "]"}], " ", "=", " ", "\[IndentingNewLine]", 
       
       RowBox[{"CottonTensor", "[", " ", 
        RowBox[{
         RowBox[{"tensorList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
         RowBox[{"ActWith", "\[Rule]", " ", "Simplify"}]}], " ", "]"}]}], " ",
       ";"}]}], " ", "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820937492203251*^9, 3.821110229350912*^9, {3.824381686137444*^9, 
   3.824381701791286*^9}, {3.824382212611581*^9, 3.824382216339905*^9}, {
   3.8243823186862707`*^9, 3.824382322501081*^9}, {3.82473366270198*^9, 
   3.8247336693604918`*^9}, 3.825331929181265*^9},
 CellLabel->"In[27]:=",ExpressionUUID->"5901a2fd-4196-401f-8744-35bbeb7949bf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Last", " ", "timing", " ", "took", " ", "7.89", " ", "for", " ", "all", 
    " ", "tensors"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"input", "[", " ", 
    RowBox[{
    "\"\<metric4pt4\>\"", ",", " ", "metric4pt4", ",", " ", 
     "\"\<PlaneSymmetric\>\"", ",", 
     "\"\<\!\(\*SuperscriptBox[\(g\), \(ps\)]\)\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"T", ",", "z", ",", "x", ",", "y"}], "}"}], ",", " ", 
     "\"\<Greek\>\""}], "]"}], " ", "//", " ", "Timing"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820937492203436*^9, 3.821110229350998*^9, {3.822307281934704*^9, 
   3.822307303605431*^9}, {3.8243818575378323`*^9, 3.82438186818433*^9}, {
   3.824513580589107*^9, 3.824513589908223*^9}, {3.824733689894292*^9, 
   3.824733714540913*^9}, {3.824733764046405*^9, 3.824733774116453*^9}, 
   3.825331929181364*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"8f141b5e-f4a3-4611-9d08-eadbbfbe99ca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7.367941`", ",", "Null"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.82473371607973*^9, 3.824733723828765*^9}, 
   3.8247337594027243`*^9, 3.82533192918147*^9, 3.8450288463597183`*^9, 
   3.856292480136849*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"b67cbbed-a899-4634-a6ee-0454f97b35a7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "1", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.82093459847665*^9, 3.820934601699522*^9}, 
   3.8209374922041063`*^9, 3.821110229351385*^9, 3.824373536864387*^9, 
   3.824381939541588*^9, 3.8253319291815434`*^9},
 CellLabel->"In[30]:=",ExpressionUUID->"3c55a2ec-7ae9-4247-8496-b2cc336e0fec"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox[
   SuperscriptBox["g", "ps"], "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.820934602303184*^9, 3.820937492204216*^9, 
  3.821110229351462*^9, 3.824373536864538*^9, 3.824381620924634*^9, 
  3.8243818501805983`*^9, 3.824381939541747*^9, 3.824511842173975*^9, 
  3.824514167840876*^9, 3.824733805699059*^9, 3.825331929181624*^9, 
  3.845028846499509*^9, 3.856292480301504*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"11e47ed0-cd13-45d4-a838-5dc8c2b21911"],

Cell[BoxData["\<\"PlaneSymmetric\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.820934602303184*^9, 3.820937492204216*^9, 
  3.821110229351462*^9, 3.824373536864538*^9, 3.824381620924634*^9, 
  3.8243818501805983`*^9, 3.824381939541747*^9, 3.824511842173975*^9, 
  3.824514167840876*^9, 3.824733805699059*^9, 3.825331929181624*^9, 
  3.845028846499509*^9, 3.856292480307156*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"cfff5790-b3f0-42cd-a588-6e0d388d027b"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "z"}], ")"}], "-", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}]]}], "0", "0", "0"},
      {"0", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"\[Gamma]", "(", 
          RowBox[{"T", ",", "z"}], ")"}], "-", 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "z"}], ")"}]}]], "0", "0"},
      {"0", "0", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Psi]", "(", 
         RowBox[{"T", ",", "z"}], ")"}]], "0"},
      {"0", "0", "0", 
       RowBox[{
        SuperscriptBox["T", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}]]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.820934602303184*^9, 3.820937492204216*^9, 
  3.821110229351462*^9, 3.824373536864538*^9, 3.824381620924634*^9, 
  3.8243818501805983`*^9, 3.824381939541747*^9, 3.824511842173975*^9, 
  3.824514167840876*^9, 3.824733805699059*^9, 3.825331929181624*^9, 
  3.845028846499509*^9, 3.856292480310349*^9},
 CellLabel->
  "Out[32]//TraditionalForm=",ExpressionUUID->"d323223a-d2ab-4cdc-ab07-\
9ff603d2ff44"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "2", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.820934553796588*^9, 3.820934587380786*^9}, 
   3.8209374922046547`*^9, 3.821110229351994*^9, 3.824373536864839*^9, 
   3.824381939542098*^9, 3.825331929181857*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"f18838d4-6439-49d2-a294-646f67134c8c"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["\[CapitalGamma]", 
   RowBox[{"  ", "\[Beta]\[Gamma]"}], 
   RowBox[{"\[Alpha]", "    "}]],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820932775595148*^9, 3.8209334480804567`*^9, {3.8209345574198027`*^9, 
   3.820934588189248*^9}, 3.82093749220476*^9, 3.821110229352072*^9, 
   3.824373536864976*^9, 3.8243816209856853`*^9, 3.824381850238319*^9, 
   3.8243819395421953`*^9, 3.8245118422163897`*^9, 3.8245141678935013`*^9, 
   3.824733807930147*^9, 3.8253319291819487`*^9, 3.8450288465468273`*^9, 
   3.856292480331707*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"ba1a3389-d414-4378-85e6-d79fa32c4ce2"],

Cell[BoxData["\<\"ChristoffelSymbolPlaneSymmetric\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820932775595148*^9, 3.8209334480804567`*^9, {3.8209345574198027`*^9, 
   3.820934588189248*^9}, 3.82093749220476*^9, 3.821110229352072*^9, 
   3.824373536864976*^9, 3.8243816209856853`*^9, 3.824381850238319*^9, 
   3.8243819395421953`*^9, 3.8245118422163897`*^9, 3.8245141678935013`*^9, 
   3.824733807930147*^9, 3.8253319291819487`*^9, 3.8450288465468273`*^9, 
   3.856292480337008*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"6677525a-2a33-498b-aed7-88080e835e21"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], "-", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], ")"}]}]},
           {
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], "-", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None]}], ")"}]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], "-", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None]}], ")"}]}]},
           {
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], "-", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], ")"}]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}], "-", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], " ", "T", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", "2"}], ")"}]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], "-", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None]}], ")"}]}]},
           {
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], "-", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], ")"}]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], "-", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], ")"}]}]},
           {
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], "-", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None]}], ")"}]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}], "-", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "z"}],
              MultilineFunction->None]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["T", "2"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "z"}],
              MultilineFunction->None]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{
             FractionBox["1", "2"], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            RowBox[{
             FractionBox["1", "2"], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "z"}],
              MultilineFunction->None]}]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{
             FractionBox["1", "2"], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None]}]},
           {
            RowBox[{
             FractionBox["1", "2"], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "z"}],
              MultilineFunction->None]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{
             FractionBox["1", "T"], "-", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}], 
               RowBox[{"\[PartialD]", "T"}],
               MultilineFunction->None]}]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "z"}],
              MultilineFunction->None]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{
             FractionBox["1", "T"], "-", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}], 
               RowBox[{"\[PartialD]", "T"}],
               MultilineFunction->None]}]}]},
           {
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "z"}],
              MultilineFunction->None]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820932775595148*^9, 3.8209334480804567`*^9, {3.8209345574198027`*^9, 
   3.820934588189248*^9}, 3.82093749220476*^9, 3.821110229352072*^9, 
   3.824373536864976*^9, 3.8243816209856853`*^9, 3.824381850238319*^9, 
   3.8243819395421953`*^9, 3.8245118422163897`*^9, 3.8245141678935013`*^9, 
   3.824733807930147*^9, 3.8253319291819487`*^9, 3.8450288465468273`*^9, 
   3.856292480394106*^9},
 CellLabel->
  "Out[35]//TraditionalForm=",ExpressionUUID->"29158a66-9ade-4202-925a-\
f8cde2bab5e1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "3", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.82093461950063*^9, 3.820934623299252*^9}, 
   3.820937492205227*^9, 3.821110229352274*^9, 3.8243735368652897`*^9, 
   3.824381939542493*^9, 3.8253319291821537`*^9},
 CellLabel->"In[36]:=",ExpressionUUID->"668406e5-9689-4e09-b261-a39e9317fab8"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["R", "\[Alpha]\[Beta]\[Gamma]\[Delta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.820934623837241*^9, 3.820937492205323*^9, 
  3.821110229352366*^9, 3.824373536865405*^9, 3.824381621264045*^9, 
  3.824381850457645*^9, 3.824381939542604*^9, 3.8245118424513693`*^9, 
  3.8245141681144238`*^9, 3.824733811593701*^9, 3.825331929182232*^9, 
  3.845028846622113*^9, 3.856292480448591*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"ecd4f65c-59b1-435f-936a-1eb9b1eef9be"],

Cell[BoxData["\<\"RiemannTensorPlaneSymmetric\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.820934623837241*^9, 3.820937492205323*^9, 
  3.821110229352366*^9, 3.824373536865405*^9, 3.824381621264045*^9, 
  3.824381850457645*^9, 3.824381939542604*^9, 3.8245118424513693`*^9, 
  3.8245141681144238`*^9, 3.824733811593701*^9, 3.825331929182232*^9, 
  3.845028846622113*^9, 3.85629248045396*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"627fd60e-53f8-449e-a6a1-57be3da99a1e"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "z"}], ")"}], "-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["z", "2"]}],
               MultilineFunction->None], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["z", "2"]}],
               MultilineFunction->None]}], ")"}]}], "0", "0"},
          {
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "z"}], ")"}], "-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["z", "2"]}],
               MultilineFunction->None], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["z", "2"]}],
               MultilineFunction->None]}], ")"}]}], "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{
            FractionBox["1", "4"], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None], ")"}], "2"]}], ")"}]}], "0"},
          {"0", "0", 
           RowBox[{
            FractionBox["1", "4"], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "z"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], "0"},
          {
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None], ")"}], "2"]}], ")"}]}], 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "z"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}]}], ")"}]}]},
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "z"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"T", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", "2"}], ")"}]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], ")"}]}]}], ")"}]}]},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            FractionBox["1", "4"], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}]}], ")"}]}], 
           RowBox[{
            FractionBox["1", "4"], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "z"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"T", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", "2"}], ")"}]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], ")"}]}]}], ")"}]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "z"}], ")"}], "-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["z", "2"]}],
               MultilineFunction->None], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["z", "2"]}],
               MultilineFunction->None]}], ")"}]}], "0", "0"},
          {
           RowBox[{
            FractionBox["1", "2"], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "z"}], ")"}], "-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["z", "2"]}],
               MultilineFunction->None], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["z", "2"]}],
               MultilineFunction->None]}], ")"}]}], "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{
            FractionBox["1", "4"], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "z"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], "0"},
          {"0", "0", 
           RowBox[{
            FractionBox["1", "4"], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None]}], "-", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], ")"}], "2"], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "0"},
          {
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "z"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None]}], "-", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], ")"}], "2"], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "0", 
           "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "z"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"T", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", "2"}], ")"}]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], ")"}]}]}], ")"}]}]},
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"T", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", "2"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], ")"}]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None]}]}], ")"}]}]},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            FractionBox["1", "4"], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "z"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"T", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", "2"}], ")"}]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], ")"}]}]}], ")"}]}], 
           RowBox[{
            FractionBox["1", "4"], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"T", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", "2"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], ")"}]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None]}]}], ")"}]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None], ")"}], "2"]}], ")"}]}], "0"},
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "z"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], "0"},
          {
           RowBox[{
            FractionBox["1", "4"], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None], ")"}], "2"]}], ")"}]}], 
           RowBox[{
            FractionBox["1", "4"], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "z"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "z"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], "0"},
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None]}], "-", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], ")"}], "2"], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "0"},
          {
           RowBox[{
            FractionBox["1", "4"], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "z"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"3", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
           RowBox[{
            FractionBox["1", "4"], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None]}], "-", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], ")"}], "2"], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "0", 
           "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{
            FractionBox["1", "4"], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}], "-", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"T", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}]},
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}], "-", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"T", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{
            FractionBox["1", "4"], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}]}], ")"}]}]},
          {"0", "0", "0", 
           RowBox[{
            FractionBox["1", "4"], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "z"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"T", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", "2"}], ")"}]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], ")"}]}]}], ")"}]}]},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}]}], ")"}]}], 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "z"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"T", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", "2"}], ")"}]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], ")"}]}]}], ")"}]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{
            FractionBox["1", "4"], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "z"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"T", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", "2"}], ")"}]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], ")"}]}]}], ")"}]}]},
          {"0", "0", "0", 
           RowBox[{
            FractionBox["1", "4"], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"T", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", "2"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], ")"}]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None]}]}], ")"}]}]},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "z"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"T", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", "2"}], ")"}]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], ")"}]}]}], ")"}]}], 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"T", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", "2"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], ")"}]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None]}]}], ")"}]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}], "-", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"T", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}]},
          {"0", "0", 
           RowBox[{
            FractionBox["1", "4"], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}], "-", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"T", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.820934623837241*^9, 3.820937492205323*^9, 
  3.821110229352366*^9, 3.824373536865405*^9, 3.824381621264045*^9, 
  3.824381850457645*^9, 3.824381939542604*^9, 3.8245118424513693`*^9, 
  3.8245141681144238`*^9, 3.824733811593701*^9, 3.825331929182232*^9, 
  3.845028846622113*^9, 3.8562924809668627`*^9},
 CellLabel->
  "Out[38]//TraditionalForm=",ExpressionUUID->"f5835cbb-646c-4fec-b75b-\
ec3ac3221b54"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "4", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "4", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.820934641180434*^9, 3.820934644683545*^9}, 
   3.820937492205658*^9, 3.821110229352577*^9, 3.8243735368657513`*^9, 
   3.8243819395429*^9, 3.825331929182467*^9},
 CellLabel->"In[39]:=",ExpressionUUID->"66789270-7672-4787-b7c9-058c990a0f5b"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["R", "\[Beta]\[Gamma]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.820934645395719*^9, 3.8209374922057543`*^9, 
  3.82111022935266*^9, 3.8243735368658533`*^9, 3.824381626124463*^9, 
  3.824381854371036*^9, 3.824381939543002*^9, 3.824511846625956*^9, 
  3.8245141719213133`*^9, 3.8247338147543383`*^9, 3.825331929182549*^9, 
  3.8450288472625504`*^9, 3.856292481013126*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"75d4ebe8-bfe2-4e4f-a13f-9595bcb4ae51"],

Cell[BoxData["\<\"RicciTensorPlaneSymmetric\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.820934645395719*^9, 3.8209374922057543`*^9, 
  3.82111022935266*^9, 3.8243735368658533`*^9, 3.824381626124463*^9, 
  3.824381854371036*^9, 3.824381939543002*^9, 3.824511846625956*^9, 
  3.8245141719213133`*^9, 3.8247338147543383`*^9, 3.825331929182549*^9, 
  3.8450288472625504`*^9, 3.856292481019004*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"a94f4ff9-b477-413e-bb6c-6a7ea64b5eed"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       FractionBox[
        RowBox[{
         RowBox[{"-", 
          RowBox[{"T", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["T", "2"]}],
            MultilineFunction->None]}]}], "+", 
         RowBox[{"T", " ", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["T", "2"]}],
           MultilineFunction->None]}], "+", 
         RowBox[{"T", " ", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["z", "2"]}],
           MultilineFunction->None]}], "-", 
         RowBox[{"T", " ", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["z", "2"]}],
           MultilineFunction->None]}], "+", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"T", ",", "z"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None], "-", 
         RowBox[{"T", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None], ")"}], "2"]}], "+", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"T", ",", "z"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None]}], 
        RowBox[{"2", " ", "T"}]], 
       FractionBox[
        RowBox[{
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"T", ",", "z"}], ")"}]}], 
          RowBox[{"\[PartialD]", "z"}],
          MultilineFunction->None], "-", 
         RowBox[{"T", " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "z"}],
           MultilineFunction->None]}]}], 
        RowBox[{"2", " ", "T"}]], "0", "0"},
      {
       FractionBox[
        RowBox[{
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"T", ",", "z"}], ")"}]}], 
          RowBox[{"\[PartialD]", "z"}],
          MultilineFunction->None], "-", 
         RowBox[{"T", " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "z"}],
           MultilineFunction->None]}]}], 
        RowBox[{"2", " ", "T"}]], 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"T", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["T", "2"]}],
             MultilineFunction->None]}]}], "+", 
          RowBox[{"T", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["T", "2"]}],
            MultilineFunction->None]}], "+", 
          RowBox[{"T", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["z", "2"]}],
            MultilineFunction->None]}], "-", 
          RowBox[{"T", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["z", "2"]}],
            MultilineFunction->None]}], "-", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], "+", 
          RowBox[{"T", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "z"}],
              MultilineFunction->None], ")"}], "2"]}], "+", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None]}], 
         RowBox[{"2", " ", "T"}]]}], "0", "0"},
      {"0", "0", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], "-", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"T", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["T", "2"]}],
             MultilineFunction->None]}], "-", 
           RowBox[{"T", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["z", "2"]}],
             MultilineFunction->None]}], "+", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]}], 
            RowBox[{"\[PartialD]", "T"}],
            MultilineFunction->None]}], ")"}]}], 
        RowBox[{"2", " ", "T"}]], "0"},
      {"0", "0", "0", 
       RowBox[{
        FractionBox["1", "2"], " ", "T", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"T", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["T", "2"]}],
             MultilineFunction->None]}]}], "+", 
          RowBox[{"T", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["z", "2"]}],
            MultilineFunction->None]}], "-", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None]}], ")"}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.820934645395719*^9, 3.8209374922057543`*^9, 
  3.82111022935266*^9, 3.8243735368658533`*^9, 3.824381626124463*^9, 
  3.824381854371036*^9, 3.824381939543002*^9, 3.824511846625956*^9, 
  3.8245141719213133`*^9, 3.8247338147543383`*^9, 3.825331929182549*^9, 
  3.8450288472625504`*^9, 3.856292481063431*^9},
 CellLabel->
  "Out[41]//TraditionalForm=",ExpressionUUID->"d1a77fab-d6ed-41a4-9f74-\
eb93f866527f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "5", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "5", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "5", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.820934650372052*^9, 3.820934653739538*^9}, 
   3.820937492206099*^9, 3.821110229352878*^9, 3.824373536866138*^9, 
   3.82438193954329*^9, 3.8253319291827803`*^9},
 CellLabel->"In[42]:=",ExpressionUUID->"7c6817ef-95a1-4e7f-b0fd-7a6831fbfd4e"],

Cell[BoxData[
 TagBox["\<\"R\"\>",
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.8209346543102093`*^9, 3.820937492206188*^9, 
  3.821110229352955*^9, 3.82437353686622*^9, 3.8243816263835297`*^9, 
  3.824381854615872*^9, 3.8243819395433826`*^9, 3.824511846864684*^9, 
  3.824514172146737*^9, 3.824733817441667*^9, 3.8253319291828613`*^9, 
  3.845028847347643*^9, 3.8562924810803432`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"c4c1fdfd-a14f-43b7-9315-50fae2b41bd0"],

Cell[BoxData["\<\"RicciScalarPlaneSymmetric\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.8209346543102093`*^9, 3.820937492206188*^9, 
  3.821110229352955*^9, 3.82437353686622*^9, 3.8243816263835297`*^9, 
  3.824381854615872*^9, 3.8243819395433826`*^9, 3.824511846864684*^9, 
  3.824514172146737*^9, 3.824733817441667*^9, 3.8253319291828613`*^9, 
  3.845028847347643*^9, 3.856292481085428*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"e9921878-20ec-4488-ae77-09f88a089066"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"\[Psi]", "(", 
         RowBox[{"T", ",", "z"}], ")"}], "-", 
        RowBox[{"\[Gamma]", "(", 
         RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"2", " ", "T", " ", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["T", "2"]}],
           MultilineFunction->None]}]}], "+", 
        RowBox[{"2", " ", "T", " ", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"T", ",", "z"}], ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["T", "2"]}],
          MultilineFunction->None]}], "+", 
        RowBox[{"2", " ", "T", " ", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"T", ",", "z"}], ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["z", "2"]}],
          MultilineFunction->None]}], "-", 
        RowBox[{"2", " ", "T", " ", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"T", ",", "z"}], ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["z", "2"]}],
          MultilineFunction->None]}], "-", 
        RowBox[{"T", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]}], 
            RowBox[{"\[PartialD]", "T"}],
            MultilineFunction->None], ")"}], "2"]}], "+", 
        RowBox[{"2", " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"T", ",", "z"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None]}], "+", 
        RowBox[{"T", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]}], 
            RowBox[{"\[PartialD]", "z"}],
            MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
     RowBox[{"2", " ", "T"}]]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.8209346543102093`*^9, 3.820937492206188*^9, 
  3.821110229352955*^9, 3.82437353686622*^9, 3.8243816263835297`*^9, 
  3.824381854615872*^9, 3.8243819395433826`*^9, 3.824511846864684*^9, 
  3.824514172146737*^9, 3.824733817441667*^9, 3.8253319291828613`*^9, 
  3.845028847347643*^9, 3.85629248111605*^9},
 CellLabel->
  "Out[44]//TraditionalForm=",ExpressionUUID->"e4e1bcd9-2aa6-4d26-917b-\
86900a8c6a98"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "6", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "6", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "6", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.824382031881773*^9, 3.824382035720847*^9}, 
   3.824382068120364*^9, 3.825331929183096*^9},
 CellLabel->"In[45]:=",ExpressionUUID->"293f9981-ed73-449b-ab25-79cf82c7429c"],

Cell[BoxData[
 TagBox["\<\"K\"\>",
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.82451184692048*^9, 3.824514172191423*^9, 
  3.824733819418199*^9, 3.825331929183179*^9, 3.845028847433971*^9, 
  3.856292481153433*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"a8bbd93f-613b-4d2c-9b35-ce1670da2abc"],

Cell[BoxData["\<\"KretschmannScalarPlaneSymmetric\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.82451184692048*^9, 3.824514172191423*^9, 
  3.824733819418199*^9, 3.825331929183179*^9, 3.845028847433971*^9, 
  3.8562924811594152`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"c9257902-84cd-4993-b22b-baace5513fb9"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", " ", 
      SuperscriptBox["T", "2"]}]], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"\[Psi]", "(", 
         RowBox[{"T", ",", "z"}], ")"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"\[Gamma]", "(", 
         RowBox[{"T", ",", "z"}], ")"}]}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"7", " ", 
        SuperscriptBox["T", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], ")"}], "4"]}], "-", 
       RowBox[{"8", " ", "T", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], ")"}], "3"]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["T", "2"], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], ")"}], "3"]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["T", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], ")"}], "2"]}], "+", 
       RowBox[{"4", " ", "T", " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], ")"}], "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["T", "2"], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], ")"}], "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["T", "2"], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["z", "2"]}],
         MultilineFunction->None], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], ")"}], "2"]}], "+", 
       RowBox[{"12", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], ")"}], "2"]}], "-", 
       RowBox[{"8", " ", "T", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], ")"}], "2"], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None]}], "+", 
       RowBox[{"8", " ", "T", " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["T", "2"], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None]}], "-", 
       RowBox[{"8", " ", "T", " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["z", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["T", "2"], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["z", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None]}], "+", 
       RowBox[{"7", " ", 
        SuperscriptBox["T", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "z"}],
           MultilineFunction->None], ")"}], "4"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], ")"}], "2"]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["T", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["T", "2"]}],
           MultilineFunction->None], ")"}], "2"]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["T", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["z", "2"]}],
           MultilineFunction->None], ")"}], "2"]}], "+", 
       RowBox[{"12", " ", 
        SuperscriptBox["T", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["T", "2"]}],
           MultilineFunction->None], ")"}], "2"]}], "+", 
       RowBox[{"12", " ", 
        SuperscriptBox["T", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["z", "2"]}],
           MultilineFunction->None], ")"}], "2"]}], "-", 
       RowBox[{"16", " ", 
        SuperscriptBox["T", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{
            RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
            RowBox[{"\[PartialD]", "z"}]}],
           MultilineFunction->None], ")"}], "2"]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["T", "2"], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["z", "2"]}],
         MultilineFunction->None]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "z"}],
           MultilineFunction->None], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["T", "2"]}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], ")"}], "2"]}], "+", 
          RowBox[{"2", " ", "T", " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]}], 
            RowBox[{"\[PartialD]", "T"}],
            MultilineFunction->None]}], "+", 
          RowBox[{
           SuperscriptBox["T", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "z"}],
              MultilineFunction->None], ")"}], "2"]}], "-", "2"}], ")"}]}], 
       "+", 
       RowBox[{"8", " ", "T", " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["T", "2"], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["T", "2"], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["z", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None]}], "+", 
       RowBox[{"8", " ", "T", " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["z", "2"]}],
         MultilineFunction->None]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["T", "2"], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["z", "2"]}],
         MultilineFunction->None]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["T", "2"], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["z", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["z", "2"]}],
         MultilineFunction->None]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["T", "2"], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["z", "2"]}],
         MultilineFunction->None]}], "+", 
       RowBox[{"2", " ", "T", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "z"}],
           MultilineFunction->None], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "T", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], ")"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", "T", " ", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}], 
               RowBox[{"\[PartialD]", "T"}],
               MultilineFunction->None]}], "+", "2"}], ")"}], " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]}], 
            RowBox[{"\[PartialD]", "T"}],
            MultilineFunction->None]}], "-", 
          RowBox[{"7", " ", "T", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], ")"}], "2"]}], "+", 
          RowBox[{"4", " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]}], 
            RowBox[{"\[PartialD]", "T"}],
            MultilineFunction->None]}], "+", 
          RowBox[{"4", " ", "T", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["T", "2"]}],
            MultilineFunction->None]}], "+", 
          RowBox[{"4", " ", "T", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["z", "2"]}],
            MultilineFunction->None]}]}], ")"}]}], "+", 
       RowBox[{"16", " ", 
        SuperscriptBox["T", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], "-", 
          RowBox[{"2", " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]}], 
            RowBox[{"\[PartialD]", "T"}],
            MultilineFunction->None]}]}], ")"}], " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", "z"}],
         MultilineFunction->None], " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{
          RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
          RowBox[{"\[PartialD]", "z"}]}],
         MultilineFunction->None]}], "-", 
       RowBox[{"8", " ", "T", " ", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", "z"}],
         MultilineFunction->None], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"T", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "z"}],
              MultilineFunction->None], ")"}], "3"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "T"}], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], ")"}], "2"]}], "+", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], "+", 
             RowBox[{"T", " ", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None]}], "+", 
             RowBox[{"T", " ", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["z", "2"]}],
               MultilineFunction->None]}]}], ")"}], " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]}], 
            RowBox[{"\[PartialD]", "z"}],
            MultilineFunction->None]}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"T", " ", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}], 
               RowBox[{"\[PartialD]", "T"}],
               MultilineFunction->None]}], "-", "1"}], ")"}], " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]}], 
            RowBox[{
             RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
             RowBox[{"\[PartialD]", "z"}]}],
            MultilineFunction->None]}]}], ")"}]}]}], ")"}]}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.82451184692048*^9, 3.824514172191423*^9, 
  3.824733819418199*^9, 3.825331929183179*^9, 3.845028847433971*^9, 
  3.8562924811678677`*^9},
 CellLabel->
  "Out[47]//TraditionalForm=",ExpressionUUID->"101961a0-8d56-44c4-87ac-\
04ff00249815"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "7", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "7", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "7", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.8243818880356607`*^9, 3.824381891296851*^9}, 
   3.82438193954393*^9, {3.824382052340536*^9, 3.824382068120544*^9}, 
   3.8253319291834*^9},
 CellLabel->"In[48]:=",ExpressionUUID->"c5f30601-2b4b-4095-92b8-40ef855d6ed2"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["G", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.824381892203912*^9, 3.824381939544029*^9, {3.824382052340662*^9, 
   3.8243820681206617`*^9}, 3.82451184696933*^9, 3.824514172248722*^9, 
   3.824733791852929*^9, 3.824733822154356*^9, 3.825331929183482*^9, 
   3.845028847510028*^9, 3.856292481241254*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"e94be075-c2dc-481a-b8a7-c1fe4fef2ccf"],

Cell[BoxData["\<\"EinsteinTensorPlaneSymmetric\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.824381892203912*^9, 3.824381939544029*^9, {3.824382052340662*^9, 
   3.8243820681206617`*^9}, 3.82451184696933*^9, 3.824514172248722*^9, 
   3.824733791852929*^9, 3.824733822154356*^9, 3.825331929183482*^9, 
   3.845028847510028*^9, 3.856292481246463*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"3b2945a0-625b-4d3e-8047-d6f91b7fcc35"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"2", " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None]}]}], "+", 
          RowBox[{"T", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], ")"}], "2"]}], "+", 
          RowBox[{"T", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "z"}],
              MultilineFunction->None], ")"}], "2"]}]}], 
         RowBox[{"4", " ", "T"}]]}], 
       FractionBox[
        RowBox[{
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"T", ",", "z"}], ")"}]}], 
          RowBox[{"\[PartialD]", "z"}],
          MultilineFunction->None], "-", 
         RowBox[{"T", " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "z"}],
           MultilineFunction->None]}]}], 
        RowBox[{"2", " ", "T"}]], "0", "0"},
      {
       FractionBox[
        RowBox[{
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"T", ",", "z"}], ")"}]}], 
          RowBox[{"\[PartialD]", "z"}],
          MultilineFunction->None], "-", 
         RowBox[{"T", " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "z"}],
           MultilineFunction->None]}]}], 
        RowBox[{"2", " ", "T"}]], 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"2", " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None]}]}], "+", 
          RowBox[{"T", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], ")"}], "2"]}], "+", 
          RowBox[{"T", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "z"}],
              MultilineFunction->None], ")"}], "2"]}]}], 
         RowBox[{"4", " ", "T"}]]}], "0", "0"},
      {"0", "0", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], "-", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", "T", " ", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[PartialD]", "2"], 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", 
               SuperscriptBox["T", "2"]}],
              MultilineFunction->None]}]}], "+", 
           RowBox[{"4", " ", "T", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["T", "2"]}],
             MultilineFunction->None]}], "+", 
           RowBox[{"2", " ", "T", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["z", "2"]}],
             MultilineFunction->None]}], "-", 
           RowBox[{"4", " ", "T", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["z", "2"]}],
             MultilineFunction->None]}], "-", 
           RowBox[{"T", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}], 
               RowBox[{"\[PartialD]", "T"}],
               MultilineFunction->None], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None]}], "+", 
           RowBox[{"T", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}], 
               RowBox[{"\[PartialD]", "z"}],
               MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
        RowBox[{"4", " ", "T"}]], "0"},
      {"0", "0", "0", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        SuperscriptBox["T", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"2", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["T", "2"]}],
             MultilineFunction->None]}]}], "+", 
          RowBox[{"2", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["z", "2"]}],
            MultilineFunction->None]}], "-", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", "z"}],
             MultilineFunction->None], ")"}], "2"]}], ")"}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.824381892203912*^9, 3.824381939544029*^9, {3.824382052340662*^9, 
   3.8243820681206617`*^9}, 3.82451184696933*^9, 3.824514172248722*^9, 
   3.824733791852929*^9, 3.824733822154356*^9, 3.825331929183482*^9, 
   3.845028847510028*^9, 3.8562924812892323`*^9},
 CellLabel->
  "Out[50]//TraditionalForm=",ExpressionUUID->"f419e4d2-7797-4587-94e1-\
72ca3e61f351"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "8", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "8", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "8", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.82093465870828*^9, 3.820934665723707*^9}, 
   3.820937492206532*^9, 3.821110229353163*^9, 3.824373536866439*^9, 
   3.82438193954467*^9, {3.824382052340996*^9, 3.824382068120945*^9}, 
   3.82533192918371*^9},
 CellLabel->"In[51]:=",ExpressionUUID->"b65b647c-2f21-41e1-b60e-e150e680ae79"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["C", "\[Alpha]\[Beta]\[Gamma]\[Delta]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934666611442*^9, 3.820937492206628*^9, 3.821110229353245*^9, 
   3.824381626454548*^9, 3.824381854687508*^9, {3.824382052341096*^9, 
   3.8243820681210527`*^9}, 3.824511847219433*^9, 3.824514172561551*^9, 
   3.8247337919589443`*^9, 3.8247338247846193`*^9, 3.825331929183793*^9, 
   3.8450288475660954`*^9, 3.8562924813614264`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"819a118f-204c-4f7a-b17e-3291a8819b38"],

Cell[BoxData["\<\"WeylTensorPlaneSymmetric\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934666611442*^9, 3.820937492206628*^9, 3.821110229353245*^9, 
   3.824381626454548*^9, 3.824381854687508*^9, {3.824382052341096*^9, 
   3.8243820681210527`*^9}, 3.824511847219433*^9, 3.824514172561551*^9, 
   3.8247337919589443`*^9, 3.8247338247846193`*^9, 3.825331929183793*^9, 
   3.8450288475660954`*^9, 3.856292481366621*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"20a54e25-f2a0-4761-b247-2fe4512422a9"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}], "-", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"T", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"T", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"T", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["z", "2"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"T", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["z", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"T", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                RowBox[{"2", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"T", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "z"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
             RowBox[{"6", " ", "T"}]]}], "0", "0"},
          {
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "z"}], ")"}], "-", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"T", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"T", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "z"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
            RowBox[{"6", " ", "T"}]], "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"3", " ", "T", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"3", " ", "T", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"3", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", "T", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", "T", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "z"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
            RowBox[{"12", " ", "T"}]], "0"},
          {"0", "0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"2", " ", "T", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "z"}]}],
                  MultilineFunction->None]}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"T", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], "-", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
            RowBox[{"4", " ", "T"}]], "0"},
          {
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"T", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}]}], "+", 
               RowBox[{"4", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"3", " ", "T", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"3", " ", "T", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"3", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"4", " ", "T", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}], "-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", "T", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "z"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
            RowBox[{"12", " ", "T"}]], 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"2", " ", "T", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "z"}]}],
                   MultilineFunction->None]}]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"T", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
                RowBox[{"T", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], "-", 
                   RowBox[{"2", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
             RowBox[{"4", " ", "T"}]]}], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "12"]}], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}]}], "-", 
              RowBox[{"2", " ", "T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["z", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["z", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"3", " ", "T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"3", " ", "T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"3", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", "T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]},
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "z"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"T", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}]},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            FractionBox["1", "12"], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}]}], "-", 
              RowBox[{"2", " ", "T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["z", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["z", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"3", " ", "T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"3", " ", "T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"3", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", "T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
           RowBox[{
            FractionBox["1", "4"], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "z"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"T", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], "0", 
           "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "z"}], ")"}], "-", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"T", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"T", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "z"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
            RowBox[{"6", " ", "T"}]], "0", "0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}], "-", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"T", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"T", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"T", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["z", "2"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"T", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["z", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"T", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                RowBox[{"2", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"T", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "z"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
             RowBox[{"6", " ", "T"}]]}], "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"2", " ", "T", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "z"}]}],
                  MultilineFunction->None]}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"T", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], "-", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
            RowBox[{"4", " ", "T"}]], "0"},
          {"0", "0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"T", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}]}], "-", 
               RowBox[{"2", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"3", " ", "T", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"3", " ", "T", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"3", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", "T", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}], "-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", "T", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "z"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
            RowBox[{"12", " ", "T"}]], "0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"2", " ", "T", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "z"}]}],
                   MultilineFunction->None]}]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"T", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
                RowBox[{"T", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], "-", 
                   RowBox[{"2", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
             RowBox[{"4", " ", "T"}]]}], 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"4", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"3", " ", "T", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"3", " ", "T", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"3", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", "T", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"4", " ", "T", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "z"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
            RowBox[{"12", " ", "T"}]], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "z"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"T", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}]},
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "12"]}], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["z", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", "T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["z", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"3", " ", "T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"3", " ", "T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"3", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", "T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            FractionBox["1", "4"], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "z"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"T", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
           RowBox[{
            FractionBox["1", "12"], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["z", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", "T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["z", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"3", " ", "T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"3", " ", "T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"3", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", "T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"T", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}]}], "+", 
               RowBox[{"4", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"3", " ", "T", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"3", " ", "T", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"3", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"4", " ", "T", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}], "-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", "T", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "z"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
            RowBox[{"12", " ", "T"}]], "0"},
          {"0", "0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"2", " ", "T", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "z"}]}],
                   MultilineFunction->None]}]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"T", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
                RowBox[{"T", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], "-", 
                   RowBox[{"2", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
             RowBox[{"4", " ", "T"}]]}], "0"},
          {
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"3", " ", "T", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"3", " ", "T", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"3", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", "T", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", "T", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "z"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
            RowBox[{"12", " ", "T"}]], 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"2", " ", "T", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "z"}]}],
                  MultilineFunction->None]}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"T", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], "-", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
            RowBox[{"4", " ", "T"}]], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"2", " ", "T", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "z"}]}],
                   MultilineFunction->None]}]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"T", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
                RowBox[{"T", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], "-", 
                   RowBox[{"2", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
             RowBox[{"4", " ", "T"}]]}], "0"},
          {"0", "0", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"4", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"3", " ", "T", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"3", " ", "T", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"3", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", "T", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"4", " ", "T", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "z"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
            RowBox[{"12", " ", "T"}]], "0"},
          {
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"2", " ", "T", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "z"}]}],
                  MultilineFunction->None]}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"T", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], "-", 
                  RowBox[{"2", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
            RowBox[{"4", " ", "T"}]], 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"T", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}]}], "-", 
               RowBox[{"2", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"3", " ", "T", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"3", " ", "T", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"3", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", "T", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}], "-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", "T", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "z"}],
                   MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
            RowBox[{"12", " ", "T"}]], "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{
            FractionBox["1", "6"], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}], "-", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["z", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["z", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]},
          {"0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "6"]}], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}], "-", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["z", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["z", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{
            FractionBox["1", "12"], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}]}], "-", 
              RowBox[{"2", " ", "T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["z", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["z", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"3", " ", "T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"3", " ", "T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"3", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", "T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]},
          {"0", "0", "0", 
           RowBox[{
            FractionBox["1", "4"], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "z"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"T", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}]},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "12"]}], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}]}], "-", 
              RowBox[{"2", " ", "T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["z", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["z", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"3", " ", "T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"3", " ", "T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"3", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", "T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "z"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"T", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], "0", 
           "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           RowBox[{
            FractionBox["1", "4"], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "z"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"T", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}]},
          {"0", "0", "0", 
           RowBox[{
            FractionBox["1", "12"], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["z", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", "T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["z", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"3", " ", "T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"3", " ", "T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"3", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", "T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]},
          {"0", "0", "0", "0"},
          {
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "z"}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"T", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], "-", 
                 RowBox[{"2", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}]}], ")"}]}]}], ")"}]}], 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "12"]}], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["z", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", "T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["z", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"3", " ", "T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"3", " ", "T", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"3", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"4", " ", "T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", "T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "6"]}], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}], "-", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["z", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["z", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]},
          {"0", "0", 
           RowBox[{
            FractionBox["1", "6"], " ", "T", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}], "-", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["z", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["z", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{
  3.820934666611442*^9, 3.820937492206628*^9, 3.821110229353245*^9, 
   3.824381626454548*^9, 3.824381854687508*^9, {3.824382052341096*^9, 
   3.8243820681210527`*^9}, 3.824511847219433*^9, 3.824514172561551*^9, 
   3.8247337919589443`*^9, 3.8247338247846193`*^9, 3.825331929183793*^9, 
   3.8450288475660954`*^9, 3.856292482128602*^9},
 CellLabel->
  "Out[53]//TraditionalForm=",ExpressionUUID->"edeaed60-c3b8-4d3f-b6e7-\
0cf5101a6113"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensorList", "[", 
   RowBox[{"[", "9", "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorName", "[", 
   RowBox[{"tensorList", "[", 
    RowBox[{"[", "9", "]"}], "]"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorValues", "[", 
    RowBox[{"tensorList", "[", 
     RowBox[{"[", "9", "]"}], "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
  " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.824382043442072*^9, 3.824382068121275*^9}, 
   3.825331929184005*^9},
 CellLabel->"In[54]:=",ExpressionUUID->"2933b141-e35b-4dd1-86b9-a6cf0793efa1"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["C", "\[Alpha]\[Beta]\[Gamma]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.824733792906363*^9, 3.824733828707267*^9, 
  3.825331929184093*^9, 3.8450288486306057`*^9, 3.856292482231539*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"6db41e06-6858-4b45-a3c1-ca42d7b58b86"],

Cell[BoxData["\<\"CottonTensorPlaneSymmetric\"\>"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.824733792906363*^9, 3.824733828707267*^9, 
  3.825331929184093*^9, 3.8450288486306057`*^9, 3.8562924822366333`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"9e3869d8-4dc1-4e26-9dfe-dcb3fea7ca27"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {
            FractionBox[
             RowBox[{
              RowBox[{"T", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{"T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "z"}]}],
                    MultilineFunction->None]}]}], "+", 
                    RowBox[{"T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "z"}]}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"T", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "z"}]}],
                    MultilineFunction->None]}], "+", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "z"}]}],
                    MultilineFunction->None], "+", 
                    RowBox[{"T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "3"]}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "3"]}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "z"}],
                   MultilineFunction->None], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{"2", " ", "T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}]}], "+", 
                    RowBox[{"5", " ", "T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "+", 
                    RowBox[{"2", " ", "T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "2"]}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"3", " ", "T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "2"]}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"T", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                    RowBox[{"2", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
                 RowBox[{"T", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "z"}],
                    MultilineFunction->None], ")"}], "3"]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["T", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "2"]}],
                    MultilineFunction->None]}]}], "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["T", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["T", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["T", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{
                  SuperscriptBox["T", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                 RowBox[{
                  SuperscriptBox["T", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "z"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                 RowBox[{"2", " ", "T", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "+", "3"}], ")"}]}]}], 
             RowBox[{"6", " ", 
              SuperscriptBox["T", "2"]}]]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{
              RowBox[{"T", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "z"}]}],
                    MultilineFunction->None]}]}], "+", 
                    RowBox[{"T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "z"}]}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"T", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "z"}]}],
                    MultilineFunction->None]}], "+", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "z"}]}],
                    MultilineFunction->None], "+", 
                    RowBox[{"T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "3"]}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "3"]}],
                    MultilineFunction->None]}]}], ")"}]}]}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "z"}],
                   MultilineFunction->None], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"5", " ", "T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"2", " ", "T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "2"]}],
                    MultilineFunction->None]}], "+", 
                    RowBox[{"3", " ", "T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "2"]}],
                    MultilineFunction->None]}], "+", 
                    RowBox[{"T", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                    RowBox[{"2", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}], "-", 
                 RowBox[{"T", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "z"}],
                    MultilineFunction->None], ")"}], "3"]}]}], ")"}]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  SuperscriptBox["T", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["T", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["T", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["T", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{
                  SuperscriptBox["T", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], ")"}]}], "+", 
                 RowBox[{
                  SuperscriptBox["T", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "z"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                 RowBox[{"2", " ", "T", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", "3"}], ")"}]}]}], 
             RowBox[{"6", " ", 
              SuperscriptBox["T", "2"]}]]},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {
            FractionBox[
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox["T", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "3"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{
                 RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["T", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "3"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{
                 RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["T", "2"], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{
                 RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                 RowBox[{"\[PartialD]", "z"}]}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  SuperscriptBox["T", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["T", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["T", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{
                  SuperscriptBox["T", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                 RowBox[{
                  SuperscriptBox["T", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "z"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                 RowBox[{"2", " ", "T", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "+", "3"}], ")"}]}], "-", 
              RowBox[{"5", " ", 
               SuperscriptBox["T", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["z", "2"]}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["T", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"3", " ", "T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"3", " ", 
               SuperscriptBox["T", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", "T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{
               SuperscriptBox["T", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "3"]}], "+", 
              RowBox[{
               SuperscriptBox["T", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], ")"}], "2"], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["T", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "3"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "3"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["T", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "3"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "3"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["z", "2"]}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"2", " ", "T", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], "+", 
                 RowBox[{"2", " ", "T", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "+", "3"}], ")"}]}], "+", 
              RowBox[{"2", " ", "T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}]}], 
             RowBox[{"6", " ", 
              SuperscriptBox["T", "2"]}]]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{
              RowBox[{"-", 
               RowBox[{"2", " ", 
                SuperscriptBox["T", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "3"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["z", "2"]}]}],
                 MultilineFunction->None]}]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["T", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "3"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{
                 RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["T", "2"], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{
                 RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                 RowBox[{"\[PartialD]", "z"}]}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["T", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "2"]}],
                    MultilineFunction->None]}]}], "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["T", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["T", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                   MultilineFunction->None]}], "+", 
                 RowBox[{
                  SuperscriptBox["T", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], ")"}]}], "+", 
                 RowBox[{
                  SuperscriptBox["T", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "z"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                 RowBox[{"2", " ", "T", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", "3"}], ")"}]}], "+", 
              RowBox[{"5", " ", 
               SuperscriptBox["T", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["z", "2"]}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["T", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"3", " ", "T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox["T", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", "T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{
               SuperscriptBox["T", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "3"]}], "-", 
              RowBox[{
               SuperscriptBox["T", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], ")"}], "2"], " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["T", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "3"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "3"]}],
                MultilineFunction->None]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["T", "2"], " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "3"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "3"]}],
                MultilineFunction->None]}], "+", 
              RowBox[{"T", " ", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["z", "2"]}],
                MultilineFunction->None], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "T", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", 
                 RowBox[{"2", " ", "T", " ", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], "-", "3"}], ")"}]}], "-", 
              RowBox[{"2", " ", "T", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None]}]}], 
             RowBox[{"6", " ", 
              SuperscriptBox["T", "2"]}]]},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], "-", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["T", "2"], " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "2"]}]}],
                   MultilineFunction->None]}]}], "+", 
                RowBox[{"8", " ", 
                 SuperscriptBox["T", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "2"]}]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["T", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "z"}]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"5", " ", 
                 SuperscriptBox["T", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["z", "2"]}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"8", " ", 
                 SuperscriptBox["T", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["z", "2"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["T", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["z", "2"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"14", " ", 
                 SuperscriptBox["T", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["z", "2"]}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"5", " ", 
                 SuperscriptBox["T", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"8", " ", 
                 SuperscriptBox["T", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{
                 SuperscriptBox["T", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                RowBox[{
                 SuperscriptBox["T", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "z"}],
                    MultilineFunction->None], ")"}], "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], "-", 
                   RowBox[{"4", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["T", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"12", " ", 
                 SuperscriptBox["T", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"8", " ", "T", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"4", " ", 
                 SuperscriptBox["T", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "3"]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["T", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "3"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"8", " ", 
                 SuperscriptBox["T", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "3"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"5", " ", "T", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"3", " ", "T", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"14", " ", "T", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                RowBox[{"8", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             RowBox[{"12", " ", 
              SuperscriptBox["T", "2"]}]]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], "-", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "T", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "z"}]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"8", " ", "T", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "z"}]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"2", " ", "T", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "z"}]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"8", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "z"}]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"5", " ", "T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"14", " ", "T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"5", " ", "T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "2"]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"12", " ", "T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "2"]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"3", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"4", " ", "T", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                   RowBox[{"14", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"2", " ", "T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}]}], "+", 
                   RowBox[{"8", " ", "T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"2", " ", "T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "2"]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"8", " ", "T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "2"]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"T", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                   RowBox[{"5", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"T", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "z"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "-", 
                RowBox[{"2", " ", "T", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["z", "3"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"8", " ", "T", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["z", "3"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"4", " ", "T", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "z"}],
                    MultilineFunction->None], ")"}], "3"]}]}], ")"}]}], 
             RowBox[{"12", " ", "T"}]]},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], "-", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 SuperscriptBox["T", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "2"]}]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"8", " ", 
                 SuperscriptBox["T", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "2"]}]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["T", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "z"}]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"5", " ", 
                 SuperscriptBox["T", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["z", "2"]}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"8", " ", 
                 SuperscriptBox["T", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["z", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["T", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["z", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"14", " ", 
                 SuperscriptBox["T", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["z", "2"]}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"5", " ", 
                 SuperscriptBox["T", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"8", " ", 
                 SuperscriptBox["T", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{
                 SuperscriptBox["T", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                RowBox[{
                 SuperscriptBox["T", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "z"}],
                    MultilineFunction->None], ")"}], "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], "-", 
                   RowBox[{"4", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["T", "2"], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"12", " ", 
                 SuperscriptBox["T", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"8", " ", "T", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "2"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["T", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "3"]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["T", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "3"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"8", " ", 
                 SuperscriptBox["T", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["T", "3"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"5", " ", "T", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"3", " ", "T", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"14", " ", "T", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                RowBox[{"8", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None]}]}], ")"}]}], 
             RowBox[{"12", " ", 
              SuperscriptBox["T", "2"]}]]},
           {
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], "-", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"2", " ", "T", " ", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "z"}]}],
                   MultilineFunction->None]}]}], "+", 
                RowBox[{"8", " ", "T", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "z"}]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"2", " ", "T", " ", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "z"}]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"8", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "z"}]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"5", " ", "T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}]}], "+", 
                   RowBox[{"14", " ", "T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"5", " ", "T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "2"]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"12", " ", "T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "2"]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"3", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"4", " ", "T", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                   RowBox[{"14", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}], "+", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"8", " ", "T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"2", " ", "T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "2"]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"8", " ", "T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "2"]}],
                    MultilineFunction->None]}], "+", 
                   RowBox[{"T", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                   RowBox[{"5", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "-", 
                   RowBox[{"T", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "z"}],
                    MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], "+", 
                RowBox[{"2", " ", "T", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["z", "3"]}],
                  MultilineFunction->None]}], "-", 
                RowBox[{"8", " ", "T", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["z", "3"]}],
                  MultilineFunction->None]}], "+", 
                RowBox[{"4", " ", "T", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "z"}],
                    MultilineFunction->None], ")"}], "3"]}]}], ")"}]}], 
             RowBox[{"12", " ", "T"}]]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{
             FractionBox["1", "12"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["T", "2"], " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "3"], 
                   RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "2"]}]}],
                  MultilineFunction->None]}]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["T", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "3"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["z", "2"]}]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["T", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "z"}]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["T", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["T", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{
                SuperscriptBox["T", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["T", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{
                SuperscriptBox["T", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{
                SuperscriptBox["T", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "z"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"6", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["T", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"6", " ", 
                SuperscriptBox["T", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"4", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["T", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "3"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["T", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "z"}],
                   MultilineFunction->None], ")"}], "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["T", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "3"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "3"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["T", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "3"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "3"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "T", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"T", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "-", "6"}], ")"}]}], "-", 
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"3", " ", "T", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"6", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"10", " ", "T", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}], "-", 
               RowBox[{"4", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}]}], ")"}]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {
            RowBox[{
             FractionBox["1", "12"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"T", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "T", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "z"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", "T", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "z"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", "T", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "z"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "z"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "z"}],
                    MultilineFunction->None], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}]}], "+", 
                    RowBox[{"4", " ", "T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "+", 
                    RowBox[{"T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "2"]}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"6", " ", "T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "2"]}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"3", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"2", " ", "T", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                    RowBox[{"10", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}], "-", 
                  RowBox[{"2", " ", "T", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "3"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"4", " ", "T", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "3"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", "T", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "z"}],
                    MultilineFunction->None], ")"}], "3"]}]}], ")"}]}], "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", 
                   SuperscriptBox["T", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["T", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "2"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["T", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["T", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{
                   SuperscriptBox["T", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], ")"}]}], "+", 
                  RowBox[{
                   SuperscriptBox["T", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "z"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                  RowBox[{"T", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "-", "6"}], ")"}]}]}], ")"}]}]}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {"0"},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            RowBox[{
             FractionBox["1", "12"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox["T", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "3"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["z", "2"]}]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["T", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "3"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", 
                   SuperscriptBox["z", "2"]}]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["T", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "z"}]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["T", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["T", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{
                SuperscriptBox["T", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["T", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{
                SuperscriptBox["T", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}], "-", 
               RowBox[{
                SuperscriptBox["T", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "z"}],
                   MultilineFunction->None], ")"}], "2"]}], "-", 
               RowBox[{"6", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["T", "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"6", " ", 
                SuperscriptBox["T", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", "T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["T", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "3"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["T", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "z"}],
                   MultilineFunction->None], ")"}], "2"], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["T", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "3"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "3"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["T", "2"], " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "3"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "3"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "T", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"T", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "-", "6"}], ")"}]}], "+", 
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"3", " ", "T", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None], " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"6", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"10", " ", "T", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], ")"}], "2"]}], "+", 
               RowBox[{"4", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}]}], ")"}]}]},
           {
            RowBox[{
             FractionBox["1", "12"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"2", " ", 
                    SuperscriptBox["T", "2"], " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "2"]}],
                    MultilineFunction->None]}]}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["T", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["T", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["T", "2"], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{
                   SuperscriptBox["T", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "-", 
                  RowBox[{
                   SuperscriptBox["T", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "z"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                  RowBox[{"T", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "+", "6"}], ")"}]}], "-", 
               RowBox[{"T", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "T", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "z"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", "T", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "z"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", "T", " ", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "z"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"4", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{
                    RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                    RowBox[{"\[PartialD]", "z"}]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "z"}],
                    MultilineFunction->None], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}]}], "+", 
                    RowBox[{"4", " ", "T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["T", "2"]}],
                    MultilineFunction->None]}], "+", 
                    RowBox[{"T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "2"]}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"6", " ", "T", " ", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "2"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "2"]}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"3", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "-", 
                    RowBox[{"2", " ", "T", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None], ")"}], "2"]}], "+", 
                    RowBox[{"10", " ", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}]}], ")"}]}], "-", 
                  RowBox[{"2", " ", "T", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "3"]}],
                    MultilineFunction->None]}], "-", 
                  RowBox[{"4", " ", "T", " ", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "3"], 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", 
                    SuperscriptBox["z", "3"]}],
                    MultilineFunction->None]}], "+", 
                  RowBox[{"2", " ", "T", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "z"}],
                    MultilineFunction->None], ")"}], "3"]}]}], ")"}]}]}], 
              ")"}]}]},
           {"0"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{3.824733792906363*^9, 3.824733828707267*^9, 
  3.825331929184093*^9, 3.8450288486306057`*^9, 3.8562924829290333`*^9},
 CellLabel->
  "Out[56]//TraditionalForm=",ExpressionUUID->"4b79a654-ac19-4f9e-8028-\
6fb9e209a7b2"]
}, Closed]],

Cell[CellGroupData[{

Cell["Derivation of Field Equations For Metric 4.4", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.8253320110085707`*^9, 
  3.825332032109517*^9}},ExpressionUUID->"23d03466-a521-4038-8799-\
c582d3bc64b0"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "nonzeroRicci", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nonzeroRicci", " ", "=", "\[IndentingNewLine]", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Cases", "[", " ", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", " ", 
          RowBox[{
           RowBox[{"i", "<=", " ", "j"}], " ", ",", " ", 
           RowBox[{
            RowBox[{"TensorValues", "[", 
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", "Nothing"}], "]"}], 
         " ", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}], " ", ",", 
      " ", 
      RowBox[{"Except", "[", "0", "]"}]}], "]"}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nonzeroRicci", " ", "//", " ", "TableForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.824733839629765*^9, 3.824733895988633*^9}, 
   3.82533202031572*^9, {3.877540696667965*^9, 
   3.877540702099701*^9}},ExpressionUUID->"ed6157c7-f92e-4db3-8023-\
b33a091b3cb2"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       FractionBox[
        RowBox[{
         RowBox[{"-", 
          RowBox[{"T", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["T", "2"]}],
            MultilineFunction->None]}]}], "+", 
         RowBox[{"T", " ", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["T", "2"]}],
           MultilineFunction->None]}], "+", 
         RowBox[{"T", " ", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["z", "2"]}],
           MultilineFunction->None]}], "-", 
         RowBox[{"T", " ", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["z", "2"]}],
           MultilineFunction->None]}], "+", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"T", ",", "z"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None], "-", 
         RowBox[{"T", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None], ")"}], "2"]}], "+", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"T", ",", "z"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None]}], 
        RowBox[{"2", " ", "T"}]]},
      {
       FractionBox[
        RowBox[{
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"T", ",", "z"}], ")"}]}], 
          RowBox[{"\[PartialD]", "z"}],
          MultilineFunction->None], "-", 
         RowBox[{"T", " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "z"}],
           MultilineFunction->None]}]}], 
        RowBox[{"2", " ", "T"}]]},
      {
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"T", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["T", "2"]}],
             MultilineFunction->None]}]}], "+", 
          RowBox[{"T", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["T", "2"]}],
            MultilineFunction->None]}], "+", 
          RowBox[{"T", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["z", "2"]}],
            MultilineFunction->None]}], "-", 
          RowBox[{"T", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["z", "2"]}],
            MultilineFunction->None]}], "-", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], "+", 
          RowBox[{"T", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "z"}],
              MultilineFunction->None], ")"}], "2"]}], "+", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None]}], 
         RowBox[{"2", " ", "T"}]]}]},
      {
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], "-", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"T", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["T", "2"]}],
             MultilineFunction->None]}], "-", 
           RowBox[{"T", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["z", "2"]}],
             MultilineFunction->None]}], "+", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]}], 
            RowBox[{"\[PartialD]", "T"}],
            MultilineFunction->None]}], ")"}]}], 
        RowBox[{"2", " ", "T"}]]},
      {
       RowBox[{
        FractionBox["1", "2"], " ", "T", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"T", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["T", "2"]}],
             MultilineFunction->None]}]}], "+", 
          RowBox[{"T", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["z", "2"]}],
            MultilineFunction->None]}], "-", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None]}], ")"}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{3.824733896480851*^9, 3.825332020315838*^9, 
  3.845028849759803*^9, 3.845029077165362*^9, 3.856292483059958*^9},
 CellLabel->
  "Out[59]//TraditionalForm=",ExpressionUUID->"f9cc56ca-2949-4971-b101-\
23d74960438f"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "nonzeroEinstein", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nonzeroEinstein", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Cases", "[", " ", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", " ", 
          RowBox[{
           RowBox[{"i", "<=", " ", "j"}], " ", ",", " ", 
           RowBox[{
            RowBox[{"TensorValues", "[", 
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "7", "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", "Nothing"}], "]"}], 
         " ", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}], " ", ",", 
      " ", 
      RowBox[{"Except", "[", "0", "]"}]}], "]"}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nonzeroEinstein", " ", "//", " ", "TableForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.824733904293995*^9, 3.824733924028667*^9}, 
   3.825332020315969*^9, {3.877540708667881*^9, 
   3.877540713550733*^9}},ExpressionUUID->"ca1751d1-e79e-4967-bd0c-\
8e45a49657f0"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"2", " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None]}]}], "+", 
          RowBox[{"T", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], ")"}], "2"]}], "+", 
          RowBox[{"T", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "z"}],
              MultilineFunction->None], ")"}], "2"]}]}], 
         RowBox[{"4", " ", "T"}]]}]},
      {
       FractionBox[
        RowBox[{
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"T", ",", "z"}], ")"}]}], 
          RowBox[{"\[PartialD]", "z"}],
          MultilineFunction->None], "-", 
         RowBox[{"T", " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "T"}],
           MultilineFunction->None], " ", 
          FractionBox[
           RowBox[{"\[PartialD]", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", "z"}],
           MultilineFunction->None]}]}], 
        RowBox[{"2", " ", "T"}]]},
      {
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"-", 
           RowBox[{"2", " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None]}]}], "+", 
          RowBox[{"T", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], ")"}], "2"]}], "+", 
          RowBox[{"T", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "z"}],
              MultilineFunction->None], ")"}], "2"]}]}], 
         RowBox[{"4", " ", "T"}]]}]},
      {
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], "-", 
           RowBox[{"\[Gamma]", "(", 
            RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", "T", " ", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[PartialD]", "2"], 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", 
               SuperscriptBox["T", "2"]}],
              MultilineFunction->None]}]}], "+", 
           RowBox[{"4", " ", "T", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["T", "2"]}],
             MultilineFunction->None]}], "+", 
           RowBox[{"2", " ", "T", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["z", "2"]}],
             MultilineFunction->None]}], "-", 
           RowBox[{"4", " ", "T", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["z", "2"]}],
             MultilineFunction->None]}], "-", 
           RowBox[{"T", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}], 
               RowBox[{"\[PartialD]", "T"}],
               MultilineFunction->None], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None]}], "+", 
           RowBox[{"T", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}], 
               RowBox[{"\[PartialD]", "z"}],
               MultilineFunction->None], ")"}], "2"]}]}], ")"}]}], 
        RowBox[{"4", " ", "T"}]]},
      {
       RowBox[{
        FractionBox["1", "4"], " ", 
        SuperscriptBox["T", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"2", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", 
              SuperscriptBox["T", "2"]}],
             MultilineFunction->None]}]}], "+", 
          RowBox[{"2", " ", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[PartialD]", "2"], 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]}], 
            RowBox[{"\[PartialD]", 
             SuperscriptBox["z", "2"]}],
            MultilineFunction->None]}], "-", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", "z"}],
             MultilineFunction->None], ")"}], "2"]}], ")"}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{3.8247339251884747`*^9, 3.8253320203160353`*^9, 
  3.845028849832176*^9, 3.845029077268811*^9, 3.856292483121951*^9},
 CellLabel->
  "Out[62]//TraditionalForm=",ExpressionUUID->"ae903bc5-58d7-4081-bb87-\
5f9f02dafe6f"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq4pt5", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq4pt5", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Expand", "[", 
     RowBox[{
      RowBox[{"(", 
       FractionBox["1", 
        RowBox[{"4", " ", "T"}]], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"nonzeroEinstein", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "[", 
         RowBox[{"[", "4", "]"}], "]"}], " ", "-", 
        RowBox[{"Expand", "[", 
         RowBox[{"T", "*", 
          RowBox[{
           RowBox[{"nonzeroEinstein", "[", 
            RowBox[{"[", "5", "]"}], "]"}], "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], "]"}]}], " ", ")"}]}], "  ", 
     "]"}], " ", "\[Equal]", " ", "0"}]}], "   ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq4pt5", "  ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.824734117827838*^9, 3.824734137051468*^9}, {
   3.824734227006763*^9, 3.824734292904743*^9}, 3.82533202031642*^9, {
   3.845028708817894*^9, 3.8450287278102283`*^9}, {3.856292570507578*^9, 
   3.8562925733711767`*^9}, {3.8562926073711233`*^9, 3.8562926082128553`*^9}},
 
 CellLabel->
  "In[182]:=",ExpressionUUID->"1d0e8ce2-ff10-493e-94d8-34e16904fdcf"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["\[PartialD]", "2"], 
      RowBox[{"\[Psi]", "(", 
       RowBox[{"T", ",", "z"}], ")"}]}], 
     RowBox[{"\[PartialD]", 
      SuperscriptBox["T", "2"]}],
     MultilineFunction->None], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[PartialD]", "2"], 
      RowBox[{"\[Psi]", "(", 
       RowBox[{"T", ",", "z"}], ")"}]}], 
     RowBox[{"\[PartialD]", 
      SuperscriptBox["z", "2"]}],
     MultilineFunction->None], "+", 
    FractionBox[
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "z"}], ")"}]}], 
      RowBox[{"\[PartialD]", "T"}],
      MultilineFunction->None], "T"]}], "\[LongEqual]", "0"}], 
  TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{3.856292573671303*^9, 3.85629260858845*^9},
 CellLabel->
  "Out[184]//TraditionalForm=",ExpressionUUID->"1c21ea4a-8ccc-4db7-9e50-\
311806651444"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"Solve", "[", " ", 
      RowBox[{"eq4pt5", "  ", ",", " ", 
       RowBox[{
        SuperscriptBox["\[Psi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"T", ",", "z"}], "]"}]}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], " ", "//", " ", "Expand"}], "  ", "//", 
  " ", "pdConv"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.856292575612904*^9, 3.8562926057086897`*^9}},
 CellLabel->
  "In[181]:=",ExpressionUUID->"7cdb889f-fdfe-44f2-8290-b53c2f43e85f"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[PartialD]", "2"], 
     RowBox[{"\[Psi]", "(", 
      RowBox[{"T", ",", "z"}], ")"}]}], 
    RowBox[{"\[PartialD]", 
     SuperscriptBox["T", "2"]}],
    MultilineFunction->None], "\[Rule]", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["\[PartialD]", "2"], 
      RowBox[{"\[Psi]", "(", 
       RowBox[{"T", ",", "z"}], ")"}]}], 
     RowBox[{"\[PartialD]", 
      SuperscriptBox["z", "2"]}],
     MultilineFunction->None], "-", 
    FractionBox[
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "z"}], ")"}]}], 
      RowBox[{"\[PartialD]", "T"}],
      MultilineFunction->None], "T"]}]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.856292587342657*^9, 3.856292606053607*^9}},
 CellLabel->
  "Out[181]//TraditionalForm=",ExpressionUUID->"25db39a1-6690-4400-9495-\
58e8f7829579"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq4pt5b", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq4pt5b", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"nonzeroEinstein", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", " ", "0"}], " ", ",", 
        " ", 
        RowBox[{
         SuperscriptBox["\[Gamma]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"T", ",", "z"}], "]"}]}], "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], " ", "/.", " ", 
    RowBox[{"Rule", "\[Rule]", " ", "Equal"}]}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq4pt5b", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.824733934437275*^9, 3.8247339683967113`*^9}, 
   3.825332020316115*^9, {3.845028741586307*^9, 3.8450287566148233`*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"2c221b4b-33bc-4143-8026-c720b146eb50"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", 
     RowBox[{"\[Gamma]", "(", 
      RowBox[{"T", ",", "z"}], ")"}]}], 
    RowBox[{"\[PartialD]", "z"}],
    MultilineFunction->None], "\[LongEqual]", 
   RowBox[{"T", " ", 
    FractionBox[
     RowBox[{"\[PartialD]", 
      RowBox[{"\[Psi]", "(", 
       RowBox[{"T", ",", "z"}], ")"}]}], 
     RowBox[{"\[PartialD]", "T"}],
     MultilineFunction->None], " ", 
    FractionBox[
     RowBox[{"\[PartialD]", 
      RowBox[{"\[Psi]", "(", 
       RowBox[{"T", ",", "z"}], ")"}]}], 
     RowBox[{"\[PartialD]", "z"}],
     MultilineFunction->None]}]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.824733935129592*^9, 3.824733968985927*^9}, 
   3.825332020316187*^9, 3.8450288498992853`*^9, 3.845029077342601*^9, 
   3.8562924831925983`*^9},
 CellLabel->
  "Out[68]//TraditionalForm=",ExpressionUUID->"1467cac7-0cde-4b20-bfd0-\
290f04981ed8"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq4pt5c", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq4pt5c", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Solve", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Numerator", "[", " ", 
          RowBox[{"nonzeroEinstein", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "]"}], "\[Equal]", " ", "0"}],
         " ", ",", 
        RowBox[{
         SuperscriptBox["\[Gamma]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"T", ",", "z"}], "]"}]}], "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], " ", "/.", " ", 
    RowBox[{"Rule", "\[Rule]", " ", "Equal"}]}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq4pt5c", " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.82473398050937*^9, 3.824734092370447*^9}, 
   3.825332020316264*^9, {3.845028762545542*^9, 3.845028775065065*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"a0600688-7829-4132-b8c0-ad31526c66f8"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", 
     RowBox[{"\[Gamma]", "(", 
      RowBox[{"T", ",", "z"}], ")"}]}], 
    RowBox[{"\[PartialD]", "T"}],
    MultilineFunction->None], "\[LongEqual]", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"T", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"T", ",", "z"}], ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None], ")"}], "2"]}], "+", 
      RowBox[{"T", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"\[Psi]", "(", 
            RowBox[{"T", ",", "z"}], ")"}]}], 
          RowBox[{"\[PartialD]", "z"}],
          MultilineFunction->None], ")"}], "2"]}]}], ")"}]}]}], 
  TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.82473398196266*^9, 3.8247340930374737`*^9}, 
   3.825332020316337*^9, 3.845028849934443*^9, 3.845029077381062*^9, 
   3.856292483226541*^9},
 CellLabel->
  "Out[71]//TraditionalForm=",ExpressionUUID->"2e1b5389-67aa-4f7d-85c8-\
6aae4f076c8d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"eq4pt5b", ",", "T"}], "]"}], " ", "//", " ", "pdConv"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{"eq4pt5c", ",", "z"}], "]"}], " ", "//", " ", "pdConv", 
  " "}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.856292408605979*^9, 3.856292431964713*^9}, 
   3.8562927431537037`*^9},
 CellLabel->"In[72]:=",ExpressionUUID->"6a71b044-d553-4670-a73b-3aab6ec9f801"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[PartialD]", "2"], 
     RowBox[{"\[Gamma]", "(", 
      RowBox[{"T", ",", "z"}], ")"}]}], 
    RowBox[{
     RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
     RowBox[{"\[PartialD]", "z"}]}],
    MultilineFunction->None], "\[LongEqual]", 
   RowBox[{
    RowBox[{"T", " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "z"}], ")"}]}], 
      RowBox[{"\[PartialD]", "T"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "z"}], ")"}]}], 
      RowBox[{
       RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
       RowBox[{"\[PartialD]", "z"}]}],
      MultilineFunction->None]}], "+", 
    RowBox[{"T", " ", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "z"}], ")"}]}], 
      RowBox[{"\[PartialD]", 
       SuperscriptBox["T", "2"]}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "z"}], ")"}]}], 
      RowBox[{"\[PartialD]", "z"}],
      MultilineFunction->None]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "z"}], ")"}]}], 
      RowBox[{"\[PartialD]", "T"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "z"}], ")"}]}], 
      RowBox[{"\[PartialD]", "z"}],
      MultilineFunction->None]}]}]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{3.856292483260075*^9, 3.8562927431539383`*^9},
 CellLabel->
  "Out[72]//TraditionalForm=",ExpressionUUID->"8b4921d5-0bf7-40aa-8596-\
0c82f72955e6"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[PartialD]", "2"], 
     RowBox[{"\[Gamma]", "(", 
      RowBox[{"T", ",", "z"}], ")"}]}], 
    RowBox[{
     RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
     RowBox[{"\[PartialD]", "z"}]}],
    MultilineFunction->None], "\[LongEqual]", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "T", " ", 
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "z"}], ")"}]}], 
        RowBox[{"\[PartialD]", "T"}],
        MultilineFunction->None], " ", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[PartialD]", "2"], 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "z"}], ")"}]}], 
        RowBox[{
         RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
         RowBox[{"\[PartialD]", "z"}]}],
        MultilineFunction->None]}], "+", 
      RowBox[{"2", " ", "T", " ", 
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "z"}], ")"}]}], 
        RowBox[{"\[PartialD]", "z"}],
        MultilineFunction->None], " ", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[PartialD]", "2"], 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "z"}], ")"}]}], 
        RowBox[{"\[PartialD]", 
         SuperscriptBox["z", "2"]}],
        MultilineFunction->None]}]}], ")"}]}]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{3.856292483264182*^9, 3.8562927431541348`*^9},
 CellLabel->
  "Out[73]//TraditionalForm=",ExpressionUUID->"1aa91ac0-d99e-42bd-8303-\
d501339fbe78"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "compatabilityConditions", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"compatabilityConditions", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"eq4pt5b", ",", "T"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], " ", "==", " ", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"eq4pt5c", ",", "z"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}]}], "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"compatabilityConditions", " ", "//", " ", "pdConv", " "}]}], "Input",\

 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.856292437852625*^9, 3.856292491738392*^9}, 
   3.856292743154359*^9},
 CellLabel->
  "In[170]:=",ExpressionUUID->"34c128c6-4227-44f6-95c8-4d9372438fc9"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"T", " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "z"}], ")"}]}], 
      RowBox[{"\[PartialD]", "T"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "z"}], ")"}]}], 
      RowBox[{
       RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
       RowBox[{"\[PartialD]", "z"}]}],
      MultilineFunction->None]}], "+", 
    RowBox[{"T", " ", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "z"}], ")"}]}], 
      RowBox[{"\[PartialD]", 
       SuperscriptBox["T", "2"]}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "z"}], ")"}]}], 
      RowBox[{"\[PartialD]", "z"}],
      MultilineFunction->None]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "z"}], ")"}]}], 
      RowBox[{"\[PartialD]", "T"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "z"}], ")"}]}], 
      RowBox[{"\[PartialD]", "z"}],
      MultilineFunction->None]}]}], "\[LongEqual]", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "T", " ", 
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "z"}], ")"}]}], 
        RowBox[{"\[PartialD]", "T"}],
        MultilineFunction->None], " ", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[PartialD]", "2"], 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "z"}], ")"}]}], 
        RowBox[{
         RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
         RowBox[{"\[PartialD]", "z"}]}],
        MultilineFunction->None]}], "+", 
      RowBox[{"2", " ", "T", " ", 
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "z"}], ")"}]}], 
        RowBox[{"\[PartialD]", "z"}],
        MultilineFunction->None], " ", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[PartialD]", "2"], 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "z"}], ")"}]}], 
        RowBox[{"\[PartialD]", 
         SuperscriptBox["z", "2"]}],
        MultilineFunction->None]}]}], ")"}]}]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.856292483274746*^9, 3.8562924966136312`*^9}, 
   3.856292743154845*^9},
 CellLabel->
  "Out[172]//TraditionalForm=",ExpressionUUID->"8ab6bded-5be6-47c1-8cc1-\
20de5ebe4952"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Just", " ", "a", " ", "quick", " ", "check", " ", "to", " ", "make", " ",
      "sure", " ", 
     RowBox[{"we", "'"}], "ve", " ", "correctly", " ", "derived", " ", "the", 
     " ", "field", " ", "equations"}], "..."}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"compatabilityConditions", " ", "/.", " ", 
      RowBox[{"(", 
       RowBox[{"eq4pt5b", " ", "/.", " ", 
        RowBox[{"Equal", "->", " ", "Rule"}]}], " ", ")"}]}], "/.", " ", 
     RowBox[{"(", 
      RowBox[{"eq4pt5c", " ", "/.", " ", 
       RowBox[{"Equal", "->", " ", "Rule"}]}], " ", ")"}]}], " ", "//", " ", 
    "pdConv"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"compatabilityConditions", " ", "/.", " ", 
        RowBox[{"(", 
         RowBox[{"eq4pt5b", " ", "/.", " ", 
          RowBox[{"Equal", "->", " ", "Rule"}]}], " ", ")"}]}], "/.", " ", 
       RowBox[{"(", 
        RowBox[{"eq4pt5c", " ", "/.", " ", 
         RowBox[{"Equal", "->", " ", "Rule"}]}], " ", ")"}]}], "  ", "//", 
      " ", "Expand"}], " ", "//", " ", "Simplify"}], "  ", "//", " ", 
    "pdConv"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"compatabilityConditions", " ", "/.", " ", 
        RowBox[{"(", 
         RowBox[{"eq4pt5b", " ", "/.", " ", 
          RowBox[{"Equal", "->", " ", "Rule"}]}], " ", ")"}]}], "/.", " ", 
       RowBox[{"(", 
        RowBox[{"eq4pt5c", " ", "/.", " ", 
         RowBox[{"Equal", "->", " ", "Rule"}]}], " ", ")"}]}], " ", "/.", " ", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Solve", "[", " ", 
         RowBox[{"eq4pt5", "  ", ",", " ", 
          RowBox[{
           SuperscriptBox["\[Psi]", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"2", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"T", ",", "z"}], "]"}]}], "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], " ", "//", " ", "Expand"}], " ", "//",
     " ", "Simplify"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.856292616098639*^9, 3.8562927063232803`*^9}, 
   3.856292743155245*^9},
 CellLabel->
  "In[193]:=",ExpressionUUID->"2b0e568e-c96e-4488-b4c6-59c358d77d51"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"T", " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "z"}], ")"}]}], 
      RowBox[{"\[PartialD]", "T"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "z"}], ")"}]}], 
      RowBox[{
       RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
       RowBox[{"\[PartialD]", "z"}]}],
      MultilineFunction->None]}], "+", 
    RowBox[{"T", " ", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "z"}], ")"}]}], 
      RowBox[{"\[PartialD]", 
       SuperscriptBox["T", "2"]}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "z"}], ")"}]}], 
      RowBox[{"\[PartialD]", "z"}],
      MultilineFunction->None]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "z"}], ")"}]}], 
      RowBox[{"\[PartialD]", "T"}],
      MultilineFunction->None], " ", 
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "z"}], ")"}]}], 
      RowBox[{"\[PartialD]", "z"}],
      MultilineFunction->None]}]}], "\[LongEqual]", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "T", " ", 
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "z"}], ")"}]}], 
        RowBox[{"\[PartialD]", "T"}],
        MultilineFunction->None], " ", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[PartialD]", "2"], 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "z"}], ")"}]}], 
        RowBox[{
         RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
         RowBox[{"\[PartialD]", "z"}]}],
        MultilineFunction->None]}], "+", 
      RowBox[{"2", " ", "T", " ", 
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "z"}], ")"}]}], 
        RowBox[{"\[PartialD]", "z"}],
        MultilineFunction->None], " ", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[PartialD]", "2"], 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "z"}], ")"}]}], 
        RowBox[{"\[PartialD]", 
         SuperscriptBox["z", "2"]}],
        MultilineFunction->None]}]}], ")"}]}]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.85629264238419*^9, 3.856292657163344*^9}, {
   3.856292687770636*^9, 3.85629270736502*^9}, 3.856292743155506*^9},
 CellLabel->
  "Out[193]//TraditionalForm=",ExpressionUUID->"94dfcdcf-0b44-4d67-a43c-\
64d7a17b90d0"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", 
      RowBox[{"\[Psi]", "(", 
       RowBox[{"T", ",", "z"}], ")"}]}], 
     RowBox[{"\[PartialD]", "z"}],
     MultilineFunction->None], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"T", " ", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None]}]}], "+", 
      RowBox[{"T", " ", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[PartialD]", "2"], 
         RowBox[{"\[Psi]", "(", 
          RowBox[{"T", ",", "z"}], ")"}]}], 
        RowBox[{"\[PartialD]", 
         SuperscriptBox["z", "2"]}],
        MultilineFunction->None]}], "-", 
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{"\[Psi]", "(", 
         RowBox[{"T", ",", "z"}], ")"}]}], 
       RowBox[{"\[PartialD]", "T"}],
       MultilineFunction->None]}], ")"}]}], "\[LongEqual]", "0"}], 
  TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.85629264238419*^9, 3.856292657163344*^9}, {
   3.856292687770636*^9, 3.8562927073769217`*^9}, 3.8562927431557693`*^9},
 CellLabel->
  "Out[194]//TraditionalForm=",ExpressionUUID->"74c0517d-6101-4629-a7fe-\
92e760f129b7"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.85629264238419*^9, 3.856292657163344*^9}, {
   3.856292687770636*^9, 3.8562927073813334`*^9}, 3.856292743156321*^9},
 CellLabel->
  "Out[195]=",ExpressionUUID->"f8fa3c7b-7598-4e19-9c5c-2ec964a9484a"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Solution To Dynamical Equation 4.5 by Separation of Variables  and constraint \
equations  by quadrature.  (Not how this is done in the paper.  Initial \
conditions and choice of constants are NOT physical, just wanted to see if I \
could get analytical solution and plots.  Redo this with appropriate choices \
and sum over \[Omega]\[CloseCurlyQuote]s).  The procedure does yield equation \
5.1\
\>", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.845025546139337*^9, 3.8450256093953323`*^9}, {
   3.8450264807020206`*^9, 3.8450264924695263`*^9}, {3.845027476413868*^9, 
   3.845027579942256*^9}, 3.8450276311928387`*^9, {3.845027692164894*^9, 
   3.8450277068147507`*^9}, {3.845029153419478*^9, 3.8450291720438643`*^9}, {
   3.845029589754055*^9, 
   3.8450296224358788`*^9}},ExpressionUUID->"96d95e50-5754-4a6f-9c85-\
5bd8e93829f9"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "psiReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{"psiReplace", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[Psi]", "[", 
    RowBox[{"T", ",", "z"}], "]"}], "\[Rule]", " ", 
   RowBox[{
    RowBox[{"f", "[", "T", "]"}], " ", 
    RowBox[{"g", "[", "z", "]"}]}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.825412706274982*^9, 3.825412750387109*^9}, 
   3.825413315971154*^9, 3.8254141934242373`*^9, {3.827921101908229*^9, 
   3.827921103866809*^9}, 3.8279214072822313`*^9, {3.845024471400188*^9, 
   3.8450244895036983`*^9}, {3.8450245287202787`*^9, 3.845024530079093*^9}, {
   3.845024756339919*^9, 3.8450247653870497`*^9}, 3.845025558006564*^9, 
   3.845027631193329*^9, {3.845029287021707*^9, 3.845029307365103*^9}, 
   3.845029589754531*^9},
 CellLabel->"In[77]:=",ExpressionUUID->"b5277276-07e7-4866-a83c-241630b2f2cc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"T", ",", "z"}], "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{"f", "[", "T", "]"}], " ", 
   RowBox[{"g", "[", "z", "]"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.845029293620186*^9, 3.845029307802804*^9}, 
   3.8450295897548523`*^9, 3.845029730283457*^9, 3.856292483318754*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"750d8921-f518-483e-8d93-d545643aa356"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "psiDerivatives", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psiDerivatives", " ", "=", " ", 
   RowBox[{"{", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"D", "[", " ", 
      RowBox[{"psiReplace", " ", ",", " ", "T"}], "]"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"D", "[", " ", 
      RowBox[{"psiReplace", " ", ",", 
       RowBox[{"{", " ", 
        RowBox[{"T", ",", "2"}], "}"}]}], "]"}], " ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"D", "[", " ", 
      RowBox[{"psiReplace", " ", ",", 
       RowBox[{"{", " ", 
        RowBox[{"z", ",", "2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
    "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psiDerivatives", "  ", "//", " ", "TableForm"}], " ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.84502453426578*^9, 3.845024589030521*^9}, {
   3.845024767148553*^9, 3.8450247717549553`*^9}, 3.8450255580071373`*^9, 
   3.8450276311939487`*^9, {3.84502929134016*^9, 3.845029291499218*^9}, 
   3.8450295897553177`*^9},
 CellLabel->"In[79]:=",ExpressionUUID->"2a15dec7-f43d-4ae9-a432-ab7c46990e49"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", "T"}],
         MultilineFunction->None], "\[Rule]", 
        RowBox[{
         RowBox[{"g", "(", "z", ")"}], " ", 
         FractionBox[
          RowBox[{"\[PartialD]", 
           RowBox[{"f", "(", "T", ")"}]}], 
          RowBox[{"\[PartialD]", "T"}],
          MultilineFunction->None]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["T", "2"]}],
         MultilineFunction->None], "\[Rule]", 
        RowBox[{
         RowBox[{"g", "(", "z", ")"}], " ", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"f", "(", "T", ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["T", "2"]}],
          MultilineFunction->None]}]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[PartialD]", "2"], 
          RowBox[{"\[Psi]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          SuperscriptBox["z", "2"]}],
         MultilineFunction->None], "\[Rule]", 
        RowBox[{
         RowBox[{"f", "(", "T", ")"}], " ", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[PartialD]", "2"], 
           RowBox[{"g", "(", "z", ")"}]}], 
          RowBox[{"\[PartialD]", 
           SuperscriptBox["z", "2"]}],
          MultilineFunction->None]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.845024543095125*^9, 3.845024589347159*^9}, 
   3.845024742302353*^9, {3.845024772377014*^9, 3.845024777193013*^9}, 
   3.845025558007905*^9, 3.845027631194203*^9, 3.845029191664674*^9, {
   3.84502929892223*^9, 3.84502930963037*^9}, 3.845029589757518*^9, 
   3.8450297303375473`*^9, 3.856292483357347*^9},
 CellLabel->
  "Out[81]//TraditionalForm=",ExpressionUUID->"76c9d9ae-e6b1-4fd1-b630-\
74e58dec239e"],

Cell[BoxData[
 RowBox[{"eq4pt5", " ", "//", " ", "pdConv"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.8450246186973333`*^9, 3.845024620158526*^9}, 
   3.84502480310713*^9, 3.845025558008165*^9, {3.845027540614122*^9, 
   3.845027541894453*^9}, 3.845027631194481*^9, {3.845029196524384*^9, 
   3.845029199587673*^9}, 3.8450295897579813`*^9},
 CellLabel->"In[82]:=",ExpressionUUID->"329f0ccb-d24e-4b58-8b6c-47c76792b86c"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["\[PartialD]", "2"], 
      RowBox[{"\[Psi]", "(", 
       RowBox[{"T", ",", "z"}], ")"}]}], 
     RowBox[{"\[PartialD]", 
      SuperscriptBox["T", "2"]}],
     MultilineFunction->None], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[PartialD]", "2"], 
      RowBox[{"\[Psi]", "(", 
       RowBox[{"T", ",", "z"}], ")"}]}], 
     RowBox[{"\[PartialD]", 
      SuperscriptBox["z", "2"]}],
     MultilineFunction->None], "+", 
    FractionBox[
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "z"}], ")"}]}], 
      RowBox[{"\[PartialD]", "T"}],
      MultilineFunction->None], "T"]}], "\[LongEqual]", "0"}], 
  TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{
  3.8450246206563463`*^9, 3.845024676575098*^9, {3.845024733052245*^9, 
   3.845024744792151*^9}, 3.84502477930192*^9, 3.845025558008747*^9, 
   3.8450275421599007`*^9, 3.845027631194729*^9, 3.845029199871612*^9, 
   3.845029312497045*^9, 3.845029589760118*^9, 3.845029730352963*^9, 
   3.856292483374192*^9},
 CellLabel->
  "Out[82]//TraditionalForm=",ExpressionUUID->"3cff5fa8-e37d-4e86-bc71-\
f639e30153f2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "sov", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"separation", " ", "of", " ", "variables"}], " ", "*)"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"sov", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"\[Psi]", "[", 
        RowBox[{"T", ",", "z"}], "]"}]], " ", "/.", " ", "psiReplace"}], " ", 
     ")"}], "*", 
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"eq4pt5", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "  ", "/.", " ", "psiDerivatives"}], 
     " ", ")"}]}], "  ", "//", " ", "Expand", " "}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.845024452609866*^9, 3.8450244546066647`*^9}, {
   3.8450246072792873`*^9, 3.845024610520402*^9}, {3.845024799883482*^9, 
   3.845024864946569*^9}, 3.845025558009099*^9, 3.845027631194995*^9, {
   3.845029205628129*^9, 3.8450292074042797`*^9}, {3.845029319414378*^9, 
   3.845029319685277*^9}, 3.8450295897608633`*^9},
 CellLabel->"In[83]:=",ExpressionUUID->"3f171bb2-bb45-49b2-8d37-4f783b954a68"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["f", "\[Prime]",
     MultilineFunction->None], "[", "T", "]"}], 
   RowBox[{"T", " ", 
    RowBox[{"f", "[", "T", "]"}]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["f", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "T", "]"}], 
   RowBox[{"f", "[", "T", "]"}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["g", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "z", "]"}], 
   RowBox[{"g", "[", "z", "]"}]]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{
  3.845024454888685*^9, 3.845024610909177*^9, {3.8450247355639668`*^9, 
   3.845024748298336*^9}, {3.8450247812604856`*^9, 3.845024800595134*^9}, {
   3.8450248403805847`*^9, 3.845024857521617*^9}, 3.845025558009892*^9, 
   3.8450276311952667`*^9, 3.84502920797931*^9, 3.8450293205787487`*^9, 
   3.845029589763476*^9, 3.845029730386463*^9, 3.856292483409769*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"e1a4042e-6f1d-444f-9f93-187c9cafbe32"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "fODE", "]"}], "\[IndentingNewLine]", 
 RowBox[{"fODE", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Select", "[", " ", 
    RowBox[{"sov", " ", ",", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"!", 
        RowBox[{"FreeQ", "[", 
         RowBox[{"#", ",", "T"}], "]"}]}], ")"}], "&"}]}], "]"}], " ", 
   "\[Equal]", 
   RowBox[{"-", "  ", 
    SuperscriptBox["k", "2"]}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.845024884955882*^9, 3.845024889620247*^9}, 
   3.845025558010202*^9, 3.8450276311955357`*^9, 3.8450295897640038`*^9, {
   3.845029659523343*^9, 3.845029660538725*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"f13fd4dd-c668-4301-b99f-2e0dbe941000"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["f", "\[Prime]",
      MultilineFunction->None], "[", "T", "]"}], 
    RowBox[{"T", " ", 
     RowBox[{"f", "[", "T", "]"}]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["f", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "T", "]"}], 
    RowBox[{"f", "[", "T", "]"}]]}], "\[Equal]", 
  RowBox[{"-", 
   SuperscriptBox["k", "2"]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{3.845024890054349*^9, 3.845025558010832*^9, 
  3.845027631195812*^9, 3.845029326265294*^9, 3.845029589766273*^9, 
  3.845029661009988*^9, 3.8450297304010963`*^9, 3.856292483425735*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"9cd74d04-34d1-4322-8271-baf77f24c74a"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "fReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{"fReplace", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"DSolve", "[", " ", 
     RowBox[{"fODE", " ", ",", " ", 
      RowBox[{"f", "[", "T", "]"}], ",", "T"}], "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Fix", " ", "these", " ", "constants", " ", "later"}], " ", "*)"}],
   " "}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.845024907180197*^9, 3.845024920684453*^9}, 
   3.845025558011141*^9, 3.84502763119608*^9, 3.845029589766958*^9},
 CellLabel->"In[87]:=",ExpressionUUID->"8690d69b-c016-42f2-8f04-2bd11592c9b8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "T", "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{
    RowBox[{"BesselJ", "[", 
     RowBox[{"0", ",", 
      RowBox[{"k", " ", "T"}]}], "]"}], " ", 
    TemplateBox[{"1"},
     "C"]}], "+", 
   RowBox[{
    RowBox[{"BesselY", "[", 
     RowBox[{"0", ",", 
      RowBox[{"k", " ", "T"}]}], "]"}], " ", 
    TemplateBox[{"2"},
     "C"]}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{3.845024921305985*^9, 3.8450255580117273`*^9, 
  3.845027631196362*^9, 3.845029330866053*^9, 3.845029589769167*^9, 
  3.8450297304377527`*^9, 3.856292483506398*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"eacf472e-1c30-468d-9f3a-a4577f3b73b8"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "gODE", "]"}], "\[IndentingNewLine]", 
 RowBox[{"gODE", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Select", "[", " ", 
    RowBox[{"sov", " ", ",", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"!", 
        RowBox[{"FreeQ", "[", 
         RowBox[{"#", ",", "z"}], "]"}]}], ")"}], "&"}]}], "]"}], " ", 
   "\[Equal]", " ", 
   SuperscriptBox["k", "2"]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.845024940244403*^9, 3.845024945404264*^9}, 
   3.8450255580120068`*^9, 3.845027631196636*^9, {3.845029333677723*^9, 
   3.845029333789201*^9}, 3.845029589769808*^9, {3.8450296635554*^9, 
   3.8450296640103617`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"87844a74-859a-4d8b-8d13-a78be05acea3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["g", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "z", "]"}], 
    RowBox[{"g", "[", "z", "]"}]]}], "\[Equal]", 
  SuperscriptBox["k", "2"]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{3.8450249472807903`*^9, 3.845025558012773*^9, 
  3.845027631196904*^9, 3.845029334777792*^9, 3.84502958977195*^9, 
  3.8450296645647097`*^9, 3.84502973045715*^9, 3.8562924835264597`*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"95a26c7a-4701-4317-916c-0fa8b59dd122"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "gReplace", "]"}], "\[IndentingNewLine]", 
 RowBox[{"gReplace", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"DSolve", "[", " ", 
       RowBox[{"gODE", " ", ",", " ", 
        RowBox[{"g", "[", "z", "]"}], ",", "z"}], "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "  ", "/.", " ", 
    RowBox[{
     RowBox[{"C", "[", "1", "]"}], "\[Rule]", " ", 
     RowBox[{"C", "[", "3", "]"}]}]}], " ", "/.", " ", 
   RowBox[{
    RowBox[{"C", "[", "2", "]"}], "\[Rule]", " ", 
    RowBox[{"C", "[", "4", "]"}], " ", 
    RowBox[{"(*", " ", 
     RowBox[{"Fix", " ", "these", " ", "constants", " ", "later"}], " ", 
     "*)"}], " "}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.845024976124034*^9, 3.845024990428206*^9}, 
   3.845025558013165*^9, 3.845027631197171*^9, {3.845029337429903*^9, 
   3.845029339109507*^9}, 3.845029589772653*^9},
 CellLabel->"In[91]:=",ExpressionUUID->"f49dca87-9af9-468c-9215-ee0955505c8c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "z", "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"3"},
     "C"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"k", " ", "z"}], "]"}]}], "+", 
   RowBox[{
    TemplateBox[{"4"},
     "C"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"k", " ", "z"}], "]"}]}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{3.845024991227314*^9, 3.84502555801429*^9, 
  3.845027631197441*^9, 3.845029339701812*^9, 3.8450295897750263`*^9, 
  3.845029730499156*^9, 3.856292483562478*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"4e7861e3-f8f5-4602-a6bc-475c0721447b"],

Cell[BoxData[{
 RowBox[{"\[Psi]", "[", 
  RowBox[{"T", ",", "z"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"T", ",", "z"}], "]"}], " ", "/.", " ", 
  "psiReplace"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]", "[", 
    RowBox[{"T", ",", "z"}], "]"}], " ", "/.", " ", "psiReplace"}], " ", "/.",
   " ", "fReplace"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", 
      RowBox[{"T", ",", "z"}], "]"}], " ", "/.", " ", "psiReplace"}], " ", "/.",
     " ", "fReplace"}], " ", "/.", " ", "gReplace"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "psiSolution", "]"}], "\[IndentingNewLine]", 
 RowBox[{"psiSolution", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[Psi]", "[", 
    RowBox[{"T", ",", "z"}], "]"}], "\[Rule]", " ", 
   RowBox[{"(", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "[", 
        RowBox[{"T", ",", "z"}], "]"}], " ", "/.", " ", "psiReplace"}], " ", "/.",
       " ", "fReplace"}], " ", "/.", " ", "gReplace"}], "  ", ")"}], 
   " "}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.845025007283987*^9, 3.845025042093089*^9}, {
   3.845025074098819*^9, 3.845025086426618*^9}, 3.845025558014718*^9, 
   3.8450276311977262`*^9, {3.845029341773885*^9, 3.845029350093212*^9}, 
   3.845029589775741*^9},
 CellLabel->"In[93]:=",ExpressionUUID->"2faca6b4-4aeb-46f4-8ed7-93d949b1130c"],

Cell[BoxData[
 RowBox[{"\[Psi]", "[", 
  RowBox[{"T", ",", "z"}], "]"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.8450250109268713`*^9, 3.8450250427080383`*^9}, {
   3.8450250759282503`*^9, 3.84502508695819*^9}, 3.845025558015025*^9, 
   3.845027631198016*^9, 3.845029350679491*^9, 3.845029589776195*^9, 
   3.845029730517749*^9, 3.8562924835821457`*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"513afad4-18a8-4e66-8381-42705c73bfe2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "T", "]"}], " ", 
  RowBox[{"g", "[", "z", "]"}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.8450250109268713`*^9, 3.8450250427080383`*^9}, {
   3.8450250759282503`*^9, 3.84502508695819*^9}, 3.845025558015025*^9, 
   3.845027631198016*^9, 3.845029350679491*^9, 3.845029589776195*^9, 
   3.845029730517749*^9, 3.856292483587834*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"dfe854e4-f98f-4a41-a839-2b96aefb9205"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"BesselJ", "[", 
      RowBox[{"0", ",", 
       RowBox[{"k", " ", "T"}]}], "]"}], " ", 
     TemplateBox[{"1"},
      "C"]}], "+", 
    RowBox[{
     RowBox[{"BesselY", "[", 
      RowBox[{"0", ",", 
       RowBox[{"k", " ", "T"}]}], "]"}], " ", 
     TemplateBox[{"2"},
      "C"]}]}], ")"}], " ", 
  RowBox[{"g", "[", "z", "]"}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.8450250109268713`*^9, 3.8450250427080383`*^9}, {
   3.8450250759282503`*^9, 3.84502508695819*^9}, 3.845025558015025*^9, 
   3.845027631198016*^9, 3.845029350679491*^9, 3.845029589776195*^9, 
   3.845029730517749*^9, 3.856292483590687*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"d5e47e13-9195-46d6-991c-67e83b466b98"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"BesselJ", "[", 
      RowBox[{"0", ",", 
       RowBox[{"k", " ", "T"}]}], "]"}], " ", 
     TemplateBox[{"1"},
      "C"]}], "+", 
    RowBox[{
     RowBox[{"BesselY", "[", 
      RowBox[{"0", ",", 
       RowBox[{"k", " ", "T"}]}], "]"}], " ", 
     TemplateBox[{"2"},
      "C"]}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     TemplateBox[{"3"},
      "C"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"k", " ", "z"}], "]"}]}], "+", 
    RowBox[{
     TemplateBox[{"4"},
      "C"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"k", " ", "z"}], "]"}]}]}], ")"}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.8450250109268713`*^9, 3.8450250427080383`*^9}, {
   3.8450250759282503`*^9, 3.84502508695819*^9}, 3.845025558015025*^9, 
   3.845027631198016*^9, 3.845029350679491*^9, 3.845029589776195*^9, 
   3.845029730517749*^9, 3.856292483594421*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"9f4c4f7b-2192-408e-bf6b-5a0e82b0f455"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"T", ",", "z"}], "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"BesselJ", "[", 
       RowBox[{"0", ",", 
        RowBox[{"k", " ", "T"}]}], "]"}], " ", 
      TemplateBox[{"1"},
       "C"]}], "+", 
     RowBox[{
      RowBox[{"BesselY", "[", 
       RowBox[{"0", ",", 
        RowBox[{"k", " ", "T"}]}], "]"}], " ", 
      TemplateBox[{"2"},
       "C"]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      TemplateBox[{"3"},
       "C"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"k", " ", "z"}], "]"}]}], "+", 
     RowBox[{
      TemplateBox[{"4"},
       "C"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"k", " ", "z"}], "]"}]}]}], ")"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.8450250109268713`*^9, 3.8450250427080383`*^9}, {
   3.8450250759282503`*^9, 3.84502508695819*^9}, 3.845025558015025*^9, 
   3.845027631198016*^9, 3.845029350679491*^9, 3.845029589776195*^9, 
   3.845029730517749*^9, 3.856292483599058*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"760c6ed9-8e1f-4c4c-bdf3-467ee3165a79"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "psiSolution1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"psiSolution1", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[Psi]", "[", 
    RowBox[{"T", ",", "z"}], "]"}], "\[Rule]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Expand", "[", "psiSolution", "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}], "  ", "/.", " ", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "->", " ", "1"}]}], " ", "/.", " ", 
      RowBox[{
       RowBox[{"C", "[", "4", "]"}], "->", " ", "A"}]}], " ", " ", ")"}], " ",
     "+", 
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Expand", "[", "psiSolution", "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "/.", " ", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "->", " ", "1"}]}], " ", "/.", " ", 
      RowBox[{
       RowBox[{"C", "[", "3", "]"}], "->", " ", "B"}]}], "  ", ")"}], 
    " "}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.845025110364765*^9, 3.8450251230571337`*^9}, {
   3.845025325774269*^9, 3.845025341821615*^9}, 3.84502555801672*^9, 
   3.8450276311993732`*^9, {3.84502935429391*^9, 3.845029354453258*^9}, 
   3.845029589779812*^9},
 CellLabel->"In[99]:=",ExpressionUUID->"d1fe0091-b4d8-4ac3-842c-ca25b25f13e5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"T", ",", "z"}], "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{"B", " ", 
    RowBox[{"BesselJ", "[", 
     RowBox[{"0", ",", 
      RowBox[{"k", " ", "T"}]}], "]"}], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"k", " ", "z"}], "]"}]}], "+", 
   RowBox[{"A", " ", 
    RowBox[{"BesselJ", "[", 
     RowBox[{"0", ",", 
      RowBox[{"k", " ", "T"}]}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"k", " ", "z"}], "]"}]}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{3.84502512336279*^9, 3.8450253420955772`*^9, 
  3.8450255580173597`*^9, 3.8450276311996603`*^9, 3.845029357378716*^9, 
  3.845029589781535*^9, 3.845029730558941*^9, 3.8562924836374483`*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"4941b7fb-187e-4f9f-89f2-637060bdaf8b"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq5pt1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq5pt1", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"psiSolution1", " ", "/.", " ", 
    RowBox[{"A", "->", " ", "1"}]}], " ", "/.", " ", 
   RowBox[{"B", "->", " ", "0", " "}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.845029681865842*^9, 3.8450297198879957`*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"670bbb9e-e64c-4fce-ad6e-24ef9f85bdf5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"T", ",", "z"}], "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{"BesselJ", "[", 
    RowBox[{"0", ",", 
     RowBox[{"k", " ", "T"}]}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"k", " ", "z"}], "]"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{3.845029730605961*^9, 3.8450297993813467`*^9, 
  3.856292483651495*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"337273ab-992a-43fb-947e-bf7892aa8ba6"],

Cell[BoxData[
 RowBox[{"RevolutionPlot3D", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", 
         RowBox[{"T", ",", "z"}], "]"}], " ", "/.", " ", "psiSolution1"}], 
       " ", "/.", " ", 
       RowBox[{"A", "->", " ", "1"}]}], " ", "/.", " ", 
      RowBox[{"B", "->", " ", "1"}]}], " ", "/.", " ", 
     RowBox[{"k", "->", " ", "1"}]}], "  ", "]"}], "  ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0.1", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"T", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.845025438863597*^9, 3.845025473323577*^9}, 
   3.845025558017684*^9, 3.845027631199904*^9, {3.845029360245954*^9, 
   3.845029362685295*^9}, 3.8450295897819967`*^9, {3.845029739524282*^9, 
   3.845029739923112*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"d949ba73-0e21-450b-8a54-de627415ec5f"],

Cell[BoxData[
 Graphics3DBox[{{GraphicsComplex3DBox[CompressedData["
1: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
9keBdE4by35wF5K2OLV9/boQ5GjzuSZVNYoYNAnswsQH0ZX8xj+btBLQtv7i
QzLKAfCgTJxSg3ENmWe906IKa0NHvw42xryH0D2fM/GWiUvoaJb/ZZvRJJr5
IfTVY3AEKXtOCk/Vl6DnaUM15Y/j0NHZ5fyXTr2oRsR/t7eKEdv2RaTNzA8D
Ylv6r9+1W8H2+YedyQI5iPphlpUvTSE6lSW55SXbjy58vjV7c58WDyRfKnj/
lgRvdj9rxN69gJ824Ix9GzuOvLHLLH2OAefxxERLHg4jjp1p7vVWPpzTyELI
KMmKzZM+ZazFDwOKWKvHVyKFcavllNpyFjdujuJ8TL3Sg45JuOk9+SmNKXLs
FXqPCeORSEeBIMp2QHNshjrlESsUDfviGdLPg/vmjscUC3wCh3fc7h+Z8cPp
0hLPml8i+BP/Fl5PzUdJOWIU1ZVCsO7ariHfOUmMKWnuHpwpAK6Nk3cOU7rA
C3Xi+yFmbaCCLKa3J6sXOK5bNjUOvQacjNds+VVKAZnGi+qLBS0gXIyjIucy
EX5y+eWewiV2KB1vOfeBogIUFtvvDCYUo0ef2eNqqlOQsUBN4XH7FhSZMBIV
yauILdjT959e48XHR5MvP1fsRP22JoPeYcLw/lD8p5Q2Afjww7nMceV1EL+Z
L6nRJw7tq6M0BENEYM9AR4Nd8zqyfEXvSigqA2/lhfcknZWAiU4VYbmZa2Bq
e/J76O0dsFJX9aD/ogh0sG9nPa45iYw0ifpY+o4AGXsRS8GSJDxjQHDoJzED
ruvQHeinE8FwxXaLPzry0NT+7uzE/Axid+ShihwmgVxm9bmK7EqwZPLqtoDb
NIjKm88QqexAk6RZkndqtkG0eJ4ftWU3oGnwaWZ/P4Ayc3fqjqutAosBeVWF
kA5wf6Ks9NceCR5bih6zY2CAjobKHw1FClHVPZPdKyIMOFbfj4XwIyfsp/bS
MiIpB0a3WqMuXGTDYt3HUy+yC8LbJYydxFtVaMTqvKLmYx5MSJb7k3NEFDI+
Mer6tlEDVD/fnE5oEsD9qsLd0xlScHZC6tKTn7XonaRP2DtTIVyrP2zTRCUL
CQQtimI4U5F64+vlxJti+GPEXxsHMyq4RmqYrWf7E3VxuqR+7pbG19hdPqQN
0kP64QfparWJ/86Ra96hSom9iMRNDju4ccQfVzetsk7ken/2p1gLA96n3ZIJ
jhHCvq+Krb6Q//NS1o+9l+i+I3y/o79YdweduUBKNMXdjqpX+O8JqWMg/Ovs
iaHgNZTIxPzUL6sdZVlFCjduE8Ivt8S0e614sfzy9xTR/6qQt+me4cAQLdR9
M6e3zCqJl2wkz7kKNqPCueh1hSxG+Jfw6vu8IDlc8/udhSttC/gxGoHUfzFD
1dPhjKNRXNj7Vn1wLt0FRLD733BPLicsym0h/k3HgOWvMFLtD+aCjC/x4bFH
//LrdWb1Wrwwdr13sddZ7hs6vFdu2fdKGJZTd7iwQk4ccjHgSghIBk+5PceY
5wThJaXZeD0xCTxhqOv2yjUHpFPJZghdkoB0HphSTJ4f624JPJfg8UOXst+t
OHDJwl/LrP1noBBemF+YyTj1Bl2seClvdpUPGv8Yln1uvgYukOa/oMtvBAzf
uC+5cInDeQPd/dX/DoBFO9uHjrByQDyTI5D6XQaKm3HHbNgTwjyV2xl0tslo
P4xvdzZHAV4LeivvXHgMMsYzR/IFfUVcfSdofj+nhC/nHE09K2jhaaZQPzfu
P+hvKjPHTDYzrNAJuPn7iA0u1ueanG1oBasDIdlLbNyQv9HhgrA+P3RwHWMu
2OpCStFPWgxGRoD10kHV7c4t4DhdIVs22AqofaoJOKjrQDBplNqq1RqI9f22
d4m8A6wmm9YwO0agXSY5kz8XmGHG3vNvt9V/oReFPpoCkqPozjABRXL1FhA8
z7Wu0IiAghQnDbXoOFLsmgq8TrwC9LNvUIhOFoPW315dfpcI8AuSJA+xTBZY
V03w5LVVJrjtu9r8uysKUfUNTMwRlYI3sQNX4m73gMVrBpIU39LQ00IiLea0
NbArLiH/cGsMyB039jo0/YN6CCWE78/1Ac7RIM6/yx3g4VWtV52gA2SEtbNp
5xDCHkbGi1LfSsCA5pXJmMdfUb2NxPhpoiMQVCZ2O7y7DZz5teDUSzqN+rin
qTu+74Pmrv2w0ruVgLnC/O/esWnge6POyJidGUrL0tGJuXWgMucx9YaaRWQx
1F2jSssA5UOAZV7YP1+781bn0klm/NBrV7bpDh8cOX20COMwymAcmuVT6kE7
CnxSpA3C0KKKRcOVYgLxu87+1OrrRRVkx6yzj4tCHX5nJRblXrSZEWP/yLcA
6Xj3Dtml5gLejNR3p/iyEe8AyUlqpj7k0+VZFENeB2R3CILofv9BnLPvj1wH
iPBSwbOCNZkDYPyhj2/GNgW8Mdwgkz99gDx15lMltI/Aw9e+4XInQ9GOXGE9
UzkF1mTZ21BJoIIfFPLiW63SEftN2gmdG5yYaXlNXtlTGJ763bJywFcA2mS0
4ActfrzIa3+OUEsCpg5IVNgyRyGNJiWxF0ZtqED4s9oByxpykqyqP/m+H7U7
xN9wDV9EvDEgPlqDAAtLtOz80clDB4Pn3ba9BtF+dGvfEtchej/cnAKc65HN
avLP8KpcIOc2cIb0SQFaRmtL1He+oBDDn8o51p3gk5TrUHxzO8rL/cZDzvMM
aEd+Hdk+MwHiLq6vZPAR4tTc2h9hbR/Q0o0jgaijOXDucwImat9DIf688/3/
epDi3chL9jQqeK9POYnWUgzTxZGDCK5S5E5FSWtIzQAFzyWtN7dIY1NLa0mP
C+/Aaq1QL5M2M1waeJmiK6iAT5Q+o+xkzgKkJld71P71D/0nyrvJa9nqosmu
3OuEm0DX//V8lf8s0KqiG8y7XwGUisy/5zlvARPzFoZrbbvAN19FmylzCbxV
q60Uuz0ODp41rP6XtwXI5jOG6rPXgfhs7m74+THA6q/UIExBD+ma+4wtSWrU
K4R2OORCtxBtGC1bwG9qWBz24JNh5QSojXrqzPB+Ezm4Xko+dYcLNrnFkVH4
d6ibF7V7kXBsAVHLBLPwNxyQLro5zP3JPw+zn0u8NLwGXtA85fF7ugjic8u2
pUs5oJLwu8OS3QmgPJNOsCnJB+8cvstO8d4CZvQGjV4Zi0Dir6XYiIwI5GpQ
mNx8ewTsmZTOPxBYR+w8E+qNNaLwSbNj8RI1FzyRO6wYMb8B4vr1/C67ScFL
ZYeKs53E0JH6jfVTpzVwIuhO09k/ktDuoi1dqjEx1LYJTDX8uQmU0q8w/qqQ
hfo9YXTUlNPqcTzRby4STKDgj7RFjp+lYH9d8KSLIz/cduiXCDVfR1qvl35r
NMrD4YHedEGpWfUzQ997dcM3UUpQadkVOXmICuSkG63I4Eq+uoqywxb6+yaB
lUxXHu7nXHd6aCwEoQxvYCbjCoineXKSLE0Jkkw5dRo4LqpH+AW2miZtAakW
9bCAfUXIwb2vu3WHCt6d86JL5N0E4eM+Ih4T8rBqqrNVgVYYrqb3fxEj3wRC
/1nGby6PgXq2KC7R5wdA8rTQV/btPvDiw0tLl4oFYD4nERBtsQe4DTrSnOOG
gPb1Gaaq1QgUxu0c+YlvEByyuOmGXh4HdCGaBfOSiejdj6GZo4VZ4OuwzsR0
bwIMcUbMfG3eBgmExZMWcwzwS8Ij9R8vJpBagkXiT11CaK7f4XCeiBPWOYZe
awpeAJ31JT4FTMTw7M8ArZUCbmiX3peT9GMWJI/brcvtEsPSjZt5Z2h54YmW
VlCsPw7Uxr47fj3djmLznMNZA/nhTTspkmuwESSZN0rFuZBDQpL2W052gnDg
SP/wzv1Z9F+QBF0EoIRP/8tpLUdCUMVaumP88wIil3qgm5xFCkMad3a5aQTg
O4ZIHWbUjgp0qjW6JjrQzVdXfn/fEICXdvNVfGLrkfNeQ/adkk6ks6pjGfZJ
EJ4jnMwWM+xDST9yHmsn8sOJ+I4gvhRh6ErAHXH29BowFL7YVFhID89zsvpQ
iUjAovGN8jHGRTD1gXZYWk4YJtzbP95ALwFtAtTb04ZXUEmPnZsdkwgM4jtr
c1xaEuornl+adl1Ffn4kUSnnmSHvjpf8lSBZmGle9vLt5BwyiM8n5VNggZFy
ZgkZ43Iwr1EMjPTOI578G67vWFnhy3yOY88S5SEtn4tLVsoQIvhRPXYhVRye
Xb5HPxEnC2c+2rIpXV0DhWM/r70eZYO7c+tOzdsK8Ia6Oq3J1SnwYu9eI3U1
OywkHU1zTVWEyYvnCT+cWgTkI5cdDBXJcEIKq7/MChfkogi/+8GzHShVPFIM
+kGD+b9rWVyaEYCvOLnM7DTakVaJl8v7OTo8HeA7YXtCCAaY8RwoFXUiIn8q
Mge1ETRvFSMLp6TgVl8k4ak/I2DjkuCXwsBxRHmN5fndOnn45Bj/NMmTceQU
cDe1k38WWbVLc2w31CLLiboTog4j6KGeY2Oa3iQqyE96O5cxiNqGTyxOiI8h
2a67TWJ6jPiFngLP3T9rSKrah1SKvhsUffXEzHa82CcpmSvxDyG8nBd7uai/
Bp1Qzpa2FFXAt+/MUEfRMsMp4QKnOxY5YGufwcrPgwSzSe9wt1DTYZPsqjuP
0nr+zWOpG50qA9ZrJXWxHmHHi4rSQmxzQ6hTJfuGQYQQTiLtfN2zzIB/ZKsd
7h0NAuHkiOHwRSGsL1+UndQojUltszwa7drAw9AX2RgSYCcj2yZZSn78fUjH
2v5CFTKIijB27yLBb6i3ecRDRXDx4fnm0X/eU37fQ3/yBSsu4jbNi6kUx3TZ
2V9v9A8jSiea4eSTXPiBZJli6qoMDpQW6u1wHAE5pTYXtDkZ4LcgnT+swyRY
9TLrHR/pFDTwVc43/B0v/FGewTcmS4Fnw/S8mli/gJ33YWPW8mLwTaFYxgwz
Ey6p+b243/AT/K0f3HF6KA0plwqKQu+w4ZjzXDvq8vno2LNoMtgnD1+Invmj
+IMLz0Q6szz3iQdPX3nL8R8uAAJ/PrOvXtPgIVX2sJ9cL4gr2n0QLjYBBCLp
a75fGQE9dgYRjrz9YDxnr4h3bQzcWJHhr/uXd7smg20p9D0gxIQ470RQL0gT
8pPIY2wAC5fUi4OIe0FduG81uzUfPJqeUXNnIIH2yR6Xw1vLAQdbxx2L8yKw
jLflxpPVHbARb3ppWrwdhW6gQzdtBWh5IaqbUpkNmvLMyrz3/wJsJbZkCmlJ
oWe7lXB8ESO8owLWolbj0Wf1knL7RnrIYhMdEuzLDf/OrZ/5GF4BUu88XnCN
ZIVXd+32TosJwX841iR20IweBBF92CsXgNZPoqanEoShM+n567bsfWC8M+1d
2dIG0FgMVmTvmwHVYuvycjLLoCT6/dte91VQj05QM7H1geQ4H/o2kw2Qq3Pc
Ul3wAPQ4k+xsHU2AaORR9EV1Ajzjq/3WrUYPbXdHdvbOEsN7Xd35Z/wX0ajv
tPXGFwZo2NdhfdVuD+SWfbVn+72E+lyMuTWvs0BWhvsPiweXwMxARhidUgni
XaZ502jGDGtv1rLTXD8CSU5dswofipHkVMAt3dds8E+ydfT6HhV87FdXaBm0
AWzFeT+yE3PC6ZfK/KujtPB5aV3ZyIs1sJqyLuHKxwLTUBD1FhMFPLV7ksJR
bRb8Ylgq4WihhbIS0/nDAkzw9s2CqZy/k+CrRvMT7Qv0kHtQfvjcaWZ4piVN
IqhzCXjXzvwi+I8LfvcIXyuWpId6Rc31XLXzYFtYfkR6kAl2fDYJ2f7EDn+6
9tyPPTkDRgqO/5dpIwQZQ6psbagG1T/58HjhL+voY2mPUc4NQVhua1fTELQH
tN2/u6rML6CA7aUsrc/8MCWmd8ilngk+NGCIib2whtJjS6ulJwWgCkVlyro6
CyyPk9mUSt5Ae+kU8S10/HDAytazkIEJCkU9XfzCPo9Ok7/WY7rPBkM8vU6m
svNACfoh7poP00h5NrEryUcQHmqcJM3fYYHyvXc52xdW0cv51W+7R5xQKP3y
I/Hf/JCp7DdNpMYyCszRFlNikoBSzTsjQ9Vj6lx2vClc9Mtgz4NDYDJcBE5Y
+q05xXHA52MEp4qHF0Bgw5GcmbQozIneMZYz4oSxMq7nDfrXwCVrN/f3pyRg
1LczGgvrPHCxyefHU5pOYOFFvXhvWBqKvZV3f9RzDHJ3cGcvPe0CB4YSGbt0
UvCp7CXlKHp+KB57+S1N+BJSW2QS726VhqaqQY1Evixwb9OY3shqHGnKWn0q
/dejiPjO6GavKFQVP9vfYd4GMs70tl+ZlIYpxIS6ymICcK1Acu4K5QaqGk9Z
Pc0rCx3+e/JpfUQALqlqvFmlmkIN1elu+nfkYUGCRs/5Z+zQy0HLBG9PIfau
Ba/NJQVo0ik7JDpJASOWIh1MHjSA/pvyfyoZFWDbL69XpR4cMBaw6IX8rgck
HOqlLkl0sGNMjaW0XgyS2jPTG9JPAHv2Jyw7Z+hhxJH4+Zuu4nBOapECKc+B
wnsmQuJ2TDATp1YSKcjAaBuDoKddvSjhqezAZA8TtBl4vZc9KAMHBr4WUvw3
iVQbDd7fO8WET6ypPfsgLgaHnIDNwY0mAHSvqD++xIz/IjeS/H/737FppbpP
3AVSKi6pd1zgwQM1J0MDWY7QRR1Z3h+LA+jAja+2rloQyzInRTjrEmN5emPB
1qiBfznGbQLFhTGn8Ecv42/HMKHaG400nhGgusJI+FFPHPcapeoSrJDjLC6D
WP3QLqTGY69lmcuGNf/UOEjxCGCHAS3BnhOjYEXcMSEmgBu7NgwoziQK481m
K9t4jh7UK81Bly3Ki0eFwvjE6kTwsEQVCeeTUfSHcl+y58ocMPRjvU7EyIsT
SUqi09LakK+tdZ6ENxuMiXr59YiKCQ6Z2ZSkjXUDec511UFJfvg08O2ZDWVO
+KnYfbwuoQ+detUv7PlQEZdazj6nnuHF0/dN9qQa21FF76Bm7sY2uPKVN/PT
+VbgfNJqezd5BXh+eBnyU+cvOPwRT13Luw9OHCf2iJFrQ34spjm/blLCxSot
Ufnfv9XHvgydqPo3j+Eh1MNbMgyQfuu/aremGcCRktBdc2UD3QjsO3Syp4eO
vipjVo+pIT3xUy7NG4WI7aBW+nEEO/zvsb7z2q029SbWeEMhkXmQkywgU2HF
Db/rqfCEe2wA2SP3dRe1LXDLIv7nn2oheJ+94epo+AFIfE9XvSO+hVym02yl
r0vAiEcKNRyXieDyKo/PNt8G8H2YR/VmRxbO9h1MnLEghTfJzEZj9FfQZfCV
pve0GKSk36l5IyoMw7xOKv/wH0UkA++cbo7Jw6iwm49MbpBDsVgbTsvcVcTc
QnMtLlAKku6uWjOMiMG8wUH7Pf5a8EKWeYBlWRGW2tQFVlosqJcxbS29O7cK
wgT4NaNyleDqpkyE9z1qCFiK3Ua3N0C1wqgcQeASMGZPPVa2uQZOTc5fvy87
D0J7Pb72TpJAmvOLReEKVJA5dpYqJ2EFGec/zy5lZoQ7WpUqAi6scKnv+0dH
iTUw6qbh9UqVA9pPMES4G/BB/etTfUaca+h4kk+mhDQ/XCiX27RnEYa9qmRi
Rc4r4JnfGAP9TyGY+vpqMqufOPx1nEQ/InUO8W++0fZ7KQK9d2d3FkolYUfa
p/zz4wvIvmf9iz2rBFSrpU+PE5ODq1wPVNgFVkGE7Lng5qFmREqpbxBrwwUp
rlyWM18bByR1n+T2KlpQ67Ci3+lmbvjq3TfllFMTYM6653modTdirJZ+rcQq
DIeelt9tlfjnWZlUp/Kbh5BA4Le9d+6S0Et0xPSn4QRo2iRp4T8YRGq8+HpN
pQQ89XF7tNxgDMxynzT52z2FkkiHpwo+KsH0pYT/fBwmgM6WWkiNxjRi+q9H
KfFACaY8HvU4zjwOjjI/qMSOCeNrShdd+47Lw2c+F6JfqtcA5ziXiPcNknjn
fLob2Xdp2JeNtLYGv4BLRJomFZsriLKh/80DjmHEOZcsnHF1BPW+ztbspqHG
v64Hp3+4vQJusZ3zVeRtAxbsx1MNJujwU5vvkcY8/UC5OizQwb8H7Ju2ThJY
MOBF3vSExBeD4Nt4273c812A1/YdFdkqO15IsrCwlDoEwY8Hf4+lNCPZEJWY
ZGZeTHnt0RPuyFnQabt8KzC7E71dq3VagVz47YcAxzapafBfrdt5JooedAM9
96v9xI0NDg8fPLWeAb5dK2Ey13tQxvMvp14vCuDgFdbA0O1jkIWHL2vkdA14
lM7Pwp4pjGNg8JanODnMHqu4ZE3RAs7tPnhX+FUYPxCmuygYuwoejFK6Lwn3
AE/pH68GdIRw4Z843We2K2BSbaQ4x74TjDPG0NceCOHIxx11BkcrIMtCV3T2
fA/4Yh3ZCZfFcdJpJ3MGpU3gk9q3XTDRgqg2iOpEeCRxzsij1mtBtDDs5fHo
Uyfb0DNpvVkOM0lsGT9hVWS3BWreL/o3u/cgVu371jKpEthrIWtgvGETuNDG
1H2m70KJ1eNxSX6K2DEi+Td1BgscoZGLUyxoRb1frjYOBihh10e+v8vjCWCS
g5+jVkIPqv/rnz3wmhLTWwS5aVjsIOLXKL5pdQTo03sQkV2ixLXms6xfjInw
3sKSag3nGLhotbKpnE6N27ze30rfIMY3k3sbalxGwJ3XR9PKH9jwAr//c/NM
ElzTCvguxgwiAcxooPaMFTN6BIXYG9Nhl3YSn1c/RxH/7Ubdtgw2HGbwwVHe
nR5zMO0ktxyOIpoU2YAIJgFcvFprQFHHhtnr+zZZ2kZBqMElqrNe/PjbsFMm
zR4r/sR5nq9/aRREedV8evhdHDMQqD7a/MyKPzeN+7JSjSIKwOG08FME9/u8
C5rS48UuQaFzrgxjKHBebS1JXAR3OcHxOTcezEnF76GmN4KuVk+uR03JYJ/d
aGPGu1w4hGb/seLbUXDM95fB8BspfCyeLmhQ+Z/H1HzrWNMfBX6d8Q2S4v98
JvWHZX+CED74qTG48H4AUAf4JA4EKGD33f13MUz82Ol6rdDnsBFEFG4c/55X
HrOPPxVrcBHFzjWOUZKSY4hpgLuO1ZcE/96o6lj5dx+aJw/SazP60Sarn29q
0SG6cO7vxshlHqx/AaEz8n2IlOkwp3p+D5Utqly0fc2JvSp8k+ioB9ERM2RX
vXSAiBM4PwquceEDMX9jo8eDKG0Azr+ep8Xc5FULxwgFcAH/Yy8D+U5gGnlx
jurBMXzOirHOXloYN7xI/1kqMwiuv6b0fk9FjAnyZJ5k1wvi+WNfk7NHeoEF
o3Sh8S9iLELGn0TpKYRNDiyZOy0GwRWnD07Xl/gwG3eYuWm4ApYnoy1rXxtC
Llf7MtrPM+GjeBNSSiolfD87Jn/15yB613B7pgrRwE3dczrl4Tw45ktALOPz
XHQlucsrNogVVvpdk1K1E8VPBSYrA9V+IlOHBFzUygYzIlMdtLLFcHjAmQA2
2Sp0rW7xJUMGFzz/+7m8k7sUbokflYpt+was3uZXyy1xQ9n2mgfPkDQOmFJU
44j9DaSz8n5tjrHAgZLrOyeeK+Kmt1hKHjQhZU3dgPFMAXiRgcviZogCNldh
X6M4X4Uin2XW6UJ5yCp55rdhjTBeqk8582u/EAToStJUSirC3xXk+iRTPJga
+LrsF1SBtaLrxU7j+YD1WpTcS948sHd2l96Y4B+XhmxYSxRxwDOszZJkvEug
i1+xP2eqDUyXnwmVzeGGGYutByJniOEPa5244ZlOQLxBZKS1zwEN18t+tj4k
hA73+Z5wXewBm32CzieNuaCns/aghzkRnIqw15L+5+P8nsHeWh6C8NWiSc1e
2iYIyrQt99xqQGUH/N/vlQlBom6Z3SfPKWHJDatnZ+17UDULYeKTf77waYC1
TDCPHMoXKPvqpXciSPFaepVGCHaZ/RvoGAqo8ZfWKzeiB7kOaC5usijBzWTD
Q5lrpPCbmtqnPtFO8Lx/mNPpgyIs1P7Mak3MAYkWZo8vjvaAmxXuCoSyEnCo
ZorH4ZQMvHHc7M+kWS/Qe3RVtX1NCFqKW56PXJCHbwIvzpvO94LUa7dESO4s
ox/Vqww8liwQGzt5g55wVOsZHud4/Auis5A8RX5OCeoaXCZ7eLUV3P75aM/g
NjXWnOFeVrmsBDnDItyyAhuBiTPJSRlLCax8IMb5ikEGcquv1NSEJIISE2qr
2hxZnNkVa+QXLA4jXr9eLa1NRhVhp3JvcirhpwnfmXZsSODJC8JO3BZ1SHi2
MZnzoxImrdTql+2YQStk5cafj7Wi0caZm8Ue8rhF8e1BrbUILtbTlpE904VU
fuVaFBKKQxINU09Hb24YMVx4iV57FahG/hqr9ZGBZElqu0wvBOC9P4XKAq9X
UL6/tXKpjQQMOPaY+TKxKKx8ZsfiOLmGuoI3pAsVFaCEH70fwz1h+CiQjicx
bR08Yf/h4/ZF5t/73s9u+SEBFUMXKMo71kFH6cu1V5TUcOGR/2lmDhFY7ChX
1kc+hnj+2wcK8QwQXVpZsPSShKqNInZhhDNAJSMIDaSwwHQRIXtxXXlodiPT
g5N0GrFRrz57SkMMrx9nnG7/KA8NNwd/hVRNo7ukmq/qTnLAN2+7YeOeInQ1
KAHTF+dBs8LfkO/apHDRkvIkfKgEX2it5iWtzYD+Q4V01kwCvNmScqWEjhlG
2H/fJhyIQWxdlrk21ymwBHgTYxzBCwUYPKngNwQkurWumVIz4Jyr2ME1QBhW
N6wTWBrUI+3f5sNed1hwVWhx6J8aCci39WJLRKYN2Hxxtkmr5MCDlbm5zBRy
8NNjyoL7rJ3oYZpHWsm/vFORjxp+3yEPHYgbhEipPgPT3ERqfSdR7Mv6XNjA
jhXSl6YKjPhhZNv/cjb6pRTm8jzbHurOBbn55I1jtQqBH8OtBcEORszubX9x
UJUL35aIF70qXIsEBViKnS9w4E887mZ3dQVx+HGNpLSsTiCtPqHk1LwA9gyf
5ZQ95MeiBXKFb41/oW+60Rn3hjggCbtr5gMlATy+8tbood5XENX/p8z4HjmM
EHy+JZMijGlpfqCtW/UgeyH6J5P+Dgisp4l7haVwQGsg1UfbVvTEyL5ZQ+MQ
3Dl2T6coXx5bqZbN1Mt0ACsJxznds+yw9w+LxZEXK/6PqkjPjsIOnOzbvTBj
Iwg/+rAd5FIJYMcnZrsJfI/BvGXrwN1wUcg5zycvPCuMx1qyt7qV7qHE0UyH
xTJJGGUsbhv3Rxw3ELzblHtuBKIoxkpDA/nhhsInX/vXrchLP5qY/cN3EOaj
afmJTgLaB/d5vPrQhxSDD0Xo3OuAiucLvju/ZKG/zWHEU+MRtMcb98yEuhw5
fR9beaOqCM19aCakzMbR0bUpYw7nTJCge0rwcJgeWv10oQg1p4L/+BJ/U3+P
3NnLh0MLOWD45VqW/7qYYWxJbfGEw28gtZGiH35WAN7X7klX+MsF8/lLqkt+
tKCxZBn/s0ZLgDpG+cU1GxZ4Pak6YvRMDKJYvhhHeIUUmy0Y7Gin8MAGsVen
ik1+AEaf/MHkpDjUEaLj0pPNB7VKJ7oYTWvA32fFOllmtJg+Ys2tREgYqgwe
H2jTrUBxcv5u7Hc/om6iPN3H/3ifX62bfupOM3J/Re8hLseE1yR+Pm18LAEv
dwbWi1VXgsxE5RfDxOlIC/xncqQsBbekPYNKe1qBOGfXMkUfA2bgv+xjZEwM
FZdRwXJwGvhQSN59+yslJmPUK30QQwuf09A7nU0LQuS7M1Z3B0pQtdMblQ3X
AUDeWccc2DYIShtJItfWq5AO2Spb6SAj5KAq3S37PIBEGu6sPAmjwuaLpB2n
Y/lho7AR3e7UT9R/bHd0dKQd9b0OfP7eoBMc85ydIRfNBd9+mqJgTgGcfybU
n/WqIOSvePlkfDgNRLPEfLbeF8ZKTLYzT7xEYfKHW+uPpBKQIZk/a6ViHfha
IpvnTt6H0v+wTLCIVKJnvCt3poR4oeIz/kV/SmFsJ7gYGNyTjcaMRJu/ewpC
Zr4b5UNR4jiIXPvasaWPQMHNV7vqBj+8S9jGaawjjw/0pE7B/XdIq5fgSej+
EXAe5otKN2CDci8YmZ8FjIJhiaaEnTkp+LNd03VzZkJ9pvTVgmHUGhgp1cui
KxgC2yelHQY4tkEJb8rV+axJoDWvRPL92BYQqxtwo3xNDyN0hb3b3ecQeQEl
/UlZItjyMrfn/bV//Ulnra2xvgC85IqI+e62oVvBB3P+6XwQNYVMue33gfsP
Pd4zm1PAH/w4np1JCAq6r0nJ9S+gjjN8ZTzhZFBndlLuT+m//8j9ipK/Ywwd
DipfLRT85zu8NAdKvSzQN9OvlOtTFdid1ZE8fYwE05LHPyE15IARQ6NaYu87
AcGti/XaXKS4s7PniCOJE/KJj+y7z3cCtdNu7ZHttJg42Yb/WoQgDKZ/q6/R
24n84l9N1/Pz4sPDtttfhRXhW+lishcCXYDUjKLE8DMvvv9gTK/IVRGyA1e/
R587gJeBM6dvpALWDCpeeBwiADu+x/cp0dUg/Qr1zKkJBZywktJdOigAl3qr
ZD66/UECqmO2bvR02MLIyldrchmVrFnz21iPgKQdR/hthh7HnZSXe2Wxikxk
Fp6+/D0IJt4YWku68GMfVqvndnvzIDaUiSvnQzmiGk8qPcaniN2kOL1OthyB
jRaXp6ZyX9Bh0eql4wo7KPobcdKXeErcFJMUwf95GIhulLpaACL8tEnxboc1
JT5RsKTJ8XwU0O7cmncaJMY6z6I0LxdRY9U1w4uhTcPgFhMn7Y4cHXYTTH03
GsiKWaXuue8Kj6IMKhtMcpsej7pd8ecvZMOn3mhUc9qMIupzsz5i6oIYs3gl
EtzlwLzlTwvs7nYBuaRToq94hfBUzzF0I1kKu39/84m7bARIfJwkonolhONe
WKoQnpDG75Chb09GPyDMfEOVYy6KNbkmS3LF5PGLXALT7dBRtJ95ekahQhTz
PGBw8XoojxXC59up7EaQ9PuEQyUHKlxQFegoQC+FPz7OrbN37EEvLhu3b3nT
43sgzCpUTx47PutlIzIZAIKD71eOcxJCWiGDMxL+SjhVeKzJSqYThRN/b71r
TwjH07M/xoz+W785MH6jph3VX3l9xYmVGdYYhhLE+hNg3eEmk792/qiTzIOd
z7QPSF4S7kkxmwLXqyr+C5jtBdnjsOc6kwg0bdU6Ua9PDa0UBVYTC5rQ+zeK
bAFm3FCg3FdWlUYcOpTw2OfqdYLZoDVuUkcquLrgFtpvogTFyyc8PCI7wTav
432yBSpYqh49dP+rEpTP1wRVYh1AXXbr00dOZpz67SbhlO8UUKu34c47LALx
ImkLpgUsWGGWUErEpR4leCZMrpi+AX+JXnOT93FhmhWfCyfFaSHx0cXIRZOv
KP5QlPm9JR+mevWQPCR8FdCrYs5Qnwrk/aH6w9sAfjw+VKjyfbYD6ZItHuRb
l6D5zTRh4kVBTDLSE0znxQxNVWx+xlwvAh5T2eoXDEVw5Tcl+rTBbaDnceQc
N1INFD7/V3ugKoplauc6bTgGUE4j9jxJUAUChRX/EDpKYoIf/03sJ3DDhlNL
RV/dX4Ijn4jGgAoZPF82d/FWFgE0vMX/37n5aHASOJDF/ZDFF5h5bJydxxGd
Ns89O9ZfYCs2fIDAUQ7/vTRn+5RYAGpLm1mLe74FXS7MGsTfFLDupfrWBy3E
8Fvq8dm8/jSwleYc662iiB8GHs/XIp9GnvJvlQIi0hA+OJAYJqGF7f5bSp5t
hDDvL7/zD5p1pONv5Cdfxw6vMp+79vA+DSTlOHjf2LEBaM/+0rluygpVFR63
uvhTwgu3YkSGclcBm25HSYmuAHRo0ddQfskMQ0Tfp3n83kA8xQThc55S8BTz
Rb4oP2a4EvE8O3WpEwhyme/NSIrChqiTQkonhCAqFXD+3dsOCHoSbkWflYM6
oaQC48s88Jkud7Da5wX0PajNcaWKCXP3mmtktYjBJqoG+Ka7HbwiMxWcDebE
pFnHv5Zr7CNtDZ+rNFQjiHnSOM9qgQuvlpz4kJZ9gEJzxHblz46gyhmeCBJX
ISyckOR/85AYr44ftmQdHwF/GunCWT9J4CqbNNUJM0oc8D2jY/vqCDqyYqjp
3xXHzf2pYC2VAn+wG2PALoNost5Nm5tMCb9wM6l7FMiEP/g5ll5wHEF6xLtZ
J62V8POf3VUL40y44PeXhD95Q+gSx89WPXpWXDAoS9A7zodfEVIrCoUMAW0u
pmCjYVYczum8FezPj0+srk+mGY+CCcnfVz6a8GBpV5Usf2UR/GmZLtfafRjx
8eQsRyiQwPy7tRcuzgrgg9Sle5cLK4HsgoEYJ+8aWPFqF5n+Ioylms58yP3T
Adwv9yfrj66A9043MmW0hXDFVamBXYc2YPyB5VbB81Wg85TzNuW+EC7gPaFx
cqYDuKW8LchtkYZGgdJHRoWS2PexW1hflRdYjgwn5bsqA32jc1KJFKSws0Lz
BW7kCTj3Ht44k6wEtSKiaF71T6AnC5s6knrtoIoi5rTsoRI8ityO4f5vEsW7
KOTRHWsDZIE9zROb9NAv0bqaII8Jaq0+RsYZXSA479C76hwL/NCjcbFcgwGO
BZ0qYPXqA/5BubFPb7FCrmKbv8OijJDq170n7EN9YBsb3py/wQ4JV/MOX17k
hksL3m2a11rRbe8X6lf5eeGzBsOhorvs8Ft07Avad93I1lzlKrkaH9z79DCi
04ADeiROZZRX96FdqaW7My9lIdlrIhmKn+IwvQ2OGfH3g+3YP080mOTgWW+m
V7FyEpA8XvUUrUkvyFPeFvCWEMaOQi9HTAfk4Wdp6RM+P0rBaOJ57aFXwvi/
SL3TjpIKMOnN8bIsyhLgSvrx9uMsRXxCUEf7axA7lFDMevB0rxL1KdFzjf5V
xLY3bZ6ZHLDD3LsuiR2xv1Het1cS625y+HPtr6InfmJwLl1ZjevFV+RsfjPr
3QEdNtV/XP84uQ0d6hUZnzs+CFaJzv/9doUL14aeCDPpHUZbOwwxDUkDyNhh
zTjkqhBOmHqWyR0whV7ECTVz+/QCmVbEh2KUcFtd1hBTxxaa+WvWwGM4iMLa
RV5bppLiJ4rZ50uKSHHBDHldLfMYeKZq3WttxoSpFPxP0Nkz4fC0pfX04lHk
IcBSd7ZUDMvd3DvwbhDDfqeujR/XGwU9Oh6Xh35IYQ5Zo1fm7VL4ktAnejHh
MXSNajwtK3QSrXZp/8kyEcJvsH9wm1MXOMNE62rctYkW1R8ZjcQqYXby7u9h
tb1IP29XhVCMHlooL00sUfPjZHbJWNmqz6C/TKp4JkEMzjNU/B2xk8O0nKuj
j3ULEH9aPcs3ZSVYSXBSecuPHkOyXZJ3uAkYKxjfqT/GDo0/PVZNsaOEfMST
CvZtvYDJcbrm4JAfXqB2uOSQwwizMjyjuQm7kSYlqtE+rgBTREOmbRcEIc2v
s2TBzn2AX90Dbv3HBVuPJ1w45agI9WRPhS5y9gAiRtL2ftIodMfw+y2DAw7Y
cLoOXjloAmfnmyiFK1bRO8azt6fE2eGtv6IdU8Xl4Hru9VTOAi7s0fOSguem
IqR9xGrP4VIFBgnOinhrK2DvuqwLkQWCcOCx7MOnGmXI+TPfjTkZJZwxfrxP
iYAB24nQGWU5taPRl5XZk+br4EzY2ZQkDlHsoDqgzCJYBy4zwv7if5z69/Zw
+9g5/n/+FNfVPvULyBvNrjVQ/AVPX6ROsk2IwFKXzatsSXWI7JweyaonMVxO
st++8EwKfr6ylulV0gqOuXC2S5wnxeaf9f2zUhmh7lZ6FgvyQPuxmtZfbytC
euLdsbeuXHBFb7uea3YTiLlpRnuy8cPbAZkapN4ykFKb6UnNu2W028z27mcV
PwzPq3nqhmQhu0LL8Zs3R1HAR5nK/VQuGPtSViG0Xg6e5qfmbWibQPc73qZ5
twhCn7fMobPqCrCAzB0FRK0AN7NT5nkecjDK/ZjkkBcbfFTYrvJlZAOFbLJ+
EfqPDt48J9sxVMmMdTyOM32j+YruwPVvjJ6HYHvz+xrbPDuGjepPNcnqkQux
SNSdDgncGeN8YzlPCh6Um194aJ4JHjY1MPoZSuKpB8GO+yrSsISRHlXu5wDJ
Sesr8/9R4uCFSR+s3wWgf13F6+l28Nur3vM9PQ0mzGwJoizqATes1ZtefOsG
+6ZWuuqO7Jh34r1tQOUEGBNbqvR61YhqRJgt2Lo5cK8Gk73MziRwE7swyf21
A+VZkz4iHhLAm626AXk3loCYILeiQRIGrNqjB8tvBHGe3K+QK1HLgIFS22Kr
oBk8qPXQXG1XxO8qdTSWCQmg1+X3gpVNbSjtP/uA27JKmIL7lm+PPgEkjdV4
PCLWjS67RHBlp5Pg+yJE694SR+h+AAvv/o1BYFhBQte7T4axqkpNcQEBZvkW
G5jybBQIPXx/jUacGRMoCS67M1NjcaNX4n11nUiQw/RK6mUWTGnSdfphAQ1e
+vKo3yt4CJH0E1/VvSOJ/wYUjo3aCuKqSrVy/uIR8FJ2tC3yUBITvblZNNwg
iNWL0jw0RcYA4dOl/1IZ5TBDK493S6oInvrv/dqT3/3It66+dDlDDrP01Rk1
UYtiynOpe/pso+h6N4OgxsA0yLZVvBWuzoUvKmnCotwOxE73tHeOfwdJvHZI
m25mw7xmmw6a3a2IjqFM0+zVLnoILu2myXPgzzb3phIJe5F9eDWLXDohLibU
E1y8K4DVRSM1G9gqgS397LkpUyLcb6p24QKXICYX0bErEW8HTztLHnLHMeIe
rVsDn8wV8YJtB2F+WRfaitKjcV1jxPecrR70fVPEBI+SVqb3+5Gi1a3bxiQC
0DzwiVr/rDymnvNLrTqLUX5L1zaXiQA0aqyp51VTwGIhNwl7yCtR1c3rlL6+
CjDZRYSSu5X7H4cUX/0RjUH6lSqqlC4FmM/F9jniGg8e0VxxfuVQCfhFf7Ob
67HB9VWdwz3tv8Bmwm6dvq8RMNKMqxgks0ORJ3KJYsEEMPpugXbufAfokh31
9iEXgMZjf92bRkghpBiKs2rGyEDwAd1BgQB8bh38zrWGDN79uZJsTtaCSGYM
QjbWFGBALf92ARc7FHpGoE5wrB1UjMa0K+gpQr6AKdKgcHbYcems8j37bkDe
dGTIcEoI3vzSq9VhIA8lWY12u5raQWbSJ82H0UJw5B5XjVKiPHT88aVI1KYH
hOh8eH9xXhF/F1WvPrk0jSiO3TcaJapDprGq/MraSvjGY41LyjdmUGJP+lcJ
4hZEfG9xozmSCz6DAZY6VwXxElO71oXiWGBEe37/2gETJLStzeQYEMJMSRd+
f9UuA8Y99KfdNVng+CPGOTEBEYyjrdUnlJ8j45/rlhTTLLB9v4jyy28RbEyw
b3b3Yx4S2ROOylMWgNZjNQqJo6KYe0xpu1k2A5kTiGutW3NC+3zV5esqkviN
yOD4XcM0ZD5JecuXmAuaq/XTzXRLYt0P3rw3770Gd3MGqORGFWD1noZsK48A
VCpyTpET2gRlVVWPZ5i4YBCPafJXYTl4p3fagujjPOJJPTbrm8AHt3NfUlfL
KEJSkdnenPwlEE1aV5zpvYymt/gtxlnpsNaTsuPlqYOARMllyO2jLGwyu9lc
fZkHeniVhEaRrCMro3zTyg4qqBvvbhqZwAZL3N8UGRn2gox2VpMH/7jKicVs
RKOAH5aax7WeCO1Ccy5p+UZPh5Cf/qybtgkXTudsTTSS60XkHkyXvK/K47/6
78sL8wRgUGulTUhXFkpw41hKey2DmbqWz8tlisEW8Vxrk+IE9GmGMb2YTxZb
Xq006OUQhz2h13accj4ivyJf5ysmlJhHk2Y/x10A3vlzd6I85TuqvjzzQuoq
OU5LePddXJQfQo5TfKdyLUFiitCjgIVt9M7tg5KANj88FpLSvCNaCH4IPgk/
kmHABIPdOxUNotDiiQ6nZ3keGFrJjLOXoccBqrdKT7uKwBtRD+IchD+hggt1
Ev6MBNiYTnsof1AESh5GvftwsgKpzn2yuyzPgseeJG9180pDakujK7shr5Fp
yaDzTzlmfLdFrvhynSRULqkQP/eyBMRVE3HWyR7DtGkLAdqPpeB/SwJybmdq
wNswJVKKPlZMTz5np/2LHHKEjULAVISsOo55UJgzYwZm3o0LFKSQvL3ggLT9
PXLZF1Gn2KLH69KRs3VCVPC63+D+dQ1b8KCzPjCAnQ1HHVP0rIMMMJbR5udV
s6+onauktvorI7bRRMHZlMwQ2Zx/ZsX3BVhbGB1++0yDCz7dPSNGxQaVD9nM
9SVrgWDxKc7o4D30qFR5VEWRBs/gC/YmtiOA/f2Y8BMjBmgUr68eRMmGyzh/
9C+zFqDIVMPRCynk0JFC9EyABzuuoR9d/VJfia6LAnMyCXYYsnx7PZ6eH78b
LsFqpAXAwB095bvPAE9rHRc9vCSAhzz6JeteVYAfIY/GCAlI4ace1adVMYL4
SCXDyWynHpBEiCXfGmeAbTUS97/+ZoaqjiVuDw37wGb1B2WHf5xtyOWRqnqD
B1KeKzpx60E3+vZ1+HS6Ige2CVB1f1IiD3Njv3Ad/UhCEeOfldSUOPGH/mWO
0psKcKa0OuIHdyHITrylDq5T4SCWmjjND4pwcjIs4tebP+CvZ/+JoBci8EcL
z/ifVSHse5bmZVKjFSircM+kSBaACVuG1BSPxHDcO2ffqItvUX52BUHigQIe
/EjbY5vBBo2KrgYqkmOkf9ntjHe6PPZq3Fo2JhOEZf+AKIO+AAmsXJ+xP5WI
kibsy/NyBKF2kyOBz89qRD8K5rP2dhE5n94Qyf90vXc4198f/29m77333qRo
nSMRqRBRRqQdKQ1RZkaiyKYiW4MiIpFzjOzs7D2ys8n+9b16fr7X7/e+rt+/
9+v1T/V89rid5znnfssQgWGLiWoPlnKQ8Fjv9kZeMmIQWWnQtJaGeyn7dFOq
isAN+47RaB5SXJo7GxCjLQW/iD6sYU/1A0pmQTRlRm+Qq/WjvlJ6Rdgx6k21
WzIenfrF3NalTondjkWpyXXLQ3G3A6FCoZmARP3Pn3ccLHh54OqluxFs0E3h
g+WL4y9Bej6doJEiGz6gtJeaL5sRir70lDoaGIW6U0rcXx2aA/x8dn/45KaB
qzHzw/mmOeBBnBfaIc4LaRPnhZh/pJy4KU0F9+7xYSRjp4BLTXsnv31bRJi4
L3yOuC88RdwXlqUqa657JQKtKtKlqOy6Dv15T7HFxVKPmm2OriXYCMLLKxXd
gad5YdFxis8kEYvooJJb/BKzCDycNPi6M1oAmoY0vGwJHUJhH0wx94IoZJLa
VmG/IQwHhd6IfNKcAr8UFIYOtIjDLTe6iP2MovAYDzvfBNUCwHmFvrElqlCG
fDAvkXv6kLFN8ibP4DQ4NadVYnb+7/tqVR/pqLcMJux4emalR4GM26lIHtd2
oPa59tondwq4/epadt1ABeIgIRstsx0E/AeyAhTMGeFFHrnwzJ/jiGb0XO5U
zQp4m1+tlzoqBjf6GG7KJf7NdYO0qOLWwIXOR8wUVpJQmnf2wnmrdkSTnl8v
enMTCGzs77BrlobWubq1m0KDgIZ6xPKQ1g5o519+XaInB83eFhgNfvgFrvyc
fGh9dAwxfyfbyWZbAA5tkgn9Xd+BQ3+NYfy1FXR0D/O05xVS6L+5eEopMR2x
yjbOVUST4F20rzskv9PA4+smMr5p1eg34ZFXIjzyDwiPPP8R6Zaau9xYiGSb
u3xLFB7X+7GvRfgL0k+My9eV5MOMn0VaFTgk4Eu16DPbH0vA/W3WV6XtAnj7
mk5ItLwUDO4okE24UQlM5GJu/kxaQpdu69CZiXaAwz06tHxTDeiuwJncw33k
2KKpgMLpwBgwe/tQ/KRWNgASI1m89gy45O64d7faPAgGI1lshc2AnvCwPyc8
7CcJD/sOO1067QcJ/KIvCrVZ0MBRfgFBn/gSMM+pmAZZpHFyihV4I0EPh/zt
/Fdbq9EIt3Gq811ZnHldFLnOMcLvGw056XxNqJo/OnlonxI+v2Fmw6jNCsdh
n7jomWbwKa1pwyRoERXbCe47OjWIgrk4YsY7e9E71p5vUk1k+Neoi1QUnEfC
QW+ea4hhsGnc4J7aQ4cdXgxlBwStIbsa2Qp/30GQQvjNDxN+82XCb+6SY7tz
KUAcX1Tn2jzRworfyEWoXnzQCI77WN/UqZXEfknZ8bS/2LFrfHDQB+kOJGxi
0S/OKIPTmY5rVf7hxPe/XLQgIxlAfA6KLvG1g2iMLnDuWdgiyq5gKKX51Y1C
8jjXeEXn0WbcrR7+DjJ8KzNhz4ZMMbhIeMCDCA+4DeEB962n0Kf7xIqfOV31
3woRx4BllWWqrh6kfDiiIVjCjkPM7+x8apHE4tn1wSIRbag82FdKpZETPz/o
4XKVSwYnDRgxyY73Iug4VM1/qQP8IrcInY5bQnUOiod4j9Sib8a17wvdxoAz
5dsXAZ3k+HmFzt3RB5lAIe+U690L82CNOnWa9yIDfnHlCbc0SSN4UIb4g6hX
wUF/o9dm99lws++tkOjzX8FZwq+dSPi1Rwi/NonPnOR2Ag30Piq2Z+iNBI56
V/RMjLcYpNOkuzy5Qw/t9JJq/Omk8eH1DxJsLBXoxHPrGnZdJnhYX8RGzlEW
c0Y0m4bt+4GgxYsPXAIL4G7MLjI22THEZqfBIdqUA54cqeV6eosUxo2odF0/
sYJ+62+wsd+IRPOW+meeNtNAr0NZPL8ekWBu36vFsofz0fnvSQ66Bn95sq3v
9tH9dHgosvrqKZ5sUN0jnKmbKQCT83ddbl1jxQk4+aEUfQg6RPisCwmftSPh
s+Z+0OCcTCUGW8njWSnNuHHYMHVn40AqWtj57S8mLAGn305cFaDgw24sZtrF
NFmgzo8xOllDClIaqSP1TwKYd7d8tcmhz8A79ER+8jU5yH/yl7raYxGsa3v+
2snKPKSUHKM0p7MMtCvi9finqsDXWE07TZYWQHKrptzgIQU0Zbr7rXirHdxO
aGGKistFV4OrnF6bMMIy6+PvV0sHQev991S/bdvQS8ITLUR4orc5/3mi1Y1n
bS6dlYRyKtaF5QrroFiQg3KB/jtq6FA0eNDwd85ZpQ02Mm2BtLbq/O6eenDN
1nFPiI4c1H48S9U7vwN6j3H6vLjVChrynf17uP/O+9/w3XoXGXykteWeP/kT
UQosq1YyT4OF4SyTLf05ECH7IelUVxu4NlfHc5NyAxjtRrfTrHcAt9wZT9vP
X5D0W6YTB0kpoHnpr6p0DSr48H0Hj2lzF1ok/MuvCf+yF+FfdrhCPqbkJgC7
HXyrx/lF4AuDl4Yd+6rR4k7QhQJrYTi25/KM9Y4onLxaoFXo0QyUjke1WGyJ
wAUSPZaWQXGorX72k7NnB3CISdDefCUGt2tk1PXKJeGr0MXuSto09HbkXU7c
AQlIG0l39luaNHRQ1LFKPdKF4t11VN5eckIOPze01z2XQcXAuC374QYgp3Vq
ag55oXumdzbkcyhg+1ez7ZnRLPS4jPQQw48AtLt4vNUqjRFW0IfuGjZvRq2E
77iQ8B33E75j+9zHtTO6SUj25PWNc1GSkD7c205dqwSRRaoN7D6Wgl68qZyX
ZZOBvnxR3PLHq0HMvf6lhyfSEA25xPhKiBw0/Z7zm7GkEVTu2StIa/oOLXff
vF55RBma3/19a2ulCdlwDasam2cghSfxlxR8VCB1iOb1QaMyFDKXqGWpM41y
A3zNVNXmwPalxD0MgS/B7J1fhowaG8ijSO1zqcoOiJjN9/CvcEe1q+6e+ZIU
WMxl/okMNxWMCEn12i2TgJK5mbQvDrPhcdFNOtJaTqj82V5xO+oVeHq/1bFI
mgt3zaaLpQbywiiBObq8sHvImfAR1xE+Yi/CR2yjblPhkCOA+8s9365QiEBN
5lpB6yvBSOIYq6udmzA+8/7056oRUfhdWPfeR/0oELu2FMwoJIqbQuVKXpSL
Q+ZaEotgvzjA+LY95WuJGD7mQvrDIUUScq9dHFwIuY58z3z9evmiBC47195x
yFcaXmw8tTsj/TVao4prZKWSwgd1MkeYL8rCC8pFBuEUocjCJaas79gy2r4r
uDu0vRKc/vJjmrOsEsXNt1nTeVHgUr3EK3eX2oDy8e6bdNlvAWP64Nl0C0bs
8z6W9/n2ANgWIhn2Ha4FKwEbb2apePD3Arnx/VTTIG3izqcSr3KkJuTTrOMk
gilG+roWHy+C62ecZvbHJYEQwiMcQXiErQiP8KRrQGP4OUksMZVeok+/BnK4
bT427/8KdKWCGvb9lMZ5jvSf79ZvgA++xgX8+8tQUuuz+kEDOay7cOvN6+fb
IEuAynvTpRplRuv/iuZXxrmbryof0JJBybU+WjWjWmB2x+65Fu0CGlw4fzry
4hiaceLzpBhsRrmrb69cO0eKo6wvtSG/FZRR/Jvt/rVcUPRZlOpTPg3uG6D3
fpFBghV/mM+flW4D//PzxhF+3knCz/uwZutW56IoTt/FQeYezo1Xf5l5FLSX
g8217hg5WgmcJUR2wkKPDw/khT9sDa5HHjJfsbuwFC7QmI3eu/WXa75raM0c
aEWsRs60QTfnwSj2kCqTngC07srtn6zm/28vECXRC7RD9AJ1EhxrQ3DsN4Jj
TSczXhgai8IUzDz+xJEXJlCafSWXG0bB7DrNfoUt4J1jzrzMzBLokk9dzSYd
A77rP6Sb+CZB4TW1bz0p5DBJgb+z70cNUv0PZ5L0/+NMn4uWw1SFFJBf70Ki
yKYEfDBRSWd0uRN5isbgsyvD6HlPbcgi7SLI8ikwOJX6Azwi+hL9ib7EeqIv
Ubtee9nfagHttjLJFDvEAKWLPELVc7rQL4IbVQluDCG48ccz5+Cff9jxaZaE
o49JxWG0nfK4lTVGI5q1bswUSyjviqPKwqV+ELfmobzPqgZlHG4TOOBHhmNr
Rckb3BfAo/20dQeZ08AKV3n+dy5azMU5PJnITgLb7uwEsARgQEdwYDLBgUcI
DqQ8lNd7kEoC26HjfFoezPCgZpeUBO83YKM+1zDsLIUbX7S4jkzxw/HovKAO
1WL05Bqb+aT2EnrrnWb5sKAH9VxBPuGbPShTf2Opjp4CM7WeZpWIGkGT94Mt
eoWLQRrBb5oEv80T/CbMlOJ56pgEVjbZ88RBgRGzqOt37fnLLfvP3uZOVpPD
qiTBG18rSfGu2RaJ4Es96M6n2uRde0eRs22Vs3vOAlowdsqKm+9Bu6rZrASC
V9EhtjcUvZSkeKeJrFiSBwNHgtOeEJxmS3BaopVx0Vd9Tnyk4OmHlFQxfKaD
i9p0qQEE1p66RJkigh337w72UpDAwXe2sqWODSCbhzRW5fONYB8jx30B9mX0
p/eWgN+HBrSho955g7IZJJ/NoSoMp8BlpNA53j4HsNrYCETZ5AALk6bVvhRG
XHOg8lbk7XagS3BXEsFdkwR3UapPHZf/QQqz+zp8GCQkcfyRR34s7iWAvSAz
1611GYxmyMSzzUjja988MupZf6Bx77vtB8jmQaa2ZdGVE5PojEFjbl1mKjC+
fiBj3WoblPs0KqWJbyI9oY+pRhpWyJyJ5gZvAAVcUJhrwiW78FPu4ZwZ2SRw
gOClcoKXdsA/Xrqs38DwoE8EAr6Iuo1EPixwN5CTeTYa+bevciQ5i0IBMgaL
X87iWMfI6ct2dAKi7A2MP3N/GZx6eSGjWT8HXEkZ5FuraQIcxl4/9bIoYOpk
Wqft+mfEpjh9MPJjNqJ3mL2SaM8IXea7RJyXetHd89zT46eb0CuCf/5Q/uMf
Ua5//ONNrRR24pkkPNgt5B6hPQJo34nZlKaUobiuSGZJSzk4GlIztTG7jiwc
bat63jUAMn7PZw3dv0GVyt5S/oUZIK3bTOpB2Q7c5i9Xd/x9H8D7zHptlnXw
KSercP/AF1Tf2eS3cpMGcvso79fiIYUU+nFSmt+70DrBMzEEz+zu+8czKok6
97LVhWHs4hZj3z0hmNBtqOJ9vRpJvqH0WHwgBo2xzc2McCE4Grj5tCG+GXz4
dpJjs18SXpazhYlYELYVM1z1uNMBbK9adItGfwOixicaX9gvA9W8o+5mu5qA
7uG8j3t+9YC9RaYlQ+cp4IdjWQGHq3NQWQdTujvNHMimT4oVjmSAkn3armzN
bai+/v/LJy+e/uMTzt8D4sc4Z8HZ/RSFq16SUC/pz/f3taVobO0cmvL6+7yx
Pnb8lCUNh+uE9LbjfwC/wNjauSMTaOhcP/eZS/MgkPP07W6UAYoteUNrDv19
7i969+4vJ4W55m7dM7HR6M1A5LVdKesowoSz4P0LOnhs7mBXh3DJ/y8nrN57
eV38KS+ObGSKjdEVhdRaCU0Xv71GsU3foo4V8eCA+jOH/889GwnLPesh77KB
rt/P9+TLXNj2edPDxr/r+l3Btpa/9REg35f3uN+eBeuDm6YhZ5VgVs2QHv9s
FdpNa4CE55dQYfPFycr7LSDpVJYB60A5khY5win4jhyP1Xc83tszAQo+vZSd
O5AMxOVO382WoMfnynh7lw//AamXLZtkmEtA/J0TL9cdeTAb7837v89xw5F+
viR5xYPgGTHfR4j5Hn/q33ynPHyozIBEElMZWzb33KGAjj/ywmbp8sHb5aHv
nM1S+MFB8blrJkww1knMdrquCClcu8r301AG85NsZpxo4oBhEyGmd+UQUqWW
uqwhKIevIuxCuSECK83XKPe4ZwNN4a/7u8gWUZmVzTdRjhG0Yl/5Wtm7GYHr
aXsquMixVL6ey9rmLNrv5Mp16lYOYMAUVRl7GP6ui/WONQUtoH3XN04eMmz9
/53v7yKH2SnXxHChX5+sAg8HfsVxenbmRjlgzn/a2vh3jrNlXkzrtWHDpy9J
RHTw/EBzI35VRjqymIe3Ne5pJjPmPOj4sP5pM4rpfKQux/oFMdNIl+R8pIAP
g8T78ddSZCnrTPGxmxeb6jvzRcgrw96RmVODqpUIHTXHKknsOP29bFG3ICd8
LeTAoseUAXYBdvY4Zj5sWX10tJSSDp74WnPVROk7ShrgaXZM4sCn3cfvnq/j
g8d/h6mRHIlCq8Q8VSDmqSUxT82olSaDLwlj5TCPfaFfaODQPVlz3bQUoNOa
ere/mA/zGVg+0WkRgQY5Lo81z39ET9r94reHpfBzJUoV9EoG8p4KMarNSUDy
B9VCTpgpYVs9i7YifSF40inh4AWNAtCzkn1J/fQISvTdKJpjpsBPNc6HHdct
BNtnOGPKXi6AzMjbl766k+Gk6CKfFv9kEKnRc/GJCh1UkvlSnkLJh0/5qRz7
jkpRwBXvpMdKnJA9jKVU+zk7ZlZyzk3mfgi8pYGBg5sQnFywWIrVV8K3WRW3
GE7lgfckOVX0WTLw4D5JrgMNUvhctJb7hvAt5Lw4ahwvTg7PeNb67fWeRbdv
CjNsjCWjj7NwXXxiCTS87kg5tPP3vdCuYbCUbwWaXa5GCSUIZbHXh3ldXQav
lE+SycE6wDuwq3phphc909B3nbWkgEeiOj9acL5HRhyC7t0yJDj56K4+9t41
8Lap2y5/nzeoZ/RfUHJdRo463kqjAtmAzCZXqt6xBrl883g1e44CWo15bUtc
7wVWUfsngiNbUQe/fqna33VXhKv1LCUZOiRL4tDdhFrR6fd3/WKDGaDwF6pd
lppzIDBQrEBYaAWRGyX3Xv67Hqs8rk7TvFRxqFV6w5DLfwUlut9KfGfDDavl
F2I2S9bBOzahbkvtOfCs8DzTkTpOGJes5ybdQgkVxlhGptxmQc4d8xltFnro
uLHDYk3JAW/3Zsu9jJ0Ar6h2Bx2TooBHO27WzChwwRude+xV+n4B9KBa0C5C
Fr7+3vFmToEBSkU9ivXavQRM9wn83vm7fpO9Y5HanDJyyDTJ+FVQ2BIoChZn
DLVVgvM7kgXCmizwwSeNSp13y4htQrQRnlWAAws88qHc/LD14UH6/WtL6NOz
UKWr0SPAee2q9nD/AjDsSnfvFpkGemCffCoFKfRxMZ8ud6eB71k+Sapfm0dl
OmQ+jRZboOGDc/ShcVpIQnFJ8dijOWQ2JHB/ZTc1dLr1qkJHmRNG6CkLs+uO
A+bD06Hf/tDD5U16irPBvJDL2WQpavcMoBXb9SJXch5cH/9wu2FeABb1mmlF
rI6CUsJDvUP7z0OdRnioaX1VpRr/LILZSGZv3Zsi0EjEbudSOEY2Aebcz18K
Qh+r4tuXpyXhCS5WIFD/d94wrwc1XuKFFb2vX1qpSkO35Fuyx6R/A0OWO0Wz
zKKQy+0NTmaSgxmfKc4dYJhHYowrHSXzPPDOife+620K8B1bzNFvzr/R++LY
xBUaWRgkNF5WTiIHlUZTNmcujwO/yFzvqm5ySKH1fOP3aRXY//nqkWrJLuSU
uPfDhYI+tBN+MCnkKiMkiwiTcqAcQk1sljOMZhNI4h5V1BU2HhgSEuhl4NkF
JL8W7bLX20YR461/jAS44eRg8zOaxBbAezLKXrF+DYUq1gq2PxOA/SfYjoWW
dIPbTOvrafTb6GnoTgeLugh0iTn09N18LrpEeKIbCE/0FOGJFrxJz82WuIH0
C21vXzgjB1fONZJ8uzcAdKijmgZOkuCbAdffrYkpwxEfCcV9aYPIhFe6Zdud
DR+ZwFiSTgn6RNntkfv75+robuEzKJ0FJnGLbv1fVeGoY2qG+WYPuPMiIV3x
ughu8/q92PxKGRYLGnJbnKwAfV5eM56a86gluWxjo3ACaJ9luRqcl4lS6cgv
mTfvwoN3Hye8uUcB92kf9b720gnU66ZncgdT457f3d87zcngCcbo5sqb2SDC
RORsdRMrLtpVpSbRzwxlmVvcHIavoezkQXor37/zQ4A9096PFl5qoD4afvIL
+v72K8MlDX58eqvjbSU7BzRN396XrvsYPOCMzg3gFsV6XicZ1Gn44DPb3w4D
lxPAg3Nekk1+4hjfk52luywKP7Yr+kyw30IsHUZDfex/OZjUTqPJQxheiTaj
Fur6iCx1GteE9knjyZfTtru/SEBvm4N+Vw45gQOkt64K58jhs0zOmeKsItDf
nIuqWBkD5wdjkrZM8vin2PphsRVxyFWdFnHfKgkEz0pYSTirYG7Re5GyF/mg
4+27XJ4/y5B9Czmbi9MycqVzDafe/IJEfbVcS3o6kFlH6m7DTRKsE6nyJfnt
KvLZdP1w8Q0GZC1l506lMmJnJo/OMZ0sMNbPzL+x3gW4Tx8LeKTDgz1DMi9/
bPsKRPojNX78bEH2ZFzMufPcmJM5sn/1xBwalP5Ir9fdhhLT7qj2xgrjsIXv
Wr2PqfDu8wyDK7l5IOrd1bMJ0pK4WCzJ9Z4fKTSPkoq/dLccDIyeoIiIFMQb
pje6alxZ8CbDXJV5Tz7YsrM8THGeBa++BL0fkgVxX77YpG1GHpit9danCpHD
U2SCVD5HfoCO+xNcMSkdqI9kY13ziDKeG+y6fEe3Cdz9dDPhnkMXiDc6dlGP
URmztrjuGG5RYA/XJyY9t/tA6uZ3Je7rKtjlR4prxKstkHvZ/sjhumoQ4ukx
b7+ijMMGT4/GXWfBMV1me9Q1moBBygu1zkwV/PFrmRIDEw+m6Ar3tGv4iUYZ
X+r6W/5Geu0uoqJ3f6N+3qt36Cv6EGXfoM6YGxVW7xpgns0ix84F7p9DxIeA
OQ0Dxa1zbJhWtenK1AFmzMD55gJ7Zhc6l/5iTUOBGTdXmrAF27NhDef+66Ka
XeitfpiAvCUH3o5S23rowIEplKgdwhf+vo8ZWeGqQhLYDa89Evssgqs8tuYU
wgaQeCynjHkiNRa/hr+nnJTGDsYBlPeut6LCGOmCO/fE8BMa+m5NPzFsFH5N
KMJjABkUHCpXnpXGC6LvbluPiWMTR1ZQUD4Ifuh5Wku3iOPEM3Zf2UhkMNmi
UZLH/UHA9l5xWu6rNJaNNLLZWy+NHbePmx6gaAFZKTwcs96iOOabzF5/I2Xs
525mLlb5E72e7jVh8NgGbPTiu8KvquBl0pzzS6oVIPYge0X6hWH0yDw1Pl2b
EQsOP/3U97UbkFSTibLTNCGrU+ryTuGM2Cy7Sz3pfSeoVuEct1ufRfdUApz+
LHFj9WELu367VhQTKz6bsYhAaPnuc2J/n9P+haJXkwea0LkrIgV9pRvA2fAl
o/0REbxLXm7gZtMb4Eb+mC31Jik+dp5dXm2vHA6+ydTdbdKJfL2oekwiKTBb
WHSxHbMy1jWTiLgg3Q1mrYMZyEJbAfXxzoJNbWUs6Dp1tmClDXAWrAtceM4A
VSuqnB5cUMXXltXJfNoqUThT/J6f7RNAYZvJgFlpHrENii+y785Geq2rw0KZ
CjDDSMGZb0ESv15KKK4wTABLdSfEmCmXgQ7P5rejbM0o1PkyrwFHDbDVop56
9pocCp0upz9vOQl0DQvHHzbloZcnufUDdBgg/+5mYTmFBZRqdvxgAahBQ5Yd
mdfEuOFDb7lXhutbqM1+tFT0eBlo/XwkZJaDB6raRR9+lzOORu7TWO13rwYt
vNT3H6/xwSCJwWgmSipMv1vFkVHg7+8jk8OK9gtCGjHRs0xMjYjWx2/42EYj
OJ64V1geCkH96yMWDFrMmPtFKeQ0iUJaxLo7l1h3mxL7FHpx0Qu5kSIwldz5
10ZsP1Cu8zh9ZuA9umdyxmqLRhx++th436GDHR9yD3Z2c/6Imt36xDNPycKz
Xc+0b55hxgbjC6dC1iqBYLTvxA6rEvyocNHuiwEbvixGMsP8uRodVhBELySU
Ybnva9+cuh3k6JfPZrbeiHSi6yi2VZShWce5R/rpvPgNs68wf0ke4n31QqPQ
SwVuP9Bv2I4eQiNeJwbt9pYjztQHX+j+zqHw3VcYMlrmgD0tX7NnRQ2Yku7q
f9y+AFBzd9PvzyPAIfRRVK9DGxh5t5ql8Pffq+rxSZfTP0nhpN540VB5PmqB
YpOTf3ks6cWM/VzcH8Bpe+r0XFonGiv0+WLaQwvNZV/8MvXfAueuZxT2GHch
8+/frYoluKBRNrVq9XEK6MFkKdHY3QweMbe5ra+xQzqXiKdaavRQb4ai6+iH
FhB/3TTj6lEeeELZyGn1MTe8PZkhm0f9CQVme7EafJeCfBW38+7MMME9+3P+
+LE3AWre+Sf0h2RglaIQm6AYJ+xVeb1K5tgOPORrt27VKcBGYenQXaK88Lbp
Sa6bQp3I3VDn08ZfLpllfZLbKCkKSxP2pTTs7UIspMo3d2KVoUkDzRfb45zw
Sxav11GOGkQb3y3WrC4HA5dfcWYySEIr02J46WYd8vEx9H9WJQJHHqTezJBX
hGluL/O95WpRJyvb7u3b1FCLrDHtyiEVSOG6z2o7rgJVjkQ3v5mShS3x5EtV
QrJw89n+SNtTTUC0DsoGHVsHD7UxJ2cWHZyr4djevd2BlOap5fd9oISuVhnh
LD854b3NSlBu0wwWO54H0N1ZB1+M97yhv8QNKfQz/CYrGsHlcZbftfmMUMYz
4HYIEy/cSPFQjGxuA9ylpyM/CSwDrNUjKFctABlvzrOH7DQDjrc79NR+7NCZ
ZpM8MpEf3l3883ZPYjYK9fP5dOvgOKCP/p7E+VQEXlSUZtLNeIcit1q8vZx5
4MHeu+z7XkjAsJyE+/k1TUBD//yfoBQueNZfL4r1lzQ8oJ/YPdrSBiqCf2rv
muCDBcmOXZEXFaDbA0cmpQcd6OWe1DKjXSwwCo3Sel5Rgvo/TODjs22IvaoA
SehxQwsG/7iDN5RhcNbb75lHqtGX8M2D9o1rQIR9wPvHR1UY21VwKia+GhS1
FoVfpJPEIkX+1bQWitAq8Hb7p8RUcFDUx1RlfAFZuT170e4yAi5HuDXOHslD
N7md1Vg+UuA5KeWf6TJf0Rnu+nWPPR8BfciqZ8rWEloe4DDXetmMnH1KBdXc
GhE3c4Lh9UuMeFpyr5mkRz869Gm4lUazGWhcD3VvYObBCWQWmkZ/JtDzW7Kc
yrU16OHXI0oyXNz40OHAyGtR22i99uz9tJ4fKPVLq+yypiA+l/yGoUmgBZWG
KIYY/vmBEoz32JX+4sN/ym78dLOhwjH23Mdk3jWjX9y0ySLqHJhcpySDyYsO
u6ikYrFjjWjyfsXC9/M8OKjwhMjoXWY8vY7d7GJb0L0aV4a90SJ4El3ml6Pr
AVYHj6205KaA58R3Dx3iu4fGyX/fPdzIWLQ/SwhhrX6WlcA7zLhVTCGnZSsD
zLQ9Onw9WABHtO5zKJVhw0/RM6mV8EwQoLraq8wog40OUUpqZPejnqKkE0LW
lcii6joIOS2H29/QfiI/tYlS34dMDKY0oi9FEuonRZWx4VwEv3E+CaaWua1W
2dEE5FilFPeRK2GDuJQs1Sw2/DNEpWZ5uAXYUhwOz/FUwTLTyq8NRX+hyJqj
L4faSkCG6M5+YSllTO/COrTJxIeHBFs1TTUqgE+AM7PoCTl8+fMIp2uOCH7b
56V7Mucn2PXFVOPuBQU8pWVZNMYghpHYnwXB05XgzrUHe0sjlXHGgaQRGj8R
HOBh+iO3oxY9GVO1rXBVwk71TefNrv6d/w0PDCeu1qFlsvKKT+JLQEdP4Xs1
cx8w0Z7b7xK5AE65jYc1XSSHNd6/r11cmAZ26+JWVVytSGbVsVQ/nx4WKCX/
UXFcBg/KFKY/NCyj6yvfmAU+cMGP/luIO+Pv/59M3MJL1HPgp5q39Flzfsjj
0ZIYI0kJeTPinZaOLYLOC7sVq7jZYMuCc0h8MDO0d7iZk7drBjyyG3Vi7uaE
H+NDTWYa2WCJ0TO13c7zwIzw5E4Tnlx2wpMrez7q85k4Xhh0LIPrABsX9E3Y
+0nJogaVsFeWiXtIwYHMSPbjASyw8iHPWBD7b+Cc86ahtFkGRrz1onyqwwYV
HRjK56YWwdCc/dj2Q0W4k2A2Roc5IdSpS7pvtYyko6M948JU4PUY+eqgfbyw
ltLYTHN1Coy8zzv61lkWVnmofc2el4RjM4Y9n6tH0En/SycOtyyC75GR/Nzy
ZPBwj7zTm+v1yG0gbHuanBv6Ro9t/p/79fkLsyJB5b8A+62qtGgZIWhwnbnz
5nN5KO5No8YhN4fGr9TaflwRgdcewiCt+8ow7MIwRZPsKLgbymgV82YQTX9Z
SdbXpIDjZKqfwXgRKn2q2vM5ZBnR7osOCszmhup59w99ZmkH396GmVJfpMRm
Xj8++3pKQ9LdgbQnk3+CEoM3ct9K6LDwzZdhq9VK8IhK7Svrwj70bJd/Ly/J
3/cke4xV1EQVPip0op8QaAVRkkc/fQHsuGyp4mkuZIQH/VKO6CS/RYctyw8G
MSjicN/2l4fuSMJ0CdkuY8s0dM5l/tpTOUHc/OHuzuPwQRTy7ARlcEMnWn3c
ei7Ekw/vdIdIK++hwbs84h/e2OpDHwnPbBjhmZUkPLONbFeE0smE8eG88htv
LRmwcJp12Rm7fHAra2Za+LEkvtN4ROopmEQH2oSvVt+uBcrmQBaQyWAT//4n
z8RmUMLbCEsWoVY0t/X8irW7HOYVPOhcST6HLrx3/jyT1oUKJHjn6zSV8UZL
e0fV2AK69WVv83J4D+BZK2Wyuq+CpxUlAqvPLqEnoLVU5Ws9eF1qpFTWpoQZ
zPlktpQF8OWgEDGj280gmyGH5Oy+LWSovuhEe2oLTaUdGBxIwqCK8MC2EB5Y
MsIDuzj2cGvg7/tsqrz8YV+pCO6/IT1eM9aBDNa9lWP/SOKlQk01DTopzD1S
+TP34yDotuxOL34oi20drwTtCZXFmJkrIEaqHUkqHVm+tsWPY2bjhwOGlDDr
L0o++4NNwIFiIv4NWSUa9xgtvJRGgclEkcyv1HwQbiZUGc7dgxLcru8q38OD
Tc5/+qrd34w+1LfVyTQOIIvLYcX6CoLYufyEW2tuG7pPeF1/EV7XKMLrqmW1
6PS2fwol7Io1zCKXwd2Bdjl+OU1I48JIVArHAnp5e9KpaJ8ynh6jlqMW7wTx
/nJevp1LyPXK9omdz6o4ufRrzp+7jciGWsFMbJUBKnDb2ISUT6DLUa3PJ1/V
oxcCDwV3hQvAb6Z/DF0c19DJ8LQGcvZaoEv4WLUIH+sDwsf6qHtW7yCHJPwU
LOxiukWGH2m3g5+1RWjjAgvvxQVZGNGkcYZJngr3XcwaW1muBWc7BmWYhFTg
hLr1G6nbDLjRhaV6nyBGj7s/LUQ94oUjOsGhWWIMsNiu0a73aDt4TfhVlQm/
qj7hV31YktIbviYBb2jHUT2W4oaq5NmPJCSbwbWo/JVUKWn4tPZU/sJTXmiR
dOCxMG0H0IW90jU+8rCm+xtnjbkQjEh/9qK1ohOpc8xp9WQrwuVszeEXfcJw
/xNPdpH8WjSm/FkM9EhCLpsZN9UnspDTuOTw1UN1yNrRrSU0ZxpQiZi/TrtO
DvfZ8j3Y5s1D86+97T+CZaA4xvZwGtHDji7boqXtdsQ/c8kl+w8FbOCXoOq3
4Yfvjs26pmn+BH2ER/UB4VH9SnhUjWxWDgI7FvjM1NBG3U8Kpjxaj54OagTD
M3pCGcGcUHaCv1zGTxHmtrwXV/NqRzpJsravSXmhUNrWmV/RKtBje8T4ZHk9
WNu1CkKmGfAM/Qi84j+JPnx1ecR3tgWwLK7aRAYI4Nruu8+rFNbRL9tid2WB
JnSJ8J+SEf7TCsJ/qhW7piTzUBoLbv4KO5pDicnvN1WPf6hBSqRrDQPjsjhD
KOySbRcVjj7ZlbD9vgl5vNpoJ+dRwWcCw3vfGTJifyHrm99sykGChmjCMS9h
6HPvrQ93IjV0cQeusQI/EJ3zaL6/jAQ0u3j6KHcUE5TVoXtm7DuCRo2szQ73
McMHT9y1HKYF4UJCO28iTQV6nSXnRJPEAbWMlc7pt4rBD9Glb5cZ+xFL9QB9
3RFyzOqv5nCORRIOfDr89pLvD3Qt8MirIz5UOPbBlZ13M7Kwg6fpufzbHuAo
b3FnbYABf8rl/c3IrwILtNe5n/j9Xe+s3qnN4RTHpVo0yJ5cEHZuvhZmpX+D
3sbSMquzyGLuMv5JKlcxyBFqaZzBlg3yfau2d6dSYGAt1UrDWIX+LMSKRg5+
Bb2yJ2cN1Xnw0HyOJoNNL1qx0b9Yc+cnmrU7dnvkuQj+dJHJ7sn9EZSUMCE6
6JoDHtTZK07lquKeJ7f319QuowFtBcbV3GbEO66RtquDBYePUKa6/2LBHRsJ
H/yfdSHN91MRxn3c+Kr++dMPFrjxOSY7RVO+L8DcMd7n1YgQPvihiPL+thAW
rQtkL95sBGwLAnk0EcOIVtq6cCxUBLP+LMtRE80GPRoZAdV8E6iMxe/OjQBJ
bCcRGZAsUQVSPfdZPkn+jdw2MuQWPeRwJNr35fjtdjS19Dgo4v4ior2x1G/t
ooJF9MulOKlrwRWdn7sCgyShSf+N3tMbCnhYiC7TcfgtEok8e6L/MzfsZhm4
+Q0so+kjAnucvSsAjUn9fU4NEfg6mllZLW4LSa576312TEHotVd2o480FMuS
H89mp8RctWR0ZPzfwb1p1anABiV4n91Yo8aCDrO1KFTv3viBXPbJ9p0xU4WW
5te4/Z4w4SHLfR1CCWVA8aqGKb04GeymKZdKm1sE3B6neKnBF/Re5Rm+LckJ
09XFVDvPUEPh3+K+Ln/fiwt+HeKFfYKQ5b3bH+1VZlh8kc5DMjQbPZsOLfeu
FYMnC8fM+Uo5oIOyYxpJaRViveetsHpTGVI6sxcasYhCubuvvz3pbwSFGr57
i/1IYVGBLs+Bz1zQnlZCQiClCbgnHi1IsaeG88h7HfoJw5MafmYcFFkI0NLt
DzJmghRituPDShLQGq5/vBxWgbw1r/R94WODnP6H2vy7ZOCxnsTc0smfQF1s
TUgykxt/jBCciupfRr6q1/ej23Xo/vkNQzJVETwuWqu+/nAbSacrFHW2vAUm
KushTgyS+HnHfqz4lBzHFJOyy6qVAvqmVSajciVcfXmcNkyaHj+WtVQcW2gG
94w20vsNVfGSmVDH+f3MWCeYUuZLfRViKynmi7y4CP7QHNf88HwInJg0yRYF
C+CnvbHZtVQ6yJH2ktb0/joYKmpht7y+jCz0YovFuqmht/itoInfpNBKT0gy
xnYJ2Q9P2GfbiMNzokKfWb3Z4E7qSQFSiRF0cdmmP198ELR2z79/k78IRPWU
u8q8JsE2Bb2Py60/4IChw3L7X/7c62RlxcA3i+SPq7NaiEyD16G7rFh+MsAv
gqcGnpBMIdf/nLdpJs7bCDU9eZ92YgFNaFQl2Yb8ApEhLy7nyhUhkjCdyqt+
U+jC8RuBlH5ziP1PC9mhi30o8veJ6o0f0wD0umXLzswi50Dy6vvL8Sg7f8Tu
ymMJvK5AxfnjNB1e4NVxz+YtA95P2g/wdM4A6yvN5GRLv8Fcz5mEfXvnQIDc
3QyegTFwdMn62uvBeRDD/5vK8v0MuKWUZTJ2dRLtrflzI2x1Dvg+6VOxcSgC
sgP+Shpkc0jPaeMSX+40gO2H9o+TOKKUN1JavlzLiAzdcPDObARqFzeM6B83
o5TV0bPAcxmRHtmn4t0aBaDkZsHyZhtaIbyZOYQ38w3hzfxfHkjkWUSOFraD
c9P6QU523rOPW4to+/GOZ3heBZpwt5tYy/gFvINF/T2PLKB91Bvhollfkc5h
VUtStkXwpn5T2Kt9GC26y5xK9CwCgzU7Dg8ClkDvi+FIXq9O9DvUUPmadQXo
jfG8LkA/i4z3HmelxDMAvO54Sp9gh3QTXbq1puZR3M+Zq2JlY6DmY4aWsuMH
tOub71ZboAhcH7bzTRaeAHpnzGtLSetRzSk2SLEpDLuNfnMYppLB3Z+plNMe
/0DO5e+4557zw+f+eo8VXrFD6pTZoHC1WqRR8uJOy3chyHhXezHtOiPUi/iS
bhZVh2pfudRae0rCe1doeH/yzwHhwMXv3BKjqPKyo5JalQRkCbrQ/3qCCjq0
p12mbxhBMSj/u+sdbjirO86x35IH9rGr0tZeqUYkpvvM54PZYOq+1sx2AwFY
LNNJP3iwEiHhW7aXoyShvFw0/9TkwKHsOd6iX0qjaOcDZ2qUpRD0FFU5e+Ww
MHxvnUZLOTaIDv+uyoccPHDkQKu4TLUo1KX48SrbdgAZlCwyeOlSwv7I8QIp
5l0wkU4iQ5p6EaXN6MWxX18GXrKx7x5mFAN0yDuBR2oR1OUxPy8sXALxDPfq
RkvbgIKo5jvpzgWQQJyjIyHO0ZHw/ztHV/Afv955wq/3mchL/pNPLd/xl3jM
CI8J7Tom3/sTvHi+t/PFgxXk9VXEJkGeB3Kvf2p9RTUErp3+JPHKf+7/eu7u
EJ67A4TnzpHIPxL5fiJfDo+NjeURh+FijNm/+foOBbwXW7tvtoLOEOvQzv+s
Q+UVs3LUdyvDWOOC6m71VaCqdOBjD/kKWpYZ/VZ3RBnKFAoofj03fuhXiY4r
P9MKYhJ8x+v6QRWeORoqYlO6DqQSxhttmqeBbRPatuFUhVuvBgX0u9kg17Zo
K4f1NJAlPGsDhGetgvCsCRL5JJGXEnkdcS7RkTiXWECcS6wl9k+3iP3TN8T+
qR7hU4slfGp1hE9tn/v/N8dEPjjy71ziO+Jc4hJx/8WY2GdsJPYZ/xD7jNFP
9h5a3ruM9KUUPQW/1SLFj0IkF927kN0gejL4bgHF9W+o6ZweRcwXzXHKvT5U
ccqEqtd1DklpuesJJEyhLy7b8vGTfUiM8KMFEX60wv/50Yg8msiLiTyJONd3
nDjXt0Kc66sn1mV1xLqMgliXae9RHOrq5YOev425xoM48DHyrL0PNrzQKZU4
yzYWAcgb1bwkZS+FldcUexdfFqGdh3eOBUqLwKpkaivdVDk8oaBoqpxZDO4c
SF2qqpWAFcBp2EdaGteFKLxcrkkE4eGR5C3MG4jv+DMdTQtu6GM7NPwkvxSs
rTw6SPGHEj+SMk6+WsYJzfPZ5fcoFYAQ+T4Jv0hp2CkteSbQSALWrsds3zu9
iDTlQq79MJeHea2QvzNMGl4wWR1HhhOA8pJg4dfbZFAyKyca8SrD8wzZhe6n
xtGuimN6bUco4WCTg41gqCo82yucGtfeDx4LBD84ad6Mvr0W2LAlXQbH3oVu
3S/qAsVP5EKCSjuRc/1a0zGfJXAYZI7VozYQJl8lYW7LjBNKJRoYbvJAynLW
3BNZFeB6j4eqdZwI7m15SmlvKQfzTn6RpBSqRqRBBeJ8K6K4PiALt95WgH+q
fVM+kRUiPavAlRQaGszoGbLn6xM+XHWgjtZ9pQdlzcQsGv/KR+NmctG5t5fR
H/2Olv39P5FbzFXFLYWXQHj/7cu/PZbRb5XKYrv1FkQ3W6diJUMK0ZPj8+Ok
Ani/iQyf7ck6VH9yNC/yHiukMBAKuKumhO9KOTPpmDcAw3e/mqPlOKCTMdeM
gRQ/5i9PJp9fDAQcTYNPdd14YCBLIVORATO2eNa2/iYsF5hVu3nyBovB98af
h6+RymIjKCV6pCIHWHHdqBR7pAClRejPgz5R3PiUVnzQ/Q1quHv+wInfAnBX
lrdewuN5cH6nVMKxtgW8esi5+ctEBar7XvpGcpwCJmTE0OQ8r0Qk8d91rxSz
QSeB4kLWKU7YEX3A2rOgHXzQnHr9pKEXlH7e/bhEdgmInbj/ZdOpFUyc38+J
PNvAr6kP3w3xEjC40t6a4NQCniXXf/xt3Iecw/gCowWXgM3klV5N1VLAnm6Q
RZ01hJSy2M3prRcB5f1VN3rlb+B1sOrRC82kWGOn1mI2jQuKXtWsSbmMgIV/
V32T2idQYOdvbeCyDJSlteS2Dg+DOfXb5CbPvqPLDzuUE0yXQafoCengz31A
gr3twROJSbSeeK5maJ4BRrhNtwud70f4yUHaFhY27Cl/Q2cwTgAqn5MyrhZM
RK8nnvX7CA2DeSW7mOPBklBpJmh2SPsn4v4x/fRiygr6cmk6pOWqJIyLSzJP
XmxEr8vUTjlEkuCm9rryjoo/oKeWnoqf+TkIIbxU3oSXqojwUkUT+QMityNy
0/K5qLb7PX95LSwqR38JFUtx0r9L70LOEvrPP/2dz0oxd3OL9i0j5Vf7Au4m
tCPRMGzT3ccGFyUMg+lrlTEoC80+24mBVUvvCVKvZfDirFHdFd6sQ2yZXNtD
yougWbnJK1GGET67mjLfVTEKpPb8Edx7ZgWV0RWmPOrnhqIye+zVl+eBi6bp
pMmNOcDum8Oj+nYarKQcGGah5IFzt0lD/mgNgTA3h9iRO3JQ02rQ6czbRUCi
1DvC8JdjxlU7peuE5GA3uUqibiQ57PxWMZBydQk8WLfM37aThW4vGk0TacQg
W3XB2uLSIjLY4/0sjEwZHtu2eyErSAXr4rrjFIeW0YtHOTpt9orQK3+3X8OC
BPx4pLL5mfAkmP0spEUxpQxTMmvVpFWF4VpSKsfJe1PgO+ED0iV8QFcJH9AQ
kWsR+W0i/0LMFzK6f/MlhZgvv3I4eURlSeAzlpiAR+IisCjgaF4RZSnqpx9q
PcNJD++Vs/9YlRSGzCynX4yWlqOJx4enHzX3Atp29R8Po0QgfCrpcFehGFXK
/SDNS59H4swumdquIvA6To27yvgFretOqoxHSkJP4ffL6/ZScMbEbeF18gKy
+j5yv6WHAWp/Xmu2ea8Efwkz0Yw5TSK2QvbEnj0scOLe0D1PLVXI+jVczc9w
EIQy/9jSmxCA46xH8tzVVODskZbVzblhwE54dqIJzw4H4dn50/8vjyNyeSJ3
IeZgPTEH+4g5mPN8Xa/i9BhoCwi+IOAvB13vTZ5fTB0BJwWPmDRRC2D3pzrQ
bp0ELmRvrFwJbUTnmKyN6RuU8eU+TaH7b9jgFcc+D9OCMhBB+G4MCN8Nmdo/
300CkR8m8k3Cg1PTE1Rxb5wBf32o9v6ykQQOkt377caNH+AwA0PUdPgmcoxf
60o4IYkHuCMYojhqAKUhxS7z37w4kibieku8At78rrorl3oAKEnMis21z4PH
Gqrp5FtjIN5GR1C6oQ2wiHtXeNNPgB9c1CjHdR4YCqWR2ni3gSL7/j/aTkOA
+pUhPavDIojf/k7tYvAT9Hkyve0y4oWZFp+6NixF4bL3Lc6UjiqEyWcyWGzZ
4MpV0VMhV8ThxfmPbN6PKtG7cGabSbcFIEyb/4Z3cRQ0iNE3vG+bB+cIH8oC
4UPxIXwol4m8g8j9iNw8d2MDerLDshiSE0nhDHA3k8oDmZUZwNN45pdVEAtc
1nN0TVf5y1mS60kFG1Mg+JiuiUkuExQnf6of+ZEN9q2fNqpsm/y/fGjBaJ/1
/+ZDU4IPdwg+ZCX4MIHwU6wSfoqzhJ/if96Kb0RuTOT/+x4+THwPlye+h5PS
/fNHnPiPPyKA8EqcJPJkIncjvBKvCK/ESYt/Xgl/Ig8hcg0i3x9x5tZD6WVg
vOGkJv+sHsjnvY2oo1kEct1ygZd1eaDtHhFOjd/Nh7zQ2hBDyBy4SfDz8//w
80XC7+BA+B1eEX4Hr5NeFTx/JoFLFvOH4eI5QKIbsTrPOwskCI4dJTi2nODY
AcKPcIXwIxwn/Agl/+HVCoJLJwhPAQvhKeghPAWxmkucnSfFcfHB1oeHApXg
k+i0ziwnDFqftM87sTDiKwYGZP4VY6AoOKC9pPgnuMa7bXrpMDcee7rjJWKz
CbS0l50vBNYieaLn/wjR899E9PwrEHmdxb98iMj/93tq4vddRM7L8v1N/Jgw
fnyKDqt9J4freXrZoyRvASNx/8WduP9yhrj/8r/n4TDxPIgTz8MQ0ecfRvT5
pxN9/mee/zZKJ1HF9iX8/f0MHDDuV8kaN0UVsh650535ihZDlv39D65tI5WV
kKLJ/kFgON7l0bjGiYtILYfzmCmxydtq2YqSTiRIcHUYwdVfCK5+SvTeZxO9
92+I3vuaBRM0HK6Apya8/KEgHz7JZ/phS+rvOqI6zbCJXgUrlX+uLdAWwl5O
py5M3WtD1K9ouT2nKDBtjusRQzIubILbypxZOxAL17+eeX2iZ/4c0TPf9p/+
eRMiXyTyY0R+msgD+Gl/1kgx4CeppyLCqIUxtRrtennXZ2BJ3Lt59p/70ZX/
2e9IIvY7LImeeXGiZ96U6Jk/yuQ74kYvhH9MmioKsangWxIV7+u3WtGLuw6f
VBe5YI1eU8ASVMQ15I9ig/lqgPPPl9QiehzwQlpwx7nNv38fuPbbik852hv3
tD35hRJUX1J5aqAujoOM2wVAcyZ4dWnokhgZD1yicToibTADTF+ukBXdaQTj
RE97NNHTbkH0tA8ReS6RHybyUSJPI/JSIic7fOvJ/hsikLW7xjHj2hLo2CJv
cOvPRC+Iey5HiXu+A8Q93yRiH0SK2Acp1vu3DwKInvafRE87IHrar4M8p/lg
VVjEE9i46xsl/GISbnE3uw6Iu6PwgYfSUEymISHdXh7ybhgZj6o0gZXV4KMx
Fh/QpT0/bMNLVGFKyX2DKd9KcDPf81fxW2mcL+czN6QtDw/cSjkW8yUC0Ooc
Hz0Urop1vUgLU+soYNEd80/UgyXo8OVdgq490vBZ4Ku5pjou+DLTU/NiyCI4
f5tCRspCEjq6O4jfERaGj3J7vdJfLYA5ar2QHDJWWPdqPvdPnjjcE/L128PD
veglnVDuvnUOyHev/tWargzkTzZQkr82DWrYEzJnDGhgtofiV9wiCyN7NWPf
vx0HU3rtETzMdPj7h8j4sacSMAXgZ2EC1ci4v7qe0ocZUx1/r0R1XBauHbQ+
Q3uhA+jcYhI/E82DUR6Ne+g1abg41W+YWtkAHr463lU+wY91BHfZzViIYM4k
0gxc0Qg6mQTObto3gfjAp49eB8thb+ead0+v/0SJeToHJ75QwokbnGsfKeXw
4duD7oobjahT7ozLZrEoJFP5wJWoxgMFGxadfRWrkexlqo3LfcvI9M0UiysW
gFeK3sVpktWA+KsU+7fomDCWKtAMW+GB4/zZamZv88AJCWo+lQcxKN89RXkF
CMLDyODEe81G4EZDkTHhw4DXuCnf3A6WhUwCJh3zsBK4v+/9c8qCGZe0O4iv
qwpBO43zfyQ101FvM+9TKV5KHMjixVD1QxjeHvD4LtScjbipUuJcVFfBwufY
/opYblgHOVWHO4dBpkXokIhgN2CovR+x98oSOKl2VcG/Zhy0EvypTfCnA8Gf
N4ie5EKiJ1mQ6Emujk99lGdNh0vO9J3ZBzlgwBLda6/uUrCL4LoXBL8JE/y2
j+g9JiN6j58QvcctIyk22YARj7U++Pjy+zB6PfrSjYurH+SYGdjWDNPjmfM1
l9xdl1Ch/UXZFLJBEHfWh/VXHDme5p291/CUCpM6/w7K/TkIfNE3TetD2+he
L1fh4htafK9SJE59cwC8IPjtKMFvywS/tc3WHo19JYavxBVNeV3jxFaffn2x
bGwEW/GiF3YbiuC5wjDJFkoBLM1c3jzD3ASo0wu1rgNWrF1lUKBKJovtlov3
9Yf1INevR+PHVyWge/mBOAUySlh/PmXQX6cCxVBxcb75KA4zD3BGqouzQu8v
Vzc0RKrQ5fchSWaMwjA067KawhVJ+FKzqJVPuAPQKbf39sZz4dFYlNQ7ygqX
ovfasgcloNWtOwbxRfz4kQbDxP5RMniErEO6xaUUfRgmST+4LIDv2D4Yq/o+
B5z82GrF31ehmJQNIRZDYXwp4WHxQS0hmO75JmwnxBS8FVX9diBEEpNX6vsH
/J3rDCdNG9MVv4GjXIHsjy5L4vxbU7KX1FdRv9F4p7J4Cbj3TY3R5qwcHmqN
O/B4UAK+7jlwuS47HCisUKrNJilj+cS4jdoBDljqIwxitj4Dq981l6bMVbD7
IUOt5/bkMExX0Irj3DdgR3DjKMGNvgQ3eix1aEwXckCHPzuOn3/QwI6BKcq0
qt+Ak+iztSf6bAOJPttEguu6CK47TXBdGdErK0b0ys4SvbKY+B7VRXyPIiG+
R+kQva/BRO/rHqL39dM9H5+xDXKIdSQYYoeF8bbqfbdJy1Qg9Z/5FULMr//1
uOoSPa45RI/rY8rsy+KezNDiyfodaUk2+C5A5+RkfgvwJvgwiuDDEcJH5rqn
S/LdFicMyPYm3/rIC6MYqrdGfmWjOGIuaBBzIYmYC3ZEn+oa0afqQvSpFggx
LWWGMuLzvPofqRqakMu3q7M8ir3gjz79zfvJlNh9x3SC9DMlZnzUM8vDNATS
L1htxM3QQB+mIwdP2wrjvHjr8yM1iWAkmWbibDgrDFuu+38Ie8ugLLew/ZsW
JKS7u1PEQNZCRBEssEDajSgIKIiIgICBooSAoHQIEqIoJaG4Ft3djZSCdDev
z+zr+fB/Zva8X39zDXPd93CvdZx1nKc7pvmwIN0RadLfoUDA6sv8u7uhqKtq
Qsvsr2498SEg0W+tBlw30MZPPgwjKdewf8qluaDzhd8WRyyqgMmzK6emA+qA
7EPrYO0wcezLGb1hzFAB8u2q37Mk7oFHnL0/k9WLQY31HW+L++WIbvrFm55O
OjjOpdIPI6XhqycGvgudbaBIOq42eHUBpAwea+26JwMnLvukscAWoF3oZa6W
uhee6rHwjHjAhh9XtY8w7slDL/QHF6/OMELtEOzOU8aMN9ONqB2/RqKqJlmc
8GkL7Dw/WxWnzonnF4MEi55VoqBO0QzOvRLY6Q7jypNIOag4aL3w81ouUJYV
rHeYkcG8JRktJnulIPP3leNar61RkN6jIBc3Bvyd8sSrzxPd4I2S3bNcry6Q
HhfwM6iWE0f3KqSIRS2Csk9QgnK9EVmAQy3Swlx4I6Rr/KrZGDAys5soI2tB
+4s4ru8/KYSbmQ6fob6wCZrM9HVJ93wChhYRc3LRf+8nn5kH37JLQB1m5NxD
lgXMCuR4nKyVsaNzptMpLnqYoVYR7vOzFpXxqOrPYWU8Xiqu+36yFWTVvmRf
1mtG52ww9R1xGlym8+p29lNS3OEj7sbONgzIpsgfLM+zYRMu9RApVhpca5st
Ja7TgxLK3boMi1gxubbHG5dROsyxJUZz8U0P+jLB1qoGZTHNW7nnLqKC2MHx
20/PRz9B+VMn1pksaexN7183FC6MV74G4+Dcn0Dnrqk/+SlFfPpI+yv9aGH8
KO3BMuefDvS4om5JHslic5+r195ySeKQWfMHvFqdKGcj53T+NxKsUU7JH9PN
gctm9KuLdzsQc1A4w7vWNXT6t1njCW9O3OW6mCxd1o56b8XTcBjswdIKPDGR
sYKYLJ/ZwexnDuhlpqN8pbOCwnoHXjBYCWEGZllz7sdZYJYjZaeqnRPnKP6w
HctSwvQlJTmaDG1oc/t5Etm3PdhrUfSXjI8yTvUIv7te0YySVUmPp0XzwFk5
kubQO0q4miexdZe9GOmac96QqhKBDzM1Sq0GFXDp7SKjBNYcNDP9LL47URFS
Yt1fx//eG7JydK7mjrkg05DtStqEEjzy6PAjUsCOE+NjBn63YnCn69VR+jBO
eL+r05Ht8SqI6k2xoL7ZDMK5LqS0Lf+NH/NsAg04SGC04FwUUm0Bxq3PY9WE
hOBhQ1aZaEsSqAOMZpmjPiP+ZfV3WkKC8F4Yt3ykLh2UFtvzlEkgE03nlTZs
H1WGYRS963OOTHBANCTYx7gBeMe15NvKKcH3zEr7ZgX5odZWgPKKYxOQfRyn
IdUjBt1NGkdfPZSHLOYSj1ZnmsDxyaSTmF0QPrfQfeU/rwjDQsSu1FA2gaQw
ufHkb8r4w5a/g2X/NOg+ZBfyYKQUabO9qWmLUMaTfqIW8drkeOzxwxJT00rk
8O7tTxdxHmh24PhcML0w1kv3PS278w7ULhx7pR3PCMOF715+SSKGKZxi9C1Z
CoCv7QXh8BYO6OobHUCjJIK7rri3Vbp8AifOiK59CBKElGVbEw/3iOPaMQte
PscspM7yWiBbdwnpGn4g3ztFh4t95FdydAbBJDHHnUzMcdcQc9zzRH+OK9Gf
I8vzb3/OR+uKU96eihgy1BhS9gnBDkWjDM/iL2jKauNNHZsM/hrRVM229Fev
VttOiu4xQe1ftO2/aClgsev8Rq2FovD4m/trHmPJqKfr/53LNgn4dy6710q/
41g2Ky7LELtx2JsXdhnPnrf2eYZy/zTs3uugxsdO3KfVdReEVsxuM7yPo5H4
y/GEVEEyrHg1QuVhmiRkmdtNCT5RBmp1buX79uzDE/6+NrwiYnDtUIcvZs9B
xTlHv9lkzKGQ3CP6uQ/F4fmoX6fsFBGqio3SYVWkxp8WIjcvlYrB1VUJ8caF
PDTf8iT/zG0W/Ko1onKmRgqmaP7yDHhUCrgP16ZuX11CF5SX4gccZaBAe+Cx
Kp0GQFpr+PoLIxtueSfZrzZLC+cu0TjkaX5A1aIXuegPcOBDNDdpSkkpoOLN
1DMZ7AWIauiGCM1hdryPVm0vNRM1rOL4lE+hlo3kfpMMMfw9f3uP8K8FcTND
Jac2+sKuDMSoxv7V2mwdUR6IxgvjtDja6F2IgvkQgPKBepLyzLC21GzRXI4T
v9QfYWTvy0RmhI+iH+GjGE74KNoTfgtxhN9CH+G3cIV4/hXx/Avi+YeWpyr4
DGgwzx3+WbNDSnD/21/g6coP9CBv66TeuhCWp2m/UbRPHv70VbO5sfEB0SgK
Olrc5ca3FQeKTwUowRAg0jNk+Q1knBh/IpaziSbClOM5PynDW76SDnGa5YD0
tu2hGjZW3JJlR3KZWRlSBIWaXzTA4NTyQPHScWUsJcfSXbrJCMt6sveu2iCk
uqVT9PSQEo5J6agMy+SD0seT/uQP5SK3cfPjyDsa6UV8ZqiMFoKKjzj0Hnqk
ohumFlHp5JOo7eATUv8XQjDfbCPUXCgZ3dqvMqbRR4aN6xTPHVoThB26M/nC
O/GooOAUB10sI165dH7J5K8OUQnnoOMsfQskYhNXWv7q25TX1xTjPJhgMW3O
BiuzBZLaesxUX5IDaH36tbmXP4HHv7MOqWTNAm2yA9G0YvHASNr/91W9fMBu
RN/BkjAOxoSiSg98jEXVb1V7quzyQfDC/M/50jbwWbUwxpRbEDf+eG28w8AJ
v6/+2JjQzQTPzCWl/1xeQ0FaIp6nuyMA096LqaHsbeh0I1+H6Ms9mDI+16l1
NxX0CCy9tiJrAIrPOT8Wi3Bg2LAzxf46H/gW1V50r/6BTFmCXQ5qCmFgrc8o
fKEEWByW4ohETkhwhI0jaE4cm14X+ZBvUgUSWI7QOzzBYDQrMu9XnCx2t1rW
OmfdACgWbj+13mhAFdz9z1/fV8CUyrd1AnKbwCTr+6YvX1rBxeJ9H+MklHBd
5sjMgloLmDvPpuVo1A5OLCuG3vsbL4cqGYYZFrYCqPNsdd/HGnRQysBDb1cF
m2bWHfmh3g6mnDtO+Ot3o+w+v5yX64tIxG0efW79g7wDQYzkdA+6IM4j+VCf
HBv3R1wKmdhAg/R2GeW8bUCkdtjSZZsZrzI4xD9x3otNo6KbVN6VIT7yfAV5
A14c/3YPrUAhC/ZmDDtnL/QA+cVU7Di1CuMyiS7trUPcmKx8+427cAV4fihz
rOGhBF4yvoinTATxmd9Hfm+VtCGf5+LdWy1SeNuLet/olhAeTbgXHWbVAx6L
MGHDh/J4X9Wdjy3qYlgxtUNDeagZFR8sNdKyUcTcU6Kb1X3iGAutri+vDiHl
uTMHi/iGkEe0+yXHtRU0YWvhMKDbiS4EjZSI0MUA6gaBDk//fHQzj/r9jZEq
dMdiI/a07Czy2vdPsoIaFd7Jzp0av94MrtxsJXPgW0UWkhT6LA8YMYrnTbzv
2gdc4qW+5ibtINLqjobADja8x9de6EJ3MdKbQjk7bOT4nU3a6b37efB+qwlr
R8FBdJX6VuC7biosRKkxVqIjiC3u672SL7qHbETZb56I2YsdL0kkea8K42bT
fVRBVIPAFRZrTlow4OL3jP9oJIthLfPjx3+IlYLj8l/pTzIzYaaVdaGti391
y5kj//DL9SG9734bnEvM2PLEyFABuQwObBF89Hm5GV3Qtfw12c6KM9/Uxd3P
ksPxsGqjoK0DXO060PY9jx0/Wrz6OVJREYvOdwweLu4C16zpigMjOHFaVGPg
+nMlbBnAoa4y3YDsln5+snDnxi1axx0MB5WxVc2NfhvjfmTkp34qGeYAo31S
9wL1PyPGm70lbdWJwL/vde5yHBn0eaz9RaF+C7XtPPHuPx2N3ncdXJ2OpYXl
jadSoDEl1tbX/tMmkYLMJx14F88yQ52BOy4T5+hw0Ovy8BjqAGBu/4jJVkwG
vrk4uam3LYqXmm9/lhVOQvoPorPZ3hQAUo3SZwbyt5Dqu79ffl89uNkQ/zXl
+R44R5Mny7abj25EG0K/q+VI941L07mhIWA8s1V+o30FpPwqkS/sbwbximDy
gsEciDcSGDjNRgW7aLo1w7/UIF52rSmv/WtgL3/81II5I3z1Saj/UUc7qnso
snqJlgQef6VoC3LZ4O/bBpppf8/bl3fE1m5tkcOHJMW//PbywLXHI27MQ51A
5x+J9UfTe2BffqrylIIg9N7rRv7l4x1Aefn/vff3Evd+qY7M5qfGfZBV+tCX
gz5iMP3a9JEY8yKEY9h3LIeYYOY10tkBBUnIb8Vz5Wt0OxB4+3ZnqosFnomq
lvPpkYbsMfyyMgG14GEQ5+79ZjY42RpsJ+MjB38+jEvkedKM+l5E7JLVcEAt
qk/tvzkUoayL2L6hrRZ05Ak3SWAJFwwRZlo+Yq8Eww+SW5XlV4JojygSrm88
8KfGPdZXJcoww/nUwbCnHYBiREFVj6kHlX63PH7OeRU8LOuy/7BUArpHORk3
VSfQx0S7e5sZVJDhn7XnevrfEddU3bHUzAXksf9i0q9mRtj2zL7WWaYSlV0P
2DaoWkNCHAsB+qfZoXL8O3Ip+k/gzuCZ/O2BHVS5/ur+t4q/ei1i1qntYjUI
lH1+qM2NDB+YefMlJF4QCkrOlFJmWgIrm19vpJ5R/r1Hr7+vNBWBqYOZcWWg
Gh1KPrnkGUyNe5v2R25xi8MGC/aiA9KfEcNIin5bNC2WKyF/pdQlCTllT80K
z1SAUQHqz1KpDNg7u+WJdZgMvOdrr2JwpAiYyu9/hroZcUtSgmuUgTzkX/rG
7BNagipPj+63NWfGzHr5B34/V4Q6d/lcLoiVIZVboSOsYyz4e6lA5uNxJWgr
9T5bUKYAxL04HoJs2bC1+nMZPm0VyDVKPS82WgnMirsL6ckWUeGj/RSnbGfA
8E36oIzuKOTcTG4qfI0MM+p+2LKy3QZn3b+13qkPBYdKIvuOatHid1Ix31oa
KaH4VzWZy5QJwKubM0OWmRmry4+tOU3SQVEbKcq7V3zQT/1R+8LH7PhWBHvU
CzJm+KrtrE1P1Dt0vOaznM4iN86PKizofsUGoYftguzOIfT+mPt0+z8CmCLW
rEuKjwuC2BlPS/934KlpYofSpBA+H0+2+uADL3ymlH55cvQZyOF68dVVWBSf
1W/dO8YjCJvXJE7pdsWjsXaHN+iqOHY2EOMOGBaCcdMa3CYPwhB7yEUXqteS
OOrCfSnVNBFo6Lf789bpKHDy7OHLZ2qlcfHF6oP9t8UgS6O01umIGPBgr+CB
UHI5/PsSj47PAQnYZ7fapfYwBH2soGTvPaKAGa/YX5HbloQJvS+jyAMSEMMa
SzzD+TWUbirorGeZDah1bv6Q56pE+xI0qR4/2YPtX/rXafwoAfsz3rDXwGJA
l6hu5nmbCVOMUw921tYCEtcD8PuROhB0z7DgCB8Hbogvcc23awE+0mGsMDsT
sek4s67X8OLIBhIyn8UOcE0EPaMdaEBn6KvUjNWF8PUtDT99t15AEvBJuTHw
OgpcuTR2iEUUc4Zp7H1FMgR4zzZdtSxrAE2DIyGck+J4J73/7LLWMLA20uUf
38oCzNWOcBVL4ZESj9fGz0dBUZ7sN/L5WnQha3e6/a0sru7m6SquGQeNe1qX
zBuLUVhUQFSOgwLOmCvklWSYABLPv52lSqoAt0oCkqqFlfDrPVctA/X/ANbP
LrF2/lWAPu/i5sFAZezGv/5+KXQaTDrPfDic/gN9TucxSF1XwddUwyevds2C
UJdLZjW89cj7MHlywBwpnKB5EfZneB10sL6HojpDaOV0bcUlKVqYaZRWWxhO
DrsFOxnXqxZR/ufqRQYlZuggH1i3C/bCpxMnqJooSsBCvhzF3Xp2GPaowPrd
XUZ4bHHuc5jzElAoCWbttOGBS39kfh2vZIHwbteO/+cGYED47H0mfPb8CZ+9
2ZmBd4/iRCGtzJObsiV80DZKKJHbZQ4ELDKmZ0+Lw9waN+dfLwXha9/ECNfV
KSC9dix77IgUHNnNzsnfLwzNlhJUZM78RlVbzt84XspAFtXppRcDIjDU+PTO
M64FZE2aUnqqSw4esxVXNfYVg3GLGWe4GHoB+ZOpsaMsivBunPk9WWUJuGVo
/HuQdwmwuOl8jru+CZ7euVVEGsMKm8RufqB+8hlN1eybZNtihxqNVIfF9ZQg
b991h8qnJcCjT6eZVI0ZO9WQmF0jk4M6ClvSvmlFKEx2K3Qothd8/7bvSP2V
VbTnXndkSGsl4mAcc/H6OgnOF5kdt3lNhfc8i1kgqysGCxTJ+pUNi8CyIXL5
XhEjPi5PXf5KoB50P+r+dfbYBuDWoDqlpsSOqVWPhLAey0IWXlTgz1US2PbJ
MXotiQdXFwcbCHY2otajgns/h5LDisCZVRN/QSzYXpBdpm6NCgovxB+g3gu9
doz0+EnE8djlE5/432QDmQf2tzY06aHx133LOwWSmJld/bRHSx1qjNLiGTzK
CNUcymMH78pgu1b56xzmJYjavYmkuIcJsoi762A5eez7lrUi/2ol0LxqOv7u
PgtcdeB80HRXEY+wLsg9NagGHocma5+yssFx3cV63KSEuWPIbXLfIZTHeT/T
OpMddog3CGfKqeBJ2dKF3D0NiPKo+Sd2b1I48MPdg5JxE8WuWam5XwxF/Ico
Zhm89sKFaauAdA8KfLDup7deTiqKirwYTo6Y4N0tP5OLjrQ4Z+iGxVcvF5DK
KVHgpcEOPXy6w3aUmXBAFgCvX6aB3Dfr3ZtF3PAHnf22wSdW7FsQyXNV8gmw
8z3If5BfFHq9k9h/nlcA76+8xj8YkAQcKxPkV0zF4VBo/xkDvb/ngX/lpUi2
d+A+FS3IiZGE3oYpjzyoRfBbtUdfl6/Eoofazuec+qWhEK9jbnK5KHakN+p8
HZGMnj7tN1fkk4Mlg4cnmh6L4+mo32aso0HAv/TEnRkTBWiVSMG3CSRxfIJ/
DgNfGpAXIZUbpmKES5mLzBFUxYjdmbKr7WAr6uA7Nhv3V68sT7MUkDJWorX0
ILPymlDkxfkk09SKB65I7Te35apHGSJaWc3tLWBo5x8Nml8ycP3DZMPhpH5U
fqHKZfRTIyj1MPAeqVGEHnd9Cps7fqLKq2YzthYtiIopr2/z7+/ranJT+vkV
QegvbmTpV1SEjKwEkjbfykB6Nce88/7C0EXyW+d2Wg+y2p4h3bAoATOPKu5v
p/QCV/O2Kt6UP0BC3TRqeXYY1HGE8Yh7bQHxoyKZnKs9YJg76Hdm4yqIIs0b
M5n8q4Oi72p8fzqKEjVvrFzWrkLP004qfb8wAsxY5Ft4nvSAywXBzaqZI0i6
6pxfnsku2DHLbzk9jEBEOd5yc11FP/5IRUd+YYaHG4+KZ5xrQFpXTHzl/Mmw
45jXpT0v+WCV2g0bu9024Kl/NUBsiRKLObJ1m7kLwYOZw4uXS2rQNz3DED4T
Ghwya7unUEkUsn9k5Ona6EJL2pffspXR4R17rMr2WxzObKjcCqvMA6p8aU1k
NUy40/ZWSO1FWWjS6vDkqVA8cORIad9QYsPdKn6reEgRptq39HJFlKL9X/KV
BDVH0XM/2c2Uxz6AvcuL0aKmB/04V+LUGDeLho/ffDtZEwQ8x5/F6fj3oLe1
98+sOpBgAaHbyp13E0Dn00OdJLwYPVAp5Es8QY4zBA293rkmgfMepq2zGm9B
CnHO1BHnzLzzv+eMrKv9bt0POhiRKV/cfogKJ67Uu+cPJSHpiIlgGwdhyLLt
Oh7kzYvVb6am7wy7IWWaP/c8BPtBGVI6rDYfiJYV+/WmNFrA+EdPcXbyHTBl
Tn9j7udn9MExvKeqphisfo6iG24cAkPXjUOpIjvAsRtOSzuhPeCZ5Vj0ya1m
kMWRHxZz6Te46FZndZSrC2QRfIbgFwjufj2mDGaWI366jDX/pyOALl/I4NvJ
ahAnu49Pb7YJ1TRP1Fo8mAHJRQXbIvTVIPd0avL7iJ8oMahBeCZ9F4QLuidR
3sgA719QU2wmjaLvhw5Qyb4m+6tDfA3uzvqgTK52HcmNJXTXZta4cZAZ9i5T
mPD++o6kDvqstnitIMnhyx02GqxQ3eY0pXlrKko59N4tymkVsWv9iHcuWQDW
B2Kh2qVg5PQUj0zQjIFg8nOn84wHwO+CJf5JlyUgceOOis/KFjCx7W+7P7YE
WDte3rynVQY0ZZPsbVwYYbLZwSnt4j3wsrx1h0vdEOoi6qHH/0+fHq2Mo867
NCroX7+2zksvBGOYXp9kRa0IvJTaF/T33nVR/9RcjETgQXPZtpGPU8hx4mf7
w3Z6aJ5umWbtJA59t+yg1K33YOpCWuZHb2ao8qLG8EunDPx4IUuI9Fg9EMy2
dI1kZ4dPs7koHsYqQmYBZ+e0xAE0SuzDXSH24RYS+3DdTQSMOxLnwKuT0Xbi
e2ng1Y/gWGfiL3SS2JMrTuzJfU3syf2clhTyRnEbbKRoS11cYYMkMgJXmyOa
AC2xP7eR2J/rRezPdfo/9V9Rov57QfRMQ24uI9TlZn9EKyYFC0aWioeZp4EG
adDJ9UIGyFV5dnCfgATcYRD3EPkb/1LqtKzN0DNDV/t+4T0yMlA8/TWdcs4Q
aDH3trVdZIbTSXmBRk9lYX5DK4PlRB46+H/2mBsTe8wLhouMg39ywLXJxduN
q0rwHw0NhiuXxwEVOqhk+IIdWmoyxjUvKUJv37BMioYK5PB/9pu7E/vNOQ78
Q3KSrRGZJy8EOOHfIPL1C3fnph4g3Fy28DJ1DlX3b3tWPd8LgwNEkypFutDd
r4xtStfHkF5ii8kLGlLo+3rxCXXAB8BE+ImFE35i24SfmD3Xw2eK2qQ4vgIt
HHvEAxXv8F7tCuoBaSzufpKfKHCRZW7KlosgjL917kFhgBMYpX8QJMhGjaWG
9nZckROBQ9FuFcVuPYhTULqBip0R35pis7oTKwW92gIm6lAPeMUq3rUyxo73
LeYGzhxRhufZ6UcCj3SCUqdcI+cVDhzyQZH+D6sKPCBr46TM0A3WvY623J+b
QMkvd0I1/P1A+C+3RF/OXvR8N1y1vocUj8ePdKmvvANrlZ23b7R9QBd9yn9J
v2HB9YG9dZz1OYBX2+27ZEID0C4YbyQhY8OhDOfvep77CnyZO3gYzxWCg3sM
HtWEFyBLxxx7IQVj0Fpf8rx0sw1lurpEjSeuITFKy4cVUvPosI28F3lJE7pA
+GudIPy1HAh/LYFbjwKT62mxiQCLNcXzT4B1SfRKulUX4Cb8taYD/vXXUiT8
tWhf3LpjmMmNc+iF6dmMvgOBvhOM3ZTdaEC0UbJniR/7VAASkTsYvAw7Ot+v
1o5uyrpSGyoKYlsqt9ZLSsXgxYGbXAl0dUh/I22U00AYs1ZInplxLgUUttel
tffWglOhhV3kf3XDGuU/gkIHysAlo4iIE91tYP+1qZwyKTGcVM4UWfCgAjR4
9U1sH+0GsltbqZ8HxbAv5Wn7qcOVoL4qiLHtcBvg/eAkVe7Bh5PSLLO4X7Li
j1HFA6x+VYCtRt7nDqkkVi7fGH/qWQ3EDXJPPdqTj+itwAPjPEnMRqlamAdq
QD6PkmBnSj1aU3K8xNstjUvKRlTOP6kD327nns7Z04v2zie6/7gpgqsOKU+v
0vBgQfr0DIm4SNQdkS1W9UUOny+r8+bxbQR193WXh07Ho2aVMq5sa3nM/Zhc
OkW0CYRbVwgfXy8CPWfI7ynEKeJhUtcmupRmsLbJwfdisAdQBQRe42aRxCtW
pKGTZYJ4wL3rULF8CaLcf8ok86gU3nAxPjIeKoQ7BhTlkxiaQON+3pF9X5Rw
vuU5+u6qFrBJeVSpqr4U1D4SNaWkVcYfHk25OEm1AsHFhwG94t6AvElFi/63
HKZHpV1tbaLYI8KBz4EiD+GbR2vHeFSw18/SbA29NmB5z8WYzK0T/cjV1u51
UcF3SS35utLbgG6r6TpLQQ8yUtBYv8ywhu56/MAlokzY+Pvz40/Su8Hd7h+o
LnsbTTvzmg9Ks2HOo1fOlaSlo1VCz18n9PwBQs9/I3S4N6HDUwgdHhJekfYl
ghWn2M3+ijORwxn91FnuKS2gidDhhwgdrk/o8IQcxycXTTlxEtXPLHpTJXyD
9sXXiLIylHhduvnd7XqQlO8oGTb0G9mVH6nPYGpCR1Z/ae97PoeS8zp9AgP3
4EdneyiocDsQJOIRQyIeESbikWXi/f8h3l+DeH/KofN6j84yYR7Bzu7WD5IY
9wtxP1AaQPJEHGFKxBGCRBzxC/f/2tBcBCS1MyLfK6dRZkrPuez5dyD6heNp
ymejYNlYk7b9+yBydzJfdw9IA7vfH0stwi1A5sz/81nXMrLjvs2mfuYBUM46
amV4cQ0Mikzj511pSLpAQPTtmzpQ+eA+KpieAOiK0YSdXxRCNHeeNZ1sBQFO
QZqzJzcBszkP2ePLC0DUoKa8cRWBEr3it1Tme+GqRKVXNfl3RBfFPnFQuRH5
xgsxaA4ww41GcusztGXIEMTWZrLUomkbypkNTUYopspsptlLCQ0Put0TsmpA
nYRP1zbh0yVL+HQBHSfpo8tCcFtT+WMpSys6uzt7uo+hEL0uD6GNrhOFO+bH
du9zdqCEb8kkyX9a0Pix7KmNRAm4/dDAQJavGwm+tC0r1/IHh3FrvZG7NNyO
uvZ+SKgPhW6ROC/I//1cR5cy8g3k4FaB01qo+CDKt314i+ZsNijrkU6znVKG
Oy+a1wy5RxHlXYv7Am714LnrlT+zKkugz+juD3KpP6DuebFa4EwrKHR3a3Ev
+Q3MfwdakGASGBql9+B9XwpoIrgDwVkj/+VBz2x+rLDsgRmjAuaPqXbBdfMQ
Sqb9Xajj8oziyjodZDZJOK3pRg5XAttZxk26UAjho7Vw/18freWpf3201PKS
aTcyuaCFqV9/vDYTdMvM53lL3w56TO9HrtvwwwrPuqV4R1a40nIGWbXVIEiW
FLoVJATl4unpEmI44IdkujdZtN0o+BKdydaUCAwpPiuSUM0NDbNSw+M788Bo
qrPIlo443Bh+dThhmQ+2MNzY6WruAapbfZObSZJQ4fHv1KYgQWjHNRdrLRsP
fAnfrRHCdyuc8N3qeffpwaaJHHybKIWbvovAmX+06w2SS5EfVY+XTgUntGU1
vx5SogidyFJk4hqyUCDB7Qj+lfRfLrfCprmZrwB199fUNhmIQc9Pz98e0esE
RoOmXn8qa9H8jN7wys5vUDR385d7cDWQyp2q8EAJ4PzbrE0T8nzg7qnJ9Sqt
BRiJaP6x0VoCrTWfjSNsaWEu2/V/NlQ7kRXBhwleQvA2au3pMLEtkHj5pkzE
XhZYUdlXIlJVigYJ/oHgdgSXup+0OkROBvsr11LHzDnh3aqvTGbH24A8wccI
HkDwcZvktZUlSsh+6IW4ci4fnOObdnze1QimCM5P8FSCJ5qkrtON00CJdjoD
4CME2UwFxi4wNKI0gssQ3Jzg18592BDupIfl9O1BYwqiMJNPCVn4taGbBK8m
eDjB9wl1POQdZYQWJ2Ia/XrEId2A4tn01hLATHArgl8nuAP3Fc+UPma443md
QdlHCr70Gf8YZdgJHAlO6vUv9yR4HUuXp3I7K4zIkzvTpSALBbvpzp3LT0SN
BI8heHTPv1yW3sirqJ4dHphb9vPskYe1v99u32LtQvIEP0zwBoJP7l71bv3B
DQsUS5+OcSjDrX230+UzOsA0wQsJTsf4L1dO8HEZ/Z+40jXpBbXqEEhbK+O1
qXqHDMsH31HYRqER4cSBBx/ywfs0z9zpulIQ4cI+tv8+K94IoorbslGGWfXl
55UkKsBBz5KguC5WLHk7/mhisTIUIXnXf1OtGtAm57dKTEwgSQqdUquUJBDi
7WK9JNGITm8XFd7azkaayyfmvbc+A08ftHiLIwbJ/kw4My2+iZydUX5mUi7g
PTj+ypymFMWFUZvOz1DjZra+mfnBUjBKei88PrgcXOCLpzkgxoxvOhqS+k3X
gR8Cr2GxczVoqGe00WTjxb+pu++kX+sAgrfITW+KNqJbh5L2meWLYC+rS0+O
3xn8q8vvnnC9UQ+ysvd8Y3MQxQv3W1o2dYYAZ8hpAV2pRrAUHXZz6bgE7gx0
5LjmPwwK93SayVnFgwPPRNhbeaTx9/eMJlWNo+DYecEtxvl6dP92Zmnmgix+
9/1zvDzLL5AxdNugiKIQdY/kFBgvK+JC0YpwIZo/4N388cunAmtBozrvh2QO
csgFStq/+2+CDicBJfUP42hQseNeVBkzpKz+YPeblRZ6kl7wj4Cd4KEqtWc9
Mxu0UuGbfnmTAe6zvXx5WXUe5GvYBSp95oKMFKSrv54zw5+3NU0FaP+AxZNN
sWF6/NDe4e79l71ssG3RtMbGfBKFS0Z2bt0VgnVdY6uyClzwZ21S6jGnebRf
rm5QvkQESmkZujY+5oVkQ1Hn89cHgdB+jqkHahLQeP5RtBAWhMNIo8/v+i9w
+4DiXIiZJFzwi1XfGyYE25RNvCgRRhuanygYheXh7yA507AiMXiPgd5xW3QU
pINQktUNWai/wlj08bcoZGWXLRabb0TY6Nnsj8xpkNj1K/TRFSrYEtyic19+
CNlxurCtHWOEr3Yk9a65SsIpmWkatH8SxN2X7xvrYoHX+oI30vvl4EBfZi6N
+hhq7Rh/1+rAAXlMt9vcEpRgqfL6tfDSPjD5gW5ASHUKicY/LAAuVNCOd/xi
UFY9+kdjh8yxcBNVVLO+8Wdlh1+ZSN3D7v8AV8nuRTKOMWCy/lxlhkhJqH3i
maUyXRe46X7QwLuHGfd2W7wqo5KH9EOnB855tKLEeweuuB5jx1f/ULoUFSjB
AVFJE97rNeCMQEcv22lW/KWBLV4vMBdEkUr2bR2tAB9ZLR8fO7uNDpyp5s61
WUKGfbdLjmxmItGH9g46qYx4tIKSPGz/HrzA7Tl/vKke8OceUyfZ5sJv7174
LsHNjB2+W/La7XYiHn05EZMUfpz27ZsR+1U2LHvfS4L+Rid4cfzRGs2OCK7T
8w9d7ObBj26i2BbzOvRs6Nbg9VRJvGafceO3rBAmMUu5aZP/CTzxuFxRbCCH
ab+yU3baieKNNy/U1Ay/A+unnn1MPzfQF9fpfc0SLPh+PF45XFMN4A09DjMh
RjxxxudYzLY4vnj25pHHflXo3JOVOdIxFvxi5grmNJbFS2d0M9/mpgHzuISa
96kcOOwkm4BunyIW1c1/P/00H/ASuvEioRtZCd3YS+SreYl8tSSRr7Yk8tXt
RL66gshXyxG60YTQjZyEbqQh8sysRJ75NZFn/q98Mm41X5roIoWz9W+efVzO
Qn2N4tOXOBJBn2VwTLATE1zD7uqLviUoUUJtsdq1GSkMZnrOnWKFqwN+r1IC
ypEitZ62fgpCMldYhOmbeOHawe++ZVEN6FrZzbcs3K3gaLLuhTJ2Uehh6Dmp
e6Ud9RvLFirtbUVBIrf2i8yIQ3eXwKO7xl2orllkeL93HjrA/3FlKFoWumVl
jNy4PoCED5KlUNBWgNv+LiaNYkrw6P1fx2+qDaMX989SMF1rQGU0b4/Kb6tA
jbDVt7x/fw9Vzkpf9lG0gMbyNerZxG3wbfYb/eOpvzr6gYXhQuwHUE7otBuE
TmsjdFquK+eBjSkO2DnX0ibIxghFD03isnc9YHe4L80jQxAmqVwiF7Jnh5rK
4EScfw9KfPHpoIe1GLzj0qkkVM4L3W4Vdt/i7QLLfWwkHiUSsPMt5ymheQF4
gnXM/tP3BnBS0bPSnV8axvbJfgkKFIIzqsb/3HvRiiKejAe6u8lCA/v6b0Gi
IpD3T9LzX/LtSOtTpJN7qhz8mBtTHDQrAq92VL46s5mD/Am9dIvQS6yEjhIM
6w08GqEICwMZWoPOi0OGtp1NLoFu4Ncgll7WToqPFUQ/G3X4DsJP3sqI6Y5F
tCe8C/fm7IF/Xlz4Q8JNClWahv2mchfRZa3YN/9s80Bw6LBagRIr9H45sjGj
7w/GpbN72aKE4Qa9wMGdLm54np+1MXm+C7H6u2vUOywA16/nj9d+p4WrifxO
pGJTCLCUdoiXUcKWTNqyuxaC0Lvh7Pm9B5+C980qVmRzdPD9K+e7ReViUGmW
bnu7oRkJUN8P43xIi9+YWVBkj4jBMsVjnt5XMNL1LDj3VJwJOxjTWtqcl4Hx
mqovdlIagI9r3kWPQFYsKts78MpMEaYbe9gmC7YjsTuzNH9km5HL14/ZS26/
UQ1d47F120HURtR3Kv+3vtP8b32n8P/EleVEXPm/8eNBIn40I+LHY0S9Zo2o
1zQS9Rrrj5NCktfloBpnjoJLoTiWdEmpUpSIAE9MWszPCXHAta2oYeOQKtRp
oRqo+jsXTEhKO10HQtDjsMPbNwYtCB+0k/HIsAUj8X5sj8uloHtobFC2RS96
fMftqb9uM3gZVdcJnBXg0ZvmPAy5Q4graFj3DWUd4qqlqvcMVoZHn912KCkY
QarqFEcSNkpAAM0ZltUX5PCFsob64+Mb4LaKemJERT1ibDmZsrGfBQ7Firhr
ttBAs6yLX0X8fwAjgYmy9SReeJSZdUpQkwWSuERSgUgnoH9A29Fjrwjce+kN
t1AEF/T93En5/BpGUx1nL7t3yEPKHfvKoEJReDlEXfOPSw3ICBBdOpM8ASSm
IsQ9Hw2D3avjPNt0S+AncmX8cYwbmujvO2mywAw/vwy5qa0wBmRs4jlLi4Qg
p/jSyYS/f/9R4f09ZYEzyH2zi2e/bycQNCn9HpIzD1I7jDVPi/wB3gQXIXgy
wT996xQqO7QELMUoee/cZoCRVqI/+oWm0X9xp03W6+kDFFBB9ihv2A0BKF6i
9s1spg38Fw/KftUhx/ULeV/bXvxqRQZd+Sm8uEjfom97jts/opwAuqr7p38Y
jqAl0fjSgzRpID3v+a3NRTlYXMlUel5YFAZppa19pPJGT+osTTdfysO5P+vl
Tc9FYb32jcjn5cWANFG/ZqWlDhTu1XzdVFsG9MJVPJ6NzAM1d5NWH/sh0C5v
q+eU81cP6WqaDh9ZAleJ+tEgUT+6R9SPrgiZ/fxZ1ozCuJleLQ84gZmfF9oe
fO5ElbfzF7ef5yGuNBtnivImRP19oTDFpRcdSPW1CGypQX1sPaoP+EZQA7Wx
iBHjIBol+sSeEH1id4k+sWAiTxJG5EnsiTzJyu6JtfxHy0BSqlibOmEORc85
j9YdigNzD7m4VEk3gPGXi59MeJZQ7PM5/uPXAkEW9b91E3WibjJB1E16iTgO
hv8bx70k4jjWsYOxHXuykXngqK6TQDO4OZQl/t6oAjyw6J8OLu5A/r/yw5v2
t4Cha4e0jCsSELD8l8v8/pevEVwqhHdlV3ga6Tycqkg99wsoBLUVxTsmoPLg
f/max79cj+AWJjVPB1Ez4ppUjd3S8wcbAhl6zOq1qLM12tX2yCiK6qA5HC4Y
D4K+XQhna2hA/EA1A2lQQB3nTbbAA9uAbqk37d2lKfRN68bXeX8qeGH2gB6n
NgkU7z5Ya263gB4Sfkp+hJ+SBeGnVFdRykuTzweFha5LsDuyQS/Z23qidqPo
wa0C3r5RYXjCWM7XSYsHnuc6T2nnW44Spspjb7qKwP7lU5LGnLzQOeVPDpl4
C2A/ejPQ0KQJRG3lcIfE/gZOdq1bIQengRtRpwgg6hSXiTqF2vSe/A57dmwa
WMY12pwHjsdXffHvTUEbiSvfzboZcG3jNDf7lhj+qHor5fbzL2DH1jL7ZM0+
PCiS+rI8RRz/8LWuK+j7hugcxA9eUGTBt+7g8GAjGczQzbEvV70GBTYbZ1em
smCvMjdqTUpZnKqoFfNw/B3iednMtLrIjn18T/k9M1bEKUwqOibzbSB2mirg
lh0HDsoS1zLLVMRvby6cvLdSAY7ucnD3L8Sj2DimEVXJfGT2sb8j6mIXOrZW
oqq2vwwU2sqr0lzuBQlyM6YSDR2gZ1D38OvgAtRww20h1NIZHPei0c0VrEL0
H5HpO3kRGJx6pGv8Ew8UHBj/zUOSASbe+FJkHZsBPpfpUgTbxwBZ6WUJR9JF
UH7r3ZG847vAP46d7dSrFeCtBi48D8xENz99mV2mYYIa6xf95d9Qw73Nfw7i
gVZErekTotvBDVNj+d42mbDA99/2Gejr9wPy+weUjFIl//6bv7c6XiME/5lL
fXUlsQMB70jNouNycJWXc2ycTwxaZHm8ar4ejqz0k3YvSjNjqn03xLN1s8Gu
wfKcp0gHOEL4+QQRfj5WZP/6+Sh2GbyTyBCFF5/SnR3bEMB6z/jOPg5MBVkv
Jr75edWDXvTJga6tFNiyP/HV8e4EXZnaWQ/fbKGmsiXUms8Fz8vJHc2LrgQt
Sju/LBjF4fNPNWuOHQJwReD8/MXWRUB/5Npa2UdpKFTc6dGrIQI73h/Ja3Fa
QrrHK6ilTilAbxnd7Ych4jDk06Za1LFFQPeu05tWjBYqGUbuuWUnCu/URnSf
m/iNDimKPr8ryQQpDpDn5TRLwb7CzyK7Z6eA3au+M5Y/WGEni531zgEFKJ73
yOab8jSKnwllPXeRE3a4Tu4VPasMd3bbDQ29/4D1J1KhT6T70cjpcyTJh1bB
uwTddNGfreBEmIJP1EILUkuMmZSUmwEhAfoBado9QOI4yY6rwRoy1EM3lMxY
4GN+PvoWsgrkx77lK7tOhum02YRi1fjhcUFB8ri8ZkBGuxbCW02DLeJU7X18
RWFC4Em7fX0d6Pvug7PPTjPiQ9FD1UeWpeD+rpQQvo1usLp+/4JnDgtmjvAT
X7BUgJPBYuyctT2IbXXlkttNNoz87nwQp1OCQbu5MgrTOYiJQ233uokkFh17
e55/sBpcdeN/yitTjtrHv8UV0cpjzVGbyZzfjWAoX+wfRdlkYOAWltC0SoEX
CkJoq4b58NFj79vPl7Qhp6w/Fzm96HDkdtSTwbOiONtU60RZVQ+IJerdZUS9
e4uod+cS53nO/znPI81ei9avksKs6xInus348f7Zb4ni6uXohuHG+b4BBqgb
Mnlqll0ar/wjresq3IiSJ98sKqUxQzKyyzFfXirgutJIE1eGJuA6zmL25wwP
THlo/jKGlw3Dx20nNDM0gVPKhzNyDFyQqjDs8l1zFnzbfeLTweF4cPaL9pCC
tSi0ZeEujvQTwEy9Ncn+k8mghpGp6/wJEVh17nzAnQY+/DTtm4P7ymtgJM9J
+nFMEq4ECVYJQRE8r8u2Gx38DnUEjqzVlUtAsc9HMvwthfEXvwSFP7+d0Qjd
V65T2rLwxoFGtp+9Yrjn+exFofknyLNNhdwuRQB6yIzbqzc1oQ1vgaVQt2pw
6NpmUouRJHT3Yb9hNNCNYHl+kJDgDzBkon4jiFoeuhUfoC/5NYhSoxNqtgLi
UFn6D9aUXiVY5JluFLY2jNjtZtboOTNQkefg4EYXI3R9OPyPZjIVNIndV5LO
VIF6iLxiMpFXDCfyinvqvLfXdbjhy0d3hwTTmaCvtxTv69JmMEHkCbmJPGEd
kSdMpQsO8OgTglfKlhmEyDkhPP80y/1PB7pO5P0qibxfEpH3m5GUi9/+vowa
xEQieF+xQAq9+vStrRx0LXOgbFo3FyWYj8zGLjWBExfPC7ne6QRGUWzXRnzG
QeOG55jaAgmkOy3awzX7HXCj13VHTw2hc7VJ8qRz62DfJOOE+rUm4KY7VZsa
uQ4YDwXrf9ZigTPw1njIVieaOkW27j25hKbqbA51pDDCw9UuBx+d7kIVjBsB
opZUeEFwSEO6RQj+VBmLFDzZjNQpV96yKtHjWj6/qCENCZhjXzFZt1AGurfW
zj8mYcZJ3AfW3qTLQtHklan98++Ron/kSOBcG9p3xUvpTtc0ytcaPny1agCd
l0z6Q/H+FxpwCJLM6SbBQxURezZ4PqMDniJir3Z/oqopK1aFlHWkPbbfz0C5
FelFNuwol46hOwFqIR8odpHNum1286cSJKXxO0WLvw6wW4YfyS0qRzfXmjjF
LyeDh7RxMi+ohsDlM9zqslVdKF86abpCKw2ovs4cWj02CqLOLM6lCJDi1Izq
74EtcWgxYsiH8z0ttO/ZH89gKoHZIqhBEE8BsqPdy3CejgmK6cYvNjbJYhNT
c2n305FgqFqkm+UEK5zr80nUEVbCGgUP97azpoGzRj3cs7QrIC7sH0nqpllg
Nei1QkM2AXyvachcSN0AcqpJoclHFkGB2LS63aUuMGVKJyJ0dQ3s7tpebA+e
B54vrt/zGB4GTk8zZI/9QwLH2DdI1lM5YWDqSV7V178B550/ogwqYvB9eRw1
21t+uGJWQfP1wyIA86vJkRViUN3ie+r2LQHYk7ihsN92CVx4cE7VqVEKKp4p
oZCLE4YCwtYiyQLzKIccV17blYfdFFrtWqbiMMXIok302zwYfFp3ajZEAUoY
6IvlV4pDO9uErWb5JSBG9EFVEX1Q+4k+KHGC1xBc7v+nP0oj2iS2SIcUGp1t
s9Mj44b19gHGDX5T4L/4f/WZvB+xXlRYJ4f5S9e+HGPgh4ebmkHe2RGQdLVe
JsKZGpJQtl6/bS0MB3bObt90mED/xf+rL+W/+lj+q6/j2RPKsEQ9Vsi35ql4
6W888eFqoU/o2CQyiMqmElBigyEKRtEpIwowq14CDHX/+U/+X/0t/9XX4btx
q56ukhPmUP1875qkDJOn9UjjDk//J6dviggUaaDCuOlD0rKkMAze3shsSmhD
MWe7Xwml7sEmivCOf4cwjPlDJ+F6thvJ1HMGCzymxquv2o+IPP2fPfOmYZHN
PajjxyBv+QcBfH+8z+Z7Ewan7cs4wK9mdMZYMP5lvxLOnOcrEVtvAbHppz7e
FssF/iu0lH2pQvg7uegqRSQn1rsnof90ZQB0J6myyP89ZxS+Fl/tGBPA7xTE
whgD81Bbfw2v9h1KTMVwxv1+ID8m/6QUQaLVhBbZhJr8V+lwksSDI3lJopim
aXBrzLkT6CwLUiiSM+PDsQ6kxh+lsPxG8s/22wPoClNdf2sFG+7R0PTqoFHA
gvsoQKbVIDBMp6RT3ccIqa70M4S1U+PLfqGSOeuhaGdLXfonmATBy59dyd//
BD/fpx/+50oPcL9sF/Xz+Rh4nNpfQrXQB06kztb5DfcAK+Y3m2UKXeCXcPd1
qmNNwLN0sUbOsRv8Gu0pvftYDHrcoGJ9392BRLMVu/tuN6FqYl4DEvMa/sS8
hjYxl9FDzGXEM/47l3E625LXI1Qciu5xPSpkzA89PL+cTKLtAXeI+s4uUfd5
StR3vlxMZS4qWgSaMvMp1z2mQCzT5UPkhjPgjf52w/P79PBn4DCt/zFK+C08
L8s5fw6pXFboLCjfB/eV8Zw2naKCO7Q3tMSEf6Gkr6wkV5PZ4Gb9oYC7R/fB
OwEKujzjCyC4yJzuPQ8XLPu6kHyXjxlah8baelLNAaqs4VUJQxYY/U8lXfME
LbyXvL82w3IYcFf3CQoP8sOCb48qd7TZYfaB+iFuz1nUb/2c9cMbQTgxV7in
aZYDuv4qel1zfwlR/H795oC0EHzk15mSX8YJqVOk3jxmXERV9i2Cy7Si0DnI
ukprmhcesGdl6bo+Dp4ojI2cnBCFhq7B+fGy/PC6eISixdUFkOPMJwcfSUBS
zhdlxsuCMLxbsGkPx0/Quyz1uY5VEp6+/pa1yVwIni8IEYVx+eDHwVNL6f9T
PxP/1rdgIwwVSQa7uH9MowT3m4f8VqRh5a+BJDZnEfhBIfNDv94Smn/46GgS
nyw0f7x5fEdHFHKAmm83df4gzt0ApJgpC9MbacKcskWhUm2/Pt1kP9rLpVHg
HL8Ptg0fYSuolYDUNqyM5xlHwX/x/FtXRCStWWAKTiojU5KD4f+ce3m/oxv9
F39SFhbOEkuPI+ovkX4Mk4ATZIyli4b1gFmrPYLJlQGryv2pO6YlCc2ePGD5
ENwOEopZo/YZ7MON/t7h3XOS0P62P8toWTeIIHTmF0Jnav6vzpyufre1Lggb
rhylSmhhh+e8FD9ljfQgpYOTCc7VJLCw7dwl7kNrIOsG+6GY8hYUJF/k+DiG
CXa8dpTluEUD7zgGCrxj+ore5Kk7CSxIQo3uj/6eu0LQPXT2iBHnMGrF8Y+f
BMrBaC0BeqELYhC6lz48MVcNVJbuGbrwcuAV3SjNizeUIftn7W139W7gxPeE
w+sHIz76asHrTFUm6HR5YnFYuQfcyntNa+vMhIUaZS94v8gC43QKVi0BXWDz
u7+hPB8vdg94k+3WWwQYOwpmndh60dLlmNNcrbzYvL7p2afoH6DtkoCPZlcP
Uvy8JF/4VAy/Gcsgv9BTAT5/FVB8zNUJ1Kt6cfddUVzs01nxLL8cUHwabM3k
6gWa8rV1M0UiuFc7ZvHCahngEjuKPUO6AXBvPTHKKYobrh82nb5SDrgNXgfP
FvcAyp1z9ifspfD68dsBkyS1gMra42tSbTta8nzQyLRfBueMesdMjNSBd1lv
/qqCHkQSbmGpJCKNB56mWfCV1IIWRgkSqb09iEzP8NeRKik8ZUW3+sSyFvSx
zHzu+KvfCsnOoqZmFWwltPPMka4dbNk7HtZP6EG+ISt/1C6I48HXS0rDXAL4
vNYI4/e3P5GW2WSl7H5SbMCFA077cOLDP/guKdr1oGZ2C3ETLwo8eL0rilON
D1P+s+lzOrIL1fi+PPQyhgy/Ypvtu+rLjdWpeMKv3xhEZcUCWgkfSfF1e7ft
TUUu3HNm/GEieT+yfAPdnb9R41OfssqE4oWwTsic0mONNvDnud5IIRstdvei
MDE8I4INq7726NsNgrmzX7sTqehwUOuP2j3rIniGnXT++/F+8BsPTTWL7sU3
ZXSnUhOEcdbVFzb5yf1gZP3eym8VGnyh85XH+rIQ9ms1jomV7QI35O7n3X/J
hX/MvthJVVHGl9scqt8H96P0YyfviANuXJ9xKcQuRxlLMbgVFg0NIMlBpuXM
Ci5c+tS1J9RMGXtGyBbqbg0g7rQvP5aH2eBAvsXaQS9l3BaKZRRBA5rUE5De
4yMPqTfCT9FGSOAP9/qVfehSwYnBM6Q8IBdYTSadUAz6CArPHbi71NwGuroX
YMYaF1zn/qjK+LYWyYuIp9GpNYGQG4XDrOnC0P3UCp5ra0WT/MLBDV1VyGHy
rM/lkyrwR4DKk1m3UXSa+ezGFbEWoOdNGnOUTBFanNCoD/IRg+I9T4sfn+kG
UcR83BAxH/eVmI97cVk1+SHlGqq8+uM8RQwbPL+3bvbIkzfAxm3q8GQKK2by
vjDTGKYMm81/DugwVoFmHwf1vYfZ8Pkzh/tOcanA40KeNNuC1SDkN3NynoA8
9rhcdq6bSxJ+8jdeu/0pASVeoTOr/iSPqzvCLzzxk4T6QcHzBdXvUAzBywhu
QHAzpfzkOS0VPJOmU5XydQaMnx+JCDGoR3z1x24crlPBvgYUwjOvZkE0D1nR
YGwDmtsXHGzmqIIr/fuCWHdnQGxn1KpSYQOyJvy1bAh/LW/CX8vkqPtWf6sM
zDde4i1jEYWFXBQSPQJzaP93Bzd9KAPtGcbrzqWJQLvtxq6zjxbRmcTbVEIH
FSFnhXWM9Q0JWBfr9PWkwCJwKm95mdunAOtdDc8sbInD2NR5HiPXJdBV4LPw
bC8d/HP3+VFWLjFYYK9Q2EM9jP6LC6hvAqUoJvhDf27K1FMaHqwXsw4k/Q3+
i38tAbsusuto8cNFlSpaVijYmj/KQlOI2tEP0rtDG0jG1qtm2ZoNYttyxBad
Alrao17IWJPjlKQPU/vH+OEaNI0h/3tOXLvY+1IKUuDZzElNpb/fD6eqy2FP
7hxwqubta54De7HcOZLW84Oi8Nr0bjI5ZRsyJ3zDqAjfsHHCNywl1qaRYo4R
J6TDzZh1acgkO1Ytt9ECIrsrW7cnWfCgzmX/onwF2KWWFkoX3oOGw2+0bV1h
xUfblmWkVRTh0ilB4cN5nSi/40THeiwbTh65ZOqvpgS9Xxd4Va16IZI34x1r
tOzY+bVg6ZVAJWhZFqoYUlAMooj7KJu4jySJ+0j0qvejdHlB2HJvzFOdiuv/
q+y8w7n+wj4uW7bsbL52VpEK5yQZDetHpZSR0KChJIqMjIRCKiN7VSRJ9jl2
ZkYyQ6VkUxpmT9fj/P7pun7Xcz3/3n98rm/ffD/3ed/nfb/eeHq5Sys6PBv5
9teVWJxmhJESPj82pUphbtYy9ONEE8gk8xBaMg9pIfMQjZ817UIPBeCsfPDH
8tYNmOF1yL0ct1jwRFMk1jBcEuZjXcFSbRH8tSjDwONnHCgqnC2pYZWFsaMF
86oPJDDHxRVRXb1bqG5LdT8MU4QDrobWgRuksZheF1O5uzGKYvpQHBYiBhfV
HvmdvNOOmE1iaPgTS8E9Uv9N6l7Ga/VbvruOPmKXg79u9XkFJvYhq9AVCrtn
I7hN6sukHknqalcDRJ0rlOBVh5Xbly2GEY3og2sHWSqRBql7k7ohqbuUfpiN
1FCDV/1YRxSsPqK0I58tBM5lgbOk7k3qb63X6uFRxe2LZzlhS23+yZ3nGeBX
Gar8NMESBMpdXiwmcMHQA/9c2snABLeEb46meZIJeoYPzywMCcKC9CMfkzi4
YEbBxS/lb5pAyHr2zgVWIbhhWmEsqZ8LKo7v9WCTLQCcfN6ByzIS0O/LO85k
Z34omMDidIPrDbpBrzBUEUWFK5QUlFPfCMOmFzUFaXQ1oJLHXyP6wDrslhmZ
rb1ZFDLR47D2yyVAkq37ptx3KiwwcezMrL8IPLkitOPdCAYq1ycenHxEj2k9
N/uWOkhBr092bc/a65FLxK45HRcGbKPhVMHITYGqWrUFg7zV6HXQvd1vmBmw
2qEWUfsyKXjh25k+8eZa1L/w2IK7kgVnW7efogzJwTJZardY3wbgue4QlY8E
K+7efpqpWUMeGh/meCpY+woc875eFuDFipH8TKNnDAP0PSTfWGsbC2K3O8Y3
PWfH0wo7+ySOMsGTpmFGMm/Dgfz+05OOlyqRldW2bObWfqBva03PbtsLZv/i
1z0k/DrDXir3sKVVcHZI9G6GCR+UD+Divhb8HvToipYIRzBA/bFPynXF4vCc
UOB6sTcfUKLmMsNJid9os+GpmtFGfviac3UTS9hboPRyB5PT8m/Umvk7wttD
ALq+MowzrO4B0off3VDtocJ0TvIyTzoFIf+t68uOLX2gu7O257s5H36Xcn2+
OFINttE4VKyc7wOiUSd65xEffmy+9/CNMTUYcMRli+fhPmBXF7ys+1kM79cv
yAj+Wgl+jD2wDTYtQPWtit2LJ9RwXHLIMPPNTnDUjcV/61glMtgnK9do9Q2J
5alLPY5mxiWaP6nzdAfBzfVzZYMvufBBIXq5DznyOPp59wmo9RY9kI6P8fPi
xVePnenMpVPB4hd1EyMa+gF/teNGNhpe/NFZZGuujTKmlry084PsENhI+vgQ
6ePDpI//1x5fPNn3aftrD0iY7LnvJXvu2mTP3fhWI/NRfW48GiK5xVyuDUgk
Wp/ZGlUMjJbmWQOceLFQf+zoYP+f59kuDSDXOHSXXukl9zI3jjXZW6tQ0gbg
JV69vTAXqEyWlUt1C2C5OM78G0+4oU5o32Dkl5vogCp1VXeyKPb5lKg/odEL
fEKC4xhjapCcKa+9z3sxXKDBt3h5rA9wN5wJbz+SiV535RfWK4hhtcf13TX1
vUDs+bG9pmIYWXO8zF0GYjjqIcPwNSpBWKp+LiHRNQV4TWeLiFmL4+pEqxlK
/UZ4Ytdtlf3K94DKhJBWtjcFh4qFK+pKvAcjCXy1yRGN4J+sVs4bvRTsQCPx
PffUe9DJoZA+oFsPpvWcjdu/SOPSjgXhrRYScMlMZMSj1Q+xSh6pmKeVxf90
plBCt0pCd2ons7y422A+o05vN40S3nHi9OLFyVEQ7DWq+OfwBc4P9tf2bFDG
XawyFqW1X4D13fHhPJ8qwOfgISh+TAlvMPxd9X7LF3DKduH1zR3PwLk4aW+/
S4o4uUtfr79GGp4TuPMgofUyKteaM/HtUcUMUdn+O90mgWY4oE8yzQJePV4c
TbZqOGnHiXdB+6ZAxP7G+H33C5DJxsbtM3Rq+P0l7X25pZNg+KG/+8XIC0Df
ZKTR1ZQFGs3Xnk51oYU39VdCLoZ+RYLbtwf+tuWD71vrC3kHOeDXvoNyx/Tn
gaG0b+fHfWIwIfXJyyM3+KDjmZiHfurzyPCFpCv9H72XoXN78u4fvWtjIt0V
cO0NYBXOmbmtSgdfnGrYt39MHK9Lnz5t/qIGGBJuTxrh9swQbs910u/ukH4n
RPodG3lOIXkOK3mOAXlOKnnOFHlOs5vi5GqzErymxnU7r00GT5xppL+8ORu4
Tvyj9jlNGfb2XzuedFkWfw8KVTw5nAkEFi/Y6aZsht537rIG9o+gzMnvBvJG
nWAjqV8n9QxSP07Jc128zQMNsEPkzlUW6BW5h7Ir/i1QJL7c98SX60N8uZu3
37RdlOGFcYzq93c2sMKag3MPVjp7wMhxHb1FSz546EFX6k4bdtj6PlXn6lAf
eHzB7NYClSicTSn4KdbNDfMXVVpfmbejDOLLlSO+3G3El3s1SMF74Z4oFKyP
X0zS4oF1+a5aZU/foJiembxlezF4hd2FKpmBFxbeT2UNtelFPnQeD1ZkVOCl
Q/mtpkUUuI8iY9Hl3wcm2U9EXnNTgelXY9vbhKUhVfzE5M4zfeCK/wXJaEYO
bGVS9ESQ4Rmoqo5W9KTpBzSSVx12OW3E9/ZbDxsIloMOl3dJFh59aPf7KvMF
e0k8RqG6WRJTA+LvexpNRf/RmwNG1AfSNuPTd5Q7pAbegKnRolBXwX4kSL5n
n7++Z2YTB/PFCl64aEr3cGc0G6w5E7ISs6sPyLdSF13lE4NGEwErYik8UD8+
8uPsiW5UeHP6bvl+FRh2SrqNY4IC65rpplxG+sBuHS/4Q2sjbN0av2+7ixq8
r7Q9bEqwB8SlTB3O6lxClxgr/QKZBODMlgy/xuu1gOrSJwvZ0AXk1UlperjE
C9W31rHr/SwEtH73P1sw8WCtY1O33KfUINv4yin9qAbgR/5uo8jfLTP5u/3/
zkX/aw/uv+afJvBbPtfVFbDwvfQr3wQ/1m/RubyLoQlp04CKxe+MuEVUXmCb
3yPg1NF/hbWqA3Amprhf3caKpRKDWE4xPQVftA0frxPoA7LicklPevmwFNs2
bGRRDOglVc77H3iFNswcvuqyJIDbWka3fbhXCkJ6gsIeNbxFVoRbqBq4xi1c
JtzC/Qb5x9hyJDD959rCoK5qoC1ntjfyUjsAETuDbY024yvnI51Dvd6AcwYS
OubXe5EZ+fxL5PObkM/v6RT95OHd34hH+I6Ojh8v1tvEq35AsxkNqzFTUe1i
xMC/i2XPHnG8U9Hs0NnDr0GG18AVbWMBXHw4TqKcUQ3fiPFZytLsR5N/+bdp
iU+72Xyo1I93M+auL/i93XUaRKt/bry32ogMzw+8Pi8tAeVuBVrpcwphteKS
3AOUCGQxkzs7lS4NLVsORP/0E8fFB39GII0E8F//X/+1h2iZ7MxyQ/EHisuK
qqqPZcdJpZcSp20GQRDh23gSvs0y4dvQEI6NO+HY0BOOjd8Vgen0O5uw0tuZ
vcpZMrBYOtfm4Mt4FEzqm0ldUGatfmRXqBZ3Ig3OD3a4FZgpDuXHyw3pA4pR
jPnHqDE7Wsyy+35D5wEJGLRq5m//pBrNSvWHnRSgxkwcK5yThmLQuja83koh
FdCV7/1Z8YIJHzxN7T4rLgOT9krIFz7JADubU42jPdbjZzIaz7XbZaBettpc
z1IpiCM8ulzCoxv4scajy9NgyT/ZzI6X9ifZHI5XhEnGTmK7qsPBD4n8gEQD
Dnxg/Zv4zL2bYE1UWGuu4ROkz29Ng/TZsHmX5iekrQD5fspTneWvAq/d5lZi
HHnwwH2XKHVRTuiuxxl+xCoFnVmi6DD94MCim6LGGiWZYZHPuyXbnQ7AltSZ
Sd05YK1u0rfCE7/jOzpHJfrReRcb1hn69TPcfAiccd6pfbaVFzr+aJIwSuHE
1O2j6wZNs0GAw2dvpxZR+IX229xcDD9uLhL1bN+RjbJvuX1YR0UPn/RoXK69
J4HpNDLPWv1qAkqHHDVuznFhU/5EKXtmVXjRlSX219N81GLD9WHefAP2/qFZ
zXj8j348U1Lt6+WK1PnK8j9NScNGura++BJx3GjJtPf1gbvgu+Nbja5rMjDP
vcppVE4Cmy5MK7pVuIJfe7Z+8aaixUOOq/KbfovDnde0qR5cwUiRcOGOEy6c
6d41Llxqzc8UOb71OMAonvveFRnotuPBsbiF56A751vi2FdGzPi0VTP1gjTU
K/Vk2zIai2REB5TGeTmwrOL2Vap5RajSB7lUJ6ORn0zB4Wgmdpxz54wE65QC
dOmTtJM+/ALk3V0Nc9vDjXffrwl9v4MDdh6ab225l4juvGQWMVXagK2UtzJu
fMYGTz7wkTG4GYMekroLqb8ndS5T9/WhZ+fAB+wtUy07BtZfU+nOt54DBZ88
I4Vp/vx7Djx0GhXkgz0DunyWpt9Q6GKLbPvGcVB0cnP5QBoNDN4k1DvY0ohA
667vgdZf0Rbrf3IkdVihfJn3HfXnfeiN78VuLeo58HjXkTKn/eOoxKitoDkn
HWDu5sXL2qJwJYrqRKYMP75wurwsSzgL+b5cTo5N/wq6RpsFRV+notIjb9i/
jbYDVrPrXYZ5tHB0IqPXdvEFmt80qX336TP0OZA6btJW8k//KukSjnmDDqUN
j+bWt6HttJJX92pKwyXXRtmO2G6k+OHW3tvN9YhLwK5t+vdvcPy6tYCf33fA
v5RU9ZDjHmrvbb/x4ywTXPVT2bFTYB08ZZggs622D9mf+rx/2V8KjjKJyiVH
b4QekW/i8JkWUFBuzLM8JA33K9jCZCwCCytYnb3degAblBNaqptCD1lTRxob
10ONGP3sRNp6VL2tMGjoNCfeD85aRFgpw02NHwyFZl6hB2FjWidjaTFFOjOs
z4sK9pk65XI7PAQHs1ISTrMLYYP445Wb3Hjh86OZA4/tQ0BYc3z4Lg8JPJT0
eLUlTBi2GfGdpwo5gsqD/Vxv5knhu+2ZbBFhYnDcvspaOS8Fia0zVuIXl8Mf
OvduGhKUgtof0cd5o2RwukMq33PPFDrsNF3XNkSLqxr8LvH8fgWUi45UHjvG
B02cKp5GcXJh9Z9iogJ7s4Du3fBOOxcFyBx2XHduCwV7V9S0eTEmIxMekWv9
clS4x4B+kPvdAuBv77d/ud0XTLIFflW+8h0N6fsqfxJ+BtoOFci0ujaiPUSH
nic6VIPo0P+6D51t8jViiFDA6bQiDP56LaDx8hjf/bQexPi509n/j14YSTfu
fTcmij/UNOxxf/sOBVzd2MbylgMzNgudkvotg430ptLSd/ciPeL7XSC+31Li
+x0kvn0R4tvXJ779LuI3fvWv37hlzW/MvbwkReHiwaU4+6AJoxLWSj60Z9ao
D6wnvn0e4ttP/D98+6px9m2rt/jhCrMUSyF3I3qq8HVUXrIenDu6/hUzjwpc
OV2ZnsbzHv1IyhXZjtqR9xPPp1z89Jj+t9aj0PhKkHgjTre6oQjUyvbm1xVz
4KTDxWVSjxqBtHuLo6RoK+idKXX41sGHfR3HmSJXOsCTR9SJksul6GhVN8q7
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
9rPR7LCiNU93yCcO/Q+KQv9W
     "], {{
       {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
         GrayLevel[1], 3], 
        StyleBox[GraphicsGroup3DBox[
          TagBox[
           TagBox[{Polygon3DBox[CompressedData["
1:eJxNnXXcFsX3/u/n3t1708LAQMpusbAVFUTswkBRAQMVu7ADwS6wQQXFRLFF
/KhgEAYiKiaiCAaCDSqK/q73c42v7++Pee3s7OzsbM2cc53rnGnX6+T9TqrX
arUVylot0nZ2o1a7IK3V5jXVauerYHdtv1P5G8rPV8W/tF9ParVflF+sfG/V
v0n191B+E21fVjpQx9ZRe68pZXGttpa2ryrFypc69rva20Zpqtp8R+kfnful
jjUpHaH81lWtNlGpr9o6S+0fq+2RKl+s43/o/E2U30flvVW+qfJ7KP+D0hrK
b6SyM5X2Vb2nlfZRWkXl++r4fkpbKH+fjr+gtKqu/ZeOb6WyVkp/6HiksobK
vlL6SWUrKnVR+ddKyyr/i7YX69wa7avuU0o/qny+yueq7A/ld1F+jtJSyn+v
7UDV/035DZVfqPSNTv9X2zKr1ZbWOW9p+0heq3VVeSfd9/tK3+qc3fWcuyl1
17m56v2s45so3ar8vir7Sflj1M6fSnvxHAo9P7Wzpcr3Ur/2pG/Kv672f9N2
F6WDuQdtN1M6RPkF2nZW2lt1D9D+Dsof2ORr7ai0udo+ueHzj9f2hIbrjVP/
Xkl93sV6L4eoTwtV5xQdP1XpUNU5XOkw3qfKL+LZqv5JvCN9CzN0j0vpvLfV
t1Hq825cS8cvUtnBaitT+kFl6yv11blHp77nf3S9fbTdW6mPyjdV+Z7K36Dy
g+p+Dqm283Xeutyn6pyk9KvyPbX9n+rvqjp/qn43bXdTukvlXVV+h/KPK/+E
0ijl31I7/ZSG8VxU9phSQ/kHdC4/zWjld+cZ6B5O1v4IlZ+g7f0q30bbZ7Qd
ouv+qHvaRmkLlT2kOqdo+6yOPaP2Wun8J3neOr6T0nZ8rypbU212VH5dvdMX
9XxOVDuX6vjGJLVxlc69RulCnXuTtoOVrlR+O/5FnXuUzn1N6QilY1T+tc5b
Qak/74NvV9vBanO66j6m9g9S/mGd+5rSOnzXKn9GaR99f1uq7SVU/rfqfKs2
2ildxrig7epKA5X/UHWfUDuHqE6i9r/VdjWlZ3Xuqjr3KdXZVOUjtb2c71Dl
hyhtxztVG5frmjtRR9/GBKXlVParjv+rc5qUOqiNc5UOUL67yq9Tfhueofb3
V2qtfJP6eqXa6cw1VOdmxg/GFh3fUts5uu5PyteV1tP+Qm0jpY2Vv1vnHaf8
3cqP1Lkr6Nx7eNfKt1R+OP+4+rS50nqqN0DbYzhf5cNUp5/q3Kr8ndoO07NY
Su3drfLltH+nyn9Q/Y5Km+mc3fWc5mV+Dg+o7FiVDVWdzlxT5/XV/mUq34Sk
/QfVzoo6dq/qDNf+8Tp+H/+Rtndpe6Ha+UZ1V1I6X/sdVP/xzP/57vp+eup6
Wyj/Yt3j4uqMRWrv9NTj4+Nq88jIY34r/ZfnKa2pNvpGHs8YV3/S/jupx+rx
us4UHXtb6Xfld1faS+08xX/X5HHySeWvU1qGf1Xn/qi0rvIvq+5EnbeIOto+
ofQD/yHjYsPj7bfazk89/i7Sffyu/t+r/jdpe6fu5xHlV+dZ6VgnXeNPbRfo
2AiV76S+f6A0V8fH8r3r+Ddq5y/V+UJ17lOdrvq+3lTaRcdfjjw2t1VaQeed
qrSirr88dVVnnOqvrLJzlFZX+Sra9ldaQ/kv1ZdZSmeojdVVP1d+KvWV30h1
Jih/nurV1Jf9tFmgbU/146PI/+YSzE8qP1t1Lte3u5fyt6nOIOX3V76f+rSc
6hzAuK++dFBalvvVfqXtntq+pnt4VWlJ7Q+O3ObeKp+osk8i179f/Xkj8zif
apsppfxfvE9de1/mCNVbqu5+PqZjZyr/ga6/qs6NdF+TVd5S+QfVh1eU31nn
TWFc4D9S/d2UdtU576hsbbX7vsqfUNlZKvtY+eeUP4d5lW9Pbaxfeu77VPXX
V/0vVX6a6pyqsofV/icqX0/lX6h8f227q89nMx6r/K+G58QHVfaw0k56Xkup
b7+pzbE69wod30bnnKc6Vyo/K/V/caHy2yp/ovK3RB4LGRtXUbvnMF/p3E9V
vqr2L9D+DOVb1z3G3q3tFXxHNY+tJyP7KD9az+ZoXfsE5Tuq/TMalm8u5n6U
jlb+dOSO1HNhjybPk7vWPM8xT3ZRfmOeWeqx7ADVfze1XNJN7Z+r9tdSnV4q
3z6zTNaDOVlpR+Y+ZAnVH8C4p7rnKa2j+tvrG3xX6TMdm6B2Lueb1z39pPy7
yl+h/ErKX6P6G/N9qp1PUo+Jb6j8UJV3UPluer5dlfrr/VyvOrdHHv8ZW3sz
x6tOrrp/q82nlH8LmUHtvMn8qPz+DctXLdWX05VW1X6q+r+o/hOqvy3yD++X
sURlU5R2VX5p/nflX1CdFnX/D/wL49WXdg2XV6rTVm0+p/yK2p6p1FbHPo78
fZ2gcybE/g+QPS7RsVh9O7XJ/8vR2h6kdKiO92nyP3iZ6iSMj9qfyPyvdLby
A1S+NfKl8tcpXyh/SZNlU/5J/sczVf63Uk+VLa/zTtG2u8rvUL6X8n+EMWEr
nXu89s9Vfkvlj1V+Me809b/M/3ikUl+VZyq7PfV3mWtbhe/yf6o/Wek51XlD
27V4z8o/pGOTOU9pe+Vf4F/hOeu8R5jTlH9H5Q8ojdX+B3qGk5XuUHkXPb9P
lf5UWzuofq7jz9J/fQ91vYtlVHaI8u+r/u0qf1fbCUq3Kf9y4rFzjPKTtF0T
eULnn6HrvIpshYyh8i6p5YBRyq+UWl7aQm2+o3ZuQk7V9kj14V+1N5xxDRmB
71l1PtOx4YzzKn9F5aMZA5F/0T20f7rKx2v7WM1zwzjlH1V+B54Xz0b5V1R/
NdV/SfvjlN9T+ReVn6tv8Bi1f77qHKZrfaL83coPiTyX7qz0dWR5YiW+Gz2P
u1VvNeWX1nYZ7f+p/HnIxKqzdZN1kFWbmqeA2mzV+bTwv/Aj85vSGNV9UelZ
1fsVWaKwLtZSZS8o/a3yX1S+BLJ94fyxKp8d2n2TOk2WZ1bReQNz50+KrKOt
r/yeusc3dK21lF9JdQaozprKt1B7Nxc+/0Ud36RhveAiPfe5ifWF7eiz6t+j
/Et13x/nTlL762i7ttKvKt9Q2w2UTlD593Vfa5DafFvpB+2fGPRHzvkfOmCT
5ZBX0f/QHZT/HnlT7/0CxkbkeaXFym/K91lYfjtCZdeq/pL8yzxnpW2VP1n9
ncm4oDp/6vhyKpvNN8n4rbQZ35+21ystzViv53B/Yd12d8ZB+s1crO1Zkeuf
oev2LFx/UXjn9OEW5bs2Wf+6QNf8NrHetK/OaxNZd1pV7b+lc+cpf5Pqb9/k
/GDlOzVZP+mjOg8X1nM217XeLlx+n7ZXa/9r7ld1Hijctws1jnVpsk5XBH2w
E9+n8rs0uZ379bw3Ri9S/jed96bSXHQH5vZw7jY6/mSGQCU9Ar078rd6vvJd
I8vup+r6/2b+X/5UH45Vuhh5Xu3drnSp8jeqnU663uU6d1+VPa9zzlD5BsqP
U/505fdR/jnlT2MMQYdW/RtVfzOVv6Xy61V+u8pbqPwGlU8BL0B2ZI5mvlP5
tcpvrvpvq/4Nqt9d+SnK36j8cNXZObUcfLe2zysti0ypvk9UnatUZ6Ty9ytt
r/d0rM69NrcO3gVdIXK+h+5vZOF7H6o2d1I7t/A/avu40tKqN4vnoHMvqVl+
b1NZhu+g8yap/GrlD9E1DlbaWOk1lfVVulLlS6rOkjp/gdocq/sbo9Re+Wt0
vxeEb/gs1R1c+DsDV2ipbcK70/UnKc3SOZ/XXb6C0q7q5yUqX1756Spv0WTM
oafO/SD8I/3U5qzcc8FXKv80/Bs7Kj8pzBHv6SJrqa33da1/VPcC3o3KR6ru
bU3WeT9mPCysJ/RW+qzu6/ZW/Vtyz3/3qp2o4ftFnv0hyLSXq25PpUX8Czp3
qPJH6dztlH+esVHpZu6V+VB1Ous6W+rZ7q16ZzInFO7zfWovbvidfqhjN4R/
Gbylc8P41RN1jw/oHXvpvFMKX/tBPef7tX2IsUJtnpJ7brsTTCP1HLM1z0H1
1lS977XdUOkmlW9EPvL/sjf3xH0qdc49ZjFeDU48X6Gn36GyoUrra/8+nXt0
3d/2DHRqnXMEc4m232n/POqr7V6qcw3ziPqycuZ/YAflZyv1Vv5q9XMZ8BHV
max2W2v/dZ37t9o/V6lABlB5m4b1jpeUb9mwXMS//HrhOvfpWvdGfg6LVN6/
8HfwkvLPKvVT/VuRK3Wt6/metP099TOZrX6NUZ1jah6nGMfAWL5W+ViVH8eY
oLbjyO/3BZU9rvYHKX+U8jfnln8u0XZOYfn2GrX9b+p57vTE+BtjJfMiOvty
Yfy/ODeesKnq7KP7PV3HT42MB3ZQvRvDGN+mZhn4UP1rO2j/58jzATjhZvyL
ufV9PpZ/m5xnDqXuyir+Qf0aXliuvkvbL5RW1PHltL2l8Dlglsx3S6r+cYyX
4V8ez/dc9z++FP9K4XltLLiX+t1W9U9DZw59fk/lB+lZr8FzQyZVnTX531Vn
hcjYyFTwVNVZnfE8zJXgHueHMZtzL9I99dG1Omr/l8hzFXnmus35ppD3kPmV
DtTxSttSz+dn5tDY74d59nmVn6jyTVVnE/Wlg9Jhyr+uPmyrPpylOjdH1m+6
Ke0fWZcBb3xQdbZoGOs7gn8oHLtYbXyfWPfsqfI1ImOO+4UtuMRiZJiAu45V
H/qpD5tp/znlT0DvVf4Z5Y9XfqPI/92/vAud2y4yNrm50ri6xwww3j6RMdyV
lR+h7RBtY6Uhic/jOz8UWTaybNlRbU7RmPNH4n/zduX/UX4jpQ2VeqjeK3zj
hdsapfvdGj2HZ6Ltktq/GhlMx1uXvhdwxrhumQTddvvIMmgf/S8v65w7Vf5r
bNkTTOMYlb+q8mF8h7rWa4Xl12d1/RYNz8WL0Kljl/+kOj/nlnef1vXHq85Q
3qPqL9+wbPwbY11l+fsX5dPScvOfauOM2DLwc6q/bMNy8lY6/rnSOjrWiK1n
78R4pb6d2Aj4s9ppXVhvQi4GU0Y2BnugDEzja9UZV/h+ec9gzbzrB9TP09B/
GKt1/Bhda73wraAb8y09qvItVL6WyttH1pE78l+on/MS687o0uDL4MazGU9y
6zlPIQM0jLtO4R9r8rw2U/fSTekd/n3m2Nzj5wdqbx3Vn16zrvK60pPK11Xn
ttIYyCdKH5GYd5pc9qHyU3W/jym922S8YzrHkAf0vC9WmtoIdZvc/ruq+6jS
NPqp605sGLM6MvH7QRd+AiyjYR3nAPVxRm4cuWNkzBb96GHVea5h/HZ/HT++
8rEtImPJyEh91f9OhXHmttg7GsbQ1mKMUeqkZ/GVzj2rsA44Hp1baQyygeo+
nVhPREdkjr5f+T10fK5SV74NHU8QTpS/Renm2Lr0NTq+Zml8vr++mXOV8sQY
1Yqx9dxeOv5QYax+hPp2dMPzCGPAypHx/L8iy+XYlbB37K/t9qpzt/r8u849
TvvHpZa/kb3vRYdu2F4wRHWuLW0n2E75d/R8/la9R5X/ILM+fqm2lyktq/Jb
ke+UL3S9Yerj0ICj/qnrrKL8bSrfijlF7ZzLPKK2W6t8VTBgsKXEfeO8NWLj
Tkdpu3ZkHOlu5YdFxgou1nUuUVoGWUPtX6HUBvlA+wsT40Vrq+wqpXYqz1SW
Mi/Gtukgw2+nOjegm5TGgpDBJmTuwx1BttoDuVrlJxXGHYbo/MHBvsZ22dgY
RV3bJMzXd6h+m8KYztpq+9bC7/RCXf+7xPagtirLA86IvoOtCIzoGh3/NTGG
tmtk/Wgj5ceDwSfGlyYrf0TD8/jhDeNP6C2/qM0RSjs3WYehjPc4UNdoVTdG
1wfcJXGb6F/7hvaHg6thY2BOCWMu4+1V6v+Vpe07YF7oTRuq/Hrk9NK2nxt0
blNm/edstT078b3soDrT0XH4r1W2dsP/9TnMOfyP/Kf6Fq7R/hvgKMofoHRr
Zmz5b3SPJtsy3lF+ZeRYdDvlb2+yzeSjzHaTwTpv18q47CTV/5/SdB0fEvT9
83Xu3Tq+u9KWqnOLtvsqXaj8G4zlSp/y3ZWWTxaAn1bGIl4Hly6t4/9Y97yO
3eAy5iOVv1h4f1/mNZ2TNTzXjmiyjvMA317D48kwsHGdcyLzhrYvFcZtntAz
fKRhPehylS1f1Jpto+2Qd5S2UP3vVGd0YixlhLYPqf6AmscDxgXw51O498LX
nsg4pPQe11LZ6YVxoIHIqrrvHsp/o+O/Kr9j3ZhhoXvojN6o/GSVH6Z8rPwv
mTHlRPnflD8NDACMUfnD637P6K2867GV9Y6DU+Pz0zLbz25V/T8y41jgcu9l
xuYOKI3VvKVn1r20rIhcOknbewvbl7Fd90KeUP1+yF+5ZdXTlD+1MK58A99a
YfvMRdpeWNiWwjdzHHYI8BNkocI2FZ7DbSp/tW5M7vjcuBzP/0LlX6n7H+Vf
5d9ZQvk1lD+jyWNcu8K4IvPgLoXnyefUThewhibbQR9ssh43Su+raBjrQz/D
xoWOdl/QDa9Qfi90Aj23BL1ZbTxT+r3fFdmuBZ62j+rsUlpP31v5TQofw66K
3si1Nqzb1ooePVRl9zSsW52l814ufAxZjn+ov8rXr7uvnPs42LPS27ruOvyz
yHHKnwS2lxjDfAT8JP4/jBS9h395VOxj/LNt0K2UNtP+X+rn2YWx1FF168Sv
qf658BlU/oT2/1adbtp/Q/nHdd6SDWNlp6u8zH3dGbHnTOqAl+5Y+flur7IH
I7ezrsreU7qt4ft8NDyHR9Vm2TA2+w3/WmKs9X5tGw3jJzfoe7xRqb3KXua/
Vnpc56+h/dWVtov9faDz3ar6b9et2z+s/RdU93mlx5Q/R9vxhe3aW2PrjJyf
pj5vXRg7fkbtLdMwnjwM/Vb5i5R/TMe3KT3nPcX3pfwGyh/HGKjUR+09qfJu
usf1Vf6y2lxcWMfcXsdnUl91Omk7pPTzv19pZNDBT8IOUNg+uz3PI7HuPFrP
ZETDNtATwckTf5/I9uj02GXax/4HsFlsqeseAr6dOP9S0HnRHRi3Wmizgq6z
cmm784LI+hj5yZHHUTgw4J/YMEu+W/6/wvrjCYlt1uCkX9dtnwazbanjrUrb
nv8H5lQ33vtd0B+xQf7CXKb3+BL4VWT7NPomHBV0teUZM9XGx5Vtr//TfT0T
2U46AB06NS78sfqwgZ7JDNXPdN2Rpe1u2NJmKX3K+K+681RnBeZbtfeh0g8q
6wi+EXtM66D7Wrbw3Do/Ms4L5+f7yJguz2FeZJs6GPJyus7o0vbdq1U2p8nX
vVbt9gWPUDuXFR7vGOvQB7GBYf8aUPd4DH+AsZk5jv09kUdKczu+VLvLR7Y1
w+U4RW22rxlPxq6t7jaPffsFnWtYwJ16oFvxvaTWD9dXxV3R61W+nvJdCj+H
V9HhEtuzkD0Y+8FqwFe5/nrK91Lfeiu9o76vr7RuwCtfi8z/AdeeEHnuxXbe
HztP4mvNjYyN/xHkUnBSMNKJau+D0jaoy+qeu7DDMtd9WHq+Q69ii26Ffg3f
Br4QuhHPEP1oN8b7wjZE7KmzlT5T+Ue6/voN52eUxqG4r63Vh/UL67ArqKyl
0pqxZd31VH4Sz1b5TzPLdW1iy73YnrBrrVA3b2SyyibFlnPQo+GsgINhR2vo
/g+u2d62Yt15zm1ZtxyOHRX5t3fN9tK2deNL04Nszj7zHHh3p5oxb/LIouAQ
8MnAIsDPWxXWK1dFbi3NIXpL/foscp85Nw/tPKz6b2bWJbkusjay95WJ7WvY
3Zkv29eNa70LPtqw3leltoGuVvf3zXfOv9Yqtr6AnQ77MrJrT5V31Lf8o9Ln
DeOmcCSAE19AV6ib/7CFjg/AVqs6C3VwQOSx4iNsmSRkWu3P5Fohkf9E5XMi
48K0s6nauERpOjZM5KbSdafrvtZtuP46zE2FsTUwZfhrqHJrqbwoPAZ21z1+
r3Ru3f/c96ozt8kY2oqF5fN34bkktp9jR96qMt5xBPIR8qnub29d/8vSuvcM
Xf8Lpc917reMj9yD8jNV9mXD+VmRsWy4KNdo+12T+RuzdPwrzq/ZhtK9bhs3
nLejSu9jZ4F7iK0ceYcxfyXtt439/fHtoQOuXvidL6m+L5FYF2oZvmm+Z77l
1WLbeZdOfI/Lx/5mRhWux/dCG3yrl+n4xQ3/jxPqxrfPDvrU1Mx24S/0LC9t
GK9grKNf2JdXC98Z39jOheV5OGBjG9bb0dnBN37KLINh692lbjs7mMHOdeMG
LWPLfHAawF5+ziwzgPn8nlkm+Z2PLjLPCswJ2Rnc6UptP20yTwPcaYHq36Xy
99B7GsY94M+g43DtK3S/PyW2xVfIJ8iIyF2FdSLuqZPa+bCwbWiEjg2Pre+w
ZZ6Hq7ACzzXxs35T59xVN8fintg6M/P102rns8z/0fHYjhLP6QNVNkhpxcRj
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
cO6+NRWOUzOhZm7bvqm5BtMSx/6B+zFc1/kf34PK9lb7K+S+l6lN5ozjV/Vu
4lg4cFH2qNv+CRcO3tp+jAVN5hGtk9pm2q1uPho8tN3r5inCSyS2C/xUbKwf
wRPP7SuE7osvEPIk9l9srsj2+OmuHdsvtSvcuswY4Dfa7gD/hLkjcT388jje
sXQdMDY4weBsxLIiD9eI+B7LZuYMrJrY/xdfdeq0DfWXS7yPLw/ntQvl2DXA
48Di1gt5bBzEZmkVuBDgec0cyrrn2zZhzv1vnzGfuFfw0XavOZbIEpllSHxG
4EkdWjPfFN4pPvIr6fi1iccfYpu0yMxh27o0H5t65L/IXIcYOCtmlsNXwa4d
278ef5TVQ/s8z8lKy2fmaFEOXwu9DPwd7H1uyIPZo4thz4YPjIyNzy2yN9wq
4vzwv4FVY7tCxmvG9iPLV9jq4RAzf2EHgPcMT+CH0Cb6Hbrhj5HxhF/CNwAP
GX0ZewnxANH9Joc+YHMA0wTPXBQZF0DfBxcHH0enAdvGn7Zl6AMcAuZWYgct
F/ixjAOV0hIBl0KP6hzkQHB5/JfhaS4M/T8mXAufI3QmroW+Rhn9wOdofHgO
2CguD/2Ejwc3npgJ14fn+UaYx+GVL1saayLuFtzsxeFcsEjukThW+DqMZK6H
o1W6HF76fsrvGRvDObC0Dsi9gLWRJwbbxpn1uxf5TzNzJP7Dc9E7iHNysNJ+
2h+kdqaVPoYvITHr8Bkkthk+H4Nq5kt1DHliJwxNjXnjUwzOUm8yB4hYaufU
jIm2y4yLcl2wbHQsMPgvAw4Ppsi54DP4aHAu8RnwM+Ja+K1Qtllok3g1O5eW
PYi9t1Xs9ont0CazjLFt7GOUEz9yg8yYw3qJY5qBB+Kf8VBsuWhCw/LGw9r/
JbbPCL4kjL1n4ZeVmcszrDSfZz/t75+Zx/W46o6OXQ7n7sbSvLsuoZ2na+bQ
3VQaT2DeJ64g18Z3ED4k5dQdFeoTj+nR2JwouEK3l+YL4et/Wm5//y9U9mfu
fhIjaN3M3NE14Qrq2LSaYy11CW0i+4F7wvfFr2Vx7nnnBZ23fmbOEu0Sc+C/
uWm9zDHB6At9og/bJY4Jhr/tisi/auvVmvmf8EEZn+GFwQ/Dh4XvCJ/UW5Tf
Ru1tlZmbSqyebUJ+x8Q+y9iIwY/xqX44zKcXK50ZW6bEP5q5FZ+zJRrmU+Hz
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
x5cYntH/A+0u1pY=
              "]], Polygon3DBox[CompressedData["
1:eJw1nHkcFdP7x2fuvTP3ztxBpYiSNUuFkCUJScpWqUSyRBJZipRIyRopa1FK
pKKyZEtZQkRUllBRCFGJr2Qny+/z7jO/P87rnjPPOWfOnZlzzvN8ns9zdj6n
b6dLCkEQ7BIHQUm/pyVBMDUNgh2LQbCfyg9Vg+CHLAhOrgTBs6owrhwENZWv
r/wOathUsmuUFkVBsED1p6v+BpW7qc7zqrNR9W9UWqu6L6nPZpJdp/S+6r+j
+jdJ9p3uvWPoOg+q/f8k31XXnlb7/pLvU7Z8tuRFjW2Y5IvV/m21v0C/oyT/
R7JfVaer7ttZ5c9Cj/da1S2pzacqL4vd73tq80zJ/X+n/DClqvK/qL+Gqn+x
0ghd66ry//R7g1JB8pLGf4nyL6j/1vwX9XmWntc76r+zyoeo/ouSTVFaE7hO
F8aie36u8iCN8R/Vf1f/8Vf1t1Dtn5f8AaXnJW+l+v9o/O/o/keqzSO6dpj6
/lHl3rp+sNqfrLpfSfaFZFeqfJvKXVXeOfQzGKh6RSVeZqSxHq32Q9X+HdV5
V3Xe0rXZkp+s39dU7Qi176vyH6p/m+R9VV6sulXlH1V/Bcnu1LXdVXeTxreb
+rqId6j2bXVtgv7L9yp3Vr0n1ceuyp+q9LHa3KT6a9TXMUqfqa8f1OdkXf9E
aYRk9ZWOUN0PlG5Tfz3VX0f185Tyk5Sfof7+0vg3Ke2humfr2lVqu5/Srurr
RfXZRX2PVPlv5RvoWne1P1bX6io/V+23V7meUhPl91CdH9X3zUpj1d+FqtNA
479Z9/9DbWLJr1dfvSX/RvmvlXqo7VkVf+uL1McgyS9XmqPyC0qHqf2qzPdo
LPkEyXZQfm/1X0OpjWQrlB7jOWv870l2gNrUVt3jVU70327gGeie76t8aeTn
XVDbwzS+rfW9DJJ8vq6/LPmrKj+tNk0k76/yNPV1deb3yvv8V/IhKrfW/9lC
7Rsrf4bS4+pzgOR36benZOsD36O26l8p+Rtq/4quHaPxXaD0lcY3RulAya5X
WiL5u5I/qvqP6f67q207lb9WX13V51V6FjN1bRvJB6v+AtWfJ/nu6msPpSNL
/n5nqO6jSo1Ud5PkUzT+q1T/TdV/VeV7JKuh+tur/kmsJyp/qXRv0d/AxZJd
ovSL5DMkf1r3u0fth+raFupjpH4bKDWTvIHKL6ntmRrjLqp7rNp/o2uDlI5T
fpTS/pLNLbv8s+r0UX8FjelhlWM9v0D5kep/jepM5j+r7z5Ka9T/fawJun6t
+jhFVbfR/3tY5ZVKI1V3J6Vzda9zVL5DsuVKH+nZvav+7tL1bpL3kuwCtd+g
9mMkf175Z3TtEMme0/3PUXmZysOKfmfnaHy9VR6o63+o3FP5jsqvDnyPv5W/
ouK5f6ba19H9blR6TbKdVednnpHSyeqvp+RPSPa30vii5/9i9V/Uf56m8u2B
508N3WN9yd/3nhp7d6UBvAfJF5Q9v7dW255qc63KbVU+p+g5f6HKfZQuVN27
Vecwyd5Q+QzJiyq/rvuNU3/3aUxjVD6Ib0Xyc9W2l+53sfIX8X2p/b2SX636
SzS+/yRrqvJSjf09tb9X7burz4pk81X+Tm2eUHml6se69rjyD6qP41U+V/L7
y56fNdT+eqW5ut9u6m9n3f9pyQ6U7FDdY6Dqp2r/FN+25J0k+1j/4RP1NVBt
TlPbeervGV0br2tb6HemxtJC9S9V+ycYv/r8Xvkted+stbo2QXWX61p75eer
zWMqX6b+xqu/xbrfz5I9qmsnSv5q7G/9UtZ/5d/neTA+jecF3esy9blJ9Z9U
nW/5llifmNsqn6T8El1brvwAte+gcj/V/0v1X1X7M3S/1zX+uaozRXU6SNZe
6Q7l+6p+SflBShXdp6g2byl/E20ka6U6czTWBegIkjXTtXP1vBaov4N1nz9Z
L9TvU8o303ge5v2pn/NUHqe6nVSO1N+VSknk/gbo99yy58Ixko+L/P4nqzw6
9PdwP7pK6Gt3Rv6+HlR+uK69prEsVNqo8bRE51D+LXQSlQ9SeYjqn6/645Xv
rPrHqa8f2X/Zj1R+UPnlSjeoXC+wbvKTyi8XrYP8qf+3SP39pP7eDP19j1ed
fwKPYYDK+yrtFHqP6KP7XVn2XvWbrh2j9mfr+VzOPh35W79X7SeX/M3fqb5P
5PlL1kt9dpPsVKXt2auZP6o/NPZe2KPg93W8rj0l2fSS97bjdW1iyXvcIXwr
qt9R9bur/j16dw15X5L9pzYnqG5L1RkSus3ZqnuHyqHk36rNyar/isb7sK7f
pvKFqn82OkrJ3/SOkvXK/I5vRH9UvV+UCgU/wz10fSFrmmRHF7xe/au0UbID
dM/myg+WvJPkp0t+KM9e5W4qn6Hy77rXHPan2PP3TD2/xRpTJ7U/SOVfJZ8t
+QP8Z5X/0++lKj+n5zBd5dnMHeVHKz9L99td/b/FN4l+pv7Xse/oWgd0EdZg
9b0bOo3Kf6v+r7pfP/X3tOo9JPlP+r2VtVVtb1RqobY3q7+zJDtL5e8j60Y1
9GxOC63f/qP0rfr7ReVH1N9n6q+gaxer/JHG+3Lmd9Yl8L7QXP39G3h/eEf1
X9KYDip6TvZUvXMq1mXe1z2uYT6q/iD1VUNt91a/q1RexdqhOtsoP0fXjmA/
0bVrVX+YUl21raX6O0q+UL/HqG6mPj6PrOOi2w7VtUM0theUztO1DirXUP3n
1N9hReunx2psL0n+oa41zPUzvve6ynfJ5wP6UsJapHLMWsJ81/2Pon4+/2OV
U8ah/l5Uf5epzTaS3172msdaxzf5tjp6RXWaK38f3zT7Qebvlu/1uIr1hR7K
368+Z5U93paqX1YfD6j+3apfVr2y5Cey9qu8L/dQmx/1O0L1f9dY92U/Ur5/
bF2nW8H77t1l2wLsv//oW/lX6QCVr1f5FdYKpT2YO6rfW/ebrXvsx96oa5+w
duh+g3X/Ks9f8udVXq5+F0n+RWQdEN1viNosVV+nxC6jA+yl8ocqf8yzL1if
Q0dHNz8BG6ns930ke2Ho5xey3qO7o3/qfnM1noNVvkvlnViLlF7GLlD5kcjr
P2sJOkBF9ftL/qKuPx1YV0BfX122zjBZ14+IrSuNVTq94vWSb/1l9TFdsoci
rw1Tda2+ZLN07U6VD0HfVv3rlHZS3dqqV1fyabGf5f6Sb6vyI7Gf3X4qT1Gd
iSrfp76aqLyr5K/F3iuPVPkIje8ZjW9O7Pl6lsqjldZI9pPaTIt8/6dDz6kd
+D5iP4vmqnOv3s936KOx7Y8D1PZplSerPIo1Xr8T1MdQ5SeG3qs3ZtZJ2bPb
lT2+EZJfpP6GqfyTyl+rvFLl5qp7k9Jv7GEqn6l2v6KLKP+G2g8ue65trfrz
2CNV76TY+YN1v16SXVN2X6s1/t8i7xUTlB8q+ZuSXa20lL517Vjda7jS/mV/
j93RBVV+Vn3ezxrLuMvWtedjMyp/PXuOynVVfwu9/wGq/4ruMYc9SP/3SKW9
VfcClWtKfoXkr6FrqzxesoEqv6ryiyr3r1hXLEXe7zYq/xzfW+z5+6PKs1Se
qfI41G10ZeXPV36X3B77W2kd+jh7SMX69QGsDRrDPrrfE2qf6fqWJeuRh6ti
FFqfvEj51pKNkqyryvOVf1PP4Gj1t4/6uE7j/xb7S322CG1PB9gXRZevU/+X
SX6Yrl1R8n1SpaMD328Jdq/kV+g+7XVtnX5vKNt2rKf2rSrW15h7t2CPKr9L
xbrlTMlvVfk/pZ91vzqq86nG9pnSNipvp/JY/Z/xkm9VtM33FPZtxbbHiZH3
Y/TLfSTrxxxQ22dZs9EpVN6KdVTy3VV/pO7XEuxFaZKu74D9VjYGgO7PfG4g
2Tm8j7K/8W30O1V9DVO+qf7TZPX/llJb1d1X1xZKfqLkN6n/Prp2sJ7XIUoN
S16DF6ruHZntMOyvO/W816v8WdnrVcq91f481iL1f6rqv4q9qmtjdK225A8o
f7Xye0s+UvKneN+6vitzmm9L95tRtP79eI4X3Ff0/wWHeEipUWA8YhvV7aLU
QePbVuWLNJ6PMu8T7A9t1PYa1pCCbRrwrEeVXlD9tWAieuZreSZqO539EvyA
/VRpL2xOjfVt1VkcGkM5TnXvlmw3XXtS5Vj3+1ltjomsr09V/hGl2Wq7Gn0s
8/f2WMV1Hs7lz0n+XuD991ldfz70njakbBsc25s5P6lqzA7sCwxsJ3RJpV2w
+9R+g+6/NLMdgP7fVG2flPy4yHOqKvk01rOy9YVt1dcnKm9UvfoqH67rt2Cf
g7thP0r+ceZ1n/X+39jryXKNZyuN53/KnybZS5L9GNp2Rl/ZpmQbemu1n6n0
ask6bvvMeCMY3WKVb5DsN6Vj0aNLtq2+VZ+PFW1jzcjfD1jjksB2H3jE96Ht
v0bYz2rzeWgMsDG2kMqrlB+h8V0TeT5vgf7B+qd7b1Kah54VGWd8Qvm2Od44
GN1I5e4l433X6nndnnmeM78v1W9HdJ6CbbLa6F9qM7Bkm+ttlV+KvZe+EXq/
P0ptbi0ZYzsUGTZYZLxobWw8a7b+ywbVz/Rfl+l+3/N+dO1P7BvsT+7L2qfx
LMT+qth+vgwckbmiuqerfRfJHsmsl6OPb5C8g9LF4DGS/6D8CbHn8l8qLyq7
3BBbR9fO4vtmj2Jv0bWn2ct1r115Tuzv7MUqt8nxJGyjHqo/vGAbie+BNZK1
kfGfqvHeqP8wuGTMdI3yv1e9tp2p8irlv9B461e853xRMd62He+H/b2a728q
nyb5V5FtSGzHBkXrs0dKNlyynQLbetjHG0PbfOjHc1XnrdA60xC+BaWtS8aT
nlH/fyl1imzzbKH88sx2Nvb1MI1/uK7dCPbJniXZKUpHVHztC60lXSU/Sfm6
6n9Yrt+Ca4Nnj1Y/w1V3O+yK0Fj3pbzbgu3NZ8vGC1Zh76OzsZZgs5W8prSV
7Hb0J+UfwV7J58tVJWPKuyj/aWa9AX1huca7MvM+xP7Dfnuj2tcB51b5KtV/
QPJDKsYvdq14v8J2PqxkLK9hxdgQmN6o2Docutu1av+38u3Ux9GSTVWd38ve
g1iLPwcTqxoP/a3s8jiV7wOfAVtgv8vLT6i8VG1Gq789lVoxP1gPI9//iJKf
wVeqG6JL6FqTyHjFUN65+ipJ3k/503WvawrGAMHazlT5uoIxt/VRvgaUjP9d
rvx+6qOzynsFxgZbqjykZIzwdeUv1ju8k/cTWDfH9rkmx2sxdI7VmNrk+GRH
3r3ScSp/EBgb6Ia9XTBGcKJk7ZXaSf665H8knp/38r8Zl8rHS95W8mcl/1f3
/lDyb9TH/UX7A8apbiPVXa/+flZ+LXtwZIwJfH4i+JXafyJ579T65xlqd63G
8Bd4bWqsn/1qD/6P2i4JjR/vqfJHKn8Y2n/A/e9Wf1PU3x0q7yX5UsmXYcuG
1p3wx2wbWIc6SvlRFWOx90g+SfnJSoeB10XWfcDvm4fWgbZW/lbJ60t2p659
pnt9js7MHhvZlgGfOC60TYOeeaiu9S9Z37wFu1rXNhRtw4E1gL/WDIw57JnY
nj0V3AE8hH1bqXXJz3sM80H/6S/Vj1T/qtT7IX4RntEfFdsI2AaTVOdU5VdL
/qXadtK1Tip/pfLeqndiyXZeUvH3hb13f/4+8JUsVPsvlf9S9ZtU/I1sWbFN
jy1fR+Wtcnu9ZmQM53neNbqBZKfoWq3cfto6MgaNr2p02WPHZwX2gP9NVTZj
EMNjYwDY/oND69boq+zN6Nh/5fYDPsGvwCyU/wd9PPSe/ovaRuy5RdsPTbBF
1ddX7GVKO+h5Pa7/c76ut+AbiOxDwXfCer1cbe/KjEuBRw3R+1in8mll40Gs
m+wvrKWsnzugi2TGrM8I7E+ox3hLXgNq6X61wSB5t9g/FePjYIyHB8ajwajB
putI3jaz/c9/2lL3b6fftyTvVbTPCH2KZ8B/R4e4XPKD2YOxlVSulO0PWqh7
XxTa3/Ok0v7gWbr2beT1B6y0i+TtwfuVuhTt73hG//dNjfcbyQdIviq1Pv6u
+uhX9H6wpfINC/7eWV/RkdGNecfoL2erfIXKK9XfQLW/DQwcf5T6e1L5sZlx
UfDQ4fodq/pV9V1TdWYnxszByi8L7M/lP/FfqNOUvpWeL9in+JDqv6Hxfo1+
z3xH18uMAWJvvCb5h+rv1KL3916JfRxgV2D+E1WezxxR+97suSovk/x0yS+X
/L/Y9u/HRd/jG5WHqrxC99+K9Uj3OjOzz2Ag9ysbr/uRtVVtktg6Obo4/pmB
ys8rW9YOe69snxPPnndwocayWP09GBmToT/qNw2MAT6FPqx0K7YE+y/7f2Tc
Dbzt+Mz7I5gr+HgT5c/K7HO6Qm0uVf37VW4j+QWSPxTbltpXfT+Q60vHskYV
rJODF2Gbf6e2J/BOIuNH5Lfjm1L+XLW5XfmuavNe2RgV2BTfyxOx8Zdb1H5a
aD8f/ke+Rfx9l0rWL7au2j30OsU96Jv16qnUe/Ln/28vqbxC6eyi18zb1NeO
7P8l6xhfof+rvwtC++ROj21Lotu0Du0/QWdAVwAvuSu1DoLuUVvy85V/Wund
km1OfEvgme+V7GN6VvUX4Q9iT1X7z8vek9mLeQYD9P18ojo9iv4+7lZ+V/W3
hucVGl9cpTaji8b3TsrsHwRXBk9+n/U78xp5YuD1EAwX7JY1dnuVp6nOUcrP
DeyPxKbBlkn5PvLxn4uuH9h/dbnGMKlgzPZddCPJx6Iv8P+r3i/Zq3sHxoPA
b2opzyLL8wSzBKu8OvSzvbfse/GMweYPlPzskjH63rF96PjOO4BhMV6Vd2O/
U5cH6V5vZ/ab4i8taHz/A7OJ7GPaVuVfMu/BLbBp9Hub5Peq/9bYyOiUFft+
OwS2X/AX9ddYnwhsL+LjxLf5U2Aca5/YvkXwLPYv+qAtNt72ejaP6X49VGd/
9H/wIF2boro35/vDqMi2M2tqXXSRzByBJpJvwjaJ7RtK1OYHsESlrGD/0nD9
n681/mbYUXoeL6p8mfp4oOA5vwa7UWnnou2DDZHXRNZC1pyFGs9M3e9q3aON
6o9Q+2/U34Gq00b97a3rnyj/NXNH6T2+Nb6pyN8A/tYBsd91tWD/cht0FMkO
1LWa6Aqqf6Gu/6n2PTS26Zn9QviDMvZW1V9Rsv+ituR11eYdjW1vyQdiy8bm
trAmT0y9ZzD3WQN6xcY36qncnjVB+fPV98+hbQj2tuuUtg+9x52J7praF10D
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
5ar9+exPnKH9fzuLr0s=
              "]], Polygon3DBox[CompressedData["
1:eJwt1ntwVtUVxuEjlyR8iVCIKIiIgYAJSSBAgQABjCEgokhiBLnoIGhFa6HT
VtEq3mbUeiu1VgvtoFgiMLQMCnhB5aaDaCk3K4IgWIVSwFB1lIuDhT5rjn+8
8+312+9aa59z9tnnK5gyo256kyRJnqHmtDk3SSrzkuS57CRZRVVNk2SUeFIm
SZ43f3ZWklTkJMk+ugxv6/c8KmqWJE+0SJJc7IBCM6mc/xLxdnyOcQu5B9Vs
Jb4Sr5VXR++bOxe7Chsnvpa2YVP0vIH2G4+RO0Hu5TzLsdlnJUk/vv50BfaN
ddfo+VdxJY3hqVTzFDZDPNVFLsP6YSfCp1axa/ut+FG5T1p/Nd9kfcao94Xx
dH1/6fdXdJwuxY/IO5yd3ov75H1FS8wtptvVeE7tF9WYb30NfueJn9I3R+5u
4xtpp7XUifvKbS9+RO7D1COun/dW88P1WCL/qPUd4ptvvhBbq+4Anja8GfN/
k9+XPw8bhv2XZyLvamspE9fjN5uvxl+I+2/uavwxv49Td3M/FhfoM8q4hG83
XxL3QN8h6i/kW0t9sc58V/CV8u3hq8dOmWuQ8qzfP1I2lkWrsHXi9VQsvspa
psgdIvdZubvUn6feXca/5sno1VV8De8c8Vy6i/9icZ3cm4yr5D7FX4514L0M
K8K2YiOxUfGM9T2oVu94ZuJP+d40fxFfJX8nvkZzd/BV4oPpGN+3dASbKt7L
O5rvIrkz5Yzlv4aGYp/9sJ8O8Oyn7vL6853U82xxoblavi18l6s3y++9dJiq
+U7zDdDjNnMbsYG8t8ibRkOx+e7L8/SW8Tu89TxlegyW+724NV9RPHNxu1ij
Wpvwd/nbYhdg3bAPsK3Y79QaG++0Or/HH7WHsvnOwzqKN/Kt42vK1xrLxhZh
i70fBeL2vNvkbMGr6UZrmUoTraNO3N9cS7kteD+Rdwsdw7Kwtlgrnpexpept
wMoo11rO4Afs09PG5/K1E6/le81aSsQ99Ch2nW30mWuuBivFumEnsONULm6F
NzPfILfUXKF4k5ptjZvy3Gfuz66hE28e9lCcT9ga62jE3zH+Cf8ua2kQl8T6
jO/nu8dcqXo9M+m7kq/en7AirATrirXEnsHekHdI/tq4R+rtUKMj356cdE/E
3qgw1w37PCd9hvEsH8c6q/Wi3Fnx7mGtzX0mHqFmtTrF8U7HXpWbz3va/d3K
t4UGYa9jvd3fl8Tz6Ddyv8Z2Gx+L58bfhe8o1kTtb7GJ8ezFGfzTOCepRo23
4z2Qv978SvkDsS/1r+I7JP5Pdnqe/zT2RpwJfFvkbqY28s7HCrFt4n/w5WMd
sK7Y9vBhzfR4IC/Nidyd5vbxVWXSdzTe1Tewk+Jl+IPG/4r7bC0j5HWP/ea+
5MR5E2e+eDAVY0+q1x67QTyZ+hj3kTtW3Qni8VSOjVdzqPvy9zgf9Omr9nK+
BXG/9Fga76B6E3gb8U18NdEHK8QW8s3EDsrdbr5efKF6R3gO0194SuI72SzN
+1GcizwLm6c17pT7hdwPYx9TQeTyD8PP8DxNP3Ov/ikemEnP+Tjvl8W9xYar
WaVOkZylWCHWX499xmXqXcm/F6unBeqskPu6uS7ifvGuxvnNd2ecZfEtiHM3
K33f4r3bzXcO1hJ7qXn6zduFrc5N35V4Z1aa62Vto/HmxufILZO7juf9+D7y
dcBu5l3DU0HfxbXxPuZ62/t9W7w+vps56ffm3zwHaK5+S8Vr4r6K+1jLR8Z1
6t2hxwVYL2wbVovdjs3GhsS1iYepN1v/nuLz8R3qFfFupo7i3vgHxsW8I2PP
5aVnapyjnfBL6Wlxt9zYsM4S9aZhh13voUz6vMbGOSv/Wp5x1AXrJe7Je3/s
8Ux6Fjby/QKfrN4SrNBeWxy++PaJ76b3+Fa73un4x2q9wHtrfO/F96g3C7ub
BhgPiv8l1tTZmh/BKviuVmsUDVJrOP6dvJv4dvJtUKsl1tT8Aj3m8J/AjtPG
rHRvxB6ZFmck3//Ec+kPfN/wZOem5/cY9d7lbxSfoUlxXlMD/r34FL1q/Ba2
Qr2ZP5wRBVnpM45n/SXPWdj1xqtoUfzX0uNzWqXfSuwS/oy1XIztEd/rWo6a
2y93JNYk/lvJKzf3oThfvdysdL/Evvka+6pFumdj724w91HUz03P5TifV2CT
sIfjf454Slb6/a9Qq0bvfP3GxbOlfuJa3hyeduLe9svPxTNokZxX9KgyNyCu
N5P+992PXRffSPV7xLmI3Yb10OtCvpP4aPHyeJ5yu2I7Yt/o+0S8HzRCrVK5
e/nGq1Wr7/8BK+9scg==
              "]], 
             Polygon3DBox[{{2712, 3085, 1536, 1438, 1437, 1946}}]},
            Annotation[#, "Charting`Private`Tag$11034#1"]& ],
           Annotation[#, "Charting`Private`Tag$11068#1"]& ]],
         Lighting->{{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
       {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwl091rDXAcx/HvhplhWEQrxAUJK6J2YTfW2oVNS6EoaikPMbky/8AsJbWG
3Cq7kBuFi+XKFi0NO9s5e7QH29oWYlHU1Lx+rc7p935/ft/v7+l0dtRfP9GQ
FxEDvn35EYmfGzeAAeObwoj1ssO8A2/HR5dFdOIyXIsrjI9WRdSrKeA1/K3e
m7yQn+V3iyLey5plQ3qvyE6bm8W3Ur/8O27G3eqe8srVEeXLIx7KPsgm7dEu
L9HXJlvgXfwlXsTduBPfs1eP+gzfqLZX9on38N4V7sl7cR/O4hzO4hzux/3p
LQqcM2/pXbJ4GA/iQTyKc+qH+Fiqx8P4S6rHI3gq1ePPeBqPGsf1zuIxPIHn
8DiexF9xjbtOpDlnPu68u9wpk/rk1XwL7+CjvIoX8Rf8GX+n/5/3e8JHeKU3
qFDzIN2Fl/ND/DZ/5V0zsr28kd/nbbzFGjPWuCx7zJvSffgZ3sVL1X/kx3gr
P2/+CG7Brc5Sxxedfb/slOyOrEr2V7ZNdtI+dfKDsp+ydbIbxgP8h/Ga9yqW
lfHf9lqLG+T7ePPKiHnZGtlV2R6Z5aLJerXebzf/lt5E1mn+D7d9NOprl+/k
c0bHj3nZazW/ZJfsSWMrnjZ/kVsuLpgvlS2YnMHi2Jx+OzW2jHpZtcJNsins
E1W8JP3uavLTf0DvORPFeUv/rf/w333n
         "]]}, {}, {}, 
       {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwV0L8rxHEcx/H3De5uUGc5ynZuuo3R3aRMNodFXXIlG5t/gEXUKcWOlFJ0
+QOw2fyIwSmxkJjIj/Lr8R2ePd+v1/v9WT6F+mx1JhURE5hui5jPRHxjAY/p
iBcez0Y881V7xJNuyfyHZYzKZ9ywG3B3ah7TNTglr/BkcmN/Yx7UtXgbvfp9
uY9v5bQ5iwxW3f/o3/Q1+ZV/5TXukNd5Ub7nIfmOd3DiXV7uQidyug+849pu
l8veNe0qXNft6TbMeW7Km8neXHBTRA+65ZbdF0/Jn3yAI7db+qL52Fyx68eD
rsyH/nTOPGyuYiT5S/ncbcmbC77EP7c0OSw=
         "]], Line3DBox[CompressedData["
1:eJwNzj1LQgEYhuG3ISvoB7gKzhHSIqRTk0OCS0tLDhEo9iHUYAltNfpBQ9CW
jk5uZlK2RVMl+R+cGpu6hpvnee/nnMNJlY9LtaWIKOJoOeJkJeIUG6hjtB5x
JheJiHN5gU184cn2Kfds33KGsp5fjWjZcnLMZbgatrDGNfBrv5RZe4MPeSW7
/Lbe1JP2G9wiz91x+/YDdwVVDPh37l4++P9Hz+zoE66vpz3TRgcF/pUf8ofu
qey5d/k3fcw944+byD56ePHdlL3Cf+jXcuYuee9HzvEPUEYtxQ==
         "]], 
        Line3DBox[{297, 296, 2578, 508, 299, 2438, 321, 237, 2765, 851, 246, 
         806, 2732, 368, 535, 2596, 370, 545, 2600, 386, 2774, 860, 1330, 258,
          2745, 819, 420, 2749, 823, 436, 3178, 1458, 3184, 451, 1376, 3075, 
         1348, 1478, 3194, 1205, 1206, 2981, 483, 485}], 
        Line3DBox[{756, 755, 974, 973, 3289, 1777, 768, 1279, 3025, 904, 1629,
          660, 1844, 3261, 1583, 1960, 1590, 1652, 1591, 2016, 1666, 3221, 
         1797, 1667, 1798, 781, 1679, 921, 1804, 3249, 714, 1857, 1681, 3166, 
         1989, 1596, 1597, 3173, 1969, 1707, 1817, 1708, 1971, 1721, 1823, 
         3252, 1722, 1824, 1723, 3234, 1737, 1724, 1468, 2230, 3321, 2231, 
         1480, 3196, 2135, 2136, 2137, 3311, 1758, 1837, 1759, 1761}], 
        Line3DBox[CompressedData["
1:eJwVzj0vQ2EYgOFHGh8Jpq5SMfnqLzBaLJ1EN4nEUgsmTEztoBSDz8ZSHQxy
dopE0o0EK1PxByRYxODqcOV5n/u85+QMzS9PL3VExAyLnRGb3RFlPrsinsxH
nvsiauas9sOr84X2YtYpaL8k2oKZ6olYZY0/+wr9zutscOjehPeKetpe5Esr
mb36nj7g3NLK5hZpvarPaRn7NhUm9VN90HmHXaa0O/cSfcS+zwE5vanf6qPt
/+CIc23Ys3t9zH5Fg0setHHzjG/36maNG67J8qYfmyfkfefdOx/8A9tGMm8=

         "]], Line3DBox[CompressedData["
1:eJwV0L0rRXEcx/Gv5KkMJqMy3T/DLf+ADAbDpespT+dOTPduLFiEkEwo3Vsm
T5HJ7ZbCwmQwSK6SxaIUeZ3h3efzfX/P73c6pztf6E8aIiKHh6aITHPEPXpR
ao+44br0WxRaIg65RF7xndy5foY7Pms+5jvkKXeCR/5d1lGxa7N701f4I70H
e3yjXOJ25az9DLb5X9T4YfOO3bScwiq/xX/LirmMKq6xzH1hSF90ZkNuenZd
LvCfWNPn7SbkOIpcHTl9kh+To5jjXnCg7+MSF0i4Z2RbfZ+7B7k+50bkH/Lp
efsnVO0/zAN4Tf+r/EnfiRr+AcYeO5A=
         "]], 
        Line3DBox[{1492, 1576, 1741, 3198, 1482, 1567, 1602, 3188, 1470, 1559,
          3213, 1601, 1461, 1553, 1825, 3253, 1711, 1452, 1546, 3226, 1864, 
         1694, 1444, 1540, 3211, 1598, 1434, 3225, 1534, 1593, 1426, 3278, 
         1528, 1805, 1592, 3182, 1420, 1523, 1799, 3248, 1655, 1413, 1518, 
         1847, 3271, 1897, 1896, 1405, 1512, 1984, 1986, 1985, 1398, 1507, 
         1885, 3206, 1782, 1582, 1391, 1503, 3205, 1778, 1920, 1919, 1381, 
         3292, 1499, 1918, 1765, 1604, 1605}], 
        Line3DBox[{1493, 1577, 1832, 1743, 3199, 1483, 1568, 3189, 1471, 1560,
          3185, 1462, 1554, 1826, 3254, 1726, 1453, 1547, 3230, 1713, 1712, 
         1445, 3174, 1541, 1812, 1695, 1435, 3168, 1535, 1427, 3161, 1529, 
         1683, 1682, 2206, 3320, 2225, 2121, 2120, 2154, 1670, 2175, 2062, 
         1414, 2119, 2118, 2153, 1656, 2168, 2052, 1406, 1513, 1643, 1642, 
         1399, 1508, 3216, 1980, 1630, 1392, 1884, 3269, 1883, 1618, 1617, 
         1915, 1382, 3258, 1880, 1879, 1766, 1606, 1991, 1921, 1607}], 
        Line3DBox[{471, 469, 2968, 1197, 1145, 2948, 1146, 266, 2757, 830, 
         444, 2752, 825, 2751, 413, 558, 2610, 412, 926, 2815, 255, 1428, 
         3162, 378, 2598, 540, 358, 2592, 525, 343, 2590, 522, 241, 799, 2725,
          232, 840, 2761, 229, 281, 2422, 278, 279}], 
        Line3DBox[CompressedData["
1:eJwVzr8rxAEcxvEP5VznO5BS5ybyo6z+A+UfMJjkrrsBi+smNhMyUJQihQGj
BclqMhkMGIjF4Ax+5BYlXt/h3fN8nuf5/ugpV8dmmyKihNuWiKEMWiMukog7
/lrWS+fcl3yeb/AH2Yhzd6e7z34/veV79FieyKf5D9kULdgM0EH048gmY7Oj
79Id8ruyoFeyE5sznGJT/oMKX0a7fXf6TjzZ5umq/hslvoiszTY6+C26rHvH
pLvh/vOdtvRfPZ/QHBb0dazIhvXz/AtGdXXZo+cq8g3aLFunNf0zRtyvNjey
cZs1Gul/0Rn9A+71E7Iv2ZvNEv3FIj7xD0HgNbI=
         "]], 
        Line3DBox[CompressedData["
1:eJwVzi1LA1AUh/GzoFtwTRBssmgYDgYW8QNsOPCVRY0LTkTBiWFNk9Ggg8U5
i9U0gx9AGIjJIBNBRbGIweLvhodzzvM/nHtntprL25mI2MDjWMTseMRmNmIF
67mINXxNRNzLCrJP/Sp3Z542X+qv8Mv31Rt+kt/R19x44N/VN1zL8rJ5WZev
cDX9EnqyrKzDT/E9fZfLqOfyDi5wxr3a+VOb5kW7LxhhyJ/yPyjLFriqOkhv
qSf8d7qZ/sIdud02f6Rb+jJa6T5K9o/tlOzeYoBd/hkjviif4w7RQoPv809q
3VzEPvZwgH/0IjHn
         "]], 
        Line3DBox[{1496, 1580, 1835, 1754, 3202, 1488, 1572, 3192, 1476, 1563,
          3318, 2215, 1465, 1557, 1829, 3256, 1733, 1456, 1550, 3232, 1820, 
         1717, 1448, 1132, 3229, 1861, 928, 1440, 3276, 1128, 1154, 1072, 
         1431, 3279, 1532, 1809, 1675, 3183, 1423, 988, 1801, 780, 1417, 986, 
         1794, 3293, 1039, 1409, 1118, 1845, 1151, 1402, 981, 3208, 1784, 771,
          1395, 977, 3214, 1779, 767, 1387, 3242, 965, 1773, 746, 964}], 
        Line3DBox[CompressedData["
1:eJwVzCFPAmAYxPFHnUhgsxo0GGziYDApBj+ATGaCqgaDijAKI7hpYwSabo5g
k2mxEOwaMBkdm4Fp0rFZzP4It7v73/u8q/vVvdOZiNil9/mIdCJifSFixC9T
EW/YmtyUn+Vl+T4ZsUV17IE/4XVeo5Lbb/zFu5L+aFuUb7EV20DuY0d6Ul7C
7qY7doDNyj13N/g1NsQK+iZtY1f2oty1/VFHb9OJd239l+a8O8eOsQv9h2r6
GbXkvPsvW47nvD3EP3jDlsU+bRlewcvTf/ANfYyn+QTboVc3QyrK/+GUKoI=

         "]], Line3DBox[CompressedData["
1:eJwVzj0vg3EUhvFjKB2kFh+AbyExGCwt6VAShg5e0sRCDRjaqTqoEWETKlYv
CZOJbiQGEonNKl2UyfAs/T3Dlfvc1zn/PM/46uZcdSAiFvAxGPGO0lDEm2wM
R7xmIm6yEbe4RsJ15BPO3T3gDH98ldtId94WuUvu0Vzh7mVHL/B35kPuAGNY
4y+4abu2PPXNFW7bbgs7KOsndjk3x7LF7eGLH5X73KRdS+7qDYygrk/wR+5q
5jpXQyb9Vz3BevptfVleufuXS3jxbopf5Gb1eczgl++ha/60+zGX3RX0b+Tx
zDWRoA+Y/zPF
         "]], 
        Line3DBox[{1760, 1757, 1876, 1756, 3204, 1490, 1574, 3195, 1479, 1565,
          3187, 1467, 1736, 1830, 3238, 1735, 1459, 1720, 3251, 1822, 1719, 
         1450, 3177, 1706, 1862, 1705, 1442, 3172, 1949, 1968, 1948, 2077, 
         1965, 3165, 1689, 1810, 1688, 3283, 2021, 1678, 1802, 1677, 2179, 
         2178, 2066, 1665, 1796, 1664, 1411, 1651, 1846, 1650, 1959, 1638, 
         1785, 1637, 1954, 2008, 3160, 1627, 1780, 1626, 2007, 1952, 1996, 
         1615, 1775, 1614, 1997, 1927, 1928}]}, 
       {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzzczBHEcxvG/yt7tHRekVho5VhqV1J9QYrQMDUrxDcgVekbo6YxSoeLO
SOOV+GzxnSf9dne2eWmttFoVQljBUxTCcprHeiqEeXqIKBPCM6I4hLL8gQo2
3BzRFv2nvUNOy1vYxgRG9A/otN24SyGNTfnY3sp38TGf5d/djiMjx3K37ZaO
6d6Sns/aFnCCHvskfbTt0F3UJCTf0pVxx9cil6htEVf6Xs9O8Xs4wD5yyLu7
tvfZC8m/6b5wjj99Sddvy8tF/h51KMinaOMH7PX0W36pDuGCNsgzGLRN00ZU
vK8ped5+hnZ+yF7kR22v+OEv8Ys5+7B9lv4DncUvMQ==
         "]], 
        Line3DBox[CompressedData["
1:eJwV0LkyQwEUxvGjI7R2DR6Bh0BphoROgg6lfXclFDwC0noFnTFGZylVxBL7
9gJ+t/jP/zvfOfdm6czPDE7XREQBp7URU5mIobqILR5DHtWGiGXdnXyPYfmc
M/oEjXKCFX0fn+kKPI5VXYWzfME9vIZifUSXuyxu9Q94xLrdvu5JnpWfeQKT
6MeJ3RvP2ZW8oyq/pOg3dK/yPB+kn2mfQ8VuwLyQ/i606vZ0bdykf8em/jD9
HvoR/SgS3SK20W7uQLObD3S7y+FI/sSl3Vf6PBfdX/O3+YqXzDvoRYvu2HM/
XDKX+Rc37v7S/4B39f9tQD3X
         "]], Line3DBox[CompressedData["
1:eJwVzD0yQ3EYhfFXI0g24COMJjtQpNGb0CgMEkEQHasQH0kkwQ6IYFiCzhgj
UliERo3a7xbPnHOe997/bOVw+WAoIlbwMhLxOhZxlI5YHY2o48bupiKu5RvW
uCb29VomIo9xvcGl9Tbe7XW7K4veKmFCf3Q750/tM9TRsuf5TxT1W99t8GW0
7Q5fS97Q+24/+MU33+H+ku9lT2767phfQMEu8x8yy59w03LSnpEXbnf6F79l
b2MxeYMfyDk5JavDEfey4r6DJf05+cf9Qd/l9pDVn/hLPmc30MSV/Q+3+C+S

         "]], 
        Line3DBox[{845, 239, 1641, 337, 240, 1984, 847, 340, 1643, 341, 241, 
         521, 1787, 342, 1354, 2224, 242, 344, 1646, 243, 3209, 2245, 244, 
         1647, 345, 245, 1845, 600, 346, 1649, 347, 246, 601, 1846, 348, 349, 
         1652, 247, 523, 1788, 350, 1249, 351}], Line3DBox[CompressedData["
1:eJwV0Dsvg2EYxvHbQtHPIJFIHOu4+QJmNqOSWKRWo8nYJqQtiTNBtFHRj4DW
2eQcX8LC6Nfhn//9XtdzP8n7dKYXpzJNETGN50TEWHtEDdXWiC++4EIyYhJP
+pzsXPbXFlHhvPxRXjYvN0c8mEvmsv6U7313ObOAYbsnshEexRC+5ceykvNH
fOd8RXZo7tcf8AAP4kye4mvsyz95jz/4R3drN2velf26b4fX5BPok/fiCtvy
d97iVd2b+cbuip11WQcXucg9um5cYsn/vfKm7oXrdsbt1zHXeCfMoiafb4lI
N94HM8i4a4P/AVdCOJU=
         "]], 
        Line3DBox[{2264, 1060, 1302, 1301, 3315, 2263, 2481, 2597, 781, 1058, 
         1057, 1300, 2179, 1299, 2262, 2478, 2596, 2477, 2261, 3109, 3181, 
         2868, 1054, 1055, 780, 2595, 2473, 2260, 3262, 1182, 2809, 1051, 
         1052, 2065, 779, 2594, 2469, 3220, 2259, 709, 2593, 778, 2064, 1050, 
         1049, 1298, 2177, 1297, 2258, 708, 2592, 777, 1047, 1046, 2175, 1296,
          1295, 2257, 3248, 2459, 2591, 2458, 2256, 3223, 773, 914, 668, 
         710}], Line3DBox[CompressedData["
1:eJwVzDtLAmAUxvHjEHT7EDaVqbl1v2jQ0qK5VVoQFLkU+VkM+hZ5o5BImhty
MQNp7kM0+XP483/Oc877Ll3dl+8SEVHCeDbiYT6ijre5iCY/LUasy8/yNQ/5
S7chr8rvfGre5D5ecGbe4rT9inyO4ULEL7b1Gf2RboykrmW+4R27opzSV9DU
dfA/ZSaiO71FG7cY4M/drncl7175mwe6PTkrf3Cbj3Wf2DefmHs84gNe47Rd
FR255t+8viwv6y7wIxd0Oc6YL1Fw18Ch/pEnN5sr8Q==
         "]], 
        Line3DBox[CompressedData["
1:eJwVzjlKg2EQBuCxcssVLGzi0ht3Y5lGiwja5wD5vYVRE3A5h4JgQERIYWXj
WolmcYtHUNzw+YuHb+ad+WCGS0mx3BMRa7z3ReQHIxZZoE0nE7FC1+y0P2Js
IKLKkWzb+ybfs7fPn/5OPs6r/MT+qGyLTV5ku/aWvL/6hvmzOms/YURWYYOn
9BbZLT/6Q2b9nUlvMmvL59TzTNOikuZ82f3mgJz8wm6BltmkfooJimlGU900
q7sn68+x91HflX/waWeVHfWZ2YPZkL7Mlf0brrmXn/dGXKqXWSehxj+dlznG

         "]], 
        Line3DBox[{2280, 2770, 2771, 2498, 2664, 3084, 3270, 2497, 2675, 2676,
          2499, 3225, 2371, 2281, 3168, 2372, 2282, 2406, 2815, 2373, 2283, 
         3152, 3169, 2374, 3064, 3102, 3170, 2741, 2922, 2375, 2740, 3275, 
         2712, 3085, 3272, 3065, 2919, 1537, 3042, 2407, 2743, 2923, 3276, 
         2376, 2742, 2713, 3171, 2377, 3043, 3069, 3070, 2745, 2924, 2378, 
         2744, 3131, 3172, 2379, 2284, 3103, 3173, 2746, 2925, 2380, 2643, 
         1692, 2882, 2997, 2381, 2998}], 
        Line3DBox[{2285, 2677, 2408, 2501, 3086, 3210, 2500, 2409, 2608, 3087,
          3211, 2286, 2503, 3174, 2382, 2609, 2504, 2610, 2383, 2644, 3117, 
         3175, 2884, 2384, 2611, 3250, 2506, 2747, 2926, 2927, 2645, 3263, 
         2507, 2885, 3088, 3227, 2612, 2508, 2819, 3089, 3228, 2613, 2509, 
         2748, 2928, 3229, 2929, 2646, 2510, 3176, 2385, 2614, 2511, 2749, 
         2930, 2931, 2647, 3118, 3177, 2386, 2615, 1708, 2750, 2932, 2933, 
         2648, 3264, 2512, 2886, 2999, 3015, 3000, 2616}], 
        Line3DBox[CompressedData["
1:eJwVzjtOAkAUheFrIvGBm3AbdlLZmRhXYItRKpdhqb2IrAAwFoQQOzuVGhIf
4JOHIqAUflOcnPOfO3Nn1vcOdw4WImKb5ssRW9mIG5qtRHT4lJfXInbpz7yD
c6sRbX6m+9VN5B+6wDM8lgvyN5/iU3ve8Bdekkd8or/UDeVBuo9zuEV9fO2N
Tz7W13Q99z5wnb/zUtpvlkm7cdP5V36e3tF39S/4ivd4UT/SL+Iubjj/zIe6
qtmT/Jj+giv4Tt5w5pb3dZu6e9rHJ3bk+bH5ET3I/+A4QOU=
         "]], 
        Line3DBox[{2314, 2891, 3022, 2557, 2890, 2556, 2234, 2313, 3068, 3067,
          3321, 2312, 3187, 3095, 2311, 3058, 3075, 3057, 3076, 2310, 3059, 
         3148, 3186, 2946, 2945, 2309, 3318, 3055, 3073, 3054, 3074, 2308, 
         3319, 3056, 2943, 2944, 2942, 2307, 3317, 3052, 3071, 3051, 3072, 
         3322, 2306, 3053, 2940, 2941, 2939, 3303, 2305, 2715, 3020, 3313, 
         3132, 3021, 2304, 2889, 2418, 2757, 2417, 2303, 3185, 3094, 2302, 
         3213, 2416, 2415, 2301, 3277, 2414, 2530, 2413, 2679, 2555}], 
        Line3DBox[{2328, 2893, 2894, 2892, 3050, 3049, 3316, 2327, 2984, 3196,
          3151, 2326, 3195, 3100, 2325, 2980, 3194, 2979, 2324, 3193, 3099, 
         2323, 3192, 3098, 2322, 3309, 2976, 2975, 2321, 3191, 3097, 3179, 
         2320, 2971, 3190, 3149, 2319, 3060, 3077, 3323, 3079, 3078, 2318, 
         3061, 3062, 2948, 2947, 2317, 3189, 3096, 2316, 3104, 3188, 2419, 
         2315, 3240, 2682, 2683, 2554, 2681, 2680, 2559}], 
        Line3DBox[{2342, 2896, 2897, 2895, 3041, 3297, 3157, 2341, 2986, 2987,
          2985, 3311, 3127, 2340, 2569, 3204, 3126, 2339, 2982, 2983, 2981, 
         2568, 2338, 3125, 3203, 2567, 2337, 3124, 3202, 2566, 2336, 3150, 
         3310, 2978, 2977, 2565, 2335, 3257, 2564, 3201, 3123, 2334, 2973, 
         2974, 2972, 3308, 3122, 2333, 2563, 3200, 3121, 2332, 2969, 2970, 
         2968, 2562, 2331, 3120, 3199, 2561, 2330, 3119, 3198, 2628, 2560, 
         2329, 3105, 3197, 2558, 2685, 2684, 2703}], Line3DBox[CompressedData["
1:eJwVzjtOQlEYReEfChPByscAGIZBFEOihR3QKNrYcQvtFByDI6AAHQM2Bo0C
iRE6ExUVNHEGDsGPYuXsvfa5Jzd3fFo+SUVEGaVMxCAbMUYfu/hdjBguRRzZ
EtSxjR/+hi/KVfkbXX1Lr8iJPHNu6tfyGha8N+UK3JW+ii/9UN+TO7hwZ6h/
8jl5Q/7jH+URHnCPD/uAr9mbemP+z/KEn/I7yOt3/DN6uMW7vW87sJ3rZ/M3
5RH/hrZtBa/yPt+Sl7EuP3EvKOqXCN+mkHBpZ8udkvMfp4Ewrg==
         "]]}}},
     VertexNormals->CompressedData["
1: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
ODyiKWCVifE6X52GWwiwe7HzbcFsGzQ9r+a9erQDJBlKRbP/+x1GpPSvmXot
OrouTK4FtaGoodxhV7KfXmr6uXuLcgVQjaWvSsZ1QJV6XnYODxXENBnruJfj
8GSlbefaxjYcqWXhoSH5nFf6XtPOnBoMorTMtreOo+fbuzxzZ+dg5fjHLZGb
vDFyNUp13v4jBJXFAzPJJ9dN11/+eFOLTOP9E6aqw9jxZKGmy2sBhN+qxZuY
RKChxW8HOit/4OKtyBNaI0D/RFCz1GoF+iW7zEVMFsM/90ppXzKewMbM+/Dr
PdAoG35w/FYt0MjQ7jN8SoC7ut0id1Y+XI1rYxmyjcCY5qKrrl3/3Ude4cg8
mIIhwrbWZhVd4Hz9tmMvExUadeljih0SSd/CpiDIXYcMmnzPNO+SfNJwY3Hm
ei48XJrcVejbjuz7es1qX1Kh4vDrs6e+x8JlZQZFj13RKDU37mBO8s+5YP0k
194uPCSqtbmiNwEp0vdiRhipMMdA6/K+pw64z76NcnMuxAb2JC+t4wSYCRTq
vJ5vxRJqW+2aRg4MBGnb8SMVxr5YPRlSrcPiD5r9+TMdmJ2RfyGokQKWGrPx
Hz3KIIfu3y3N/Aa47WEduvsXFQKyb8t4GrSivevIclBTIeYds3zFX0YFifbB
KRvSD6SpOK8Jm3Wj4Ej/2+a/iyCx0zoj7GsOWNseflc20QvJTe+1DG9SoKRT
qZrOLQMz5rJcFLy7UMvM4r0HCxVmWLJ2zOyNgjaBtNn12wjTm06auRQTMOmz
bpgREggO1U9Ctt71BmLZVaGG3N8ftCcec35OwCOtPuNpN7Jg+Ah/mxzZT1+r
xxY8iCqH6m+PBDY8z0Kb8lCmiWACDlFyne9IIp58eLXIYU8InLYyv3mljIBL
TAbBqF8BJgUd55gS4nCyIFdbNpKAJuT2ti6oRGENl78/bVJh5xExLSsvAvyi
jxkK9JdBib/dmdW4HDAR3PJo20cC3sY3/raYDAa1lbyVeRoPdD2etdmLnKf9
jsbGqL/OSKxseRmVVQMb3nQoV9sTwDowcFi30xd5A468dbrUjHCE7TDNDrKO
rrIMt/V2gqdegafZzkJIa7xlsIODCgcZGfYNnanFLex8ev3R9vgzYvupj88I
cF2UvSme14V0KWnUS+4luMuV/WM9yZ8PzKtdUiTrUNmsjPdsdidyeYimqiVR
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
/gfUmlab
      "]], {}}, {}},
  Axes->True,
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->NCache[{2, 2, GoldenRatio^(-1)}, {2, 2, 0.6180339887498948}],
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-19.94717866662527, 
   19.999998578566327`}, {-19.951671363874908`, 
   19.999898671146745`}, {-1.412656248224331, 1.414147203926607}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.8450254551643248`*^9, 3.845025474061051*^9}, 
   3.845025558018651*^9, 3.845027631200191*^9, 3.84502936362598*^9, 
   3.845029589783373*^9, {3.845029730701229*^9, 3.845029740581854*^9}, 
   3.856292484455968*^9},
 CellLabel->"Out[103]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJycvQd8VHXWPj6/hEB6770BAaS4NqRI76H33kPvvYfem9QgHaQ3R1ARFUWl
aOwVG7ZZ13fZ6vrurrvr+Z/nnO+9c28YXN9/Pp87SSaT277nOec59XYcOn30
yAlDp48ZPjS3zdShk0ePGT4tt/WkqfxW8P/zeP7faN5Scj2V+GfyeO54GePx
/Nqfv5PX4Ah++X8e87VQv32pfzpp/uNH/BYkryGp/LKFt095+4q3R+78t1r8
8g1vbeXf5L2QPvzyLH7grRlvHzr+7St5rVyDXz7jbZo5lw28TbX3EPwXfgmz
znO+fvtad57CL6/xVsrbbt5G+w8cjKvMqvBvcp5B93isPeby9k/elvC2wHw0
mLe/81bF439Try+8E7+8gDPmrSFvN3lrytvbvMXyVsLbKxXvSjh2uMf8Ws5b
R3OgNbz9zlz6/f7/0ksLDvI4voICvBcpr5VyR40ata+kpOTWyJEjh4wYMWKi
/vUH/Q/8tZT/cpk3TyXiz+l79l7G6bc/y2sY/oSdWDvE96bDhw/Hd7wvOwjC
zpJ0/y4Z6qnf/iivIdahb5kNP4sUeILkx+DL5ozl4xG6vwCCVxmHwj2sKHzm
cL+X18rWqV92HA6nXsVxRHwGlyB3wBzRJbPBeuoBZdYc7nv31ZHj1nvC9W/W
HcQv9s0P0cNBQt80mydIXkPamPvnwoGudWULC9aXBYYe+utv5TXUuczOiyez
fnpilZ0nhq/L5mOV9Nwgwrlm8wTJa1iE49hOtOHrFxHXXb99418dS5CcgqU3
PBg/yl3yeCysV6l4sq7Fk88okOXacLIAMlYbOAoEZnPLVOkEFs8q+k+Xrd/l
5gY4RXPB9uL6PxcRSEfgq6nnTj1hydQX/pvkFGHrJiXq/l1ngD2a+2ktsp5A
SEB1oydcqaLKMcf/zH98p0xb4pGsV2stgNyZoFuiUfCzc2F07dyKKjjAe+bA
enPCAmHX0lKWGIv08W7ws3VjrF271sEIzEd6N5zq0dJiFhZdijDJv3v7PYML
6z7Ib+b2v+++ZbcqnHnO3fdmX5Bjb2f0Ty5tmus/SRsKQarB7ZNxfO6W455Z
F+i6L6pnPcflNfQBfrlu9hBIuWbrxypen6WvrVuSH+DglQPcteGugz/oOHgg
XZvhv7mBVHqw/87YKM0LcNDKAW6460RCnCdia9pAtEOFL7A01QxwaF2AStYV
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
tqcrz5kcWiTBONQLnuofTmvbsiVqXpmKH8oXGo0Y8ugHlEoD3AvaJtCFoRH0
HYJncES0bvByz549dSakp5JVgmThz2DYpF9dpYLGw91nFTHhq46fU9vo1V7U
WOvhd5crAN5+GIx4vuwUfDgjmnZ2YZ+lcWUa8mCE+Oxih0fcFyJoDjJoBpLH
sJ5CvrbLg5nSMAO3F6FdVEDt7RVu8+m/rYpX6WJH58t1KRKqeXJwtBhj+Iil
vavps2/4BH7Pevj0oAhaxS4vOgLA08GnpXwDQGZf29NAqPzdwAxaPceAeWnb
MBm13ORBLcBe3jlJsjsY448ON6RdMaUSdYGYqiCzTOCOoqz4ogEyBP65DCrf
mC3FRPIwPzbrB/uEi2R2blzDHhaBKBf2/Zwx9SjuRz0UqDrmpsCllmL+bcnu
6gszqUGiU14Tjr6QEYTqKE8dM0TcBMMwQPw0nliZIVgGI7fnBpUUKp6B64Nm
XOsetdoYzSqPH+XPSCUyxsytLlSrjFoqVBJ/ZmMZUCb6Hf/9O/Ozqf4D1Ua7
Nqyjd0+RG8zvuqr+tEQeDba5kj4tm1NNOC4MMyK4qLvAVHDkhFDch0IijCkB
ng/10rL4Py6N07gaChQNnjFy2W50MzoDT78TZ97U9Zb0vIfOlyTT2/MTtbhw
Nx5wcDIZwatTCL8kK7VmWl1epvQb8vc79orPs1e8rp3CeZCh1Ts6VpHAFah1
v/rJ1Ll+Ph3qraXAeIwMSkFuP1Uoj/8FpANxa023eszDhV1xrbp+7Nrvm97W
u2FXVUC45ICQzZds+072ScZHSeIWJb/iGt9XHcCtRMPvCxGKDVt8v3rFAx6M
E3QBOrOkf6aK2E8nlf7d4jiNuLDSguMBxB4fmEhH+0RJ1QASiuUL0/X5cXx8
zIs4wOi3qjrQw9MOVR2ofERBR0M7lo1ck43ku5BrEOt5raOlOhiXivFIaIRD
Kw1QhrFIqDoEwjCV6Cf0qINMo0jikkEwk0/f45ky5RHmdkFxusTl1nSKob7m
gVN4OiFyW/v76tMIzwzVVp3LGHTGWuItPBFnLiN5kcas74rk0+nqo7H5pfPi
dl5Add2FDE9VxbDXj2FJGKN8k3GKBxFh5ldpLx3djRlEvtWp6j3DPjMPKhtX
Vao3hKkyrsvXmupgjFx4Kk+Z9SdmJOU3wG2hYvj7Qj+WgW1TIFjurYqZR23v
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
YCe7N9Mm3jAJOsRsmBHNtLCM8gVeFmg44SWE/f1iudZtUMTEyuUvFkaZ16ZG
sBbxUlk4CS3Yp3r/uCT2MQBQdorEaKBJCu/OfobYYvgJNCtRVMbzAah9xHB0
ahboqzjRRolEGQhGptsoA3MHWLm1SfIhDNU8OjHa/LhBB3ZJZ+zTwJwcnW7O
i5s+OMjLKKNqZryEAIWKuRFaIoFUibzDV5YmmcW9s4l7BprN46x7qRHCqpxk
ZbOcYAf11KWddcyvT+sic9+4aNIQQEr+YVOi8vvBLXrISsFBTvX9PN05J8kH
SoSo0XMXt9iuER2KzOh2eUw68PxI1zd2j2JU8JfVsazvY7QcszbQe6qqLAzs
VsSUmx0H51tum5ssJUrQ79+WTDanI0+7cVCOcmu6az2/243aFsF+U7a5xKU+
MylK3fldPupIYpceIgyi/aU8nZwVq1G5pcAl8304N8p8IK7+zxti2VsoH0yr
sZVWw3HxEm74d/m0TGGR+oAgdUcvbRrCJ8B2Y+oNvYUZlgAw6Va9mkhWMPlG
hMq1xi71rUNyxGpEu1YD0uhvWatxaZJajTOjksxv62LM7xti1HLgLHI9wSTG
lXE2Y1wYF0UeHM7iWI3xzasr906uKazGgJszCA9IGiJCQ4/mxJAIyvkjNZdI
ENyAYM1x10JkhiLYlaiwKLeFxT7yv6c9yjRoJY8r8mjv+U9tm7A/Nh820HFa
JUxA4gJPfr3+iPKUGz9TWlqqoSAWvwjkf5DX5a050cxT2Oe37F+Ux7s1TXdN
B5yPYzqwygAcvmcn67wxJhxxzz9d4jVXZkcygq6aEmEeGRur3DKJNWg2Rueq
dP5eTVjRBuWdftBuZtvjZSnt8AA1HQhBEW/c4uZMiDn6mpHNI/l+oS+D83BB
pp033CIZAqScP1wcR00YtAsRZ+wammMuSfyzsU+KWdUny6wvySa/CtiB4+Vr
8qQOsMBjYaUSwt61vbyu7WjbXEMxpzcUnKk4Jc5praM43LChl/7up8d4ST/+
cnWCEh0Qa4Bu/GRQ0eIzbXly0xtY8xL37J6QZz4Su1B1LN9UzKhDPSqadjGj
SJA39ozmbGTVsgwVW4MO1ReBiVr/C/Kz1mgRBK0B6J2jrAg1jXhJ+PxrE82q
AYXMGlRlqoAcD8RHS7p4ee+HtNC8dX23KDNW4juoTuHvIFWU9Wig2jzYR/ms
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\
\>", "ImageResolution" -> \
72.],ExpressionUUID->"f796306a-c777-4b05-8421-0c97876f252e"],

Cell[BoxData[
 RowBox[{"Plot3D", "[", " ", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", 
         RowBox[{"T", ",", "z"}], "]"}], " ", "/.", " ", "psiSolution1"}], 
       " ", "/.", " ", 
       RowBox[{"A", "->", " ", "1"}]}], " ", "/.", " ", 
      RowBox[{"B", "->", " ", "1"}]}], " ", "/.", " ", 
     RowBox[{"k", "->", " ", "1"}]}], "]"}], "  ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0.1", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"T", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.845025507011627*^9, 3.845025527977601*^9}, 
   3.845025558019127*^9, 3.845027631200437*^9, {3.845029366085943*^9, 
   3.8450293682617283`*^9}, 3.845029589783783*^9, {3.845029743635685*^9, 
   3.8450297440667973`*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"3de07b4e-7348-4460-a5d5-f70b9a4f3cb5"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxFnHXcFsXXxu+N2V0VxQJRQmlEMRATpUXAAFGUMEBAFFBEbFEpAwNRLBRQ
7Mbu7sbELhC7ExTxvb5c835+f8xzzs59drZmTl7zND1kXP8j01qt9mSo1TLR
5XmttiCp1Z4Sva6s1Q5S31n67WnxB4ifIv4KCV4hPhedozZXfBD9vDD/vGQu
0fHF4v/T4Hvr+ALRvqJni3LBHcUfoLaZZOrovAPFtxO/lvg3dO1tdQ/bifYR
/Vr9jdUa6rxeOm4ofobGP0f0T/U9GHzdHXXuxeq/SPxK9d8s/lbx64veoXa3
+Eai19LEryl6k9ot4tcTvUvPeJP4tzTehMLyH4sfL/4u8R+Jv0Zy13DPog/r
/m7Q/Twk+qh+u1r9O0n2Iv02S/y/uof54ueLX1306swya4juoXO+Eb9I/Fid
c7P4tzXGNxqvr9q3Ov5JdKDaz+IH6bdGooVk19a4XdW/mdrLGmdr0fai+0tm
PZ5d9Bf1DVb7RcdbSP5O8U9LprPoEt6JWiW5XXTcSf1rSaaj+B3Vhqi/mX5f
Tdd6RMc7qK2l41T9j4l/ne8j+YfFd1B7ScdbiW4tepdoa7XA/JDM3eLbqP2k
3/YV3Vd0V7Uv9fsbeva3xf/IexbfRvI/iW+r1l8D7Cf5Afq9NXNIfEv6dfy9
6IeS7yF+qfjXxZeSuVcybdX20LmH6Hgr0YFqDbh3Pcvu6uuu37dQW039X6j/
NZ37hI6/E99C7Xwdnyv6l2QP0jkHiz9bslfpWqXkEtFb9Vtr9f8o/irNmVd1
zgeiF0p+58RzeCfJ1Ev9fnfOPX8XivYq3XeQ6Falv+NZkh9R+t7OFv+w+C0l
+2Hp99Qj8TNsoftYR2PmwffbLfE9M2e6qDUX/53O6yT+ZsmdUbhvddHz1Now
90T76reektlQx31yr8F39Ay3pZbhW8zXtd8S/Vi0Zel1t7vo7pLfXDK7iK5b
eq5erDF/1vFe4u+Ic/5OyWwourZk9lT/LMn8qr49Eq9z5ufuicf6OrEMc+4l
3rXoF5K/UucvEL+B6Dy128XXZ80Gf6MtJTNMbZT4S9T3hPih4s8Rf7TkhjE3
dD9zdW8zNf4c0U/UcvEr9PuThWXOZb6IP0z8ZeKvlczqkilFT5TcGPW/r3Fe
kMzh4mdL5m39XqkdqeN5Oj5VtJV+P1ny49AVkn9Jzz5S/IX6/WC1ndEzkpkv
for4NuInSf4Y8Ysl/47GW1PteB2fnnnMb9V/reTPFN9O8jcG670txE+TzCl8
f8nczlzUubeKnq3+M9T/K+s+WA9vK/npma/7k/pvQyej29HlOq+O2nE6XhCs
u7aR/B3BurSD+NMkN0H856n1Uu/E82aIrncAukb0DskdI3psVasdKn4y80r0
ztJjMvbt4qeJv0b8dbmftw7nln4unu99nlN952qc11hX6r9d/Yerf6b4W8U/
k1uvtBM9TP3nM29FmwXrnGfVf7zoSvXvo3a8jg/V8WGik/Us09X3m57lg8L8
dTpvlPizxd8g/sLM87ASfUTnXKtz7xVdXLj/EWyXzv9P/L5qI/mWolfxXnXO
leJL0csz6/Z1RGdnti9rY7vULhOP0f2wMH+3zj2Pc9BX/K52o/i6opeq3YB9
FG0RrOue1/2M1vFw9b+JHSyt/7ED3XXcXDKbqPXU+Asld6je5986Hqn2l+S6
BOufrhrndZ37LDpNfZ1z25Yto35jXWITDtbxH6xXjTVKvy8Tv6vaaF3rcHSK
+IMk87vol5IZpNZJ/AOp5wj8UI1zoPjfxHdWuw87Ktqc96z2lPjNRO/TdR/j
WpLfS+c/kNjO7apnaar+pvr91MJ6ER0/Ufy6rBfR7vptA/Sm6Mk63lj8YMlM
Ft9R93eG3sOjpe0pdvVE9T+J7hR/UuF7+F78q5LdHvsn+kpuW7et6NeSeVMy
/0imW2p/qanaefrtBNFTmHv6rZ9knuEegufIU/g5uZ/9Cz3jH5Idlvh98V63
UTtEsr/n/kYjRYdjY9U/XP1/5n7vh4sO0Fi/4evoWf5DD6n9Lbmf1ddF9DDJ
j0YWm84akHxX0cPVfwPvSPwY8cMy9z+s5+gQ/E2/Y56iV3WdozX+/uJ/V99M
8YPE95bMeMmehn7U+KeK3qL+Xuo/Sv0PY2vFTxA/RHwf8UeLf1z83uJPEP+c
+MHiJ4s/UmMPRPfrHu7R+3oAfcg60rhnavyZovdIvr/6T2Rt6vhk9U8WfVD9
+6v/VHwz8Qeo7yjd57/6fazacr5Tzbp3JPpHMkdLZpxkmqC3JXO6jqeo1cT/
qXuZLDoeP0hd04LpI+hA9R2T2A8eldk3fk33vHHq9zBAx5M0zhi+h+hZie9z
hPpn6fgU8dNEj8hssxbpvLN1fJz6T0SPZfY3Fqr/BPEniV8q/jhsq/hjdS/z
0IuSv4y5gb1R/1z1z8CGiT9Yfc8U1tULRV/lecUXeq9jM9ujtzXmsep/UPyS
YPuHHcRmzta40zT+ubn9fp7xep07P7e9y0Q/VbtM/DW57S7PcotkLhJ/qPib
xF/BOpPM+VDWvPoPQH8Xtvlrik5Ra4KOFd0+tQ+6k85ZX+ecrv5fdHxmZp3/
t/jRklsvsS27XHTtxDr3hsxzZmP8bvWtkfiZsW3YuH907hfqOySuta90P48y
D9EZue3R9aLf4kOIv1/3/7DOXSh+e9GH1F4Tv53oe4Vt5Waiq2HreIcaf43c
9vNK5p9+20Ay40Qb5vaFNsK/yqzTWmG3M9vHH3Ru49zxRUNiFLXnxW8h+qDa
q+K3JY7JfM8tsQX4mIm//Vo6dyJ6krhK16uv/iNEH5DcK+rvIHq8jhth30Xv
1fFL6t9a9JvMumUf/HE9+yM1y6ynsW7Bh1RbkPmdtOHZg30wnuvD4Ofi+d4V
f1vN170zsx3ZXPQ5tY/Qw/huao+Lb83z4VdiO0Q/UdtUfB2N8ZX49uLXE79b
4rgAP/tF9X8qupvo/mrbi79H93gj3wZbIHodNkN8Y9Hr1e4X3wQfj/vG1vAc
au+K74SdUXsfG8j9YoPFdxf9Lfj9zNYcuEfHL4rfiu+m9g56hOdQWyR+F9E3
g230mMJxI/b9bp17F88vvp3o58H3c0xhvcZcvbe0vcHuPCB+qOT6YiPw9yS3
Qnx/0R/V35E5qf6p0lmzdHya5KeIf0Dv/jP0kviZ6p+o/oniz0V3YHfETxF/
nPhTxJ/BXMAf1zk/6P02LG2Pt6zZPo+VzHCNeb1+34trq6+RZMaof1i0RfMK
x6SNS9sk7Aj96PlEtLX620l+rq41rXRO4Hr8WvGXBq+RTdDTldf2CeofLH4i
fjD3o9/GS+Z8yQ6tvDaOLux7o/cCdlv9EzLrK3x49Eym/k7qv581L35b8beI
P7u0jUD31krbEfTtv4XjBXRdqv4jJT86t728vHCsyrMfgS+r/hvx0bBB8b0t
xZeMftRKnj/a339E94++0R9ZtImsL9ZltEdD1N8Dm6Jvugy7Ece5IHHcwfPf
XNh33Vd0eGb/4TnJtyrtc+6n/l1S2zZs7VjxTVLfw5v6rcAnEb2Cb62+ejrv
r8y2e0292xw9Jf5jnXO8nvFSHT+PXtVvJ6i/Gd9B/Seo/+7CMR6x3l6lYzni
tY3EHyeZiyXzLL6/+JPF30u8GTx+w8LfFj39PTGRjjOdu2FhXxNdcZHG+TlY
710i/lH9Nlr86epLsZfiLxedXTj2X08y4zXWRqmPv8MvTPycB+lae4o+kdrW
j1P/bYW/Ef7ATvrtkMwxwbOSeTmxvcaH+Dt+0x7xfeJT9Ynfj+/4g87bWddu
hR2u/E0Zk3f6g2T6ie8LzR2Xdwr28ehvH+cG/tt24h9N7TvjwzHvdhB/n/pG
6Hg/8S8Qu/GNa77/cehE8Y9jx4PvkbnxX2Ef44HC7x4f6X3mcWZ/4A2NMzKz
z/KK+GejT8jzQEdHfkXk8RUPDfbVr9aY/xT2hRaIXp06Z0DepoP41dW20W/3
J87/rIauxE9gTmqMtsTa4q+Q3Oa5c0Jzyf2p7RBtfbfSeZImoruK9lC7A18/
dU5nc/HTixiPSGaL3Lmr50R/LZyvwn/YKnW+aVMdb886F/1e/e3VF+I4O6r/
PuaJ+jeN99ZGfxYm1gn4QHsT74gfyNxOnTtrwbnEqvr9Oh23LR0XkIvrSayh
vk1EV+Z+H9uIbqiHrUN8SAyhVkfnXstaS507205yF4nOwtdjXeu4ZeIcbKXj
LcW3Y15r3Pr4mKKnpc7/8Az9UudxHkKOBG6M98bm1jHM1RWF/dW7RA/N7IO9
KrkLCudU8cHezhwHXa/+calzR+Ql2yfOPRFfXVS47wuN/QI2W3xP0fPV/1XN
+dsu8R5u13lL1A5OHIfsndmGkzP7PfZvzfilv/M3OndL/ZbG9/y33tsbzDH9
/pLO/Ux8L9HmpfN1vUUXZ/YhyUVtVjoXVpfYonCOiRzLlYXzpvVL56WIubZS
+zlx3om86PzCtIFk3s+cK+umMZvpXpqqLWbNZI6p5+CLFs6dkk9rnvq7cE+X
FM7XrlP6OkMTx7YHZ/bbn0zdT9zLPfwl+YMSr68NS+dpryocswyKOurHaEfQ
FdgI4sFt0Ymp86Lk6eoHy++f+7mwy+Rk9gw+Fx8J/U3M9Z7oCPUdm1hHYNOw
3YtELy2cX10bv7X0ONh59Cr2rpXkRgU/Ez7J3anv6w/81tT39Vtu36Gb+HdE
n07sF3CNFxJfm+s+lHpeEKfikxP/dq3ZvyD+vVO/D858rQfF/5rbbx8q+mZp
u4x9xjeEZ279EG0o9/FrtMWDcsfF8PhP+Lj4uh9ljo25h2s13oTEvhbf6ajE
3wX7ga9ETmk5vrDOPQ07kzrmmJ/Yni2McVZj0QuC47ynxb+m36ckzkXii80W
TTL7YuSXfk/tu80Rv0R0gdoM8Z+LrqF7uiZx/m2R6JWJ81P4d/NEi8y66vSo
r7jO1HitT1PHPeQtXy6ch9wI+xscm2IjyI0i+7yu82Lh/CW2mBw3seez6r9B
7R9dZ2npmG9GYrkxmZ/xLV1n69Kx80M69zG1PWq2EccEvz90TiKZSYlj5zal
Y3lyIHXEX5e4XpOLPzvxe7tP930e8508QO6832LRNhpz3dT1oHOjDiSH/5Ha
+uJvFf0wcdxCzHJQav6t+E55t7eJZhqnHvNR/MGpz/285tw2Opy60oGpr7UR
61f31iB1rml26vxSp6gfGsRjbNQqW1Vz3Dk78Tcg7zm55jiPHOfFifO6tyKo
Mb4nv144dmtROOc5N3GOd13ROYlj4M9Sz7FK57xReAz8uhty81/o96tzf58P
U8eTXHdt4rLCYxCrknddXX1/iH6V+rprsn7VprIe1XdKsO/xVGl/kHz4x7n9
u0HiX5ZMd3KG2Dvyn8G29R/9fqDOeVz3/Luu1Vl9SbQFV+n570DHEr+qvS2+
I/Gvfu+ZOleL3bsz2r661OAS5/+/K2zr/wvO6/G+/2UuR3tB3u0y5gPri/hR
Ms+I/7Lwt70t8dx4MrcdeQI9Wfg7B9Ehqes01LRCsC29hnmje2hK3lyOzIs6
Z/Waa1uD1L+b+q+sXOd5NHH+groO9R1yiw+Vzkm/U7pOhx/CnDtVfK/Uedtf
CsuXopsH2/t/c8+9nVO/x49yr1PyQh/mXpvTc/tirybOSb2b2ycck9vPfS7x
OvyjsC7FJhJj4CuSy8NuPBltB74vPvDE3P4iupnc+HvRXoxA30r2nMQ1D+LO
+aKrZdaRzyf/87Oh5P2xc+hR8lXEk08l9iNbB6+vMlino9vJ0y2KNujbzLWS
i3S8ceVrvhGvi2/7emK9g755JXHekHr0mZJvIPmqdL1jcz1vWbom0lL8zODc
+CuF83MvJdaDT5bOHdbXuR/knvPk6z6Oc/6S3Pky1nGjwvYMu3ZI7u/Jd8Uf
LTR+ffU3F70qdc6ZeuL6OvfTxHEKPhO+E/XeAZltFDYTO/t5Yv9kv8z2FLu6
T9RL6Dbqa58k9iuIb75PHOMQoxCrEDMSWyBDfIHN/yf6DHvGuI/4b1TsJyal
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
/y6N6d+6MMZvI527cW6s4Ebk9+N3a5hY1/2ie32Be9Z5y0tj/bcqjL8lWXFr
4Zwmuc0xpXN/5PLIz60svQdgu8K1YfJ0f+XG5ZJDp3bH/hdyR+2DsbvEVH+L
TgrOgdcrjDmgxt1R9LfSewCY/+BO2QvzdmEMNtiP0wr7DKxr1vev4k/NvMfh
x9L7KJhLN5bee9FYz/tL6f0SrHfwXqwp/B+w3NSENi1dSwDDAJaB/QXUP8Ck
/F567wRr89vSaxZ9Aq6Y+gF4pL/UPzXzXgl0HLpuA3IIjKv+JoX3uC3ne1TG
SP8rmeuwe4Wx3CvRx5X3jHUtjIXG5weHVVXeD9ZFfU+UxkGvXRlv2Yy8r/gu
lfGj+BtdK+NKsUFfpl5fN0nux9T7MtbJvc+Buidz5pbg2iVzZkXqfvaagaOa
VPNej89L46f5XiOIJzPv2/qsNLYbXTGad5253n0XflfNc2N45biavUiPBe9r
Y94uwgfIvGdqofrvqfnZiW2IcdjrsaT0muV9UjvDt6BO+3jw3jrWyLulaz+d
RC8gJs+8N+3VYLwra/CVYBwpPvwT4q+red29Frz/jnc7svJeBXTUKPH9M+9j
eiC4XsAaJ5ZEj6HPeAfoB3KS7B3Cp2WNsY+vQWLM6ic69+ma9Rh7/TZMjDPc
RuNvkBvDeVXlmPOA0vkrYkJyU1tXxpgSX1xROTYmhpoavFcIPTwreF8Pc+yH
4P0C2ALwu+B4mR83B9e7Wdf3B++pRBex96G5fu9cGQ+PntgJO6Z2TOaa1Ini
j82MPWDvxmOS6VE519ct2jL2SoHX3VC/naTfTspca14UvOcCvQ0+nL1Rrxfe
/1hfsu0r5/rIAZJn66/jx3NjcvCFqB1Tu961Mi4W/N7elfE6V5bGdoCpAMfa
szJeFr+CnAz5EvBEy4J9sHn4JME428vEz66cUyBuekb0A+6TWLUyDhj57uJb
5cbNbl8Zo4xvD/6KHBM1hJ0r43fxJ7uJb5Eb143/jG9PvnSHynhlfMUOlfHE
xHdgUNkj9pro8mD/kOe6tHKcT4y8XWVMM7HSjpXxvvirfStjpOZyncpY5zni
e1fGHPOMpzOvMucnyRdRlx2G35Uab/V6jE+p71PzP0fyM3JjNp4L9nuxNex3
wN6BJzq/cl6A+viMyjgYMLr4VyNqxqewD4d6LPsfqH1QE9kCW4HvlBv7cRZ+
SG6cYR/xT2fGQveqjKXGHu1WGUsNVnPPyjjvK9AZlbHUl4v/Pdh/hv8jGIuO
zHTJTM2NMVhauNZPzf8Q8vuZc+B/BuPeeW9/BWPveZ/g4RsnXhvsYQFTtKzw
XNg4sQ+/qu4m/pfoS+M7D6kcmxDX9AzeI0aOl1wvudze0cZRuwdvAO6AtYKN
Y98nc6dJ4ngBXw9sLRgO1gT4AnAF4FTByrBPgj3U5M2p0eHLgHcFT0OcRY4e
fUi+lPxsw+CcLTFbo+C9ouReeufG/eKPbRDs66WJbRVzh1w2WAzw4eQMyR0S
qxKfkkMbGtcga5G84djoG2AHsHHkH7rkrul+n3tPGe9h1+B9vuSCqWWha/E/
2bMLzoR9H+z/WD94X+7OwX4k/iS1DHI47CXdt3JMBO7m1MpxLnXdyZUxJ2Cc
qD2D86EGzB67gZUx0wML42bwr9iLic5jPbJ3k/2kHyeuqxPjnF4zzoW5RK14
WuX9UdS8v80dH4TEuQzqvmAN9q/stzE+1wHzQYwNrpfYjZzSksIYGzA5n+XG
B5LL2iv3HmTqtV/mrotRCwJXAl4Ie4pdxR/YrWbcLphe8AfslwIDsUH81usE
15jWDa6pgSlcOzg+ANcF3gOsAvgEsDlgQYen9oHx98FWgYEA24mPhK9ETXxF
9Pdujb4i75P6IPkgMDvsL25e8/5gal4t4z1Qa6OWBV6M/b/kRKmrgumnfjC4
cD2LPPh2wT4U2C1wG+RewCCBKcMuYVPYd4teAWPPviLyWmDSwKaBJQMPxh6v
51PXHHcI1nPg+dk/BG4Zf++M3HOY3Ce5cGqv1EHBzpCDPSKeS153TLw37Ac5
GOwJ+7yofXQL1m34uuzTQg+xL4C9WdQRxsf5jO8HLmZC5T1TYFDYcwZeGqwN
ewXI+VNX3iXYVyKvQ52CnC0+9WWV4x1ywcwJsGercGvB9X7wB9T5wT+jt9Hf
vXJjERgTHDv5/wm591SDYV2aR3x51G/kf8kDk7Mnx0KuZVLlOmXv+K6oZZMH
A48MLp0c/Vu5sZRfiQ6ojMsCN4cPwf99oFYGvgt9jG/P/n7iC3AE2BVwDlDs
DPsx2JfB3gHqcbzjOdHXw4cHX83+rPUT+xZgq6jlUdNj/xR7qcClga/m/wyQ
X2afF7mQAyvvt+V/LKxVev8eex3Qd+y3AlfHHmL+HwG1N7BZrO1v4lrnHM5l
vwxxx/CaMUFgyMHvsM+VvAp4IXBD7FFhrwp7atg/TM0NbBu5EGw0/5MATCs4
IPbE7Fd5PxLxF/9rgBzf1qLdc+fIWMvs5+xWM+4A7CvY4G9y4+WoWeBbso+X
mhkYMLDiYMvZe8reNLCA5I8GVd6/wRoEb/Nt4v0Xy6IdZM8OMSqxKvt9mBvU
uZlb5BHIJ7CHhf1idRPnrV7L/f8dsEHsHcNPPKjyPizul/2+7M+ihkUtiz0z
YE/ZDzIkvmP2qOJP41eTEwPnT72U/dnEf2AiwS6CKVoSn526/9Kon8E+fZZ4
Lq6MMRf7R8AdfR1tEziYgXG9kOci30WsRK6NnBt7msCEg/0emHt/B897Uu49
CPw/CnLW+PX1Euf2wWihv8+rbEs+juuLeJG9dWAj/w+gvj5J
            "]], 
           Polygon3DBox[CompressedData["
1:eJw1nAn8F9P3xmc+M3Png0iSNtKiUqEkSUkqJJVWhFAJiaIUJdJClDaVLWXJ
vssuZS9JSD+yZolUZE92/s+7Z/6vV/f1vefeO3fmM3PvOc95zrnVGXh+r2Gl
KIqOTqNI/6IRWRQdq7/t9Xd+OYp2VuMucRTdoLJRA5eqDFZ9g0q/JIrWqXyv
8Z0kP6S+jyVvkVxD9QdU9syjqE/sMccF3UPyasnvqm9vzX+85j9B8pWS++ie
/VUO19iTNE/FsudrILmXxvTS2Mc0rrfqn6kcr75f1dZS/WdL3qZ6bV3fXmNq
S35Z8t2q76X+TSrvavw7Kl+r3lz9C9W3QM/zluRD1N5d97tF8tuSW0nuIfly
zXe25KGSq0peq7+bJR+u67/V/DVzP9t3auum37ev5Nqa9zWVKho/SNe3Ut8Q
jR0mOVb/mxq/Sv3VJN/K+1D/oZq3p+RNar9MckWN2UXXfK3r35D8tPoPV/9d
usc/kn+SPETyR+p/QfLDkltKrsn9NMehuv4tXX+bxp+sel/Vz1H/Ffp7psZP
Udsc1S9TGSD5SsnTVd9T1x+m62uoLVf9Y5UXVX9E8x+i6/tJ3rN4l30kf5P5
fT0nub3kIZI7SD5Dc50nuY1+X2fNt7/m31v1zZnf92KNP0L9y/R816jveo2/
SPJn6l+m/kXqbyW5muQWuv4gjflXY+bk/r37FvfbS3Jf9Z2gvhmSZ0p+Vv11
1H+Y5MGSN0g+Uv29JX+l+V6X/ETRf7L6n9f1bVWu4F1pXDP1nyr5FNU3cR/J
AySfLnmUxtRUvbbqbXR9dc3XUs/XQm0t1LZB8kqNf1LXtVX/d/p7DN9f/eep
/wv1L5f8mNoPVf+Bun9bXd+Fd6i5u2hMV439WfJ6jbkg8/W/qt5X44/T+As0
vrnartP4lyWfoPpHum6K+sv6uxPfVuVzjTst928ra54z1H+n2nZmvavtEN5Z
8H7opfnP5nn4/ep7WuV11V9UeZC9rfKS6h0orH1d86GuuUvz7cJ+Uduh6uuv
+01T2wGSL9Pch6e+fxW13aQyN/f33V/XHqX7XaznOl3yYMm7SX5B10zU+Kt1
XWXJ12v8a+pvqv5Okltp/FDNc3zkPXZKbt2xr+Tx7D9dV1/XN1BppPoN6l+h
vmZ8B11/Y+7vf6DkzpKn6pqOGttRY8+SfLPm0i2ihmprrLYDeW/F+m2WWX9U
R19KPkr9d6ltiuQJat+H6yVfInm05HqSB2j+TGP/kVwHfaa5zlf/jegfXT9Q
/UH1/9RfV/29U+u3bRqzWW1fafxo1Reo7R71fSn5IskVJO8guanuN0Bt01WO
Uz1X247quxYdqba7Nf8g1QcV+/Fx3h1rgz2j+c9gfxX3OlH9q/W3Gvsl9p4Z
qP6DWP+qn6v+7/W3YWSd/oPq3XLvlz667gb135R7/TeXfKzkY3T9Fehj9D97
TvLwkm3E7qofpTJO8pOabx/VT9PzJqr/qbE1df1T6DKNPSe2Dj1IY85R20yu
UWkp+Vz9PVpjnuev5An6e6DG11f9adUPU99fKt9rzjWa44XYOg6bN0v3O1Zy
Z9UH6373Sj5L8sWSh0oeI7kWz8a6l/y35qzE99P1V0qejf5gvRT67Cv9/YXf
qmt+1DX/6fqVqq/Q+D3Uf6TGV1V/F427XnIp+H3frv616ltU8vc4I/Y7/1bj
fpd8ouRuuvdY1iP6RO276/oO6CeVV1ReVZmPfVF/S9WPU39PyaOwtWobq3vd
LHmV6gerv5v6L+KdYz8lV5J8XW79dIDkoyXPy21/WkjuKnl3zdFT8qua83P1
tVDpoHodPV8t1X/RMx+s/jMlb1X9ao1vr/oRus+Zun5j5vs/o/kGSH6LNS55
D81xm0ovzTFGf9sV4+ervrv6v1RZpbEjVFar7R2wBe9T4y5T/XHdoy62Uv3r
0f9qm6fSVm0j9Lex2o7R8/wmeR26o3g/L0m+R/INkhtJ3k/yiRqvx4j+1vjb
Va7X3EMll1RP1DFZ8gzVrynbjmPPh6ucqTmWSH612L+nSL5R8w1mfo2/WOM/
19/3WF+R9/OLGr9c8vkqp2n8u8FYayxrQPXWKgtV31F9Mfo99/XMM431I/kK
yddInip5ncbP1PjJGn+Z5P/Un6g+T21P6VlWB9uGEZLfVP1PlXP5fXyrsvHT
I9xfz9VR9cVqvwd9wvtQ232Sb4mt474uGceB58Zi33SfZ8Fcqj+o/sqSI82Z
6u/NYBgUq57nMvVPKuxVA91/HPpH8/xYrCdsBXvsINXr5sZ/PXiXGn+/+upK
3ljgrzZq/1j1+1WWJsZn9HVT6ar+R9EFGv9LsR8v1XwLVX9U9cs139cavw3b
zvtPi/1byKem1ndb0PX8Js3VPfV834D5VF+r55+n+njWvOrLNOb12DpkIPZR
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
TXKkTtX9/w/LWnvJ
            "]], Polygon3DBox[CompressedData["
1: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
            "]], 
           Polygon3DBox[{{1558, 879, 1159, 1987, 1410, 1411}, {1908, 892, 748,
             747, 1030, 1636}, {1429, 1428, 1961, 1021, 1022, 1962}, {1431, 
            1430, 1963, 1023, 1024, 1964}, {1417, 1416, 1958, 1018, 1019, 
            1959}, {1916, 912, 774, 773, 1201, 1758}, {1566, 886, 1172, 1994, 
            1426, 1427}, {1560, 881, 1017, 1957, 1416, 1417}}]},
          Annotation[#, "Charting`Private`Tag$11185#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ktLlGEYBuBHy7GDo/6CRAxBGLUYUPCQqZWB0WIKiYlGDFzowiBBa2kU
uXGbaFmbtEUUJIY76bQJgtCsLM3DqlW/oE3XlzDvXPf9zPt975yqr9/IjRRF
xJx1uTgiyfWsEfpKIir1jJ6Xq+QCGzjAdr5KRdy094K8Ik/IV+W7Xr9nDcuP
eJsLnOQSp/mOC1zla+7yA3+7z3P3KTj3i57jpt56IGJdb+NXtvMbT/E7O7jB
0/zBTnZZP+VubvIMt3iWv3iO2+zhDs9zl28PRrxwZr+z9/RL3NL/eo9r+h++
5zaX+JnzfMMHXOR9PuUtznLGGko+r/tMyHn5kzwq98qDbGM/63mNx3jH99Fq
X957qNCb2aI/Y7k+z3RyFss4zqbkh3R9Wj4qZpn1mbLmV+QjZh/1Zf2wfNHe
KfND8gnzxmSuP7FKzU4yY5biYyuV7GOd2Vzx/6PiIV0adZ5qzX2VMWZ2PMn0
iCobO4SXRfv/t3/5r0fy
        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwNzc0ygmEYBuCn6OcoyLKW8hNCIzqAhmLbxk4nYDTMsDUW7DgPJkchPx2C
/LdWXItr7vt9nvd7v5lWu36QiIg6jVTEfCZigdd0xKw8zUb8mm/rReaYYoNz
u5HdwN1D8mYXZmOzJrfOPf70N/s7/ZF3fVGG3JEPXPquJD/MlmRCNuS1+bJc
YZot9rky35RVnki6v+s/R7JDy35CfrJuX+FLvzEv65N6U66yxjM5aqTsvunq
LxRIO+95/17vk3H+4cx7x3JIlhP+AU+1KjE=
        "]], Line3DBox[CompressedData["
1:eJwVz0kyQ2EUBeBrEES3h4iM2YKBEEwkBkSCIo1RLECpUqWPiGZklliHKgvR
rEIW4PsHX517z/tflzs6LXfGIqJCNRNxNh6xNRGxwy6DyYg/XdV8JdfkPsf6
A5ljRX9NQ5eVe54z1H9xa5/ihg/7N/fmRbnEnbnpvrL5kPO0p+fToGtvuV6U
eXuJdd5083JV3+PEXNE9pG+kT9s+LR+5SN/lzFBXk3VGumX5yQ8FNthkgXd+
eXJuhpr/2nZ/yfzCLM/p3bpL+cocdef+AdrnJoc=
        "]], 
       Line3DBox[CompressedData["
1:eJwV0D1OQmEQheExAaUDVBRRC2t/tkGicgUTLTVSmKCJLoMKClFBEBHdEQuQ
xi1g7XOLN+c9M7lfJnev+Xj+sBQRCa6yEfWViBZGuYimrOIOfb0mj5cjnvGb
iSjoPV6RX/jBq16Uq3jhiRz69oTv87xcoG3WlwUcmD/pp/wNa/o6OmYDfZvX
5AglfmE+S9/Vd2Qix7jnl3Z//B03+lQv8lv+jXl6m34oj9L77c/0CTb0TXzw
Xdm1q/MpyvoWPnnLvJHeiWv/7B956SMA
        "]], 
       Line3DBox[{1377, 1900, 2063, 1376, 348, 1115, 349, 243, 1117, 351, 
        1118, 244, 353, 1119, 245, 1378, 2155, 355, 1379, 2135, 246, 1125, 
        357, 247, 1129, 359, 248, 1332, 618, 617, 2201, 1380, 2158, 361, 362, 
        1132, 249, 364, 1135, 250, 366, 1137, 251, 1381}], 
       Line3DBox[{1395, 1723, 1841, 1722, 1875, 2204, 1394, 1627, 1831, 1626, 
        2137, 1393, 1625, 1708, 1624, 2136, 1392, 1707, 1786, 2184, 1983, 
        1391, 1984, 2064, 1719, 1390, 2192, 1623, 1830, 1622, 1871, 1389, 
        2196, 1621, 1706, 1620, 1388, 2162, 1705, 1785, 1704, 2157, 1387, 
        1703, 1784, 1702, 2156, 1386, 1556, 2016, 1385, 1619, 1701, 2154, 
        1956, 1384, 1008, 1700, 1618, 1383, 2160, 1699, 1783, 1698, 1382, 
        2159, 1710, 1709, 1713}], 
       Line3DBox[{1409, 1734, 1733, 2166, 1408, 1557, 2017, 1407, 2071, 1904, 
        1406, 1721, 1792, 2185, 1986, 1405, 1985, 2070, 1791, 1720, 1404, 
        1993, 2069, 1832, 1730, 1403, 2068, 1903, 1402, 2163, 1718, 1790, 
        1717, 2164, 1401, 1716, 1789, 1715, 2161, 1400, 1727, 2067, 1988, 
        1399, 2066, 1902, 1398, 2065, 1901, 1397, 1142, 1788, 1714, 1396, 
        2165, 1712, 1787, 1711, 1726}], 
       Line3DBox[{1413, 1725, 2018, 1558, 1411, 2019, 1559, 1415, 1629, 2020, 
        1560, 1417, 1959, 2021, 1738, 1561, 1737, 1990, 2022, 1562, 1739, 
        1992, 2023, 1563, 1421, 2024, 883, 1423, 1632, 1742, 2168, 1564, 1798,
         1741, 1744, 2169, 1565, 1743, 1732, 2025, 1566, 1427, 2026, 1567, 
        1429, 1962, 2027, 1568, 1431, 1964, 2028, 1746, 1569, 1745, 1995, 
        2029, 1570, 1434}], 
       Line3DBox[{1433, 1736, 1797, 1735, 2167, 1432, 1634, 2082, 1963, 1430, 
        1633, 2081, 1961, 1428, 2080, 1906, 1426, 1994, 2079, 1796, 1731, 
        1425, 1996, 2078, 1740, 1424, 1960, 2077, 1631, 1422, 2076, 882, 1420,
         1729, 1795, 2187, 1991, 1419, 1728, 1794, 2186, 1989, 1418, 1630, 
        2075, 1958, 1416, 1957, 2074, 1628, 1414, 2073, 1905, 1410, 1987, 
        2072, 1793, 1724, 1412}], 
       Line3DBox[{1436, 1907, 2083, 1435, 2030, 1571, 1437, 1635, 1748, 2170, 
        1572, 1747, 1965, 2031, 1573, 1799, 1997, 2032, 1574, 1438, 2033, 
        1575, 1439, 2139, 1636, 1908, 2138, 1440, 1637, 1750, 893, 1749, 1638,
         2034, 1576, 1441, 2035, 1577, 1442, 2036, 1578, 1443, 1966, 2037, 
        1752, 1579, 1751, 1967, 2038, 1580, 1800, 2188, 1753, 1581, 1444}], 
       Line3DBox[{1446, 1909, 2084, 1445, 1754, 1801, 1910, 2171, 1447, 1639, 
        2039, 1582, 1448, 1968, 2040, 1583, 1449, 2041, 1584, 1450, 2042, 
        1585, 1451, 2174, 1756, 1802, 1911, 2173, 1757, 1640, 1912, 2140, 
        1452, 1641, 904, 1453, 2043, 1586, 1454, 1998, 2044, 1803, 1587, 1455,
         1969, 2045, 1588, 1456, 2141, 1642, 1589, 1457, 2046, 1590, 1458}], 
       Line3DBox[{1460, 1913, 2085, 1459, 1755, 1914, 2172, 1461, 1915, 2086, 
        1462, 2047, 1591, 1463, 2048, 1592, 1464, 2177, 1759, 1804, 1593, 
        1465, 2176, 1758, 1916, 2175, 1466, 1917, 2087, 1467, 1918, 2088, 
        1468, 1762, 1806, 1919, 2179, 1763, 1999, 2049, 1594, 1469, 2050, 
        1595, 1470, 2051, 1596, 1471, 2052, 1597, 1472}], 
       Line3DBox[{1474, 1920, 2089, 1473, 1921, 2090, 1475, 1922, 2091, 1476, 
        1923, 2092, 1477, 2053, 1598, 1478, 2178, 1760, 1805, 1761, 1479, 
        2054, 1924, 2093, 1480, 1925, 2094, 1481, 1926, 2095, 1482, 1764, 
        1807, 1765, 2180, 1483, 929, 1484, 2055, 1599, 1485, 2056, 1600, 1486,
         2057, 1601, 1487}], 
       Line3DBox[{1489, 1927, 2096, 1488, 1928, 2097, 1490, 1643, 2098, 1970, 
        1491, 1971, 2099, 1644, 1492, 1929, 2100, 1493, 2058, 1602, 1494, 
        2059, 1930, 2101, 1495, 1645, 1646, 2142, 1496, 1647, 1648, 2143, 
        1497, 1931, 2102, 1498, 1932, 2103, 1499, 1051, 1649, 1500, 2144, 
        1650, 1651, 1501, 2060, 1603, 1502}], 
       Line3DBox[{1504, 1933, 2104, 1503, 1934, 2105, 1505, 1652, 2106, 1972, 
        1506, 1973, 2107, 1653, 1507, 1935, 2108, 1508, 1936, 2109, 1509, 
        2061, 1937, 2110, 1510, 1654, 1655, 2145, 1511, 1656, 2111, 1974, 
        1512, 1938, 2112, 1513, 1939, 2113, 1514, 1975, 2114, 1657, 1515, 
        1976, 2115, 1658, 1516, 2062, 1604, 1517}], 
       Line3DBox[{1531, 1768, 2130, 2001, 1530, 2129, 1951, 1529, 2128, 1950, 
        1528, 2127, 1949, 1527, 2126, 1948, 1526, 2125, 1947, 1525, 2124, 
        1946, 1524, 2123, 2122, 1945, 1523, 2121, 1944, 1522, 2120, 1943, 
        1521, 2119, 1942, 1520, 2118, 1941, 1519, 2117, 1940, 1518, 2000, 
        2116, 1766, 1767}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{667, 1066, 1067, 2004, 668, 972, 973, 2010, 1088, 1260, 983,
         1101, 984, 2014, 1261, 1103, 1265, 997, 1118, 998, 1266, 1120, 2154, 
        1009, 1010, 707, 2066, 872, 719, 2075, 1018, 1019, 2021, 1178, 1026, 
        1185, 1027, 2031, 744, 1038, 1039, 2040, 758, 910, 2047, 771, 2092, 
        922, 785, 2099, 1047, 1048, 800, 2107, 1056, 1057, 815, 2119, 960, 
        830}], Line3DBox[{669, 1068, 1220, 1069, 2005, 1222, 1070, 1087, 1071,
         2011, 1090, 985, 1102, 2202, 986, 1338, 1299, 999, 1119, 1000, 699, 
        865, 2016, 708, 2067, 1160, 1161, 1243, 2186, 1163, 1177, 1164, 2022, 
        731, 1186, 1247, 1187, 2032, 745, 900, 2041, 759, 911, 2048, 772, 923,
         2053, 786, 2100, 936, 801, 2108, 948, 816, 2120, 961, 831}], 
       Line3DBox[{670, 1274, 1323, 1275, 1221, 1314, 1348, 1313, 2197, 1224, 
        1283, 1326, 1284, 1089, 1344, 2149, 1343, 1342, 1104, 1235, 2183, 
        1105, 689, 1121, 2155, 1122, 1237, 1123, 2156, 1124, 1240, 1144, 2161,
         1162, 1145, 1244, 2187, 1166, 1179, 1167, 2023, 732, 891, 2033, 746, 
        901, 2042, 760, 1206, 2177, 1207, 1251, 1208, 2178, 1209, 787, 937, 
        2058, 802, 2109, 949, 817, 2121, 962, 832}], 
       Line3DBox[{671, 1276, 1324, 1277, 1223, 1316, 1349, 2205, 1315, 1286, 
        1295, 1296, 1091, 2150, 975, 1290, 1339, 1340, 1300, 2194, 988, 1107, 
        1001, 2135, 1002, 1238, 1126, 2157, 1143, 1128, 1241, 1147, 2164, 
        1165, 1149, 720, 882, 2024, 733, 1028, 2139, 1030, 747, 1195, 2174, 
        1197, 1249, 1199, 2176, 1201, 773, 924, 2054, 788, 938, 2059, 803, 
        950, 2061, 818, 2122, 963, 833}], 
       Line3DBox[{676, 1079, 1229, 1080, 2008, 1297, 1298, 978, 1291, 979, 
        2013, 1096, 1341, 992, 1301, 2195, 993, 1302, 1111, 1271, 1004, 1132, 
        1005, 1136, 1013, 2136, 1154, 1014, 713, 2071, 877, 726, 2081, 1021, 
        1022, 2027, 739, 1033, 1034, 2037, 1190, 1042, 1043, 2045, 765, 916, 
        2050, 779, 930, 2055, 794, 1051, 1052, 809, 2114, 1060, 1061, 824, 
        2128, 969, 839}], 
       Line3DBox[{677, 1081, 1082, 2009, 678, 980, 2132, 981, 1098, 496, 1110,
         2190, 498, 1113, 510, 1135, 554, 1293, 1015, 2137, 1016, 714, 878, 
        2017, 727, 2082, 1023, 1024, 2028, 1183, 1035, 1189, 1036, 2038, 753, 
        1044, 2141, 1045, 766, 917, 2051, 780, 931, 2056, 795, 1053, 2144, 
        1054, 810, 2115, 1062, 1063, 825, 2129, 970, 840}], 
       Line3DBox[{679, 1306, 1307, 1230, 2182, 1083, 1231, 1084, 1097, 2152, 
        1085, 1099, 994, 1112, 2153, 995, 695, 1006, 1137, 1007, 1309, 1345, 
        2204, 1346, 1310, 1157, 715, 1173, 2166, 1174, 1245, 1175, 2167, 1182,
         1176, 2029, 740, 1191, 1248, 2188, 1192, 754, 906, 2046, 767, 918, 
        2052, 781, 932, 2057, 796, 944, 2060, 811, 956, 2062, 826, 2130, 1215,
         1216, 1217}], 
       Line3DBox[{827, 957, 1214, 2116, 812, 945, 2104, 797, 933, 2096, 782, 
        919, 2089, 768, 907, 2085, 755, 897, 2084, 741, 888, 2083, 728, 2018, 
        879, 1159, 2072, 716, 869, 1158, 2165, 1140, 704, 862, 1139, 2159, 
        1138, 696, 857, 2063, 686, 851, 2203, 1359, 1361, 1360, 680, 846, 
        1352, 2207, 1351, 1232, 1282, 1325, 1281, 664, 2181, 841, 1347, 1312, 
        1218, 1273, 1322, 1272, 1311}], 
       Line3DBox[{828, 958, 2117, 813, 946, 2105, 798, 934, 2097, 783, 920, 
        2090, 769, 908, 2172, 1194, 756, 898, 2171, 1193, 742, 2030, 889, 729,
         2019, 880, 2073, 717, 870, 1142, 705, 863, 1141, 2160, 1116, 697, 
        858, 1115, 1114, 687, 852, 2199, 1337, 650, 681, 649, 2147, 1288, 
        1086, 665, 2191, 608, 1219, 558, 630}], 
       Line3DBox[{829, 959, 2118, 814, 947, 1055, 2106, 799, 935, 1046, 2098, 
        784, 921, 2091, 770, 909, 2086, 757, 2039, 899, 1037, 743, 2170, 890, 
        1184, 1025, 730, 2020, 881, 1017, 2074, 718, 871, 2065, 706, 864, 
        1008, 698, 1257, 1256, 1117, 996, 1264, 688, 1253, 1252, 1100, 982, 
        1259, 682, 2148, 847, 971, 666, 2193, 842, 1064, 1065}], 
       Line3DBox[{834, 964, 2123, 819, 951, 2110, 804, 939, 2101, 789, 925, 
        2093, 774, 912, 2175, 1200, 761, 902, 2173, 1198, 1196, 748, 892, 
        2138, 1029, 734, 883, 2076, 721, 873, 2163, 1148, 709, 866, 1146, 
        2162, 1127, 700, 859, 1125, 1268, 1267, 690, 853, 2189, 1254, 1106, 
        987, 683, 848, 2200, 1330, 1289, 974, 672, 843, 2198, 1329, 1328, 
        1356, 1355, 1072}], 
       Line3DBox[{835, 965, 2124, 820, 952, 2145, 1058, 805, 940, 2142, 1049, 
        790, 926, 2094, 775, 913, 2087, 762, 903, 2140, 1040, 749, 893, 1188, 
        1031, 735, 2168, 884, 1246, 1020, 2077, 722, 874, 2068, 710, 867, 
        1303, 2196, 1011, 701, 860, 1258, 1129, 1270, 1269, 691, 854, 1255, 
        2133, 1108, 1263, 1262, 684, 849, 2131, 1092, 976, 673, 2006, 844, 
        1327, 1358}], 
       Line3DBox[{836, 966, 2125, 821, 953, 1059, 2111, 806, 941, 2143, 1050, 
        791, 927, 2095, 776, 914, 2088, 763, 904, 1041, 750, 2034, 894, 1032, 
        736, 2169, 885, 1181, 1180, 2078, 723, 875, 1169, 1168, 2069, 711, 
        1336, 1335, 1294, 2192, 1012, 702, 1334, 1333, 1332, 1003, 1357, 692, 
        855, 2134, 1236, 989, 685, 2151, 850, 1093, 977, 674, 2146, 845, 1226,
         1073, 1225}], 
       Line3DBox[{837, 967, 2126, 822, 954, 2112, 807, 942, 2102, 792, 928, 
        2180, 1213, 777, 915, 2179, 1211, 1210, 764, 2043, 905, 751, 2035, 
        895, 737, 2025, 886, 1172, 2079, 724, 876, 1170, 1153, 2070, 712, 868,
         1151, 1150, 2064, 703, 861, 2201, 1331, 693, 2209, 856, 1362, 1109, 
        1364, 1365, 1354, 2208, 1353, 1233, 1078, 1320, 1285, 675, 1318, 2206,
         1350, 1317, 1227, 1074, 1304, 1278, 1075}], 
       Line3DBox[{838, 968, 2127, 823, 955, 2113, 808, 943, 2103, 793, 929, 
        778, 2049, 1205, 1212, 1204, 1250, 2044, 1203, 1202, 752, 2036, 896, 
        738, 2026, 887, 2080, 725, 1156, 1171, 1155, 2185, 1242, 1134, 1152, 
        1133, 2184, 1239, 1131, 2158, 1130, 694, 2015, 991, 1363, 990, 1292, 
        1321, 2012, 1095, 1234, 1094, 1308, 1287, 1319, 2007, 1077, 1228, 
        1076, 1305, 1279, 1280}]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
luUhGdbrCg4FJ0SgH16JDfj+Ynixw/nQbBMZnHprvftsotFuh3Ym07+eyMYg
wNZ/nQxp7v/4uPJhPq4emI/rid75199FYtBp8wiR+68bQGqWdlu4NhlCMb/W
xZD/9ms99Bx3aoOGABaS9o/cPwaBdUxbmsniBPzVpvGS456GWLecnVdTKM+T
kozvA6dpoOpSoHq8YxT4nv8NZgzsRZ/5dGQt9hDgVeYTA1iagqC7XYaEknrI
yNevGzGfBlUdlJdEwSP9Rvzj1LLXIS47mgooPz8Fw+0zW3C7uoto1IndVWjQ
veu1zoMeKLpRoPiCwqdSML+485hfXC3mF+f4yTHGOS0e/jzck8G6mgTKT9H8
FIkM3r6c3LyyVeiLe+0Mp3oKsN4rwS0Gk8EP82frxfzZ3mH+bBMZwsm7a3uR
yJzUJwt2f5RotXvtcy4RBKy/in6I7kGbE09OSGtVg8ha4eILCh6+gc3t/2yZ
29fdcpf6Si5EvxKbGCvPtsNhgiiPcgMJyrC5vSQ2t7fE5vZvMV+1+5ivmgXm
q6aianhzaOAD4rcPV2J4047yjVIrVwiUuo3N2xW3zNuP5I5JWPN3gMbJs2vU
nPXojpx9tBkHCcZtjgl8nEgA1jGmvGQdHBQn6AsFUPrgHl4Z2lPKWXBwVlf/
TSoOjazPP+Sk9AU3Cd+vioGV4FR+YabDMwWNK7Oc44kkQ7H8P35NBMyvaRrz
a0rD/Jost/g18WE+MI6YD0wQ5gOjexGtX29rhuilaMVox15Uc1WDv3lsAQbz
4/7gdGfhUr+zj75YOjJ8n6f/IHkSygpBeCfl+xKE33juJNyC/J+/jBqj4Mb/
7Pc+w/Z787D93mPYnOQWNiehMfhnTtKX79MU83IG6KTuaxqZVYBHkZzUc7Up
OG/0x+xRySwY09sRDjCEo8NuQo6frk7+7z3+eewe/x52j99e/YH7YuUQZFj9
NMoS7kcRTVeCuvgIII7NSUy3zEkcj+hZCPBNgJhXZ8T2r+1QnPhOyUlhFu5j
99dTW+6va8xSnwr3VsLhuI2HnbbjwN6n5EmfQ8H52H7s3i37sf/JsbqL7cfm
Y/uxV//+k3fcuyXveDeWd8yB5R2rYnnHk1je8SSWd6yF5R3/5x7Kd8s9VCqW
gyy+JQfZFMtBvoflIH/BcpBLsBzk5S05yCJYfnHUlvziu1h+sTmWX+yL5Rer
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

     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{390.6598164063613, 306.6055029430765},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{0.1, 10}, {0, 10}, {-1.411470399384302, 1.413879214402904}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-1.061316459483708, -2.6965150482879072`, 1.7471158997576195`},
  ViewVertical->{0.1890978719070457, 0.4804460089544034, 
   0.856395718882347}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.845025515669634*^9, 3.845025558019861*^9}, 
   3.8450276312006817`*^9, 3.845029368856276*^9, 3.845029589785228*^9, {
   3.8450297307957983`*^9, 3.845029744476087*^9}, 3.85629248481923*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"f2cef614-db04-4c93-a04b-422ac4fe8a43"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "psi", "]"}], "\[IndentingNewLine]", 
 RowBox[{"psi", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]", "[", 
       RowBox[{"T", ",", "z"}], "]"}], " ", "/.", " ", "psiSolution1"}], " ", 
     "/.", " ", 
     RowBox[{"A", "->", " ", "1"}]}], " ", "/.", " ", 
    RowBox[{"B", "->", " ", "1"}]}], " ", "/.", " ", 
   RowBox[{"k", "->", " ", "2"}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.845026014543458*^9, 3.845026020951775*^9}, {
   3.845026171413807*^9, 3.845026171497567*^9}, 3.845026857053708*^9, 
   3.845027631200925*^9, {3.8450293727212343`*^9, 3.8450293729065237`*^9}, 
   3.845029589785681*^9, {3.845029747722109*^9, 3.845029748273975*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"8f04d9c1-5cee-4e2e-8e88-898412cd9d0f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BesselJ", "[", 
    RowBox[{"0", ",", 
     RowBox[{"2", " ", "T"}]}], "]"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "z"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"BesselJ", "[", 
    RowBox[{"0", ",", 
     RowBox[{"2", " ", "T"}]}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "z"}], "]"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{
  3.845026021383206*^9, 3.845026172033101*^9, 3.8450268570554113`*^9, 
   3.8450276312013283`*^9, 3.845029373594458*^9, 3.845029589787087*^9, {
   3.845029730823371*^9, 3.845029748541622*^9}, 3.856292484848845*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"e340c595-9cfc-4379-9c9b-113b1a5c83c4"],

Cell[BoxData[
 RowBox[{"Animate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Psi]", "[", 
            RowBox[{"T", ",", "z"}], "]"}], " ", "/.", " ", "psiSolution1"}], 
          " ", "/.", " ", 
          RowBox[{"A", "->", " ", "1"}]}], " ", "/.", " ", 
         RowBox[{"B", "->", " ", "1"}]}], " ", "/.", " ", 
        RowBox[{"k", "->", " ", "1"}]}], " ", "/.", " ", 
       RowBox[{"T", "->", " ", "t"}]}], "]"}], "  ", ",", " ", 
     RowBox[{"{", 
      RowBox[{"z", ",", "0.1", ",", "20"}], "}"}], " ", ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "2"}]}], " ", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.845026040765032*^9, 3.845026108435686*^9}, {
   3.845026186569672*^9, 3.845026335840776*^9}, {3.845026415523466*^9, 
   3.8450264452042637`*^9}, 3.845026857055859*^9, 3.845027631201626*^9, {
   3.845029376213479*^9, 3.8450293786385183`*^9}, 3.845029589787507*^9, {
   3.845029751521719*^9, 3.845029752063025*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"088e184c-b285-412e-bf12-823e47103a92"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 7.6123552322387695`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 10}}, Typeset`size$$ = {360., {113., 117.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Evaluate[
         ReplaceAll[
          ReplaceAll[
           ReplaceAll[
            ReplaceAll[
             ReplaceAll[
              $CellContext`\[Psi][$CellContext`T, $CellContext`z], \
$CellContext`psiSolution1], $CellContext`A -> 1], $CellContext`B -> 
            1], $CellContext`k -> 
           1], $CellContext`T -> $CellContext`t$$]], {$CellContext`z, 0.1, 
         20}, PlotRange -> 2], 
      "Specifications" :> {{$CellContext`t$$, 0, 10, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{404., {149., 155.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{
  3.845026041319644*^9, 3.845026084241333*^9, {3.845026187494207*^9, 
   3.845026212840192*^9}, {3.845026270272168*^9, 3.845026325787424*^9}, {
   3.845026417378626*^9, 3.845026445563298*^9}, 3.845026857057415*^9, 
   3.8450276312018843`*^9, 3.845029379176005*^9, 3.8450295897890377`*^9, {
   3.845029730880349*^9, 3.845029752338859*^9}, 3.8562924849037857`*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"2395c11f-301c-4a83-892a-30f73512dff0"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "psiSum", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psiSum", "[", "n_", "]"}], ":=", " ", "\[IndentingNewLine]", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "[", 
         RowBox[{"T", ",", "z"}], "]"}], " ", "/.", " ", "psiSolution1"}], 
       " ", "/.", " ", 
       RowBox[{"A", "->", " ", "1"}]}], " ", "/.", " ", 
      RowBox[{"B", "->", " ", "1"}]}], " ", ")"}], " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"k", ",", "0", ",", "n"}], "}"}]}], " ", "]"}], " "}]}], "Input",\

 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.8450265094898567`*^9, 3.84502659802833*^9}, {
   3.845026663926133*^9, 3.845026693332347*^9}, 3.845026857059099*^9, 
   3.8450276312022057`*^9, {3.845029383379816*^9, 3.845029383566135*^9}, 
   3.845029589790689*^9, {3.845029756231948*^9, 3.845029756523415*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"6e4387e1-b0fd-454a-992c-91271283fa06"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Just", " ", "a", " ", "check"}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{"psiSum", "[", "3", "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.8450266978230267`*^9, 3.845026700444129*^9}, {
   3.845026812137414*^9, 3.8450268249173393`*^9}, 3.8450268570594797`*^9, 
   3.845027631202447*^9, 3.8450295897910557`*^9},
 CellLabel->
  "In[110]:=",ExpressionUUID->"9e987c1b-74ec-44eb-b28a-bd8c9063bb02"],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{
   RowBox[{"BesselJ", "[", 
    RowBox[{"0", ",", "T"}], "]"}], " ", 
   RowBox[{"Cos", "[", "z", "]"}]}], "+", 
  RowBox[{
   RowBox[{"BesselJ", "[", 
    RowBox[{"0", ",", 
     RowBox[{"2", " ", "T"}]}], "]"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "z"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"BesselJ", "[", 
    RowBox[{"0", ",", 
     RowBox[{"3", " ", "T"}]}], "]"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"3", " ", "z"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"BesselJ", "[", 
    RowBox[{"0", ",", "T"}], "]"}], " ", 
   RowBox[{"Sin", "[", "z", "]"}]}], "+", 
  RowBox[{
   RowBox[{"BesselJ", "[", 
    RowBox[{"0", ",", 
     RowBox[{"2", " ", "T"}]}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "z"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"BesselJ", "[", 
    RowBox[{"0", ",", 
     RowBox[{"3", " ", "T"}]}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"3", " ", "z"}], "]"}]}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{
  3.8450267006332207`*^9, {3.8450268131589823`*^9, 3.8450268252308693`*^9}, 
   3.845026857060979*^9, 3.845027631202694*^9, 3.845029385607551*^9, 
   3.845029589792346*^9, {3.845029730986362*^9, 3.84502976047771*^9}, 
   3.856292485078493*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"762a7ac5-1d39-48f0-bf3d-2f7419aaa557"],

Cell[BoxData[
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"psiSum", "[", "100", "]"}], " ", "/.", " ", 
       RowBox[{"T", "->", " ", "t"}]}], "]"}], "  ", ",", " ", 
     RowBox[{"{", 
      RowBox[{"z", ",", "0.1", ",", "20"}], "}"}], " ", ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "4"}]}], " ", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.845026748844783*^9, 3.845026800302506*^9}, 
   3.845026857061473*^9, 3.8450276312029343`*^9, {3.8450293887287617`*^9, 
   3.845029388847732*^9}, 3.84502958979272*^9},
 CellLabel->
  "In[111]:=",ExpressionUUID->"ed3cf84e-e8fb-4a38-984a-eaf8facf2d5a"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 6.865928649902344, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 10}}, Typeset`size$$ = {360., {113., 117.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Evaluate[
         ReplaceAll[
          $CellContext`psiSum[
          100], $CellContext`T -> $CellContext`t$$]], {$CellContext`z, 0.1, 
         20}, PlotRange -> 4], 
      "Specifications" :> {{$CellContext`t$$, 0, 10, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{404., {149., 155.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.84502675256159*^9, 3.84502678213466*^9}, 
   3.8450268570631723`*^9, 3.8450276312032022`*^9, 3.84502938933965*^9, 
   3.845029589794002*^9, 3.845029731033881*^9, 3.8450297689883432`*^9, 
   3.856292485117302*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"e2f39686-ddc9-431f-b346-147edd9b2d43"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"D", "[", " ", 
   RowBox[{"psiSolution1", " ", ",", " ", "T"}], " ", "]"}], "  ", "//", " ", 
  "pdConv"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D", "[", " ", 
   RowBox[{"psiSolution1", " ", ",", " ", "z"}], " ", "]"}], "  ", "//", " ", 
  "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.8450269454990597`*^9, 3.845026977183535*^9}, 
   3.845027466074686*^9, 3.8450276312034492`*^9, {3.8450293933381968`*^9, 
   3.845029393445817*^9}, 3.8450295897944717`*^9},
 CellLabel->
  "In[112]:=",ExpressionUUID->"daf3bcaf-b8d3-4db8-bf0a-b96f110f2028"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", 
     RowBox[{"\[Psi]", "(", 
      RowBox[{"T", ",", "z"}], ")"}]}], 
    RowBox[{"\[PartialD]", "T"}],
    MultilineFunction->None], "\[Rule]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "A"}], " ", "k", " ", 
     TemplateBox[{"1", 
       RowBox[{"k", " ", "T"}]},
      "BesselJ"], " ", 
     RowBox[{"sin", "(", 
      RowBox[{"k", " ", "z"}], ")"}]}], "-", 
    RowBox[{"B", " ", "k", " ", 
     TemplateBox[{"1", 
       RowBox[{"k", " ", "T"}]},
      "BesselJ"], " ", 
     RowBox[{"cos", "(", 
      RowBox[{"k", " ", "z"}], ")"}]}]}]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.8450269482227087`*^9, 3.84502697742916*^9}, 
   3.845027466074996*^9, 3.845027631203685*^9, 3.8450293939205914`*^9, 
   3.84502958979471*^9, 3.84502973113122*^9, 3.856292485402273*^9},
 CellLabel->
  "Out[112]//TraditionalForm=",ExpressionUUID->"3decb522-5f5f-445b-9c85-\
596662fc103a"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", 
     RowBox[{"\[Psi]", "(", 
      RowBox[{"T", ",", "z"}], ")"}]}], 
    RowBox[{"\[PartialD]", "z"}],
    MultilineFunction->None], "\[Rule]", 
   RowBox[{
    RowBox[{"A", " ", "k", " ", 
     TemplateBox[{"0", 
       RowBox[{"k", " ", "T"}]},
      "BesselJ"], " ", 
     RowBox[{"cos", "(", 
      RowBox[{"k", " ", "z"}], ")"}]}], "-", 
    RowBox[{"B", " ", "k", " ", 
     TemplateBox[{"0", 
       RowBox[{"k", " ", "T"}]},
      "BesselJ"], " ", 
     RowBox[{"sin", "(", 
      RowBox[{"k", " ", "z"}], ")"}]}]}]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.8450269482227087`*^9, 3.84502697742916*^9}, 
   3.845027466074996*^9, 3.845027631203685*^9, 3.8450293939205914`*^9, 
   3.84502958979471*^9, 3.84502973113122*^9, 3.856292485410164*^9},
 CellLabel->
  "Out[113]//TraditionalForm=",ExpressionUUID->"8dd42c8e-a582-4723-acaa-\
bc1b26fa4f7a"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "gammaTode", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gammaTode", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eq4pt5c", "  ", "/.", " ", 
     RowBox[{"D", "[", " ", 
      RowBox[{"psiSolution1", " ", ",", " ", "T"}], " ", "]"}]}], "  ", "/.", 
    " ", 
    RowBox[{"D", "[", " ", 
     RowBox[{"psiSolution1", " ", ",", " ", "z"}], " ", "]"}]}]}], "   ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"gammaTode", "  ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.845026897870184*^9, 3.8450268995694227`*^9}, {
   3.845026984215583*^9, 3.845027026675461*^9}, {3.8450272237989807`*^9, 
   3.8450272300788507`*^9}, 3.8450274660774117`*^9, 3.8450276312041473`*^9, {
   3.845029397933689*^9, 3.84502939808674*^9}, {3.845029456998272*^9, 
   3.84502946359656*^9}, {3.845029503301414*^9, 3.845029503556418*^9}, 
   3.8450295897966623`*^9},
 CellLabel->
  "In[114]:=",ExpressionUUID->"69f22c0b-3379-4a7e-a284-9734076f35e8"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", 
     RowBox[{"\[Gamma]", "(", 
      RowBox[{"T", ",", "z"}], ")"}]}], 
    RowBox[{"\[PartialD]", "T"}],
    MultilineFunction->None], "\[LongEqual]", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"T", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"A", " ", "k", " ", 
           TemplateBox[{"0", 
             RowBox[{"k", " ", "T"}]},
            "BesselJ"], " ", 
           RowBox[{"cos", "(", 
            RowBox[{"k", " ", "z"}], ")"}]}], "-", 
          RowBox[{"B", " ", "k", " ", 
           TemplateBox[{"0", 
             RowBox[{"k", " ", "T"}]},
            "BesselJ"], " ", 
           RowBox[{"sin", "(", 
            RowBox[{"k", " ", "z"}], ")"}]}]}], ")"}], "2"]}], "+", 
      RowBox[{"T", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "A"}], " ", "k", " ", 
           TemplateBox[{"1", 
             RowBox[{"k", " ", "T"}]},
            "BesselJ"], " ", 
           RowBox[{"sin", "(", 
            RowBox[{"k", " ", "z"}], ")"}]}], "-", 
          RowBox[{"B", " ", "k", " ", 
           TemplateBox[{"1", 
             RowBox[{"k", " ", "T"}]},
            "BesselJ"], " ", 
           RowBox[{"cos", "(", 
            RowBox[{"k", " ", "z"}], ")"}]}]}], ")"}], "2"]}]}], ")"}]}]}], 
  TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{
  3.845026899782874*^9, {3.845026980681157*^9, 3.845027027192601*^9}, 
   3.845027230345901*^9, 3.8450274660791693`*^9, 3.845027631204381*^9, 
   3.845029398635962*^9, {3.8450294577741127`*^9, 3.845029464039215*^9}, 
   3.845029504107581*^9, 3.845029589798414*^9, 3.845029731176959*^9, 
   3.856292485447456*^9},
 CellLabel->
  "Out[116]//TraditionalForm=",ExpressionUUID->"718bdeb3-7f35-4dd6-94b3-\
a03f44a56cb2"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "gammaTsolution", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gammaTsolution", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"DSolve", "[", " ", 
          RowBox[{"gammaTode", "  ", ",", " ", 
           RowBox[{"\[Gamma]", "[", 
            RowBox[{"T", ",", "z"}], "]"}], " ", ",", " ", 
           RowBox[{"{", 
            RowBox[{"T", ",", "z"}], "}"}]}], " ", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "   ", "/.", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"C", "[", "1", "]"}], "[", "]"}], "->", " ", "0"}]}], "  ", "/.",
       " ", 
      RowBox[{"A", "->", " ", "1"}]}], " ", "/.", " ", 
     RowBox[{"B", "->", " ", "1"}]}], "  ", "/.", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "[", "z", "]"}], "->", " ", "0"}]}]}], 
  "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"gammaTsolution", "  ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.845027028928094*^9, 3.845027182582979*^9}, {
   3.845027238854042*^9, 3.8450272455331173`*^9}, 3.845027466079644*^9, 
   3.845027631204629*^9, {3.845029472530014*^9, 3.84502952427742*^9}, 
   3.8450295897989407`*^9},
 CellLabel->
  "In[117]:=",ExpressionUUID->"4b4a2024-507d-47d9-87ce-6bf7b111f70c"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Gamma]", "(", 
    RowBox[{"T", ",", "z"}], ")"}], "\[Rule]", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    SuperscriptBox["k", "2"], " ", 
    SuperscriptBox["T", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       TemplateBox[{"0", 
         RowBox[{"k", " ", "T"}]},
        "BesselJ"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          TemplateBox[{"0", 
            RowBox[{"k", " ", "T"}]},
           "BesselJ"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"cos", "(", 
              RowBox[{"k", " ", "z"}], ")"}], "-", 
             RowBox[{"sin", "(", 
              RowBox[{"k", " ", "z"}], ")"}]}], ")"}], "2"]}], "-", 
         RowBox[{
          TemplateBox[{"2", 
            RowBox[{"k", " ", "T"}]},
           "BesselJ"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"sin", "(", 
              RowBox[{"k", " ", "z"}], ")"}], "+", 
             RowBox[{"cos", "(", 
              RowBox[{"k", " ", "z"}], ")"}]}], ")"}], "2"]}]}], ")"}]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox[
        TemplateBox[{"1", 
          RowBox[{"k", " ", "T"}]},
         "BesselJ"], "2"]}]}], ")"}]}]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.845027108657976*^9, 3.8450271527489977`*^9}, 
   3.845027184108068*^9, 3.845027246102158*^9, 3.845027466082292*^9, 
   3.8450276312048473`*^9, 3.8450294817805443`*^9, {3.845029512687303*^9, 
   3.845029524968277*^9}, 3.8450295898004103`*^9, 3.8450297321825037`*^9, 
   3.8562924866502542`*^9},
 CellLabel->
  "Out[119]//TraditionalForm=",ExpressionUUID->"5204be24-eada-40e8-8fe0-\
5462ec093abd"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "gammaZode", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gammaZode", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eq4pt5b", "  ", "/.", " ", 
     RowBox[{"D", "[", " ", 
      RowBox[{"psiSolution1", " ", ",", " ", "T"}], " ", "]"}]}], "  ", "/.", 
    " ", 
    RowBox[{"D", "[", " ", 
     RowBox[{"psiSolution1", " ", ",", " ", "z"}], " ", "]"}]}]}], "   ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"gammaZode", "   ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.845027198838662*^9, 3.845027220750946*^9}, 
   3.845027466082861*^9, 3.8450276312050734`*^9, {3.845029529445068*^9, 
   3.845029552628974*^9}, 3.845029589800898*^9},
 CellLabel->
  "In[120]:=",ExpressionUUID->"55caf2a4-fdbc-49b5-94ab-613fa5652a1e"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", 
     RowBox[{"\[Gamma]", "(", 
      RowBox[{"T", ",", "z"}], ")"}]}], 
    RowBox[{"\[PartialD]", "z"}],
    MultilineFunction->None], "\[LongEqual]", 
   RowBox[{"T", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"A", " ", "k", " ", 
       TemplateBox[{"0", 
         RowBox[{"k", " ", "T"}]},
        "BesselJ"], " ", 
       RowBox[{"cos", "(", 
        RowBox[{"k", " ", "z"}], ")"}]}], "-", 
      RowBox[{"B", " ", "k", " ", 
       TemplateBox[{"0", 
         RowBox[{"k", " ", "T"}]},
        "BesselJ"], " ", 
       RowBox[{"sin", "(", 
        RowBox[{"k", " ", "z"}], ")"}]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "A"}], " ", "k", " ", 
       TemplateBox[{"1", 
         RowBox[{"k", " ", "T"}]},
        "BesselJ"], " ", 
       RowBox[{"sin", "(", 
        RowBox[{"k", " ", "z"}], ")"}]}], "-", 
      RowBox[{"B", " ", "k", " ", 
       TemplateBox[{"1", 
         RowBox[{"k", " ", "T"}]},
        "BesselJ"], " ", 
       RowBox[{"cos", "(", 
        RowBox[{"k", " ", "z"}], ")"}]}]}], ")"}]}]}], 
  TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.845027205905389*^9, 3.845027221012879*^9}, 
   3.845027466085033*^9, 3.8450276312052727`*^9, 3.8450295536485786`*^9, 
   3.845029589802258*^9, 3.845029732247239*^9, 3.856292486752388*^9},
 CellLabel->
  "Out[122]//TraditionalForm=",ExpressionUUID->"9279a3f9-6781-4147-82dc-\
93c1440b3ff0"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "gammaRsolution", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gammaRsolution", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"DSolve", "[", " ", 
         RowBox[{"gammaZode", "  ", ",", " ", 
          RowBox[{"\[Gamma]", "[", 
           RowBox[{"T", ",", "z"}], "]"}], " ", ",", " ", 
          RowBox[{"{", 
           RowBox[{"T", ",", "z"}], "}"}]}], " ", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "   ", "/.", " ", 
      RowBox[{"A", "->", " ", "1"}]}], " ", "/.", " ", 
     RowBox[{"B", "->", " ", "1"}]}], "  ", "/.", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "[", "T", "]"}], "->", " ", "0"}]}]}], 
  "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"gammaRsolution", "  ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.845027329684382*^9, 3.8450273607413807`*^9}, 
   3.8450274660855417`*^9, 3.845027631205495*^9, {3.845029558573558*^9, 
   3.845029589802701*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"c54b20cd-6100-42bd-a249-fec422b8d62f"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Gamma]", "(", 
    RowBox[{"T", ",", "z"}], ")"}], "\[Rule]", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], " ", "k", " ", "T", " ", 
    TemplateBox[{"0", 
      RowBox[{"k", " ", "T"}]},
     "BesselJ"], " ", 
    TemplateBox[{"1", 
      RowBox[{"k", " ", "T"}]},
     "BesselJ"], " ", 
    RowBox[{"sin", "(", 
     RowBox[{"2", " ", "k", " ", "z"}], ")"}]}]}], TraditionalForm]], "Output",\

 CellGroupingRules->{"GroupTogetherGrouping", 10007.},
 CellChangeTimes->{{3.845027343581253*^9, 3.845027361267713*^9}, 
   3.845027466087302*^9, 3.845027631205703*^9, {3.845029562445262*^9, 
   3.845029589804056*^9}, 3.845029732377574*^9, 3.856292486891185*^9},
 CellLabel->
  "Out[125]//TraditionalForm=",ExpressionUUID->"a8a178bf-a8c3-43ed-bd80-\
d86ffe4a8002"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Null Tetrad Constructed For Metric 4.4 and Check of Orthogonality\
\>", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.825331953375094*^9, 3.8253320007098494`*^9}, {
  3.84502881936057*^9, 
  3.845028820776849*^9}},ExpressionUUID->"3c6ed1c3-4368-4f53-a968-\
1b3fd39d048c"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[ScriptL]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[ScriptL]", "=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", 
      SqrtBox["2"]], ")"}], 
    RowBox[{"Exp", "[", 
     FractionBox[
      RowBox[{"\[Gamma]", "-", "\[Psi]"}], "2"], "]"}], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1", ",", "0", ",", "0"}], "}"}]}], " ", "/.", 
   " ", "eq4pt4a"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.820933371686145*^9, 3.82093337715728*^9}, 
   3.8209374103413973`*^9, 3.820944472322248*^9, {3.824734441041307*^9, 
   3.824734510605115*^9}, 3.825331967058139*^9},
 CellLabel->
  "In[126]:=",ExpressionUUID->"9b93e1c3-a951-4039-965e-a3ba682010fa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Gamma]", "[", 
          RowBox[{"T", ",", "z"}], "]"}], "-", 
         RowBox[{"\[Psi]", "[", 
          RowBox[{"T", ",", "z"}], "]"}]}], ")"}]}]], 
     SqrtBox["2"]]}], ",", 
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Gamma]", "[", 
         RowBox[{"T", ",", "z"}], "]"}], "-", 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"T", ",", "z"}], "]"}]}], ")"}]}]], 
    SqrtBox["2"]], ",", "0", ",", "0"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.820933237654937*^9, 3.820933379685409*^9, 
  3.820933448095758*^9, 3.820937410341577*^9, 3.820944472322352*^9, 
  3.8243816284850473`*^9, 3.82438185652029*^9, 3.824511849396772*^9, 
  3.82451417433105*^9, 3.824734511574811*^9, 3.825331967058235*^9, 
  3.845028849949169*^9, 3.85629248690948*^9},
 CellLabel->
  "Out[127]=",ExpressionUUID->"84c5a487-bd6b-4b65-8a5a-db15be342553"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[ScriptN]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[ScriptN]", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", 
      SqrtBox["2"]], ")"}], 
    RowBox[{"Exp", "[", 
     FractionBox[
      RowBox[{"\[Gamma]", "-", "\[Psi]"}], "2"], "]"}], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}]}], " ", "/.", " ", 
   "eq4pt4a"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.820933298406392*^9, 3.820933313508857*^9}, 
   3.820937410341757*^9, 3.820944472322452*^9, {3.824734518158283*^9, 
   3.8247345304234*^9}, 3.825331967058333*^9},
 CellLabel->
  "In[128]:=",ExpressionUUID->"67ef653f-7e4c-4be2-b8db-2dc8f1342cc2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Gamma]", "[", 
          RowBox[{"T", ",", "z"}], "]"}], "-", 
         RowBox[{"\[Psi]", "[", 
          RowBox[{"T", ",", "z"}], "]"}]}], ")"}]}]], 
     SqrtBox["2"]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Gamma]", "[", 
          RowBox[{"T", ",", "z"}], "]"}], "-", 
         RowBox[{"\[Psi]", "[", 
          RowBox[{"T", ",", "z"}], "]"}]}], ")"}]}]], 
     SqrtBox["2"]]}], ",", "0", ",", "0"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.820933313826449*^9, 3.820933381335147*^9, 
  3.820933448122315*^9, 3.820937410341963*^9, 3.820944472322535*^9, 
  3.8243816285060167`*^9, 3.824381856534606*^9, 3.824511849423729*^9, 
  3.8245141743647127`*^9, 3.824734531149135*^9, 3.825331967058405*^9, 
  3.8450288499822693`*^9, 3.8562924869455643`*^9},
 CellLabel->
  "Out[129]=",ExpressionUUID->"0178fbc1-ce98-42a2-90a9-e3b8fbe6c657"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[ScriptM]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[ScriptM]", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", 
      SqrtBox["2"]], ")"}], 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{"Exp", "[", 
       FractionBox["\[Psi]", "2"], "]"}], " ", ",", " ", 
      RowBox[{"\[ImaginaryI]", " ", "T", " ", 
       RowBox[{"Exp", "[", 
        FractionBox[
         RowBox[{"-", "\[Psi]"}], "2"], "]"}]}]}], "}"}]}], "/.", " ", 
   "eq4pt4a"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.820933317854281*^9, 3.8209333396620893`*^9}, 
   3.820937410342205*^9, 3.820944472322617*^9, {3.824734536999308*^9, 
   3.82473457387619*^9}, {3.824734615666758*^9, 3.824734619609989*^9}, 
   3.825331967058476*^9},
 CellLabel->
  "In[130]:=",ExpressionUUID->"cd537de1-596f-4536-80c2-a9abce571002"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", 
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"\[Psi]", "[", 
       RowBox[{"T", ",", "z"}], "]"}]}]], 
    SqrtBox["2"]], ",", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{"\[Psi]", "[", 
        RowBox[{"T", ",", "z"}], "]"}]}]], " ", "T"}], 
    SqrtBox["2"]]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.820933339966406*^9, 3.8209333835387917`*^9, 
  3.8209334481343927`*^9, 3.82093741034233*^9, 3.820944472322708*^9, 
  3.8243816285481443`*^9, 3.824381856569952*^9, 3.824511849437441*^9, 
  3.8245141743819103`*^9, 3.824734574531362*^9, 3.824734626242947*^9, 
  3.825331967058549*^9, 3.845028849998456*^9, 3.856292486962718*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"9c109569-80cf-47a6-bb43-6be0f670291a"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[ScriptM]bar", "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[ScriptM]bar", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     FractionBox["1", 
      SqrtBox["2"]], ")"}], 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{"Exp", "[", 
       FractionBox["\[Psi]", "2"], "]"}], " ", ",", 
      RowBox[{
       RowBox[{"-", " ", "\[ImaginaryI]"}], " ", "T", " ", 
       RowBox[{"Exp", "[", 
        FractionBox[
         RowBox[{"-", "\[Psi]"}], "2"], "]"}]}]}], "}"}]}], "/.", " ", 
   "eq4pt4a"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.820933342941945*^9, 3.8209333673030777`*^9}, 
   3.820937410342538*^9, 3.820944472322826*^9, {3.824734581647667*^9, 
   3.8247345860872173`*^9}, 3.8247346243765707`*^9, 3.825331967058639*^9},
 CellLabel->
  "In[132]:=",ExpressionUUID->"cb130e76-1bc2-4e73-9cae-7871bf8eb3bf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", 
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"\[Psi]", "[", 
       RowBox[{"T", ",", "z"}], "]"}]}]], 
    SqrtBox["2"]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"T", ",", "z"}], "]"}]}]], " ", "T"}], 
     SqrtBox["2"]]}]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.820933367920988*^9, 3.820933385725149*^9}, 
   3.82093344816428*^9, 3.820937410342681*^9, 3.820944472322927*^9, 
   3.824381628567217*^9, 3.824381856586792*^9, 3.824511849465397*^9, 
   3.824514174420451*^9, 3.8247345865676413`*^9, 3.82473462808985*^9, 
   3.825331967058707*^9, 3.8450288500330257`*^9, 3.856292487004066*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"87d94a53-e8a8-4125-85c3-b2277b076281"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Always", " ", "check", " ", "if", " ", "indices", " ", "needed", " ", 
    "are", " ", "up", " ", "or", " ", "down"}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"l", " ", "=", " ", 
    RowBox[{"ToTensor", "[", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<NewTensor\>\"", " ", ",", " ", "\"\<l\>\""}], "}"}], " ", 
      ",", " ", 
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", "\[ScriptL]", " ", ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{"-", "\[Mu]"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"n", " ", "=", " ", 
    RowBox[{"ToTensor", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<NewTensor\>\"", " ", ",", " ", "\"\<n\>\""}], " ", "}"}], 
      " ", ",", " ", 
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", "\[ScriptN]", " ", ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{"-", "\[Mu]"}], "}"}]}], " ", "]"}]}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"m", " ", "=", " ", 
    RowBox[{"ToTensor", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<NewTensor\>\"", " ", ",", " ", "\"\<m\>\""}], " ", "}"}], 
      " ", ",", " ", 
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", "\[ScriptM]", " ", ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{"-", "\[Mu]"}], "}"}]}], " ", "]"}]}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"mbar", " ", "=", " ", 
    RowBox[{"ToTensor", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<NewTensor\>\"", " ", ",", " ", "\"\<mbar\>\""}], " ", 
       "}"}], " ", ",", " ", 
      RowBox[{"tensorList", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", "\[ScriptM]bar", " ", 
      ",", " ", 
      RowBox[{"{", 
       RowBox[{"-", "\[Mu]"}], "}"}]}], " ", "]"}], " "}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.820937410342936*^9, 3.8209444723230133`*^9, {3.824734589023963*^9, 
   3.824734593065248*^9}, 3.825331967058776*^9},
 CellLabel->
  "In[134]:=",ExpressionUUID->"2a288edc-56f9-4e67-9467-ec98cac10282"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["l", "\[Mu]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.820932775640643*^9, 3.820933448175404*^9, 
  3.82093741034304*^9, 3.820944472323167*^9, 3.824381628607512*^9, 
  3.824381856622077*^9, 3.824511849476097*^9, 3.824514174436861*^9, 
  3.824734594634781*^9, 3.8247346302483788`*^9, 3.825331967058844*^9, 
  3.8450288500507936`*^9, 3.8562924870271893`*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"214f2ee3-ac81-417d-905c-3b73395f7820"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["n", "\[Mu]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.820932775640643*^9, 3.820933448175404*^9, 
  3.82093741034304*^9, 3.820944472323167*^9, 3.824381628607512*^9, 
  3.824381856622077*^9, 3.824511849476097*^9, 3.824514174436861*^9, 
  3.824734594634781*^9, 3.8247346302483788`*^9, 3.825331967058844*^9, 
  3.8450288500507936`*^9, 3.856292487033016*^9},
 CellLabel->
  "Out[135]=",ExpressionUUID->"c879d141-56c3-4472-ae88-e0226accc012"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["m", "\[Mu]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.820932775640643*^9, 3.820933448175404*^9, 
  3.82093741034304*^9, 3.820944472323167*^9, 3.824381628607512*^9, 
  3.824381856622077*^9, 3.824511849476097*^9, 3.824514174436861*^9, 
  3.824734594634781*^9, 3.8247346302483788`*^9, 3.825331967058844*^9, 
  3.8450288500507936`*^9, 3.856292487036584*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"90f1a21d-0fc9-4f6d-87d7-507e4b1fc8c2"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["mbar", "\[Mu]", ""],
  DisplayForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.820932775640643*^9, 3.820933448175404*^9, 
  3.82093741034304*^9, 3.820944472323167*^9, 3.824381628607512*^9, 
  3.824381856622077*^9, 3.824511849476097*^9, 3.824514174436861*^9, 
  3.824734594634781*^9, 3.8247346302483788`*^9, 3.825331967058844*^9, 
  3.8450288500507936`*^9, 3.856292487040291*^9},
 CellLabel->
  "Out[137]=",ExpressionUUID->"6fcea4b5-a479-49e3-9b80-6aaa2a6d517f"],

Cell[BoxData[
 RowBox[{"TensorValues", "[", 
  RowBox[{"ContractIndices", "[", 
   RowBox[{
    RowBox[{"l", "[", 
     RowBox[{"-", "\[Mu]"}], "]"}], 
    RowBox[{"n", "[", "\[Mu]", "]"}]}], "]"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.8253319670591307`*^9},
 CellLabel->
  "In[138]:=",ExpressionUUID->"1737a436-3fe0-415f-b716-810232b7ff4f"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.8247346428361187`*^9, 3.825331967059209*^9, 
  3.8450288500982428`*^9, 3.8562924870812273`*^9},
 CellLabel->
  "Out[138]=",ExpressionUUID->"b8a12945-e28c-45a8-b2f3-9350190a6f3c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"l", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"l", "[", "\[Mu]", "]"}]}], "]"}], "]"}], " ", "\[Equal]", 
     " ", "0"}], "  ", "//", " ", "Expand"}], " ", "//", " ", "Simplify"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"n", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"n", "[", "\[Mu]", "]"}]}], "]"}], " ", "]"}], "\[Equal]", 
     " ", "0"}], "   ", "//", " ", "Expand"}], " ", "//", " ", "Simplify"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"m", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"m", "[", "\[Mu]", "]"}]}], "]"}], "]"}], " ", "\[Equal]", 
     " ", "0"}], "   ", "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"mbar", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"mbar", "[", "\[Mu]", "]"}]}], "]"}], "]"}], " ", "\[Equal]", 
     " ", "0"}], "  ", "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"l", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"n", "[", "\[Mu]", "]"}]}], "]"}], "]"}], " ", "\[Equal]", 
     " ", 
     RowBox[{"-", "1"}]}], "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"l", "[", "\[Mu]", "]"}], 
        RowBox[{"n", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}]}], "]"}], "]"}], " ", "\[Equal]", " ", 
     
     RowBox[{"-", "1"}]}], "  ", "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"m", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}], 
        RowBox[{"mbar", "[", "\[Mu]", "]"}]}], "]"}], "]"}], " ", "\[Equal]", 
     "  ", "1"}], " ", "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", 
      RowBox[{"ContractIndices", "[", 
       RowBox[{
        RowBox[{"m", "[", "\[Mu]", "]"}], 
        RowBox[{"mbar", "[", 
         RowBox[{"-", "\[Mu]"}], "]"}]}], "]"}], "]"}], " ", "\[Equal]", "  ",
      "1"}], " ", "//", " ", "Expand"}], " ", "//", " ", "FullSimplify"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "completenessDownIndices", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"completenessDownIndices", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"MergeTensors", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"l", "[", 
        RowBox[{"-", "\[Mu]"}], "]"}]}], 
      RowBox[{"n", "[", 
       RowBox[{"-", "\[Nu]"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"n", "[", 
       RowBox[{"-", "\[Mu]"}], "]"}], 
      RowBox[{"l", "[", 
       RowBox[{"-", "\[Nu]"}], "]"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"m", "[", 
       RowBox[{"-", "\[Mu]"}], "]"}], 
      RowBox[{"mbar", "[", 
       RowBox[{"-", "\[Nu]"}], "]"}]}], "+", " ", 
     RowBox[{
      RowBox[{"m", "[", 
       RowBox[{"-", "\[Nu]"}], "]"}], 
      RowBox[{"mbar", "[", 
       RowBox[{"-", "\[Mu]"}], "]"}]}]}], "]"}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", " ", "completenessDownIndices", " ", "]"}], 
     "   ", "//", " ", "Expand"}], " ", "//", " ", "FullSimplify"}], " ", "//",
    " ", "MatrixForm"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", "metric4pt4", "]"}], " ", "\[Equal]", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"Flatten", "[", " ", 
        RowBox[{
        "TensorValues", "[", " ", "completenessDownIndices", " ", "]"}], 
        "]"}]}], " ", "]"}], " ", "//", " ", "Expand"}], " ", "//", " ", 
    "FullSimplify"}], "  ", "//", " ", "TableForm"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "completenessUpIndices", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"completenessUpIndices", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"MergeTensors", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"l", "[", "\[Mu]", "]"}]}], 
      RowBox[{"n", "[", "\[Nu]", "]"}]}], "-", 
     RowBox[{
      RowBox[{"n", "[", "\[Mu]", "]"}], 
      RowBox[{"l", "[", "\[Nu]", "]"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"m", "[", "\[Mu]", "]"}], 
      RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "+", " ", 
     RowBox[{
      RowBox[{"m", "[", "\[Nu]", "]"}], 
      RowBox[{"mbar", "[", "\[Mu]", "]"}]}]}], "]"}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TensorValues", "[", " ", "completenessUpIndices", " ", "]"}], 
     "   ", "//", " ", "Expand"}], " ", "//", " ", "FullSimplify"}], " ", "//",
    " ", "MatrixForm"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", "inverse4pt4", "]"}], " ", "\[Equal]", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", " ", 
       RowBox[{"TensorValues", "[", " ", "completenessUpIndices", " ", "]"}], 
       "]"}]}], " ", "]"}], "  ", "//", " ", "Expand"}], " ", "//", " ", 
   "FullSimplify"}], "  ", "//", " ", "TableForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.820937410343767*^9, 3.820944472323543*^9, {3.8237794627048893`*^9, 
   3.823779471575405*^9}, 3.823780788700976*^9, {3.824734341914637*^9, 
   3.824734349680805*^9}, {3.824734647259974*^9, 3.824734670762793*^9}, 
   3.825331967059277*^9},
 CellLabel->
  "In[139]:=",ExpressionUUID->"5684b042-bb35-4b91-8a2f-011d44b30efc"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.824734607884924*^9, 3.8247346331018744`*^9}, 
   3.824734672763027*^9, 3.825331967059347*^9, 3.8450288501482573`*^9, 
   3.856292487138042*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"22abb51a-1de1-479e-ae3d-b7f73cfd721d"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.824734607884924*^9, 3.8247346331018744`*^9}, 
   3.824734672763027*^9, 3.825331967059347*^9, 3.8450288501482573`*^9, 
   3.856292487144434*^9},
 CellLabel->
  "Out[140]=",ExpressionUUID->"577e3cf8-bfa8-46e6-a94a-947131812c7c"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.824734607884924*^9, 3.8247346331018744`*^9}, 
   3.824734672763027*^9, 3.825331967059347*^9, 3.8450288501482573`*^9, 
   3.8562924871489563`*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"7ff262cf-e136-4425-aafc-bfb83ff8fb13"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.824734607884924*^9, 3.8247346331018744`*^9}, 
   3.824734672763027*^9, 3.825331967059347*^9, 3.8450288501482573`*^9, 
   3.856292487153754*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"5b1e0886-847d-43db-b687-73e46109ebc3"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.824734607884924*^9, 3.8247346331018744`*^9}, 
   3.824734672763027*^9, 3.825331967059347*^9, 3.8450288501482573`*^9, 
   3.856292487157263*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"aecbe174-dd45-42e0-b5f5-845a8061f08c"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.824734607884924*^9, 3.8247346331018744`*^9}, 
   3.824734672763027*^9, 3.825331967059347*^9, 3.8450288501482573`*^9, 
   3.856292487168027*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"0464574e-334f-4205-9af8-47514447098b"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.824734607884924*^9, 3.8247346331018744`*^9}, 
   3.824734672763027*^9, 3.825331967059347*^9, 3.8450288501482573`*^9, 
   3.8562924871991587`*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"867209a1-7232-4e51-b0f3-eaa9e05de325"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.824734607884924*^9, 3.8247346331018744`*^9}, 
   3.824734672763027*^9, 3.825331967059347*^9, 3.8450288501482573`*^9, 
   3.856292487203497*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"35b955c9-bb5c-405b-9f8f-c75e664573d4"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"\[Gamma]", "[", 
          RowBox[{"T", ",", "z"}], "]"}], "-", 
         RowBox[{"\[Psi]", "[", 
          RowBox[{"T", ",", "z"}], "]"}]}]]}], "0", "0", "0"},
     {"0", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"\[Gamma]", "[", 
         RowBox[{"T", ",", "z"}], "]"}], "-", 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"T", ",", "z"}], "]"}]}]], "0", "0"},
     {"0", "0", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[Psi]", "[", 
        RowBox[{"T", ",", "z"}], "]"}]], "0"},
     {"0", "0", "0", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         RowBox[{"\[Psi]", "[", 
          RowBox[{"T", ",", "z"}], "]"}]}]], " ", 
       SuperscriptBox["T", "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.824734607884924*^9, 3.8247346331018744`*^9}, 
   3.824734672763027*^9, 3.825331967059347*^9, 3.8450288501482573`*^9, 
   3.8562924872575493`*^9},
 CellLabel->
  "Out[149]//MatrixForm=",ExpressionUUID->"999d5234-8e0f-450f-ad79-\
ee10ce55e487"],

Cell[BoxData[
 TagBox["True",
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.824734607884924*^9, 3.8247346331018744`*^9}, 
   3.824734672763027*^9, 3.825331967059347*^9, 3.8450288501482573`*^9, 
   3.856292487261979*^9},
 CellLabel->
  "Out[150]//TableForm=",ExpressionUUID->"a66ef6d8-d63f-4f4f-b671-\
e36d5ecb31b1"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"\[Gamma]", "[", 
           RowBox[{"T", ",", "z"}], "]"}]}], "+", 
         RowBox[{"\[Psi]", "[", 
          RowBox[{"T", ",", "z"}], "]"}]}]]}], "0", "0", "0"},
     {"0", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"\[Gamma]", "[", 
          RowBox[{"T", ",", "z"}], "]"}]}], "+", 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"T", ",", "z"}], "]"}]}]], "0", "0"},
     {"0", "0", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"T", ",", "z"}], "]"}]}]], "0"},
     {"0", "0", "0", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"T", ",", "z"}], "]"}]], 
       SuperscriptBox["T", "2"]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.824734607884924*^9, 3.8247346331018744`*^9}, 
   3.824734672763027*^9, 3.825331967059347*^9, 3.8450288501482573`*^9, 
   3.856292487313208*^9},
 CellLabel->
  "Out[153]//MatrixForm=",ExpressionUUID->"b9e30171-c6a5-41be-af4c-\
bb02f322727b"],

Cell[BoxData[
 TagBox["True",
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.824734607884924*^9, 3.8247346331018744`*^9}, 
   3.824734672763027*^9, 3.825331967059347*^9, 3.8450288501482573`*^9, 
   3.856292487317524*^9},
 CellLabel->
  "Out[154]//TableForm=",ExpressionUUID->"08976449-26d2-4e07-ae66-\
65cf2dc16fa2"]
}, Closed]],

Cell[CellGroupData[{

Cell["Newman Penrose Quantities Calculated For Metric 4.4", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8253320379660788`*^9, 3.8253320672058277`*^9}, {
  3.8450288111448727`*^9, 
  3.845028811288884*^9}},ExpressionUUID->"31752d8e-85ce-41fb-a6b9-\
8a3955e2c99e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "spinCoefficientReplace", "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spinCoefficientReplace", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Alpha]", "\[Rule]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "/", "2"}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MergeTensors", "[", 
               RowBox[{
                RowBox[{"CovariantD", "[", " ", 
                 RowBox[{
                  RowBox[{"l", "[", 
                   RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                  RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                RowBox[{"n", "[", "\[Mu]", "]"}], " ", 
                RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
              "TensorValues"}], " ", ")"}], "-", "\[IndentingNewLine]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MergeTensors", "[", 
               RowBox[{
                RowBox[{"CovariantD", "[", " ", 
                 RowBox[{
                  RowBox[{"m", "[", 
                   RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                  RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
                RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
              "TensorValues"}], ")"}]}], ")"}]}], " ", ")"}]}], " ", "//", 
       "Expand"}], " ", "//", " ", "Simplify"}], "  ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Beta]", " ", "\[Rule]", " ", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "/", "2"}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MergeTensors", "[", " ", 
               RowBox[{
                RowBox[{"CovariantD", "[", " ", 
                 RowBox[{
                  RowBox[{"l", "[", 
                   RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                  RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                RowBox[{"n", "[", "\[Mu]", "]"}], 
                RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
              "TensorValues"}], ")"}], "-", " ", "\[IndentingNewLine]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MergeTensors", "[", 
               RowBox[{
                RowBox[{"CovariantD", "[", " ", 
                 RowBox[{
                  RowBox[{"m", "[", 
                   RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                  RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
                RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
              "TensorValues"}], " ", ")"}]}], ")"}]}], ")"}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "Simplify"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Gamma]", " ", "\[Rule]", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "something", " ", "weird", " ", "here", " ", "correct", " ", 
          "definition", " ", "off", " ", "by", " ", "minus", " ", "sign"}], 
         " ", "*)"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            FractionBox["1", "2"], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"MergeTensors", "[", 
                 RowBox[{
                  RowBox[{"CovariantD", "[", " ", 
                   RowBox[{
                    RowBox[{"l", "[", 
                    RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                    RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                  RowBox[{"n", "[", "\[Mu]", "]"}], 
                  RowBox[{"n", "[", "\[Nu]", "]"}]}], " ", "]"}], " ", "//", 
                " ", "TensorValues"}], "  ", "//", " ", "Expand"}], "  ", 
              ")"}], "-", "\[IndentingNewLine]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"MergeTensors", "[", 
                  RowBox[{
                   RowBox[{"CovariantD", "[", " ", 
                    RowBox[{
                    RowBox[{"m", "[", 
                    RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                    RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                   RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
                   RowBox[{"n", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
                 "TensorValues"}], " ", "//", " ", "Expand"}], "  ", "//", 
               " ", "FullSimplify"}], " ", ")"}]}], ")"}]}], " ", "//", " ", 
          "Expand"}], " ", ")"}]}], "  ", "//", " ", "Expand"}], " ", "//", 
      " ", "Simplify"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CurlyEpsilon]", " ", "\[Rule]", " ", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", "2"}], ")"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"MergeTensors", "[", 
                   RowBox[{
                    RowBox[{"CovariantD", "[", 
                    RowBox[{
                    RowBox[{"l", "[", 
                    RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                    RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                    RowBox[{"n", "[", "\[Mu]", "]"}], " ", 
                    RowBox[{"l", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ",
                   "TensorValues"}], "  ", "//", " ", "Expand"}], "  ", "//", 
                " ", "FullSimplify"}], "  ", ")"}], "  ", "-", " ", 
              "\[IndentingNewLine]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"MergeTensors", "[", " ", 
                   RowBox[{
                    RowBox[{"CovariantD", "[", " ", 
                    RowBox[{
                    RowBox[{"m", "[", 
                    RowBox[{"-", "\[Mu]"}], "]"}], ",", 
                    RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
                    RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
                    RowBox[{"l", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ",
                   "TensorValues"}], " ", "//", " ", "Expand"}], " ", "//", 
                " ", "FullSimplify"}], ")"}]}], " ", ")"}]}], " ", "//", " ", 
           "Expand"}], "  ", "//", " ", "FullSimplify"}], " ", ")"}]}], " ", "//",
        " ", "Expand"}], " ", "//", " ", "Simplify"}], "  ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Kappa]", "\[Rule]", 
        RowBox[{"(", "  ", 
         RowBox[{
          RowBox[{"MergeTensors", "[", " ", 
           RowBox[{
            RowBox[{"CovariantD", "[", " ", 
             RowBox[{
              RowBox[{"l", "[", 
               RowBox[{"-", "\[Mu]"}], "]"}], " ", ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
            RowBox[{"m", "[", "\[Mu]", "]"}], " ", 
            RowBox[{"l", "[", "\[Nu]", "]"}]}], "  ", "]"}], "  ", "//", " ", 
          "TensorValues"}], " ", ")"}]}], "  ", "//", " ", "Expand"}], " ", "//",
       " ", "Simplify"}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]", "\[Rule]", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"note", " ", "minus", " ", "sign"}], " ", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "*", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"MergeTensors", "[", " ", 
            RowBox[{
             RowBox[{"CovariantD", "[", " ", 
              RowBox[{
               RowBox[{"n", "[", 
                RowBox[{"-", "\[Mu]"}], "]"}], ",", 
               RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
             RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
             RowBox[{"mbar", "[", "\[Nu]", "]"}]}], " ", "]"}], "  ", "//", 
           " ", "TensorValues"}], " ", "//", " ", "Expand"}], " ", "//", " ", 
         "FullSimplify"}], ")"}]}]}], "  ", ",", "\[IndentingNewLine]", 
     RowBox[{"\[Mu]", "\[Rule]", " ", 
      RowBox[{"(*", 
       RowBox[{"note", " ", "minus", " ", "sign"}], " ", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "*", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"MergeTensors", " ", "[", " ", 
            RowBox[{
             RowBox[{"CovariantD", "[", " ", 
              RowBox[{
               RowBox[{"n", "[", 
                RowBox[{"-", "\[Mu]"}], "]"}], " ", ",", " ", 
               RowBox[{"-", "\[Nu]"}]}], " ", "]"}], " ", 
             RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
             RowBox[{"m", "[", "\[Nu]", "]"}]}], " ", "]"}], " ", "//", " ", 
           "TensorValues"}], "  ", "//", " ", "Expand"}], "  ", "//", " ", 
         "FullSimplify"}], " ", ")"}]}]}], "  ", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Nu]", "\[Rule]", " ", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"MergeTensors", "[", " ", 
           RowBox[{
            RowBox[{"CovariantD", "[", " ", 
             RowBox[{
              RowBox[{"n", "[", 
               RowBox[{"-", "\[Mu]"}], "]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"m", "[", "\[Mu]", "]"}], " ", 
            RowBox[{"n", "[", "\[Nu]", "]"}]}], " ", "]"}], " ", "//", " ", 
          "TensorValues"}], " ", ")"}]}], " ", "//", " ", "Expand"}], " ", "//",
       " ", "Simplify"}], "  ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"\[Pi]", "\[Rule]", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"Note", " ", "minus", " ", "sign"}], " ", "*)"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "*", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"MergeTensors", "[", 
            RowBox[{
             RowBox[{"CovariantD", "[", " ", 
              RowBox[{
               RowBox[{"n", "[", 
                RowBox[{"-", "\[Mu]"}], "]"}], ",", 
               RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
             RowBox[{"mbar", "[", "\[Mu]", "]"}], " ", 
             RowBox[{"l", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
           "TensorValues"}], "  ", "//", " ", "Expand"}], "  ", "//", " ", 
         "Simplify"}], " ", ")"}]}]}], " ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"\[Rho]", " ", "\[Rule]", 
      RowBox[{"(", "  ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"MergeTensors", "[", " ", 
           RowBox[{
            RowBox[{"CovariantD", "[", " ", 
             RowBox[{
              RowBox[{"l", "[", 
               RowBox[{"-", "\[Mu]"}], "]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
            RowBox[{"m", "[", "\[Mu]", "]"}], " ", 
            RowBox[{"mbar", "[", "\[Nu]", "]"}]}], " ", "]"}], " ", "//", " ",
           "TensorValues"}], "  ", "//", " ", "Expand"}], " ", "//", " ", 
        "FullSimplify"}], " ", ")"}]}], "  ", ",", " ", 
     RowBox[{"\[Sigma]", "\[Rule]", 
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"MergeTensors", "[", " ", 
           RowBox[{
            RowBox[{"CovariantD", "[", 
             RowBox[{
              RowBox[{"l", "[", 
               RowBox[{"-", "\[Mu]"}], "]"}], " ", ",", " ", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
            RowBox[{"m", "[", "\[Mu]", "]"}], " ", 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], " ", "//", " ", 
          "TensorValues"}], "  ", "//", " ", "Expand"}], " ", "//", " ", 
        "FullSimplify"}], ")"}]}], "  ", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"\[Tau]", "\[Rule]", 
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"MergeTensors", "[", " ", 
           RowBox[{
            RowBox[{"CovariantD", "[", " ", 
             RowBox[{
              RowBox[{"l", "[", 
               RowBox[{"-", "\[Mu]"}], "]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], " ", 
            RowBox[{"m", "[", "\[Mu]", "]"}], " ", 
            RowBox[{"n", "[", "\[Nu]", " ", "]"}]}], "]"}], "//", " ", 
          "TensorValues"}], " ", "//", " ", "Expand"}], " ", "//", " ", 
        "Simplify"}], "  ", ")"}]}]}], "   ", "\[IndentingNewLine]", "}"}]}], 
  " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spinCoefficientReplace", "   ", "//", " ", "TableForm"}], " ", "//",
   " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.820667112307205*^9, {3.820691856877*^9, 3.8206918635710173`*^9}, {
   3.820692627802567*^9, 3.820692798874284*^9}, {3.820793246159666*^9, 
   3.8207932735596313`*^9}, {3.820933088885683*^9, 3.820933089524383*^9}, 
   3.820934520109788*^9, 3.8209373342691517`*^9, {3.82100327861626*^9, 
   3.8210032838458157`*^9}, {3.821003386912135*^9, 3.821003405643714*^9}, {
   3.8210037363804407`*^9, 3.8210037487041388`*^9}, {3.82437982699832*^9, 
   3.824379841631565*^9}, {3.824382108710671*^9, 3.8243821568691874`*^9}, 
   3.8253320511003304`*^9},
 CellLabel->
  "In[155]:=",ExpressionUUID->"2f052908-6f87-45b7-b08e-d7f969ac2ff2"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{"\[Alpha]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Beta]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Gamma]", "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}], "-", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None], "-", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", "z"}],
             MultilineFunction->None], "-", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None], "+", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", "z"}],
             MultilineFunction->None]}], ")"}]}], 
         RowBox[{"4", " ", 
          SqrtBox["2"]}]]}]},
      {
       RowBox[{"\[CurlyEpsilon]", "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}], "-", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None]}], "-", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", "z"}],
             MultilineFunction->None], "+", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None], "+", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", "z"}],
             MultilineFunction->None]}], ")"}]}], 
         RowBox[{"4", " ", 
          SqrtBox["2"]}]]}]},
      {
       RowBox[{"\[Kappa]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Lambda]", "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}], "-", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], ")"}]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"T", " ", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}], 
               RowBox[{"\[PartialD]", "T"}],
               MultilineFunction->None]}], "-", 
             RowBox[{"T", " ", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}], 
               RowBox[{"\[PartialD]", "z"}],
               MultilineFunction->None]}], "-", "1"}], ")"}]}], 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "T"}]]}]}]},
      {
       RowBox[{"\[Mu]", "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}], "-", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], ")"}]}]], 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", "T"}]]}]}]},
      {
       RowBox[{"\[Nu]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Pi]", "\[Rule]", "0"}]},
      {
       RowBox[{"\[Rho]", "\[Rule]", 
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}], "-", 
             RowBox[{"\[Gamma]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]}], ")"}]}]], 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "T"}]]}]},
      {
       RowBox[{"\[Sigma]", "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}], "-", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"T", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "T"}],
                MultilineFunction->None], "+", 
               FractionBox[
                RowBox[{"\[PartialD]", 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", "z"}],
                MultilineFunction->None]}], ")"}]}], "-", "1"}], ")"}]}], 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "T"}]]}]},
      {
       RowBox[{"\[Tau]", "\[Rule]", "0"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.824734692628985*^9, 3.825332051100423*^9, 
  3.8450288528130503`*^9, 3.856292489663437*^9},
 CellLabel->
  "Out[157]//TraditionalForm=",ExpressionUUID->"d8ecf2cd-edc9-4f89-9610-\
ebfdf470ef0d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "ricciScalarsReplace", "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ricciScalarsReplace", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "OO"], "\[Rule]", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"could", " ", "use", " ", "invisible", " ", "comma"}], ",", 
          " ", 
          RowBox[{
          "but", " ", "shows", " ", "up", " ", "in", " ", "output", " ", "so",
            " ", "use", " ", "letter", " ", "O"}]}], "  ", "*)"}], " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Mu]", "]"}], 
            RowBox[{"l", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "O1"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Mu]", "]"}], 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "O2"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"m", "[", "\[Mu]", "]"}], 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "10"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Mu]", "]"}], 
            RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "  ", "//",
        " ", "Expand"}], " ", "//", " ", "Simplify"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "11"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "4"], ")"}], "*", 
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{"TensorValues", "[", 
             RowBox[{"MergeTensors", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"tensorList", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], "[", 
                RowBox[{
                 RowBox[{"-", "\[Mu]"}], ",", 
                 RowBox[{"-", "\[Nu]"}]}], "]"}], 
               RowBox[{"l", "[", "\[Mu]", "]"}], 
               RowBox[{"n", "[", "\[Nu]", "]"}]}], "]"}], "]"}], ")"}], "+", 
           " ", 
           RowBox[{"(", 
            RowBox[{"TensorValues", "[", 
             RowBox[{"MergeTensors", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"tensorList", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], "[", 
                RowBox[{
                 RowBox[{"-", "\[Mu]"}], ",", 
                 RowBox[{"-", "\[Nu]"}]}], "]"}], 
               RowBox[{"m", "[", "\[Mu]", "]"}], 
               RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], "]"}], ")"}]}], 
          ")"}]}]}], " ", "//", " ", "Expand"}], " ", "//", " ", 
      "FullSimplify"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "12"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"n", "[", "\[Mu]", "]"}], 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "20"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"mbar", "[", "\[Mu]", "]"}], 
            RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", 
       " ", "Expand"}], " ", "//", " ", "Simplify"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "21"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"n", "[", "\[Mu]", "]"}], 
            RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "  ", "//",
        " ", "Expand"}], " ", "//", " ", "Simplify"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "22"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"-", "1"}], "2"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"n", "[", "\[Mu]", "]"}], 
            RowBox[{"n", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", " ", 
       "Expand"}], " ", "//", " ", "FullSimplify"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalLambda]", "\[Rule]", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          FractionBox["1", "24"], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"tensorList", "[", 
           RowBox[{"[", "5", "]"}], "]"}], "]"}]}]}], "//", " ", "Expand"}], 
      " ", "//", " ", "FullSimplify"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ricciScalarsReplace", "   ", "//", " ", "TableForm"}], " ", "//", 
  " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8207941683808823`*^9, 3.820794170188884*^9}, {
   3.820794210004217*^9, 3.820794295371916*^9}, {3.820794355374641*^9, 
   3.8207944173021507`*^9}, {3.8209358220143003`*^9, 3.820935854138783*^9}, 
   3.820937334270711*^9, {3.821003405651829*^9, 3.821003467622817*^9}, {
   3.821003736380765*^9, 3.821003748704556*^9}, {3.824235099273512*^9, 
   3.824235208081946*^9}, 3.8253320511005163`*^9},
 CellLabel->
  "In[158]:=",ExpressionUUID->"961ac902-1190-4ab7-8249-4f3ca053e3bc"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "OO"], "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}], "-", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"2", " ", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}], 
               RowBox[{"\[PartialD]", "T"}],
               MultilineFunction->None]}]}], "-", 
            RowBox[{"2", " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "z"}],
              MultilineFunction->None]}], "+", 
            RowBox[{"T", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None], "+", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None]}], ")"}], "2"]}]}], ")"}]}], 
         RowBox[{"8", " ", "T"}]]}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "O1"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "O2"], "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}], "-", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"T", " ", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None]}]}], "+", 
            RowBox[{"T", " ", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[PartialD]", "2"], 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", 
               SuperscriptBox["z", "2"]}],
              MultilineFunction->None]}], "-", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None]}], ")"}]}], 
         RowBox[{"4", " ", "T"}]]}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "10"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "11"], "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}], "-", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"T", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"], "-", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], ")"}], "2"]}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None]}]}], ")"}]}], 
         RowBox[{"16", " ", "T"}]]}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "12"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "20"], "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}], "-", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"T", " ", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[PartialD]", "2"], 
                RowBox[{"\[Psi]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}], 
               RowBox[{"\[PartialD]", 
                SuperscriptBox["T", "2"]}],
               MultilineFunction->None]}]}], "+", 
            RowBox[{"T", " ", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[PartialD]", "2"], 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", 
               SuperscriptBox["z", "2"]}],
              MultilineFunction->None]}], "-", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None]}], ")"}]}], 
         RowBox[{"4", " ", "T"}]]}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "21"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "22"], "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}], "-", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"2", " ", 
              FractionBox[
               RowBox[{"\[PartialD]", 
                RowBox[{"\[Gamma]", "(", 
                 RowBox[{"T", ",", "z"}], ")"}]}], 
               RowBox[{"\[PartialD]", "T"}],
               MultilineFunction->None]}]}], "+", 
            RowBox[{"2", " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "z"}],
              MultilineFunction->None]}], "+", 
            RowBox[{"T", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None], "-", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], ")"}], "2"]}]}], ")"}]}], 
         RowBox[{"8", " ", "T"}]]}]},
      {
       RowBox[{"\[CapitalLambda]", "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}], "-", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"T", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["T", "2"]}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Gamma]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}], "+", 
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", 
                  SuperscriptBox["z", "2"]}],
                 MultilineFunction->None]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"], "-", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], ")"}], "2"]}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None]}]}], ")"}]}], 
         RowBox[{"48", " ", "T"}]]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.824734714662003*^9, 3.825332051100607*^9, 
  3.845028853741218*^9, 3.8562924904907103`*^9},
 CellLabel->
  "Out[160]//TraditionalForm=",ExpressionUUID->"5c1ecbf1-433e-4717-9428-\
fe00155d559e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "weylScalarsReplace", "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Definitions", " ", "from", " ", "Griffiths"}], " ", "*)"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"weylScalarsReplace", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", "   ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "0"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], ",", 
              RowBox[{"-", "\[Lambda]"}], ",", 
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Kappa]", "]"}], 
            RowBox[{"m", "[", "\[Lambda]", "]"}], 
            RowBox[{"l", "[", "\[Mu]", "]"}], 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", " ", 
       "Expand"}], " ", "//", " ", "FullSimplify"}], " ", ",", " ", "\n", 
     "\t ", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "1"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], ",", 
              RowBox[{"-", "\[Lambda]"}], ",", 
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Kappa]", "]"}], 
            RowBox[{"n", "[", "\[Lambda]", "]"}], 
            RowBox[{"l", "[", "\[Mu]", "]"}], 
            RowBox[{"m", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", " ", 
       "Expand"}], " ", "//", " ", "FullSimplify"}], " ", ",", " ", "\n", 
     "\t ", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "2"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], ",", 
              RowBox[{"-", "\[Lambda]"}], ",", 
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"l", "[", "\[Kappa]", "]"}], 
            RowBox[{"m", "[", "\[Lambda]", "]"}], 
            RowBox[{"mbar", "[", "\[Mu]", "]"}], 
            RowBox[{"n", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], " ", "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], ",", " ", "\n", 
     "\t ", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "3"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], ",", 
              RowBox[{"-", "\[Lambda]"}], ",", 
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"n", "[", "\[Kappa]", "]"}], 
            RowBox[{"l", "[", "\[Lambda]", "]"}], 
            RowBox[{"n", "[", "\[Mu]", "]"}], 
            RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}], " ", ",", " ", "\n",
      "\t ", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "4"], "\[Rule]", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "*", 
         RowBox[{"TensorValues", "[", 
          RowBox[{"MergeTensors", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tensorList", "[", 
              RowBox[{"[", "8", "]"}], "]"}], "[", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], ",", 
              RowBox[{"-", "\[Lambda]"}], ",", 
              RowBox[{"-", "\[Mu]"}], ",", 
              RowBox[{"-", "\[Nu]"}]}], "]"}], 
            RowBox[{"n", "[", "\[Kappa]", "]"}], 
            RowBox[{"mbar", "[", "\[Lambda]", "]"}], 
            RowBox[{"n", "[", "\[Mu]", "]"}], 
            RowBox[{"mbar", "[", "\[Nu]", "]"}]}], "]"}], "]"}]}]}], "//", 
       " ", "Expand"}], " ", "//", " ", "FullSimplify"}]}], 
    "\[IndentingNewLine]", "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"weylScalarsReplace", "  ", "//", " ", "TableForm"}], " ", "//", 
  " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.820667112308317*^9, {3.8206919186046867`*^9, 3.820691920188485*^9}, {
   3.820794507895151*^9, 3.820794582921618*^9}, 3.820937334271385*^9, 
   3.821003405651976*^9, 3.825332051100696*^9},
 CellLabel->
  "In[161]:=",ExpressionUUID->"e665ad34-1230-43a9-92c5-71d6a001317e"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "0"], "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}], "-", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"T", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[PartialD]", "2"], 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                  RowBox[{"\[PartialD]", "z"}]}],
                 MultilineFunction->None]}], "+", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None], "+", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["z", "2"]}],
                MultilineFunction->None], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], "+", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "z"}],
                   MultilineFunction->None]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "T"}],
                    MultilineFunction->None]}], "+", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], "+", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "z"}],
                   MultilineFunction->None]}], ")"}]}]}], ")"}]}], "-", 
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "z"}],
              MultilineFunction->None], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"T", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], "+", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "z"}],
                   MultilineFunction->None]}], ")"}]}], "-", "1"}], ")"}]}], 
            "+", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None]}], ")"}]}], 
         RowBox[{"4", " ", "T"}]]}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "1"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "2"], "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}], "-", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"T", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None], "-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None], "-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Gamma]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["z", "2"]}],
                MultilineFunction->None], "+", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["z", "2"]}],
                MultilineFunction->None], "-", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "T"}],
                  MultilineFunction->None], ")"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"\[PartialD]", 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{"\[PartialD]", "z"}],
                  MultilineFunction->None], ")"}], "2"]}], ")"}]}], "+", 
            RowBox[{"2", " ", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None]}]}], ")"}]}], 
         RowBox[{"12", " ", "T"}]]}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "3"], "\[Rule]", "0"}]},
      {
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "4"], "\[Rule]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}], "-", 
            RowBox[{"\[Gamma]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"T", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"2", " ", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["\[PartialD]", "2"], 
                   RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
                   RowBox[{"\[PartialD]", "z"}]}],
                  MultilineFunction->None]}]}], "+", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["T", "2"]}],
                MultilineFunction->None], "+", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[PartialD]", "2"], 
                 RowBox[{"\[Psi]", "(", 
                  RowBox[{"T", ",", "z"}], ")"}]}], 
                RowBox[{"\[PartialD]", 
                 SuperscriptBox["z", "2"]}],
                MultilineFunction->None], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "z"}],
                   MultilineFunction->None], "-", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Gamma]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], "-", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "T"}],
                   MultilineFunction->None], "+", 
                  FractionBox[
                   RowBox[{"\[PartialD]", 
                    RowBox[{"\[Psi]", "(", 
                    RowBox[{"T", ",", "z"}], ")"}]}], 
                   RowBox[{"\[PartialD]", "z"}],
                   MultilineFunction->None]}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "z"}],
              MultilineFunction->None], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "T"}],
                 MultilineFunction->None]}], "-", 
               RowBox[{"T", " ", 
                FractionBox[
                 RowBox[{"\[PartialD]", 
                  RowBox[{"\[Psi]", "(", 
                   RowBox[{"T", ",", "z"}], ")"}]}], 
                 RowBox[{"\[PartialD]", "z"}],
                 MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
            FractionBox[
             RowBox[{"\[PartialD]", 
              RowBox[{"\[Gamma]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{"\[PartialD]", "T"}],
             MultilineFunction->None]}], ")"}]}], 
         RowBox[{"4", " ", "T"}]]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.824734731756105*^9, 3.825332051100762*^9, 
  3.8450288600634613`*^9, 3.856292496413032*^9},
 CellLabel->
  "Out[163]//TraditionalForm=",ExpressionUUID->"4f772f55-0140-4b1b-a587-\
ec14bb1392fc"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eq4pt6a", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq4pt6a", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"weylScalarsReplace", "[", 
    RowBox[{"[", "5", "]"}], "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq4pt6a", " ", "//", " ", "pdConv"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.824734749834408*^9, 3.824734770073653*^9}, 
   3.8253320511008587`*^9},
 CellLabel->
  "In[164]:=",ExpressionUUID->"1de58cc2-3057-437e-86c1-2b7674eb4cb9"],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["\[CapitalPsi]", "4"], "\[Rule]", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"\[Psi]", "(", 
        RowBox[{"T", ",", "z"}], ")"}], "-", 
       RowBox[{"\[Gamma]", "(", 
        RowBox[{"T", ",", "z"}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"T", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"2", " ", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[PartialD]", "2"], 
              RowBox[{"\[Psi]", "(", 
               RowBox[{"T", ",", "z"}], ")"}]}], 
             RowBox[{
              RowBox[{"\[PartialD]", "T"}], "\[ThinSpace]", 
              RowBox[{"\[PartialD]", "z"}]}],
             MultilineFunction->None]}]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["T", "2"]}],
           MultilineFunction->None], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[PartialD]", "2"], 
            RowBox[{"\[Psi]", "(", 
             RowBox[{"T", ",", "z"}], ")"}]}], 
           RowBox[{"\[PartialD]", 
            SuperscriptBox["z", "2"]}],
           MultilineFunction->None], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "z"}],
              MultilineFunction->None], "-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Gamma]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], "-", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "T"}],
              MultilineFunction->None], "+", 
             FractionBox[
              RowBox[{"\[PartialD]", 
               RowBox[{"\[Psi]", "(", 
                RowBox[{"T", ",", "z"}], ")"}]}], 
              RowBox[{"\[PartialD]", "z"}],
              MultilineFunction->None]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Gamma]", "(", 
           RowBox[{"T", ",", "z"}], ")"}]}], 
         RowBox[{"\[PartialD]", "z"}],
         MultilineFunction->None], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"T", " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]}], 
            RowBox[{"\[PartialD]", "T"}],
            MultilineFunction->None]}], "-", 
          RowBox[{"T", " ", 
           FractionBox[
            RowBox[{"\[PartialD]", 
             RowBox[{"\[Psi]", "(", 
              RowBox[{"T", ",", "z"}], ")"}]}], 
            RowBox[{"\[PartialD]", "z"}],
            MultilineFunction->None]}], "-", "1"}], ")"}]}], "+", 
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{"\[Gamma]", "(", 
          RowBox[{"T", ",", "z"}], ")"}]}], 
        RowBox[{"\[PartialD]", "T"}],
        MultilineFunction->None]}], ")"}]}], 
    RowBox[{"4", " ", "T"}]]}], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.824734750672817*^9, 3.824734770754492*^9}, 
   3.8253320511009417`*^9, 3.8450288601584167`*^9, 3.856292496497995*^9},
 CellLabel->
  "Out[166]//TraditionalForm=",ExpressionUUID->"12f8aa8c-6f14-4f97-9499-\
58ba1327e4b7"]
}, Closed]]
},
WindowSize->{1276, 671},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
FrontEndVersion->"13.0 for Mac OS X x86 (64-bit) (February 4, 2022)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"a0f885c5-2504-4d1d-964c-da32435ac40b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 2079, 31, 221, "Title",ExpressionUUID->"71b624b9-4476-4cca-9ec4-f4c0b971baa7",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[2662, 55, 1710, 27, 94, "Author",ExpressionUUID->"bcfac615-3a6e-42b9-92e5-fbe5df6a5967",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[4409, 87, 228, 4, 69, "Section",ExpressionUUID->"9767b7cc-003e-42de-906b-e99ddbf024d8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4640, 93, 433, 9, 63, "Input",ExpressionUUID->"f876c127-7e2e-49a1-8749-bd91c5fb5f74",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[5076, 104, 1844, 28, 43, "Output",ExpressionUUID->"0ba7ff5b-abd3-47ff-804b-0da417527213",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Closed]],
Cell[CellGroupData[{
Cell[6957, 137, 545, 9, 55, "Section",ExpressionUUID->"d3628458-ed22-467e-a08b-9370de19b6ec",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[7505, 148, 687, 12, 63, "Input",ExpressionUUID->"9c482546-f8d7-47c1-bfc6-4e46839b59bd",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[8195, 162, 1644, 25, 43, "Output",ExpressionUUID->"08695acf-28c7-4a01-8c5e-60161d5e00da",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[9842, 189, 706, 16, 84, "Input",ExpressionUUID->"6716df1d-4b22-4a86-9944-5c18d2edb217",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[10551, 207, 478, 8, 43, "Output",ExpressionUUID->"738d8b11-9f81-4f26-9860-47db60fcf9d8",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Closed]],
Cell[CellGroupData[{
Cell[11066, 220, 251, 4, 55, "Section",ExpressionUUID->"286d12ba-5f70-476e-8cc9-08936f67af81",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[11320, 226, 1666, 45, 189, "Input",ExpressionUUID->"df469690-fd43-4cf9-82f2-0eae3c8ab7bf",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[12989, 273, 2112, 34, 24, "Print",ExpressionUUID->"d27bafaa-ecd4-4b67-a942-ff418236a7a9",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[15104, 309, 2124, 34, 24, "Print",ExpressionUUID->"ae6717e7-431c-4d08-a99b-1653750283f6",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[17231, 345, 2108, 32, 41, "Output",ExpressionUUID->"ba23a0f9-3afc-4e9c-95bc-db3d85fef53a",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[19342, 379, 268, 4, 41, "Input",ExpressionUUID->"7c95144a-d1c4-4cea-a7e9-4f23203c82b9",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[19613, 385, 310, 5, 41, "Input",ExpressionUUID->"b5f4f6f0-532c-4a3b-bc1a-2191344e109f",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Closed]],
Cell[CellGroupData[{
Cell[19960, 395, 268, 5, 55, "Section",ExpressionUUID->"eb7bef00-acf4-4309-a17d-80be6bc2d077",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[20231, 402, 4949, 111, 777, "Input",ExpressionUUID->"1ce3a3c4-fc95-412c-b958-9e258b811288",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[25183, 515, 4231, 126, 609, "Output",ExpressionUUID->"60a84eea-7a60-4ca7-a651-63c7eb028dd9",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[29417, 643, 721, 16, 63, "Input",ExpressionUUID->"fc4281b5-f345-48b9-be3f-2fcfc8c14491",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}]
}, Closed]],
Cell[CellGroupData[{
Cell[30175, 664, 362, 6, 55, "Section",ExpressionUUID->"0f34ba0b-2159-4ea1-83ed-4609b2510407",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[30540, 672, 1659, 41, 126, "Input",ExpressionUUID->"e92b2ab6-f2ae-4652-9203-e6652e2b68de",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[32202, 715, 1056, 26, 84, "Input",ExpressionUUID->"ec70cdc0-b883-4cf0-aec0-b2ae2e9e9776",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Closed]],
Cell[CellGroupData[{
Cell[33295, 746, 227, 4, 55, "Section",ExpressionUUID->"6535b2d1-596a-43d1-9574-62453d4995e2",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[33525, 752, 963, 25, 86, "Input",ExpressionUUID->"0044d1b1-48fc-4a71-ae52-461382873d2a",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[34491, 779, 797, 21, 44, "Output",ExpressionUUID->"0f674fd7-a83c-4385-b5e5-4897e367b4ea",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[35291, 802, 529, 12, 41, "Input",ExpressionUUID->"ff9ea4f5-dace-42ec-8600-12584a08d604",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[35823, 816, 1236, 34, 113, "Output",ExpressionUUID->"ec071082-6984-45f7-bd43-29a0c1d3f712",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[37062, 852, 805, 17, 147, "Input",ExpressionUUID->"7bbdfd4a-ed55-4b73-bef3-722b77a8de3b",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[37870, 871, 952, 28, 69, "Output",ExpressionUUID->"ad43b91b-3abc-439e-a33a-2c0e70f012a6",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[38825, 901, 844, 17, 105, "Input",ExpressionUUID->"b84bead5-8248-4371-915d-3baa05be8d0c",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[39672, 920, 1694, 47, 110, "Output",ExpressionUUID->"54d4e63d-fb38-4ad7-b088-cc6c22bdf94a",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[41369, 969, 733, 15, 105, "Input",ExpressionUUID->"6b37282c-5fdb-4009-863a-1f9567081a52",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[42105, 986, 1665, 46, 120, "Output",ExpressionUUID->"d017b635-6a22-4a2a-9093-1560d0552a71",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[43773, 1034, 440, 10, 41, "Input",ExpressionUUID->"6b81472f-22ec-48b6-8ccb-2cfa7bdf7764",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[44216, 1046, 820, 23, 101, "Output",ExpressionUUID->"7308d347-37b0-485f-bee5-bc974ea26308",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[45039, 1071, 439, 10, 41, "Input",ExpressionUUID->"5deff0af-3dec-43d4-b631-7f38a7bd8cf9",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[45481, 1083, 817, 23, 101, "Output",ExpressionUUID->"24c08029-ff84-4c3c-8dcc-99c1c9df60f0",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}]
}, Closed]],
Cell[CellGroupData[{
Cell[46335, 1111, 237, 4, 55, "Section",ExpressionUUID->"85b05021-3453-48b8-9781-669b7f9aeb53",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[46575, 1117, 5722, 130, 714, "Input",ExpressionUUID->"5901a2fd-4196-401f-8744-35bbeb7949bf",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[52300, 1249, 1035, 22, 65, "Input",ExpressionUUID->"8f141b5e-f4a3-4611-9d08-eadbbfbe99ca",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[53338, 1273, 382, 7, 41, "Output",ExpressionUUID->"b67cbbed-a899-4634-a6ee-0454f97b35a7",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[53723, 1282, 790, 18, 84, "Input",ExpressionUUID->"3c55a2ec-7ae9-4247-8496-b2cc336e0fec",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[54516, 1302, 578, 11, 45, "Output",ExpressionUUID->"11e47ed0-cd13-45d4-a838-5dc8c2b21911",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[55097, 1315, 503, 7, 41, "Output",ExpressionUUID->"cfff5790-b3f0-42cd-a588-6e0d388d027b",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[55603, 1324, 1850, 49, 110, "Output",ExpressionUUID->"d323223a-d2ab-4cdc-ab07-9ff603d2ff44",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[57456, 1375, 789, 18, 84, "Input",ExpressionUUID->"f18838d4-6439-49d2-a294-646f67134c8c",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[58248, 1395, 708, 14, 45, "Output",ExpressionUUID->"ba1a3389-d414-4378-85e6-d79fa32c4ce2",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[58959, 1411, 612, 9, 41, "Output",ExpressionUUID->"6677525a-2a33-498b-aed7-88080e835e21",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[59574, 1422, 19957, 559, 392, "Output",ExpressionUUID->"29158a66-9ade-4202-925a-f8cde2bab5e1",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[79534, 1983, 790, 18, 84, "Input",ExpressionUUID->"668406e5-9689-4e09-b261-a39e9317fab8",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[80327, 2003, 570, 10, 45, "Output",ExpressionUUID->"ecd4f65c-59b1-435f-936a-1eb9b1eef9be",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[80900, 2015, 517, 7, 41, "Output",ExpressionUUID->"627fd60e-53f8-449e-a6a1-57be3da99a1e",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[81420, 2024, 98389, 2425, 488, "Output",ExpressionUUID->"f5835cbb-646c-4fec-b75b-ec3ac3221b54",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[179812, 4451, 787, 18, 84, "Input",ExpressionUUID->"66789270-7672-4787-b7c9-058c990a0f5b",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[180602, 4471, 559, 10, 45, "Output",ExpressionUUID->"75d4ebe8-bfe2-4e4f-a13f-9595bcb4ae51",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[181164, 4483, 521, 7, 41, "Output",ExpressionUUID->"a94f4ff9-b477-413e-bb6c-6a7ea64b5eed",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[181688, 4492, 9536, 263, 200, "Output",ExpressionUUID->"d1a77fab-d6ed-41a4-9f74-eb93f866527f",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[191227, 4757, 788, 18, 84, "Input",ExpressionUUID->"7c6817ef-95a1-4e7f-b0fd-7a6831fbfd4e",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[192018, 4777, 522, 9, 41, "Output",ExpressionUUID->"c4c1fdfd-a14f-43b7-9315-50fae2b41bd0",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[192543, 4788, 519, 7, 41, "Output",ExpressionUUID->"e9921878-20ec-4488-ae77-09f88a089066",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[193065, 4797, 3172, 87, 82, "Output",ExpressionUUID->"e4e1bcd9-2aa6-4d26-917b-86900a8c6a98",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[196240, 4886, 717, 17, 84, "Input",ExpressionUUID->"293f9981-ed73-449b-ab25-79cf82c7429c",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[196960, 4905, 352, 7, 41, "Output",ExpressionUUID->"a8bbd93f-613b-4d2c-9b35-ce1670da2abc",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[197315, 4914, 359, 5, 41, "Output",ExpressionUUID->"c9257902-84cd-4993-b22b-baace5513fb9",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[197677, 4921, 23961, 669, 366, "Output",ExpressionUUID->"101961a0-8d56-44c4-87ac-04ff00249815",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[221641, 5592, 766, 18, 84, "Input",ExpressionUUID->"c5f30601-2b4b-4095-92b8-40ef855d6ed2",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[222410, 5612, 512, 10, 45, "Output",ExpressionUUID->"e94be075-c2dc-481a-b8a7-c1fe4fef2ccf",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[222925, 5624, 477, 7, 41, "Output",ExpressionUUID->"3b2945a0-625b-4d3e-8047-d6f91b7fcc35",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[223405, 5633, 9117, 249, 184, "Output",ExpressionUUID->"f419e4d2-7797-4587-94e1-72ca3e61f351",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[232525, 5884, 834, 19, 84, "Input",ExpressionUUID->"b65b647c-2f21-41e1-b60e-e150e680ae79",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[233362, 5905, 607, 11, 45, "Output",ExpressionUUID->"819a118f-204c-4f7a-b17e-3291a8819b38",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[233972, 5918, 550, 8, 41, "Output",ExpressionUUID->"20a54e25-f2a0-4761-b247-2fe4512422a9",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[234525, 5928, 141234, 3394, 606, "Output",ExpressionUUID->"edeaed60-c3b8-4d3f-b6e7-0cf5101a6113",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[375762, 9324, 695, 17, 84, "Input",ExpressionUUID->"2933b141-e35b-4dd1-86b9-a6cf0793efa1",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[376460, 9343, 375, 7, 45, "Output",ExpressionUUID->"6db41e06-6858-4b45-a3c1-ca42d7b58b86",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[376838, 9352, 332, 4, 41, "Output",ExpressionUUID->"9e3869d8-4dc1-4e26-9dfe-dcb3fea7ca27",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[377173, 9358, 146843, 3437, 454, "Output",ExpressionUUID->"4b79a654-ac19-4f9e-8028-6fb9e209a7b2",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}]
}, Closed]],
Cell[CellGroupData[{
Cell[524053, 12800, 246, 4, 55, "Section",ExpressionUUID->"23d03466-a521-4038-8799-c582d3bc64b0",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[524302, 12806, 1367, 34, 105, "Input",ExpressionUUID->"ed6157c7-f92e-4db3-8023-b33a091b3cb2",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[525672, 12842, 8511, 240, 236, "Output",ExpressionUUID->"f9cc56ca-2949-4971-b101-23d74960438f",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[534186, 13084, 1382, 34, 105, "Input",ExpressionUUID->"ca1751d1-e79e-4967-bd0c-8e45a49657f0",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[535571, 13120, 8141, 226, 220, "Output",ExpressionUUID->"ae903bc5-58d7-4081-bb87-5f9f02dafe6f",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[543715, 13348, 1310, 32, 124, "Input",ExpressionUUID->"1d0e8ce2-ff10-493e-94d8-34e16904fdcf",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[545028, 13382, 1028, 32, 79, "Output",ExpressionUUID->"1c21ea4a-8ccc-4db7-9e50-311806651444",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[546059, 13416, 721, 20, 44, "Input",ExpressionUUID->"7cdb889f-fdfe-44f2-8290-b53c2f43e85f",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[546783, 13438, 1005, 31, 79, "Output",ExpressionUUID->"25db39a1-6690-4400-9495-58e8f7829579",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[547791, 13471, 1144, 28, 107, "Input",ExpressionUUID->"2c221b4b-33bc-4143-8026-c720b146eb50",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[548938, 13501, 982, 28, 69, "Output",ExpressionUUID->"1467cac7-0cde-4b20-bfd0-290f04981ed8",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[549923, 13531, 1199, 29, 107, "Input",ExpressionUUID->"a0600688-7829-4132-b8c0-ad31526c66f8",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[551125, 13562, 1276, 38, 72, "Output",ExpressionUUID->"2e1b5389-67aa-4f7d-85c8-6aae4f076c8d",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[552404, 13602, 508, 13, 63, "Input",ExpressionUUID->"6a71b044-d553-4670-a73b-3aab6ec9f801",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[552915, 13617, 1987, 61, 74, "Output",ExpressionUUID->"8b4921d5-0bf7-40aa-8596-0c82f72955e6",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[554905, 13680, 1736, 51, 76, "Output",ExpressionUUID->"1aa91ac0-d99e-42bd-8303-d501339fbe78",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[556644, 13733, 814, 20, 105, "Input",ExpressionUUID->"34c128c6-4227-44f6-95c8-4d9372438fc9",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[557461, 13755, 2898, 88, 76, "Output",ExpressionUUID->"8ab6bded-5be6-47c1-8cc1-20de5ebe4952",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[560362, 13845, 2420, 63, 128, "Input",ExpressionUUID->"2b0e568e-c96e-4488-b4c6-59c358d77d51",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[562785, 13910, 2940, 88, 76, "Output",ExpressionUUID->"94dfcdcf-0b44-4d67-a43c-64d7a17b90d0",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[565728, 14000, 1453, 43, 76, "Output",ExpressionUUID->"74c0517d-6101-4629-a7fe-92e760f129b7",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[567184, 14045, 308, 5, 41, "Output",ExpressionUUID->"f8fa3c7b-7598-4e19-9c5c-2ec964a9484a",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}]
}, Closed]],
Cell[CellGroupData[{
Cell[567529, 14055, 886, 15, 169, "Section",ExpressionUUID->"96d95e50-5754-4a6f-9c85-5bd8e93829f9",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[568418, 14072, 934, 17, 84, "Input",ExpressionUUID->"b5277276-07e7-4866-a83c-241630b2f2cc",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[569355, 14091, 466, 10, 41, "Output",ExpressionUUID->"750d8921-f518-483e-8d93-d545643aa356",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[569824, 14103, 1223, 27, 168, "Input",ExpressionUUID->"2a15dec7-f43d-4ae9-a432-ab7c46990e49",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[571050, 14132, 2678, 77, 122, "Output",ExpressionUUID->"76c9d9ae-e6b1-4fd1-b630-74e58dec239e",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[573731, 14211, 465, 7, 41, "Input",ExpressionUUID->"329f0ccb-d24e-4b58-8b6c-47c76792b86c",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[574199, 14220, 1294, 37, 79, "Output",ExpressionUUID->"3cff5fa8-e37d-4e86-bc71-f639e30153f2",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[575496, 14259, 1139, 26, 105, "Input",ExpressionUUID->"3f171bb2-bb45-49b2-8d37-4f783b954a68",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[576638, 14287, 1045, 25, 60, "Output",ExpressionUUID->"e1a4042e-6f1d-444f-9f93-187c9cafbe32",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[577686, 14314, 778, 18, 84, "Input",ExpressionUUID->"f13fd4dd-c668-4301-b99f-2e0dbe941000",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[578467, 14334, 789, 20, 60, "Output",ExpressionUUID->"9cd74d04-34d1-4322-8271-baf77f24c74a",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[579259, 14356, 749, 15, 84, "Input",ExpressionUUID->"8690d69b-c016-42f2-8f04-2bd11592c9b8",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[580011, 14373, 711, 20, 41, "Output",ExpressionUUID->"eacf472e-1c30-468d-9f3a-a4577f3b73b8",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[580725, 14395, 805, 18, 84, "Input",ExpressionUUID->"87844a74-859a-4d8b-8d13-a78be05acea3",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[581533, 14415, 594, 13, 60, "Output",ExpressionUUID->"95a26c7a-4701-4317-916c-0fa8b59dd122",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[582130, 14430, 1082, 24, 84, "Input",ExpressionUUID->"f49dca87-9af9-468c-9215-ee0955505c8c",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[583215, 14456, 646, 18, 41, "Output",ExpressionUUID->"4e7861e3-f8f5-4602-a6bc-475c0721447b",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[583864, 14476, 1528, 38, 189, "Input",ExpressionUUID->"2faca6b4-4aeb-46f4-8ed7-93d949b1130c",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[585395, 14516, 480, 8, 41, "Output",ExpressionUUID->"513afad4-18a8-4e66-8381-42705c73bfe2",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[585878, 14526, 501, 9, 41, "Output",ExpressionUUID->"dfe854e4-f98f-4a41-a839-2b96aefb9205",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[586382, 14537, 818, 22, 41, "Output",ExpressionUUID->"d5e47e13-9195-46d6-991c-67e83b466b98",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[587203, 14561, 1071, 33, 41, "Output",ExpressionUUID->"9f4c4f7b-2192-408e-bf6b-5a0e82b0f455",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[588277, 14596, 1183, 36, 41, "Output",ExpressionUUID->"760c6ed9-8e1f-4c4c-bdf3-467ee3165a79",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[589463, 14634, 1506, 38, 84, "Input",ExpressionUUID->"d1fe0091-b4d8-4ac3-842c-ca25b25f13e5",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[590972, 14674, 845, 22, 41, "Output",ExpressionUUID->"4941b7fb-187e-4f9f-89f2-637060bdaf8b",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[591820, 14698, 505, 10, 84, "Input",ExpressionUUID->"670bbb9e-e64c-4fce-ad6e-24ef9f85bdf5",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[592328, 14710, 507, 14, 41, "Output",ExpressionUUID->"337273ab-992a-43fb-947e-bf7892aa8ba6",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[592838, 14726, 1018, 24, 63, "Input",ExpressionUUID->"d949ba73-0e21-450b-8a54-de627415ec5f",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[593859, 14752, 342756, 5642, 303, 256601, 4229, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"f796306a-c777-4b05-8421-0c97876f252e",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[936618, 20396, 981, 24, 41, "Input",ExpressionUUID->"3de07b4e-7348-4460-a5d5-f70b9a4f3cb5",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[937602, 20422, 140047, 2293, 331, "Output",ExpressionUUID->"f2cef614-db04-4c93-a04b-422ac4fe8a43",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1077652, 22717, 888, 19, 84, "Input",ExpressionUUID->"8f04d9c1-5cee-4e2e-8e88-898412cd9d0f",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1078543, 22738, 753, 20, 41, "Output",ExpressionUUID->"e340c595-9cfc-4379-9c9b-113b1a5c83c4",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1079299, 22760, 1316, 30, 63, "Input",ExpressionUUID->"088e184c-b285-412e-bf12-823e47103a92",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1080618, 22792, 2687, 56, 330, "Output",ExpressionUUID->"2395c11f-301c-4a83-892a-30f73512dff0",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1083308, 22850, 1042, 24, 84, "Input",ExpressionUUID->"6e4387e1-b0fd-454a-992c-91271283fa06",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1084353, 22876, 516, 11, 63, "Input",ExpressionUUID->"9e987c1b-74ec-44eb-b28a-bd8c9063bb02",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1084872, 22889, 1390, 41, 41, "Output",ExpressionUUID->"762a7ac5-1d39-48f0-bf3d-2f7419aaa557",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1086265, 22932, 819, 19, 41, "Input",ExpressionUUID->"ed3cf84e-e8fb-4a38-984a-eaf8facf2d5a",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1087087, 22953, 2302, 48, 330, "Output",ExpressionUUID->"e2f39686-ddc9-431f-b346-147edd9b2d43",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1089392, 23003, 639, 14, 63, "Input",ExpressionUUID->"daf3bcaf-b8d3-4db8-bf0a-b96f110f2028",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1090034, 23019, 1020, 29, 69, "Output",ExpressionUUID->"3decb522-5f5f-445b-9c85-596662fc103a",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1091057, 23050, 999, 28, 69, "Output",ExpressionUUID->"8dd42c8e-a582-4723-acaa-bc1b26fa4f7a",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1092059, 23080, 1052, 21, 105, "Input",ExpressionUUID->"69f22c0b-3379-4a7e-a284-9734076f35e8",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1093114, 23103, 1962, 56, 69, "Output",ExpressionUUID->"718bdeb3-7f35-4dd6-94b3-a03f44a56cb2",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1095079, 23161, 1431, 34, 105, "Input",ExpressionUUID->"4b4a2024-507d-47d9-87ce-6bf7b111f70c",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1096513, 23197, 1816, 52, 68, "Output",ExpressionUUID->"5204be24-eada-40e8-8fe0-5462ec093abd",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1098332, 23251, 849, 18, 105, "Input",ExpressionUUID->"55caf2a4-fdbc-49b5-94ab-613fa5652a1e",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1099184, 23271, 1547, 46, 69, "Output",ExpressionUUID->"9279a3f9-6781-4147-82dc-93c1440b3ff0",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1100734, 23319, 1207, 28, 105, "Input",ExpressionUUID->"c54b20cd-6100-42bd-a249-fec422b8d62f",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}],
Cell[1101944, 23349, 825, 23, 68, "Output",ExpressionUUID->"a8a178bf-a8c3-43ed-bd80-d86ffe4a8002",
 CellGroupingRules->{"GroupTogetherGrouping", 10007.}]
}, Closed]],
Cell[CellGroupData[{
Cell[1102806, 23377, 323, 7, 55, "Section",ExpressionUUID->"3c6ed1c3-4368-4f53-a968-1b3fd39d048c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1103132, 23386, 797, 20, 114, "Input",ExpressionUUID->"9b93e1c3-a951-4039-965e-a3ba682010fa",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1103932, 23408, 1222, 33, 72, "Output",ExpressionUUID->"84c5a487-bd6b-4b65-8a5a-db15be342553",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1105157, 23443, 826, 21, 114, "Input",ExpressionUUID->"67ef653f-7e4c-4be2-b8db-2dc8f1342cc2",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1105986, 23466, 1261, 34, 72, "Output",ExpressionUUID->"0178fbc1-ce98-42a2-90a9-e3b8fbe6c657",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1107250, 23502, 946, 23, 114, "Input",ExpressionUUID->"cd537de1-596f-4536-80c2-a9abce571002",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1108199, 23527, 1038, 26, 72, "Output",ExpressionUUID->"9c109569-80cf-47a6-bb43-6be0f670291a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1109240, 23555, 952, 23, 114, "Input",ExpressionUUID->"cb130e76-1bc2-4e73-9cae-7871bf8eb3bf",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1110195, 23580, 1067, 27, 72, "Output",ExpressionUUID->"87d94a53-e8a8-4125-85c3-b2277b076281",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1111265, 23609, 2213, 59, 126, "Input",ExpressionUUID->"2a288edc-56f9-4e67-9467-ec98cac10282",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1113481, 23670, 549, 11, 45, "Output",ExpressionUUID->"214f2ee3-ac81-417d-905c-3b73395f7820",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1114033, 23683, 547, 11, 45, "Output",ExpressionUUID->"c879d141-56c3-4472-ae88-e0226accc012",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1114583, 23696, 547, 11, 45, "Output",ExpressionUUID->"90f1a21d-0fc9-4f6d-87d7-507e4b1fc8c2",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1115133, 23709, 550, 11, 45, "Output",ExpressionUUID->"6fcea4b5-a479-49e3-9b80-6aaa2a6d517f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1115686, 23722, 397, 10, 41, "Input",ExpressionUUID->"1737a436-3fe0-415f-b716-810232b7ff4f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1116086, 23734, 300, 6, 41, "Output",ExpressionUUID->"b8a12945-e28c-45a8-b2f3-9350190a6f3c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1116389, 23742, 6722, 193, 504, "Input",ExpressionUUID->"5684b042-bb35-4b91-8a2f-011d44b30efc",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1123114, 23937, 335, 6, 41, "Output",ExpressionUUID->"22abb51a-1de1-479e-ae3d-b7f73cfd721d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1123452, 23945, 335, 6, 41, "Output",ExpressionUUID->"577e3cf8-bfa8-46e6-a94a-947131812c7c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1123790, 23953, 337, 6, 41, "Output",ExpressionUUID->"7ff262cf-e136-4425-aafc-bfb83ff8fb13",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1124130, 23961, 335, 6, 41, "Output",ExpressionUUID->"5b1e0886-847d-43db-b687-73e46109ebc3",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1124468, 23969, 335, 6, 41, "Output",ExpressionUUID->"aecbe174-dd45-42e0-b5f5-845a8061f08c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1124806, 23977, 335, 6, 41, "Output",ExpressionUUID->"0464574e-334f-4205-9af8-47514447098b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1125144, 23985, 337, 6, 41, "Output",ExpressionUUID->"867209a1-7232-4e51-b0f3-eaa9e05de325",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1125484, 23993, 335, 6, 41, "Output",ExpressionUUID->"35b955c9-bb5c-405b-9f8f-c75e664573d4",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1125822, 24001, 1627, 46, 113, "Output",ExpressionUUID->"999d5234-8e0f-450f-ad79-ee10ce55e487",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1127452, 24049, 409, 10, 52, "Output",ExpressionUUID->"a66ef6d8-d63f-4f4f-b671-e36d5ecb31b1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1127864, 24061, 1675, 48, 123, "Output",ExpressionUUID->"b9e30171-c6a5-41be-af4c-bb02f322727b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1129542, 24111, 409, 10, 41, "Output",ExpressionUUID->"08976449-26d2-4e07-ae66-65cf2dc16fa2",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Closed]],
Cell[CellGroupData[{
Cell[1129988, 24126, 306, 5, 55, "Section",ExpressionUUID->"31752d8e-85ce-41fb-a6b9-8a3955e2c99e",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1130297, 24133, 13708, 328, 554, "Input",ExpressionUUID->"2f052908-6f87-45b7-b08e-d7f969ac2ff2",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1144008, 24463, 7414, 209, 406, "Output",ExpressionUUID->"d8ecf2cd-edc9-4f89-9610-ebfdf470ef0d",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1151425, 24674, 9525, 251, 771, "Input",ExpressionUUID->"961ac902-1190-4ab7-8249-4f3ca053e3bc",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1160953, 24927, 13367, 352, 354, "Output",ExpressionUUID->"5c1ecbf1-433e-4717-9428-fe00155d559e",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1174323, 25281, 5651, 144, 336, "Input",ExpressionUUID->"e665ad34-1230-43a9-92c5-71d6a001317e",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1179977, 25427, 12585, 317, 202, "Output",ExpressionUUID->"4f772f55-0140-4b1b-a587-ec14bb1392fc",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1192565, 25746, 553, 11, 105, "Input",ExpressionUUID->"1de58cc2-3057-437e-86c1-2b7674eb4cb9",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1193121, 25759, 4191, 114, 82, "Output",ExpressionUUID->"12f8aa8c-6f14-4f97-9499-58ba1327e4b7",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Closed]]
}
]
*)

